

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri May 06 22:59:19 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    81                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           	psect	idataBANK0
    84  0164A4                     __pidataBANK0:
    85                           	opt stack 0
    86                           
    87                           ;initializer for _delay_quartz_frequency_value
    88  0164A4  10                 	db	16
    89                           
    90                           	psect	mediumconst
    91  00FDC8                     __pmediumconst:
    92                           	opt stack 0
    93  00FDC8  00                 	db	0
    94  00FDC9                     __npowers_:
    95                           	opt stack 0
    96  00FDC9  0000               	dw	0
    97  00FDCB  3F80               	dw	16256
    98  00FDCD  CCCD               	dw	52429
    99  00FDCF  3DCC               	dw	15820
   100  00FDD1  D70A               	dw	55050
   101  00FDD3  3C23               	dw	15395
   102  00FDD5  126F               	dw	4719
   103  00FDD7  3A83               	dw	14979
   104  00FDD9  B717               	dw	46871
   105  00FDDB  38D1               	dw	14545
   106  00FDDD  C5AC               	dw	50604
   107  00FDDF  3727               	dw	14119
   108  00FDE1  37BD               	dw	14269
   109  00FDE3  3586               	dw	13702
   110  00FDE5  BF95               	dw	49045
   111  00FDE7  33D6               	dw	13270
   112  00FDE9  CC77               	dw	52343
   113  00FDEB  322B               	dw	12843
   114  00FDED  705F               	dw	28767
   115  00FDEF  3089               	dw	12425
   116  00FDF1  E6FF               	dw	59135
   117  00FDF3  2EDB               	dw	11995
   118  00FDF5  E508               	dw	58632
   119  00FDF7  1E3C               	dw	7740
   120  00FDF9  4260               	dw	16992
   121  00FDFB  0DA2               	dw	3490
   122  00FDFD                     __end_of__npowers_:
   123                           	opt stack 0
   124  00FDFD                     __powers_:
   125                           	opt stack 0
   126  00FDFD  0000               	dw	0
   127  00FDFF  3F80               	dw	16256
   128  00FE01  0000               	dw	0
   129  00FE03  4120               	dw	16672
   130  00FE05  0000               	dw	0
   131  00FE07  42C8               	dw	17096
   132  00FE09  0000               	dw	0
   133  00FE0B  447A               	dw	17530
   134  00FE0D  4000               	dw	16384
   135  00FE0F  461C               	dw	17948
   136  00FE11  5000               	dw	20480
   137  00FE13  47C3               	dw	18371
   138  00FE15  2400               	dw	9216
   139  00FE17  4974               	dw	18804
   140  00FE19  9680               	dw	38528
   141  00FE1B  4B18               	dw	19224
   142  00FE1D  BC20               	dw	48160
   143  00FE1F  4CBE               	dw	19646
   144  00FE21  6B28               	dw	27432
   145  00FE23  4E6E               	dw	20078
   146  00FE25  02F9               	dw	761
   147  00FE27  5015               	dw	20501
   148  00FE29  78EC               	dw	30956
   149  00FE2B  60AD               	dw	24749
   150  00FE2D  F2CA               	dw	62154
   151  00FE2F  7149               	dw	29001
   152  00FE31                     __end_of__powers_:
   153                           	opt stack 0
   154  00FE31                     _dpowers:
   155                           	opt stack 0
   156  00FE31  0001               	dw	1
   157  00FE33  0000               	dw	0
   158  00FE35  000A               	dw	10
   159  00FE37  0000               	dw	0
   160  00FE39  0064               	dw	100
   161  00FE3B  0000               	dw	0
   162  00FE3D  03E8               	dw	1000
   163  00FE3F  0000               	dw	0
   164  00FE41  2710               	dw	10000
   165  00FE43  0000               	dw	0
   166  00FE45  86A0               	dw	34464
   167  00FE47  0001               	dw	1
   168  00FE49  4240               	dw	16960
   169  00FE4B  000F               	dw	15
   170  00FE4D  9680               	dw	38528
   171  00FE4F  0098               	dw	152
   172  00FE51  E100               	dw	57600
   173  00FE53  05F5               	dw	1525
   174  00FE55  CA00               	dw	51712
   175  00FE57  3B9A               	dw	15258
   176  00FE59                     __end_of_dpowers:
   177                           	opt stack 0
   178  0000                     _RXB1CON	set	3920
   179  0000                     _RXB1CONbits	set	3920
   180  0000                     _RXB1D0	set	3926
   181  0000                     _RXB1D1	set	3927
   182  0000                     _RXB1D2	set	3928
   183  0000                     _RXB1D3	set	3929
   184  0000                     _RXB1D4	set	3930
   185  0000                     _RXB1D5	set	3931
   186  0000                     _RXB1D6	set	3932
   187  0000                     _RXB1D7	set	3933
   188  0000                     _RXB1DLC	set	3925
   189  0000                     _RXB1DLCbits	set	3925
   190  0000                     _RXB1EIDH	set	3923
   191  0000                     _RXB1EIDL	set	3924
   192  0000                     _RXB1SIDH	set	3921
   193  0000                     _RXB1SIDL	set	3922
   194  0000                     _RXB1SIDLbits	set	3922
   195  0000                     _RXF0EIDH	set	3842
   196  0000                     _RXF0EIDL	set	3843
   197  0000                     _RXF0SIDH	set	3840
   198  0000                     _RXF0SIDL	set	3841
   199  0000                     _RXF0SIDLbits	set	3841
   200  0000                     _RXF1EIDH	set	3846
   201  0000                     _RXF1EIDL	set	3847
   202  0000                     _RXF1SIDH	set	3844
   203  0000                     _RXF1SIDL	set	3845
   204  0000                     _RXF1SIDLbits	set	3845
   205  0000                     _RXF2EIDH	set	3850
   206  0000                     _RXF2EIDL	set	3851
   207  0000                     _RXF2SIDH	set	3848
   208  0000                     _RXF2SIDL	set	3849
   209  0000                     _RXF2SIDLbits	set	3849
   210  0000                     _RXF3EIDH	set	3854
   211  0000                     _RXF3EIDL	set	3855
   212  0000                     _RXF3SIDH	set	3852
   213  0000                     _RXF3SIDL	set	3853
   214  0000                     _RXF3SIDLbits	set	3853
   215  0000                     _RXF4EIDH	set	3858
   216  0000                     _RXF4EIDL	set	3859
   217  0000                     _RXF4SIDH	set	3856
   218  0000                     _RXF4SIDL	set	3857
   219  0000                     _RXF4SIDLbits	set	3857
   220  0000                     _RXF5EIDH	set	3862
   221  0000                     _RXF5EIDL	set	3863
   222  0000                     _RXF5SIDH	set	3860
   223  0000                     _RXF5SIDL	set	3861
   224  0000                     _RXF5SIDLbits	set	3861
   225  0000                     _RXM0EIDH	set	3866
   226  0000                     _RXM0EIDL	set	3867
   227  0000                     _RXM0SIDH	set	3864
   228  0000                     _RXM0SIDL	set	3865
   229  0000                     _RXM0SIDLbits	set	3865
   230  0000                     _RXM1EIDH	set	3870
   231  0000                     _RXM1EIDL	set	3871
   232  0000                     _RXM1SIDH	set	3868
   233  0000                     _RXM1SIDL	set	3869
   234  0000                     _RXM1SIDLbits	set	3869
   235  0000                     _TXB0CONbits	set	3904
   236  0000                     _TXB0D0	set	3910
   237  0000                     _TXB0D1	set	3911
   238  0000                     _TXB0D2	set	3912
   239  0000                     _TXB0D3	set	3913
   240  0000                     _TXB0D4	set	3914
   241  0000                     _TXB0D5	set	3915
   242  0000                     _TXB0D6	set	3916
   243  0000                     _TXB0D7	set	3917
   244  0000                     _TXB0DLC	set	3909
   245  0000                     _TXB0DLCbits	set	3909
   246  0000                     _TXB0EIDH	set	3907
   247  0000                     _TXB0EIDL	set	3908
   248  0000                     _TXB0SIDH	set	3905
   249  0000                     _TXB0SIDL	set	3906
   250  0000                     _TXB0SIDLbits	set	3906
   251  0000                     _TXB1CONbits	set	3888
   252  0000                     _TXB1D0	set	3894
   253  0000                     _TXB1D1	set	3895
   254  0000                     _TXB1D2	set	3896
   255  0000                     _TXB1D3	set	3897
   256  0000                     _TXB1D4	set	3898
   257  0000                     _TXB1D5	set	3899
   258  0000                     _TXB1D6	set	3900
   259  0000                     _TXB1D7	set	3901
   260  0000                     _TXB1DLC	set	3893
   261  0000                     _TXB1DLCbits	set	3893
   262  0000                     _TXB1EIDH	set	3891
   263  0000                     _TXB1EIDL	set	3892
   264  0000                     _TXB1SIDH	set	3889
   265  0000                     _TXB1SIDL	set	3890
   266  0000                     _TXB1SIDLbits	set	3890
   267  0000                     _TXB2CONbits	set	3872
   268  0000                     _TXB2D0	set	3878
   269  0000                     _TXB2D1	set	3879
   270  0000                     _TXB2D2	set	3880
   271  0000                     _TXB2D3	set	3881
   272  0000                     _TXB2D4	set	3882
   273  0000                     _TXB2D5	set	3883
   274  0000                     _TXB2D6	set	3884
   275  0000                     _TXB2D7	set	3885
   276  0000                     _TXB2DLC	set	3877
   277  0000                     _TXB2DLCbits	set	3877
   278  0000                     _TXB2EIDH	set	3875
   279  0000                     _TXB2EIDL	set	3876
   280  0000                     _TXB2SIDH	set	3873
   281  0000                     _TXB2SIDL	set	3874
   282  0000                     _TXB2SIDLbits	set	3874
   283  0000                     _ADCON0bits	set	4034
   284  0000                     _ADCON1	set	4033
   285  0000                     _ADCON2bits	set	4032
   286  0000                     _ADRESH	set	4036
   287  0000                     _BRGCON1	set	3952
   288  0000                     _BRGCON2	set	3953
   289  0000                     _BRGCON2bits	set	3953
   290  0000                     _BRGCON3	set	3954
   291  0000                     _BRGCON3bits	set	3954
   292  0000                     _CANCON	set	3951
   293  0000                     _CANCONbits	set	3951
   294  0000                     _CANSTAT	set	3950
   295  0000                     _COMSTATbits	set	3956
   296  0000                     _INTCONbits	set	4082
   297  0000                     _IPR2bits	set	4002
   298  0000                     _IPR3bits	set	4005
   299  0000                     _LATA	set	3977
   300  0000                     _LATB	set	3978
   301  0000                     _LATC	set	3979
   302  0000                     _LATCbits	set	3979
   303  0000                     _LATD	set	3980
   304  0000                     _LATDbits	set	3980
   305  0000                     _LATE	set	3981
   306  0000                     _LATEbits	set	3981
   307  0000                     _PIE2bits	set	4000
   308  0000                     _PIE3bits	set	4003
   309  0000                     _PIR2bits	set	4001
   310  0000                     _PIR3bits	set	4004
   311  0000                     _PORTAbits	set	3968
   312  0000                     _PORTBbits	set	3969
   313  0000                     _PORTDbits	set	3971
   314  0000                     _RCONbits	set	4048
   315  0000                     _RXB0CON	set	3936
   316  0000                     _RXB0CONbits	set	3936
   317  0000                     _RXB0D0	set	3942
   318  0000                     _RXB0D1	set	3943
   319  0000                     _RXB0D2	set	3944
   320  0000                     _RXB0D3	set	3945
   321  0000                     _RXB0D4	set	3946
   322  0000                     _RXB0D5	set	3947
   323  0000                     _RXB0D6	set	3948
   324  0000                     _RXB0D7	set	3949
   325  0000                     _RXB0DLC	set	3941
   326  0000                     _RXB0DLCbits	set	3941
   327  0000                     _RXB0EIDH	set	3939
   328  0000                     _RXB0EIDL	set	3940
   329  0000                     _RXB0SIDH	set	3937
   330  0000                     _RXB0SIDL	set	3938
   331  0000                     _RXB0SIDLbits	set	3938
   332  0000                     _RXERRCNT	set	3957
   333  0000                     _T3CON	set	4017
   334  0000                     _TMR3H	set	4019
   335  0000                     _TMR3L	set	4018
   336  0000                     _TRISA	set	3986
   337  0000                     _TRISB	set	3987
   338  0000                     _TRISC	set	3988
   339  0000                     _TRISD	set	3989
   340  0000                     _TRISE	set	3990
   341  0000                     _TXERRCNT	set	3958
   342  00FE59                     STR_31:
   343  00FE59  20                 	db	32
   344  00FE5A  20                 	db	32
   345  00FE5B  20                 	db	32
   346  00FE5C  20                 	db	32
   347  00FE5D  20                 	db	32
   348  00FE5E  43                 	db	67	;'C'
   349  00FE5F  4F                 	db	79	;'O'
   350  00FE60  4D                 	db	77	;'M'
   351  00FE61  50                 	db	80	;'P'
   352  00FE62  4C                 	db	76	;'L'
   353  00FE63  45                 	db	69	;'E'
   354  00FE64  54                 	db	84	;'T'
   355  00FE65  45                 	db	69	;'E'
   356  00FE66  44                 	db	68	;'D'
   357  00FE67  21                 	db	33
   358  00FE68  20                 	db	32
   359  00FE69  20                 	db	32
   360  00FE6A  20                 	db	32
   361  00FE6B  20                 	db	32
   362  00FE6C  20                 	db	32
   363  00FE6D  00                 	db	0
   364  00FE6E                     STR_30:
   365  00FE6E  20                 	db	32
   366  00FE6F  20                 	db	32
   367  00FE70  20                 	db	32
   368  00FE71  20                 	db	32
   369  00FE72  53                 	db	83	;'S'
   370  00FE73  55                 	db	85	;'U'
   371  00FE74  43                 	db	67	;'C'
   372  00FE75  43                 	db	67	;'C'
   373  00FE76  45                 	db	69	;'E'
   374  00FE77  53                 	db	83	;'S'
   375  00FE78  53                 	db	83	;'S'
   376  00FE79  46                 	db	70	;'F'
   377  00FE7A  55                 	db	85	;'U'
   378  00FE7B  4C                 	db	76	;'L'
   379  00FE7C  4C                 	db	76	;'L'
   380  00FE7D  59                 	db	89	;'Y'
   381  00FE7E  20                 	db	32
   382  00FE7F  20                 	db	32
   383  00FE80  20                 	db	32
   384  00FE81  20                 	db	32
   385  00FE82  00                 	db	0
   386  00FE83                     STR_23:
   387  00FE83  20                 	db	32
   388  00FE84  20                 	db	32
   389  00FE85  20                 	db	32
   390  00FE86  73                 	db	115	;'s'
   391  00FE87  74                 	db	116	;'t'
   392  00FE88  61                 	db	97	;'a'
   393  00FE89  72                 	db	114	;'r'
   394  00FE8A  74                 	db	116	;'t'
   395  00FE8B  20                 	db	32
   396  00FE8C  70                 	db	112	;'p'
   397  00FE8D  61                 	db	97	;'a'
   398  00FE8E  72                 	db	114	;'r'
   399  00FE8F  6B                 	db	107	;'k'
   400  00FE90  69                 	db	105	;'i'
   401  00FE91  6E                 	db	110	;'n'
   402  00FE92  67                 	db	103	;'g'
   403  00FE93  20                 	db	32
   404  00FE94  20                 	db	32
   405  00FE95  20                 	db	32
   406  00FE96  20                 	db	32
   407  00FE97  00                 	db	0
   408  00FE98                     STR_3:
   409  00FE98  20                 	db	32
   410  00FE99  20                 	db	32
   411  00FE9A  50                 	db	80	;'P'
   412  00FE9B  72                 	db	114	;'r'
   413  00FE9C  65                 	db	101	;'e'
   414  00FE9D  73                 	db	115	;'s'
   415  00FE9E  73                 	db	115	;'s'
   416  00FE9F  20                 	db	32
   417  00FEA0  74                 	db	116	;'t'
   418  00FEA1  68                 	db	104	;'h'
   419  00FEA2  65                 	db	101	;'e'
   420  00FEA3  20                 	db	32
   421  00FEA4  62                 	db	98	;'b'
   422  00FEA5  75                 	db	117	;'u'
   423  00FEA6  74                 	db	116	;'t'
   424  00FEA7  74                 	db	116	;'t'
   425  00FEA8  6F                 	db	111	;'o'
   426  00FEA9  6E                 	db	110	;'n'
   427  00FEAA  20                 	db	32
   428  00FEAB  20                 	db	32
   429  00FEAC  00                 	db	0
   430  00FEAD                     STR_19:
   431  00FEAD  20                 	db	32
   432  00FEAE  75                 	db	117	;'u'
   433  00FEAF  6E                 	db	110	;'n'
   434  00FEB0  74                 	db	116	;'t'
   435  00FEB1  69                 	db	105	;'i'
   436  00FEB2  6C                 	db	108	;'l'
   437  00FEB3  20                 	db	32
   438  00FEB4  6E                 	db	110	;'n'
   439  00FEB5  65                 	db	101	;'e'
   440  00FEB6  78                 	db	120	;'x'
   441  00FEB7  74                 	db	116	;'t'
   442  00FEB8  20                 	db	32
   443  00FEB9  6D                 	db	109	;'m'
   444  00FEBA  65                 	db	101	;'e'
   445  00FEBB  73                 	db	115	;'s'
   446  00FEBC  73                 	db	115	;'s'
   447  00FEBD  61                 	db	97	;'a'
   448  00FEBE  67                 	db	103	;'g'
   449  00FEBF  65                 	db	101	;'e'
   450  00FEC0  20                 	db	32
   451  00FEC1  00                 	db	0
   452  00FEC2                     STR_22:
   453  00FEC2  50                 	db	80	;'P'
   454  00FEC3  72                 	db	114	;'r'
   455  00FEC4  65                 	db	101	;'e'
   456  00FEC5  73                 	db	115	;'s'
   457  00FEC6  73                 	db	115	;'s'
   458  00FEC7  20                 	db	32
   459  00FEC8  74                 	db	116	;'t'
   460  00FEC9  68                 	db	104	;'h'
   461  00FECA  65                 	db	101	;'e'
   462  00FECB  20                 	db	32
   463  00FECC  42                 	db	66	;'B'
   464  00FECD  55                 	db	85	;'U'
   465  00FECE  54                 	db	84	;'T'
   466  00FECF  54                 	db	84	;'T'
   467  00FED0  4F                 	db	79	;'O'
   468  00FED1  4E                 	db	78	;'N'
   469  00FED2  20                 	db	32
   470  00FED3  74                 	db	116	;'t'
   471  00FED4  6F                 	db	111	;'o'
   472  00FED5  20                 	db	32
   473  00FED6  00                 	db	0
   474  00FED7                     STR_29:
   475  00FED7  20                 	db	32
   476  00FED8  50                 	db	80	;'P'
   477  00FED9  61                 	db	97	;'a'
   478  00FEDA  72                 	db	114	;'r'
   479  00FEDB  6B                 	db	107	;'k'
   480  00FEDC  69                 	db	105	;'i'
   481  00FEDD  6E                 	db	110	;'n'
   482  00FEDE  67                 	db	103	;'g'
   483  00FEDF  20                 	db	32
   484  00FEE0  70                 	db	112	;'p'
   485  00FEE1  72                 	db	114	;'r'
   486  00FEE2  6F                 	db	111	;'o'
   487  00FEE3  63                 	db	99	;'c'
   488  00FEE4  65                 	db	101	;'e'
   489  00FEE5  64                 	db	100	;'d'
   490  00FEE6  75                 	db	117	;'u'
   491  00FEE7  72                 	db	114	;'r'
   492  00FEE8  65                 	db	101	;'e'
   493  00FEE9  73                 	db	115	;'s'
   494  00FEEA  20                 	db	32
   495  00FEEB  00                 	db	0
   496  00FEEC                     STR_21:
   497  00FEEC  2D                 	db	45
   498  00FEED  20                 	db	32
   499  00FEEE  44                 	db	68	;'D'
   500  00FEEF  69                 	db	105	;'i'
   501  00FEF0  73                 	db	115	;'s'
   502  00FEF1  74                 	db	116	;'t'
   503  00FEF2  61                 	db	97	;'a'
   504  00FEF3  6E                 	db	110	;'n'
   505  00FEF4  63                 	db	99	;'c'
   506  00FEF5  65                 	db	101	;'e'
   507  00FEF6  20                 	db	32
   508  00FEF7  52                 	db	82	;'R'
   509  00FEF8  45                 	db	69	;'E'
   510  00FEF9  41                 	db	65	;'A'
   511  00FEFA  43                 	db	67	;'C'
   512  00FEFB  48                 	db	72	;'H'
   513  00FEFC  45                 	db	69	;'E'
   514  00FEFD  44                 	db	68	;'D'
   515  00FEFE  20                 	db	32
   516  00FEFF  2D                 	db	45
   517  00FF00  00                 	db	0
   518  00FF01                     STR_18:
   519  00FF01  2D                 	db	45
   520  00FF02  3E                 	db	62	;'>'
   521  00FF03  20                 	db	32
   522  00FF04  20                 	db	32
   523  00FF05  4B                 	db	75	;'K'
   524  00FF06  45                 	db	69	;'E'
   525  00FF07  45                 	db	69	;'E'
   526  00FF08  50                 	db	80	;'P'
   527  00FF09  20                 	db	32
   528  00FF0A  4D                 	db	77	;'M'
   529  00FF0B  4F                 	db	79	;'O'
   530  00FF0C  56                 	db	86	;'V'
   531  00FF0D  49                 	db	73	;'I'
   532  00FF0E  4E                 	db	78	;'N'
   533  00FF0F  47                 	db	71	;'G'
   534  00FF10  20                 	db	32
   535  00FF11  20                 	db	32
   536  00FF12  20                 	db	32
   537  00FF13  3C                 	db	60	;'<'
   538  00FF14  2D                 	db	45
   539  00FF15  00                 	db	0
   540  00FF16                     STR_25:
   541  00FF16  3D                 	db	61	;'='
   542  00FF17  20                 	db	32
   543  00FF18  20                 	db	32
   544  00FF19  20                 	db	32
   545  00FF1A  20                 	db	32
   546  00FF1B  50                 	db	80	;'P'
   547  00FF1C  61                 	db	97	;'a'
   548  00FF1D  72                 	db	114	;'r'
   549  00FF1E  6B                 	db	107	;'k'
   550  00FF1F  69                 	db	105	;'i'
   551  00FF20  6E                 	db	110	;'n'
   552  00FF21  67                 	db	103	;'g'
   553  00FF22  20                 	db	32
   554  00FF23  69                 	db	105	;'i'
   555  00FF24  6E                 	db	110	;'n'
   556  00FF25  20                 	db	32
   557  00FF26  20                 	db	32
   558  00FF27  20                 	db	32
   559  00FF28  20                 	db	32
   560  00FF29  3D                 	db	61	;'='
   561  00FF2A  00                 	db	0
   562  00FF2B                     STR_26:
   563  00FF2B  3D                 	db	61	;'='
   564  00FF2C  20                 	db	32
   565  00FF2D  20                 	db	32
   566  00FF2E  20                 	db	32
   567  00FF2F  20                 	db	32
   568  00FF30  70                 	db	112	;'p'
   569  00FF31  72                 	db	114	;'r'
   570  00FF32  6F                 	db	111	;'o'
   571  00FF33  67                 	db	103	;'g'
   572  00FF34  72                 	db	114	;'r'
   573  00FF35  65                 	db	101	;'e'
   574  00FF36  73                 	db	115	;'s'
   575  00FF37  73                 	db	115	;'s'
   576  00FF38  2E                 	db	46
   577  00FF39  2E                 	db	46
   578  00FF3A  2E                 	db	46
   579  00FF3B  20                 	db	32
   580  00FF3C  20                 	db	32
   581  00FF3D  20                 	db	32
   582  00FF3E  3D                 	db	61	;'='
   583  00FF3F  00                 	db	0
   584  00FF40                     STR_16:
   585  00FF40  3D                 	db	61	;'='
   586  00FF41  20                 	db	32
   587  00FF42  50                 	db	80	;'P'
   588  00FF43  41                 	db	65	;'A'
   589  00FF44  52                 	db	82	;'R'
   590  00FF45  4B                 	db	75	;'K'
   591  00FF46  49                 	db	73	;'I'
   592  00FF47  4E                 	db	78	;'N'
   593  00FF48  47                 	db	71	;'G'
   594  00FF49  20                 	db	32
   595  00FF4A  4D                 	db	77	;'M'
   596  00FF4B  45                 	db	69	;'E'
   597  00FF4C  53                 	db	83	;'S'
   598  00FF4D  53                 	db	83	;'S'
   599  00FF4E  41                 	db	65	;'A'
   600  00FF4F  47                 	db	71	;'G'
   601  00FF50  45                 	db	69	;'E'
   602  00FF51  53                 	db	83	;'S'
   603  00FF52  20                 	db	32
   604  00FF53  3D                 	db	61	;'='
   605  00FF54  00                 	db	0
   606  00FF55                     STR_2:
   607  00FF55  3D                 	db	61	;'='
   608  00FF56  3D                 	db	61	;'='
   609  00FF57  3E                 	db	62	;'>'
   610  00FF58  20                 	db	32
   611  00FF59  56                 	db	86	;'V'
   612  00FF5A  45                 	db	69	;'E'
   613  00FF5B  48                 	db	72	;'H'
   614  00FF5C  49                 	db	73	;'I'
   615  00FF5D  43                 	db	67	;'C'
   616  00FF5E  4C                 	db	76	;'L'
   617  00FF5F  45                 	db	69	;'E'
   618  00FF60  20                 	db	32
   619  00FF61  20                 	db	32
   620  00FF62  4F                 	db	79	;'O'
   621  00FF63  46                 	db	70	;'F'
   622  00FF64  46                 	db	70	;'F'
   623  00FF65  20                 	db	32
   624  00FF66  3C                 	db	60	;'<'
   625  00FF67  3D                 	db	61	;'='
   626  00FF68  3D                 	db	61	;'='
   627  00FF69  00                 	db	0
   628  00FF6A                     STR_6:
   629  00FF6A  3D                 	db	61	;'='
   630  00FF6B  3D                 	db	61	;'='
   631  00FF6C  3D                 	db	61	;'='
   632  00FF6D  20                 	db	32
   633  00FF6E  56                 	db	86	;'V'
   634  00FF6F  45                 	db	69	;'E'
   635  00FF70  48                 	db	72	;'H'
   636  00FF71  49                 	db	73	;'I'
   637  00FF72  43                 	db	67	;'C'
   638  00FF73  4C                 	db	76	;'L'
   639  00FF74  45                 	db	69	;'E'
   640  00FF75  20                 	db	32
   641  00FF76  44                 	db	68	;'D'
   642  00FF77  41                 	db	65	;'A'
   643  00FF78  54                 	db	84	;'T'
   644  00FF79  41                 	db	65	;'A'
   645  00FF7A  20                 	db	32
   646  00FF7B  3D                 	db	61	;'='
   647  00FF7C  3D                 	db	61	;'='
   648  00FF7D  3D                 	db	61	;'='
   649  00FF7E  00                 	db	0
   650  00FF7F                     STR_1:
   651  00FF7F  3D                 	db	61	;'='
   652  00FF80  3D                 	db	61	;'='
   653  00FF81  3D                 	db	61	;'='
   654  00FF82  3D                 	db	61	;'='
   655  00FF83  3D                 	db	61	;'='
   656  00FF84  3D                 	db	61	;'='
   657  00FF85  3D                 	db	61	;'='
   658  00FF86  3D                 	db	61	;'='
   659  00FF87  3D                 	db	61	;'='
   660  00FF88  3D                 	db	61	;'='
   661  00FF89  3D                 	db	61	;'='
   662  00FF8A  3D                 	db	61	;'='
   663  00FF8B  3D                 	db	61	;'='
   664  00FF8C  3D                 	db	61	;'='
   665  00FF8D  3D                 	db	61	;'='
   666  00FF8E  3D                 	db	61	;'='
   667  00FF8F  3D                 	db	61	;'='
   668  00FF90  3D                 	db	61	;'='
   669  00FF91  3D                 	db	61	;'='
   670  00FF92  3D                 	db	61	;'='
   671  00FF93  00                 	db	0
   672  00FF94                     STR_17:
   673  00FF94  20                 	db	32
   674  00FF95  50                 	db	80	;'P'
   675  00FF96  61                 	db	97	;'a'
   676  00FF97  72                 	db	114	;'r'
   677  00FF98  6B                 	db	107	;'k'
   678  00FF99  69                 	db	105	;'i'
   679  00FF9A  6E                 	db	110	;'n'
   680  00FF9B  67                 	db	103	;'g'
   681  00FF9C  20                 	db	32
   682  00FF9D  73                 	db	115	;'s'
   683  00FF9E  70                 	db	112	;'p'
   684  00FF9F  61                 	db	97	;'a'
   685  00FFA0  63                 	db	99	;'c'
   686  00FFA1  65                 	db	101	;'e'
   687  00FFA2  20                 	db	32
   688  00FFA3  46                 	db	70	;'F'
   689  00FFA4  4F                 	db	79	;'O'
   690  00FFA5  55                 	db	85	;'U'
   691  00FFA6  4E                 	db	78	;'N'
   692  00FFA7  44                 	db	68	;'D'
   693  00FFA8  00                 	db	0
   694  00FFA9                     STR_8:
   695  00FFA9  53                 	db	83	;'S'
   696  00FFAA  70                 	db	112	;'p'
   697  00FFAB  65                 	db	101	;'e'
   698  00FFAC  65                 	db	101	;'e'
   699  00FFAD  64                 	db	100	;'d'
   700  00FFAE  3A                 	db	58	;':'
   701  00FFAF  20                 	db	32
   702  00FFB0  30                 	db	48	;'0'
   703  00FFB1  2E                 	db	46
   704  00FFB2  30                 	db	48	;'0'
   705  00FFB3  30                 	db	48	;'0'
   706  00FFB4  20                 	db	32
   707  00FFB5  4B                 	db	75	;'K'
   708  00FFB6  6D                 	db	109	;'m'
   709  00FFB7  2F                 	db	47
   710  00FFB8  68                 	db	104	;'h'
   711  00FFB9  00                 	db	0
   712  00FFBA                     STR_9:
   713  00FFBA  50                 	db	80	;'P'
   714  00FFBB  61                 	db	97	;'a'
   715  00FFBC  72                 	db	114	;'r'
   716  00FFBD  6B                 	db	107	;'k'
   717  00FFBE  20                 	db	32
   718  00FFBF  61                 	db	97	;'a'
   719  00FFC0  73                 	db	115	;'s'
   720  00FFC1  73                 	db	115	;'s'
   721  00FFC2  69                 	db	105	;'i'
   722  00FFC3  73                 	db	115	;'s'
   723  00FFC4  74                 	db	116	;'t'
   724  00FFC5  3A                 	db	58	;':'
   725  00FFC6  20                 	db	32
   726  00FFC7  00                 	db	0
   727  00FFC8                     STR_7:
   728  00FFC8  44                 	db	68	;'D'
   729  00FFC9  69                 	db	105	;'i'
   730  00FFCA  72                 	db	114	;'r'
   731  00FFCB  65                 	db	101	;'e'
   732  00FFCC  63                 	db	99	;'c'
   733  00FFCD  74                 	db	116	;'t'
   734  00FFCE  69                 	db	105	;'i'
   735  00FFCF  6F                 	db	111	;'o'
   736  00FFD0  6E                 	db	110	;'n'
   737  00FFD1  3A                 	db	58	;':'
   738  00FFD2  20                 	db	32
   739  00FFD3  00                 	db	0
   740  00FFD4                     STR_14:
   741  00FFD4  4F                 	db	79	;'O'
   742  00FFD5  46                 	db	70	;'F'
   743  00FFD6  46                 	db	70	;'F'
   744  00FFD7  20                 	db	32
   745  00FFD8  20                 	db	32
   746  00FFD9  20                 	db	32
   747  00FFDA  20                 	db	32
   748  00FFDB  00                 	db	0
   749  00FFDC                     STR_15:
   750  00FFDC  53                 	db	83	;'S'
   751  00FFDD  45                 	db	69	;'E'
   752  00FFDE  41                 	db	65	;'A'
   753  00FFDF  52                 	db	82	;'R'
   754  00FFE0  43                 	db	67	;'C'
   755  00FFE1  48                 	db	72	;'H'
   756  00FFE2  20                 	db	32
   757  00FFE3  00                 	db	0
   758  00FFE4                     STR_10:
   759  00FFE4  44                 	db	68	;'D'
   760  00FFE5  61                 	db	97	;'a'
   761  00FFE6  74                 	db	116	;'t'
   762  00FFE7  61                 	db	97	;'a'
   763  00FFE8  3A                 	db	58	;':'
   764  00FFE9  20                 	db	32
   765  00FFEA  00                 	db	0
   766  00FFEB                     STR_13:
   767  00FFEB  50                 	db	80	;'P'
   768  00FFEC  20                 	db	32
   769  00FFED  20                 	db	32
   770  00FFEE  20                 	db	32
   771  00FFEF  00                 	db	0
   772  00FFF0                     STR_11:
   773  00FFF0  46                 	db	70	;'F'
   774  00FFF1  57                 	db	87	;'W'
   775  00FFF2  44                 	db	68	;'D'
   776  00FFF3  20                 	db	32
   777  00FFF4  00                 	db	0
   778  00FFF5                     STR_12:
   779  00FFF5  42                 	db	66	;'B'
   780  00FFF6  4B                 	db	75	;'K'
   781  00FFF7  57                 	db	87	;'W'
   782  00FFF8  44                 	db	68	;'D'
   783  00FFF9  00                 	db	0
   784  00FFFA                     STR_5:
   785  00FFFA  25                 	db	37
   786  00FFFB  2E                 	db	46
   787  00FFFC  32                 	db	50	;'2'
   788  00FFFD  66                 	db	102	;'f'
   789  00FFFE  00                 	db	0
   790  0000                     
   791                           ; #config settings
   792  00FFFF  00                 	db	0	; dummy byte at the end
   793  0000                     
   794                           	psect	cinit
   795  01618A                     __pcinit:
   796                           	opt stack 0
   797  01618A                     start_initialization:
   798                           	opt stack 0
   799  01618A                     __initialization:
   800                           	opt stack 0
   801                           
   802                           ; Clear objects allocated to BANK1 (52 bytes)
   803  01618A  EE01  F000         	lfsr	0,__pbssBANK1
   804  01618E  0E34               	movlw	52
   805  016190                     clear_0:
   806  016190  6AEE               	clrf	postinc0,c
   807  016192  06E8               	decf	wreg,f,c
   808  016194  E1FD               	bnz	clear_0
   809                           
   810                           ; Clear objects allocated to BANK0 (31 bytes)
   811  016196  EE00  F0CC         	lfsr	0,__pbssBANK0
   812  01619A  0E1F               	movlw	31
   813  01619C                     clear_1:
   814  01619C  6AEE               	clrf	postinc0,c
   815  01619E  06E8               	decf	wreg,f,c
   816  0161A0  E1FD               	bnz	clear_1
   817                           
   818                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   819  0161A2  6A4B               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   820  0161A4  6A4A               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   821  0161A6  6A49               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   822                           
   823                           ; Clear objects allocated to COMRAM (38 bytes)
   824  0161A8  EE00  F001         	lfsr	0,__pbssCOMRAM
   825  0161AC  0E26               	movlw	38
   826  0161AE                     clear_2:
   827  0161AE  6AEE               	clrf	postinc0,c
   828  0161B0  06E8               	decf	wreg,f,c
   829  0161B2  E1FD               	bnz	clear_2
   830                           
   831                           ; Initialize objects allocated to BANK0 (1 bytes)
   832                           ; load TBLPTR registers with __pidataBANK0
   833  0161B4  0EA4               	movlw	low __pidataBANK0
   834  0161B6  6EF6               	movwf	tblptrl,c
   835  0161B8  0E64               	movlw	high __pidataBANK0
   836  0161BA  6EF7               	movwf	tblptrh,c
   837  0161BC  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   838  0161BE  6EF8               	movwf	tblptru,c
   839  0161C0  0009               	tblrd		*+	;fetch initializer
   840  0161C2  CFF5 F0EB          	movff	tablat,__pdataBANK0
   841  0161C6                     end_of_initialization:
   842                           	opt stack 0
   843  0161C6                     __end_of__initialization:
   844                           	opt stack 0
   845  0161C6  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   846  0161C8  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   847  0161CA  0100               	movlb	0
   848  0161CC  EF93  F08D         	goto	_main	;jump to C main() function
   849                           tblptru	equ	0xFF8
   850                           tblptrh	equ	0xFF7
   851                           tblptrl	equ	0xFF6
   852                           tablat	equ	0xFF5
   853                           postinc0	equ	0xFEE
   854                           wreg	equ	0xFE8
   855                           
   856                           	psect	bitbssCOMRAM
   857  000248                     __pbitbssCOMRAM:
   858                           	opt stack 0
   859  000248                     _AbsFlag:
   860                           	opt stack 0
   861  000248                     	ds	1
   862  000249                     _Can_Tx_Force:
   863                           	opt stack 0
   864  000249                     	ds	1
   865  00024A                     _F1_switch:
   866                           	opt stack 0
   867  00024A                     	ds	1
   868  00024B                     _F2_switch:
   869                           	opt stack 0
   870  00024B                     	ds	1
   871  00024C                     _MotoreFlag:
   872                           	opt stack 0
   873  00024C                     	ds	1
   874  00024D                     _RTR_Flag:
   875                           	opt stack 0
   876  00024D                     	ds	1
   877  00024E                     _SterzoFlag:
   878                           	opt stack 0
   879  00024E                     	ds	1
   880  00024F                     _display_refresh:
   881                           	opt stack 0
   882  00024F                     	ds	1
   883  000250                     _newMessageCan:
   884                           	opt stack 0
   885  000250                     	ds	1
   886  000251                     _parking_message_E:
   887                           	opt stack 0
   888  000251                     	ds	1
   889  000252                     _power_switch:
   890                           	opt stack 0
   891  000252                     	ds	1
   892  000253                     _space_available:
   893                           	opt stack 0
   894  000253                     	ds	1
   895  000254                     _space_gap_reached:
   896                           	opt stack 0
   897  000254                     	ds	1
   898  000255                     _steering_correction_dir:
   899                           	opt stack 0
   900  000255                     	ds	1
   901  000256                     _wait_low_1:
   902                           	opt stack 0
   903  000256                     	ds	1
   904  000257                     _wait_low_2:
   905                           	opt stack 0
   906  000257                     	ds	1
   907  000258                     _wait_low_3:
   908                           	opt stack 0
   909  000258                     	ds	1
   910  000259                     _x:
   911                           	opt stack 0
   912  000259                     	ds	1
   913  00025A                     _y:
   914                           	opt stack 0
   915  00025A                     	ds	1
   916  00025B                     _z:
   917                           	opt stack 0
   918  00025B                     	ds	1
   919                           tblptru	equ	0xFF8
   920                           tblptrh	equ	0xFF7
   921                           tblptrl	equ	0xFF6
   922                           tablat	equ	0xFF5
   923                           postinc0	equ	0xFEE
   924                           wreg	equ	0xFE8
   925                           
   926                           	psect	bssCOMRAM
   927  000001                     __pbssCOMRAM:
   928                           	opt stack 0
   929  000001                     _id:
   930                           	opt stack 0
   931  000001                     	ds	4
   932  000005                     _pr_time_2:
   933                           	opt stack 0
   934  000005                     	ds	4
   935  000009                     _pr_time_3:
   936                           	opt stack 0
   937  000009                     	ds	4
   938  00000D                     _pr_time_4:
   939                           	opt stack 0
   940  00000D                     	ds	4
   941  000011                     _pr_time_5:
   942                           	opt stack 0
   943  000011                     	ds	4
   944  000015                     _pr_time_6:
   945                           	opt stack 0
   946  000015                     	ds	4
   947  000019                     _time_counter:
   948                           	opt stack 0
   949  000019                     	ds	4
   950  00001D                     _left_speed:
   951                           	opt stack 0
   952  00001D                     	ds	2
   953  00001F                     _right_speed:
   954                           	opt stack 0
   955  00001F                     	ds	2
   956  000021                     _user_data:
   957                           	opt stack 0
   958  000021                     	ds	2
   959  000023                     _battery:
   960                           	opt stack 0
   961  000023                     	ds	1
   962  000024                     _set_steering:
   963                           	opt stack 0
   964  000024                     	ds	1
   965  000025                     _data:
   966                           	opt stack 0
   967  000025                     	ds	1
   968  000026                     _data_brake:
   969                           	opt stack 0
   970  000026                     	ds	1
   971                           tblptru	equ	0xFF8
   972                           tblptrh	equ	0xFF7
   973                           tblptrl	equ	0xFF6
   974                           tablat	equ	0xFF5
   975                           postinc0	equ	0xFEE
   976                           wreg	equ	0xFE8
   977                           
   978                           	psect	bssBANK0
   979  0000CC                     __pbssBANK0:
   980                           	opt stack 0
   981  0000CC                     _JoystickConstants:
   982                           	opt stack 0
   983  0000CC                     	ds	8
   984  0000D4                     _check:
   985                           	opt stack 0
   986  0000D4                     	ds	4
   987  0000D8                     _pr_time_1:
   988                           	opt stack 0
   989  0000D8                     	ds	4
   990  0000DC                     _JoystickValues:
   991                           	opt stack 0
   992  0000DC                     	ds	2
   993  0000DE                     _actual_speed:
   994                           	opt stack 0
   995  0000DE                     	ds	2
   996  0000E0                     _clock_counter_reference:
   997                           	opt stack 0
   998  0000E0                     	ds	2
   999  0000E2                     _set_speed:
  1000                           	opt stack 0
  1001  0000E2                     	ds	2
  1002  0000E4                     _dir:
  1003                           	opt stack 0
  1004  0000E4                     	ds	1
  1005  0000E5                     _parking_message_ID:
  1006                           	opt stack 0
  1007  0000E5                     	ds	1
  1008  0000E6                     _parking_state:
  1009                           	opt stack 0
  1010  0000E6                     	ds	1
  1011  0000E7                     _steering_correction:
  1012                           	opt stack 0
  1013  0000E7                     	ds	1
  1014  0000E8                     _switch_position:
  1015                           	opt stack 0
  1016  0000E8                     	ds	1
  1017  0000E9                     _data_speed:
  1018                           	opt stack 0
  1019  0000E9                     	ds	1
  1020  0000EA                     _data_steering:
  1021                           	opt stack 0
  1022  0000EA                     	ds	1
  1023                           tblptru	equ	0xFF8
  1024                           tblptrh	equ	0xFF7
  1025                           tblptrl	equ	0xFF6
  1026                           tablat	equ	0xFF5
  1027                           postinc0	equ	0xFEE
  1028                           wreg	equ	0xFE8
  1029                           
  1030                           	psect	dataBANK0
  1031  0000EB                     __pdataBANK0:
  1032                           	opt stack 0
  1033  0000EB                     _delay_quartz_frequency_value:
  1034                           	opt stack 0
  1035  0000EB                     	ds	1
  1036                           tblptru	equ	0xFF8
  1037                           tblptrh	equ	0xFF7
  1038                           tblptrl	equ	0xFF6
  1039                           tablat	equ	0xFF5
  1040                           postinc0	equ	0xFEE
  1041                           wreg	equ	0xFE8
  1042                           
  1043                           	psect	bssBANK1
  1044  000100                     __pbssBANK1:
  1045                           	opt stack 0
  1046  000100                     _data_speed_rx:
  1047                           	opt stack 0
  1048  000100                     	ds	7
  1049  000107                     LCD_write_integer@F17272:
  1050                           	opt stack 0
  1051  000107                     	ds	6
  1052  00010D                     _actual_speed_kmh:
  1053                           	opt stack 0
  1054  00010D                     	ds	4
  1055  000111                     _msg:
  1056                           	opt stack 0
  1057  000111                     	ds	15
  1058  000120                     _str:
  1059                           	opt stack 0
  1060  000120                     	ds	12
  1061  00012C                     _park_assist_state:
  1062                           	opt stack 0
  1063  00012C                     	ds	8
  1064                           tblptru	equ	0xFF8
  1065                           tblptrh	equ	0xFF7
  1066                           tblptrl	equ	0xFF6
  1067                           tablat	equ	0xFF5
  1068                           postinc0	equ	0xFEE
  1069                           wreg	equ	0xFE8
  1070                           
  1071                           	psect	cstackBANK1
  1072  000134                     __pcstackBANK1:
  1073                           	opt stack 0
  1074  000134                     _sprintf$4257:
  1075                           	opt stack 0
  1076                           
  1077                           ; 4 bytes @ 0x0
  1078  000134                     	ds	4
  1079  000138                     sprintf@ap:
  1080                           	opt stack 0
  1081                           
  1082                           ; 2 bytes @ 0x4
  1083  000138                     	ds	2
  1084  00013A                     sprintf@flag:
  1085                           	opt stack 0
  1086                           
  1087                           ; 2 bytes @ 0x6
  1088  00013A                     	ds	2
  1089  00013C                     sprintf@val:
  1090                           	opt stack 0
  1091                           
  1092                           ; 4 bytes @ 0x8
  1093  00013C                     	ds	4
  1094  000140                     sprintf@exp:
  1095                           	opt stack 0
  1096                           
  1097                           ; 2 bytes @ 0xC
  1098  000140                     	ds	2
  1099  000142                     sprintf@tmpval:
  1100                           	opt stack 0
  1101                           
  1102                           ; 4 bytes @ 0xE
  1103  000142                     	ds	4
  1104  000146                     sprintf@prec:
  1105                           	opt stack 0
  1106                           
  1107                           ; 2 bytes @ 0x12
  1108  000146                     	ds	2
  1109  000148                     sprintf@fval:
  1110                           	opt stack 0
  1111                           
  1112                           ; 4 bytes @ 0x14
  1113  000148                     	ds	4
  1114  00014C                     sprintf@c:
  1115                           	opt stack 0
  1116                           
  1117                           ; 1 bytes @ 0x18
  1118  00014C                     	ds	1
  1119  00014D                     ??_main:
  1120                           
  1121                           ; 0 bytes @ 0x19
  1122  00014D                     	ds	8
  1123                           tblptru	equ	0xFF8
  1124                           tblptrh	equ	0xFF7
  1125                           tblptrl	equ	0xFF6
  1126                           tablat	equ	0xFF5
  1127                           postinc0	equ	0xFEE
  1128                           wreg	equ	0xFE8
  1129                           
  1130                           	psect	cstackBANK0
  1131  000060                     __pcstackBANK0:
  1132                           	opt stack 0
  1133  000060                     ??_ISR_alta:
  1134                           
  1135                           ; 0 bytes @ 0x0
  1136  000060                     	ds	16
  1137  000070                     ??_Joystick_Polling:
  1138  000070                     ??_CAN_Rx:
  1139  000070                     ??_isdigit:
  1140  000070                     ?___wmul:
  1141                           	opt stack 0
  1142  000070                     ?___awmod:
  1143                           	opt stack 0
  1144  000070                     ?___lwdiv:
  1145                           	opt stack 0
  1146  000070                     ?___lwmod:
  1147                           	opt stack 0
  1148  000070                     ?__tdiv_to_l_:
  1149                           	opt stack 0
  1150  000070                     ?__div_to_l_:
  1151                           	opt stack 0
  1152  000070                     ?___lldiv:
  1153                           	opt stack 0
  1154  000070                     ?___llmod:
  1155                           	opt stack 0
  1156  000070                     ?___xxtofl:
  1157                           	opt stack 0
  1158  000070                     CANOperationMode@mode:
  1159                           	opt stack 0
  1160  000070                     _CANisTxReady$3251:
  1161                           	opt stack 0
  1162  000070                     delay_set_quartz@frequency:
  1163                           	opt stack 0
  1164  000070                     ___wmul@multiplier:
  1165                           	opt stack 0
  1166  000070                     ___awmod@dividend:
  1167                           	opt stack 0
  1168  000070                     ___lwdiv@dividend:
  1169                           	opt stack 0
  1170  000070                     ___lwmod@dividend:
  1171                           	opt stack 0
  1172  000070                     CANsendMessage@identifier:
  1173                           	opt stack 0
  1174  000070                     CANSetMask@mask:
  1175                           	opt stack 0
  1176  000070                     CANSetFilter@filter:
  1177                           	opt stack 0
  1178  000070                     __div_to_l_@f1:
  1179                           	opt stack 0
  1180  000070                     ___flge@ff1:
  1181                           	opt stack 0
  1182  000070                     __tdiv_to_l_@f1:
  1183                           	opt stack 0
  1184  000070                     ___lldiv@dividend:
  1185                           	opt stack 0
  1186  000070                     ___llmod@dividend:
  1187                           	opt stack 0
  1188  000070                     ___xxtofl@val:
  1189                           	opt stack 0
  1190                           
  1191                           ; 4 bytes @ 0x10
  1192  000070                     	ds	1
  1193  000071                     Joystick_Polling@i:
  1194                           	opt stack 0
  1195  000071                     _isdigit$3840:
  1196                           	opt stack 0
  1197                           
  1198                           ; 1 bytes @ 0x11
  1199  000071                     	ds	1
  1200  000072                     isdigit@c:
  1201                           	opt stack 0
  1202  000072                     ___wmul@multiplicand:
  1203                           	opt stack 0
  1204  000072                     ___awmod@divisor:
  1205                           	opt stack 0
  1206  000072                     ___lwdiv@divisor:
  1207                           	opt stack 0
  1208  000072                     ___lwmod@divisor:
  1209                           	opt stack 0
  1210                           
  1211                           ; 2 bytes @ 0x12
  1212  000072                     	ds	2
  1213  000074                     ??___xxtofl:
  1214  000074                     CANSetMask@type:
  1215                           	opt stack 0
  1216  000074                     CANSetFilter@type:
  1217                           	opt stack 0
  1218  000074                     ___awmod@counter:
  1219                           	opt stack 0
  1220  000074                     ___lwmod@counter:
  1221                           	opt stack 0
  1222  000074                     CANsendMessage@data:
  1223                           	opt stack 0
  1224  000074                     ___wmul@product:
  1225                           	opt stack 0
  1226  000074                     ___lwdiv@quotient:
  1227                           	opt stack 0
  1228  000074                     __div_to_l_@f2:
  1229                           	opt stack 0
  1230  000074                     ___flge@ff2:
  1231                           	opt stack 0
  1232  000074                     __tdiv_to_l_@f2:
  1233                           	opt stack 0
  1234  000074                     ___lldiv@divisor:
  1235                           	opt stack 0
  1236  000074                     ___llmod@divisor:
  1237                           	opt stack 0
  1238                           
  1239                           ; 4 bytes @ 0x14
  1240  000074                     	ds	1
  1241  000075                     ??_CANSetMask:
  1242  000075                     ??_CANSetFilter:
  1243  000075                     ___awmod@sign:
  1244                           	opt stack 0
  1245                           
  1246                           ; 1 bytes @ 0x15
  1247  000075                     	ds	1
  1248  000076                     ?___awdiv:
  1249                           	opt stack 0
  1250  000076                     CANsendMessage@dataLength:
  1251                           	opt stack 0
  1252  000076                     ___lwdiv@counter:
  1253                           	opt stack 0
  1254  000076                     delay_ms@value_ms:
  1255                           	opt stack 0
  1256  000076                     ___awdiv@dividend:
  1257                           	opt stack 0
  1258                           
  1259                           ; 2 bytes @ 0x16
  1260  000076                     	ds	1
  1261  000077                     CANsendMessage@flags:
  1262                           	opt stack 0
  1263  000077                     utoa@buf:
  1264                           	opt stack 0
  1265                           
  1266                           ; 2 bytes @ 0x17
  1267  000077                     	ds	1
  1268  000078                     ??__tdiv_to_l_:
  1269  000078                     ??_CANsendMessage:
  1270  000078                     ??___flge:
  1271  000078                     LCD_send_command@D2:
  1272                           	opt stack 0
  1273  000078                     ___llmod@counter:
  1274                           	opt stack 0
  1275  000078                     ___xxtofl@sign:
  1276                           	opt stack 0
  1277  000078                     ___awdiv@divisor:
  1278                           	opt stack 0
  1279  000078                     __div_to_l_@quot:
  1280                           	opt stack 0
  1281  000078                     ___lldiv@quotient:
  1282                           	opt stack 0
  1283                           
  1284                           ; 4 bytes @ 0x18
  1285  000078                     	ds	1
  1286  000079                     CANSetMask@numBuffer:
  1287                           	opt stack 0
  1288  000079                     CANSetFilter@numBuffer:
  1289                           	opt stack 0
  1290  000079                     LCD_send_command@D1:
  1291                           	opt stack 0
  1292  000079                     ___xxtofl@exp:
  1293                           	opt stack 0
  1294  000079                     utoa@val:
  1295                           	opt stack 0
  1296                           
  1297                           ; 2 bytes @ 0x19
  1298  000079                     	ds	1
  1299  00007A                     LCD_send_command@D0:
  1300                           	opt stack 0
  1301  00007A                     ___awdiv@counter:
  1302                           	opt stack 0
  1303  00007A                     CANSetMask@tamp:
  1304                           	opt stack 0
  1305  00007A                     CANSetFilter@tamp:
  1306                           	opt stack 0
  1307  00007A                     ___xxtofl@arg:
  1308                           	opt stack 0
  1309                           
  1310                           ; 4 bytes @ 0x1A
  1311  00007A                     	ds	1
  1312  00007B                     LCD_send_command@D3:
  1313                           	opt stack 0
  1314  00007B                     ___awdiv@sign:
  1315                           	opt stack 0
  1316  00007B                     utoa@base:
  1317                           	opt stack 0
  1318  00007B                     __tdiv_to_l_@quot:
  1319                           	opt stack 0
  1320                           
  1321                           ; 4 bytes @ 0x1B
  1322  00007B                     	ds	1
  1323  00007C                     LCD_shift_cursor@number_of_shift:
  1324                           	opt stack 0
  1325  00007C                     LCD_goto_line@line:
  1326                           	opt stack 0
  1327  00007C                     LCD_write_char@D3:
  1328                           	opt stack 0
  1329  00007C                     LCD_cursor@blinking:
  1330                           	opt stack 0
  1331  00007C                     __div_to_l_@cntr:
  1332                           	opt stack 0
  1333  00007C                     ___lldiv@counter:
  1334                           	opt stack 0
  1335  00007C                     ___awdiv@quotient:
  1336                           	opt stack 0
  1337  00007C                     CANsendMessage@tamp:
  1338                           	opt stack 0
  1339                           
  1340                           ; 4 bytes @ 0x1C
  1341  00007C                     	ds	1
  1342  00007D                     LCD_shift_cursor@shift:
  1343                           	opt stack 0
  1344  00007D                     LCD_write_char@D2:
  1345                           	opt stack 0
  1346  00007D                     LCD_cursor@active:
  1347                           	opt stack 0
  1348  00007D                     __div_to_l_@exp1:
  1349                           	opt stack 0
  1350  00007D                     utoa@v:
  1351                           	opt stack 0
  1352                           
  1353                           ; 2 bytes @ 0x1D
  1354  00007D                     	ds	1
  1355  00007E                     ?___fldiv:
  1356                           	opt stack 0
  1357  00007E                     ?___flmul:
  1358                           	opt stack 0
  1359  00007E                     CANInitialize@phaseSeg1:
  1360                           	opt stack 0
  1361  00007E                     LCD_shift_cursor@i:
  1362                           	opt stack 0
  1363  00007E                     LCD_write_char@D1:
  1364                           	opt stack 0
  1365  00007E                     LCD_initialize@quartz_frequency:
  1366                           	opt stack 0
  1367  00007E                     ___fldiv@b:
  1368                           	opt stack 0
  1369  00007E                     ___flmul@b:
  1370                           	opt stack 0
  1371                           
  1372                           ; 4 bytes @ 0x1E
  1373  00007E                     	ds	1
  1374  00007F                     CANInitialize@phaseSeg2:
  1375                           	opt stack 0
  1376  00007F                     LCD_goto_xy@y:
  1377                           	opt stack 0
  1378  00007F                     LCD_write_char@D0:
  1379                           	opt stack 0
  1380  00007F                     __tdiv_to_l_@cntr:
  1381                           	opt stack 0
  1382  00007F                     utoa@c:
  1383                           	opt stack 0
  1384                           
  1385                           ; 1 bytes @ 0x1F
  1386  00007F                     	ds	1
  1387  000080                     CANInitialize@SJW:
  1388                           	opt stack 0
  1389  000080                     LCD_goto_xy@x:
  1390                           	opt stack 0
  1391  000080                     LCD_write_char@value:
  1392                           	opt stack 0
  1393  000080                     __tdiv_to_l_@exp1:
  1394                           	opt stack 0
  1395  000080                     itoa@buf:
  1396                           	opt stack 0
  1397                           
  1398                           ; 2 bytes @ 0x20
  1399  000080                     	ds	1
  1400  000081                     CANInitialize@BRP:
  1401                           	opt stack 0
  1402  000081                     LCD_write_message@buffer:
  1403                           	opt stack 0
  1404  000081                     LCD_write_string@buffer:
  1405                           	opt stack 0
  1406                           
  1407                           ; 2 bytes @ 0x21
  1408  000081                     	ds	1
  1409  000082                     CANInitialize@flags:
  1410                           	opt stack 0
  1411  000082                     itoa@val:
  1412                           	opt stack 0
  1413  000082                     ___fldiv@a:
  1414                           	opt stack 0
  1415  000082                     ___flmul@a:
  1416                           	opt stack 0
  1417                           
  1418                           ; 4 bytes @ 0x22
  1419  000082                     	ds	1
  1420  000083                     ??_CANInitialize:
  1421  000083                     
  1422                           ; 0 bytes @ 0x23
  1423  000083                     	ds	1
  1424  000084                     itoa@base:
  1425                           	opt stack 0
  1426                           
  1427                           ; 2 bytes @ 0x24
  1428  000084                     	ds	2
  1429  000086                     ??___fldiv:
  1430  000086                     ??___flmul:
  1431  000086                     itoa@cp:
  1432                           	opt stack 0
  1433                           
  1434                           ; 2 bytes @ 0x26
  1435  000086                     	ds	1
  1436  000087                     CANInitialize@propSeg:
  1437                           	opt stack 0
  1438                           
  1439                           ; 1 bytes @ 0x27
  1440  000087                     	ds	1
  1441  000088                     CANInitialize@FilterConfig1:
  1442                           	opt stack 0
  1443  000088                     LCD_write_integer@value:
  1444                           	opt stack 0
  1445                           
  1446                           ; 2 bytes @ 0x28
  1447  000088                     	ds	1
  1448  000089                     CANInitialize@FilterConfig2:
  1449                           	opt stack 0
  1450                           
  1451                           ; 1 bytes @ 0x29
  1452  000089                     	ds	1
  1453  00008A                     LCD_write_integer@number_of_digits:
  1454                           	opt stack 0
  1455  00008A                     ___fldiv@sign:
  1456                           	opt stack 0
  1457  00008A                     ___flmul@sign:
  1458                           	opt stack 0
  1459                           
  1460                           ; 1 bytes @ 0x2A
  1461  00008A                     	ds	1
  1462  00008B                     LCD_write_integer@zero_cleaning:
  1463                           	opt stack 0
  1464  00008B                     ___flmul@aexp:
  1465                           	opt stack 0
  1466  00008B                     ___fldiv@rem:
  1467                           	opt stack 0
  1468                           
  1469                           ; 4 bytes @ 0x2B
  1470  00008B                     	ds	1
  1471  00008C                     ??_LCD_write_integer:
  1472  00008C                     ___flmul@grs:
  1473                           	opt stack 0
  1474                           
  1475                           ; 4 bytes @ 0x2C
  1476  00008C                     	ds	3
  1477  00008F                     ___fldiv@new_exp:
  1478                           	opt stack 0
  1479                           
  1480                           ; 2 bytes @ 0x2F
  1481  00008F                     	ds	1
  1482  000090                     ___flmul@bexp:
  1483                           	opt stack 0
  1484                           
  1485                           ; 1 bytes @ 0x30
  1486  000090                     	ds	1
  1487  000091                     ___fldiv@grs:
  1488                           	opt stack 0
  1489  000091                     ___flmul@prod:
  1490                           	opt stack 0
  1491  000091                     LCD_write_integer@convertedInt:
  1492                           	opt stack 0
  1493                           
  1494                           ; 6 bytes @ 0x31
  1495  000091                     	ds	4
  1496  000095                     ___fldiv@bexp:
  1497                           	opt stack 0
  1498  000095                     ___flmul@temp:
  1499                           	opt stack 0
  1500                           
  1501                           ; 2 bytes @ 0x35
  1502  000095                     	ds	1
  1503  000096                     ___fldiv@aexp:
  1504                           	opt stack 0
  1505                           
  1506                           ; 1 bytes @ 0x36
  1507  000096                     	ds	1
  1508  000097                     ?_fround:
  1509                           	opt stack 0
  1510  000097                     ?_scale:
  1511                           	opt stack 0
  1512  000097                     ?___flneg:
  1513                           	opt stack 0
  1514  000097                     LCD_write_integer@index:
  1515                           	opt stack 0
  1516  000097                     ___flneg@f1:
  1517                           	opt stack 0
  1518                           
  1519                           ; 4 bytes @ 0x37
  1520  000097                     	ds	4
  1521  00009B                     _fround$4255:
  1522                           	opt stack 0
  1523  00009B                     _scale$4256:
  1524                           	opt stack 0
  1525                           
  1526                           ; 4 bytes @ 0x3B
  1527  00009B                     	ds	4
  1528  00009F                     scale@scl:
  1529                           	opt stack 0
  1530  00009F                     _fround$4254:
  1531                           	opt stack 0
  1532                           
  1533                           ; 4 bytes @ 0x3F
  1534  00009F                     	ds	4
  1535  0000A3                     fround@prec:
  1536                           	opt stack 0
  1537                           
  1538                           ; 1 bytes @ 0x43
  1539  0000A3                     	ds	1
  1540  0000A4                     ?___fladd:
  1541                           	opt stack 0
  1542  0000A4                     ___fladd@b:
  1543                           	opt stack 0
  1544                           
  1545                           ; 4 bytes @ 0x44
  1546  0000A4                     	ds	4
  1547  0000A8                     ___fladd@a:
  1548                           	opt stack 0
  1549                           
  1550                           ; 4 bytes @ 0x48
  1551  0000A8                     	ds	4
  1552  0000AC                     ??___fladd:
  1553                           
  1554                           ; 0 bytes @ 0x4C
  1555  0000AC                     	ds	8
  1556  0000B4                     ___fladd@signs:
  1557                           	opt stack 0
  1558                           
  1559                           ; 1 bytes @ 0x54
  1560  0000B4                     	ds	1
  1561  0000B5                     ___fladd@aexp:
  1562                           	opt stack 0
  1563                           
  1564                           ; 1 bytes @ 0x55
  1565  0000B5                     	ds	1
  1566  0000B6                     ___fladd@bexp:
  1567                           	opt stack 0
  1568                           
  1569                           ; 1 bytes @ 0x56
  1570  0000B6                     	ds	1
  1571  0000B7                     ___fladd@grs:
  1572                           	opt stack 0
  1573                           
  1574                           ; 1 bytes @ 0x57
  1575  0000B7                     	ds	1
  1576  0000B8                     ?___flsub:
  1577                           	opt stack 0
  1578  0000B8                     ?___fltol:
  1579                           	opt stack 0
  1580  0000B8                     ___fltol@f1:
  1581                           	opt stack 0
  1582  0000B8                     ___flsub@b:
  1583                           	opt stack 0
  1584                           
  1585                           ; 4 bytes @ 0x58
  1586  0000B8                     	ds	4
  1587  0000BC                     ??___fltol:
  1588  0000BC                     ___flsub@a:
  1589                           	opt stack 0
  1590                           
  1591                           ; 4 bytes @ 0x5C
  1592  0000BC                     	ds	4
  1593  0000C0                     ___fltol@sign1:
  1594                           	opt stack 0
  1595                           
  1596                           ; 1 bytes @ 0x60
  1597  0000C0                     	ds	1
  1598  0000C1                     ___fltol@exp1:
  1599                           	opt stack 0
  1600                           
  1601                           ; 1 bytes @ 0x61
  1602  0000C1                     	ds	1
  1603  0000C2                     ?_sprintf:
  1604                           	opt stack 0
  1605  0000C2                     sprintf@sp:
  1606                           	opt stack 0
  1607                           
  1608                           ; 2 bytes @ 0x62
  1609  0000C2                     	ds	2
  1610  0000C4                     sprintf@f:
  1611                           	opt stack 0
  1612                           
  1613                           ; 2 bytes @ 0x64
  1614  0000C4                     	ds	6
  1615  0000CA                     ??_sprintf:
  1616                           
  1617                           ; 0 bytes @ 0x6A
  1618  0000CA                     	ds	2
  1619  0000CC                     tblptru	equ	0xFF8
  1620                           tblptrh	equ	0xFF7
  1621                           tblptrl	equ	0xFF6
  1622                           tablat	equ	0xFF5
  1623                           postinc0	equ	0xFEE
  1624                           wreg	equ	0xFE8
  1625                           
  1626                           ; 0 bytes @ 0x6C
  1627                           
  1628                           	psect	cstackCOMRAM
  1629  000027                     __pcstackCOMRAM:
  1630                           	opt stack 0
  1631  000027                     ??_ISR_bassa:
  1632  000027                     
  1633                           ; 1 bytes @ 0x0
  1634  000027                     	ds	17
  1635  000038                     _CANisRxReady$3253:
  1636                           	opt stack 0
  1637  000038                     i2_CANisTxReady$3251:
  1638                           	opt stack 0
  1639  000038                     CANreceiveMessage@msg:
  1640                           	opt stack 0
  1641  000038                     i2CANsendMessage@identifier:
  1642                           	opt stack 0
  1643                           
  1644                           ; 4 bytes @ 0x11
  1645  000038                     	ds	2
  1646  00003A                     ??_CANreceiveMessage:
  1647                           
  1648                           ; 0 bytes @ 0x13
  1649  00003A                     	ds	2
  1650  00003C                     i2CANsendMessage@data:
  1651                           	opt stack 0
  1652                           
  1653                           ; 2 bytes @ 0x15
  1654  00003C                     	ds	2
  1655  00003E                     i2CANsendMessage@dataLength:
  1656                           	opt stack 0
  1657                           
  1658                           ; 1 bytes @ 0x17
  1659  00003E                     	ds	1
  1660  00003F                     i2CANsendMessage@flags:
  1661                           	opt stack 0
  1662                           
  1663                           ; 1 bytes @ 0x18
  1664  00003F                     	ds	1
  1665  000040                     ??i2_CANsendMessage:
  1666                           
  1667                           ; 0 bytes @ 0x19
  1668  000040                     	ds	2
  1669  000042                     CANreceiveMessage@error:
  1670                           	opt stack 0
  1671                           
  1672                           ; 1 bytes @ 0x1B
  1673  000042                     	ds	1
  1674  000043                     CANreceiveMessage@tamp:
  1675                           	opt stack 0
  1676                           
  1677                           ; 1 bytes @ 0x1C
  1678  000043                     	ds	1
  1679  000044                     i2CANsendMessage@tamp:
  1680                           	opt stack 0
  1681                           
  1682                           ; 4 bytes @ 0x1D
  1683  000044                     	ds	4
  1684  000048                     ISR_alta@i:
  1685                           	opt stack 0
  1686                           
  1687                           ; 1 bytes @ 0x21
  1688  000048                     	ds	1
  1689                           tblptru	equ	0xFF8
  1690                           tblptrh	equ	0xFF7
  1691                           tblptrl	equ	0xFF6
  1692                           tablat	equ	0xFF5
  1693                           postinc0	equ	0xFEE
  1694                           wreg	equ	0xFE8
  1695                           
  1696 ;;
  1697 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1698 ;;
  1699 ;; *************** function _main *****************
  1700 ;; Defined at:
  1701 ;;		line 201 in file "RemoteCan.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;		None
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;		None               void
  1708 ;; Registers used:
  1709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1717 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1718 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1719 ;;Total ram usage:        8 bytes
  1720 ;; Hardware stack levels required when called:   11
  1721 ;; This function calls:
  1722 ;;		_CAN_Rx
  1723 ;;		_CAN_Tx
  1724 ;;		_CANisTxReady
  1725 ;;		_CANsendMessage
  1726 ;;		_F1_Button_Polling
  1727 ;;		_F2_Button_Polling
  1728 ;;		_Joystick_Polling
  1729 ;;		_LCD_End
  1730 ;;		_LCD_Gap
  1731 ;;		_LCD_Handler
  1732 ;;		_LCD_Park
  1733 ;;		_LCD_Parking
  1734 ;;		_LCD_goto_line
  1735 ;;		_LCD_initialize
  1736 ;;		_LCD_write_message
  1737 ;;		_PWR_Button_Polling
  1738 ;;		___fladd
  1739 ;;		___flmul
  1740 ;;		___flneg
  1741 ;;		___fltol
  1742 ;;		___xxtofl
  1743 ;;		_board_initialization
  1744 ;;		_delay_ms
  1745 ;; This function is called by:
  1746 ;;		Startup code after reset
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text0
  1751  011B26                     __ptext0:
  1752                           	opt stack 0
  1753  011B26                     _main:
  1754                           	opt stack 20
  1755                           
  1756                           ;RemoteCan.c: 202: board_initialization();
  1757                           
  1758                           ;incstack = 0
  1759  011B26  ECBD  F0AD         	call	_board_initialization	;wreg free
  1760                           
  1761                           ;RemoteCan.c: 210: JoystickConstants[0] = 0.703;
  1762  011B2A  0ECF               	movlw	207
  1763  011B2C  0100               	movlb	0	; () banked
  1764  011B2E  6FCC               	movwf	_JoystickConstants& (0+255),b	;volatile
  1765  011B30  0EF7               	movlw	247
  1766  011B32  6FCD               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1767  011B34  0E33               	movlw	51
  1768  011B36  6FCE               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1769  011B38  0E3F               	movlw	63
  1770  011B3A  6FCF               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;RemoteCan.c: 211: JoystickConstants[1] = 15;
  1774  011B3C  0E00               	movlw	0
  1775  011B3E  0100               	movlb	0	; () banked
  1776  011B40  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1777  011B42  0E00               	movlw	0
  1778  011B44  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1779  011B46  0E70               	movlw	112
  1780  011B48  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1781  011B4A  0E41               	movlw	65
  1782  011B4C  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;RemoteCan.c: 213: data_brake [1] = 0;
  1786  011B4E  0E00               	movlw	0
  1787  011B50  6E27               	movwf	_data_brake+1,c
  1788  011B52                     l9236:
  1789                           
  1790                           ;RemoteCan.c: 218: PWR_Button_Polling();
  1791  011B52  ECFF  F0B1         	call	_PWR_Button_Polling	;wreg free
  1792                           
  1793                           ;RemoteCan.c: 219: F1_Button_Polling();
  1794  011B56  EC29  F0B2         	call	_F1_Button_Polling	;wreg free
  1795                           
  1796                           ;RemoteCan.c: 220: F2_Button_Polling();
  1797  011B5A  EC1B  F0B2         	call	_F2_Button_Polling	;wreg free
  1798                           
  1799                           ;RemoteCan.c: 223: if (power_switch == 0) {
  1800  011B5E  B44A               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1801  011B60  D099               	goto	l804
  1802                           
  1803                           ;RemoteCan.c: 224: dir = 1;
  1804  011B62  0E01               	movlw	1
  1805  011B64  0100               	movlb	0	; () banked
  1806  011B66  6FE4               	movwf	_dir& (0+255),b	;volatile
  1807                           
  1808                           ;RemoteCan.c: 225: set_speed = 0;
  1809  011B68  0E00               	movlw	0
  1810  011B6A  0100               	movlb	0	; () banked
  1811  011B6C  6FE3               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1812  011B6E  0E00               	movlw	0
  1813  011B70  6FE2               	movwf	_set_speed& (0+255),b	;volatile
  1814                           
  1815                           ;RemoteCan.c: 226: data_steering [0] = 90;
  1816  011B72  0E5A               	movlw	90
  1817  011B74  0100               	movlb	0	; () banked
  1818  011B76  6FEA               	movwf	_data_steering& (0+255),b
  1819                           
  1820                           ;RemoteCan.c: 227: data_brake [0] = 3;
  1821  011B78  0E03               	movlw	3
  1822  011B7A  6E26               	movwf	_data_brake,c
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;RemoteCan.c: 228: CAN_Tx();
  1826  011B7C  EC09  F0AD         	call	_CAN_Tx	;wreg free
  1827                           
  1828                           ;RemoteCan.c: 229: PORTDbits.RD6 = 0;
  1829  011B80  9C83               	bcf	3971,6,c	;volatile
  1830                           
  1831                           ;RemoteCan.c: 230: PORTDbits.RD5 = 0;
  1832  011B82  9A83               	bcf	3971,5,c	;volatile
  1833                           
  1834                           ;RemoteCan.c: 231: LCD_initialize(16);
  1835  011B84  0E10               	movlw	16
  1836  011B86  EC3A  F0AA         	call	_LCD_initialize
  1837                           
  1838                           ;RemoteCan.c: 232: LCD_goto_line(1);
  1839  011B8A  0E01               	movlw	1
  1840  011B8C  EC77  F0AB         	call	_LCD_goto_line
  1841                           
  1842                           ;RemoteCan.c: 233: LCD_write_message("====================");
  1843  011B90  0E7F               	movlw	low STR_1
  1844  011B92  0100               	movlb	0	; () banked
  1845  011B94  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1846  011B96  0EFF               	movlw	high STR_1
  1847  011B98  0100               	movlb	0	; () banked
  1848  011B9A  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1849  011B9C  EC59  F0B1         	call	_LCD_write_message	;wreg free
  1850                           
  1851                           ;RemoteCan.c: 234: LCD_goto_line(2);
  1852  011BA0  0E02               	movlw	2
  1853  011BA2  EC77  F0AB         	call	_LCD_goto_line
  1854                           
  1855                           ;RemoteCan.c: 235: LCD_write_message("==> VEHICLE  OFF <==");
  1856  011BA6  0E55               	movlw	low STR_2
  1857  011BA8  0100               	movlb	0	; () banked
  1858  011BAA  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1859  011BAC  0EFF               	movlw	high STR_2
  1860  011BAE  0100               	movlb	0	; () banked
  1861  011BB0  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1862  011BB2  EC59  F0B1         	call	_LCD_write_message	;wreg free
  1863                           
  1864                           ;RemoteCan.c: 236: LCD_goto_line(3);
  1865  011BB6  0E03               	movlw	3
  1866  011BB8  EC77  F0AB         	call	_LCD_goto_line
  1867                           
  1868                           ;RemoteCan.c: 237: LCD_write_message("  Press the button  ");
  1869  011BBC  0E98               	movlw	low STR_3
  1870  011BBE  0100               	movlb	0	; () banked
  1871  011BC0  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1872  011BC2  0EFE               	movlw	high STR_3
  1873  011BC4  0100               	movlb	0	; () banked
  1874  011BC6  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1875  011BC8  EC59  F0B1         	call	_LCD_write_message	;wreg free
  1876                           
  1877                           ;RemoteCan.c: 238: LCD_goto_line(4);
  1878  011BCC  0E04               	movlw	4
  1879  011BCE  EC77  F0AB         	call	_LCD_goto_line
  1880                           
  1881                           ;RemoteCan.c: 239: LCD_write_message("====================");
  1882  011BD2  0E7F               	movlw	low STR_1
  1883  011BD4  0100               	movlb	0	; () banked
  1884  011BD6  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1885  011BD8  0EFF               	movlw	high STR_1
  1886  011BDA  0100               	movlb	0	; () banked
  1887  011BDC  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1888  011BDE  EC59  F0B1         	call	_LCD_write_message	;wreg free
  1889                           
  1890                           ;RemoteCan.c: 240: while (power_switch == 0) {
  1891  011BE2  D054               	goto	l9280
  1892  011BE4                     l9270:
  1893                           
  1894                           ;RemoteCan.c: 241: if ((time_counter - pr_time_1) >= 30) {
  1895  011BE4  C0D8  F14D         	movff	_pr_time_1,??_main	;volatile
  1896  011BE8  C0D9  F14E         	movff	_pr_time_1+1,??_main+1	;volatile
  1897  011BEC  C0DA  F14F         	movff	_pr_time_1+2,??_main+2	;volatile
  1898  011BF0  C0DB  F150         	movff	_pr_time_1+3,??_main+3	;volatile
  1899  011BF4  0101               	movlb	1	; () banked
  1900  011BF6  1F4D               	comf	??_main& (0+255),f,b
  1901  011BF8  1F4E               	comf	(??_main+1)& (0+255),f,b
  1902  011BFA  1F4F               	comf	(??_main+2)& (0+255),f,b
  1903  011BFC  1F50               	comf	(??_main+3)& (0+255),f,b
  1904  011BFE  2B4D               	incf	??_main& (0+255),f,b
  1905  011C00  0E00               	movlw	0
  1906  011C02  234E               	addwfc	(??_main+1)& (0+255),f,b
  1907  011C04  234F               	addwfc	(??_main+2)& (0+255),f,b
  1908  011C06  2350               	addwfc	(??_main+3)& (0+255),f,b
  1909  011C08  5019               	movf	_time_counter,w,c	;volatile
  1910  011C0A  0101               	movlb	1	; () banked
  1911  011C0C  254D               	addwf	??_main& (0+255),w,b
  1912  011C0E  0101               	movlb	1	; () banked
  1913  011C10  6F51               	movwf	(??_main+4)& (0+255),b
  1914  011C12  501A               	movf	_time_counter+1,w,c	;volatile
  1915  011C14  0101               	movlb	1	; () banked
  1916  011C16  214E               	addwfc	(??_main+1)& (0+255),w,b
  1917  011C18  0101               	movlb	1	; () banked
  1918  011C1A  6F52               	movwf	(??_main+5)& (0+255),b
  1919  011C1C  501B               	movf	_time_counter+2,w,c	;volatile
  1920  011C1E  0101               	movlb	1	; () banked
  1921  011C20  214F               	addwfc	(??_main+2)& (0+255),w,b
  1922  011C22  0101               	movlb	1	; () banked
  1923  011C24  6F53               	movwf	(??_main+6)& (0+255),b
  1924  011C26  501C               	movf	_time_counter+3,w,c	;volatile
  1925  011C28  0101               	movlb	1	; () banked
  1926  011C2A  2150               	addwfc	(??_main+3)& (0+255),w,b
  1927  011C2C  0101               	movlb	1	; () banked
  1928  011C2E  6F54               	movwf	(??_main+7)& (0+255),b
  1929  011C30  0101               	movlb	1	; () banked
  1930  011C32  5154               	movf	(??_main+7)& (0+255),w,b
  1931  011C34  0101               	movlb	1	; () banked
  1932  011C36  1153               	iorwf	(??_main+6)& (0+255),w,b
  1933  011C38  0101               	movlb	1	; () banked
  1934  011C3A  1152               	iorwf	(??_main+5)& (0+255),w,b
  1935  011C3C  E105               	bnz	u12260
  1936  011C3E  0E1E               	movlw	30
  1937  011C40  0101               	movlb	1	; () banked
  1938  011C42  5D51               	subwf	(??_main+4)& (0+255),w,b
  1939  011C44  A0D8               	btfss	status,0,c
  1940  011C46  D019               	goto	l9276
  1941  011C48                     u12260:
  1942                           
  1943                           ; BSR set to: 1
  1944                           ;RemoteCan.c: 242: pr_time_1 = time_counter;
  1945  011C48  C019  F0D8         	movff	_time_counter,_pr_time_1	;volatile
  1946  011C4C  C01A  F0D9         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1947  011C50  C01B  F0DA         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1948  011C54  C01C  F0DB         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1949                           
  1950                           ; BSR set to: 1
  1951                           ;RemoteCan.c: 243: PORTDbits.RD7 = ~PORTDbits.RD7;
  1952  011C58  AE83               	btfss	3971,7,c	;volatile
  1953  011C5A  D002               	goto	u12270
  1954  011C5C  0E01               	movlw	1
  1955  011C5E  D001               	goto	u12276
  1956  011C60                     u12270:
  1957  011C60  0E00               	movlw	0
  1958  011C62                     u12276:
  1959  011C62  0AFF               	xorlw	255
  1960  011C64  0101               	movlb	1	; () banked
  1961  011C66  6F4D               	movwf	??_main& (0+255),b
  1962  011C68  0101               	movlb	1	; () banked
  1963  011C6A  334D               	rrcf	??_main& (0+255),f,b
  1964  011C6C  334D               	rrcf	??_main& (0+255),f,b
  1965  011C6E  5083               	movf	3971,w,c	;volatile
  1966  011C70  0101               	movlb	1	; () banked
  1967  011C72  194D               	xorwf	??_main& (0+255),w,b
  1968  011C74  0B7F               	andlw	-129
  1969  011C76  194D               	xorwf	??_main& (0+255),w,b
  1970  011C78  6E83               	movwf	3971,c	;volatile
  1971  011C7A                     l9276:
  1972                           
  1973                           ; BSR set to: 1
  1974                           ;RemoteCan.c: 244: }
  1975                           ;RemoteCan.c: 245: PWR_Button_Polling();
  1976  011C7A  ECFF  F0B1         	call	_PWR_Button_Polling	;wreg free
  1977                           
  1978                           ;RemoteCan.c: 246: delay_ms(10);
  1979  011C7E  0E00               	movlw	0
  1980  011C80  0100               	movlb	0	; () banked
  1981  011C82  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1982  011C84  0E0A               	movlw	10
  1983  011C86  6F76               	movwf	delay_ms@value_ms& (0+255),b
  1984  011C88  EC05  F0B1         	call	_delay_ms	;wreg free
  1985  011C8C                     l9280:
  1986  011C8C  A44A               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1987  011C8E  D7AA               	goto	l9270
  1988                           
  1989                           ;RemoteCan.c: 247: }
  1990                           ;RemoteCan.c: 248: PORTDbits.RD7 = 0;
  1991  011C90  9E83               	bcf	3971,7,c	;volatile
  1992                           
  1993                           ;RemoteCan.c: 249: display_refresh = 1;
  1994  011C92  8E49               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  1995  011C94                     l804:
  1996                           
  1997                           ;RemoteCan.c: 250: }
  1998                           ;RemoteCan.c: 253: if (PORTAbits.RA2 == 1) {
  1999  011C94  A480               	btfss	3968,2,c	;volatile
  2000  011C96  D004               	goto	l809
  2001                           
  2002                           ;RemoteCan.c: 254: switch_position = 0;
  2003  011C98  0E00               	movlw	0
  2004  011C9A  0100               	movlb	0	; () banked
  2005  011C9C  6FE8               	movwf	_switch_position& (0+255),b	;volatile
  2006                           
  2007                           ;RemoteCan.c: 255: } else {
  2008  011C9E  D00D               	goto	l9288
  2009  011CA0                     l809:
  2010                           
  2011                           ;RemoteCan.c: 256: if (PORTAbits.RA3 == 0) {
  2012  011CA0  B680               	btfsc	3968,3,c	;volatile
  2013  011CA2  D005               	goto	l9286
  2014                           
  2015                           ;RemoteCan.c: 257: switch_position = 1;
  2016  011CA4  0E01               	movlw	1
  2017  011CA6  0100               	movlb	0	; () banked
  2018  011CA8  6FE8               	movwf	_switch_position& (0+255),b	;volatile
  2019                           
  2020                           ;RemoteCan.c: 258: dir = 1;
  2021  011CAA  0E01               	movlw	1
  2022  011CAC  D004               	goto	L1
  2023  011CAE                     l9286:
  2024                           
  2025                           ;RemoteCan.c: 260: switch_position = 2;
  2026  011CAE  0E02               	movlw	2
  2027  011CB0  0100               	movlb	0	; () banked
  2028  011CB2  6FE8               	movwf	_switch_position& (0+255),b	;volatile
  2029                           
  2030                           ;RemoteCan.c: 261: dir = 0;
  2031  011CB4  0E00               	movlw	0
  2032  011CB6                     L1:
  2033  011CB6  0100               	movlb	0	; () banked
  2034  011CB8  6FE4               	movwf	_dir& (0+255),b	;volatile
  2035  011CBA                     l9288:
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;RemoteCan.c: 262: }
  2039                           ;RemoteCan.c: 263: }
  2040                           ;RemoteCan.c: 266: if (F1_switch == 1) {
  2041  011CBA  A449               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  2042  011CBC  D0C4               	goto	l813
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;RemoteCan.c: 267: y = 0;
  2046  011CBE  944B               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  2047                           
  2048                           ;RemoteCan.c: 268: if ((x == 0)&&(F2_switch == 0)) {
  2049  011CC0  A24B               	btfss	_x/(0+8),_x& (0+7),c	;volatile
  2050                           
  2051                           ; BSR set to: 0
  2052  011CC2  B649               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2053  011CC4  D02D               	goto	l9306
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;RemoteCan.c: 269: space_available = 0;
  2057  011CC6  964A               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;RemoteCan.c: 270: parking_state = 1;
  2061  011CC8  0E01               	movlw	1
  2062  011CCA  0100               	movlb	0	; () banked
  2063  011CCC  6FE6               	movwf	_parking_state& (0+255),b	;volatile
  2064                           
  2065                           ;RemoteCan.c: 271: JoystickConstants[1] = 1;
  2066  011CCE  0E00               	movlw	0
  2067  011CD0  0100               	movlb	0	; () banked
  2068  011CD2  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2069  011CD4  0E00               	movlw	0
  2070  011CD6  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2071  011CD8  0E80               	movlw	128
  2072  011CDA  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2073  011CDC  0E3F               	movlw	63
  2074  011CDE  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2075  011CE0                     l9298:
  2076  011CE0  ECCD  F0B1         	call	_CANisTxReady	;wreg free
  2077  011CE4  0900               	iorlw	0
  2078  011CE6  B4D8               	btfsc	status,2,c
  2079  011CE8  D7FB               	goto	l9298
  2080                           
  2081                           ;RemoteCan.c: 273: park_assist_state[0] = 0b00000001;
  2082  011CEA  0E01               	movlw	1
  2083  011CEC  0101               	movlb	1	; () banked
  2084  011CEE  6F2C               	movwf	_park_assist_state& (0+255),b
  2085                           
  2086                           ; BSR set to: 1
  2087                           ;RemoteCan.c: 274: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2088  011CF0  0E0A               	movlw	10
  2089  011CF2  0100               	movlb	0	; () banked
  2090  011CF4  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  2091  011CF6  0E00               	movlw	0
  2092  011CF8  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2093  011CFA  0E00               	movlw	0
  2094  011CFC  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2095  011CFE  0E00               	movlw	0
  2096  011D00  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2097  011D02  0E2C               	movlw	low _park_assist_state
  2098  011D04  0100               	movlb	0	; () banked
  2099  011D06  6F74               	movwf	CANsendMessage@data& (0+255),b
  2100  011D08  0E01               	movlw	high _park_assist_state
  2101  011D0A  0100               	movlb	0	; () banked
  2102  011D0C  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  2103  011D0E  0E08               	movlw	8
  2104  011D10  0100               	movlb	0	; () banked
  2105  011D12  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  2106  011D14  0EBC               	movlw	188
  2107  011D16  0100               	movlb	0	; () banked
  2108  011D18  6F77               	movwf	CANsendMessage@flags& (0+255),b
  2109  011D1A  ECCD  F089         	call	_CANsendMessage	;wreg free
  2110                           
  2111                           ;RemoteCan.c: 275: x = 1;
  2112  011D1E  824B               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  2113  011D20                     l9306:
  2114                           
  2115                           ;RemoteCan.c: 276: }
  2116                           ;RemoteCan.c: 278: if ((F2_switch == 1)&&(space_available == 1)&&(space_gap_reached == 1
      +                          )) {
  2117  011D20  B649               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2118  011D22  A64A               	btfss	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2119  011D24  D029               	goto	l818
  2120  011D26  A84A               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2121  011D28  D027               	goto	l818
  2122                           
  2123                           ;RemoteCan.c: 279: if (z == 0) {
  2124  011D2A  B64B               	btfsc	_z/(0+8),_z& (0+7),c	;volatile
  2125  011D2C  D026               	goto	l9324
  2126                           
  2127                           ;RemoteCan.c: 280: parking_message_ID = 4;
  2128  011D2E  0E04               	movlw	4
  2129  011D30  0100               	movlb	0	; () banked
  2130  011D32  6FE5               	movwf	_parking_message_ID& (0+255),b	;volatile
  2131                           
  2132                           ;RemoteCan.c: 281: parking_state = 2;
  2133  011D34  0E02               	movlw	2
  2134  011D36  0100               	movlb	0	; () banked
  2135  011D38  6FE6               	movwf	_parking_state& (0+255),b	;volatile
  2136  011D3A                     l9316:
  2137  011D3A  ECCD  F0B1         	call	_CANisTxReady	;wreg free
  2138  011D3E  0900               	iorlw	0
  2139  011D40  B4D8               	btfsc	status,2,c
  2140  011D42  D7FB               	goto	l9316
  2141                           
  2142                           ;RemoteCan.c: 283: CANsendMessage(0b00000001100, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  2143  011D44  0E0C               	movlw	12
  2144  011D46  0100               	movlb	0	; () banked
  2145  011D48  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  2146  011D4A  0E00               	movlw	0
  2147  011D4C  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2148  011D4E  0E00               	movlw	0
  2149  011D50  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2150  011D52  0E00               	movlw	0
  2151  011D54  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2152  011D56  0E25               	movlw	low _data
  2153  011D58  0100               	movlb	0	; () banked
  2154  011D5A  6F74               	movwf	CANsendMessage@data& (0+255),b
  2155  011D5C  0E00               	movlw	high _data
  2156  011D5E  0100               	movlb	0	; () banked
  2157  011D60  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  2158  011D62  0E08               	movlw	8
  2159  011D64  0100               	movlb	0	; () banked
  2160  011D66  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  2161  011D68  0EBC               	movlw	188
  2162  011D6A  0100               	movlb	0	; () banked
  2163  011D6C  6F77               	movwf	CANsendMessage@flags& (0+255),b
  2164  011D6E  ECCD  F089         	call	_CANsendMessage	;wreg free
  2165                           
  2166                           ;RemoteCan.c: 284: x = 0;
  2167  011D72  924B               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2168                           
  2169                           ;RemoteCan.c: 285: z = 1;
  2170  011D74  864B               	bsf	_z/(0+8),_z& (0+7),c	;volatile
  2171                           
  2172                           ;RemoteCan.c: 286: }
  2173                           ;RemoteCan.c: 287: } else {
  2174  011D76  D001               	goto	l9324
  2175  011D78                     l818:
  2176                           
  2177                           ;RemoteCan.c: 288: z = 0;
  2178  011D78  964B               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2179  011D7A                     l9324:
  2180                           
  2181                           ;RemoteCan.c: 289: }
  2182                           ;RemoteCan.c: 291: if ((time_counter - pr_time_5) >= 30) {
  2183  011D7A  C011  F14D         	movff	_pr_time_5,??_main	;volatile
  2184  011D7E  C012  F14E         	movff	_pr_time_5+1,??_main+1	;volatile
  2185  011D82  C013  F14F         	movff	_pr_time_5+2,??_main+2	;volatile
  2186  011D86  C014  F150         	movff	_pr_time_5+3,??_main+3	;volatile
  2187  011D8A  0101               	movlb	1	; () banked
  2188  011D8C  1F4D               	comf	??_main& (0+255),f,b
  2189  011D8E  1F4E               	comf	(??_main+1)& (0+255),f,b
  2190  011D90  1F4F               	comf	(??_main+2)& (0+255),f,b
  2191  011D92  1F50               	comf	(??_main+3)& (0+255),f,b
  2192  011D94  2B4D               	incf	??_main& (0+255),f,b
  2193  011D96  0E00               	movlw	0
  2194  011D98  234E               	addwfc	(??_main+1)& (0+255),f,b
  2195  011D9A  234F               	addwfc	(??_main+2)& (0+255),f,b
  2196  011D9C  2350               	addwfc	(??_main+3)& (0+255),f,b
  2197  011D9E  5019               	movf	_time_counter,w,c	;volatile
  2198  011DA0  0101               	movlb	1	; () banked
  2199  011DA2  254D               	addwf	??_main& (0+255),w,b
  2200  011DA4  0101               	movlb	1	; () banked
  2201  011DA6  6F51               	movwf	(??_main+4)& (0+255),b
  2202  011DA8  501A               	movf	_time_counter+1,w,c	;volatile
  2203  011DAA  0101               	movlb	1	; () banked
  2204  011DAC  214E               	addwfc	(??_main+1)& (0+255),w,b
  2205  011DAE  0101               	movlb	1	; () banked
  2206  011DB0  6F52               	movwf	(??_main+5)& (0+255),b
  2207  011DB2  501B               	movf	_time_counter+2,w,c	;volatile
  2208  011DB4  0101               	movlb	1	; () banked
  2209  011DB6  214F               	addwfc	(??_main+2)& (0+255),w,b
  2210  011DB8  0101               	movlb	1	; () banked
  2211  011DBA  6F53               	movwf	(??_main+6)& (0+255),b
  2212  011DBC  501C               	movf	_time_counter+3,w,c	;volatile
  2213  011DBE  0101               	movlb	1	; () banked
  2214  011DC0  2150               	addwfc	(??_main+3)& (0+255),w,b
  2215  011DC2  0101               	movlb	1	; () banked
  2216  011DC4  6F54               	movwf	(??_main+7)& (0+255),b
  2217  011DC6  0101               	movlb	1	; () banked
  2218  011DC8  5154               	movf	(??_main+7)& (0+255),w,b
  2219  011DCA  0101               	movlb	1	; () banked
  2220  011DCC  1153               	iorwf	(??_main+6)& (0+255),w,b
  2221  011DCE  0101               	movlb	1	; () banked
  2222  011DD0  1152               	iorwf	(??_main+5)& (0+255),w,b
  2223  011DD2  E105               	bnz	u12400
  2224  011DD4  0E1E               	movlw	30
  2225  011DD6  0101               	movlb	1	; () banked
  2226  011DD8  5D51               	subwf	(??_main+4)& (0+255),w,b
  2227  011DDA  A0D8               	btfss	status,0,c
  2228  011DDC  D06C               	goto	l9348
  2229  011DDE                     u12400:
  2230                           
  2231                           ; BSR set to: 1
  2232                           ;RemoteCan.c: 292: pr_time_5 = time_counter;
  2233  011DDE  C019  F011         	movff	_time_counter,_pr_time_5	;volatile
  2234  011DE2  C01A  F012         	movff	_time_counter+1,_pr_time_5+1	;volatile
  2235  011DE6  C01B  F013         	movff	_time_counter+2,_pr_time_5+2	;volatile
  2236  011DEA  C01C  F014         	movff	_time_counter+3,_pr_time_5+3	;volatile
  2237                           
  2238                           ;RemoteCan.c: 293: if (space_available == 0) {
  2239  011DEE  B64A               	btfsc	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2240  011DF0  D013               	goto	l825
  2241                           
  2242                           ; BSR set to: 1
  2243                           ;RemoteCan.c: 294: PORTDbits.RD6 = ~PORTDbits.RD6;
  2244  011DF2  AC83               	btfss	3971,6,c	;volatile
  2245  011DF4  D002               	goto	u12420
  2246  011DF6  0E01               	movlw	1
  2247  011DF8  D001               	goto	u12426
  2248  011DFA                     u12420:
  2249  011DFA  0E00               	movlw	0
  2250  011DFC                     u12426:
  2251  011DFC  0AFF               	xorlw	255
  2252  011DFE  0101               	movlb	1	; () banked
  2253  011E00  6F4D               	movwf	??_main& (0+255),b
  2254  011E02  0101               	movlb	1	; () banked
  2255  011E04  3B4D               	swapf	??_main& (0+255),f,b
  2256  011E06  474D               	rlncf	??_main& (0+255),f,b
  2257  011E08  474D               	rlncf	??_main& (0+255),f,b
  2258  011E0A  5083               	movf	3971,w,c	;volatile
  2259  011E0C  0101               	movlb	1	; () banked
  2260  011E0E  194D               	xorwf	??_main& (0+255),w,b
  2261  011E10  0BBF               	andlw	-65
  2262  011E12  194D               	xorwf	??_main& (0+255),w,b
  2263  011E14  6E83               	movwf	3971,c	;volatile
  2264  011E16  D04E               	goto	l9346
  2265  011E18                     l825:
  2266                           
  2267                           ; BSR set to: 1
  2268                           ;RemoteCan.c: 297: PORTDbits.RD6 = 1;
  2269  011E18  8C83               	bsf	3971,6,c	;volatile
  2270                           
  2271                           ;RemoteCan.c: 298: if (F2_switch == 0) {
  2272  011E1A  B649               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2273  011E1C  D012               	goto	l827
  2274                           
  2275                           ; BSR set to: 1
  2276                           ;RemoteCan.c: 299: PORTDbits.RD5 = ~PORTDbits.RD5;
  2277  011E1E  AA83               	btfss	3971,5,c	;volatile
  2278  011E20  D002               	goto	u12440
  2279  011E22  0E01               	movlw	1
  2280  011E24  D001               	goto	u12446
  2281  011E26                     u12440:
  2282  011E26  0E00               	movlw	0
  2283  011E28                     u12446:
  2284  011E28  0AFF               	xorlw	255
  2285  011E2A  0101               	movlb	1	; () banked
  2286  011E2C  6F4D               	movwf	??_main& (0+255),b
  2287  011E2E  0101               	movlb	1	; () banked
  2288  011E30  3B4D               	swapf	??_main& (0+255),f,b
  2289  011E32  474D               	rlncf	??_main& (0+255),f,b
  2290  011E34  5083               	movf	3971,w,c	;volatile
  2291  011E36  0101               	movlb	1	; () banked
  2292  011E38  194D               	xorwf	??_main& (0+255),w,b
  2293  011E3A  0BDF               	andlw	-33
  2294  011E3C  194D               	xorwf	??_main& (0+255),w,b
  2295  011E3E  6E83               	movwf	3971,c	;volatile
  2296                           
  2297                           ;RemoteCan.c: 300: } else {
  2298  011E40  D03A               	goto	l9348
  2299  011E42                     l827:
  2300                           
  2301                           ; BSR set to: 1
  2302                           ;RemoteCan.c: 301: PORTDbits.RD5 = 1;
  2303  011E42  8A83               	bsf	3971,5,c	;volatile
  2304                           
  2305                           ; BSR set to: 1
  2306                           ;RemoteCan.c: 303: }
  2307                           ;RemoteCan.c: 304: }
  2308                           ;RemoteCan.c: 305: }
  2309                           ;RemoteCan.c: 306: } else {
  2310                           
  2311                           ; BSR set to: 1
  2312                           
  2313                           ; BSR set to: 1
  2314  011E44  D038               	goto	l9348
  2315  011E46                     l813:
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;RemoteCan.c: 307: x = 0;
  2319  011E46  924B               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2320                           
  2321                           ;RemoteCan.c: 308: z = 0;
  2322  011E48  964B               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2323                           
  2324                           ;RemoteCan.c: 309: parking_message_E = 0;
  2325  011E4A  924A               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  2326                           
  2327                           ;RemoteCan.c: 310: F2_switch = 0;
  2328  011E4C  9649               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2329                           
  2330                           ;RemoteCan.c: 311: space_available = 0;
  2331  011E4E  964A               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2332                           
  2333                           ;RemoteCan.c: 312: space_gap_reached = 0;
  2334  011E50  984A               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2335                           
  2336                           ;RemoteCan.c: 313: PORTDbits.RD5 = 0;
  2337  011E52  9A83               	bcf	3971,5,c	;volatile
  2338                           
  2339                           ;RemoteCan.c: 314: PORTDbits.RD6 = 0;
  2340  011E54  9C83               	bcf	3971,6,c	;volatile
  2341                           
  2342                           ;RemoteCan.c: 315: if (y == 0) {
  2343  011E56  B44B               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  2344  011E58  D02C               	goto	l9344
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;RemoteCan.c: 316: parking_state = 0;
  2348  011E5A  0E00               	movlw	0
  2349  011E5C  0100               	movlb	0	; () banked
  2350  011E5E  6FE6               	movwf	_parking_state& (0+255),b	;volatile
  2351                           
  2352                           ;RemoteCan.c: 317: JoystickConstants[1] = 15;
  2353  011E60  0E00               	movlw	0
  2354  011E62  0100               	movlb	0	; () banked
  2355  011E64  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2356  011E66  0E00               	movlw	0
  2357  011E68  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2358  011E6A  0E70               	movlw	112
  2359  011E6C  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2360  011E6E  0E41               	movlw	65
  2361  011E70  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2362  011E72                     l9336:
  2363  011E72  ECCD  F0B1         	call	_CANisTxReady	;wreg free
  2364  011E76  0900               	iorlw	0
  2365  011E78  B4D8               	btfsc	status,2,c
  2366  011E7A  D7FB               	goto	l9336
  2367                           
  2368                           ;RemoteCan.c: 319: park_assist_state[0] = 0b00000000;
  2369  011E7C  0E00               	movlw	0
  2370  011E7E  0101               	movlb	1	; () banked
  2371  011E80  6F2C               	movwf	_park_assist_state& (0+255),b
  2372                           
  2373                           ; BSR set to: 1
  2374                           ;RemoteCan.c: 320: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2375  011E82  0E0A               	movlw	10
  2376  011E84  0100               	movlb	0	; () banked
  2377  011E86  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  2378  011E88  0E00               	movlw	0
  2379  011E8A  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2380  011E8C  0E00               	movlw	0
  2381  011E8E  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2382  011E90  0E00               	movlw	0
  2383  011E92  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2384  011E94  0E2C               	movlw	low _park_assist_state
  2385  011E96  0100               	movlb	0	; () banked
  2386  011E98  6F74               	movwf	CANsendMessage@data& (0+255),b
  2387  011E9A  0E01               	movlw	high _park_assist_state
  2388  011E9C  0100               	movlb	0	; () banked
  2389  011E9E  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  2390  011EA0  0E08               	movlw	8
  2391  011EA2  0100               	movlb	0	; () banked
  2392  011EA4  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  2393  011EA6  0EBC               	movlw	188
  2394  011EA8  0100               	movlb	0	; () banked
  2395  011EAA  6F77               	movwf	CANsendMessage@flags& (0+255),b
  2396  011EAC  ECCD  F089         	call	_CANsendMessage	;wreg free
  2397                           
  2398                           ;RemoteCan.c: 321: y = 1;
  2399  011EB0  844B               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2400  011EB2                     l9344:
  2401                           
  2402                           ;RemoteCan.c: 322: }
  2403                           ;RemoteCan.c: 323: PORTDbits.RD6 = 0;
  2404  011EB2  9C83               	bcf	3971,6,c	;volatile
  2405  011EB4                     l9346:
  2406                           
  2407                           ;RemoteCan.c: 324: PORTDbits.RD5 = 0;
  2408  011EB4  9A83               	bcf	3971,5,c	;volatile
  2409  011EB6                     l9348:
  2410                           
  2411                           ;RemoteCan.c: 325: }
  2412                           ;RemoteCan.c: 327: Joystick_Polling();
  2413  011EB6  EC2D  F0B0         	call	_Joystick_Polling	;wreg free
  2414                           
  2415                           ;RemoteCan.c: 330: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2416  011EBA  0E00               	movlw	0
  2417  011EBC  0100               	movlb	0	; () banked
  2418  011EBE  6FA8               	movwf	___fladd@a& (0+255),b
  2419  011EC0  0E00               	movlw	0
  2420  011EC2  6FA9               	movwf	(___fladd@a+1)& (0+255),b
  2421  011EC4  0E34               	movlw	52
  2422  011EC6  6FAA               	movwf	(___fladd@a+2)& (0+255),b
  2423  011EC8  0E43               	movlw	67
  2424  011ECA  6FAB               	movwf	(___fladd@a+3)& (0+255),b
  2425  011ECC  C0CC  F082         	movff	_JoystickConstants,___flmul@a	;volatile
  2426  011ED0  C0CD  F083         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  2427  011ED4  C0CE  F084         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  2428  011ED8  C0CF  F085         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  2429  011EDC  0100               	movlb	0	; () banked
  2430  011EDE  51DC               	movf	_JoystickValues& (0+255),w,b	;volatile
  2431  011EE0  0100               	movlb	0	; () banked
  2432  011EE2  6F70               	movwf	___xxtofl@val& (0+255),b
  2433  011EE4  6B71               	clrf	(___xxtofl@val+1)& (0+255),b
  2434  011EE6  6B72               	clrf	(___xxtofl@val+2)& (0+255),b
  2435  011EE8  6B73               	clrf	(___xxtofl@val+3)& (0+255),b
  2436  011EEA  0E00               	movlw	0
  2437  011EEC  EC5E  F0A4         	call	___xxtofl
  2438  011EF0  C070  F07E         	movff	?___xxtofl,___flmul@b
  2439  011EF4  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  2440  011EF8  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  2441  011EFC  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  2442  011F00  ECD9  F09B         	call	___flmul	;wreg free
  2443  011F04  C07E  F097         	movff	?___flmul,___flneg@f1
  2444  011F08  C07F  F098         	movff	?___flmul+1,___flneg@f1+1
  2445  011F0C  C080  F099         	movff	?___flmul+2,___flneg@f1+2
  2446  011F10  C081  F09A         	movff	?___flmul+3,___flneg@f1+3
  2447  011F14  EC22  F0B1         	call	___flneg	;wreg free
  2448  011F18  C097  F0A4         	movff	?___flneg,___fladd@b
  2449  011F1C  C098  F0A5         	movff	?___flneg+1,___fladd@b+1
  2450  011F20  C099  F0A6         	movff	?___flneg+2,___fladd@b+2
  2451  011F24  C09A  F0A7         	movff	?___flneg+3,___fladd@b+3
  2452  011F28  EC85  F099         	call	___fladd	;wreg free
  2453  011F2C  C0A4  F0B8         	movff	?___fladd,___fltol@f1
  2454  011F30  C0A5  F0B9         	movff	?___fladd+1,___fltol@f1+1
  2455  011F34  C0A6  F0BA         	movff	?___fladd+2,___fltol@f1+2
  2456  011F38  C0A7  F0BB         	movff	?___fladd+3,___fltol@f1+3
  2457  011F3C  ECF1  F0AA         	call	___fltol	;wreg free
  2458  011F40  0100               	movlb	0	; () banked
  2459  011F42  51B8               	movf	?___fltol& (0+255),w,b
  2460  011F44  0100               	movlb	0	; () banked
  2461  011F46  6FEA               	movwf	_data_steering& (0+255),b
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;RemoteCan.c: 331: if (parking_state == 1) {
  2465  011F48  0100               	movlb	0	; () banked
  2466  011F4A  05E6               	decf	_parking_state& (0+255),w,b	;volatile
  2467  011F4C  A4D8               	btfss	status,2,c
  2468  011F4E  D05C               	goto	l834
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;RemoteCan.c: 332: if (steering_correction_dir == 1) {
  2472  011F50  AA4A               	btfss	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2473  011F52  D00F               	goto	l9358
  2474                           
  2475                           ; BSR set to: 0
  2476                           ;RemoteCan.c: 333: check = data_steering[0] + steering_correction;
  2477  011F54  0100               	movlb	0	; () banked
  2478  011F56  51E7               	movf	_steering_correction& (0+255),w,b	;volatile
  2479  011F58  C0EA  F14D         	movff	_data_steering,??_main
  2480  011F5C  0101               	movlb	1	; () banked
  2481  011F5E  6B4E               	clrf	(??_main+1)& (0+255),b
  2482  011F60  0101               	movlb	1	; () banked
  2483  011F62  274D               	addwf	??_main& (0+255),f,b
  2484  011F64  0E00               	movlw	0
  2485  011F66  234E               	addwfc	(??_main+1)& (0+255),f,b
  2486  011F68  C14D  F0D4         	movff	??_main,_check	;volatile
  2487  011F6C  C14E  F0D5         	movff	??_main+1,_check+1	;volatile
  2488  011F70  D01B               	goto	L2
  2489  011F72                     l9358:
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;RemoteCan.c: 335: check = data_steering[0] - steering_correction;
  2493  011F72  0100               	movlb	0	; () banked
  2494  011F74  51E7               	movf	_steering_correction& (0+255),w,b	;volatile
  2495  011F76  0101               	movlb	1	; () banked
  2496  011F78  6F4D               	movwf	??_main& (0+255),b
  2497  011F7A  6B4E               	clrf	(??_main+1)& (0+255),b
  2498  011F7C  0101               	movlb	1	; () banked
  2499  011F7E  1F4D               	comf	??_main& (0+255),f,b
  2500  011F80  1F4E               	comf	(??_main+1)& (0+255),f,b
  2501  011F82  4B4D               	infsnz	??_main& (0+255),f,b
  2502  011F84  2B4E               	incf	(??_main+1)& (0+255),f,b
  2503  011F86  0100               	movlb	0	; () banked
  2504  011F88  51EA               	movf	_data_steering& (0+255),w,b
  2505  011F8A  0101               	movlb	1	; () banked
  2506  011F8C  6F4F               	movwf	(??_main+2)& (0+255),b
  2507  011F8E  6B50               	clrf	(??_main+3)& (0+255),b
  2508  011F90  0101               	movlb	1	; () banked
  2509  011F92  514D               	movf	??_main& (0+255),w,b
  2510  011F94  0101               	movlb	1	; () banked
  2511  011F96  274F               	addwf	(??_main+2)& (0+255),f,b
  2512  011F98  0101               	movlb	1	; () banked
  2513  011F9A  514E               	movf	(??_main+1)& (0+255),w,b
  2514  011F9C  0101               	movlb	1	; () banked
  2515  011F9E  2350               	addwfc	(??_main+3)& (0+255),f,b
  2516  011FA0  C14F  F0D4         	movff	??_main+2,_check	;volatile
  2517  011FA4  C150  F0D5         	movff	??_main+3,_check+1	;volatile
  2518  011FA8                     L2:
  2519  011FA8  0100               	movlb	0	; () banked
  2520  011FAA  0E00               	movlw	0
  2521  011FAC  BFD5               	btfsc	(_check+1)& (0+255),7,b	;volatile
  2522  011FAE  0EFF               	movlw	-1
  2523  011FB0  6FD6               	movwf	(_check+2)& (0+255),b	;volatile
  2524  011FB2  6FD7               	movwf	(_check+3)& (0+255),b	;volatile
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;RemoteCan.c: 336: }
  2528                           ;RemoteCan.c: 337: if ((check >= 0)&&(check <= 180)) {
  2529  011FB4  0100               	movlb	0	; () banked
  2530  011FB6  BFD7               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2531  011FB8  D012               	goto	l9364
  2532                           
  2533                           ; BSR set to: 0
  2534  011FBA  0100               	movlb	0	; () banked
  2535  011FBC  BFD7               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2536  011FBE  D00C               	goto	l9362
  2537  011FC0  0100               	movlb	0	; () banked
  2538  011FC2  51D7               	movf	(_check+3)& (0+255),w,b	;volatile
  2539  011FC4  0100               	movlb	0	; () banked
  2540  011FC6  11D6               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2541  011FC8  0100               	movlb	0	; () banked
  2542  011FCA  11D5               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2543  011FCC  E108               	bnz	l9364
  2544  011FCE  0EB5               	movlw	181
  2545  011FD0  0100               	movlb	0	; () banked
  2546  011FD2  5DD4               	subwf	_check& (0+255),w,b	;volatile
  2547  011FD4  B0D8               	btfsc	status,0,c
  2548  011FD6  D003               	goto	l9364
  2549  011FD8                     l9362:
  2550                           
  2551                           ; BSR set to: 0
  2552                           ;RemoteCan.c: 338: data_steering[0] = check;
  2553  011FD8  C0D4  F0EA         	movff	_check,_data_steering	;volatile
  2554                           
  2555                           ;RemoteCan.c: 339: } else {
  2556  011FDC  D019               	goto	l841
  2557  011FDE                     l9364:
  2558                           
  2559                           ; BSR set to: 0
  2560                           ;RemoteCan.c: 340: if (check > 180) {
  2561  011FDE  0100               	movlb	0	; () banked
  2562  011FE0  BFD7               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2563  011FE2  D00E               	goto	l9368
  2564  011FE4  0100               	movlb	0	; () banked
  2565  011FE6  51D7               	movf	(_check+3)& (0+255),w,b	;volatile
  2566  011FE8  0100               	movlb	0	; () banked
  2567  011FEA  11D6               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2568  011FEC  0100               	movlb	0	; () banked
  2569  011FEE  11D5               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2570  011FF0  E105               	bnz	u12510
  2571  011FF2  0EB5               	movlw	181
  2572  011FF4  0100               	movlb	0	; () banked
  2573  011FF6  5DD4               	subwf	_check& (0+255),w,b	;volatile
  2574  011FF8  A0D8               	btfss	status,0,c
  2575  011FFA  D002               	goto	l9368
  2576  011FFC                     u12510:
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;RemoteCan.c: 341: data_steering[0] = 180;
  2580  011FFC  0EB4               	movlw	180
  2581  011FFE  D001               	goto	L3
  2582  012000                     l9368:
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;RemoteCan.c: 343: data_steering[0] = 0;
  2586  012000  0E00               	movlw	0
  2587  012002                     L3:
  2588  012002  0100               	movlb	0	; () banked
  2589  012004  6FEA               	movwf	_data_steering& (0+255),b
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;RemoteCan.c: 344: }
  2593                           ;RemoteCan.c: 345: }
  2594                           ;RemoteCan.c: 346: } else {
  2595                           
  2596                           ; BSR set to: 0
  2597  012006  D004               	goto	l841
  2598  012008                     l834:
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;RemoteCan.c: 347: steering_correction_dir = 0;
  2602  012008  9A4A               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2603                           
  2604                           ; BSR set to: 0
  2605                           ;RemoteCan.c: 348: steering_correction = 0;
  2606  01200A  0E00               	movlw	0
  2607  01200C  0100               	movlb	0	; () banked
  2608  01200E  6FE7               	movwf	_steering_correction& (0+255),b	;volatile
  2609  012010                     l841:
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;RemoteCan.c: 349: }
  2613                           ;RemoteCan.c: 352: if (switch_position != 0) {
  2614  012010  0100               	movlb	0	; () banked
  2615  012012  51E8               	movf	_switch_position& (0+255),w,b	;volatile
  2616  012014  B4D8               	btfsc	status,2,c
  2617  012016  D05E               	goto	l9392
  2618                           
  2619                           ; BSR set to: 0
  2620                           ;RemoteCan.c: 353: if (JoystickValues[1] > 132) {
  2621  012018  0E84               	movlw	132
  2622  01201A  0100               	movlb	0	; () banked
  2623  01201C  65DD               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  2624  01201E  D042               	goto	l9378
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;RemoteCan.c: 354: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  2628  012020  C0D0  F082         	movff	_JoystickConstants+4,___flmul@a	;volatile
  2629  012024  C0D1  F083         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  2630  012028  C0D2  F084         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  2631  01202C  C0D3  F085         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  2632  012030  0E7E               	movlw	126
  2633  012032  0101               	movlb	1	; () banked
  2634  012034  6F4D               	movwf	??_main& (0+255),b
  2635  012036  0EFF               	movlw	255
  2636  012038  0101               	movlb	1	; () banked
  2637  01203A  6F4E               	movwf	(??_main+1)& (0+255),b
  2638  01203C  0100               	movlb	0	; () banked
  2639  01203E  51DD               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2640  012040  0101               	movlb	1	; () banked
  2641  012042  6F4F               	movwf	(??_main+2)& (0+255),b
  2642  012044  6B50               	clrf	(??_main+3)& (0+255),b
  2643  012046  0101               	movlb	1	; () banked
  2644  012048  514D               	movf	??_main& (0+255),w,b
  2645  01204A  0101               	movlb	1	; () banked
  2646  01204C  274F               	addwf	(??_main+2)& (0+255),f,b
  2647  01204E  0101               	movlb	1	; () banked
  2648  012050  514E               	movf	(??_main+1)& (0+255),w,b
  2649  012052  0101               	movlb	1	; () banked
  2650  012054  2350               	addwfc	(??_main+3)& (0+255),f,b
  2651  012056  C14F  F070         	movff	??_main+2,___xxtofl@val
  2652  01205A  C150  F071         	movff	??_main+3,___xxtofl@val+1
  2653  01205E  0100               	movlb	0	; () banked
  2654  012060  0E00               	movlw	0
  2655  012062  BF71               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2656  012064  0EFF               	movlw	-1
  2657  012066  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  2658  012068  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  2659  01206A  0E01               	movlw	1
  2660  01206C  EC5E  F0A4         	call	___xxtofl
  2661  012070  C070  F07E         	movff	?___xxtofl,___flmul@b
  2662  012074  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  2663  012078  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  2664  01207C  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  2665  012080  ECD9  F09B         	call	___flmul	;wreg free
  2666  012084  C07E  F0B8         	movff	?___flmul,___fltol@f1
  2667  012088  C07F  F0B9         	movff	?___flmul+1,___fltol@f1+1
  2668  01208C  C080  F0BA         	movff	?___flmul+2,___fltol@f1+2
  2669  012090  C081  F0BB         	movff	?___flmul+3,___fltol@f1+3
  2670  012094  ECF1  F0AA         	call	___fltol	;wreg free
  2671  012098  C0B8  F0E2         	movff	?___fltol,_set_speed	;volatile
  2672  01209C  C0B9  F0E3         	movff	?___fltol+1,_set_speed+1	;volatile
  2673                           
  2674                           ;RemoteCan.c: 355: data_brake [0] = 3;
  2675  0120A0  0E03               	movlw	3
  2676  0120A2  D016               	goto	L4
  2677  0120A4                     l9378:
  2678                           
  2679                           ;RemoteCan.c: 357: set_speed = 0;
  2680  0120A4  0E00               	movlw	0
  2681  0120A6  0100               	movlb	0	; () banked
  2682  0120A8  6FE3               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2683  0120AA  0E00               	movlw	0
  2684  0120AC  6FE2               	movwf	_set_speed& (0+255),b	;volatile
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;RemoteCan.c: 358: if (JoystickValues[1] <= 65) {
  2688  0120AE  0E42               	movlw	66
  2689  0120B0  0100               	movlb	0	; () banked
  2690  0120B2  61DD               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2691  0120B4  D002               	goto	l9384
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;RemoteCan.c: 359: data_brake [0] = 2;
  2695  0120B6  0E02               	movlw	2
  2696  0120B8  6E26               	movwf	_data_brake,c
  2697  0120BA                     l9384:
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;RemoteCan.c: 360: }
  2701                           ;RemoteCan.c: 361: if (JoystickValues[1] <= 20) {
  2702  0120BA  0E15               	movlw	21
  2703  0120BC  0100               	movlb	0	; () banked
  2704  0120BE  61DD               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2705  0120C0  D002               	goto	l9388
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;RemoteCan.c: 362: data_brake [0] = 1;
  2709  0120C2  0E01               	movlw	1
  2710  0120C4  6E26               	movwf	_data_brake,c
  2711  0120C6                     l9388:
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;RemoteCan.c: 363: }
  2715                           ;RemoteCan.c: 364: if (JoystickValues[1] <= 5) {
  2716  0120C6  0E06               	movlw	6
  2717  0120C8  0100               	movlb	0	; () banked
  2718  0120CA  61DD               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2719  0120CC  D00A               	goto	l9394
  2720  0120CE  D007               	goto	L5
  2721  0120D0                     L4:
  2722  0120D0  6E26               	movwf	_data_brake,c
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;RemoteCan.c: 366: }
  2726                           ;RemoteCan.c: 367: }
  2727                           ;RemoteCan.c: 368: } else {
  2728                           
  2729                           ; BSR set to: 0
  2730  0120D2  D007               	goto	l9394
  2731  0120D4                     l9392:
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;RemoteCan.c: 369: set_speed = 0;
  2735  0120D4  0E00               	movlw	0
  2736  0120D6  0100               	movlb	0	; () banked
  2737  0120D8  6FE3               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2738  0120DA  0E00               	movlw	0
  2739  0120DC  6FE2               	movwf	_set_speed& (0+255),b	;volatile
  2740  0120DE                     L5:
  2741                           
  2742                           ;RemoteCan.c: 370: data_brake [0] = 0;
  2743  0120DE  0E00               	movlw	0
  2744  0120E0  D7F7               	goto	L4
  2745  0120E2                     l9394:
  2746                           
  2747                           ;RemoteCan.c: 371: }
  2748                           ;RemoteCan.c: 373: if (newMessageCan == 1) {
  2749  0120E2  A04A               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2750  0120E4  D003               	goto	l9400
  2751                           
  2752                           ;RemoteCan.c: 374: CAN_Rx();
  2753  0120E6  EC66  F0AD         	call	_CAN_Rx	;wreg free
  2754                           
  2755                           ;RemoteCan.c: 375: newMessageCan = 0;
  2756  0120EA  904A               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2757  0120EC                     l9400:
  2758                           
  2759                           ;RemoteCan.c: 376: }
  2760                           ;RemoteCan.c: 378: if ((((time_counter - pr_time_2) >= 2) && (parking_message_ID < 2)) |
      +                          | (Can_Tx_Force == 1)) {
  2761  0120EC  C005  F14D         	movff	_pr_time_2,??_main	;volatile
  2762  0120F0  C006  F14E         	movff	_pr_time_2+1,??_main+1	;volatile
  2763  0120F4  C007  F14F         	movff	_pr_time_2+2,??_main+2	;volatile
  2764  0120F8  C008  F150         	movff	_pr_time_2+3,??_main+3	;volatile
  2765  0120FC  0101               	movlb	1	; () banked
  2766  0120FE  1F4D               	comf	??_main& (0+255),f,b
  2767  012100  1F4E               	comf	(??_main+1)& (0+255),f,b
  2768  012102  1F4F               	comf	(??_main+2)& (0+255),f,b
  2769  012104  1F50               	comf	(??_main+3)& (0+255),f,b
  2770  012106  2B4D               	incf	??_main& (0+255),f,b
  2771  012108  0E00               	movlw	0
  2772  01210A  234E               	addwfc	(??_main+1)& (0+255),f,b
  2773  01210C  234F               	addwfc	(??_main+2)& (0+255),f,b
  2774  01210E  2350               	addwfc	(??_main+3)& (0+255),f,b
  2775  012110  5019               	movf	_time_counter,w,c	;volatile
  2776  012112  0101               	movlb	1	; () banked
  2777  012114  254D               	addwf	??_main& (0+255),w,b
  2778  012116  0101               	movlb	1	; () banked
  2779  012118  6F51               	movwf	(??_main+4)& (0+255),b
  2780  01211A  501A               	movf	_time_counter+1,w,c	;volatile
  2781  01211C  0101               	movlb	1	; () banked
  2782  01211E  214E               	addwfc	(??_main+1)& (0+255),w,b
  2783  012120  0101               	movlb	1	; () banked
  2784  012122  6F52               	movwf	(??_main+5)& (0+255),b
  2785  012124  501B               	movf	_time_counter+2,w,c	;volatile
  2786  012126  0101               	movlb	1	; () banked
  2787  012128  214F               	addwfc	(??_main+2)& (0+255),w,b
  2788  01212A  0101               	movlb	1	; () banked
  2789  01212C  6F53               	movwf	(??_main+6)& (0+255),b
  2790  01212E  501C               	movf	_time_counter+3,w,c	;volatile
  2791  012130  0101               	movlb	1	; () banked
  2792  012132  2150               	addwfc	(??_main+3)& (0+255),w,b
  2793  012134  0101               	movlb	1	; () banked
  2794  012136  6F54               	movwf	(??_main+7)& (0+255),b
  2795  012138  0101               	movlb	1	; () banked
  2796  01213A  5154               	movf	(??_main+7)& (0+255),w,b
  2797  01213C  0101               	movlb	1	; () banked
  2798  01213E  1153               	iorwf	(??_main+6)& (0+255),w,b
  2799  012140  0101               	movlb	1	; () banked
  2800  012142  1152               	iorwf	(??_main+5)& (0+255),w,b
  2801  012144  E105               	bnz	u12580
  2802  012146  0E02               	movlw	2
  2803  012148  0101               	movlb	1	; () banked
  2804  01214A  5D51               	subwf	(??_main+4)& (0+255),w,b
  2805  01214C  A0D8               	btfss	status,0,c
  2806  01214E  D004               	goto	l854
  2807  012150                     u12580:
  2808                           
  2809                           ; BSR set to: 1
  2810  012150  0E01               	movlw	1
  2811  012152  0100               	movlb	0	; () banked
  2812  012154  65E5               	cpfsgt	_parking_message_ID& (0+255),b	;volatile
  2813  012156  D002               	goto	l852
  2814  012158                     l854:
  2815  012158  A249               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2816  01215A  D00B               	goto	l9406
  2817  01215C                     l852:
  2818                           
  2819                           ;RemoteCan.c: 379: Can_Tx_Force = 0;
  2820  01215C  9249               	bcf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2821                           
  2822                           ;RemoteCan.c: 380: pr_time_2 = time_counter;
  2823  01215E  C019  F005         	movff	_time_counter,_pr_time_2	;volatile
  2824  012162  C01A  F006         	movff	_time_counter+1,_pr_time_2+1	;volatile
  2825  012166  C01B  F007         	movff	_time_counter+2,_pr_time_2+2	;volatile
  2826  01216A  C01C  F008         	movff	_time_counter+3,_pr_time_2+3	;volatile
  2827                           
  2828                           ;RemoteCan.c: 381: CAN_Tx();
  2829  01216E  EC09  F0AD         	call	_CAN_Tx	;wreg free
  2830  012172                     l9406:
  2831                           
  2832                           ;RemoteCan.c: 382: }
  2833                           ;RemoteCan.c: 385: if (time_counter >= pr_time_6) {
  2834  012172  5015               	movf	_pr_time_6,w,c	;volatile
  2835  012174  5C19               	subwf	_time_counter,w,c	;volatile
  2836  012176  5016               	movf	_pr_time_6+1,w,c	;volatile
  2837  012178  581A               	subwfb	_time_counter+1,w,c	;volatile
  2838  01217A  5017               	movf	_pr_time_6+2,w,c	;volatile
  2839  01217C  581B               	subwfb	_time_counter+2,w,c	;volatile
  2840  01217E  5018               	movf	_pr_time_6+3,w,c	;volatile
  2841  012180  581C               	subwfb	_time_counter+3,w,c	;volatile
  2842  012182  A0D8               	btfss	status,0,c
  2843  012184  D05B               	goto	l9434
  2844                           
  2845                           ;RemoteCan.c: 386: if ((time_counter - pr_time_3) >= (100 / 10)) {
  2846  012186  C009  F14D         	movff	_pr_time_3,??_main	;volatile
  2847  01218A  C00A  F14E         	movff	_pr_time_3+1,??_main+1	;volatile
  2848  01218E  C00B  F14F         	movff	_pr_time_3+2,??_main+2	;volatile
  2849  012192  C00C  F150         	movff	_pr_time_3+3,??_main+3	;volatile
  2850  012196  0101               	movlb	1	; () banked
  2851  012198  1F4D               	comf	??_main& (0+255),f,b
  2852  01219A  1F4E               	comf	(??_main+1)& (0+255),f,b
  2853  01219C  1F4F               	comf	(??_main+2)& (0+255),f,b
  2854  01219E  1F50               	comf	(??_main+3)& (0+255),f,b
  2855  0121A0  2B4D               	incf	??_main& (0+255),f,b
  2856  0121A2  0E00               	movlw	0
  2857  0121A4  234E               	addwfc	(??_main+1)& (0+255),f,b
  2858  0121A6  234F               	addwfc	(??_main+2)& (0+255),f,b
  2859  0121A8  2350               	addwfc	(??_main+3)& (0+255),f,b
  2860  0121AA  5019               	movf	_time_counter,w,c	;volatile
  2861  0121AC  0101               	movlb	1	; () banked
  2862  0121AE  254D               	addwf	??_main& (0+255),w,b
  2863  0121B0  0101               	movlb	1	; () banked
  2864  0121B2  6F51               	movwf	(??_main+4)& (0+255),b
  2865  0121B4  501A               	movf	_time_counter+1,w,c	;volatile
  2866  0121B6  0101               	movlb	1	; () banked
  2867  0121B8  214E               	addwfc	(??_main+1)& (0+255),w,b
  2868  0121BA  0101               	movlb	1	; () banked
  2869  0121BC  6F52               	movwf	(??_main+5)& (0+255),b
  2870  0121BE  501B               	movf	_time_counter+2,w,c	;volatile
  2871  0121C0  0101               	movlb	1	; () banked
  2872  0121C2  214F               	addwfc	(??_main+2)& (0+255),w,b
  2873  0121C4  0101               	movlb	1	; () banked
  2874  0121C6  6F53               	movwf	(??_main+6)& (0+255),b
  2875  0121C8  501C               	movf	_time_counter+3,w,c	;volatile
  2876  0121CA  0101               	movlb	1	; () banked
  2877  0121CC  2150               	addwfc	(??_main+3)& (0+255),w,b
  2878  0121CE  0101               	movlb	1	; () banked
  2879  0121D0  6F54               	movwf	(??_main+7)& (0+255),b
  2880  0121D2  0101               	movlb	1	; () banked
  2881  0121D4  5154               	movf	(??_main+7)& (0+255),w,b
  2882  0121D6  0101               	movlb	1	; () banked
  2883  0121D8  1153               	iorwf	(??_main+6)& (0+255),w,b
  2884  0121DA  0101               	movlb	1	; () banked
  2885  0121DC  1152               	iorwf	(??_main+5)& (0+255),w,b
  2886  0121DE  E105               	bnz	u12620
  2887  0121E0  0E0A               	movlw	10
  2888  0121E2  0101               	movlb	1	; () banked
  2889  0121E4  5D51               	subwf	(??_main+4)& (0+255),w,b
  2890  0121E6  A0D8               	btfss	status,0,c
  2891  0121E8  D4B4               	goto	l9236
  2892  0121EA                     u12620:
  2893                           
  2894                           ; BSR set to: 1
  2895                           ;RemoteCan.c: 387: pr_time_3 = time_counter;
  2896  0121EA  C019  F009         	movff	_time_counter,_pr_time_3	;volatile
  2897  0121EE  C01A  F00A         	movff	_time_counter+1,_pr_time_3+1	;volatile
  2898  0121F2  C01B  F00B         	movff	_time_counter+2,_pr_time_3+2	;volatile
  2899  0121F6  C01C  F00C         	movff	_time_counter+3,_pr_time_3+3	;volatile
  2900                           
  2901                           ;RemoteCan.c: 388: if (parking_message_E == 1) {
  2902  0121FA  A24A               	btfss	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  2903  0121FC  D01C               	goto	l9432
  2904                           
  2905                           ; BSR set to: 1
  2906                           ;RemoteCan.c: 389: display_refresh = 1;
  2907  0121FE  8E49               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  2908                           
  2909                           ; BSR set to: 1
  2910                           ;RemoteCan.c: 390: if (parking_message_ID == 0) {
  2911  012200  0100               	movlb	0	; () banked
  2912  012202  51E5               	movf	_parking_message_ID& (0+255),w,b	;volatile
  2913  012204  A4D8               	btfss	status,2,c
  2914  012206  D004               	goto	l9420
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;RemoteCan.c: 391: LCD_Gap();
  2918  012208  EC98  F0AF         	call	_LCD_Gap	;wreg free
  2919                           
  2920                           ;RemoteCan.c: 392: parking_message_ID++;
  2921  01220C  0100               	movlb	0	; () banked
  2922  01220E  2BE5               	incf	_parking_message_ID& (0+255),f,b	;volatile
  2923  012210                     l9420:
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;RemoteCan.c: 393: }
  2927                           ;RemoteCan.c: 394: if (parking_message_ID == 2) {
  2928  012210  0E02               	movlw	2
  2929  012212  0100               	movlb	0	; () banked
  2930  012214  19E5               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  2931  012216  A4D8               	btfss	status,2,c
  2932  012218  D004               	goto	l9426
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;RemoteCan.c: 395: LCD_Park();
  2936  01221A  EC66  F0AF         	call	_LCD_Park	;wreg free
  2937                           
  2938                           ;RemoteCan.c: 396: parking_message_ID++;
  2939  01221E  0100               	movlb	0	; () banked
  2940  012220  2BE5               	incf	_parking_message_ID& (0+255),f,b	;volatile
  2941  012222                     l9426:
  2942                           
  2943                           ; BSR set to: 0
  2944                           ;RemoteCan.c: 397: }
  2945                           ;RemoteCan.c: 398: if (parking_message_ID == 4) {
  2946  012222  0E04               	movlw	4
  2947  012224  0100               	movlb	0	; () banked
  2948  012226  19E5               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  2949  012228  A4D8               	btfss	status,2,c
  2950  01222A  D493               	goto	l9236
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;RemoteCan.c: 399: LCD_Parking();
  2954  01222C  EC34  F0AF         	call	_LCD_Parking	;wreg free
  2955                           
  2956                           ;RemoteCan.c: 400: parking_message_ID++;
  2957  012230  0100               	movlb	0	; () banked
  2958  012232  2BE5               	incf	_parking_message_ID& (0+255),f,b	;volatile
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;RemoteCan.c: 401: }
  2962                           ;RemoteCan.c: 402: } else {
  2963  012234  D48E               	goto	l9236
  2964  012236                     l9432:
  2965                           
  2966                           ;RemoteCan.c: 403: LCD_Handler();
  2967  012236  EC08  F0A7         	call	_LCD_Handler	;wreg free
  2968                           
  2969                           ;RemoteCan.c: 404: }
  2970                           ;RemoteCan.c: 405: }
  2971                           ;RemoteCan.c: 406: } else {
  2972  01223A  D48B               	goto	l9236
  2973  01223C                     l9434:
  2974                           
  2975                           ;RemoteCan.c: 407: if (parking_message_ID == 6) {
  2976  01223C  0E06               	movlw	6
  2977  01223E  0100               	movlb	0	; () banked
  2978  012240  19E5               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  2979  012242  A4D8               	btfss	status,2,c
  2980  012244  D486               	goto	l9236
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;RemoteCan.c: 408: LCD_End();
  2984  012246  ECCA  F0AF         	call	_LCD_End	;wreg free
  2985                           
  2986                           ;RemoteCan.c: 409: parking_message_ID = 0;
  2987  01224A  0E00               	movlw	0
  2988  01224C  0100               	movlb	0	; () banked
  2989  01224E  6FE5               	movwf	_parking_message_ID& (0+255),b	;volatile
  2990                           
  2991                           ; BSR set to: 0
  2992                           ;RemoteCan.c: 410: parking_message_E = 0;
  2993  012250  924A               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  2994                           
  2995                           ; BSR set to: 0
  2996                           
  2997                           ; BSR set to: 0
  2998                           
  2999                           ; BSR set to: 0
  3000  012252  D47F               	goto	l9236
  3001  012254                     __end_of_main:
  3002                           	opt stack 0
  3003                           tblptru	equ	0xFF8
  3004                           tblptrh	equ	0xFF7
  3005                           tblptrl	equ	0xFF6
  3006                           tablat	equ	0xFF5
  3007                           postinc0	equ	0xFEE
  3008                           wreg	equ	0xFE8
  3009                           status	equ	0xFD8
  3010                           
  3011 ;; *************** function _board_initialization *****************
  3012 ;; Defined at:
  3013 ;;		line 617 in file "RemoteCan.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;		None
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;		None
  3018 ;; Return value:  Size  Location     Type
  3019 ;;		None               void
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3031 ;;Total ram usage:        0 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    9
  3034 ;; This function calls:
  3035 ;;		_CANInitialize
  3036 ;;		_LCD_clear
  3037 ;;		_LCD_goto_line
  3038 ;;		_LCD_initialize
  3039 ;; This function is called by:
  3040 ;;		_main
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           	psect	text1
  3045  015B7A                     __ptext1:
  3046                           	opt stack 0
  3047  015B7A                     _board_initialization:
  3048                           	opt stack 21
  3049                           
  3050                           ;RemoteCan.c: 619: LATA = 0x00;
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;incstack = 0
  3054  015B7A  0E00               	movlw	0
  3055  015B7C  6E89               	movwf	3977,c	;volatile
  3056                           
  3057                           ;RemoteCan.c: 620: TRISA = 0b00011111;
  3058  015B7E  0E1F               	movlw	31
  3059  015B80  6E92               	movwf	3986,c	;volatile
  3060                           
  3061                           ;RemoteCan.c: 621: LATB = 0x00;
  3062  015B82  0E00               	movlw	0
  3063  015B84  6E8A               	movwf	3978,c	;volatile
  3064                           
  3065                           ;RemoteCan.c: 622: TRISB = 0b11111011;
  3066  015B86  0EFB               	movlw	251
  3067  015B88  6E93               	movwf	3987,c	;volatile
  3068                           
  3069                           ;RemoteCan.c: 623: LATC = 0x00;
  3070  015B8A  0E00               	movlw	0
  3071  015B8C  6E8B               	movwf	3979,c	;volatile
  3072                           
  3073                           ;RemoteCan.c: 624: TRISC = 0b11110000;
  3074  015B8E  0EF0               	movlw	240
  3075  015B90  6E94               	movwf	3988,c	;volatile
  3076                           
  3077                           ;RemoteCan.c: 625: LATD = 0x00;
  3078  015B92  0E00               	movlw	0
  3079  015B94  6E8C               	movwf	3980,c	;volatile
  3080                           
  3081                           ;RemoteCan.c: 626: TRISD = 0x00;
  3082  015B96  0E00               	movlw	0
  3083  015B98  6E95               	movwf	3989,c	;volatile
  3084                           
  3085                           ;RemoteCan.c: 627: LATE = 0x00;
  3086  015B9A  0E00               	movlw	0
  3087  015B9C  6E8D               	movwf	3981,c	;volatile
  3088                           
  3089                           ;RemoteCan.c: 628: TRISE = 0x00;
  3090  015B9E  0E00               	movlw	0
  3091  015BA0  6E96               	movwf	3990,c	;volatile
  3092                           
  3093                           ;RemoteCan.c: 630: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3094  015BA2  0E06               	movlw	6
  3095  015BA4  0100               	movlb	0	; () banked
  3096  015BA6  6F7E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3097  015BA8  0E05               	movlw	5
  3098  015BAA  0100               	movlb	0	; () banked
  3099  015BAC  6F7F               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3100  015BAE  0E01               	movlw	1
  3101  015BB0  0100               	movlb	0	; () banked
  3102  015BB2  6F80               	movwf	CANInitialize@SJW& (0+255),b
  3103  015BB4  0E03               	movlw	3
  3104  015BB6  0100               	movlb	0	; () banked
  3105  015BB8  6F81               	movwf	CANInitialize@BRP& (0+255),b
  3106  015BBA  0E9D               	movlw	157
  3107  015BBC  0100               	movlb	0	; () banked
  3108  015BBE  6F82               	movwf	CANInitialize@flags& (0+255),b
  3109  015BC0  0E04               	movlw	4
  3110  015BC2  EC45  F0A5         	call	_CANInitialize
  3111                           
  3112                           ;RemoteCan.c: 634: PIR2bits.TMR3IF = 0;
  3113  015BC6  92A1               	bcf	4001,1,c	;volatile
  3114                           
  3115                           ;RemoteCan.c: 635: PIR3bits.RXB1IF = 0;
  3116  015BC8  92A4               	bcf	4004,1,c	;volatile
  3117                           
  3118                           ;RemoteCan.c: 636: PIR3bits.RXB0IF = 0;
  3119  015BCA  90A4               	bcf	4004,0,c	;volatile
  3120                           
  3121                           ;RemoteCan.c: 639: RCONbits.IPEN = 1;
  3122  015BCC  8ED0               	bsf	4048,7,c	;volatile
  3123                           
  3124                           ;RemoteCan.c: 640: IPR3bits.RXB1IP = 1;
  3125  015BCE  82A5               	bsf	4005,1,c	;volatile
  3126                           
  3127                           ;RemoteCan.c: 641: IPR3bits.RXB0IP = 1;
  3128  015BD0  80A5               	bsf	4005,0,c	;volatile
  3129                           
  3130                           ;RemoteCan.c: 642: IPR2bits.TMR3IP = 0;
  3131  015BD2  92A2               	bcf	4002,1,c	;volatile
  3132                           
  3133                           ;RemoteCan.c: 645: ADCON1 = 0b00001101;
  3134  015BD4  0E0D               	movlw	13
  3135  015BD6  6EC1               	movwf	4033,c	;volatile
  3136                           
  3137                           ;RemoteCan.c: 646: ADCON0bits.CHS2 = 0;
  3138  015BD8  98C2               	bcf	4034,4,c	;volatile
  3139                           
  3140                           ;RemoteCan.c: 647: ADCON0bits.CHS1 = 0;
  3141  015BDA  96C2               	bcf	4034,3,c	;volatile
  3142                           
  3143                           ;RemoteCan.c: 648: ADCON0bits.CHS0 = 0;
  3144  015BDC  94C2               	bcf	4034,2,c	;volatile
  3145                           
  3146                           ;RemoteCan.c: 649: ADCON2bits.ACQT2 = 1;
  3147  015BDE  8AC0               	bsf	4032,5,c	;volatile
  3148                           
  3149                           ;RemoteCan.c: 650: ADCON2bits.ACQT1 = 1;
  3150  015BE0  88C0               	bsf	4032,4,c	;volatile
  3151                           
  3152                           ;RemoteCan.c: 651: ADCON2bits.ACQT0 = 0;
  3153  015BE2  96C0               	bcf	4032,3,c	;volatile
  3154                           
  3155                           ;RemoteCan.c: 652: ADCON2bits.ADCS2 = 1;
  3156  015BE4  84C0               	bsf	4032,2,c	;volatile
  3157                           
  3158                           ;RemoteCan.c: 653: ADCON2bits.ADCS1 = 0;
  3159  015BE6  92C0               	bcf	4032,1,c	;volatile
  3160                           
  3161                           ;RemoteCan.c: 654: ADCON2bits.ADCS0 = 1;
  3162  015BE8  80C0               	bsf	4032,0,c	;volatile
  3163                           
  3164                           ;RemoteCan.c: 655: ADCON2bits.ADFM = 0;
  3165  015BEA  9EC0               	bcf	4032,7,c	;volatile
  3166                           
  3167                           ;RemoteCan.c: 656: ADCON0bits.ADON = 1;
  3168  015BEC  80C2               	bsf	4034,0,c	;volatile
  3169                           
  3170                           ;RemoteCan.c: 659: LCD_initialize(16);
  3171  015BEE  0E10               	movlw	16
  3172  015BF0  EC3A  F0AA         	call	_LCD_initialize
  3173                           
  3174                           ;RemoteCan.c: 661: LCD_clear();
  3175  015BF4  EC8C  F0B1         	call	_LCD_clear	;wreg free
  3176                           
  3177                           ;RemoteCan.c: 662: LCD_goto_line(1);
  3178  015BF8  0E01               	movlw	1
  3179  015BFA  EC77  F0AB         	call	_LCD_goto_line
  3180                           
  3181                           ;RemoteCan.c: 666: PORTDbits.RD2 = 0;
  3182  015BFE  9483               	bcf	3971,2,c	;volatile
  3183                           
  3184                           ;RemoteCan.c: 667: PORTDbits.RD3 = 0;
  3185  015C00  9683               	bcf	3971,3,c	;volatile
  3186                           
  3187                           ;RemoteCan.c: 670: TMR3H = 0x63;
  3188  015C02  0E63               	movlw	99
  3189  015C04  6EB3               	movwf	4019,c	;volatile
  3190                           
  3191                           ;RemoteCan.c: 671: TMR3L = 0xC0;
  3192  015C06  0EC0               	movlw	192
  3193  015C08  6EB2               	movwf	4018,c	;volatile
  3194                           
  3195                           ;RemoteCan.c: 674: PIE3bits.RXB1IE = 1;
  3196  015C0A  82A3               	bsf	4003,1,c	;volatile
  3197                           
  3198                           ;RemoteCan.c: 675: PIE3bits.RXB0IE = 1;
  3199  015C0C  80A3               	bsf	4003,0,c	;volatile
  3200                           
  3201                           ;RemoteCan.c: 676: PIE2bits.TMR3IE = 1;
  3202  015C0E  82A0               	bsf	4000,1,c	;volatile
  3203                           
  3204                           ;RemoteCan.c: 679: T3CON = 0x01;
  3205  015C10  0E01               	movlw	1
  3206  015C12  6EB1               	movwf	4017,c	;volatile
  3207                           
  3208                           ;RemoteCan.c: 680: LCD_clear();
  3209  015C14  EC8C  F0B1         	call	_LCD_clear	;wreg free
  3210                           
  3211                           ;RemoteCan.c: 681: INTCONbits.GIEH = 1;
  3212  015C18  8EF2               	bsf	intcon,7,c	;volatile
  3213                           
  3214                           ;RemoteCan.c: 682: INTCONbits.GIEL = 1;
  3215  015C1A  8CF2               	bsf	intcon,6,c	;volatile
  3216  015C1C  0012               	return		;funcret
  3217  015C1E                     __end_of_board_initialization:
  3218                           	opt stack 0
  3219                           tblptru	equ	0xFF8
  3220                           tblptrh	equ	0xFF7
  3221                           tblptrl	equ	0xFF6
  3222                           tablat	equ	0xFF5
  3223                           intcon	equ	0xFF2
  3224                           postinc0	equ	0xFEE
  3225                           wreg	equ	0xFE8
  3226                           status	equ	0xFD8
  3227                           
  3228 ;; *************** function _CANInitialize *****************
  3229 ;; Defined at:
  3230 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;  propSeg         1    wreg     unsigned char 
  3233 ;;  phaseSeg1       1   30[BANK0 ] unsigned char 
  3234 ;;  phaseSeg2       1   31[BANK0 ] unsigned char 
  3235 ;;  SJW             1   32[BANK0 ] unsigned char 
  3236 ;;  BRP             1   33[BANK0 ] unsigned char 
  3237 ;;  flags           1   34[BANK0 ] enum E16887
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;  propSeg         1   39[BANK0 ] unsigned char 
  3240 ;;  FilterConfig    1   41[BANK0 ] unsigned char 
  3241 ;;  FilterConfig    1   40[BANK0 ] unsigned char 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;		None               void
  3244 ;; Registers used:
  3245 ;;		wreg, status,2, status,0, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3251 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3252 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3253 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3254 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3255 ;;Total ram usage:       12 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    4
  3258 ;; This function calls:
  3259 ;;		_CANOperationMode
  3260 ;;		_CANSetFilter
  3261 ;;		_CANSetMask
  3262 ;; This function is called by:
  3263 ;;		_board_initialization
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text2
  3268  014A8A                     __ptext2:
  3269                           	opt stack 0
  3270  014A8A                     _CANInitialize:
  3271                           	opt stack 25
  3272                           
  3273                           ;incstack = 0
  3274                           ;CANInitialize@propSeg stored from wreg
  3275  014A8A  0100               	movlb	0	; () banked
  3276  014A8C  6F87               	movwf	CANInitialize@propSeg& (0+255),b
  3277                           
  3278                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3279                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3280                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3281  014A8E  0E80               	movlw	128
  3282  014A90  EC37  F0B2         	call	_CANOperationMode
  3283                           
  3284                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3285  014A94  0E00               	movlw	0
  3286  014A96  6E70               	movwf	3952,c	;volatile
  3287                           
  3288                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3289  014A98  0E00               	movlw	0
  3290  014A9A  6E71               	movwf	3953,c	;volatile
  3291                           
  3292                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3293  014A9C  0E00               	movlw	0
  3294  014A9E  6E72               	movwf	3954,c	;volatile
  3295                           
  3296                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3297  014AA0  0100               	movlb	0	; () banked
  3298  014AA2  4180               	rrncf	CANInitialize@SJW& (0+255),w,b
  3299  014AA4  42E8               	rrncf	wreg,f,c
  3300  014AA6  0BC0               	andlw	192
  3301  014AA8  0100               	movlb	0	; () banked
  3302  014AAA  6F80               	movwf	CANInitialize@SJW& (0+255),b
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3306  014AAC  0100               	movlb	0	; () banked
  3307  014AAE  5180               	movf	CANInitialize@SJW& (0+255),w,b
  3308  014AB0  1270               	iorwf	3952,f,c	;volatile
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3312  014AB2  0100               	movlb	0	; () banked
  3313  014AB4  5181               	movf	CANInitialize@BRP& (0+255),w,b
  3314  014AB6  1270               	iorwf	3952,f,c	;volatile
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3318  014AB8  0100               	movlb	0	; () banked
  3319  014ABA  5187               	movf	CANInitialize@propSeg& (0+255),w,b
  3320  014ABC  1271               	iorwf	3953,f,c	;volatile
  3321                           
  3322                           ; BSR set to: 0
  3323                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3324  014ABE  0100               	movlb	0	; () banked
  3325  014AC0  397E               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3326  014AC2  42E8               	rrncf	wreg,f,c
  3327  014AC4  0BF8               	andlw	248
  3328  014AC6  0100               	movlb	0	; () banked
  3329  014AC8  6F7E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3333  014ACA  0100               	movlb	0	; () banked
  3334  014ACC  517E               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3335  014ACE  1271               	iorwf	3953,f,c	;volatile
  3336                           
  3337                           ; BSR set to: 0
  3338                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3339  014AD0  0100               	movlb	0	; () banked
  3340  014AD2  A582               	btfss	CANInitialize@flags& (0+255),2,b
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3344  014AD4  8C71               	bsf	3953,6,c	;volatile
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3348  014AD6  0100               	movlb	0	; () banked
  3349  014AD8  B182               	btfsc	CANInitialize@flags& (0+255),0,b
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3353  014ADA  8E71               	bsf	3953,7,c	;volatile
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3357                           
  3358                           ; BSR set to: 0
  3359  014ADC  0100               	movlb	0	; () banked
  3360  014ADE  517F               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3361  014AE0  1272               	iorwf	3954,f,c	;volatile
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3365  014AE2  0100               	movlb	0	; () banked
  3366  014AE4  B382               	btfsc	CANInitialize@flags& (0+255),1,b
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3370  014AE6  8C72               	bsf	3954,6,c	;volatile
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3374                           
  3375                           ; BSR set to: 0
  3376  014AE8  0100               	movlb	0	; () banked
  3377  014AEA  5182               	movf	CANInitialize@flags& (0+255),w,b
  3378  014AEC  0B60               	andlw	96
  3379  014AEE  6E60               	movwf	3936,c	;volatile
  3380                           
  3381                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3382  014AF0  0100               	movlb	0	; () banked
  3383  014AF2  5182               	movf	CANInitialize@flags& (0+255),w,b
  3384  014AF4  0B10               	andlw	16
  3385  014AF6  0AFF               	xorlw	255
  3386  014AF8  B4D8               	btfsc	status,2,c
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3390  014AFA  8460               	bsf	3936,2,c	;volatile
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3394  014AFC  CF60 FF50          	movff	3936,3920	;volatile
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3398  014B00  0E00               	movlw	0
  3399  014B02  0100               	movlb	0	; () banked
  3400  014B04  6F70               	movwf	CANSetMask@mask& (0+255),b
  3401  014B06  0E00               	movlw	0
  3402  014B08  6F71               	movwf	(CANSetMask@mask+1)& (0+255),b
  3403  014B0A  0E00               	movlw	0
  3404  014B0C  6F72               	movwf	(CANSetMask@mask+2)& (0+255),b
  3405  014B0E  0E00               	movlw	0
  3406  014B10  6F73               	movwf	(CANSetMask@mask+3)& (0+255),b
  3407  014B12  0EF7               	movlw	247
  3408  014B14  0100               	movlb	0	; () banked
  3409  014B16  6F74               	movwf	CANSetMask@type& (0+255),b
  3410  014B18  0E01               	movlw	1
  3411  014B1A  EC0C  F0A0         	call	_CANSetMask
  3412                           
  3413                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3414  014B1E  0E00               	movlw	0
  3415  014B20  0100               	movlb	0	; () banked
  3416  014B22  6F70               	movwf	CANSetMask@mask& (0+255),b
  3417  014B24  0E00               	movlw	0
  3418  014B26  6F71               	movwf	(CANSetMask@mask+1)& (0+255),b
  3419  014B28  0E00               	movlw	0
  3420  014B2A  6F72               	movwf	(CANSetMask@mask+2)& (0+255),b
  3421  014B2C  0E00               	movlw	0
  3422  014B2E  6F73               	movwf	(CANSetMask@mask+3)& (0+255),b
  3423  014B30  0EF7               	movlw	247
  3424  014B32  0100               	movlb	0	; () banked
  3425  014B34  6F74               	movwf	CANSetMask@type& (0+255),b
  3426  014B36  0E02               	movlw	2
  3427  014B38  EC0C  F0A0         	call	_CANSetMask
  3428                           
  3429                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3430  014B3C  D00F               	goto	l6170
  3431  014B3E                     l6164:
  3432                           
  3433                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3434  014B3E  0EF7               	movlw	247
  3435  014B40  0100               	movlb	0	; () banked
  3436  014B42  6F88               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3437  014B44  D007               	goto	l6166
  3438  014B46                     l378:
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3442  014B46  0100               	movlb	0	; () banked
  3443  014B48  6988               	setf	CANInitialize@FilterConfig1& (0+255),b
  3444                           
  3445                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3446  014B4A  0100               	movlb	0	; () banked
  3447  014B4C  6989               	setf	CANInitialize@FilterConfig2& (0+255),b
  3448                           
  3449                           ;inc\CANlib.h: 273: break;
  3450  014B4E  D028               	goto	l6172
  3451  014B50                     l379:
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3455  014B50  0100               	movlb	0	; () banked
  3456  014B52  6988               	setf	CANInitialize@FilterConfig1& (0+255),b
  3457  014B54                     l6166:
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3461  014B54  0EF7               	movlw	247
  3462  014B56  0100               	movlb	0	; () banked
  3463  014B58  6F89               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;inc\CANlib.h: 278: }
  3467                           
  3468                           ;inc\CANlib.h: 277: break;
  3469  014B5A  D022               	goto	l6172
  3470  014B5C                     l6170:
  3471  014B5C  0E9F               	movlw	159
  3472  014B5E  0100               	movlb	0	; () banked
  3473  014B60  6F83               	movwf	??_CANInitialize& (0+255),b
  3474  014B62  0EFF               	movlw	255
  3475  014B64  0100               	movlb	0	; () banked
  3476  014B66  6F84               	movwf	(??_CANInitialize+1)& (0+255),b
  3477  014B68  0100               	movlb	0	; () banked
  3478  014B6A  5182               	movf	CANInitialize@flags& (0+255),w,b
  3479  014B6C  0B60               	andlw	96
  3480  014B6E  0100               	movlb	0	; () banked
  3481  014B70  6F85               	movwf	(??_CANInitialize+2)& (0+255),b
  3482  014B72  6B86               	clrf	(??_CANInitialize+3)& (0+255),b
  3483  014B74  0100               	movlb	0	; () banked
  3484  014B76  5183               	movf	??_CANInitialize& (0+255),w,b
  3485  014B78  0100               	movlb	0	; () banked
  3486  014B7A  1385               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3487  014B7C  0100               	movlb	0	; () banked
  3488  014B7E  5184               	movf	(??_CANInitialize+1)& (0+255),w,b
  3489  014B80  0100               	movlb	0	; () banked
  3490  014B82  1386               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3491                           
  3492                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3493                           ; Switch size 1, requested type "space"
  3494                           ; Number of cases is 1, Range of values is 0 to 0
  3495                           ; switch strategies available:
  3496                           ; Name         Instructions Cycles
  3497                           ; simple_byte            4     3 (average)
  3498                           ;	Chosen strategy is simple_byte
  3499  014B84  0100               	movlb	0	; () banked
  3500  014B86  5186               	movf	(??_CANInitialize+3)& (0+255),w,b
  3501  014B88  0A00               	xorlw	0	; case 0
  3502  014B8A  A4D8               	btfss	status,2,c
  3503  014B8C  D7E1               	goto	l379
  3504                           
  3505                           ; BSR set to: 0
  3506                           ; Switch size 1, requested type "space"
  3507                           ; Number of cases is 2, Range of values is 191 to 223
  3508                           ; switch strategies available:
  3509                           ; Name         Instructions Cycles
  3510                           ; simple_byte            7     4 (average)
  3511                           ;	Chosen strategy is simple_byte
  3512  014B8E  0100               	movlb	0	; () banked
  3513  014B90  5185               	movf	(??_CANInitialize+2)& (0+255),w,b
  3514  014B92  0ABF               	xorlw	191	; case 191
  3515  014B94  B4D8               	btfsc	status,2,c
  3516  014B96  D7D7               	goto	l378
  3517  014B98  0A60               	xorlw	96	; case 223
  3518  014B9A  B4D8               	btfsc	status,2,c
  3519  014B9C  D7D0               	goto	l6164
  3520  014B9E  D7D8               	goto	l379
  3521  014BA0                     l6172:
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3525  014BA0  0E00               	movlw	0
  3526  014BA2  0100               	movlb	0	; () banked
  3527  014BA4  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3528  014BA6  0E00               	movlw	0
  3529  014BA8  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3530  014BAA  0E00               	movlw	0
  3531  014BAC  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3532  014BAE  0E00               	movlw	0
  3533  014BB0  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3534  014BB2  C088  F074         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3535  014BB6  0E00               	movlw	0
  3536  014BB8  EC00  F080         	call	_CANSetFilter
  3537                           
  3538                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3539  014BBC  0E00               	movlw	0
  3540  014BBE  0100               	movlb	0	; () banked
  3541  014BC0  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3542  014BC2  0E00               	movlw	0
  3543  014BC4  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3544  014BC6  0E00               	movlw	0
  3545  014BC8  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3546  014BCA  0E00               	movlw	0
  3547  014BCC  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3548  014BCE  C088  F074         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3549  014BD2  0E01               	movlw	1
  3550  014BD4  EC00  F080         	call	_CANSetFilter
  3551                           
  3552                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3553  014BD8  0E00               	movlw	0
  3554  014BDA  0100               	movlb	0	; () banked
  3555  014BDC  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3556  014BDE  0E00               	movlw	0
  3557  014BE0  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3558  014BE2  0E00               	movlw	0
  3559  014BE4  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3560  014BE6  0E00               	movlw	0
  3561  014BE8  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3562  014BEA  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3563  014BEE  0E02               	movlw	2
  3564  014BF0  EC00  F080         	call	_CANSetFilter
  3565                           
  3566                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3567  014BF4  0E00               	movlw	0
  3568  014BF6  0100               	movlb	0	; () banked
  3569  014BF8  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3570  014BFA  0E00               	movlw	0
  3571  014BFC  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3572  014BFE  0E00               	movlw	0
  3573  014C00  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3574  014C02  0E00               	movlw	0
  3575  014C04  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3576  014C06  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3577  014C0A  0E03               	movlw	3
  3578  014C0C  EC00  F080         	call	_CANSetFilter
  3579                           
  3580                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3581  014C10  0E00               	movlw	0
  3582  014C12  0100               	movlb	0	; () banked
  3583  014C14  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3584  014C16  0E00               	movlw	0
  3585  014C18  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3586  014C1A  0E00               	movlw	0
  3587  014C1C  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3588  014C1E  0E00               	movlw	0
  3589  014C20  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3590  014C22  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3591  014C26  0E04               	movlw	4
  3592  014C28  EC00  F080         	call	_CANSetFilter
  3593                           
  3594                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3595  014C2C  0E00               	movlw	0
  3596  014C2E  0100               	movlb	0	; () banked
  3597  014C30  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3598  014C32  0E00               	movlw	0
  3599  014C34  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3600  014C36  0E00               	movlw	0
  3601  014C38  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3602  014C3A  0E00               	movlw	0
  3603  014C3C  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3604  014C3E  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3605  014C42  0E05               	movlw	5
  3606  014C44  EC00  F080         	call	_CANSetFilter
  3607                           
  3608                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3609  014C48  0E00               	movlw	0
  3610  014C4A  EC37  F0B2         	call	_CANOperationMode
  3611  014C4E  0012               	return		;funcret
  3612  014C50                     __end_of_CANInitialize:
  3613                           	opt stack 0
  3614                           tblptru	equ	0xFF8
  3615                           tblptrh	equ	0xFF7
  3616                           tblptrl	equ	0xFF6
  3617                           tablat	equ	0xFF5
  3618                           intcon	equ	0xFF2
  3619                           postinc0	equ	0xFEE
  3620                           wreg	equ	0xFE8
  3621                           status	equ	0xFD8
  3622                           
  3623 ;; *************** function _CANSetMask *****************
  3624 ;; Defined at:
  3625 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  numBuffer       1    wreg     enum E16921
  3628 ;;  mask            4   16[BANK0 ] unsigned long 
  3629 ;;  type            1   20[BANK0 ] enum E16887
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;  numBuffer       1   25[BANK0 ] enum E16921
  3632 ;;  tamp            4   26[BANK0 ] unsigned long 
  3633 ;; Return value:  Size  Location     Type
  3634 ;;		None               void
  3635 ;; Registers used:
  3636 ;;		wreg, status,2, status,0
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3642 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3643 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3644 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3645 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3646 ;;Total ram usage:       14 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:    3
  3649 ;; This function calls:
  3650 ;;		Nothing
  3651 ;; This function is called by:
  3652 ;;		_CANInitialize
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text3
  3657  014018                     __ptext3:
  3658                           	opt stack 0
  3659  014018                     _CANSetMask:
  3660                           	opt stack 25
  3661                           
  3662                           ;incstack = 0
  3663                           ;CANSetMask@numBuffer stored from wreg
  3664  014018  0100               	movlb	0	; () banked
  3665  01401A  6F79               	movwf	CANSetMask@numBuffer& (0+255),b
  3666                           
  3667                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3668  01401C  0100               	movlb	0	; () banked
  3669  01401E  0579               	decf	CANSetMask@numBuffer& (0+255),w,b
  3670  014020  A4D8               	btfss	status,2,c
  3671  014022  D056               	goto	l5340
  3672                           
  3673                           ; BSR set to: 0
  3674  014024  0100               	movlb	0	; () banked
  3675  014026  2974               	incf	CANSetMask@type& (0+255),w,b
  3676  014028  A4D8               	btfss	status,2,c
  3677  01402A  D052               	goto	l5340
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;inc\CANlib.h: 644: {
  3681                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3682  01402C  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  3683  014030  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3684  014034  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3685  014038  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3686  01403C  0E04               	movlw	4
  3687  01403E  D006               	goto	u6020
  3688  014040                     u6025:
  3689  014040  0100               	movlb	0	; () banked
  3690  014042  90D8               	bcf	status,0,c
  3691  014044  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3692  014046  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3693  014048  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3694  01404A  3375               	rrcf	??_CANSetMask& (0+255),f,b
  3695  01404C                     u6020:
  3696  01404C  2EE8               	decfsz	wreg,f,c
  3697  01404E  D7F8               	goto	u6025
  3698  014050  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3699  014054  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3700  014058  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3701  01405C  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3705  014060  0100               	movlb	0	; () banked
  3706  014062  517A               	movf	CANSetMask@tamp& (0+255),w,b
  3707  014064  0100               	movlb	0	; () banked
  3708  014066  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3709  014068  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3710  01406A  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3711  01406C  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3715  01406E  C07A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3719  014072  0E07               	movlw	7
  3720  014074  0100               	movlb	0	; () banked
  3721  014076  1570               	andwf	CANSetMask@mask& (0+255),w,b
  3722  014078  0100               	movlb	0	; () banked
  3723  01407A  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3724  01407C  0E00               	movlw	0
  3725  01407E  0100               	movlb	0	; () banked
  3726  014080  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3727  014082  0100               	movlb	0	; () banked
  3728  014084  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3729  014086  0E00               	movlw	0
  3730  014088  0100               	movlb	0	; () banked
  3731  01408A  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3732  01408C  0100               	movlb	0	; () banked
  3733  01408E  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3734  014090  0E00               	movlw	0
  3735  014092  0100               	movlb	0	; () banked
  3736  014094  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3737  014096  0100               	movlb	0	; () banked
  3738  014098  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3742  01409A  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  3743  01409E  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3744  0140A2  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3745  0140A6  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3746  0140AA  0E05               	movlw	5
  3747  0140AC                     u6035:
  3748  0140AC  90D8               	bcf	status,0,c
  3749  0140AE  0100               	movlb	0	; () banked
  3750  0140B0  3775               	rlcf	??_CANSetMask& (0+255),f,b
  3751  0140B2  3776               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3752  0140B4  3777               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3753  0140B6  3778               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3754  0140B8  2EE8               	decfsz	wreg,f,c
  3755  0140BA  D7F8               	goto	u6035
  3756  0140BC  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3757  0140C0  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3758  0140C4  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3759  0140C8  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3763  0140CC  C07A  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3764  0140D0                     l5340:
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;inc\CANlib.h: 652: }
  3768                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3769  0140D0  0E02               	movlw	2
  3770  0140D2  0100               	movlb	0	; () banked
  3771  0140D4  1979               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3772  0140D6  A4D8               	btfss	status,2,c
  3773  0140D8  D056               	goto	l5356
  3774                           
  3775                           ; BSR set to: 0
  3776  0140DA  0100               	movlb	0	; () banked
  3777  0140DC  2974               	incf	CANSetMask@type& (0+255),w,b
  3778  0140DE  A4D8               	btfss	status,2,c
  3779  0140E0  D052               	goto	l5356
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;inc\CANlib.h: 655: {
  3783                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3784  0140E2  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  3785  0140E6  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3786  0140EA  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3787  0140EE  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3788  0140F2  0E04               	movlw	4
  3789  0140F4  D006               	goto	u6060
  3790  0140F6                     u6065:
  3791  0140F6  0100               	movlb	0	; () banked
  3792  0140F8  90D8               	bcf	status,0,c
  3793  0140FA  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3794  0140FC  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3795  0140FE  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3796  014100  3375               	rrcf	??_CANSetMask& (0+255),f,b
  3797  014102                     u6060:
  3798  014102  2EE8               	decfsz	wreg,f,c
  3799  014104  D7F8               	goto	u6065
  3800  014106  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3801  01410A  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3802  01410E  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3803  014112  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3807  014116  0100               	movlb	0	; () banked
  3808  014118  517A               	movf	CANSetMask@tamp& (0+255),w,b
  3809  01411A  0100               	movlb	0	; () banked
  3810  01411C  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3811  01411E  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3812  014120  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3813  014122  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3817  014124  C07A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3821  014128  0E07               	movlw	7
  3822  01412A  0100               	movlb	0	; () banked
  3823  01412C  1570               	andwf	CANSetMask@mask& (0+255),w,b
  3824  01412E  0100               	movlb	0	; () banked
  3825  014130  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3826  014132  0E00               	movlw	0
  3827  014134  0100               	movlb	0	; () banked
  3828  014136  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3829  014138  0100               	movlb	0	; () banked
  3830  01413A  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3831  01413C  0E00               	movlw	0
  3832  01413E  0100               	movlb	0	; () banked
  3833  014140  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3834  014142  0100               	movlb	0	; () banked
  3835  014144  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3836  014146  0E00               	movlw	0
  3837  014148  0100               	movlb	0	; () banked
  3838  01414A  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3839  01414C  0100               	movlb	0	; () banked
  3840  01414E  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3844  014150  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  3845  014154  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3846  014158  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3847  01415C  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3848  014160  0E05               	movlw	5
  3849  014162                     u6075:
  3850  014162  90D8               	bcf	status,0,c
  3851  014164  0100               	movlb	0	; () banked
  3852  014166  3775               	rlcf	??_CANSetMask& (0+255),f,b
  3853  014168  3776               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3854  01416A  3777               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3855  01416C  3778               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3856  01416E  2EE8               	decfsz	wreg,f,c
  3857  014170  D7F8               	goto	u6075
  3858  014172  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3859  014176  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3860  01417A  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3861  01417E  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3865  014182  C07A  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3866  014186                     l5356:
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;inc\CANlib.h: 663: }
  3870                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3871  014186  0100               	movlb	0	; () banked
  3872  014188  0579               	decf	CANSetMask@numBuffer& (0+255),w,b
  3873  01418A  A4D8               	btfss	status,2,c
  3874  01418C  D087               	goto	l5388
  3875                           
  3876                           ; BSR set to: 0
  3877  01418E  0EF7               	movlw	247
  3878  014190  0100               	movlb	0	; () banked
  3879  014192  1974               	xorwf	CANSetMask@type& (0+255),w,b
  3880  014194  A4D8               	btfss	status,2,c
  3881  014196  D082               	goto	l5388
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;inc\CANlib.h: 666: {
  3885                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3886  014198  0100               	movlb	0	; () banked
  3887  01419A  5170               	movf	CANSetMask@mask& (0+255),w,b
  3888  01419C  0100               	movlb	0	; () banked
  3889  01419E  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3890  0141A0  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3891  0141A2  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3892  0141A4  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3896  0141A6  C07A  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3900  0141AA  0E00               	movlw	0
  3901  0141AC  0100               	movlb	0	; () banked
  3902  0141AE  1570               	andwf	CANSetMask@mask& (0+255),w,b
  3903  0141B0  0100               	movlb	0	; () banked
  3904  0141B2  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3905  0141B4  0EFF               	movlw	255
  3906  0141B6  0100               	movlb	0	; () banked
  3907  0141B8  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3908  0141BA  0100               	movlb	0	; () banked
  3909  0141BC  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3910  0141BE  0E00               	movlw	0
  3911  0141C0  0100               	movlb	0	; () banked
  3912  0141C2  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3913  0141C4  0100               	movlb	0	; () banked
  3914  0141C6  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3915  0141C8  0E00               	movlw	0
  3916  0141CA  0100               	movlb	0	; () banked
  3917  0141CC  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3918  0141CE  0100               	movlb	0	; () banked
  3919  0141D0  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3923  0141D2  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  3924  0141D6  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3925  0141DA  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3926  0141DE  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3927  0141E2  C076  F075         	movff	??_CANSetMask+1,??_CANSetMask
  3928  0141E6  C077  F076         	movff	??_CANSetMask+2,??_CANSetMask+1
  3929  0141EA  C078  F077         	movff	??_CANSetMask+3,??_CANSetMask+2
  3930  0141EE  0100               	movlb	0	; () banked
  3931  0141F0  6B78               	clrf	(??_CANSetMask+3)& (0+255),b
  3932  0141F2  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3933  0141F6  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3934  0141FA  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3935  0141FE  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3939  014202  C07A  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3943  014206  0100               	movlb	0	; () banked
  3944  014208  A172               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3945  01420A  D003               	goto	l452
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3949  01420C  010F               	movlb	15	; () banked
  3950  01420E  8119               	bsf	25,0,b	;volatile
  3951  014210  D002               	goto	l453
  3952  014212                     l452:
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;inc\CANlib.h: 676: else
  3956                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3957  014212  010F               	movlb	15	; () banked
  3958  014214  9119               	bcf	25,0,b	;volatile
  3959  014216                     l453:
  3960                           
  3961                           ; BSR set to: 15
  3962                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3963  014216  0100               	movlb	0	; () banked
  3964  014218  A372               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3965  01421A  D003               	goto	l454
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3969  01421C  010F               	movlb	15	; () banked
  3970  01421E  8319               	bsf	25,1,b	;volatile
  3971  014220  D002               	goto	l455
  3972  014222                     l454:
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;inc\CANlib.h: 681: else
  3976                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3977  014222  010F               	movlb	15	; () banked
  3978  014224  9319               	bcf	25,1,b	;volatile
  3979  014226                     l455:
  3980                           
  3981                           ; BSR set to: 15
  3982                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3983  014226  0100               	movlb	0	; () banked
  3984  014228  A572               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3985  01422A  D003               	goto	l456
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3989  01422C  010F               	movlb	15	; () banked
  3990  01422E  8B19               	bsf	25,5,b	;volatile
  3991  014230  D002               	goto	l457
  3992  014232                     l456:
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;inc\CANlib.h: 686: else
  3996                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3997  014232  010F               	movlb	15	; () banked
  3998  014234  9B19               	bcf	25,5,b	;volatile
  3999  014236                     l457:
  4000                           
  4001                           ; BSR set to: 15
  4002                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4003  014236  0100               	movlb	0	; () banked
  4004  014238  A772               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4005  01423A  D003               	goto	l458
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4009  01423C  010F               	movlb	15	; () banked
  4010  01423E  8D19               	bsf	25,6,b	;volatile
  4011  014240  D002               	goto	l459
  4012  014242                     l458:
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;inc\CANlib.h: 691: else
  4016                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4017  014242  010F               	movlb	15	; () banked
  4018  014244  9D19               	bcf	25,6,b	;volatile
  4019  014246                     l459:
  4020                           
  4021                           ; BSR set to: 15
  4022                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4023  014246  0100               	movlb	0	; () banked
  4024  014248  A972               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4025  01424A  D003               	goto	l460
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4029  01424C  010F               	movlb	15	; () banked
  4030  01424E  8F19               	bsf	25,7,b	;volatile
  4031  014250  D002               	goto	l5382
  4032  014252                     l460:
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;inc\CANlib.h: 696: else
  4036                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4037  014252  010F               	movlb	15	; () banked
  4038  014254  9F19               	bcf	25,7,b	;volatile
  4039  014256                     l5382:
  4040                           
  4041                           ; BSR set to: 15
  4042                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4043  014256  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  4044  01425A  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4045  01425E  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4046  014262  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4047  014266  0E16               	movlw	22
  4048  014268  D006               	goto	u6150
  4049  01426A                     u6155:
  4050  01426A  0100               	movlb	0	; () banked
  4051  01426C  90D8               	bcf	status,0,c
  4052  01426E  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4053  014270  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4054  014272  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4055  014274  3375               	rrcf	??_CANSetMask& (0+255),f,b
  4056  014276                     u6150:
  4057  014276  2EE8               	decfsz	wreg,f,c
  4058  014278  D7F8               	goto	u6155
  4059  01427A  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4060  01427E  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4061  014282  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4062  014286  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4066  01428A  0100               	movlb	0	; () banked
  4067  01428C  517A               	movf	CANSetMask@tamp& (0+255),w,b
  4068  01428E  0100               	movlb	0	; () banked
  4069  014290  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4070  014292  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4071  014294  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4072  014296  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4076  014298  C07A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4077  01429C                     l5388:
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;inc\CANlib.h: 702: }
  4081                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4082  01429C  0E02               	movlw	2
  4083  01429E  0100               	movlb	0	; () banked
  4084  0142A0  1979               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4085  0142A2  A4D8               	btfss	status,2,c
  4086  0142A4  0012               	return	
  4087                           
  4088                           ; BSR set to: 0
  4089  0142A6  0EF7               	movlw	247
  4090  0142A8  0100               	movlb	0	; () banked
  4091  0142AA  1974               	xorwf	CANSetMask@type& (0+255),w,b
  4092  0142AC  A4D8               	btfss	status,2,c
  4093  0142AE  0012               	return	
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;inc\CANlib.h: 705: {
  4097                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4098  0142B0  0100               	movlb	0	; () banked
  4099  0142B2  5170               	movf	CANSetMask@mask& (0+255),w,b
  4100  0142B4  0100               	movlb	0	; () banked
  4101  0142B6  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4102  0142B8  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4103  0142BA  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4104  0142BC  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4108  0142BE  C07A  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4112  0142C2  0E00               	movlw	0
  4113  0142C4  0100               	movlb	0	; () banked
  4114  0142C6  1570               	andwf	CANSetMask@mask& (0+255),w,b
  4115  0142C8  0100               	movlb	0	; () banked
  4116  0142CA  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4117  0142CC  0EFF               	movlw	255
  4118  0142CE  0100               	movlb	0	; () banked
  4119  0142D0  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4120  0142D2  0100               	movlb	0	; () banked
  4121  0142D4  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4122  0142D6  0E00               	movlw	0
  4123  0142D8  0100               	movlb	0	; () banked
  4124  0142DA  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4125  0142DC  0100               	movlb	0	; () banked
  4126  0142DE  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4127  0142E0  0E00               	movlw	0
  4128  0142E2  0100               	movlb	0	; () banked
  4129  0142E4  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4130  0142E6  0100               	movlb	0	; () banked
  4131  0142E8  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4135  0142EA  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  4136  0142EE  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4137  0142F2  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4138  0142F6  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4139  0142FA  C076  F075         	movff	??_CANSetMask+1,??_CANSetMask
  4140  0142FE  C077  F076         	movff	??_CANSetMask+2,??_CANSetMask+1
  4141  014302  C078  F077         	movff	??_CANSetMask+3,??_CANSetMask+2
  4142  014306  0100               	movlb	0	; () banked
  4143  014308  6B78               	clrf	(??_CANSetMask+3)& (0+255),b
  4144  01430A  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4145  01430E  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4146  014312  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4147  014316  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4151  01431A  C07A  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4155  01431E  0100               	movlb	0	; () banked
  4156  014320  A172               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4157  014322  D003               	goto	l463
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4161  014324  010F               	movlb	15	; () banked
  4162  014326  811D               	bsf	29,0,b	;volatile
  4163  014328  D002               	goto	l464
  4164  01432A                     l463:
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;inc\CANlib.h: 715: else
  4168                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4169  01432A  010F               	movlb	15	; () banked
  4170  01432C  911D               	bcf	29,0,b	;volatile
  4171  01432E                     l464:
  4172                           
  4173                           ; BSR set to: 15
  4174                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4175  01432E  0100               	movlb	0	; () banked
  4176  014330  A372               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4177  014332  D003               	goto	l465
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4181  014334  010F               	movlb	15	; () banked
  4182  014336  831D               	bsf	29,1,b	;volatile
  4183  014338  D002               	goto	l466
  4184  01433A                     l465:
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;inc\CANlib.h: 720: else
  4188                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4189  01433A  010F               	movlb	15	; () banked
  4190  01433C  931D               	bcf	29,1,b	;volatile
  4191  01433E                     l466:
  4192                           
  4193                           ; BSR set to: 15
  4194                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4195  01433E  0100               	movlb	0	; () banked
  4196  014340  A572               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4197  014342  D003               	goto	l467
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4201  014344  010F               	movlb	15	; () banked
  4202  014346  8B1D               	bsf	29,5,b	;volatile
  4203  014348  D002               	goto	l468
  4204  01434A                     l467:
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;inc\CANlib.h: 725: else
  4208                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4209  01434A  010F               	movlb	15	; () banked
  4210  01434C  9B1D               	bcf	29,5,b	;volatile
  4211  01434E                     l468:
  4212                           
  4213                           ; BSR set to: 15
  4214                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4215  01434E  0100               	movlb	0	; () banked
  4216  014350  A772               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4217  014352  D003               	goto	l469
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4221  014354  010F               	movlb	15	; () banked
  4222  014356  8D1D               	bsf	29,6,b	;volatile
  4223  014358  D002               	goto	l470
  4224  01435A                     l469:
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;inc\CANlib.h: 730: else
  4228                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4229  01435A  010F               	movlb	15	; () banked
  4230  01435C  9D1D               	bcf	29,6,b	;volatile
  4231  01435E                     l470:
  4232                           
  4233                           ; BSR set to: 15
  4234                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4235  01435E  0100               	movlb	0	; () banked
  4236  014360  A972               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4237  014362  D003               	goto	l471
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4241  014364  010F               	movlb	15	; () banked
  4242  014366  8F1D               	bsf	29,7,b	;volatile
  4243  014368  D002               	goto	l5414
  4244  01436A                     l471:
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;inc\CANlib.h: 735: else
  4248                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4249  01436A  010F               	movlb	15	; () banked
  4250  01436C  9F1D               	bcf	29,7,b	;volatile
  4251  01436E                     l5414:
  4252                           
  4253                           ; BSR set to: 15
  4254                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4255  01436E  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  4256  014372  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4257  014376  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4258  01437A  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4259  01437E  0E16               	movlw	22
  4260  014380  D006               	goto	u6230
  4261  014382                     u6235:
  4262  014382  0100               	movlb	0	; () banked
  4263  014384  90D8               	bcf	status,0,c
  4264  014386  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4265  014388  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4266  01438A  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4267  01438C  3375               	rrcf	??_CANSetMask& (0+255),f,b
  4268  01438E                     u6230:
  4269  01438E  2EE8               	decfsz	wreg,f,c
  4270  014390  D7F8               	goto	u6235
  4271  014392  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4272  014396  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4273  01439A  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4274  01439E  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4278  0143A2  0100               	movlb	0	; () banked
  4279  0143A4  517A               	movf	CANSetMask@tamp& (0+255),w,b
  4280  0143A6  0100               	movlb	0	; () banked
  4281  0143A8  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4282  0143AA  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4283  0143AC  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4284  0143AE  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4288  0143B0  C07A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4289  0143B4  0012               	return	
  4290  0143B6                     __end_of_CANSetMask:
  4291                           	opt stack 0
  4292                           tblptru	equ	0xFF8
  4293                           tblptrh	equ	0xFF7
  4294                           tblptrl	equ	0xFF6
  4295                           tablat	equ	0xFF5
  4296                           intcon	equ	0xFF2
  4297                           postinc0	equ	0xFEE
  4298                           wreg	equ	0xFE8
  4299                           status	equ	0xFD8
  4300                           
  4301 ;; *************** function _CANSetFilter *****************
  4302 ;; Defined at:
  4303 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  numBuffer       1    wreg     enum E16924
  4306 ;;  filter          4   16[BANK0 ] unsigned long 
  4307 ;;  type            1   20[BANK0 ] enum E16887
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;  numBuffer       1   25[BANK0 ] enum E16924
  4310 ;;  tamp            4   26[BANK0 ] unsigned long 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;		None               void
  4313 ;; Registers used:
  4314 ;;		wreg, status,2, status,0
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4320 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4321 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4322 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4323 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4324 ;;Total ram usage:       14 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:    3
  4327 ;; This function calls:
  4328 ;;		Nothing
  4329 ;; This function is called by:
  4330 ;;		_CANInitialize
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           	psect	text4
  4335  010000                     __ptext4:
  4336                           	opt stack 0
  4337  010000                     _CANSetFilter:
  4338                           	opt stack 25
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;incstack = 0
  4342                           ;CANSetFilter@numBuffer stored from wreg
  4343  010000  0100               	movlb	0	; () banked
  4344  010002  6F79               	movwf	CANSetFilter@numBuffer& (0+255),b
  4345                           
  4346                           ;inc\CANlib.h: 750: unsigned long tamp;
  4347                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4348  010004  0100               	movlb	0	; () banked
  4349  010006  5179               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4350  010008  0100               	movlb	0	; () banked
  4351  01000A  A4D8               	btfss	status,2,c
  4352  01000C  D058               	goto	l5438
  4353                           
  4354                           ; BSR set to: 0
  4355  01000E  0100               	movlb	0	; () banked
  4356  010010  2974               	incf	CANSetFilter@type& (0+255),w,b
  4357  010012  A4D8               	btfss	status,2,c
  4358  010014  D054               	goto	l5438
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;inc\CANlib.h: 753: {
  4362                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4363  010016  010F               	movlb	15	; () banked
  4364  010018  9701               	bcf	1,3,b	;volatile
  4365                           
  4366                           ; BSR set to: 15
  4367                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4368  01001A  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4369  01001E  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4370  010022  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4371  010026  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4372  01002A  0E04               	movlw	4
  4373  01002C  D006               	goto	u6260
  4374  01002E                     u6265:
  4375  01002E  0100               	movlb	0	; () banked
  4376  010030  90D8               	bcf	status,0,c
  4377  010032  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4378  010034  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4379  010036  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4380  010038  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4381  01003A                     u6260:
  4382  01003A  2EE8               	decfsz	wreg,f,c
  4383  01003C  D7F8               	goto	u6265
  4384  01003E  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4385  010042  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4386  010046  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4387  01004A  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4391  01004E  0100               	movlb	0	; () banked
  4392  010050  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4393  010052  0100               	movlb	0	; () banked
  4394  010054  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4395  010056  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4396  010058  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4397  01005A  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4401  01005C  C07A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4405  010060  0E07               	movlw	7
  4406  010062  0100               	movlb	0	; () banked
  4407  010064  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4408  010066  0100               	movlb	0	; () banked
  4409  010068  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4410  01006A  0E00               	movlw	0
  4411  01006C  0100               	movlb	0	; () banked
  4412  01006E  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4413  010070  0100               	movlb	0	; () banked
  4414  010072  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4415  010074  0E00               	movlw	0
  4416  010076  0100               	movlb	0	; () banked
  4417  010078  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4418  01007A  0100               	movlb	0	; () banked
  4419  01007C  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4420  01007E  0E00               	movlw	0
  4421  010080  0100               	movlb	0	; () banked
  4422  010082  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4423  010084  0100               	movlb	0	; () banked
  4424  010086  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4428  010088  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4429  01008C  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4430  010090  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4431  010094  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4432  010098  0E05               	movlw	5
  4433  01009A                     u6275:
  4434  01009A  90D8               	bcf	status,0,c
  4435  01009C  0100               	movlb	0	; () banked
  4436  01009E  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4437  0100A0  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4438  0100A2  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4439  0100A4  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4440  0100A6  2EE8               	decfsz	wreg,f,c
  4441  0100A8  D7F8               	goto	u6275
  4442  0100AA  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4443  0100AE  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4444  0100B2  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4445  0100B6  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4449  0100BA  C07A  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4450  0100BE                     l5438:
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;inc\CANlib.h: 763: }
  4454                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4455  0100BE  0100               	movlb	0	; () banked
  4456  0100C0  0579               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4457  0100C2  A4D8               	btfss	status,2,c
  4458  0100C4  D058               	goto	l5456
  4459                           
  4460                           ; BSR set to: 0
  4461  0100C6  0100               	movlb	0	; () banked
  4462  0100C8  2974               	incf	CANSetFilter@type& (0+255),w,b
  4463  0100CA  A4D8               	btfss	status,2,c
  4464  0100CC  D054               	goto	l5456
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;inc\CANlib.h: 766: {
  4468                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4469  0100CE  010F               	movlb	15	; () banked
  4470  0100D0  9705               	bcf	5,3,b	;volatile
  4471                           
  4472                           ; BSR set to: 15
  4473                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4474  0100D2  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4475  0100D6  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4476  0100DA  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4477  0100DE  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4478  0100E2  0E04               	movlw	4
  4479  0100E4  D006               	goto	u6300
  4480  0100E6                     u6305:
  4481  0100E6  0100               	movlb	0	; () banked
  4482  0100E8  90D8               	bcf	status,0,c
  4483  0100EA  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4484  0100EC  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4485  0100EE  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4486  0100F0  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4487  0100F2                     u6300:
  4488  0100F2  2EE8               	decfsz	wreg,f,c
  4489  0100F4  D7F8               	goto	u6305
  4490  0100F6  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4491  0100FA  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4492  0100FE  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4493  010102  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4497  010106  0100               	movlb	0	; () banked
  4498  010108  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4499  01010A  0100               	movlb	0	; () banked
  4500  01010C  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4501  01010E  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4502  010110  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4503  010112  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4507  010114  C07A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4511  010118  0E07               	movlw	7
  4512  01011A  0100               	movlb	0	; () banked
  4513  01011C  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4514  01011E  0100               	movlb	0	; () banked
  4515  010120  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4516  010122  0E00               	movlw	0
  4517  010124  0100               	movlb	0	; () banked
  4518  010126  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4519  010128  0100               	movlb	0	; () banked
  4520  01012A  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4521  01012C  0E00               	movlw	0
  4522  01012E  0100               	movlb	0	; () banked
  4523  010130  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4524  010132  0100               	movlb	0	; () banked
  4525  010134  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4526  010136  0E00               	movlw	0
  4527  010138  0100               	movlb	0	; () banked
  4528  01013A  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4529  01013C  0100               	movlb	0	; () banked
  4530  01013E  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4534  010140  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4535  010144  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4536  010148  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4537  01014C  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4538  010150  0E05               	movlw	5
  4539  010152                     u6315:
  4540  010152  90D8               	bcf	status,0,c
  4541  010154  0100               	movlb	0	; () banked
  4542  010156  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4543  010158  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4544  01015A  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4545  01015C  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4546  01015E  2EE8               	decfsz	wreg,f,c
  4547  010160  D7F8               	goto	u6315
  4548  010162  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4549  010166  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4550  01016A  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4551  01016E  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4555  010172  C07A  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4556  010176                     l5456:
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;inc\CANlib.h: 776: }
  4560                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4561  010176  0E02               	movlw	2
  4562  010178  0100               	movlb	0	; () banked
  4563  01017A  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4564  01017C  A4D8               	btfss	status,2,c
  4565  01017E  D058               	goto	l5474
  4566                           
  4567                           ; BSR set to: 0
  4568  010180  0100               	movlb	0	; () banked
  4569  010182  2974               	incf	CANSetFilter@type& (0+255),w,b
  4570  010184  A4D8               	btfss	status,2,c
  4571  010186  D054               	goto	l5474
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;inc\CANlib.h: 779: {
  4575                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4576  010188  010F               	movlb	15	; () banked
  4577  01018A  9709               	bcf	9,3,b	;volatile
  4578                           
  4579                           ; BSR set to: 15
  4580                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4581  01018C  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4582  010190  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4583  010194  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4584  010198  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4585  01019C  0E04               	movlw	4
  4586  01019E  D006               	goto	u6340
  4587  0101A0                     u6345:
  4588  0101A0  0100               	movlb	0	; () banked
  4589  0101A2  90D8               	bcf	status,0,c
  4590  0101A4  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4591  0101A6  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4592  0101A8  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4593  0101AA  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4594  0101AC                     u6340:
  4595  0101AC  2EE8               	decfsz	wreg,f,c
  4596  0101AE  D7F8               	goto	u6345
  4597  0101B0  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4598  0101B4  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4599  0101B8  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4600  0101BC  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4601                           
  4602                           ; BSR set to: 0
  4603                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4604  0101C0  0100               	movlb	0	; () banked
  4605  0101C2  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4606  0101C4  0100               	movlb	0	; () banked
  4607  0101C6  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4608  0101C8  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4609  0101CA  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4610  0101CC  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4614  0101CE  C07A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4615                           
  4616                           ; BSR set to: 0
  4617                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4618  0101D2  0E07               	movlw	7
  4619  0101D4  0100               	movlb	0	; () banked
  4620  0101D6  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4621  0101D8  0100               	movlb	0	; () banked
  4622  0101DA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4623  0101DC  0E00               	movlw	0
  4624  0101DE  0100               	movlb	0	; () banked
  4625  0101E0  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4626  0101E2  0100               	movlb	0	; () banked
  4627  0101E4  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4628  0101E6  0E00               	movlw	0
  4629  0101E8  0100               	movlb	0	; () banked
  4630  0101EA  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4631  0101EC  0100               	movlb	0	; () banked
  4632  0101EE  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4633  0101F0  0E00               	movlw	0
  4634  0101F2  0100               	movlb	0	; () banked
  4635  0101F4  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4636  0101F6  0100               	movlb	0	; () banked
  4637  0101F8  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4641  0101FA  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4642  0101FE  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4643  010202  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4644  010206  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4645  01020A  0E05               	movlw	5
  4646  01020C                     u6355:
  4647  01020C  90D8               	bcf	status,0,c
  4648  01020E  0100               	movlb	0	; () banked
  4649  010210  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4650  010212  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4651  010214  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4652  010216  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4653  010218  2EE8               	decfsz	wreg,f,c
  4654  01021A  D7F8               	goto	u6355
  4655  01021C  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4656  010220  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4657  010224  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4658  010228  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4662  01022C  C07A  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4663  010230                     l5474:
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;inc\CANlib.h: 789: }
  4667                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4668  010230  0E03               	movlw	3
  4669  010232  0100               	movlb	0	; () banked
  4670  010234  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4671  010236  A4D8               	btfss	status,2,c
  4672  010238  D058               	goto	l5492
  4673                           
  4674                           ; BSR set to: 0
  4675  01023A  0100               	movlb	0	; () banked
  4676  01023C  2974               	incf	CANSetFilter@type& (0+255),w,b
  4677  01023E  A4D8               	btfss	status,2,c
  4678  010240  D054               	goto	l5492
  4679                           
  4680                           ; BSR set to: 0
  4681                           ;inc\CANlib.h: 792: {
  4682                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4683  010242  010F               	movlb	15	; () banked
  4684  010244  970D               	bcf	13,3,b	;volatile
  4685                           
  4686                           ; BSR set to: 15
  4687                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4688  010246  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4689  01024A  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4690  01024E  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4691  010252  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4692  010256  0E04               	movlw	4
  4693  010258  D006               	goto	u6380
  4694  01025A                     u6385:
  4695  01025A  0100               	movlb	0	; () banked
  4696  01025C  90D8               	bcf	status,0,c
  4697  01025E  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4698  010260  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4699  010262  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4700  010264  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4701  010266                     u6380:
  4702  010266  2EE8               	decfsz	wreg,f,c
  4703  010268  D7F8               	goto	u6385
  4704  01026A  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4705  01026E  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4706  010272  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4707  010276  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4708                           
  4709                           ; BSR set to: 0
  4710                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4711  01027A  0100               	movlb	0	; () banked
  4712  01027C  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4713  01027E  0100               	movlb	0	; () banked
  4714  010280  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4715  010282  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4716  010284  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4717  010286  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4721  010288  C07A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4725  01028C  0E07               	movlw	7
  4726  01028E  0100               	movlb	0	; () banked
  4727  010290  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4728  010292  0100               	movlb	0	; () banked
  4729  010294  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4730  010296  0E00               	movlw	0
  4731  010298  0100               	movlb	0	; () banked
  4732  01029A  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4733  01029C  0100               	movlb	0	; () banked
  4734  01029E  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4735  0102A0  0E00               	movlw	0
  4736  0102A2  0100               	movlb	0	; () banked
  4737  0102A4  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4738  0102A6  0100               	movlb	0	; () banked
  4739  0102A8  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4740  0102AA  0E00               	movlw	0
  4741  0102AC  0100               	movlb	0	; () banked
  4742  0102AE  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4743  0102B0  0100               	movlb	0	; () banked
  4744  0102B2  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4748  0102B4  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4749  0102B8  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4750  0102BC  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4751  0102C0  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4752  0102C4  0E05               	movlw	5
  4753  0102C6                     u6395:
  4754  0102C6  90D8               	bcf	status,0,c
  4755  0102C8  0100               	movlb	0	; () banked
  4756  0102CA  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4757  0102CC  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4758  0102CE  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4759  0102D0  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4760  0102D2  2EE8               	decfsz	wreg,f,c
  4761  0102D4  D7F8               	goto	u6395
  4762  0102D6  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4763  0102DA  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4764  0102DE  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4765  0102E2  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4769  0102E6  C07A  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4770  0102EA                     l5492:
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;inc\CANlib.h: 802: }
  4774                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4775  0102EA  0E04               	movlw	4
  4776  0102EC  0100               	movlb	0	; () banked
  4777  0102EE  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4778  0102F0  A4D8               	btfss	status,2,c
  4779  0102F2  D058               	goto	l5510
  4780                           
  4781                           ; BSR set to: 0
  4782  0102F4  0100               	movlb	0	; () banked
  4783  0102F6  2974               	incf	CANSetFilter@type& (0+255),w,b
  4784  0102F8  A4D8               	btfss	status,2,c
  4785  0102FA  D054               	goto	l5510
  4786                           
  4787                           ; BSR set to: 0
  4788                           ;inc\CANlib.h: 805: {
  4789                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4790  0102FC  010F               	movlb	15	; () banked
  4791  0102FE  9711               	bcf	17,3,b	;volatile
  4792                           
  4793                           ; BSR set to: 15
  4794                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4795  010300  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4796  010304  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4797  010308  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4798  01030C  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4799  010310  0E04               	movlw	4
  4800  010312  D006               	goto	u6420
  4801  010314                     u6425:
  4802  010314  0100               	movlb	0	; () banked
  4803  010316  90D8               	bcf	status,0,c
  4804  010318  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4805  01031A  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4806  01031C  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4807  01031E  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4808  010320                     u6420:
  4809  010320  2EE8               	decfsz	wreg,f,c
  4810  010322  D7F8               	goto	u6425
  4811  010324  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4812  010328  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4813  01032C  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4814  010330  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4818  010334  0100               	movlb	0	; () banked
  4819  010336  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4820  010338  0100               	movlb	0	; () banked
  4821  01033A  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4822  01033C  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4823  01033E  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4824  010340  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4828  010342  C07A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4832  010346  0E07               	movlw	7
  4833  010348  0100               	movlb	0	; () banked
  4834  01034A  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4835  01034C  0100               	movlb	0	; () banked
  4836  01034E  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4837  010350  0E00               	movlw	0
  4838  010352  0100               	movlb	0	; () banked
  4839  010354  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4840  010356  0100               	movlb	0	; () banked
  4841  010358  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4842  01035A  0E00               	movlw	0
  4843  01035C  0100               	movlb	0	; () banked
  4844  01035E  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4845  010360  0100               	movlb	0	; () banked
  4846  010362  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4847  010364  0E00               	movlw	0
  4848  010366  0100               	movlb	0	; () banked
  4849  010368  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4850  01036A  0100               	movlb	0	; () banked
  4851  01036C  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4855  01036E  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4856  010372  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4857  010376  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4858  01037A  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4859  01037E  0E05               	movlw	5
  4860  010380                     u6435:
  4861  010380  90D8               	bcf	status,0,c
  4862  010382  0100               	movlb	0	; () banked
  4863  010384  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4864  010386  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4865  010388  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4866  01038A  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4867  01038C  2EE8               	decfsz	wreg,f,c
  4868  01038E  D7F8               	goto	u6435
  4869  010390  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4870  010394  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4871  010398  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4872  01039C  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4876  0103A0  C07A  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4877  0103A4                     l5510:
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;inc\CANlib.h: 815: }
  4881                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4882  0103A4  0E05               	movlw	5
  4883  0103A6  0100               	movlb	0	; () banked
  4884  0103A8  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4885  0103AA  A4D8               	btfss	status,2,c
  4886  0103AC  D058               	goto	l5528
  4887                           
  4888                           ; BSR set to: 0
  4889  0103AE  0100               	movlb	0	; () banked
  4890  0103B0  2974               	incf	CANSetFilter@type& (0+255),w,b
  4891  0103B2  A4D8               	btfss	status,2,c
  4892  0103B4  D054               	goto	l5528
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;inc\CANlib.h: 818: {
  4896                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4897  0103B6  010F               	movlb	15	; () banked
  4898  0103B8  9715               	bcf	21,3,b	;volatile
  4899                           
  4900                           ; BSR set to: 15
  4901                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4902  0103BA  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4903  0103BE  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4904  0103C2  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4905  0103C6  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4906  0103CA  0E04               	movlw	4
  4907  0103CC  D006               	goto	u6460
  4908  0103CE                     u6465:
  4909  0103CE  0100               	movlb	0	; () banked
  4910  0103D0  90D8               	bcf	status,0,c
  4911  0103D2  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4912  0103D4  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4913  0103D6  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4914  0103D8  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4915  0103DA                     u6460:
  4916  0103DA  2EE8               	decfsz	wreg,f,c
  4917  0103DC  D7F8               	goto	u6465
  4918  0103DE  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4919  0103E2  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4920  0103E6  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4921  0103EA  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4925  0103EE  0100               	movlb	0	; () banked
  4926  0103F0  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4927  0103F2  0100               	movlb	0	; () banked
  4928  0103F4  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4929  0103F6  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4930  0103F8  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4931  0103FA  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4935  0103FC  C07A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4939  010400  0E07               	movlw	7
  4940  010402  0100               	movlb	0	; () banked
  4941  010404  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4942  010406  0100               	movlb	0	; () banked
  4943  010408  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4944  01040A  0E00               	movlw	0
  4945  01040C  0100               	movlb	0	; () banked
  4946  01040E  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4947  010410  0100               	movlb	0	; () banked
  4948  010412  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4949  010414  0E00               	movlw	0
  4950  010416  0100               	movlb	0	; () banked
  4951  010418  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4952  01041A  0100               	movlb	0	; () banked
  4953  01041C  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4954  01041E  0E00               	movlw	0
  4955  010420  0100               	movlb	0	; () banked
  4956  010422  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4957  010424  0100               	movlb	0	; () banked
  4958  010426  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4962  010428  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4963  01042C  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4964  010430  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4965  010434  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4966  010438  0E05               	movlw	5
  4967  01043A                     u6475:
  4968  01043A  90D8               	bcf	status,0,c
  4969  01043C  0100               	movlb	0	; () banked
  4970  01043E  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4971  010440  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4972  010442  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4973  010444  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4974  010446  2EE8               	decfsz	wreg,f,c
  4975  010448  D7F8               	goto	u6475
  4976  01044A  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4977  01044E  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4978  010452  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4979  010456  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4983  01045A  C07A  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4984  01045E                     l5528:
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;inc\CANlib.h: 828: }
  4988                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4989  01045E  0100               	movlb	0	; () banked
  4990  010460  5179               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4991  010462  0100               	movlb	0	; () banked
  4992  010464  A4D8               	btfss	status,2,c
  4993  010466  D089               	goto	l5562
  4994                           
  4995                           ; BSR set to: 0
  4996  010468  0EF7               	movlw	247
  4997  01046A  0100               	movlb	0	; () banked
  4998  01046C  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  4999  01046E  A4D8               	btfss	status,2,c
  5000  010470  D084               	goto	l5562
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;inc\CANlib.h: 832: {
  5004                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5005  010472  010F               	movlb	15	; () banked
  5006  010474  8701               	bsf	1,3,b	;volatile
  5007                           
  5008                           ; BSR set to: 15
  5009                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5010  010476  0100               	movlb	0	; () banked
  5011  010478  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5012  01047A  0100               	movlb	0	; () banked
  5013  01047C  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5014  01047E  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5015  010480  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5016  010482  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5020  010484  C07A  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5024  010488  0E00               	movlw	0
  5025  01048A  0100               	movlb	0	; () banked
  5026  01048C  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5027  01048E  0100               	movlb	0	; () banked
  5028  010490  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5029  010492  0EFF               	movlw	255
  5030  010494  0100               	movlb	0	; () banked
  5031  010496  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5032  010498  0100               	movlb	0	; () banked
  5033  01049A  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5034  01049C  0E00               	movlw	0
  5035  01049E  0100               	movlb	0	; () banked
  5036  0104A0  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5037  0104A2  0100               	movlb	0	; () banked
  5038  0104A4  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5039  0104A6  0E00               	movlw	0
  5040  0104A8  0100               	movlb	0	; () banked
  5041  0104AA  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5042  0104AC  0100               	movlb	0	; () banked
  5043  0104AE  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5047  0104B0  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5048  0104B4  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5049  0104B8  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5050  0104BC  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5051  0104C0  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5052  0104C4  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5053  0104C8  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5054  0104CC  0100               	movlb	0	; () banked
  5055  0104CE  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5056  0104D0  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5057  0104D4  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5058  0104D8  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5059  0104DC  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5063  0104E0  C07A  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5067  0104E4  0100               	movlb	0	; () banked
  5068  0104E6  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5069  0104E8  D003               	goto	l483
  5070                           
  5071                           ; BSR set to: 0
  5072                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5073  0104EA  010F               	movlb	15	; () banked
  5074  0104EC  8101               	bsf	1,0,b	;volatile
  5075  0104EE  D002               	goto	l484
  5076  0104F0                     l483:
  5077                           
  5078                           ; BSR set to: 0
  5079                           ;inc\CANlib.h: 844: else
  5080                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5081  0104F0  010F               	movlb	15	; () banked
  5082  0104F2  9101               	bcf	1,0,b	;volatile
  5083  0104F4                     l484:
  5084                           
  5085                           ; BSR set to: 15
  5086                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5087  0104F4  0100               	movlb	0	; () banked
  5088  0104F6  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5089  0104F8  D003               	goto	l485
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5093  0104FA  010F               	movlb	15	; () banked
  5094  0104FC  8301               	bsf	1,1,b	;volatile
  5095  0104FE  D002               	goto	l486
  5096  010500                     l485:
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;inc\CANlib.h: 849: else
  5100                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5101  010500  010F               	movlb	15	; () banked
  5102  010502  9301               	bcf	1,1,b	;volatile
  5103  010504                     l486:
  5104                           
  5105                           ; BSR set to: 15
  5106                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5107  010504  0100               	movlb	0	; () banked
  5108  010506  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5109  010508  D003               	goto	l487
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5113  01050A  010F               	movlb	15	; () banked
  5114  01050C  8B01               	bsf	1,5,b	;volatile
  5115  01050E  D002               	goto	l488
  5116  010510                     l487:
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;inc\CANlib.h: 854: else
  5120                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5121  010510  010F               	movlb	15	; () banked
  5122  010512  9B01               	bcf	1,5,b	;volatile
  5123  010514                     l488:
  5124                           
  5125                           ; BSR set to: 15
  5126                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5127  010514  0100               	movlb	0	; () banked
  5128  010516  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5129  010518  D003               	goto	l489
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5133  01051A  010F               	movlb	15	; () banked
  5134  01051C  8D01               	bsf	1,6,b	;volatile
  5135  01051E  D002               	goto	l490
  5136  010520                     l489:
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;inc\CANlib.h: 859: else
  5140                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5141  010520  010F               	movlb	15	; () banked
  5142  010522  9D01               	bcf	1,6,b	;volatile
  5143  010524                     l490:
  5144                           
  5145                           ; BSR set to: 15
  5146                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5147  010524  0100               	movlb	0	; () banked
  5148  010526  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5149  010528  D003               	goto	l491
  5150                           
  5151                           ; BSR set to: 0
  5152                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5153  01052A  010F               	movlb	15	; () banked
  5154  01052C  8F01               	bsf	1,7,b	;volatile
  5155  01052E  D002               	goto	l5556
  5156  010530                     l491:
  5157                           
  5158                           ; BSR set to: 0
  5159                           ;inc\CANlib.h: 864: else
  5160                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5161  010530  010F               	movlb	15	; () banked
  5162  010532  9F01               	bcf	1,7,b	;volatile
  5163  010534                     l5556:
  5164                           
  5165                           ; BSR set to: 15
  5166                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5167  010534  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5168  010538  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5169  01053C  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5170  010540  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5171  010544  0E16               	movlw	22
  5172  010546  D006               	goto	u6550
  5173  010548                     u6555:
  5174  010548  0100               	movlb	0	; () banked
  5175  01054A  90D8               	bcf	status,0,c
  5176  01054C  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5177  01054E  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5178  010550  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5179  010552  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5180  010554                     u6550:
  5181  010554  2EE8               	decfsz	wreg,f,c
  5182  010556  D7F8               	goto	u6555
  5183  010558  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5184  01055C  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5185  010560  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5186  010564  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5187                           
  5188                           ; BSR set to: 0
  5189                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5190  010568  0100               	movlb	0	; () banked
  5191  01056A  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5192  01056C  0100               	movlb	0	; () banked
  5193  01056E  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5194  010570  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5195  010572  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5196  010574  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5197                           
  5198                           ; BSR set to: 0
  5199                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5200  010576  C07A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5201  01057A                     l5562:
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;inc\CANlib.h: 870: }
  5205                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5206  01057A  0100               	movlb	0	; () banked
  5207  01057C  0579               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5208  01057E  A4D8               	btfss	status,2,c
  5209  010580  D089               	goto	l5596
  5210                           
  5211                           ; BSR set to: 0
  5212  010582  0EF7               	movlw	247
  5213  010584  0100               	movlb	0	; () banked
  5214  010586  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5215  010588  A4D8               	btfss	status,2,c
  5216  01058A  D084               	goto	l5596
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;inc\CANlib.h: 873: {
  5220                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5221  01058C  010F               	movlb	15	; () banked
  5222  01058E  8705               	bsf	5,3,b	;volatile
  5223                           
  5224                           ; BSR set to: 15
  5225                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5226  010590  0100               	movlb	0	; () banked
  5227  010592  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5228  010594  0100               	movlb	0	; () banked
  5229  010596  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5230  010598  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5231  01059A  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5232  01059C  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5236  01059E  C07A  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5240  0105A2  0E00               	movlw	0
  5241  0105A4  0100               	movlb	0	; () banked
  5242  0105A6  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5243  0105A8  0100               	movlb	0	; () banked
  5244  0105AA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5245  0105AC  0EFF               	movlw	255
  5246  0105AE  0100               	movlb	0	; () banked
  5247  0105B0  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5248  0105B2  0100               	movlb	0	; () banked
  5249  0105B4  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5250  0105B6  0E00               	movlw	0
  5251  0105B8  0100               	movlb	0	; () banked
  5252  0105BA  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5253  0105BC  0100               	movlb	0	; () banked
  5254  0105BE  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5255  0105C0  0E00               	movlw	0
  5256  0105C2  0100               	movlb	0	; () banked
  5257  0105C4  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5258  0105C6  0100               	movlb	0	; () banked
  5259  0105C8  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5263  0105CA  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5264  0105CE  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5265  0105D2  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5266  0105D6  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5267  0105DA  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5268  0105DE  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5269  0105E2  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5270  0105E6  0100               	movlb	0	; () banked
  5271  0105E8  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5272  0105EA  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5273  0105EE  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5274  0105F2  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5275  0105F6  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5276                           
  5277                           ; BSR set to: 0
  5278                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5279  0105FA  C07A  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5283  0105FE  0100               	movlb	0	; () banked
  5284  010600  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5285  010602  D003               	goto	l494
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5289  010604  010F               	movlb	15	; () banked
  5290  010606  8105               	bsf	5,0,b	;volatile
  5291  010608  D002               	goto	l495
  5292  01060A                     l494:
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;inc\CANlib.h: 885: else
  5296                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5297  01060A  010F               	movlb	15	; () banked
  5298  01060C  9105               	bcf	5,0,b	;volatile
  5299  01060E                     l495:
  5300                           
  5301                           ; BSR set to: 15
  5302                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5303  01060E  0100               	movlb	0	; () banked
  5304  010610  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5305  010612  D003               	goto	l496
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5309  010614  010F               	movlb	15	; () banked
  5310  010616  8305               	bsf	5,1,b	;volatile
  5311  010618  D002               	goto	l497
  5312  01061A                     l496:
  5313                           
  5314                           ; BSR set to: 0
  5315                           ;inc\CANlib.h: 890: else
  5316                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5317  01061A  010F               	movlb	15	; () banked
  5318  01061C  9305               	bcf	5,1,b	;volatile
  5319  01061E                     l497:
  5320                           
  5321                           ; BSR set to: 15
  5322                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5323  01061E  0100               	movlb	0	; () banked
  5324  010620  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5325  010622  D003               	goto	l498
  5326                           
  5327                           ; BSR set to: 0
  5328                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5329  010624  010F               	movlb	15	; () banked
  5330  010626  8B05               	bsf	5,5,b	;volatile
  5331  010628  D002               	goto	l499
  5332  01062A                     l498:
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;inc\CANlib.h: 895: else
  5336                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5337  01062A  010F               	movlb	15	; () banked
  5338  01062C  9B05               	bcf	5,5,b	;volatile
  5339  01062E                     l499:
  5340                           
  5341                           ; BSR set to: 15
  5342                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5343  01062E  0100               	movlb	0	; () banked
  5344  010630  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5345  010632  D003               	goto	l500
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5349  010634  010F               	movlb	15	; () banked
  5350  010636  8D05               	bsf	5,6,b	;volatile
  5351  010638  D002               	goto	l501
  5352  01063A                     l500:
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;inc\CANlib.h: 900: else
  5356                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5357  01063A  010F               	movlb	15	; () banked
  5358  01063C  9D05               	bcf	5,6,b	;volatile
  5359  01063E                     l501:
  5360                           
  5361                           ; BSR set to: 15
  5362                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5363  01063E  0100               	movlb	0	; () banked
  5364  010640  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5365  010642  D003               	goto	l502
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5369  010644  010F               	movlb	15	; () banked
  5370  010646  8F05               	bsf	5,7,b	;volatile
  5371  010648  D002               	goto	l5590
  5372  01064A                     l502:
  5373                           
  5374                           ; BSR set to: 0
  5375                           ;inc\CANlib.h: 905: else
  5376                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5377  01064A  010F               	movlb	15	; () banked
  5378  01064C  9F05               	bcf	5,7,b	;volatile
  5379  01064E                     l5590:
  5380                           
  5381                           ; BSR set to: 15
  5382                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5383  01064E  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5384  010652  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5385  010656  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5386  01065A  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5387  01065E  0E16               	movlw	22
  5388  010660  D006               	goto	u6630
  5389  010662                     u6635:
  5390  010662  0100               	movlb	0	; () banked
  5391  010664  90D8               	bcf	status,0,c
  5392  010666  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5393  010668  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5394  01066A  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5395  01066C  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5396  01066E                     u6630:
  5397  01066E  2EE8               	decfsz	wreg,f,c
  5398  010670  D7F8               	goto	u6635
  5399  010672  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5400  010676  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5401  01067A  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5402  01067E  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5406  010682  0100               	movlb	0	; () banked
  5407  010684  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5408  010686  0100               	movlb	0	; () banked
  5409  010688  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5410  01068A  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5411  01068C  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5412  01068E  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5413                           
  5414                           ; BSR set to: 0
  5415                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5416  010690  C07A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5417  010694                     l5596:
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;inc\CANlib.h: 911: }
  5421                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5422  010694  0E02               	movlw	2
  5423  010696  0100               	movlb	0	; () banked
  5424  010698  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5425  01069A  A4D8               	btfss	status,2,c
  5426  01069C  D089               	goto	l5630
  5427                           
  5428                           ; BSR set to: 0
  5429  01069E  0EF7               	movlw	247
  5430  0106A0  0100               	movlb	0	; () banked
  5431  0106A2  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5432  0106A4  A4D8               	btfss	status,2,c
  5433  0106A6  D084               	goto	l5630
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;inc\CANlib.h: 915: {
  5437                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5438  0106A8  010F               	movlb	15	; () banked
  5439  0106AA  8709               	bsf	9,3,b	;volatile
  5440                           
  5441                           ; BSR set to: 15
  5442                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5443  0106AC  0100               	movlb	0	; () banked
  5444  0106AE  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5445  0106B0  0100               	movlb	0	; () banked
  5446  0106B2  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5447  0106B4  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5448  0106B6  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5449  0106B8  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5453  0106BA  C07A  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5454                           
  5455                           ; BSR set to: 0
  5456                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5457  0106BE  0E00               	movlw	0
  5458  0106C0  0100               	movlb	0	; () banked
  5459  0106C2  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5460  0106C4  0100               	movlb	0	; () banked
  5461  0106C6  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5462  0106C8  0EFF               	movlw	255
  5463  0106CA  0100               	movlb	0	; () banked
  5464  0106CC  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5465  0106CE  0100               	movlb	0	; () banked
  5466  0106D0  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5467  0106D2  0E00               	movlw	0
  5468  0106D4  0100               	movlb	0	; () banked
  5469  0106D6  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5470  0106D8  0100               	movlb	0	; () banked
  5471  0106DA  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5472  0106DC  0E00               	movlw	0
  5473  0106DE  0100               	movlb	0	; () banked
  5474  0106E0  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5475  0106E2  0100               	movlb	0	; () banked
  5476  0106E4  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5477                           
  5478                           ; BSR set to: 0
  5479                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5480  0106E6  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5481  0106EA  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5482  0106EE  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5483  0106F2  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5484  0106F6  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5485  0106FA  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5486  0106FE  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5487  010702  0100               	movlb	0	; () banked
  5488  010704  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5489  010706  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5490  01070A  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5491  01070E  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5492  010712  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5496  010716  C07A  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5500  01071A  0100               	movlb	0	; () banked
  5501  01071C  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5502  01071E  D003               	goto	l505
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5506  010720  010F               	movlb	15	; () banked
  5507  010722  8109               	bsf	9,0,b	;volatile
  5508  010724  D002               	goto	l506
  5509  010726                     l505:
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;inc\CANlib.h: 927: else
  5513                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5514  010726  010F               	movlb	15	; () banked
  5515  010728  9109               	bcf	9,0,b	;volatile
  5516  01072A                     l506:
  5517                           
  5518                           ; BSR set to: 15
  5519                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5520  01072A  0100               	movlb	0	; () banked
  5521  01072C  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5522  01072E  D003               	goto	l507
  5523                           
  5524                           ; BSR set to: 0
  5525                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5526  010730  010F               	movlb	15	; () banked
  5527  010732  8309               	bsf	9,1,b	;volatile
  5528  010734  D002               	goto	l508
  5529  010736                     l507:
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;inc\CANlib.h: 932: else
  5533                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5534  010736  010F               	movlb	15	; () banked
  5535  010738  9309               	bcf	9,1,b	;volatile
  5536  01073A                     l508:
  5537                           
  5538                           ; BSR set to: 15
  5539                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5540  01073A  0100               	movlb	0	; () banked
  5541  01073C  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5542  01073E  D003               	goto	l509
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5546  010740  010F               	movlb	15	; () banked
  5547  010742  8B09               	bsf	9,5,b	;volatile
  5548  010744  D002               	goto	l510
  5549  010746                     l509:
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;inc\CANlib.h: 937: else
  5553                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5554  010746  010F               	movlb	15	; () banked
  5555  010748  9B09               	bcf	9,5,b	;volatile
  5556  01074A                     l510:
  5557                           
  5558                           ; BSR set to: 15
  5559                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5560  01074A  0100               	movlb	0	; () banked
  5561  01074C  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5562  01074E  D003               	goto	l511
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5566  010750  010F               	movlb	15	; () banked
  5567  010752  8D09               	bsf	9,6,b	;volatile
  5568  010754  D002               	goto	l512
  5569  010756                     l511:
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;inc\CANlib.h: 942: else
  5573                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5574  010756  010F               	movlb	15	; () banked
  5575  010758  9D09               	bcf	9,6,b	;volatile
  5576  01075A                     l512:
  5577                           
  5578                           ; BSR set to: 15
  5579                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5580  01075A  0100               	movlb	0	; () banked
  5581  01075C  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5582  01075E  D003               	goto	l513
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5586  010760  010F               	movlb	15	; () banked
  5587  010762  8F09               	bsf	9,7,b	;volatile
  5588  010764  D002               	goto	l5624
  5589  010766                     l513:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;inc\CANlib.h: 947: else
  5593                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5594  010766  010F               	movlb	15	; () banked
  5595  010768  9F09               	bcf	9,7,b	;volatile
  5596  01076A                     l5624:
  5597                           
  5598                           ; BSR set to: 15
  5599                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5600  01076A  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5601  01076E  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5602  010772  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5603  010776  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5604  01077A  0E16               	movlw	22
  5605  01077C  D006               	goto	u6710
  5606  01077E                     u6715:
  5607  01077E  0100               	movlb	0	; () banked
  5608  010780  90D8               	bcf	status,0,c
  5609  010782  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5610  010784  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5611  010786  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5612  010788  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5613  01078A                     u6710:
  5614  01078A  2EE8               	decfsz	wreg,f,c
  5615  01078C  D7F8               	goto	u6715
  5616  01078E  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5617  010792  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5618  010796  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5619  01079A  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5623  01079E  0100               	movlb	0	; () banked
  5624  0107A0  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5625  0107A2  0100               	movlb	0	; () banked
  5626  0107A4  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5627  0107A6  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5628  0107A8  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5629  0107AA  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5633  0107AC  C07A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5634  0107B0                     l5630:
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;inc\CANlib.h: 953: }
  5638                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5639  0107B0  0E03               	movlw	3
  5640  0107B2  0100               	movlb	0	; () banked
  5641  0107B4  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5642  0107B6  A4D8               	btfss	status,2,c
  5643  0107B8  D089               	goto	l5664
  5644                           
  5645                           ; BSR set to: 0
  5646  0107BA  0EF7               	movlw	247
  5647  0107BC  0100               	movlb	0	; () banked
  5648  0107BE  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5649  0107C0  A4D8               	btfss	status,2,c
  5650  0107C2  D084               	goto	l5664
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;inc\CANlib.h: 956: {
  5654                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5655  0107C4  010F               	movlb	15	; () banked
  5656  0107C6  870D               	bsf	13,3,b	;volatile
  5657                           
  5658                           ; BSR set to: 15
  5659                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5660  0107C8  0100               	movlb	0	; () banked
  5661  0107CA  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5662  0107CC  0100               	movlb	0	; () banked
  5663  0107CE  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5664  0107D0  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5665  0107D2  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5666  0107D4  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5670  0107D6  C07A  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5671                           
  5672                           ; BSR set to: 0
  5673                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5674  0107DA  0E00               	movlw	0
  5675  0107DC  0100               	movlb	0	; () banked
  5676  0107DE  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5677  0107E0  0100               	movlb	0	; () banked
  5678  0107E2  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5679  0107E4  0EFF               	movlw	255
  5680  0107E6  0100               	movlb	0	; () banked
  5681  0107E8  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5682  0107EA  0100               	movlb	0	; () banked
  5683  0107EC  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5684  0107EE  0E00               	movlw	0
  5685  0107F0  0100               	movlb	0	; () banked
  5686  0107F2  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5687  0107F4  0100               	movlb	0	; () banked
  5688  0107F6  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5689  0107F8  0E00               	movlw	0
  5690  0107FA  0100               	movlb	0	; () banked
  5691  0107FC  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5692  0107FE  0100               	movlb	0	; () banked
  5693  010800  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5694                           
  5695                           ; BSR set to: 0
  5696                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5697  010802  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5698  010806  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5699  01080A  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5700  01080E  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5701  010812  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5702  010816  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5703  01081A  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5704  01081E  0100               	movlb	0	; () banked
  5705  010820  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5706  010822  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5707  010826  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5708  01082A  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5709  01082E  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5710                           
  5711                           ; BSR set to: 0
  5712                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5713  010832  C07A  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5717  010836  0100               	movlb	0	; () banked
  5718  010838  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5719  01083A  D003               	goto	l516
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5723  01083C  010F               	movlb	15	; () banked
  5724  01083E  810D               	bsf	13,0,b	;volatile
  5725  010840  D002               	goto	l517
  5726  010842                     l516:
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;inc\CANlib.h: 968: else
  5730                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5731  010842  010F               	movlb	15	; () banked
  5732  010844  910D               	bcf	13,0,b	;volatile
  5733  010846                     l517:
  5734                           
  5735                           ; BSR set to: 15
  5736                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5737  010846  0100               	movlb	0	; () banked
  5738  010848  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5739  01084A  D003               	goto	l518
  5740                           
  5741                           ; BSR set to: 0
  5742                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5743  01084C  010F               	movlb	15	; () banked
  5744  01084E  830D               	bsf	13,1,b	;volatile
  5745  010850  D002               	goto	l519
  5746  010852                     l518:
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;inc\CANlib.h: 973: else
  5750                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5751  010852  010F               	movlb	15	; () banked
  5752  010854  930D               	bcf	13,1,b	;volatile
  5753  010856                     l519:
  5754                           
  5755                           ; BSR set to: 15
  5756                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5757  010856  0100               	movlb	0	; () banked
  5758  010858  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5759  01085A  D003               	goto	l520
  5760                           
  5761                           ; BSR set to: 0
  5762                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5763  01085C  010F               	movlb	15	; () banked
  5764  01085E  8B0D               	bsf	13,5,b	;volatile
  5765  010860  D002               	goto	l521
  5766  010862                     l520:
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;inc\CANlib.h: 978: else
  5770                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5771  010862  010F               	movlb	15	; () banked
  5772  010864  9B0D               	bcf	13,5,b	;volatile
  5773  010866                     l521:
  5774                           
  5775                           ; BSR set to: 15
  5776                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5777  010866  0100               	movlb	0	; () banked
  5778  010868  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5779  01086A  D003               	goto	l522
  5780                           
  5781                           ; BSR set to: 0
  5782                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5783  01086C  010F               	movlb	15	; () banked
  5784  01086E  8D0D               	bsf	13,6,b	;volatile
  5785  010870  D002               	goto	l523
  5786  010872                     l522:
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;inc\CANlib.h: 983: else
  5790                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5791  010872  010F               	movlb	15	; () banked
  5792  010874  9D0D               	bcf	13,6,b	;volatile
  5793  010876                     l523:
  5794                           
  5795                           ; BSR set to: 15
  5796                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5797  010876  0100               	movlb	0	; () banked
  5798  010878  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5799  01087A  D003               	goto	l524
  5800                           
  5801                           ; BSR set to: 0
  5802                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5803  01087C  010F               	movlb	15	; () banked
  5804  01087E  8F0D               	bsf	13,7,b	;volatile
  5805  010880  D002               	goto	l5658
  5806  010882                     l524:
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;inc\CANlib.h: 988: else
  5810                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5811  010882  010F               	movlb	15	; () banked
  5812  010884  9F0D               	bcf	13,7,b	;volatile
  5813  010886                     l5658:
  5814                           
  5815                           ; BSR set to: 15
  5816                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5817  010886  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5818  01088A  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5819  01088E  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5820  010892  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5821  010896  0E16               	movlw	22
  5822  010898  D006               	goto	u6790
  5823  01089A                     u6795:
  5824  01089A  0100               	movlb	0	; () banked
  5825  01089C  90D8               	bcf	status,0,c
  5826  01089E  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5827  0108A0  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5828  0108A2  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5829  0108A4  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5830  0108A6                     u6790:
  5831  0108A6  2EE8               	decfsz	wreg,f,c
  5832  0108A8  D7F8               	goto	u6795
  5833  0108AA  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5834  0108AE  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5835  0108B2  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5836  0108B6  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5840  0108BA  0100               	movlb	0	; () banked
  5841  0108BC  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5842  0108BE  0100               	movlb	0	; () banked
  5843  0108C0  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5844  0108C2  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5845  0108C4  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5846  0108C6  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5850  0108C8  C07A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5851  0108CC                     l5664:
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;inc\CANlib.h: 994: }
  5855                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5856  0108CC  0E04               	movlw	4
  5857  0108CE  0100               	movlb	0	; () banked
  5858  0108D0  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5859  0108D2  A4D8               	btfss	status,2,c
  5860  0108D4  D089               	goto	l5698
  5861                           
  5862                           ; BSR set to: 0
  5863  0108D6  0EF7               	movlw	247
  5864  0108D8  0100               	movlb	0	; () banked
  5865  0108DA  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5866  0108DC  A4D8               	btfss	status,2,c
  5867  0108DE  D084               	goto	l5698
  5868                           
  5869                           ; BSR set to: 0
  5870                           ;inc\CANlib.h: 997: {
  5871                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5872  0108E0  010F               	movlb	15	; () banked
  5873  0108E2  8711               	bsf	17,3,b	;volatile
  5874                           
  5875                           ; BSR set to: 15
  5876                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5877  0108E4  0100               	movlb	0	; () banked
  5878  0108E6  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5879  0108E8  0100               	movlb	0	; () banked
  5880  0108EA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5881  0108EC  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5882  0108EE  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5883  0108F0  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5887  0108F2  C07A  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5888                           
  5889                           ; BSR set to: 0
  5890                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5891  0108F6  0E00               	movlw	0
  5892  0108F8  0100               	movlb	0	; () banked
  5893  0108FA  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5894  0108FC  0100               	movlb	0	; () banked
  5895  0108FE  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5896  010900  0EFF               	movlw	255
  5897  010902  0100               	movlb	0	; () banked
  5898  010904  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5899  010906  0100               	movlb	0	; () banked
  5900  010908  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5901  01090A  0E00               	movlw	0
  5902  01090C  0100               	movlb	0	; () banked
  5903  01090E  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5904  010910  0100               	movlb	0	; () banked
  5905  010912  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5906  010914  0E00               	movlw	0
  5907  010916  0100               	movlb	0	; () banked
  5908  010918  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5909  01091A  0100               	movlb	0	; () banked
  5910  01091C  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5914  01091E  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5915  010922  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5916  010926  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5917  01092A  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5918  01092E  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5919  010932  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5920  010936  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5921  01093A  0100               	movlb	0	; () banked
  5922  01093C  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5923  01093E  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5924  010942  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5925  010946  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5926  01094A  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5927                           
  5928                           ; BSR set to: 0
  5929                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5930  01094E  C07A  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5931                           
  5932                           ; BSR set to: 0
  5933                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5934  010952  0100               	movlb	0	; () banked
  5935  010954  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5936  010956  D003               	goto	l527
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5940  010958  010F               	movlb	15	; () banked
  5941  01095A  8111               	bsf	17,0,b	;volatile
  5942  01095C  D002               	goto	l528
  5943  01095E                     l527:
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;inc\CANlib.h: 1009: else
  5947                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5948  01095E  010F               	movlb	15	; () banked
  5949  010960  9111               	bcf	17,0,b	;volatile
  5950  010962                     l528:
  5951                           
  5952                           ; BSR set to: 15
  5953                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5954  010962  0100               	movlb	0	; () banked
  5955  010964  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5956  010966  D003               	goto	l529
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5960  010968  010F               	movlb	15	; () banked
  5961  01096A  8311               	bsf	17,1,b	;volatile
  5962  01096C  D002               	goto	l530
  5963  01096E                     l529:
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;inc\CANlib.h: 1014: else
  5967                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5968  01096E  010F               	movlb	15	; () banked
  5969  010970  9311               	bcf	17,1,b	;volatile
  5970  010972                     l530:
  5971                           
  5972                           ; BSR set to: 15
  5973                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5974  010972  0100               	movlb	0	; () banked
  5975  010974  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5976  010976  D003               	goto	l531
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5980  010978  010F               	movlb	15	; () banked
  5981  01097A  8B11               	bsf	17,5,b	;volatile
  5982  01097C  D002               	goto	l532
  5983  01097E                     l531:
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;inc\CANlib.h: 1019: else
  5987                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5988  01097E  010F               	movlb	15	; () banked
  5989  010980  9B11               	bcf	17,5,b	;volatile
  5990  010982                     l532:
  5991                           
  5992                           ; BSR set to: 15
  5993                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5994  010982  0100               	movlb	0	; () banked
  5995  010984  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5996  010986  D003               	goto	l533
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6000  010988  010F               	movlb	15	; () banked
  6001  01098A  8D11               	bsf	17,6,b	;volatile
  6002  01098C  D002               	goto	l534
  6003  01098E                     l533:
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;inc\CANlib.h: 1024: else
  6007                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6008  01098E  010F               	movlb	15	; () banked
  6009  010990  9D11               	bcf	17,6,b	;volatile
  6010  010992                     l534:
  6011                           
  6012                           ; BSR set to: 15
  6013                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6014  010992  0100               	movlb	0	; () banked
  6015  010994  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6016  010996  D003               	goto	l535
  6017                           
  6018                           ; BSR set to: 0
  6019                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6020  010998  010F               	movlb	15	; () banked
  6021  01099A  8F11               	bsf	17,7,b	;volatile
  6022  01099C  D002               	goto	l5692
  6023  01099E                     l535:
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;inc\CANlib.h: 1029: else
  6027                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6028  01099E  010F               	movlb	15	; () banked
  6029  0109A0  9F11               	bcf	17,7,b	;volatile
  6030  0109A2                     l5692:
  6031                           
  6032                           ; BSR set to: 15
  6033                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6034  0109A2  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  6035  0109A6  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6036  0109AA  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6037  0109AE  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6038  0109B2  0E16               	movlw	22
  6039  0109B4  D006               	goto	u6870
  6040  0109B6                     u6875:
  6041  0109B6  0100               	movlb	0	; () banked
  6042  0109B8  90D8               	bcf	status,0,c
  6043  0109BA  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6044  0109BC  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6045  0109BE  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6046  0109C0  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  6047  0109C2                     u6870:
  6048  0109C2  2EE8               	decfsz	wreg,f,c
  6049  0109C4  D7F8               	goto	u6875
  6050  0109C6  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6051  0109CA  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6052  0109CE  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6053  0109D2  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6057  0109D6  0100               	movlb	0	; () banked
  6058  0109D8  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  6059  0109DA  0100               	movlb	0	; () banked
  6060  0109DC  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6061  0109DE  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6062  0109E0  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6063  0109E2  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6064                           
  6065                           ; BSR set to: 0
  6066                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6067  0109E4  C07A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6068  0109E8                     l5698:
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;inc\CANlib.h: 1035: }
  6072                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6073  0109E8  0E05               	movlw	5
  6074  0109EA  0100               	movlb	0	; () banked
  6075  0109EC  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6076  0109EE  A4D8               	btfss	status,2,c
  6077  0109F0  0012               	return	
  6078                           
  6079                           ; BSR set to: 0
  6080  0109F2  0EF7               	movlw	247
  6081  0109F4  0100               	movlb	0	; () banked
  6082  0109F6  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  6083  0109F8  A4D8               	btfss	status,2,c
  6084  0109FA  0012               	return	
  6085                           
  6086                           ; BSR set to: 0
  6087                           ;inc\CANlib.h: 1038: {
  6088                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6089  0109FC  010F               	movlb	15	; () banked
  6090  0109FE  8715               	bsf	21,3,b	;volatile
  6091                           
  6092                           ; BSR set to: 15
  6093                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6094  010A00  0100               	movlb	0	; () banked
  6095  010A02  5170               	movf	CANSetFilter@filter& (0+255),w,b
  6096  010A04  0100               	movlb	0	; () banked
  6097  010A06  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6098  010A08  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6099  010A0A  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6100  010A0C  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6104  010A0E  C07A  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6105                           
  6106                           ; BSR set to: 0
  6107                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6108  010A12  0E00               	movlw	0
  6109  010A14  0100               	movlb	0	; () banked
  6110  010A16  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  6111  010A18  0100               	movlb	0	; () banked
  6112  010A1A  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6113  010A1C  0EFF               	movlw	255
  6114  010A1E  0100               	movlb	0	; () banked
  6115  010A20  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6116  010A22  0100               	movlb	0	; () banked
  6117  010A24  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6118  010A26  0E00               	movlw	0
  6119  010A28  0100               	movlb	0	; () banked
  6120  010A2A  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6121  010A2C  0100               	movlb	0	; () banked
  6122  010A2E  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6123  010A30  0E00               	movlw	0
  6124  010A32  0100               	movlb	0	; () banked
  6125  010A34  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6126  010A36  0100               	movlb	0	; () banked
  6127  010A38  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6128                           
  6129                           ; BSR set to: 0
  6130                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6131  010A3A  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  6132  010A3E  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6133  010A42  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6134  010A46  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6135  010A4A  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  6136  010A4E  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6137  010A52  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6138  010A56  0100               	movlb	0	; () banked
  6139  010A58  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  6140  010A5A  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6141  010A5E  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6142  010A62  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6143  010A66  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6144                           
  6145                           ; BSR set to: 0
  6146                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6147  010A6A  C07A  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6148                           
  6149                           ; BSR set to: 0
  6150                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6151  010A6E  0100               	movlb	0	; () banked
  6152  010A70  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6153  010A72  D003               	goto	l538
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6157  010A74  010F               	movlb	15	; () banked
  6158  010A76  8115               	bsf	21,0,b	;volatile
  6159  010A78  D002               	goto	l539
  6160  010A7A                     l538:
  6161                           
  6162                           ; BSR set to: 0
  6163                           ;inc\CANlib.h: 1050: else
  6164                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6165  010A7A  010F               	movlb	15	; () banked
  6166  010A7C  9115               	bcf	21,0,b	;volatile
  6167  010A7E                     l539:
  6168                           
  6169                           ; BSR set to: 15
  6170                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6171  010A7E  0100               	movlb	0	; () banked
  6172  010A80  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6173  010A82  D003               	goto	l540
  6174                           
  6175                           ; BSR set to: 0
  6176                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6177  010A84  010F               	movlb	15	; () banked
  6178  010A86  8315               	bsf	21,1,b	;volatile
  6179  010A88  D002               	goto	l541
  6180  010A8A                     l540:
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;inc\CANlib.h: 1055: else
  6184                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6185  010A8A  010F               	movlb	15	; () banked
  6186  010A8C  9315               	bcf	21,1,b	;volatile
  6187  010A8E                     l541:
  6188                           
  6189                           ; BSR set to: 15
  6190                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6191  010A8E  0100               	movlb	0	; () banked
  6192  010A90  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6193  010A92  D003               	goto	l542
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6197  010A94  010F               	movlb	15	; () banked
  6198  010A96  8B15               	bsf	21,5,b	;volatile
  6199  010A98  D002               	goto	l543
  6200  010A9A                     l542:
  6201                           
  6202                           ; BSR set to: 0
  6203                           ;inc\CANlib.h: 1060: else
  6204                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6205  010A9A  010F               	movlb	15	; () banked
  6206  010A9C  9B15               	bcf	21,5,b	;volatile
  6207  010A9E                     l543:
  6208                           
  6209                           ; BSR set to: 15
  6210                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6211  010A9E  0100               	movlb	0	; () banked
  6212  010AA0  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6213  010AA2  D003               	goto	l544
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6217  010AA4  010F               	movlb	15	; () banked
  6218  010AA6  8D15               	bsf	21,6,b	;volatile
  6219  010AA8  D002               	goto	l545
  6220  010AAA                     l544:
  6221                           
  6222                           ; BSR set to: 0
  6223                           ;inc\CANlib.h: 1065: else
  6224                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6225  010AAA  010F               	movlb	15	; () banked
  6226  010AAC  9D15               	bcf	21,6,b	;volatile
  6227  010AAE                     l545:
  6228                           
  6229                           ; BSR set to: 15
  6230                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6231  010AAE  0100               	movlb	0	; () banked
  6232  010AB0  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6233  010AB2  D003               	goto	l546
  6234                           
  6235                           ; BSR set to: 0
  6236                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6237  010AB4  010F               	movlb	15	; () banked
  6238  010AB6  8F15               	bsf	21,7,b	;volatile
  6239  010AB8  D002               	goto	l5726
  6240  010ABA                     l546:
  6241                           
  6242                           ; BSR set to: 0
  6243                           ;inc\CANlib.h: 1070: else
  6244                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6245  010ABA  010F               	movlb	15	; () banked
  6246  010ABC  9F15               	bcf	21,7,b	;volatile
  6247  010ABE                     l5726:
  6248                           
  6249                           ; BSR set to: 15
  6250                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6251  010ABE  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  6252  010AC2  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6253  010AC6  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6254  010ACA  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6255  010ACE  0E16               	movlw	22
  6256  010AD0  D006               	goto	u6950
  6257  010AD2                     u6955:
  6258  010AD2  0100               	movlb	0	; () banked
  6259  010AD4  90D8               	bcf	status,0,c
  6260  010AD6  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6261  010AD8  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6262  010ADA  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6263  010ADC  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  6264  010ADE                     u6950:
  6265  010ADE  2EE8               	decfsz	wreg,f,c
  6266  010AE0  D7F8               	goto	u6955
  6267  010AE2  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6268  010AE6  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6269  010AEA  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6270  010AEE  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6271                           
  6272                           ; BSR set to: 0
  6273                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6274  010AF2  0100               	movlb	0	; () banked
  6275  010AF4  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  6276  010AF6  0100               	movlb	0	; () banked
  6277  010AF8  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6278  010AFA  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6279  010AFC  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6280  010AFE  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6281                           
  6282                           ; BSR set to: 0
  6283                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6284  010B00  C07A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6285  010B04  0012               	return	
  6286  010B06                     __end_of_CANSetFilter:
  6287                           	opt stack 0
  6288                           tblptru	equ	0xFF8
  6289                           tblptrh	equ	0xFF7
  6290                           tblptrl	equ	0xFF6
  6291                           tablat	equ	0xFF5
  6292                           intcon	equ	0xFF2
  6293                           postinc0	equ	0xFEE
  6294                           wreg	equ	0xFE8
  6295                           status	equ	0xFD8
  6296                           
  6297 ;; *************** function _CANOperationMode *****************
  6298 ;; Defined at:
  6299 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  mode            1    wreg     enum E16881
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;  mode            1   16[BANK0 ] enum E16881
  6304 ;; Return value:  Size  Location     Type
  6305 ;;		None               void
  6306 ;; Registers used:
  6307 ;;		wreg, status,2, status,0
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6314 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6316 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6317 ;;Total ram usage:        1 bytes
  6318 ;; Hardware stack levels used:    1
  6319 ;; Hardware stack levels required when called:    3
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		_CANInitialize
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           	psect	text5
  6328  01646E                     __ptext5:
  6329                           	opt stack 0
  6330  01646E                     _CANOperationMode:
  6331                           	opt stack 25
  6332                           
  6333                           ; BSR set to: 0
  6334                           ;incstack = 0
  6335                           ;CANOperationMode@mode stored from wreg
  6336  01646E  0100               	movlb	0	; () banked
  6337  016470  6F70               	movwf	CANOperationMode@mode& (0+255),b
  6338                           
  6339                           ;inc\CANlib.h: 208: CANCON = mode;
  6340  016472  C070  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6341  016476                     l5322:
  6342  016476  506E               	movf	3950,w,c	;volatile
  6343  016478  0BE0               	andlw	224
  6344  01647A  0100               	movlb	0	; () banked
  6345  01647C  1970               	xorwf	CANOperationMode@mode& (0+255),w,b
  6346  01647E  B4D8               	btfsc	status,2,c
  6347  016480  0012               	return	
  6348  016482  D7F9               	goto	l5322
  6349  016484                     __end_of_CANOperationMode:
  6350                           	opt stack 0
  6351                           tblptru	equ	0xFF8
  6352                           tblptrh	equ	0xFF7
  6353                           tblptrl	equ	0xFF6
  6354                           tablat	equ	0xFF5
  6355                           intcon	equ	0xFF2
  6356                           postinc0	equ	0xFEE
  6357                           wreg	equ	0xFE8
  6358                           status	equ	0xFD8
  6359                           
  6360 ;; *************** function _PWR_Button_Polling *****************
  6361 ;; Defined at:
  6362 ;;		line 526 in file "RemoteCan.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;		None
  6365 ;; Auto vars:     Size  Location     Type
  6366 ;;		None
  6367 ;; Return value:  Size  Location     Type
  6368 ;;		None               void
  6369 ;; Registers used:
  6370 ;;		None
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6380 ;;Total ram usage:        0 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; Hardware stack levels required when called:    3
  6383 ;; This function calls:
  6384 ;;		Nothing
  6385 ;; This function is called by:
  6386 ;;		_main
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           	psect	text6
  6391  0163FE                     __ptext6:
  6392                           	opt stack 0
  6393  0163FE                     _PWR_Button_Polling:
  6394                           	opt stack 27
  6395                           
  6396                           ;RemoteCan.c: 527: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  6397                           
  6398                           ; BSR set to: 0
  6399                           ;incstack = 0
  6400  0163FE  AA81               	btfss	3969,5,c	;volatile
  6401  016400  D002               	goto	l900
  6402  016402  BC4A               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6403  016404  0012               	return	
  6404  016406                     l900:
  6405                           
  6406                           ;RemoteCan.c: 528: wait_low_1 = 0;
  6407  016406  9C4A               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6408                           
  6409                           ;RemoteCan.c: 529: if (PORTBbits.RB5 == 1) {
  6410  016408  AA81               	btfss	3969,5,c	;volatile
  6411  01640A  0012               	return	
  6412                           
  6413                           ;RemoteCan.c: 530: power_switch = ~power_switch;
  6414  01640C  B44A               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6415  01640E  D002               	goto	u8910
  6416  016410  844A               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6417  016412  D001               	goto	u8925
  6418  016414                     u8910:
  6419  016414  944A               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6420  016416                     u8925:
  6421                           
  6422                           ;RemoteCan.c: 531: wait_low_1 = 1;
  6423  016416  8C4A               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6424  016418  0012               	return	
  6425  01641A                     __end_of_PWR_Button_Polling:
  6426                           	opt stack 0
  6427                           tblptru	equ	0xFF8
  6428                           tblptrh	equ	0xFF7
  6429                           tblptrl	equ	0xFF6
  6430                           tablat	equ	0xFF5
  6431                           intcon	equ	0xFF2
  6432                           postinc0	equ	0xFEE
  6433                           wreg	equ	0xFE8
  6434                           status	equ	0xFD8
  6435                           
  6436 ;; *************** function _LCD_Parking *****************
  6437 ;; Defined at:
  6438 ;;		line 500 in file "RemoteCan.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;		None
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;		None
  6443 ;; Return value:  Size  Location     Type
  6444 ;;		None               void
  6445 ;; Registers used:
  6446 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6456 ;;Total ram usage:        0 bytes
  6457 ;; Hardware stack levels used:    1
  6458 ;; Hardware stack levels required when called:    9
  6459 ;; This function calls:
  6460 ;;		_LCD_clear
  6461 ;;		_LCD_goto_line
  6462 ;;		_LCD_initialize
  6463 ;;		_LCD_write_message
  6464 ;; This function is called by:
  6465 ;;		_main
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469                           	psect	text7
  6470  015E68                     __ptext7:
  6471                           	opt stack 0
  6472  015E68                     _LCD_Parking:
  6473                           	opt stack 21
  6474                           
  6475                           ;RemoteCan.c: 501: LCD_initialize(16);
  6476                           
  6477                           ;incstack = 0
  6478  015E68  0E10               	movlw	16
  6479  015E6A  EC3A  F0AA         	call	_LCD_initialize
  6480                           
  6481                           ;RemoteCan.c: 502: LCD_clear();
  6482  015E6E  EC8C  F0B1         	call	_LCD_clear	;wreg free
  6483                           
  6484                           ;RemoteCan.c: 503: LCD_goto_line(1);
  6485  015E72  0E01               	movlw	1
  6486  015E74  EC77  F0AB         	call	_LCD_goto_line
  6487                           
  6488                           ;RemoteCan.c: 504: LCD_write_message("= PARKING MESSAGES =");
  6489  015E78  0E40               	movlw	low STR_16
  6490  015E7A  0100               	movlb	0	; () banked
  6491  015E7C  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6492  015E7E  0EFF               	movlw	high STR_16
  6493  015E80  0100               	movlb	0	; () banked
  6494  015E82  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6495  015E84  EC59  F0B1         	call	_LCD_write_message	;wreg free
  6496                           
  6497                           ;RemoteCan.c: 505: LCD_goto_line(2);
  6498  015E88  0E02               	movlw	2
  6499  015E8A  EC77  F0AB         	call	_LCD_goto_line
  6500                           
  6501                           ;RemoteCan.c: 506: LCD_write_message("=    Parking in    =");
  6502  015E8E  0E16               	movlw	low STR_25
  6503  015E90  0100               	movlb	0	; () banked
  6504  015E92  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6505  015E94  0EFF               	movlw	high STR_25
  6506  015E96  0100               	movlb	0	; () banked
  6507  015E98  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6508  015E9A  EC59  F0B1         	call	_LCD_write_message	;wreg free
  6509                           
  6510                           ;RemoteCan.c: 507: LCD_goto_line(3);
  6511  015E9E  0E03               	movlw	3
  6512  015EA0  EC77  F0AB         	call	_LCD_goto_line
  6513                           
  6514                           ;RemoteCan.c: 508: LCD_write_message("=    progress...   =");
  6515  015EA4  0E2B               	movlw	low STR_26
  6516  015EA6  0100               	movlb	0	; () banked
  6517  015EA8  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6518  015EAA  0EFF               	movlw	high STR_26
  6519  015EAC  0100               	movlb	0	; () banked
  6520  015EAE  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6521  015EB0  EC59  F0B1         	call	_LCD_write_message	;wreg free
  6522                           
  6523                           ;RemoteCan.c: 509: LCD_goto_line(4);
  6524  015EB4  0E04               	movlw	4
  6525  015EB6  EC77  F0AB         	call	_LCD_goto_line
  6526                           
  6527                           ;RemoteCan.c: 510: LCD_write_message("====================");
  6528  015EBA  0E7F               	movlw	low STR_1
  6529  015EBC  0100               	movlb	0	; () banked
  6530  015EBE  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6531  015EC0  0EFF               	movlw	high STR_1
  6532  015EC2  0100               	movlb	0	; () banked
  6533  015EC4  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6534  015EC6  EC59  F0B1         	call	_LCD_write_message	;wreg free
  6535  015ECA  0012               	return		;funcret
  6536  015ECC                     __end_of_LCD_Parking:
  6537                           	opt stack 0
  6538                           tblptru	equ	0xFF8
  6539                           tblptrh	equ	0xFF7
  6540                           tblptrl	equ	0xFF6
  6541                           tablat	equ	0xFF5
  6542                           intcon	equ	0xFF2
  6543                           postinc0	equ	0xFEE
  6544                           wreg	equ	0xFE8
  6545                           status	equ	0xFD8
  6546                           
  6547 ;; *************** function _LCD_Park *****************
  6548 ;; Defined at:
  6549 ;;		line 487 in file "RemoteCan.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;		None
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;		None
  6554 ;; Return value:  Size  Location     Type
  6555 ;;		None               void
  6556 ;; Registers used:
  6557 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6558 ;; Tracked objects:
  6559 ;;		On entry : 0/0
  6560 ;;		On exit  : 0/0
  6561 ;;		Unchanged: 0/0
  6562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6567 ;;Total ram usage:        0 bytes
  6568 ;; Hardware stack levels used:    1
  6569 ;; Hardware stack levels required when called:    9
  6570 ;; This function calls:
  6571 ;;		_LCD_clear
  6572 ;;		_LCD_goto_line
  6573 ;;		_LCD_initialize
  6574 ;;		_LCD_write_message
  6575 ;; This function is called by:
  6576 ;;		_main
  6577 ;; This function uses a non-reentrant model
  6578 ;;
  6579                           
  6580                           	psect	text8
  6581  015ECC                     __ptext8:
  6582                           	opt stack 0
  6583  015ECC                     _LCD_Park:
  6584                           	opt stack 21
  6585                           
  6586                           ;RemoteCan.c: 488: LCD_initialize(16);
  6587                           
  6588                           ;incstack = 0
  6589  015ECC  0E10               	movlw	16
  6590  015ECE  EC3A  F0AA         	call	_LCD_initialize
  6591                           
  6592                           ;RemoteCan.c: 489: LCD_clear();
  6593  015ED2  EC8C  F0B1         	call	_LCD_clear	;wreg free
  6594                           
  6595                           ;RemoteCan.c: 490: LCD_goto_line(1);
  6596  015ED6  0E01               	movlw	1
  6597  015ED8  EC77  F0AB         	call	_LCD_goto_line
  6598                           
  6599                           ;RemoteCan.c: 491: LCD_write_message("= PARKING MESSAGES =");
  6600  015EDC  0E40               	movlw	low STR_16
  6601  015EDE  0100               	movlb	0	; () banked
  6602  015EE0  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6603  015EE2  0EFF               	movlw	high STR_16
  6604  015EE4  0100               	movlb	0	; () banked
  6605  015EE6  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6606  015EE8  EC59  F0B1         	call	_LCD_write_message	;wreg free
  6607                           
  6608                           ;RemoteCan.c: 492: LCD_goto_line(2);
  6609  015EEC  0E02               	movlw	2
  6610  015EEE  EC77  F0AB         	call	_LCD_goto_line
  6611                           
  6612                           ;RemoteCan.c: 493: LCD_write_message("- Distance REACHED -");
  6613  015EF2  0EEC               	movlw	low STR_21
  6614  015EF4  0100               	movlb	0	; () banked
  6615  015EF6  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6616  015EF8  0EFE               	movlw	high STR_21
  6617  015EFA  0100               	movlb	0	; () banked
  6618  015EFC  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6619  015EFE  EC59  F0B1         	call	_LCD_write_message	;wreg free
  6620                           
  6621                           ;RemoteCan.c: 494: LCD_goto_line(3);
  6622  015F02  0E03               	movlw	3
  6623  015F04  EC77  F0AB         	call	_LCD_goto_line
  6624                           
  6625                           ;RemoteCan.c: 495: LCD_write_message("Press the BUTTON to ");
  6626  015F08  0EC2               	movlw	low STR_22
  6627  015F0A  0100               	movlb	0	; () banked
  6628  015F0C  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6629  015F0E  0EFE               	movlw	high STR_22
  6630  015F10  0100               	movlb	0	; () banked
  6631  015F12  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6632  015F14  EC59  F0B1         	call	_LCD_write_message	;wreg free
  6633                           
  6634                           ;RemoteCan.c: 496: LCD_goto_line(4);
  6635  015F18  0E04               	movlw	4
  6636  015F1A  EC77  F0AB         	call	_LCD_goto_line
  6637                           
  6638                           ;RemoteCan.c: 497: LCD_write_message("   start parking    ");
  6639  015F1E  0E83               	movlw	low STR_23
  6640  015F20  0100               	movlb	0	; () banked
  6641  015F22  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6642  015F24  0EFE               	movlw	high STR_23
  6643  015F26  0100               	movlb	0	; () banked
  6644  015F28  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6645  015F2A  EC59  F0B1         	call	_LCD_write_message	;wreg free
  6646  015F2E  0012               	return		;funcret
  6647  015F30                     __end_of_LCD_Park:
  6648                           	opt stack 0
  6649                           tblptru	equ	0xFF8
  6650                           tblptrh	equ	0xFF7
  6651                           tblptrl	equ	0xFF6
  6652                           tablat	equ	0xFF5
  6653                           intcon	equ	0xFF2
  6654                           postinc0	equ	0xFEE
  6655                           wreg	equ	0xFE8
  6656                           status	equ	0xFD8
  6657                           
  6658 ;; *************** function _LCD_Handler *****************
  6659 ;; Defined at:
  6660 ;;		line 416 in file "RemoteCan.c"
  6661 ;; Parameters:    Size  Location     Type
  6662 ;;		None
  6663 ;; Auto vars:     Size  Location     Type
  6664 ;;		None
  6665 ;; Return value:  Size  Location     Type
  6666 ;;		None               void
  6667 ;; Registers used:
  6668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6678 ;;Total ram usage:        0 bytes
  6679 ;; Hardware stack levels used:    1
  6680 ;; Hardware stack levels required when called:   10
  6681 ;; This function calls:
  6682 ;;		_CANisTxReady
  6683 ;;		_CANsendMessage
  6684 ;;		_LCD_clear
  6685 ;;		_LCD_goto_line
  6686 ;;		_LCD_goto_xy
  6687 ;;		_LCD_initialize
  6688 ;;		_LCD_write_integer
  6689 ;;		_LCD_write_message
  6690 ;;		_LCD_write_string
  6691 ;;		___fldiv
  6692 ;;		___xxtofl
  6693 ;;		_sprintf
  6694 ;; This function is called by:
  6695 ;;		_main
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           	psect	text9
  6700  014E10                     __ptext9:
  6701                           	opt stack 0
  6702  014E10                     _LCD_Handler:
  6703                           	opt stack 20
  6704  014E10                     l9062:
  6705  014E10  ECCD  F0B1         	call	_CANisTxReady	;wreg free
  6706  014E14  06E8               	decf	wreg,f,c
  6707  014E16  A4D8               	btfss	status,2,c
  6708  014E18  D7FB               	goto	l9062
  6709                           
  6710                           ;RemoteCan.c: 419: CANsendMessage(0b00000000110, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  6711  014E1A  0E06               	movlw	6
  6712  014E1C  0100               	movlb	0	; () banked
  6713  014E1E  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  6714  014E20  0E00               	movlw	0
  6715  014E22  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  6716  014E24  0E00               	movlw	0
  6717  014E26  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  6718  014E28  0E00               	movlw	0
  6719  014E2A  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  6720  014E2C  0EE9               	movlw	low _data_speed
  6721  014E2E  0100               	movlb	0	; () banked
  6722  014E30  6F74               	movwf	CANsendMessage@data& (0+255),b
  6723  014E32  0E00               	movlw	high _data_speed
  6724  014E34  0100               	movlb	0	; () banked
  6725  014E36  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  6726  014E38  0E08               	movlw	8
  6727  014E3A  0100               	movlb	0	; () banked
  6728  014E3C  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  6729  014E3E  0EFC               	movlw	252
  6730  014E40  0100               	movlb	0	; () banked
  6731  014E42  6F77               	movwf	CANsendMessage@flags& (0+255),b
  6732  014E44  ECCD  F089         	call	_CANsendMessage	;wreg free
  6733                           
  6734                           ;RemoteCan.c: 421: actual_speed_kmh = ((actual_speed) / 278.0);
  6735  014E48  C0DE  F070         	movff	_actual_speed,___xxtofl@val	;volatile
  6736  014E4C  C0DF  F071         	movff	_actual_speed+1,___xxtofl@val+1	;volatile
  6737  014E50  0100               	movlb	0	; () banked
  6738  014E52  6B72               	clrf	(___xxtofl@val+2)& (0+255),b
  6739  014E54  6B73               	clrf	(___xxtofl@val+3)& (0+255),b
  6740  014E56  0E00               	movlw	0
  6741  014E58  EC5E  F0A4         	call	___xxtofl
  6742  014E5C  C070  F07E         	movff	?___xxtofl,___fldiv@b
  6743  014E60  C071  F07F         	movff	?___xxtofl+1,___fldiv@b+1
  6744  014E64  C072  F080         	movff	?___xxtofl+2,___fldiv@b+2
  6745  014E68  C073  F081         	movff	?___xxtofl+3,___fldiv@b+3
  6746  014E6C  0E00               	movlw	0
  6747  014E6E  0100               	movlb	0	; () banked
  6748  014E70  6F82               	movwf	___fldiv@a& (0+255),b
  6749  014E72  0E00               	movlw	0
  6750  014E74  6F83               	movwf	(___fldiv@a+1)& (0+255),b
  6751  014E76  0E8B               	movlw	139
  6752  014E78  6F84               	movwf	(___fldiv@a+2)& (0+255),b
  6753  014E7A  0E43               	movlw	67
  6754  014E7C  6F85               	movwf	(___fldiv@a+3)& (0+255),b
  6755  014E7E  EC2C  F09E         	call	___fldiv	;wreg free
  6756  014E82  C07E  F10D         	movff	?___fldiv,_actual_speed_kmh	;volatile
  6757  014E86  C07F  F10E         	movff	?___fldiv+1,_actual_speed_kmh+1	;volatile
  6758  014E8A  C080  F10F         	movff	?___fldiv+2,_actual_speed_kmh+2	;volatile
  6759  014E8E  C081  F110         	movff	?___fldiv+3,_actual_speed_kmh+3	;volatile
  6760                           
  6761                           ;RemoteCan.c: 422: sprintf(str, "%.2f", actual_speed_kmh);
  6762  014E92  0E20               	movlw	low _str
  6763  014E94  0100               	movlb	0	; () banked
  6764  014E96  6FC2               	movwf	sprintf@sp& (0+255),b
  6765  014E98  0E01               	movlw	high _str
  6766  014E9A  0100               	movlb	0	; () banked
  6767  014E9C  6FC3               	movwf	(sprintf@sp+1)& (0+255),b
  6768  014E9E  0EFA               	movlw	low STR_5
  6769  014EA0  0100               	movlb	0	; () banked
  6770  014EA2  6FC4               	movwf	sprintf@f& (0+255),b
  6771  014EA4  0EFF               	movlw	high STR_5
  6772  014EA6  0100               	movlb	0	; () banked
  6773  014EA8  6FC5               	movwf	(sprintf@f+1)& (0+255),b
  6774  014EAA  C10D  F0C6         	movff	_actual_speed_kmh,?_sprintf+4	;volatile
  6775  014EAE  C10E  F0C7         	movff	_actual_speed_kmh+1,?_sprintf+5	;volatile
  6776  014EB2  C10F  F0C8         	movff	_actual_speed_kmh+2,?_sprintf+6	;volatile
  6777  014EB6  C110  F0C9         	movff	_actual_speed_kmh+3,?_sprintf+7	;volatile
  6778  014EBA  EC83  F085         	call	_sprintf	;wreg free
  6779                           
  6780                           ;RemoteCan.c: 423: str[11] = '\0';
  6781  014EBE  0E00               	movlw	0
  6782  014EC0  0101               	movlb	1	; () banked
  6783  014EC2  6F2B               	movwf	(_str+11)& (0+255),b	;volatile
  6784                           
  6785                           ; BSR set to: 1
  6786                           ;RemoteCan.c: 425: if (display_refresh == 1) {
  6787  014EC4  AE49               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6788  014EC6  D032               	goto	l9090
  6789                           
  6790                           ; BSR set to: 1
  6791                           ;RemoteCan.c: 426: LCD_initialize(16);
  6792  014EC8  0E10               	movlw	16
  6793  014ECA  EC3A  F0AA         	call	_LCD_initialize
  6794                           
  6795                           ;RemoteCan.c: 427: LCD_clear();
  6796  014ECE  EC8C  F0B1         	call	_LCD_clear	;wreg free
  6797                           
  6798                           ;RemoteCan.c: 428: LCD_goto_line(1);
  6799  014ED2  0E01               	movlw	1
  6800  014ED4  EC77  F0AB         	call	_LCD_goto_line
  6801                           
  6802                           ;RemoteCan.c: 429: LCD_write_message("=== VEHICLE DATA ===");
  6803  014ED8  0E6A               	movlw	low STR_6
  6804  014EDA  0100               	movlb	0	; () banked
  6805  014EDC  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6806  014EDE  0EFF               	movlw	high STR_6
  6807  014EE0  0100               	movlb	0	; () banked
  6808  014EE2  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6809  014EE4  EC59  F0B1         	call	_LCD_write_message	;wreg free
  6810                           
  6811                           ;RemoteCan.c: 430: LCD_goto_line(2);
  6812  014EE8  0E02               	movlw	2
  6813  014EEA  EC77  F0AB         	call	_LCD_goto_line
  6814                           
  6815                           ;RemoteCan.c: 431: LCD_write_message("Direction: ");
  6816  014EEE  0EC8               	movlw	low STR_7
  6817  014EF0  0100               	movlb	0	; () banked
  6818  014EF2  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6819  014EF4  0EFF               	movlw	high STR_7
  6820  014EF6  0100               	movlb	0	; () banked
  6821  014EF8  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6822  014EFA  EC59  F0B1         	call	_LCD_write_message	;wreg free
  6823                           
  6824                           ;RemoteCan.c: 432: LCD_goto_line(3);
  6825  014EFE  0E03               	movlw	3
  6826  014F00  EC77  F0AB         	call	_LCD_goto_line
  6827                           
  6828                           ;RemoteCan.c: 433: LCD_write_message("Speed: 0.00 Km/h");
  6829  014F04  0EA9               	movlw	low STR_8
  6830  014F06  0100               	movlb	0	; () banked
  6831  014F08  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6832  014F0A  0EFF               	movlw	high STR_8
  6833  014F0C  0100               	movlb	0	; () banked
  6834  014F0E  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6835  014F10  EC59  F0B1         	call	_LCD_write_message	;wreg free
  6836                           
  6837                           ;RemoteCan.c: 434: LCD_goto_line(4);
  6838  014F14  0E04               	movlw	4
  6839  014F16  EC77  F0AB         	call	_LCD_goto_line
  6840                           
  6841                           ;RemoteCan.c: 438: LCD_write_message("Data: ");
  6842                           
  6843                           ;RemoteCan.c: 437: } else {
  6844                           
  6845                           ;RemoteCan.c: 436: LCD_write_message("Park assist: ");
  6846                           
  6847                           ;RemoteCan.c: 435: if (1 == 0) {
  6848  014F1A  0EE4               	movlw	low STR_10
  6849  014F1C  0100               	movlb	0	; () banked
  6850  014F1E  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6851  014F20  0EFF               	movlw	high STR_10
  6852  014F22  0100               	movlb	0	; () banked
  6853  014F24  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6854  014F26  EC59  F0B1         	call	_LCD_write_message	;wreg free
  6855                           
  6856                           ;RemoteCan.c: 439: }
  6857                           ;RemoteCan.c: 440: display_refresh = 0;
  6858  014F2A  9E49               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6859  014F2C                     l9090:
  6860                           
  6861                           ;RemoteCan.c: 441: }
  6862                           ;RemoteCan.c: 444: LCD_goto_xy(12, 2);
  6863  014F2C  0E02               	movlw	2
  6864  014F2E  0100               	movlb	0	; () banked
  6865  014F30  6F7F               	movwf	LCD_goto_xy@y& (0+255),b
  6866  014F32  0E0C               	movlw	12
  6867  014F34  EC0D  F0B2         	call	_LCD_goto_xy
  6868                           
  6869                           ;RemoteCan.c: 445: if (switch_position != 0) {
  6870  014F38  0100               	movlb	0	; () banked
  6871  014F3A  51E8               	movf	_switch_position& (0+255),w,b	;volatile
  6872  014F3C  B4D8               	btfsc	status,2,c
  6873  014F3E  D016               	goto	l9100
  6874                           
  6875                           ; BSR set to: 0
  6876                           ;RemoteCan.c: 446: if (dir == 1) {
  6877  014F40  0100               	movlb	0	; () banked
  6878  014F42  05E4               	decf	_dir& (0+255),w,b	;volatile
  6879  014F44  A4D8               	btfss	status,2,c
  6880  014F46  D009               	goto	l9098
  6881                           
  6882                           ; BSR set to: 0
  6883                           ;RemoteCan.c: 447: LCD_write_message("FWD ");
  6884  014F48  0EF0               	movlw	low STR_11
  6885  014F4A  0100               	movlb	0	; () banked
  6886  014F4C  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6887  014F4E  0EFF               	movlw	high STR_11
  6888  014F50  0100               	movlb	0	; () banked
  6889  014F52  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6890  014F54  EC59  F0B1         	call	_LCD_write_message	;wreg free
  6891                           
  6892                           ;RemoteCan.c: 448: } else {
  6893  014F58  D011               	goto	l9102
  6894  014F5A                     l9098:
  6895                           
  6896                           ;RemoteCan.c: 449: LCD_write_message("BKWD");
  6897  014F5A  0EF5               	movlw	low STR_12
  6898  014F5C  0100               	movlb	0	; () banked
  6899  014F5E  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6900  014F60  0EFF               	movlw	high STR_12
  6901  014F62  0100               	movlb	0	; () banked
  6902  014F64  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6903  014F66  EC59  F0B1         	call	_LCD_write_message	;wreg free
  6904                           
  6905                           ;RemoteCan.c: 450: }
  6906                           ;RemoteCan.c: 451: } else {
  6907  014F6A  D008               	goto	l9102
  6908  014F6C                     l9100:
  6909                           
  6910                           ;RemoteCan.c: 452: LCD_write_message("P   ");
  6911  014F6C  0EEB               	movlw	low STR_13
  6912  014F6E  0100               	movlb	0	; () banked
  6913  014F70  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6914  014F72  0EFF               	movlw	high STR_13
  6915  014F74  0100               	movlb	0	; () banked
  6916  014F76  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6917  014F78  EC59  F0B1         	call	_LCD_write_message	;wreg free
  6918  014F7C                     l9102:
  6919                           
  6920                           ;RemoteCan.c: 453: }
  6921                           ;RemoteCan.c: 456: LCD_goto_xy(8, 3);
  6922  014F7C  0E03               	movlw	3
  6923  014F7E  0100               	movlb	0	; () banked
  6924  014F80  6F7F               	movwf	LCD_goto_xy@y& (0+255),b
  6925  014F82  0E08               	movlw	8
  6926  014F84  EC0D  F0B2         	call	_LCD_goto_xy
  6927                           
  6928                           ;RemoteCan.c: 457: LCD_write_string(str);
  6929  014F88  0E20               	movlw	low _str
  6930  014F8A  0100               	movlb	0	; () banked
  6931  014F8C  6F81               	movwf	LCD_write_string@buffer& (0+255),b
  6932  014F8E  0E01               	movlw	high _str
  6933  014F90  0100               	movlb	0	; () banked
  6934  014F92  6F82               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  6935  014F94  ECBA  F0B1         	call	_LCD_write_string	;wreg free
  6936                           
  6937                           ;RemoteCan.c: 469: LCD_goto_xy(7, 4);
  6938                           
  6939                           ;RemoteCan.c: 466: }
  6940                           ;RemoteCan.c: 467: } else {
  6941                           
  6942                           ;RemoteCan.c: 465: LCD_write_message("SEARCH ");
  6943                           
  6944                           ;RemoteCan.c: 464: } else {
  6945                           
  6946                           ; BSR set to: 0
  6947                           ;RemoteCan.c: 463: LCD_write_message("OFF    ");
  6948                           
  6949                           ;RemoteCan.c: 462: if (parking_state == 0) {
  6950                           
  6951                           ;RemoteCan.c: 461: LCD_goto_xy(14, 4);
  6952                           
  6953                           ;RemoteCan.c: 459: if (1 == 0) {
  6954  014F98  0E04               	movlw	4
  6955  014F9A  0100               	movlb	0	; () banked
  6956  014F9C  6F7F               	movwf	LCD_goto_xy@y& (0+255),b
  6957  014F9E  0E07               	movlw	7
  6958  014FA0  EC0D  F0B2         	call	_LCD_goto_xy
  6959                           
  6960                           ;RemoteCan.c: 470: LCD_write_integer(user_data, 0, 0x01);
  6961  014FA4  C021  F088         	movff	_user_data,LCD_write_integer@value	;volatile
  6962  014FA8  C022  F089         	movff	_user_data+1,LCD_write_integer@value+1	;volatile
  6963  014FAC  0E00               	movlw	0
  6964  014FAE  0100               	movlb	0	; () banked
  6965  014FB0  6F8A               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  6966  014FB2  0E01               	movlw	1
  6967  014FB4  0100               	movlb	0	; () banked
  6968  014FB6  6F8B               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  6969  014FB8  EC28  F0A6         	call	_LCD_write_integer	;wreg free
  6970  014FBC  0012               	return	
  6971  014FBE                     __end_of_LCD_Handler:
  6972                           	opt stack 0
  6973                           tblptru	equ	0xFF8
  6974                           tblptrh	equ	0xFF7
  6975                           tblptrl	equ	0xFF6
  6976                           tablat	equ	0xFF5
  6977                           intcon	equ	0xFF2
  6978                           postinc0	equ	0xFEE
  6979                           wreg	equ	0xFE8
  6980                           status	equ	0xFD8
  6981                           
  6982 ;; *************** function _sprintf *****************
  6983 ;; Defined at:
  6984 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;  sp              2   98[BANK0 ] PTR unsigned char 
  6987 ;;		 -> str(12), 
  6988 ;;  f               2  100[BANK0 ] PTR const unsigned char 
  6989 ;;		 -> STR_5(5), 
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  6992 ;;  tmpval          4   14[BANK1 ] struct .
  6993 ;;  val             4    8[BANK1 ] unsigned long 
  6994 ;;  cp              3    0        PTR const unsigned char 
  6995 ;;  prec            2   18[BANK1 ] int 
  6996 ;;  exp             2   12[BANK1 ] int 
  6997 ;;  flag            2    6[BANK1 ] unsigned short 
  6998 ;;  ap              2    4[BANK1 ] PTR void [1]
  6999 ;;		 -> ?_sprintf(2), 
  7000 ;;  len             2    0        unsigned int 
  7001 ;;  width           2    0        int 
  7002 ;;  c               1   24[BANK1 ] char 
  7003 ;;  d               1    0        unsigned char 
  7004 ;; Return value:  Size  Location     Type
  7005 ;;                  2   98[BANK0 ] int 
  7006 ;; Registers used:
  7007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7013 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7014 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  7015 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7016 ;;      Totals:         0      10      25       0       0       0       0       0       0       0       0       0       
      +0       0
  7017 ;;Total ram usage:       35 bytes
  7018 ;; Hardware stack levels used:    1
  7019 ;; Hardware stack levels required when called:    5
  7020 ;; This function calls:
  7021 ;;		___awdiv
  7022 ;;		___fladd
  7023 ;;		___flge
  7024 ;;		___flmul
  7025 ;;		___flneg
  7026 ;;		___flsub
  7027 ;;		___fltol
  7028 ;;		___lldiv
  7029 ;;		___llmod
  7030 ;;		___wmul
  7031 ;;		___xxtofl
  7032 ;;		__div_to_l_
  7033 ;;		__tdiv_to_l_
  7034 ;;		_fround
  7035 ;;		_isdigit
  7036 ;;		_scale
  7037 ;; This function is called by:
  7038 ;;		_LCD_Handler
  7039 ;; This function uses a non-reentrant model
  7040 ;;
  7041                           
  7042                           	psect	text10
  7043  010B06                     __ptext10:
  7044                           	opt stack 0
  7045  010B06                     _sprintf:
  7046                           	opt stack 24
  7047                           
  7048                           ;doprnt.c: 494: va_list ap;
  7049                           ;doprnt.c: 499: signed char c;
  7050                           ;doprnt.c: 501: int width;
  7051                           ;doprnt.c: 504: int prec;
  7052                           ;doprnt.c: 508: unsigned short flag;
  7053                           ;doprnt.c: 515: char d;
  7054                           ;doprnt.c: 516: double fval;
  7055                           ;doprnt.c: 517: int exp;
  7056                           ;doprnt.c: 523: union {
  7057                           ;doprnt.c: 524: unsigned long vd;
  7058                           ;doprnt.c: 525: double integ;
  7059                           ;doprnt.c: 526: } tmpval;
  7060                           ;doprnt.c: 528: unsigned long val;
  7061                           ;doprnt.c: 529: unsigned len;
  7062                           ;doprnt.c: 530: const char * cp;
  7063                           ;doprnt.c: 533: *ap = __va_start();
  7064                           
  7065                           ;incstack = 0
  7066  010B06  0EC6               	movlw	low (?_sprintf+4)
  7067  010B08  0101               	movlb	1	; () banked
  7068  010B0A  6F38               	movwf	sprintf@ap& (0+255),b
  7069  010B0C  0E00               	movlw	high (?_sprintf+4)
  7070  010B0E  0101               	movlb	1	; () banked
  7071  010B10  6F39               	movwf	(sprintf@ap+1)& (0+255),b
  7072                           
  7073                           ;doprnt.c: 536: while(c = *f++) {
  7074  010B12  EFB5  F089         	goto	l8948
  7075  010B16                     l8750:
  7076                           
  7077                           ; BSR set to: 1
  7078                           ;doprnt.c: 538: if(c != '%')
  7079  010B16  0E25               	movlw	37
  7080  010B18  0101               	movlb	1	; () banked
  7081  010B1A  194C               	xorwf	sprintf@c& (0+255),w,b
  7082  010B1C  B4D8               	btfsc	status,2,c
  7083  010B1E  D008               	goto	l8756
  7084                           
  7085                           ; BSR set to: 1
  7086                           ;doprnt.c: 540: {
  7087                           ;doprnt.c: 541: ((*sp++ = (c)));
  7088  010B20  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7089  010B24  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7090  010B28  C14C  FFDF         	movff	sprintf@c,indf2
  7091  010B2C  EFB2  F089         	goto	l8946
  7092  010B30                     l8756:
  7093                           
  7094                           ;doprnt.c: 543: }
  7095                           ;doprnt.c: 548: flag = 0;
  7096  010B30  0E00               	movlw	0
  7097  010B32  0101               	movlb	1	; () banked
  7098  010B34  6F3B               	movwf	(sprintf@flag+1)& (0+255),b
  7099  010B36  0E00               	movlw	0
  7100  010B38  6F3A               	movwf	sprintf@flag& (0+255),b
  7101                           
  7102                           ; BSR set to: 1
  7103                           ;doprnt.c: 611: if(*f == '.') {
  7104  010B3A  C0C4  FFF6         	movff	sprintf@f,tblptrl
  7105  010B3E  C0C5  FFF7         	movff	sprintf@f+1,tblptrh
  7106  010B42                     	if	0	;tblptru may be non-zero
  7107  010B42                     	endif
  7108  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7109  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  7110  010B44  6EF8               	movwf	tblptru,c
  7111  010B46                     	endif
  7112  010B46  0008               	tblrd		*
  7113  010B48  50F5               	movf	tablat,w,c
  7114  010B4A  0A2E               	xorlw	46
  7115  010B4C  A4D8               	btfss	status,2,c
  7116  010B4E  D03D               	goto	l8770
  7117                           
  7118                           ; BSR set to: 1
  7119                           ;doprnt.c: 612: flag |= 0x4000;
  7120  010B50  0101               	movlb	1	; () banked
  7121  010B52  8D3B               	bsf	(sprintf@flag+1)& (0+255),6,b
  7122                           
  7123                           ;doprnt.c: 613: f++;
  7124  010B54  0100               	movlb	0	; () banked
  7125  010B56  4BC4               	infsnz	sprintf@f& (0+255),f,b
  7126  010B58  2BC5               	incf	(sprintf@f+1)& (0+255),f,b
  7127                           
  7128                           ; BSR set to: 0
  7129                           ;doprnt.c: 620: {
  7130                           ;doprnt.c: 621: prec = 0;
  7131  010B5A  0E00               	movlw	0
  7132  010B5C  0101               	movlb	1	; () banked
  7133  010B5E  6F47               	movwf	(sprintf@prec+1)& (0+255),b
  7134  010B60  0E00               	movlw	0
  7135  010B62  6F46               	movwf	sprintf@prec& (0+255),b
  7136                           
  7137                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  7138  010B64  D025               	goto	l8768
  7139  010B66                     l8764:
  7140                           
  7141                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  7142  010B66  C146  F070         	movff	sprintf@prec,___wmul@multiplier
  7143  010B6A  C147  F071         	movff	sprintf@prec+1,___wmul@multiplier+1
  7144  010B6E  0E00               	movlw	0
  7145  010B70  0100               	movlb	0	; () banked
  7146  010B72  6F73               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7147  010B74  0E0A               	movlw	10
  7148  010B76  6F72               	movwf	___wmul@multiplicand& (0+255),b
  7149  010B78  EC3E  F0B1         	call	___wmul	;wreg free
  7150  010B7C  C0C4  FFF6         	movff	sprintf@f,tblptrl
  7151  010B80  C0C5  FFF7         	movff	sprintf@f+1,tblptrh
  7152  010B84                     	if	0	;tblptru may be non-zero
  7153  010B84                     	endif
  7154  010B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7155  010B84  0E00               	movlw	low (__mediumconst shr (0+16))
  7156  010B86  6EF8               	movwf	tblptru,c
  7157  010B88                     	endif
  7158  010B88  0008               	tblrd		*
  7159  010B8A  50F5               	movf	tablat,w,c
  7160  010B8C  0100               	movlb	0	; () banked
  7161  010B8E  2770               	addwf	?___wmul& (0+255),f,b
  7162  010B90  0E00               	movlw	0
  7163  010B92  0100               	movlb	0	; () banked
  7164  010B94  2371               	addwfc	(?___wmul+1)& (0+255),f,b
  7165  010B96  0ED0               	movlw	208
  7166  010B98  0100               	movlb	0	; () banked
  7167  010B9A  2570               	addwf	?___wmul& (0+255),w,b
  7168  010B9C  0101               	movlb	1	; () banked
  7169  010B9E  6F46               	movwf	sprintf@prec& (0+255),b
  7170  010BA0  0EFF               	movlw	255
  7171  010BA2  0100               	movlb	0	; () banked
  7172  010BA4  2171               	addwfc	(?___wmul+1)& (0+255),w,b
  7173  010BA6  0101               	movlb	1	; () banked
  7174  010BA8  6F47               	movwf	(sprintf@prec+1)& (0+255),b
  7175                           
  7176                           ; BSR set to: 1
  7177  010BAA  0100               	movlb	0	; () banked
  7178  010BAC  4BC4               	infsnz	sprintf@f& (0+255),f,b
  7179  010BAE  2BC5               	incf	(sprintf@f+1)& (0+255),f,b
  7180  010BB0                     l8768:
  7181  010BB0  C0C4  FFF6         	movff	sprintf@f,tblptrl
  7182  010BB4  C0C5  FFF7         	movff	sprintf@f+1,tblptrh
  7183  010BB8                     	if	0	;tblptru may be non-zero
  7184  010BB8                     	endif
  7185  010BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7186  010BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  7187  010BBA  6EF8               	movwf	tblptru,c
  7188  010BBC                     	endif
  7189  010BBC  0008               	tblrd		*
  7190  010BBE  50F5               	movf	tablat,w,c
  7191  010BC0  ECA5  F0B1         	call	_isdigit
  7192  010BC4  A0D8               	btfss	status,0,c
  7193  010BC6  D00C               	goto	l8778
  7194  010BC8  D7CE               	goto	l8764
  7195  010BCA                     l8770:
  7196                           
  7197                           ;doprnt.c: 626: prec = 0;
  7198  010BCA  0E00               	movlw	0
  7199  010BCC  0101               	movlb	1	; () banked
  7200  010BCE  6F47               	movwf	(sprintf@prec+1)& (0+255),b
  7201  010BD0  0E00               	movlw	0
  7202  010BD2  6F46               	movwf	sprintf@prec& (0+255),b
  7203                           
  7204                           ; BSR set to: 1
  7205                           ;doprnt.c: 628: flag |= 0x1000;
  7206  010BD4  0101               	movlb	1	; () banked
  7207  010BD6  893B               	bsf	(sprintf@flag+1)& (0+255),4,b
  7208                           
  7209                           ; BSR set to: 1
  7210                           ;doprnt.c: 630: }
  7211                           ;doprnt.c: 635: switch(c = *f++) {
  7212  010BD8  D003               	goto	l8778
  7213  010BDA                     l8774:
  7214                           
  7215                           ; BSR set to: 1
  7216                           ;doprnt.c: 663: flag |= 0x400;
  7217  010BDA  0101               	movlb	1	; () banked
  7218  010BDC  853B               	bsf	(sprintf@flag+1)& (0+255),2,b
  7219                           
  7220                           ;doprnt.c: 664: break;
  7221  010BDE  D015               	goto	l8780
  7222  010BE0                     l8778:
  7223  010BE0  C0C4  FFF6         	movff	sprintf@f,tblptrl
  7224  010BE4  C0C5  FFF7         	movff	sprintf@f+1,tblptrh
  7225  010BE8  0100               	movlb	0	; () banked
  7226  010BEA  4BC4               	infsnz	sprintf@f& (0+255),f,b
  7227  010BEC  2BC5               	incf	(sprintf@f+1)& (0+255),f,b
  7228  010BEE                     	if	0	;tblptru may be non-zero
  7229  010BEE                     	endif
  7230  010BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7231  010BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  7232  010BF0  6EF8               	movwf	tblptru,c
  7233  010BF2                     	endif
  7234  010BF2  0008               	tblrd		*
  7235  010BF4  CFF5 F14C          	movff	tablat,sprintf@c
  7236  010BF8  0101               	movlb	1	; () banked
  7237  010BFA  514C               	movf	sprintf@c& (0+255),w,b
  7238                           
  7239                           ; Switch size 1, requested type "space"
  7240                           ; Number of cases is 2, Range of values is 0 to 102
  7241                           ; switch strategies available:
  7242                           ; Name         Instructions Cycles
  7243                           ; simple_byte            7     4 (average)
  7244                           ;	Chosen strategy is simple_byte
  7245  010BFC  0A00               	xorlw	0	; case 0
  7246  010BFE  B4D8               	btfsc	status,2,c
  7247  010C00  D3C5               	goto	l8950
  7248  010C02  0A66               	xorlw	102	; case 102
  7249  010C04  B4D8               	btfsc	status,2,c
  7250  010C06  D7E9               	goto	l8774
  7251  010C08  D3B0               	goto	l8948
  7252  010C0A                     l8780:
  7253                           
  7254                           ; BSR set to: 1
  7255                           ;doprnt.c: 825: if(flag & (0x700)) {
  7256  010C0A  0E07               	movlw	7
  7257  010C0C  0101               	movlb	1	; () banked
  7258  010C0E  153B               	andwf	(sprintf@flag+1)& (0+255),w,b
  7259  010C10  B4D8               	btfsc	status,2,c
  7260  010C12  D353               	goto	l8928
  7261                           
  7262                           ; BSR set to: 1
  7263                           ;doprnt.c: 827: if(flag & 0x1000)
  7264  010C14  0101               	movlb	1	; () banked
  7265  010C16  A93B               	btfss	(sprintf@flag+1)& (0+255),4,b
  7266  010C18  D005               	goto	l8786
  7267                           
  7268                           ; BSR set to: 1
  7269                           ;doprnt.c: 829: prec = 6;
  7270  010C1A  0E00               	movlw	0
  7271  010C1C  0101               	movlb	1	; () banked
  7272  010C1E  6F47               	movwf	(sprintf@prec+1)& (0+255),b
  7273  010C20  0E06               	movlw	6
  7274  010C22  6F46               	movwf	sprintf@prec& (0+255),b
  7275  010C24                     l8786:
  7276                           
  7277                           ; BSR set to: 1
  7278                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7279  010C24  C138  FFD9         	movff	sprintf@ap,fsr2l
  7280  010C28  C139  FFDA         	movff	sprintf@ap+1,fsr2h
  7281  010C2C  CFDE F148          	movff	postinc2,sprintf@fval
  7282  010C30  CFDE F149          	movff	postinc2,sprintf@fval+1
  7283  010C34  CFDE F14A          	movff	postinc2,sprintf@fval+2
  7284  010C38  CFDE F14B          	movff	postinc2,sprintf@fval+3
  7285                           
  7286                           ; BSR set to: 1
  7287  010C3C  0E04               	movlw	4
  7288  010C3E  0101               	movlb	1	; () banked
  7289  010C40  2738               	addwf	sprintf@ap& (0+255),f,b
  7290  010C42  0E00               	movlw	0
  7291  010C44  2339               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7292                           
  7293                           ; BSR set to: 1
  7294                           ;doprnt.c: 831: if(fval < 0.0) {
  7295  010C46  0101               	movlb	1	; () banked
  7296  010C48  AF4B               	btfss	(sprintf@fval+3)& (0+255),7,b
  7297  010C4A  D015               	goto	l8796
  7298                           
  7299                           ; BSR set to: 1
  7300                           ;doprnt.c: 832: fval = -fval;
  7301  010C4C  C148  F097         	movff	sprintf@fval,___flneg@f1
  7302  010C50  C149  F098         	movff	sprintf@fval+1,___flneg@f1+1
  7303  010C54  C14A  F099         	movff	sprintf@fval+2,___flneg@f1+2
  7304  010C58  C14B  F09A         	movff	sprintf@fval+3,___flneg@f1+3
  7305  010C5C  EC22  F0B1         	call	___flneg	;wreg free
  7306  010C60  C097  F148         	movff	?___flneg,sprintf@fval
  7307  010C64  C098  F149         	movff	?___flneg+1,sprintf@fval+1
  7308  010C68  C099  F14A         	movff	?___flneg+2,sprintf@fval+2
  7309  010C6C  C09A  F14B         	movff	?___flneg+3,sprintf@fval+3
  7310                           
  7311                           ;doprnt.c: 833: flag |= 0x03;
  7312  010C70  0E03               	movlw	3
  7313  010C72  0101               	movlb	1	; () banked
  7314  010C74  133A               	iorwf	sprintf@flag& (0+255),f,b
  7315  010C76                     l8796:
  7316                           
  7317                           ; BSR set to: 1
  7318                           ;doprnt.c: 834: }
  7319                           ;doprnt.c: 835: exp = 0;
  7320  010C76  0E00               	movlw	0
  7321  010C78  0101               	movlb	1	; () banked
  7322  010C7A  6F41               	movwf	(sprintf@exp+1)& (0+255),b
  7323  010C7C  0E00               	movlw	0
  7324  010C7E  6F40               	movwf	sprintf@exp& (0+255),b
  7325                           
  7326                           ; BSR set to: 1
  7327                           ;doprnt.c: 836: if( fval!=0) {
  7328  010C80  0101               	movlb	1	; () banked
  7329  010C82  5148               	movf	sprintf@fval& (0+255),w,b
  7330  010C84  0101               	movlb	1	; () banked
  7331  010C86  1149               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7332  010C88  0101               	movlb	1	; () banked
  7333  010C8A  114A               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7334  010C8C  0101               	movlb	1	; () banked
  7335  010C8E  114B               	iorwf	(sprintf@fval+3)& (0+255),w,b
  7336  010C90  B4D8               	btfsc	status,2,c
  7337  010C92  D08E               	goto	l8824
  7338                           
  7339                           ; BSR set to: 1
  7340                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  7341  010C94  0101               	movlb	1	; () banked
  7342  010C96  354A               	rlcf	(sprintf@fval+2)& (0+255),w,b
  7343  010C98  354B               	rlcf	(sprintf@fval+3)& (0+255),w,b
  7344  010C9A  0F82               	addlw	130
  7345  010C9C  0101               	movlb	1	; () banked
  7346  010C9E  6F40               	movwf	sprintf@exp& (0+255),b
  7347  010CA0  0101               	movlb	1	; () banked
  7348  010CA2  6B41               	clrf	(sprintf@exp+1)& (0+255),b
  7349  010CA4  0EFF               	movlw	255
  7350  010CA6  2341               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7351                           
  7352                           ; BSR set to: 1
  7353                           ;doprnt.c: 838: exp--;
  7354  010CA8  0101               	movlb	1	; () banked
  7355  010CAA  0740               	decf	sprintf@exp& (0+255),f,b
  7356  010CAC  A0D8               	btfss	status,0,c
  7357  010CAE  0741               	decf	(sprintf@exp+1)& (0+255),f,b
  7358                           
  7359                           ; BSR set to: 1
  7360                           ;doprnt.c: 839: exp *= 3;
  7361  010CB0  C140  F070         	movff	sprintf@exp,___wmul@multiplier
  7362  010CB4  C141  F071         	movff	sprintf@exp+1,___wmul@multiplier+1
  7363  010CB8  0E00               	movlw	0
  7364  010CBA  0100               	movlb	0	; () banked
  7365  010CBC  6F73               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7366  010CBE  0E03               	movlw	3
  7367  010CC0  6F72               	movwf	___wmul@multiplicand& (0+255),b
  7368  010CC2  EC3E  F0B1         	call	___wmul	;wreg free
  7369  010CC6  C070  F140         	movff	?___wmul,sprintf@exp
  7370  010CCA  C071  F141         	movff	?___wmul+1,sprintf@exp+1
  7371                           
  7372                           ;doprnt.c: 840: exp /= 10;
  7373  010CCE  C140  F076         	movff	sprintf@exp,___awdiv@dividend
  7374  010CD2  C141  F077         	movff	sprintf@exp+1,___awdiv@dividend+1
  7375  010CD6  0E00               	movlw	0
  7376  010CD8  0100               	movlb	0	; () banked
  7377  010CDA  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  7378  010CDC  0E0A               	movlw	10
  7379  010CDE  6F78               	movwf	___awdiv@divisor& (0+255),b
  7380  010CE0  ECED  F0AB         	call	___awdiv	;wreg free
  7381  010CE4  C076  F140         	movff	?___awdiv,sprintf@exp
  7382  010CE8  C077  F141         	movff	?___awdiv+1,sprintf@exp+1
  7383                           
  7384                           ;doprnt.c: 841: if(exp < 0)
  7385  010CEC  0101               	movlb	1	; () banked
  7386  010CEE  AF41               	btfss	(sprintf@exp+1)& (0+255),7,b
  7387  010CF0  D004               	goto	l8812
  7388                           
  7389                           ; BSR set to: 1
  7390                           ;doprnt.c: 842: exp--;
  7391  010CF2  0101               	movlb	1	; () banked
  7392  010CF4  0740               	decf	sprintf@exp& (0+255),f,b
  7393  010CF6  A0D8               	btfss	status,0,c
  7394  010CF8  0741               	decf	(sprintf@exp+1)& (0+255),f,b
  7395  010CFA                     l8812:
  7396                           
  7397                           ; BSR set to: 1
  7398                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7399  010CFA  0101               	movlb	1	; () banked
  7400  010CFC  5140               	movf	sprintf@exp& (0+255),w,b
  7401  010CFE  0800               	sublw	0
  7402  010D00  EC72  F094         	call	_scale
  7403  010D04  C097  F142         	movff	?_scale,sprintf@tmpval
  7404  010D08  C098  F143         	movff	?_scale+1,sprintf@tmpval+1
  7405  010D0C  C099  F144         	movff	?_scale+2,sprintf@tmpval+2
  7406  010D10  C09A  F145         	movff	?_scale+3,sprintf@tmpval+3
  7407                           
  7408                           ;doprnt.c: 847: tmpval.integ *= fval;
  7409  010D14  C142  F07E         	movff	sprintf@tmpval,___flmul@b
  7410  010D18  C143  F07F         	movff	sprintf@tmpval+1,___flmul@b+1
  7411  010D1C  C144  F080         	movff	sprintf@tmpval+2,___flmul@b+2
  7412  010D20  C145  F081         	movff	sprintf@tmpval+3,___flmul@b+3
  7413  010D24  C148  F082         	movff	sprintf@fval,___flmul@a
  7414  010D28  C149  F083         	movff	sprintf@fval+1,___flmul@a+1
  7415  010D2C  C14A  F084         	movff	sprintf@fval+2,___flmul@a+2
  7416  010D30  C14B  F085         	movff	sprintf@fval+3,___flmul@a+3
  7417  010D34  ECD9  F09B         	call	___flmul	;wreg free
  7418  010D38  C07E  F142         	movff	?___flmul,sprintf@tmpval
  7419  010D3C  C07F  F143         	movff	?___flmul+1,sprintf@tmpval+1
  7420  010D40  C080  F144         	movff	?___flmul+2,sprintf@tmpval+2
  7421  010D44  C081  F145         	movff	?___flmul+3,sprintf@tmpval+3
  7422                           
  7423                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7424  010D48  C142  F070         	movff	sprintf@tmpval,___flge@ff1
  7425  010D4C  C143  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  7426  010D50  C144  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  7427  010D54  C145  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  7428  010D58  0E00               	movlw	0
  7429  010D5A  0100               	movlb	0	; () banked
  7430  010D5C  6F74               	movwf	___flge@ff2& (0+255),b
  7431  010D5E  0E00               	movlw	0
  7432  010D60  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  7433  010D62  0E80               	movlw	128
  7434  010D64  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  7435  010D66  0E3F               	movlw	63
  7436  010D68  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  7437  010D6A  ECAE  F0A8         	call	___flge	;wreg free
  7438  010D6E  0100               	movlb	0	; () banked
  7439  010D70  B0D8               	btfsc	status,0,c
  7440  010D72  D005               	goto	l8820
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;doprnt.c: 849: exp--;
  7444  010D74  0101               	movlb	1	; () banked
  7445  010D76  0740               	decf	sprintf@exp& (0+255),f,b
  7446  010D78  A0D8               	btfss	status,0,c
  7447  010D7A  0741               	decf	(sprintf@exp+1)& (0+255),f,b
  7448  010D7C  D019               	goto	l8824
  7449  010D7E                     l8820:
  7450                           
  7451                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7452  010D7E  C142  F070         	movff	sprintf@tmpval,___flge@ff1
  7453  010D82  C143  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  7454  010D86  C144  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  7455  010D8A  C145  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  7456  010D8E  0E00               	movlw	0
  7457  010D90  0100               	movlb	0	; () banked
  7458  010D92  6F74               	movwf	___flge@ff2& (0+255),b
  7459  010D94  0E00               	movlw	0
  7460  010D96  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  7461  010D98  0E20               	movlw	32
  7462  010D9A  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  7463  010D9C  0E41               	movlw	65
  7464  010D9E  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  7465  010DA0  ECAE  F0A8         	call	___flge	;wreg free
  7466  010DA4  0100               	movlb	0	; () banked
  7467  010DA6  A0D8               	btfss	status,0,c
  7468  010DA8  D003               	goto	l8824
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;doprnt.c: 851: exp++;
  7472  010DAA  0101               	movlb	1	; () banked
  7473  010DAC  4B40               	infsnz	sprintf@exp& (0+255),f,b
  7474  010DAE  2B41               	incf	(sprintf@exp+1)& (0+255),f,b
  7475  010DB0                     l8824:
  7476                           
  7477                           ;doprnt.c: 852: }
  7478                           ;doprnt.c: 1112: if(prec <= 12)
  7479  010DB0  0101               	movlb	1	; () banked
  7480  010DB2  BF47               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7481  010DB4  D008               	goto	l8826
  7482  010DB6  0101               	movlb	1	; () banked
  7483  010DB8  5147               	movf	(sprintf@prec+1)& (0+255),w,b
  7484  010DBA  E123               	bnz	l8828
  7485  010DBC  0E0D               	movlw	13
  7486  010DBE  0101               	movlb	1	; () banked
  7487  010DC0  5D46               	subwf	sprintf@prec& (0+255),w,b
  7488  010DC2  B0D8               	btfsc	status,0,c
  7489  010DC4  D01E               	goto	l8828
  7490  010DC6                     l8826:
  7491                           
  7492                           ; BSR set to: 1
  7493                           ;doprnt.c: 1113: fval += fround(prec);
  7494  010DC6  C148  F0A4         	movff	sprintf@fval,___fladd@b
  7495  010DCA  C149  F0A5         	movff	sprintf@fval+1,___fladd@b+1
  7496  010DCE  C14A  F0A6         	movff	sprintf@fval+2,___fladd@b+2
  7497  010DD2  C14B  F0A7         	movff	sprintf@fval+3,___fladd@b+3
  7498  010DD6  0101               	movlb	1	; () banked
  7499  010DD8  5146               	movf	sprintf@prec& (0+255),w,b
  7500  010DDA  ECDB  F0A1         	call	_fround
  7501  010DDE  C097  F0A8         	movff	?_fround,___fladd@a
  7502  010DE2  C098  F0A9         	movff	?_fround+1,___fladd@a+1
  7503  010DE6  C099  F0AA         	movff	?_fround+2,___fladd@a+2
  7504  010DEA  C09A  F0AB         	movff	?_fround+3,___fladd@a+3
  7505  010DEE  EC85  F099         	call	___fladd	;wreg free
  7506  010DF2  C0A4  F148         	movff	?___fladd,sprintf@fval
  7507  010DF6  C0A5  F149         	movff	?___fladd+1,sprintf@fval+1
  7508  010DFA  C0A6  F14A         	movff	?___fladd+2,sprintf@fval+2
  7509  010DFE  C0A7  F14B         	movff	?___fladd+3,sprintf@fval+3
  7510  010E02                     l8828:
  7511                           
  7512                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7513  010E02  0101               	movlb	1	; () banked
  7514  010E04  BF41               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7515  010E06  D008               	goto	l8830
  7516  010E08  0101               	movlb	1	; () banked
  7517  010E0A  5141               	movf	(sprintf@exp+1)& (0+255),w,b
  7518  010E0C  E12E               	bnz	l8836
  7519  010E0E  0E0A               	movlw	10
  7520  010E10  0101               	movlb	1	; () banked
  7521  010E12  5D40               	subwf	sprintf@exp& (0+255),w,b
  7522  010E14  B0D8               	btfsc	status,0,c
  7523  010E16  D029               	goto	l8836
  7524  010E18                     l8830:
  7525                           
  7526                           ; BSR set to: 1
  7527  010E18  0101               	movlb	1	; () banked
  7528  010E1A  5148               	movf	sprintf@fval& (0+255),w,b
  7529  010E1C  0101               	movlb	1	; () banked
  7530  010E1E  1149               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7531  010E20  0101               	movlb	1	; () banked
  7532  010E22  114A               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7533  010E24  0101               	movlb	1	; () banked
  7534  010E26  114B               	iorwf	(sprintf@fval+3)& (0+255),w,b
  7535  010E28  B4D8               	btfsc	status,2,c
  7536  010E2A  D06D               	goto	l8850
  7537                           
  7538                           ; BSR set to: 1
  7539  010E2C  C148  F0B8         	movff	sprintf@fval,___fltol@f1
  7540  010E30  C149  F0B9         	movff	sprintf@fval+1,___fltol@f1+1
  7541  010E34  C14A  F0BA         	movff	sprintf@fval+2,___fltol@f1+2
  7542  010E38  C14B  F0BB         	movff	sprintf@fval+3,___fltol@f1+3
  7543  010E3C  ECF1  F0AA         	call	___fltol	;wreg free
  7544  010E40  0100               	movlb	0	; () banked
  7545  010E42  51B8               	movf	?___fltol& (0+255),w,b
  7546  010E44  0100               	movlb	0	; () banked
  7547  010E46  11B9               	iorwf	(?___fltol+1)& (0+255),w,b
  7548  010E48  0100               	movlb	0	; () banked
  7549  010E4A  11BA               	iorwf	(?___fltol+2)& (0+255),w,b
  7550  010E4C  0100               	movlb	0	; () banked
  7551  010E4E  11BB               	iorwf	(?___fltol+3)& (0+255),w,b
  7552  010E50  A4D8               	btfss	status,2,c
  7553  010E52  D059               	goto	l8850
  7554                           
  7555                           ; BSR set to: 0
  7556  010E54  0101               	movlb	1	; () banked
  7557  010E56  BF41               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7558  010E58  D056               	goto	l8850
  7559  010E5A  0101               	movlb	1	; () banked
  7560  010E5C  5141               	movf	(sprintf@exp+1)& (0+255),w,b
  7561  010E5E  E105               	bnz	l8836
  7562  010E60  0E02               	movlw	2
  7563  010E62  0101               	movlb	1	; () banked
  7564  010E64  5D40               	subwf	sprintf@exp& (0+255),w,b
  7565  010E66  A0D8               	btfss	status,0,c
  7566  010E68  D04E               	goto	l8850
  7567  010E6A                     l8836:
  7568                           
  7569                           ; BSR set to: 1
  7570                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7571  010E6A  C142  F070         	movff	sprintf@tmpval,___flge@ff1
  7572  010E6E  C143  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  7573  010E72  C144  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  7574  010E76  C145  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  7575  010E7A  0E5F               	movlw	95
  7576  010E7C  0100               	movlb	0	; () banked
  7577  010E7E  6F74               	movwf	___flge@ff2& (0+255),b
  7578  010E80  0E70               	movlw	112
  7579  010E82  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  7580  010E84  0E89               	movlw	137
  7581  010E86  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  7582  010E88  0E40               	movlw	64
  7583  010E8A  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  7584  010E8C  ECAE  F0A8         	call	___flge	;wreg free
  7585  010E90  0100               	movlb	0	; () banked
  7586  010E92  B0D8               	btfsc	status,0,c
  7587  010E94  D003               	goto	l8840
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7591  010E96  0101               	movlb	1	; () banked
  7592  010E98  0EF7               	movlw	247
  7593  010E9A  D002               	goto	L6
  7594  010E9C                     l8840:
  7595                           
  7596                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7597  010E9C  0101               	movlb	1	; () banked
  7598  010E9E  0EF8               	movlw	248
  7599  010EA0                     L6:
  7600  010EA0  2740               	addwf	sprintf@exp& (0+255),f,b
  7601  010EA2  0EFF               	movlw	255
  7602  010EA4  2341               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7603                           
  7604                           ; BSR set to: 1
  7605                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7606                           
  7607                           ; BSR set to: 1
  7608  010EA6  0101               	movlb	1	; () banked
  7609  010EA8  5140               	movf	sprintf@exp& (0+255),w,b
  7610  010EAA  EC72  F094         	call	_scale
  7611  010EAE  C097  F142         	movff	?_scale,sprintf@tmpval
  7612  010EB2  C098  F143         	movff	?_scale+1,sprintf@tmpval+1
  7613  010EB6  C099  F144         	movff	?_scale+2,sprintf@tmpval+2
  7614  010EBA  C09A  F145         	movff	?_scale+3,sprintf@tmpval+3
  7615  010EBE  C148  F070         	movff	sprintf@fval,__div_to_l_@f1
  7616  010EC2  C149  F071         	movff	sprintf@fval+1,__div_to_l_@f1+1
  7617  010EC6  C14A  F072         	movff	sprintf@fval+2,__div_to_l_@f1+2
  7618  010ECA  C14B  F073         	movff	sprintf@fval+3,__div_to_l_@f1+3
  7619  010ECE  C142  F074         	movff	sprintf@tmpval,__div_to_l_@f2
  7620  010ED2  C143  F075         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  7621  010ED6  C144  F076         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  7622  010EDA  C145  F077         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  7623  010EDE  EC76  F0A9         	call	__div_to_l_	;wreg free
  7624  010EE2  C070  F13C         	movff	?__div_to_l_,sprintf@val
  7625  010EE6  C071  F13D         	movff	?__div_to_l_+1,sprintf@val+1
  7626  010EEA  C072  F13E         	movff	?__div_to_l_+2,sprintf@val+2
  7627  010EEE  C073  F13F         	movff	?__div_to_l_+3,sprintf@val+3
  7628                           
  7629                           ;doprnt.c: 1129: fval = 0.0;
  7630  010EF2  0E00               	movlw	0
  7631  010EF4  0101               	movlb	1	; () banked
  7632  010EF6  6F48               	movwf	sprintf@fval& (0+255),b
  7633  010EF8  0E00               	movlw	0
  7634  010EFA  6F49               	movwf	(sprintf@fval+1)& (0+255),b
  7635  010EFC  0E00               	movlw	0
  7636  010EFE  6F4A               	movwf	(sprintf@fval+2)& (0+255),b
  7637  010F00  0E00               	movlw	0
  7638  010F02  6F4B               	movwf	(sprintf@fval+3)& (0+255),b
  7639                           
  7640                           ;doprnt.c: 1130: } else {
  7641  010F04  D03C               	goto	l8854
  7642  010F06                     l8850:
  7643                           
  7644                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7645  010F06  C148  F0B8         	movff	sprintf@fval,___fltol@f1
  7646  010F0A  C149  F0B9         	movff	sprintf@fval+1,___fltol@f1+1
  7647  010F0E  C14A  F0BA         	movff	sprintf@fval+2,___fltol@f1+2
  7648  010F12  C14B  F0BB         	movff	sprintf@fval+3,___fltol@f1+3
  7649  010F16  ECF1  F0AA         	call	___fltol	;wreg free
  7650  010F1A  C0B8  F13C         	movff	?___fltol,sprintf@val
  7651  010F1E  C0B9  F13D         	movff	?___fltol+1,sprintf@val+1
  7652  010F22  C0BA  F13E         	movff	?___fltol+2,sprintf@val+2
  7653  010F26  C0BB  F13F         	movff	?___fltol+3,sprintf@val+3
  7654                           
  7655                           ;doprnt.c: 1132: fval -= (double)val;
  7656  010F2A  C148  F0B8         	movff	sprintf@fval,___flsub@b
  7657  010F2E  C149  F0B9         	movff	sprintf@fval+1,___flsub@b+1
  7658  010F32  C14A  F0BA         	movff	sprintf@fval+2,___flsub@b+2
  7659  010F36  C14B  F0BB         	movff	sprintf@fval+3,___flsub@b+3
  7660  010F3A  C13C  F070         	movff	sprintf@val,___xxtofl@val
  7661  010F3E  C13D  F071         	movff	sprintf@val+1,___xxtofl@val+1
  7662  010F42  C13E  F072         	movff	sprintf@val+2,___xxtofl@val+2
  7663  010F46  C13F  F073         	movff	sprintf@val+3,___xxtofl@val+3
  7664  010F4A  0E00               	movlw	0
  7665  010F4C  EC5E  F0A4         	call	___xxtofl
  7666  010F50  C070  F0BC         	movff	?___xxtofl,___flsub@a
  7667  010F54  C071  F0BD         	movff	?___xxtofl+1,___flsub@a+1
  7668  010F58  C072  F0BE         	movff	?___xxtofl+2,___flsub@a+2
  7669  010F5C  C073  F0BF         	movff	?___xxtofl+3,___flsub@a+3
  7670  010F60  EC7D  F0B0         	call	___flsub	;wreg free
  7671  010F64  C0B8  F148         	movff	?___flsub,sprintf@fval
  7672  010F68  C0B9  F149         	movff	?___flsub+1,sprintf@fval+1
  7673  010F6C  C0BA  F14A         	movff	?___flsub+2,sprintf@fval+2
  7674  010F70  C0BB  F14B         	movff	?___flsub+3,sprintf@fval+3
  7675                           
  7676                           ;doprnt.c: 1133: exp = 0;
  7677  010F74  0E00               	movlw	0
  7678  010F76  0101               	movlb	1	; () banked
  7679  010F78  6F41               	movwf	(sprintf@exp+1)& (0+255),b
  7680  010F7A  0E00               	movlw	0
  7681  010F7C  6F40               	movwf	sprintf@exp& (0+255),b
  7682  010F7E                     l8854:
  7683                           
  7684                           ; BSR set to: 1
  7685                           ;doprnt.c: 1134: }
  7686                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7687  010F7E  0E01               	movlw	1
  7688  010F80  0101               	movlb	1	; () banked
  7689  010F82  6F4C               	movwf	sprintf@c& (0+255),b
  7690  010F84                     l8856:
  7691                           
  7692                           ; BSR set to: 1
  7693  010F84  0E0A               	movlw	10
  7694  010F86  0101               	movlb	1	; () banked
  7695  010F88  194C               	xorwf	sprintf@c& (0+255),w,b
  7696  010F8A  B4D8               	btfsc	status,2,c
  7697  010F8C  D021               	goto	l8868
  7698                           
  7699                           ; BSR set to: 1
  7700                           ;doprnt.c: 1137: if(val < dpowers[c])
  7701                           
  7702                           ; BSR set to: 1
  7703                           
  7704                           ; BSR set to: 1
  7705  010F8E  0101               	movlb	1	; () banked
  7706  010F90  514C               	movf	sprintf@c& (0+255),w,b
  7707  010F92  0D04               	mullw	4
  7708  010F94  0E31               	movlw	low _dpowers
  7709  010F96  24F3               	addwf	prodl,w,c
  7710  010F98  6EF6               	movwf	tblptrl,c
  7711  010F9A  0EFE               	movlw	high _dpowers
  7712  010F9C  20F4               	addwfc	prodh,w,c
  7713  010F9E  6EF7               	movwf	tblptrh,c
  7714  010FA0                     	if	1	;There are 3 active tblptr bytes
  7715  010FA0  6AF8               	clrf	tblptru,c
  7716  010FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  7717  010FA4  22F8               	addwfc	tblptru,f,c
  7718  010FA6                     	endif
  7719  010FA6  0009               	tblrd		*+
  7720  010FA8  50F5               	movf	tablat,w,c
  7721  010FAA  0101               	movlb	1	; () banked
  7722  010FAC  5D3C               	subwf	sprintf@val& (0+255),w,b
  7723  010FAE  0009               	tblrd		*+
  7724  010FB0  50F5               	movf	tablat,w,c
  7725  010FB2  0101               	movlb	1	; () banked
  7726  010FB4  593D               	subwfb	(sprintf@val+1)& (0+255),w,b
  7727  010FB6  0009               	tblrd		*+
  7728  010FB8  50F5               	movf	tablat,w,c
  7729  010FBA  0101               	movlb	1	; () banked
  7730  010FBC  593E               	subwfb	(sprintf@val+2)& (0+255),w,b
  7731  010FBE  0009               	tblrd		*+
  7732  010FC0  50F5               	movf	tablat,w,c
  7733  010FC2  0101               	movlb	1	; () banked
  7734  010FC4  593F               	subwfb	(sprintf@val+3)& (0+255),w,b
  7735  010FC6  A0D8               	btfss	status,0,c
  7736  010FC8  D003               	goto	l8868
  7737                           
  7738                           ; BSR set to: 1
  7739                           
  7740                           ; BSR set to: 1
  7741                           
  7742                           ; BSR set to: 1
  7743                           ;doprnt.c: 1138: break;
  7744  010FCA  0101               	movlb	1	; () banked
  7745  010FCC  2B4C               	incf	sprintf@c& (0+255),f,b
  7746  010FCE  D7DA               	goto	l8856
  7747  010FD0                     l8868:
  7748                           
  7749                           ; BSR set to: 1
  7750                           ;doprnt.c: 1175: {
  7751                           ;doprnt.c: 1188: if(flag & 0x03)
  7752  010FD0  0E03               	movlw	3
  7753  010FD2  0101               	movlb	1	; () banked
  7754  010FD4  153A               	andwf	sprintf@flag& (0+255),w,b
  7755  010FD6  0100               	movlb	0	; () banked
  7756  010FD8  6FCA               	movwf	??_sprintf& (0+255),b
  7757  010FDA  0E00               	movlw	0
  7758  010FDC  0101               	movlb	1	; () banked
  7759  010FDE  153B               	andwf	(sprintf@flag+1)& (0+255),w,b
  7760  010FE0  0100               	movlb	0	; () banked
  7761  010FE2  6FCB               	movwf	(??_sprintf+1)& (0+255),b
  7762  010FE4  0100               	movlb	0	; () banked
  7763  010FE6  51CA               	movf	??_sprintf& (0+255),w,b
  7764  010FE8  0100               	movlb	0	; () banked
  7765  010FEA  11CB               	iorwf	(??_sprintf+1)& (0+255),w,b
  7766  010FEC  B4D8               	btfsc	status,2,c
  7767  010FEE  D058               	goto	l8882
  7768                           
  7769                           ; BSR set to: 0
  7770                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7771  010FF0  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7772  010FF4  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7773  010FF8  0E2D               	movlw	45
  7774  010FFA  D050               	goto	L7
  7775  010FFC                     l8872:
  7776                           
  7777                           ; BSR set to: 0
  7778  010FFC  0100               	movlb	0	; () banked
  7779  010FFE  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  7780  011000  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;doprnt.c: 1195: }
  7784                           ;doprnt.c: 1196: while(c--) {
  7785  011002  D04E               	goto	l8882
  7786  011004                     l8874:
  7787                           
  7788                           ;doprnt.c: 1200: {
  7789                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7790  011004  C13C  F070         	movff	sprintf@val,___lldiv@dividend
  7791  011008  C13D  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  7792  01100C  C13E  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  7793  011010  C13F  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  7794  011014  0101               	movlb	1	; () banked
  7795  011016  514C               	movf	sprintf@c& (0+255),w,b
  7796  011018  0D04               	mullw	4
  7797  01101A  0E31               	movlw	low _dpowers
  7798  01101C  24F3               	addwf	prodl,w,c
  7799  01101E  6EF6               	movwf	tblptrl,c
  7800  011020  0EFE               	movlw	high _dpowers
  7801  011022  20F4               	addwfc	prodh,w,c
  7802  011024  6EF7               	movwf	tblptrh,c
  7803  011026                     	if	1	;There are 3 active tblptr bytes
  7804  011026  6AF8               	clrf	tblptru,c
  7805  011028  0E00               	movlw	low (__mediumconst shr (0+16))
  7806  01102A  22F8               	addwfc	tblptru,f,c
  7807  01102C                     	endif
  7808  01102C  0009               	tblrd		*+
  7809  01102E  CFF5 F074          	movff	tablat,___lldiv@divisor
  7810  011032  0009               	tblrd		*+
  7811  011034  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  7812  011038  0009               	tblrd		*+
  7813  01103A  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  7814  01103E  000A               	tblrd		*-
  7815  011040  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  7816  011044  ECAB  F0AC         	call	___lldiv	;wreg free
  7817  011048  C070  F142         	movff	?___lldiv,sprintf@tmpval
  7818  01104C  C071  F143         	movff	?___lldiv+1,sprintf@tmpval+1
  7819  011050  C072  F144         	movff	?___lldiv+2,sprintf@tmpval+2
  7820  011054  C073  F145         	movff	?___lldiv+3,sprintf@tmpval+3
  7821                           
  7822                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7823  011058  C142  F070         	movff	sprintf@tmpval,___llmod@dividend
  7824  01105C  C143  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7825  011060  C144  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7826  011064  C145  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7827  011068  0E0A               	movlw	10
  7828  01106A  0100               	movlb	0	; () banked
  7829  01106C  6F74               	movwf	___llmod@divisor& (0+255),b
  7830  01106E  0E00               	movlw	0
  7831  011070  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  7832  011072  0E00               	movlw	0
  7833  011074  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  7834  011076  0E00               	movlw	0
  7835  011078  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  7836  01107A  EC60  F0AE         	call	___llmod	;wreg free
  7837  01107E  C070  F142         	movff	?___llmod,sprintf@tmpval
  7838  011082  C071  F143         	movff	?___llmod+1,sprintf@tmpval+1
  7839  011086  C072  F144         	movff	?___llmod+2,sprintf@tmpval+2
  7840  01108A  C073  F145         	movff	?___llmod+3,sprintf@tmpval+3
  7841                           
  7842                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7843  01108E  0101               	movlb	1	; () banked
  7844  011090  5142               	movf	sprintf@tmpval& (0+255),w,b
  7845  011092  0F30               	addlw	48
  7846  011094  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7847  011098  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7848  01109C                     L7:
  7849  01109C  6EDF               	movwf	indf2,c
  7850  01109E  D7AE               	goto	l8872
  7851  0110A0                     l8882:
  7852                           
  7853                           ; BSR set to: 0
  7854  0110A0  0101               	movlb	1	; () banked
  7855  0110A2  074C               	decf	sprintf@c& (0+255),f,b
  7856  0110A4  0101               	movlb	1	; () banked
  7857  0110A6  294C               	incf	sprintf@c& (0+255),w,b
  7858  0110A8  B4D8               	btfsc	status,2,c
  7859  0110AA  D00E               	goto	l8890
  7860  0110AC  D7AB               	goto	l8874
  7861  0110AE                     l8884:
  7862                           
  7863                           ; BSR set to: 1
  7864                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7865  0110AE  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7866  0110B2  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7867  0110B6  0E30               	movlw	48
  7868  0110B8  6EDF               	movwf	indf2,c
  7869                           
  7870                           ; BSR set to: 1
  7871  0110BA  0100               	movlb	0	; () banked
  7872  0110BC  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  7873  0110BE  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  7874                           
  7875                           ; BSR set to: 0
  7876                           ;doprnt.c: 1209: exp--;
  7877  0110C0  0101               	movlb	1	; () banked
  7878  0110C2  0740               	decf	sprintf@exp& (0+255),f,b
  7879  0110C4  A0D8               	btfss	status,0,c
  7880  0110C6  0741               	decf	(sprintf@exp+1)& (0+255),f,b
  7881  0110C8                     l8890:
  7882                           
  7883                           ; BSR set to: 1
  7884  0110C8  0101               	movlb	1	; () banked
  7885  0110CA  BF41               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7886  0110CC  D007               	goto	l8892
  7887  0110CE  0101               	movlb	1	; () banked
  7888  0110D0  5141               	movf	(sprintf@exp+1)& (0+255),w,b
  7889  0110D2  E1ED               	bnz	l8884
  7890  0110D4  0101               	movlb	1	; () banked
  7891  0110D6  0540               	decf	sprintf@exp& (0+255),w,b
  7892  0110D8  B0D8               	btfsc	status,0,c
  7893  0110DA  D7E9               	goto	l8884
  7894  0110DC                     l8892:
  7895                           
  7896                           ; BSR set to: 1
  7897                           ;doprnt.c: 1210: }
  7898                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7899  0110DC  0101               	movlb	1	; () banked
  7900  0110DE  BF47               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7901  0110E0  D00C               	goto	l1028
  7902  0110E2  0101               	movlb	1	; () banked
  7903  0110E4  5147               	movf	(sprintf@prec+1)& (0+255),w,b
  7904  0110E6  E105               	bnz	u11890
  7905  0110E8  0E09               	movlw	9
  7906  0110EA  0101               	movlb	1	; () banked
  7907  0110EC  5D46               	subwf	sprintf@prec& (0+255),w,b
  7908  0110EE  A0D8               	btfss	status,0,c
  7909  0110F0  D004               	goto	l1028
  7910  0110F2                     u11890:
  7911                           
  7912                           ; BSR set to: 1
  7913                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7914  0110F2  0E08               	movlw	8
  7915  0110F4  0101               	movlb	1	; () banked
  7916  0110F6  6F4C               	movwf	sprintf@c& (0+255),b
  7917  0110F8  D002               	goto	l8896
  7918  0110FA                     l1028:
  7919                           
  7920                           ; BSR set to: 1
  7921                           ;doprnt.c: 1213: else
  7922                           ;doprnt.c: 1214: c = prec;
  7923  0110FA  C146  F14C         	movff	sprintf@prec,sprintf@c
  7924  0110FE                     l8896:
  7925                           
  7926                           ; BSR set to: 1
  7927                           ;doprnt.c: 1215: prec -= c;
  7928  0110FE  0101               	movlb	1	; () banked
  7929  011100  514C               	movf	sprintf@c& (0+255),w,b
  7930  011102  0101               	movlb	1	; () banked
  7931  011104  5F46               	subwf	sprintf@prec& (0+255),f,b
  7932  011106  0E00               	movlw	0
  7933  011108  0101               	movlb	1	; () banked
  7934  01110A  BF4C               	btfsc	sprintf@c& (0+255),7,b
  7935  01110C  0EFF               	movlw	255
  7936  01110E  0101               	movlb	1	; () banked
  7937  011110  5B47               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7938                           
  7939                           ; BSR set to: 1
  7940                           ;doprnt.c: 1219: if(c)
  7941  011112  0101               	movlb	1	; () banked
  7942  011114  514C               	movf	sprintf@c& (0+255),w,b
  7943  011116  0101               	movlb	1	; () banked
  7944  011118  B4D8               	btfsc	status,2,c
  7945  01111A  D009               	goto	l8904
  7946                           
  7947                           ; BSR set to: 1
  7948                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7949  01111C  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7950  011120  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7951  011124  0E2E               	movlw	46
  7952  011126  6EDF               	movwf	indf2,c
  7953                           
  7954                           ; BSR set to: 1
  7955  011128  0100               	movlb	0	; () banked
  7956  01112A  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  7957  01112C  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  7958  01112E                     l8904:
  7959                           
  7960                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7961  01112E  0101               	movlb	1	; () banked
  7962  011130  514C               	movf	sprintf@c& (0+255),w,b
  7963  011132  EC72  F094         	call	_scale
  7964  011136  C097  F134         	movff	?_scale,_sprintf$4257
  7965  01113A  C098  F135         	movff	?_scale+1,_sprintf$4257+1
  7966  01113E  C099  F136         	movff	?_scale+2,_sprintf$4257+2
  7967  011142  C09A  F137         	movff	?_scale+3,_sprintf$4257+3
  7968                           
  7969                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7970  011146  C148  F082         	movff	sprintf@fval,___flmul@a
  7971  01114A  C149  F083         	movff	sprintf@fval+1,___flmul@a+1
  7972  01114E  C14A  F084         	movff	sprintf@fval+2,___flmul@a+2
  7973  011152  C14B  F085         	movff	sprintf@fval+3,___flmul@a+3
  7974  011156  C134  F07E         	movff	_sprintf$4257,___flmul@b
  7975  01115A  C135  F07F         	movff	_sprintf$4257+1,___flmul@b+1
  7976  01115E  C136  F080         	movff	_sprintf$4257+2,___flmul@b+2
  7977  011162  C137  F081         	movff	_sprintf$4257+3,___flmul@b+3
  7978  011166  ECD9  F09B         	call	___flmul	;wreg free
  7979  01116A  C07E  F0B8         	movff	?___flmul,___fltol@f1
  7980  01116E  C07F  F0B9         	movff	?___flmul+1,___fltol@f1+1
  7981  011172  C080  F0BA         	movff	?___flmul+2,___fltol@f1+2
  7982  011176  C081  F0BB         	movff	?___flmul+3,___fltol@f1+3
  7983  01117A  ECF1  F0AA         	call	___fltol	;wreg free
  7984  01117E  C0B8  F13C         	movff	?___fltol,sprintf@val
  7985  011182  C0B9  F13D         	movff	?___fltol+1,sprintf@val+1
  7986  011186  C0BA  F13E         	movff	?___fltol+2,sprintf@val+2
  7987  01118A  C0BB  F13F         	movff	?___fltol+3,sprintf@val+3
  7988                           
  7989                           ;doprnt.c: 1228: while(c--) {
  7990  01118E  D07A               	goto	l8918
  7991  011190                     l8908:
  7992                           
  7993                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7994  011190  C13C  F070         	movff	sprintf@val,___lldiv@dividend
  7995  011194  C13D  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  7996  011198  C13E  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  7997  01119C  C13F  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  7998  0111A0  0101               	movlb	1	; () banked
  7999  0111A2  514C               	movf	sprintf@c& (0+255),w,b
  8000  0111A4  0D04               	mullw	4
  8001  0111A6  0E31               	movlw	low _dpowers
  8002  0111A8  24F3               	addwf	prodl,w,c
  8003  0111AA  6EF6               	movwf	tblptrl,c
  8004  0111AC  0EFE               	movlw	high _dpowers
  8005  0111AE  20F4               	addwfc	prodh,w,c
  8006  0111B0  6EF7               	movwf	tblptrh,c
  8007  0111B2                     	if	1	;There are 3 active tblptr bytes
  8008  0111B2  6AF8               	clrf	tblptru,c
  8009  0111B4  0E00               	movlw	low (__mediumconst shr (0+16))
  8010  0111B6  22F8               	addwfc	tblptru,f,c
  8011  0111B8                     	endif
  8012  0111B8  0009               	tblrd		*+
  8013  0111BA  CFF5 F074          	movff	tablat,___lldiv@divisor
  8014  0111BE  0009               	tblrd		*+
  8015  0111C0  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  8016  0111C4  0009               	tblrd		*+
  8017  0111C6  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  8018  0111CA  000A               	tblrd		*-
  8019  0111CC  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  8020  0111D0  ECAB  F0AC         	call	___lldiv	;wreg free
  8021  0111D4  C070  F142         	movff	?___lldiv,sprintf@tmpval
  8022  0111D8  C071  F143         	movff	?___lldiv+1,sprintf@tmpval+1
  8023  0111DC  C072  F144         	movff	?___lldiv+2,sprintf@tmpval+2
  8024  0111E0  C073  F145         	movff	?___lldiv+3,sprintf@tmpval+3
  8025                           
  8026                           ;doprnt.c: 1230: tmpval.vd %= 10;
  8027  0111E4  C142  F070         	movff	sprintf@tmpval,___llmod@dividend
  8028  0111E8  C143  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8029  0111EC  C144  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8030  0111F0  C145  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8031  0111F4  0E0A               	movlw	10
  8032  0111F6  0100               	movlb	0	; () banked
  8033  0111F8  6F74               	movwf	___llmod@divisor& (0+255),b
  8034  0111FA  0E00               	movlw	0
  8035  0111FC  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  8036  0111FE  0E00               	movlw	0
  8037  011200  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  8038  011202  0E00               	movlw	0
  8039  011204  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  8040  011206  EC60  F0AE         	call	___llmod	;wreg free
  8041  01120A  C070  F142         	movff	?___llmod,sprintf@tmpval
  8042  01120E  C071  F143         	movff	?___llmod+1,sprintf@tmpval+1
  8043  011212  C072  F144         	movff	?___llmod+2,sprintf@tmpval+2
  8044  011216  C073  F145         	movff	?___llmod+3,sprintf@tmpval+3
  8045                           
  8046                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  8047  01121A  0101               	movlb	1	; () banked
  8048  01121C  5142               	movf	sprintf@tmpval& (0+255),w,b
  8049  01121E  0F30               	addlw	48
  8050  011220  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  8051  011224  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  8052  011228  6EDF               	movwf	indf2,c
  8053                           
  8054                           ; BSR set to: 1
  8055  01122A  0100               	movlb	0	; () banked
  8056  01122C  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  8057  01122E  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  8058                           
  8059                           ; BSR set to: 0
  8060                           ;doprnt.c: 1232: val %= dpowers[c];
  8061  011230  C13C  F070         	movff	sprintf@val,___llmod@dividend
  8062  011234  C13D  F071         	movff	sprintf@val+1,___llmod@dividend+1
  8063  011238  C13E  F072         	movff	sprintf@val+2,___llmod@dividend+2
  8064  01123C  C13F  F073         	movff	sprintf@val+3,___llmod@dividend+3
  8065  011240  0101               	movlb	1	; () banked
  8066  011242  514C               	movf	sprintf@c& (0+255),w,b
  8067  011244  0D04               	mullw	4
  8068  011246  0E31               	movlw	low _dpowers
  8069  011248  24F3               	addwf	prodl,w,c
  8070  01124A  6EF6               	movwf	tblptrl,c
  8071  01124C  0EFE               	movlw	high _dpowers
  8072  01124E  20F4               	addwfc	prodh,w,c
  8073  011250  6EF7               	movwf	tblptrh,c
  8074  011252                     	if	1	;There are 3 active tblptr bytes
  8075  011252  6AF8               	clrf	tblptru,c
  8076  011254  0E00               	movlw	low (__mediumconst shr (0+16))
  8077  011256  22F8               	addwfc	tblptru,f,c
  8078  011258                     	endif
  8079  011258  0009               	tblrd		*+
  8080  01125A  CFF5 F074          	movff	tablat,___llmod@divisor
  8081  01125E  0009               	tblrd		*+
  8082  011260  CFF5 F075          	movff	tablat,___llmod@divisor+1
  8083  011264  0009               	tblrd		*+
  8084  011266  CFF5 F076          	movff	tablat,___llmod@divisor+2
  8085  01126A  000A               	tblrd		*-
  8086  01126C  CFF5 F077          	movff	tablat,___llmod@divisor+3
  8087  011270  EC60  F0AE         	call	___llmod	;wreg free
  8088  011274  C070  F13C         	movff	?___llmod,sprintf@val
  8089  011278  C071  F13D         	movff	?___llmod+1,sprintf@val+1
  8090  01127C  C072  F13E         	movff	?___llmod+2,sprintf@val+2
  8091  011280  C073  F13F         	movff	?___llmod+3,sprintf@val+3
  8092  011284                     l8918:
  8093  011284  0101               	movlb	1	; () banked
  8094  011286  074C               	decf	sprintf@c& (0+255),f,b
  8095  011288  0101               	movlb	1	; () banked
  8096  01128A  294C               	incf	sprintf@c& (0+255),w,b
  8097  01128C  B4D8               	btfsc	status,2,c
  8098  01128E  D00E               	goto	l8926
  8099  011290  D77F               	goto	l8908
  8100  011292                     l8920:
  8101                           
  8102                           ; BSR set to: 1
  8103                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  8104  011292  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  8105  011296  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  8106  01129A  0E30               	movlw	48
  8107  01129C  6EDF               	movwf	indf2,c
  8108                           
  8109                           ; BSR set to: 1
  8110  01129E  0100               	movlb	0	; () banked
  8111  0112A0  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  8112  0112A2  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  8113                           
  8114                           ; BSR set to: 0
  8115                           ;doprnt.c: 1237: prec--;
  8116  0112A4  0101               	movlb	1	; () banked
  8117  0112A6  0746               	decf	sprintf@prec& (0+255),f,b
  8118  0112A8  A0D8               	btfss	status,0,c
  8119  0112AA  0747               	decf	(sprintf@prec+1)& (0+255),f,b
  8120  0112AC                     l8926:
  8121                           
  8122                           ; BSR set to: 1
  8123  0112AC  0101               	movlb	1	; () banked
  8124  0112AE  5146               	movf	sprintf@prec& (0+255),w,b
  8125  0112B0  0101               	movlb	1	; () banked
  8126  0112B2  1147               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8127  0112B4  B4D8               	btfsc	status,2,c
  8128  0112B6  D059               	goto	l8948
  8129  0112B8  D7EC               	goto	l8920
  8130  0112BA                     l8928:
  8131                           
  8132                           ; BSR set to: 1
  8133                           ;doprnt.c: 1246: }
  8134                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  8135  0112BA  0101               	movlb	1	; () banked
  8136  0112BC  5146               	movf	sprintf@prec& (0+255),w,b
  8137  0112BE  0101               	movlb	1	; () banked
  8138  0112C0  1147               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8139  0112C2  A4D8               	btfss	status,2,c
  8140  0112C4  D00D               	goto	l8934
  8141                           
  8142                           ; BSR set to: 1
  8143  0112C6  0101               	movlb	1	; () banked
  8144  0112C8  513C               	movf	sprintf@val& (0+255),w,b
  8145  0112CA  0101               	movlb	1	; () banked
  8146  0112CC  113D               	iorwf	(sprintf@val+1)& (0+255),w,b
  8147  0112CE  0101               	movlb	1	; () banked
  8148  0112D0  113E               	iorwf	(sprintf@val+2)& (0+255),w,b
  8149  0112D2  0101               	movlb	1	; () banked
  8150  0112D4  113F               	iorwf	(sprintf@val+3)& (0+255),w,b
  8151  0112D6  A4D8               	btfss	status,2,c
  8152  0112D8  D003               	goto	l8934
  8153                           
  8154                           ; BSR set to: 1
  8155                           ;doprnt.c: 1291: prec++;
  8156  0112DA  0101               	movlb	1	; () banked
  8157  0112DC  4B46               	infsnz	sprintf@prec& (0+255),f,b
  8158  0112DE  2B47               	incf	(sprintf@prec+1)& (0+255),f,b
  8159  0112E0                     l8934:
  8160                           
  8161                           ; BSR set to: 1
  8162                           ;doprnt.c: 1339: if(c < prec)
  8163  0112E0  0E80               	movlw	128
  8164  0112E2  0101               	movlb	1	; () banked
  8165  0112E4  BF4C               	btfsc	sprintf@c& (0+255),7,b
  8166  0112E6  0E7F               	movlw	127
  8167  0112E8  0100               	movlb	0	; () banked
  8168  0112EA  6FCA               	movwf	??_sprintf& (0+255),b
  8169  0112EC  0101               	movlb	1	; () banked
  8170  0112EE  5146               	movf	sprintf@prec& (0+255),w,b
  8171  0112F0  0101               	movlb	1	; () banked
  8172  0112F2  5D4C               	subwf	sprintf@c& (0+255),w,b
  8173  0112F4  0101               	movlb	1	; () banked
  8174  0112F6  5147               	movf	(sprintf@prec+1)& (0+255),w,b
  8175  0112F8  0A80               	xorlw	128
  8176  0112FA  0100               	movlb	0	; () banked
  8177  0112FC  59CA               	subwfb	??_sprintf& (0+255),w,b
  8178  0112FE  B0D8               	btfsc	status,0,c
  8179  011300  D003               	goto	l8938
  8180                           
  8181                           ; BSR set to: 0
  8182                           ;doprnt.c: 1340: c = prec;
  8183  011302  C146  F14C         	movff	sprintf@prec,sprintf@c
  8184  011306  D018               	goto	l8942
  8185  011308                     l8938:
  8186                           
  8187                           ; BSR set to: 0
  8188                           ;doprnt.c: 1341: else if(prec < c)
  8189  011308  0101               	movlb	1	; () banked
  8190  01130A  5147               	movf	(sprintf@prec+1)& (0+255),w,b
  8191  01130C  0A80               	xorlw	128
  8192  01130E  0100               	movlb	0	; () banked
  8193  011310  6FCA               	movwf	??_sprintf& (0+255),b
  8194  011312  0101               	movlb	1	; () banked
  8195  011314  514C               	movf	sprintf@c& (0+255),w,b
  8196  011316  0101               	movlb	1	; () banked
  8197  011318  5D46               	subwf	sprintf@prec& (0+255),w,b
  8198  01131A  0E80               	movlw	128
  8199  01131C  0101               	movlb	1	; () banked
  8200  01131E  BF4C               	btfsc	sprintf@c& (0+255),7,b
  8201  011320  0E7F               	movlw	127
  8202  011322  0100               	movlb	0	; () banked
  8203  011324  59CA               	subwfb	??_sprintf& (0+255),w,b
  8204  011326  B0D8               	btfsc	status,0,c
  8205  011328  D007               	goto	l8942
  8206                           
  8207                           ; BSR set to: 0
  8208                           ;doprnt.c: 1342: prec = c;
  8209  01132A  0101               	movlb	1	; () banked
  8210  01132C  514C               	movf	sprintf@c& (0+255),w,b
  8211  01132E  0101               	movlb	1	; () banked
  8212  011330  6F46               	movwf	sprintf@prec& (0+255),b
  8213  011332  6B47               	clrf	(sprintf@prec+1)& (0+255),b
  8214  011334  BF46               	btfsc	sprintf@prec& (0+255),7,b
  8215  011336  0747               	decf	(sprintf@prec+1)& (0+255),f,b
  8216  011338                     l8942:
  8217                           
  8218                           ;doprnt.c: 1422: {
  8219                           ;doprnt.c: 1438: if(flag & 0x03)
  8220  011338  0E03               	movlw	3
  8221  01133A  0101               	movlb	1	; () banked
  8222  01133C  153A               	andwf	sprintf@flag& (0+255),w,b
  8223  01133E  0100               	movlb	0	; () banked
  8224  011340  6FCA               	movwf	??_sprintf& (0+255),b
  8225  011342  0E00               	movlw	0
  8226  011344  0101               	movlb	1	; () banked
  8227  011346  153B               	andwf	(sprintf@flag+1)& (0+255),w,b
  8228  011348  0100               	movlb	0	; () banked
  8229  01134A  6FCB               	movwf	(??_sprintf+1)& (0+255),b
  8230  01134C  0100               	movlb	0	; () banked
  8231  01134E  51CA               	movf	??_sprintf& (0+255),w,b
  8232  011350  0100               	movlb	0	; () banked
  8233  011352  11CB               	iorwf	(??_sprintf+1)& (0+255),w,b
  8234  011354  B4D8               	btfsc	status,2,c
  8235  011356  D009               	goto	l8948
  8236                           
  8237                           ; BSR set to: 0
  8238                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8239  011358  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  8240  01135C  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  8241  011360  0E2D               	movlw	45
  8242  011362  6EDF               	movwf	indf2,c
  8243  011364                     l8946:
  8244                           
  8245                           ; BSR set to: 0
  8246  011364  0100               	movlb	0	; () banked
  8247  011366  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  8248  011368  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  8249  01136A                     l8948:
  8250  01136A  C0C4  FFF6         	movff	sprintf@f,tblptrl
  8251  01136E  C0C5  FFF7         	movff	sprintf@f+1,tblptrh
  8252  011372  0100               	movlb	0	; () banked
  8253  011374  4BC4               	infsnz	sprintf@f& (0+255),f,b
  8254  011376  2BC5               	incf	(sprintf@f+1)& (0+255),f,b
  8255  011378                     	if	0	;tblptru may be non-zero
  8256  011378                     	endif
  8257  011378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8258  011378  0E00               	movlw	low (__mediumconst shr (0+16))
  8259  01137A  6EF8               	movwf	tblptru,c
  8260  01137C                     	endif
  8261  01137C  0008               	tblrd		*
  8262  01137E  CFF5 F14C          	movff	tablat,sprintf@c
  8263  011382  0101               	movlb	1	; () banked
  8264  011384  514C               	movf	sprintf@c& (0+255),w,b
  8265  011386  A4D8               	btfss	status,2,c
  8266  011388  EF8B  F085         	goto	l8750
  8267  01138C                     l8950:
  8268                           
  8269                           ; BSR set to: 1
  8270                           ;doprnt.c: 1538: *sp = 0;
  8271  01138C  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  8272  011390  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  8273  011394  0E00               	movlw	0
  8274  011396  6EDF               	movwf	indf2,c
  8275  011398  0012               	return	
  8276  01139A                     __end_of_sprintf:
  8277                           	opt stack 0
  8278                           tblptru	equ	0xFF8
  8279                           tblptrh	equ	0xFF7
  8280                           tblptrl	equ	0xFF6
  8281                           tablat	equ	0xFF5
  8282                           prodh	equ	0xFF4
  8283                           prodl	equ	0xFF3
  8284                           intcon	equ	0xFF2
  8285                           postinc0	equ	0xFEE
  8286                           wreg	equ	0xFE8
  8287                           indf2	equ	0xFDF
  8288                           postinc2	equ	0xFDE
  8289                           fsr2h	equ	0xFDA
  8290                           fsr2l	equ	0xFD9
  8291                           status	equ	0xFD8
  8292                           
  8293 ;; *************** function _scale *****************
  8294 ;; Defined at:
  8295 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;  scl             1    wreg     char 
  8298 ;; Auto vars:     Size  Location     Type
  8299 ;;  scl             1   63[BANK0 ] char 
  8300 ;; Return value:  Size  Location     Type
  8301 ;;                  4   55[BANK0 ] char 
  8302 ;; Registers used:
  8303 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8304 ;; Tracked objects:
  8305 ;;		On entry : 0/0
  8306 ;;		On exit  : 0/0
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8309 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8310 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8312 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8313 ;;Total ram usage:        9 bytes
  8314 ;; Hardware stack levels used:    1
  8315 ;; Hardware stack levels required when called:    4
  8316 ;; This function calls:
  8317 ;;		___awdiv
  8318 ;;		___awmod
  8319 ;;		___flmul
  8320 ;; This function is called by:
  8321 ;;		_sprintf
  8322 ;; This function uses a non-reentrant model
  8323 ;;
  8324                           
  8325                           	psect	text11
  8326  0128E4                     __ptext11:
  8327                           	opt stack 0
  8328  0128E4                     _scale:
  8329                           	opt stack 24
  8330                           
  8331                           ; BSR set to: 1
  8332                           ;incstack = 0
  8333                           ;scale@scl stored from wreg
  8334  0128E4  0100               	movlb	0	; () banked
  8335  0128E6  6F9F               	movwf	scale@scl& (0+255),b
  8336                           
  8337                           ;doprnt.c: 428: if(scl < 0) {
  8338  0128E8  0100               	movlb	0	; () banked
  8339  0128EA  AF9F               	btfss	scale@scl& (0+255),7,b
  8340  0128EC  D145               	goto	l8358
  8341                           
  8342                           ; BSR set to: 0
  8343                           ;doprnt.c: 429: scl = -scl;
  8344  0128EE  0100               	movlb	0	; () banked
  8345  0128F0  6D9F               	negf	scale@scl& (0+255),b
  8346                           
  8347                           ;doprnt.c: 430: if(scl>=110)
  8348  0128F2  0100               	movlb	0	; () banked
  8349  0128F4  519F               	movf	scale@scl& (0+255),w,b
  8350  0128F6  0A80               	xorlw	128
  8351  0128F8  0F12               	addlw	-238
  8352  0128FA  A0D8               	btfss	status,0,c
  8353  0128FC  D0BB               	goto	l8348
  8354                           
  8355                           ; BSR set to: 0
  8356                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8357  0128FE  0E00               	movlw	0
  8358  012900  0100               	movlb	0	; () banked
  8359  012902  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8360  012904  0E0A               	movlw	10
  8361  012906  6F78               	movwf	___awdiv@divisor& (0+255),b
  8362  012908  0E00               	movlw	0
  8363  01290A  0100               	movlb	0	; () banked
  8364  01290C  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8365  01290E  0E64               	movlw	100
  8366  012910  6F72               	movwf	___awmod@divisor& (0+255),b
  8367  012912  0100               	movlb	0	; () banked
  8368  012914  519F               	movf	scale@scl& (0+255),w,b
  8369  012916  0100               	movlb	0	; () banked
  8370  012918  6F70               	movwf	___awmod@dividend& (0+255),b
  8371  01291A  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8372  01291C  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8373  01291E  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8374  012920  EC0F  F0AE         	call	___awmod	;wreg free
  8375  012924  C070  F076         	movff	?___awmod,___awdiv@dividend
  8376  012928  C071  F077         	movff	?___awmod+1,___awdiv@dividend+1
  8377  01292C  ECED  F0AB         	call	___awdiv	;wreg free
  8378  012930  0100               	movlb	0	; () banked
  8379  012932  90D8               	bcf	status,0,c
  8380  012934  3776               	rlcf	?___awdiv& (0+255),f,b
  8381  012936  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8382  012938  0100               	movlb	0	; () banked
  8383  01293A  90D8               	bcf	status,0,c
  8384  01293C  3776               	rlcf	?___awdiv& (0+255),f,b
  8385  01293E  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8386  012940  0E24               	movlw	36
  8387  012942  0100               	movlb	0	; () banked
  8388  012944  2776               	addwf	?___awdiv& (0+255),f,b
  8389  012946  0E00               	movlw	0
  8390  012948  0100               	movlb	0	; () banked
  8391  01294A  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8392  01294C  0EC9               	movlw	low __npowers_
  8393  01294E  0100               	movlb	0	; () banked
  8394  012950  2576               	addwf	?___awdiv& (0+255),w,b
  8395  012952  6EF6               	movwf	tblptrl,c
  8396  012954  0EFD               	movlw	high __npowers_
  8397  012956  0100               	movlb	0	; () banked
  8398  012958  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8399  01295A  6EF7               	movwf	tblptrh,c
  8400  01295C                     	if	1	;There are 3 active tblptr bytes
  8401  01295C  6AF8               	clrf	tblptru,c
  8402  01295E  0E00               	movlw	low (__mediumconst shr (0+16))
  8403  012960  22F8               	addwfc	tblptru,f,c
  8404  012962                     	endif
  8405  012962  0009               	tblrd		*+
  8406  012964  CFF5 F082          	movff	tablat,___flmul@a
  8407  012968  0009               	tblrd		*+
  8408  01296A  CFF5 F083          	movff	tablat,___flmul@a+1
  8409  01296E  0009               	tblrd		*+
  8410  012970  CFF5 F084          	movff	tablat,___flmul@a+2
  8411  012974  000A               	tblrd		*-
  8412  012976  CFF5 F085          	movff	tablat,___flmul@a+3
  8413  01297A  0E00               	movlw	0
  8414  01297C  0100               	movlb	0	; () banked
  8415  01297E  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8416  012980  0E64               	movlw	100
  8417  012982  6F78               	movwf	___awdiv@divisor& (0+255),b
  8418  012984  0100               	movlb	0	; () banked
  8419  012986  519F               	movf	scale@scl& (0+255),w,b
  8420  012988  0100               	movlb	0	; () banked
  8421  01298A  6F76               	movwf	___awdiv@dividend& (0+255),b
  8422  01298C  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  8423  01298E  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  8424  012990  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8425  012992  ECED  F0AB         	call	___awdiv	;wreg free
  8426  012996  0100               	movlb	0	; () banked
  8427  012998  90D8               	bcf	status,0,c
  8428  01299A  3776               	rlcf	?___awdiv& (0+255),f,b
  8429  01299C  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8430  01299E  0100               	movlb	0	; () banked
  8431  0129A0  90D8               	bcf	status,0,c
  8432  0129A2  3776               	rlcf	?___awdiv& (0+255),f,b
  8433  0129A4  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8434  0129A6  0E48               	movlw	72
  8435  0129A8  0100               	movlb	0	; () banked
  8436  0129AA  2776               	addwf	?___awdiv& (0+255),f,b
  8437  0129AC  0E00               	movlw	0
  8438  0129AE  0100               	movlb	0	; () banked
  8439  0129B0  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8440  0129B2  0EC9               	movlw	low __npowers_
  8441  0129B4  0100               	movlb	0	; () banked
  8442  0129B6  2576               	addwf	?___awdiv& (0+255),w,b
  8443  0129B8  6EF6               	movwf	tblptrl,c
  8444  0129BA  0EFD               	movlw	high __npowers_
  8445  0129BC  0100               	movlb	0	; () banked
  8446  0129BE  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8447  0129C0  6EF7               	movwf	tblptrh,c
  8448  0129C2                     	if	1	;There are 3 active tblptr bytes
  8449  0129C2  6AF8               	clrf	tblptru,c
  8450  0129C4  0E00               	movlw	low (__mediumconst shr (0+16))
  8451  0129C6  22F8               	addwfc	tblptru,f,c
  8452  0129C8                     	endif
  8453  0129C8  0009               	tblrd		*+
  8454  0129CA  CFF5 F07E          	movff	tablat,___flmul@b
  8455  0129CE  0009               	tblrd		*+
  8456  0129D0  CFF5 F07F          	movff	tablat,___flmul@b+1
  8457  0129D4  0009               	tblrd		*+
  8458  0129D6  CFF5 F080          	movff	tablat,___flmul@b+2
  8459  0129DA  000A               	tblrd		*-
  8460  0129DC  CFF5 F081          	movff	tablat,___flmul@b+3
  8461  0129E0  ECD9  F09B         	call	___flmul	;wreg free
  8462  0129E4  C07E  F09B         	movff	?___flmul,_scale$4256
  8463  0129E8  C07F  F09C         	movff	?___flmul+1,_scale$4256+1
  8464  0129EC  C080  F09D         	movff	?___flmul+2,_scale$4256+2
  8465  0129F0  C081  F09E         	movff	?___flmul+3,_scale$4256+3
  8466                           
  8467                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8468  0129F4  C09B  F07E         	movff	_scale$4256,___flmul@b
  8469  0129F8  C09C  F07F         	movff	_scale$4256+1,___flmul@b+1
  8470  0129FC  C09D  F080         	movff	_scale$4256+2,___flmul@b+2
  8471  012A00  C09E  F081         	movff	_scale$4256+3,___flmul@b+3
  8472  012A04  0E00               	movlw	0
  8473  012A06  0100               	movlb	0	; () banked
  8474  012A08  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8475  012A0A  0E0A               	movlw	10
  8476  012A0C  6F72               	movwf	___awmod@divisor& (0+255),b
  8477  012A0E  0100               	movlb	0	; () banked
  8478  012A10  519F               	movf	scale@scl& (0+255),w,b
  8479  012A12  0100               	movlb	0	; () banked
  8480  012A14  6F70               	movwf	___awmod@dividend& (0+255),b
  8481  012A16  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8482  012A18  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8483  012A1A  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8484  012A1C  EC0F  F0AE         	call	___awmod	;wreg free
  8485  012A20  0100               	movlb	0	; () banked
  8486  012A22  90D8               	bcf	status,0,c
  8487  012A24  3770               	rlcf	?___awmod& (0+255),f,b
  8488  012A26  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8489  012A28  0100               	movlb	0	; () banked
  8490  012A2A  90D8               	bcf	status,0,c
  8491  012A2C  3770               	rlcf	?___awmod& (0+255),f,b
  8492  012A2E  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8493  012A30  0EC9               	movlw	low __npowers_
  8494  012A32  0100               	movlb	0	; () banked
  8495  012A34  2570               	addwf	?___awmod& (0+255),w,b
  8496  012A36  6EF6               	movwf	tblptrl,c
  8497  012A38  0EFD               	movlw	high __npowers_
  8498  012A3A  0100               	movlb	0	; () banked
  8499  012A3C  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  8500  012A3E  6EF7               	movwf	tblptrh,c
  8501  012A40                     	if	1	;There are 3 active tblptr bytes
  8502  012A40  6AF8               	clrf	tblptru,c
  8503  012A42  0E00               	movlw	low (__mediumconst shr (0+16))
  8504  012A44  22F8               	addwfc	tblptru,f,c
  8505  012A46                     	endif
  8506  012A46  0009               	tblrd		*+
  8507  012A48  CFF5 F082          	movff	tablat,___flmul@a
  8508  012A4C  0009               	tblrd		*+
  8509  012A4E  CFF5 F083          	movff	tablat,___flmul@a+1
  8510  012A52  0009               	tblrd		*+
  8511  012A54  CFF5 F084          	movff	tablat,___flmul@a+2
  8512  012A58  000A               	tblrd		*-
  8513  012A5A  CFF5 F085          	movff	tablat,___flmul@a+3
  8514  012A5E  ECD9  F09B         	call	___flmul	;wreg free
  8515  012A62  C07E  F097         	movff	?___flmul,?_scale
  8516  012A66  C07F  F098         	movff	?___flmul+1,?_scale+1
  8517  012A6A  C080  F099         	movff	?___flmul+2,?_scale+2
  8518  012A6E  C081  F09A         	movff	?___flmul+3,?_scale+3
  8519  012A72  0012               	return	
  8520  012A74                     l8348:
  8521                           
  8522                           ;doprnt.c: 432: else if(scl > 10)
  8523  012A74  0100               	movlb	0	; () banked
  8524  012A76  519F               	movf	scale@scl& (0+255),w,b
  8525  012A78  0A80               	xorlw	128
  8526  012A7A  0F75               	addlw	-139
  8527  012A7C  A0D8               	btfss	status,0,c
  8528  012A7E  D063               	goto	l8354
  8529                           
  8530                           ; BSR set to: 0
  8531                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8532  012A80  0E00               	movlw	0
  8533  012A82  0100               	movlb	0	; () banked
  8534  012A84  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8535  012A86  0E0A               	movlw	10
  8536  012A88  6F78               	movwf	___awdiv@divisor& (0+255),b
  8537  012A8A  0100               	movlb	0	; () banked
  8538  012A8C  519F               	movf	scale@scl& (0+255),w,b
  8539  012A8E  0100               	movlb	0	; () banked
  8540  012A90  6F76               	movwf	___awdiv@dividend& (0+255),b
  8541  012A92  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  8542  012A94  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  8543  012A96  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8544  012A98  ECED  F0AB         	call	___awdiv	;wreg free
  8545  012A9C  0100               	movlb	0	; () banked
  8546  012A9E  90D8               	bcf	status,0,c
  8547  012AA0  3776               	rlcf	?___awdiv& (0+255),f,b
  8548  012AA2  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8549  012AA4  0100               	movlb	0	; () banked
  8550  012AA6  90D8               	bcf	status,0,c
  8551  012AA8  3776               	rlcf	?___awdiv& (0+255),f,b
  8552  012AAA  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8553  012AAC  0E24               	movlw	36
  8554  012AAE  0100               	movlb	0	; () banked
  8555  012AB0  2776               	addwf	?___awdiv& (0+255),f,b
  8556  012AB2  0E00               	movlw	0
  8557  012AB4  0100               	movlb	0	; () banked
  8558  012AB6  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8559  012AB8  0EC9               	movlw	low __npowers_
  8560  012ABA  0100               	movlb	0	; () banked
  8561  012ABC  2576               	addwf	?___awdiv& (0+255),w,b
  8562  012ABE  6EF6               	movwf	tblptrl,c
  8563  012AC0  0EFD               	movlw	high __npowers_
  8564  012AC2  0100               	movlb	0	; () banked
  8565  012AC4  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8566  012AC6  6EF7               	movwf	tblptrh,c
  8567  012AC8                     	if	1	;There are 3 active tblptr bytes
  8568  012AC8  6AF8               	clrf	tblptru,c
  8569  012ACA  0E00               	movlw	low (__mediumconst shr (0+16))
  8570  012ACC  22F8               	addwfc	tblptru,f,c
  8571  012ACE                     	endif
  8572  012ACE  0009               	tblrd		*+
  8573  012AD0  CFF5 F07E          	movff	tablat,___flmul@b
  8574  012AD4  0009               	tblrd		*+
  8575  012AD6  CFF5 F07F          	movff	tablat,___flmul@b+1
  8576  012ADA  0009               	tblrd		*+
  8577  012ADC  CFF5 F080          	movff	tablat,___flmul@b+2
  8578  012AE0  000A               	tblrd		*-
  8579  012AE2  CFF5 F081          	movff	tablat,___flmul@b+3
  8580  012AE6  0E00               	movlw	0
  8581  012AE8  0100               	movlb	0	; () banked
  8582  012AEA  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8583  012AEC  0E0A               	movlw	10
  8584  012AEE  6F72               	movwf	___awmod@divisor& (0+255),b
  8585  012AF0  0100               	movlb	0	; () banked
  8586  012AF2  519F               	movf	scale@scl& (0+255),w,b
  8587  012AF4  0100               	movlb	0	; () banked
  8588  012AF6  6F70               	movwf	___awmod@dividend& (0+255),b
  8589  012AF8  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8590  012AFA  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8591  012AFC  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8592  012AFE  EC0F  F0AE         	call	___awmod	;wreg free
  8593  012B02  0100               	movlb	0	; () banked
  8594  012B04  90D8               	bcf	status,0,c
  8595  012B06  3770               	rlcf	?___awmod& (0+255),f,b
  8596  012B08  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8597  012B0A  0100               	movlb	0	; () banked
  8598  012B0C  90D8               	bcf	status,0,c
  8599  012B0E  3770               	rlcf	?___awmod& (0+255),f,b
  8600  012B10  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8601  012B12  0EC9               	movlw	low __npowers_
  8602  012B14  0100               	movlb	0	; () banked
  8603  012B16  2570               	addwf	?___awmod& (0+255),w,b
  8604  012B18  6EF6               	movwf	tblptrl,c
  8605  012B1A  0EFD               	movlw	high __npowers_
  8606  012B1C  0100               	movlb	0	; () banked
  8607  012B1E  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  8608  012B20  6EF7               	movwf	tblptrh,c
  8609  012B22                     	if	1	;There are 3 active tblptr bytes
  8610  012B22  6AF8               	clrf	tblptru,c
  8611  012B24  0E00               	movlw	low (__mediumconst shr (0+16))
  8612  012B26  22F8               	addwfc	tblptru,f,c
  8613  012B28                     	endif
  8614  012B28  0009               	tblrd		*+
  8615  012B2A  CFF5 F082          	movff	tablat,___flmul@a
  8616  012B2E  0009               	tblrd		*+
  8617  012B30  CFF5 F083          	movff	tablat,___flmul@a+1
  8618  012B34  0009               	tblrd		*+
  8619  012B36  CFF5 F084          	movff	tablat,___flmul@a+2
  8620  012B3A  000A               	tblrd		*-
  8621  012B3C  CFF5 F085          	movff	tablat,___flmul@a+3
  8622  012B40  ECD9  F09B         	call	___flmul	;wreg free
  8623  012B44  D78E               	goto	L8
  8624  012B46                     l8354:
  8625                           
  8626                           ;doprnt.c: 434: return _npowers_[scl];
  8627  012B46  0100               	movlb	0	; () banked
  8628  012B48  519F               	movf	scale@scl& (0+255),w,b
  8629  012B4A  0D04               	mullw	4
  8630  012B4C  0EC9               	movlw	low __npowers_
  8631  012B4E  24F3               	addwf	prodl,w,c
  8632  012B50  6EF6               	movwf	tblptrl,c
  8633  012B52  0EFD               	movlw	high __npowers_
  8634  012B54  20F4               	addwfc	prodh,w,c
  8635  012B56  6EF7               	movwf	tblptrh,c
  8636  012B58                     	if	1	;There are 3 active tblptr bytes
  8637  012B58  6AF8               	clrf	tblptru,c
  8638  012B5A  0E00               	movlw	low (__mediumconst shr (0+16))
  8639  012B5C  22F8               	addwfc	tblptru,f,c
  8640  012B5E                     	endif
  8641  012B5E  0009               	tblrd		*+
  8642  012B60  CFF5 F097          	movff	tablat,?_scale
  8643  012B64  0009               	tblrd		*+
  8644  012B66  CFF5 F098          	movff	tablat,?_scale+1
  8645  012B6A  0009               	tblrd		*+
  8646  012B6C  CFF5 F099          	movff	tablat,?_scale+2
  8647  012B70  000A               	tblrd		*-
  8648  012B72  CFF5 F09A          	movff	tablat,?_scale+3
  8649                           
  8650                           ; BSR set to: 0
  8651  012B76  0012               	return	
  8652  012B78                     l8358:
  8653                           
  8654                           ; BSR set to: 0
  8655                           ;doprnt.c: 435: }
  8656                           ;doprnt.c: 436: if(scl>=110)
  8657  012B78  0100               	movlb	0	; () banked
  8658  012B7A  519F               	movf	scale@scl& (0+255),w,b
  8659  012B7C  0A80               	xorlw	128
  8660  012B7E  0F12               	addlw	-238
  8661  012B80  A0D8               	btfss	status,0,c
  8662  012B82  D0BB               	goto	l8366
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8666  012B84  0E00               	movlw	0
  8667  012B86  0100               	movlb	0	; () banked
  8668  012B88  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8669  012B8A  0E0A               	movlw	10
  8670  012B8C  6F78               	movwf	___awdiv@divisor& (0+255),b
  8671  012B8E  0E00               	movlw	0
  8672  012B90  0100               	movlb	0	; () banked
  8673  012B92  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8674  012B94  0E64               	movlw	100
  8675  012B96  6F72               	movwf	___awmod@divisor& (0+255),b
  8676  012B98  0100               	movlb	0	; () banked
  8677  012B9A  519F               	movf	scale@scl& (0+255),w,b
  8678  012B9C  0100               	movlb	0	; () banked
  8679  012B9E  6F70               	movwf	___awmod@dividend& (0+255),b
  8680  012BA0  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8681  012BA2  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8682  012BA4  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8683  012BA6  EC0F  F0AE         	call	___awmod	;wreg free
  8684  012BAA  C070  F076         	movff	?___awmod,___awdiv@dividend
  8685  012BAE  C071  F077         	movff	?___awmod+1,___awdiv@dividend+1
  8686  012BB2  ECED  F0AB         	call	___awdiv	;wreg free
  8687  012BB6  0100               	movlb	0	; () banked
  8688  012BB8  90D8               	bcf	status,0,c
  8689  012BBA  3776               	rlcf	?___awdiv& (0+255),f,b
  8690  012BBC  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8691  012BBE  0100               	movlb	0	; () banked
  8692  012BC0  90D8               	bcf	status,0,c
  8693  012BC2  3776               	rlcf	?___awdiv& (0+255),f,b
  8694  012BC4  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8695  012BC6  0E24               	movlw	36
  8696  012BC8  0100               	movlb	0	; () banked
  8697  012BCA  2776               	addwf	?___awdiv& (0+255),f,b
  8698  012BCC  0E00               	movlw	0
  8699  012BCE  0100               	movlb	0	; () banked
  8700  012BD0  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8701  012BD2  0EFD               	movlw	low __powers_
  8702  012BD4  0100               	movlb	0	; () banked
  8703  012BD6  2576               	addwf	?___awdiv& (0+255),w,b
  8704  012BD8  6EF6               	movwf	tblptrl,c
  8705  012BDA  0EFD               	movlw	high __powers_
  8706  012BDC  0100               	movlb	0	; () banked
  8707  012BDE  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8708  012BE0  6EF7               	movwf	tblptrh,c
  8709  012BE2                     	if	1	;There are 3 active tblptr bytes
  8710  012BE2  6AF8               	clrf	tblptru,c
  8711  012BE4  0E00               	movlw	low (__mediumconst shr (0+16))
  8712  012BE6  22F8               	addwfc	tblptru,f,c
  8713  012BE8                     	endif
  8714  012BE8  0009               	tblrd		*+
  8715  012BEA  CFF5 F082          	movff	tablat,___flmul@a
  8716  012BEE  0009               	tblrd		*+
  8717  012BF0  CFF5 F083          	movff	tablat,___flmul@a+1
  8718  012BF4  0009               	tblrd		*+
  8719  012BF6  CFF5 F084          	movff	tablat,___flmul@a+2
  8720  012BFA  000A               	tblrd		*-
  8721  012BFC  CFF5 F085          	movff	tablat,___flmul@a+3
  8722  012C00  0E00               	movlw	0
  8723  012C02  0100               	movlb	0	; () banked
  8724  012C04  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8725  012C06  0E64               	movlw	100
  8726  012C08  6F78               	movwf	___awdiv@divisor& (0+255),b
  8727  012C0A  0100               	movlb	0	; () banked
  8728  012C0C  519F               	movf	scale@scl& (0+255),w,b
  8729  012C0E  0100               	movlb	0	; () banked
  8730  012C10  6F76               	movwf	___awdiv@dividend& (0+255),b
  8731  012C12  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  8732  012C14  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  8733  012C16  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8734  012C18  ECED  F0AB         	call	___awdiv	;wreg free
  8735  012C1C  0100               	movlb	0	; () banked
  8736  012C1E  90D8               	bcf	status,0,c
  8737  012C20  3776               	rlcf	?___awdiv& (0+255),f,b
  8738  012C22  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8739  012C24  0100               	movlb	0	; () banked
  8740  012C26  90D8               	bcf	status,0,c
  8741  012C28  3776               	rlcf	?___awdiv& (0+255),f,b
  8742  012C2A  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8743  012C2C  0E48               	movlw	72
  8744  012C2E  0100               	movlb	0	; () banked
  8745  012C30  2776               	addwf	?___awdiv& (0+255),f,b
  8746  012C32  0E00               	movlw	0
  8747  012C34  0100               	movlb	0	; () banked
  8748  012C36  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8749  012C38  0EFD               	movlw	low __powers_
  8750  012C3A  0100               	movlb	0	; () banked
  8751  012C3C  2576               	addwf	?___awdiv& (0+255),w,b
  8752  012C3E  6EF6               	movwf	tblptrl,c
  8753  012C40  0EFD               	movlw	high __powers_
  8754  012C42  0100               	movlb	0	; () banked
  8755  012C44  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8756  012C46  6EF7               	movwf	tblptrh,c
  8757  012C48                     	if	1	;There are 3 active tblptr bytes
  8758  012C48  6AF8               	clrf	tblptru,c
  8759  012C4A  0E00               	movlw	low (__mediumconst shr (0+16))
  8760  012C4C  22F8               	addwfc	tblptru,f,c
  8761  012C4E                     	endif
  8762  012C4E  0009               	tblrd		*+
  8763  012C50  CFF5 F07E          	movff	tablat,___flmul@b
  8764  012C54  0009               	tblrd		*+
  8765  012C56  CFF5 F07F          	movff	tablat,___flmul@b+1
  8766  012C5A  0009               	tblrd		*+
  8767  012C5C  CFF5 F080          	movff	tablat,___flmul@b+2
  8768  012C60  000A               	tblrd		*-
  8769  012C62  CFF5 F081          	movff	tablat,___flmul@b+3
  8770  012C66  ECD9  F09B         	call	___flmul	;wreg free
  8771  012C6A  C07E  F09B         	movff	?___flmul,_scale$4256
  8772  012C6E  C07F  F09C         	movff	?___flmul+1,_scale$4256+1
  8773  012C72  C080  F09D         	movff	?___flmul+2,_scale$4256+2
  8774  012C76  C081  F09E         	movff	?___flmul+3,_scale$4256+3
  8775                           
  8776                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8777  012C7A  C09B  F07E         	movff	_scale$4256,___flmul@b
  8778  012C7E  C09C  F07F         	movff	_scale$4256+1,___flmul@b+1
  8779  012C82  C09D  F080         	movff	_scale$4256+2,___flmul@b+2
  8780  012C86  C09E  F081         	movff	_scale$4256+3,___flmul@b+3
  8781  012C8A  0E00               	movlw	0
  8782  012C8C  0100               	movlb	0	; () banked
  8783  012C8E  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8784  012C90  0E0A               	movlw	10
  8785  012C92  6F72               	movwf	___awmod@divisor& (0+255),b
  8786  012C94  0100               	movlb	0	; () banked
  8787  012C96  519F               	movf	scale@scl& (0+255),w,b
  8788  012C98  0100               	movlb	0	; () banked
  8789  012C9A  6F70               	movwf	___awmod@dividend& (0+255),b
  8790  012C9C  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8791  012C9E  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8792  012CA0  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8793  012CA2  EC0F  F0AE         	call	___awmod	;wreg free
  8794  012CA6  0100               	movlb	0	; () banked
  8795  012CA8  90D8               	bcf	status,0,c
  8796  012CAA  3770               	rlcf	?___awmod& (0+255),f,b
  8797  012CAC  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8798  012CAE  0100               	movlb	0	; () banked
  8799  012CB0  90D8               	bcf	status,0,c
  8800  012CB2  3770               	rlcf	?___awmod& (0+255),f,b
  8801  012CB4  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8802  012CB6  0EFD               	movlw	low __powers_
  8803  012CB8  0100               	movlb	0	; () banked
  8804  012CBA  2570               	addwf	?___awmod& (0+255),w,b
  8805  012CBC  6EF6               	movwf	tblptrl,c
  8806  012CBE  0EFD               	movlw	high __powers_
  8807  012CC0  0100               	movlb	0	; () banked
  8808  012CC2  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  8809  012CC4  6EF7               	movwf	tblptrh,c
  8810  012CC6                     	if	1	;There are 3 active tblptr bytes
  8811  012CC6  6AF8               	clrf	tblptru,c
  8812  012CC8  0E00               	movlw	low (__mediumconst shr (0+16))
  8813  012CCA  22F8               	addwfc	tblptru,f,c
  8814  012CCC                     	endif
  8815  012CCC  0009               	tblrd		*+
  8816  012CCE  CFF5 F082          	movff	tablat,___flmul@a
  8817  012CD2  0009               	tblrd		*+
  8818  012CD4  CFF5 F083          	movff	tablat,___flmul@a+1
  8819  012CD8  0009               	tblrd		*+
  8820  012CDA  CFF5 F084          	movff	tablat,___flmul@a+2
  8821  012CDE  000A               	tblrd		*-
  8822  012CE0  CFF5 F085          	movff	tablat,___flmul@a+3
  8823  012CE4  ECD9  F09B         	call	___flmul	;wreg free
  8824  012CE8  C07E  F097         	movff	?___flmul,?_scale
  8825  012CEC  C07F  F098         	movff	?___flmul+1,?_scale+1
  8826  012CF0  C080  F099         	movff	?___flmul+2,?_scale+2
  8827  012CF4  C081  F09A         	movff	?___flmul+3,?_scale+3
  8828  012CF8  0012               	return	
  8829  012CFA                     l8366:
  8830                           
  8831                           ;doprnt.c: 438: else if(scl > 10)
  8832  012CFA  0100               	movlb	0	; () banked
  8833  012CFC  519F               	movf	scale@scl& (0+255),w,b
  8834  012CFE  0A80               	xorlw	128
  8835  012D00  0F75               	addlw	-139
  8836  012D02  A0D8               	btfss	status,0,c
  8837  012D04  D063               	goto	l8372
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8841  012D06  0E00               	movlw	0
  8842  012D08  0100               	movlb	0	; () banked
  8843  012D0A  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8844  012D0C  0E0A               	movlw	10
  8845  012D0E  6F78               	movwf	___awdiv@divisor& (0+255),b
  8846  012D10  0100               	movlb	0	; () banked
  8847  012D12  519F               	movf	scale@scl& (0+255),w,b
  8848  012D14  0100               	movlb	0	; () banked
  8849  012D16  6F76               	movwf	___awdiv@dividend& (0+255),b
  8850  012D18  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  8851  012D1A  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  8852  012D1C  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8853  012D1E  ECED  F0AB         	call	___awdiv	;wreg free
  8854  012D22  0100               	movlb	0	; () banked
  8855  012D24  90D8               	bcf	status,0,c
  8856  012D26  3776               	rlcf	?___awdiv& (0+255),f,b
  8857  012D28  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8858  012D2A  0100               	movlb	0	; () banked
  8859  012D2C  90D8               	bcf	status,0,c
  8860  012D2E  3776               	rlcf	?___awdiv& (0+255),f,b
  8861  012D30  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8862  012D32  0E24               	movlw	36
  8863  012D34  0100               	movlb	0	; () banked
  8864  012D36  2776               	addwf	?___awdiv& (0+255),f,b
  8865  012D38  0E00               	movlw	0
  8866  012D3A  0100               	movlb	0	; () banked
  8867  012D3C  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8868  012D3E  0EFD               	movlw	low __powers_
  8869  012D40  0100               	movlb	0	; () banked
  8870  012D42  2576               	addwf	?___awdiv& (0+255),w,b
  8871  012D44  6EF6               	movwf	tblptrl,c
  8872  012D46  0EFD               	movlw	high __powers_
  8873  012D48  0100               	movlb	0	; () banked
  8874  012D4A  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8875  012D4C  6EF7               	movwf	tblptrh,c
  8876  012D4E                     	if	1	;There are 3 active tblptr bytes
  8877  012D4E  6AF8               	clrf	tblptru,c
  8878  012D50  0E00               	movlw	low (__mediumconst shr (0+16))
  8879  012D52  22F8               	addwfc	tblptru,f,c
  8880  012D54                     	endif
  8881  012D54  0009               	tblrd		*+
  8882  012D56  CFF5 F07E          	movff	tablat,___flmul@b
  8883  012D5A  0009               	tblrd		*+
  8884  012D5C  CFF5 F07F          	movff	tablat,___flmul@b+1
  8885  012D60  0009               	tblrd		*+
  8886  012D62  CFF5 F080          	movff	tablat,___flmul@b+2
  8887  012D66  000A               	tblrd		*-
  8888  012D68  CFF5 F081          	movff	tablat,___flmul@b+3
  8889  012D6C  0E00               	movlw	0
  8890  012D6E  0100               	movlb	0	; () banked
  8891  012D70  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8892  012D72  0E0A               	movlw	10
  8893  012D74  6F72               	movwf	___awmod@divisor& (0+255),b
  8894  012D76  0100               	movlb	0	; () banked
  8895  012D78  519F               	movf	scale@scl& (0+255),w,b
  8896  012D7A  0100               	movlb	0	; () banked
  8897  012D7C  6F70               	movwf	___awmod@dividend& (0+255),b
  8898  012D7E  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8899  012D80  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8900  012D82  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8901  012D84  EC0F  F0AE         	call	___awmod	;wreg free
  8902  012D88  0100               	movlb	0	; () banked
  8903  012D8A  90D8               	bcf	status,0,c
  8904  012D8C  3770               	rlcf	?___awmod& (0+255),f,b
  8905  012D8E  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8906  012D90  0100               	movlb	0	; () banked
  8907  012D92  90D8               	bcf	status,0,c
  8908  012D94  3770               	rlcf	?___awmod& (0+255),f,b
  8909  012D96  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8910  012D98  0EFD               	movlw	low __powers_
  8911  012D9A  0100               	movlb	0	; () banked
  8912  012D9C  2570               	addwf	?___awmod& (0+255),w,b
  8913  012D9E  6EF6               	movwf	tblptrl,c
  8914  012DA0  0EFD               	movlw	high __powers_
  8915  012DA2  0100               	movlb	0	; () banked
  8916  012DA4  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  8917  012DA6  6EF7               	movwf	tblptrh,c
  8918  012DA8                     	if	1	;There are 3 active tblptr bytes
  8919  012DA8  6AF8               	clrf	tblptru,c
  8920  012DAA  0E00               	movlw	low (__mediumconst shr (0+16))
  8921  012DAC  22F8               	addwfc	tblptru,f,c
  8922  012DAE                     	endif
  8923  012DAE  0009               	tblrd		*+
  8924  012DB0  CFF5 F082          	movff	tablat,___flmul@a
  8925  012DB4  0009               	tblrd		*+
  8926  012DB6  CFF5 F083          	movff	tablat,___flmul@a+1
  8927  012DBA  0009               	tblrd		*+
  8928  012DBC  CFF5 F084          	movff	tablat,___flmul@a+2
  8929  012DC0  000A               	tblrd		*-
  8930  012DC2  CFF5 F085          	movff	tablat,___flmul@a+3
  8931  012DC6  ECD9  F09B         	call	___flmul	;wreg free
  8932  012DCA  D78E               	goto	L9
  8933  012DCC                     l8372:
  8934                           
  8935                           ;doprnt.c: 440: return _powers_[scl];
  8936  012DCC  0100               	movlb	0	; () banked
  8937  012DCE  519F               	movf	scale@scl& (0+255),w,b
  8938  012DD0  0D04               	mullw	4
  8939  012DD2  0EFD               	movlw	low __powers_
  8940  012DD4  24F3               	addwf	prodl,w,c
  8941  012DD6  6EF6               	movwf	tblptrl,c
  8942  012DD8  0EFD               	movlw	high __powers_
  8943  012DDA  20F4               	addwfc	prodh,w,c
  8944  012DDC  6EF7               	movwf	tblptrh,c
  8945  012DDE                     	if	1	;There are 3 active tblptr bytes
  8946  012DDE  6AF8               	clrf	tblptru,c
  8947  012DE0  0E00               	movlw	low (__mediumconst shr (0+16))
  8948  012DE2  22F8               	addwfc	tblptru,f,c
  8949  012DE4                     	endif
  8950  012DE4  0009               	tblrd		*+
  8951  012DE6  CFF5 F097          	movff	tablat,?_scale
  8952  012DEA  0009               	tblrd		*+
  8953  012DEC  CFF5 F098          	movff	tablat,?_scale+1
  8954  012DF0  0009               	tblrd		*+
  8955  012DF2  CFF5 F099          	movff	tablat,?_scale+2
  8956  012DF6  000A               	tblrd		*-
  8957  012DF8  CFF5 F09A          	movff	tablat,?_scale+3
  8958  012DFC  0012               	return	
  8959  012DFE                     __end_of_scale:
  8960                           	opt stack 0
  8961                           tblptru	equ	0xFF8
  8962                           tblptrh	equ	0xFF7
  8963                           tblptrl	equ	0xFF6
  8964                           tablat	equ	0xFF5
  8965                           prodh	equ	0xFF4
  8966                           prodl	equ	0xFF3
  8967                           intcon	equ	0xFF2
  8968                           postinc0	equ	0xFEE
  8969                           wreg	equ	0xFE8
  8970                           indf2	equ	0xFDF
  8971                           postinc2	equ	0xFDE
  8972                           fsr2h	equ	0xFDA
  8973                           fsr2l	equ	0xFD9
  8974                           status	equ	0xFD8
  8975                           
  8976 ;; *************** function _isdigit *****************
  8977 ;; Defined at:
  8978 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;  c               1    wreg     unsigned char 
  8981 ;; Auto vars:     Size  Location     Type
  8982 ;;  c               1   18[BANK0 ] unsigned char 
  8983 ;; Return value:  Size  Location     Type
  8984 ;;		None               void
  8985 ;; Registers used:
  8986 ;;		wreg, status,2, status,0
  8987 ;; Tracked objects:
  8988 ;;		On entry : 0/0
  8989 ;;		On exit  : 0/0
  8990 ;;		Unchanged: 0/0
  8991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8993 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8994 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8995 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8996 ;;Total ram usage:        3 bytes
  8997 ;; Hardware stack levels used:    1
  8998 ;; Hardware stack levels required when called:    3
  8999 ;; This function calls:
  9000 ;;		Nothing
  9001 ;; This function is called by:
  9002 ;;		_sprintf
  9003 ;; This function uses a non-reentrant model
  9004 ;;
  9005                           
  9006                           	psect	text12
  9007  01634A                     __ptext12:
  9008                           	opt stack 0
  9009  01634A                     _isdigit:
  9010                           	opt stack 25
  9011                           
  9012                           ;incstack = 0
  9013                           ;isdigit@c stored from wreg
  9014  01634A  0100               	movlb	0	; () banked
  9015  01634C  6F72               	movwf	isdigit@c& (0+255),b
  9016  01634E  0E00               	movlw	0
  9017  016350  0100               	movlb	0	; () banked
  9018  016352  6F71               	movwf	_isdigit$3840& (0+255),b
  9019                           
  9020                           ; BSR set to: 0
  9021  016354  0E3A               	movlw	58
  9022  016356  0100               	movlb	0	; () banked
  9023  016358  6172               	cpfslt	isdigit@c& (0+255),b
  9024  01635A  D007               	goto	l8384
  9025                           
  9026                           ; BSR set to: 0
  9027  01635C  0E2F               	movlw	47
  9028  01635E  0100               	movlb	0	; () banked
  9029  016360  6572               	cpfsgt	isdigit@c& (0+255),b
  9030  016362  D003               	goto	l8384
  9031                           
  9032                           ; BSR set to: 0
  9033  016364  0E01               	movlw	1
  9034  016366  0100               	movlb	0	; () banked
  9035  016368  6F71               	movwf	_isdigit$3840& (0+255),b
  9036  01636A                     l8384:
  9037                           
  9038                           ; BSR set to: 0
  9039  01636A  C071  F070         	movff	_isdigit$3840,??_isdigit
  9040  01636E  0100               	movlb	0	; () banked
  9041  016370  3170               	rrcf	??_isdigit& (0+255),w,b
  9042  016372  0012               	return	
  9043  016374                     __end_of_isdigit:
  9044                           	opt stack 0
  9045                           tblptru	equ	0xFF8
  9046                           tblptrh	equ	0xFF7
  9047                           tblptrl	equ	0xFF6
  9048                           tablat	equ	0xFF5
  9049                           prodh	equ	0xFF4
  9050                           prodl	equ	0xFF3
  9051                           intcon	equ	0xFF2
  9052                           postinc0	equ	0xFEE
  9053                           wreg	equ	0xFE8
  9054                           indf2	equ	0xFDF
  9055                           postinc2	equ	0xFDE
  9056                           fsr2h	equ	0xFDA
  9057                           fsr2l	equ	0xFD9
  9058                           status	equ	0xFD8
  9059                           
  9060 ;; *************** function _fround *****************
  9061 ;; Defined at:
  9062 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  9063 ;; Parameters:    Size  Location     Type
  9064 ;;  prec            1    wreg     unsigned char 
  9065 ;; Auto vars:     Size  Location     Type
  9066 ;;  prec            1   67[BANK0 ] unsigned char 
  9067 ;; Return value:  Size  Location     Type
  9068 ;;                  4   55[BANK0 ] unsigned char 
  9069 ;; Registers used:
  9070 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9071 ;; Tracked objects:
  9072 ;;		On entry : 0/0
  9073 ;;		On exit  : 0/0
  9074 ;;		Unchanged: 0/0
  9075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9076 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9077 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;Total ram usage:       13 bytes
  9081 ;; Hardware stack levels used:    1
  9082 ;; Hardware stack levels required when called:    4
  9083 ;; This function calls:
  9084 ;;		___awdiv
  9085 ;;		___awmod
  9086 ;;		___flmul
  9087 ;; This function is called by:
  9088 ;;		_sprintf
  9089 ;; This function uses a non-reentrant model
  9090 ;;
  9091                           
  9092                           	psect	text13
  9093  0143B6                     __ptext13:
  9094                           	opt stack 0
  9095  0143B6                     _fround:
  9096                           	opt stack 24
  9097                           
  9098                           ; BSR set to: 0
  9099                           ;incstack = 0
  9100                           ;fround@prec stored from wreg
  9101  0143B6  0100               	movlb	0	; () banked
  9102  0143B8  6FA3               	movwf	fround@prec& (0+255),b
  9103                           
  9104                           ;doprnt.c: 413: if(prec>=110)
  9105  0143BA  0E6D               	movlw	109
  9106  0143BC  0100               	movlb	0	; () banked
  9107  0143BE  65A3               	cpfsgt	fround@prec& (0+255),b
  9108  0143C0  D0CD               	goto	l8326
  9109                           
  9110                           ; BSR set to: 0
  9111                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9112  0143C2  0E00               	movlw	0
  9113  0143C4  0100               	movlb	0	; () banked
  9114  0143C6  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9115  0143C8  0E0A               	movlw	10
  9116  0143CA  6F78               	movwf	___awdiv@divisor& (0+255),b
  9117  0143CC  0E00               	movlw	0
  9118  0143CE  0100               	movlb	0	; () banked
  9119  0143D0  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9120  0143D2  0E64               	movlw	100
  9121  0143D4  6F72               	movwf	___awmod@divisor& (0+255),b
  9122  0143D6  C0A3  F070         	movff	fround@prec,___awmod@dividend
  9123  0143DA  0100               	movlb	0	; () banked
  9124  0143DC  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9125  0143DE  EC0F  F0AE         	call	___awmod	;wreg free
  9126  0143E2  C070  F076         	movff	?___awmod,___awdiv@dividend
  9127  0143E6  C071  F077         	movff	?___awmod+1,___awdiv@dividend+1
  9128  0143EA  ECED  F0AB         	call	___awdiv	;wreg free
  9129  0143EE  0100               	movlb	0	; () banked
  9130  0143F0  90D8               	bcf	status,0,c
  9131  0143F2  3776               	rlcf	?___awdiv& (0+255),f,b
  9132  0143F4  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9133  0143F6  0100               	movlb	0	; () banked
  9134  0143F8  90D8               	bcf	status,0,c
  9135  0143FA  3776               	rlcf	?___awdiv& (0+255),f,b
  9136  0143FC  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9137  0143FE  0E24               	movlw	36
  9138  014400  0100               	movlb	0	; () banked
  9139  014402  2776               	addwf	?___awdiv& (0+255),f,b
  9140  014404  0E00               	movlw	0
  9141  014406  0100               	movlb	0	; () banked
  9142  014408  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9143  01440A  0EC9               	movlw	low __npowers_
  9144  01440C  0100               	movlb	0	; () banked
  9145  01440E  2576               	addwf	?___awdiv& (0+255),w,b
  9146  014410  6EF6               	movwf	tblptrl,c
  9147  014412  0EFD               	movlw	high __npowers_
  9148  014414  0100               	movlb	0	; () banked
  9149  014416  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9150  014418  6EF7               	movwf	tblptrh,c
  9151  01441A                     	if	1	;There are 3 active tblptr bytes
  9152  01441A  6AF8               	clrf	tblptru,c
  9153  01441C  0E00               	movlw	low (__mediumconst shr (0+16))
  9154  01441E  22F8               	addwfc	tblptru,f,c
  9155  014420                     	endif
  9156  014420  0009               	tblrd		*+
  9157  014422  CFF5 F082          	movff	tablat,___flmul@a
  9158  014426  0009               	tblrd		*+
  9159  014428  CFF5 F083          	movff	tablat,___flmul@a+1
  9160  01442C  0009               	tblrd		*+
  9161  01442E  CFF5 F084          	movff	tablat,___flmul@a+2
  9162  014432  000A               	tblrd		*-
  9163  014434  CFF5 F085          	movff	tablat,___flmul@a+3
  9164  014438  0E00               	movlw	0
  9165  01443A  0100               	movlb	0	; () banked
  9166  01443C  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9167  01443E  0E64               	movlw	100
  9168  014440  6F78               	movwf	___awdiv@divisor& (0+255),b
  9169  014442  C0A3  F076         	movff	fround@prec,___awdiv@dividend
  9170  014446  0100               	movlb	0	; () banked
  9171  014448  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  9172  01444A  ECED  F0AB         	call	___awdiv	;wreg free
  9173  01444E  0100               	movlb	0	; () banked
  9174  014450  90D8               	bcf	status,0,c
  9175  014452  3776               	rlcf	?___awdiv& (0+255),f,b
  9176  014454  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9177  014456  0100               	movlb	0	; () banked
  9178  014458  90D8               	bcf	status,0,c
  9179  01445A  3776               	rlcf	?___awdiv& (0+255),f,b
  9180  01445C  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9181  01445E  0E48               	movlw	72
  9182  014460  0100               	movlb	0	; () banked
  9183  014462  2776               	addwf	?___awdiv& (0+255),f,b
  9184  014464  0E00               	movlw	0
  9185  014466  0100               	movlb	0	; () banked
  9186  014468  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9187  01446A  0EC9               	movlw	low __npowers_
  9188  01446C  0100               	movlb	0	; () banked
  9189  01446E  2576               	addwf	?___awdiv& (0+255),w,b
  9190  014470  6EF6               	movwf	tblptrl,c
  9191  014472  0EFD               	movlw	high __npowers_
  9192  014474  0100               	movlb	0	; () banked
  9193  014476  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9194  014478  6EF7               	movwf	tblptrh,c
  9195  01447A                     	if	1	;There are 3 active tblptr bytes
  9196  01447A  6AF8               	clrf	tblptru,c
  9197  01447C  0E00               	movlw	low (__mediumconst shr (0+16))
  9198  01447E  22F8               	addwfc	tblptru,f,c
  9199  014480                     	endif
  9200  014480  0009               	tblrd		*+
  9201  014482  CFF5 F07E          	movff	tablat,___flmul@b
  9202  014486  0009               	tblrd		*+
  9203  014488  CFF5 F07F          	movff	tablat,___flmul@b+1
  9204  01448C  0009               	tblrd		*+
  9205  01448E  CFF5 F080          	movff	tablat,___flmul@b+2
  9206  014492  000A               	tblrd		*-
  9207  014494  CFF5 F081          	movff	tablat,___flmul@b+3
  9208  014498  ECD9  F09B         	call	___flmul	;wreg free
  9209  01449C  C07E  F09F         	movff	?___flmul,_fround$4254
  9210  0144A0  C07F  F0A0         	movff	?___flmul+1,_fround$4254+1
  9211  0144A4  C080  F0A1         	movff	?___flmul+2,_fround$4254+2
  9212  0144A8  C081  F0A2         	movff	?___flmul+3,_fround$4254+3
  9213                           
  9214                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9215  0144AC  0E00               	movlw	0
  9216  0144AE  0100               	movlb	0	; () banked
  9217  0144B0  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9218  0144B2  0E0A               	movlw	10
  9219  0144B4  6F72               	movwf	___awmod@divisor& (0+255),b
  9220  0144B6  C0A3  F070         	movff	fround@prec,___awmod@dividend
  9221  0144BA  0100               	movlb	0	; () banked
  9222  0144BC  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9223  0144BE  EC0F  F0AE         	call	___awmod	;wreg free
  9224  0144C2  0100               	movlb	0	; () banked
  9225  0144C4  90D8               	bcf	status,0,c
  9226  0144C6  3770               	rlcf	?___awmod& (0+255),f,b
  9227  0144C8  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9228  0144CA  0100               	movlb	0	; () banked
  9229  0144CC  90D8               	bcf	status,0,c
  9230  0144CE  3770               	rlcf	?___awmod& (0+255),f,b
  9231  0144D0  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9232  0144D2  0EC9               	movlw	low __npowers_
  9233  0144D4  0100               	movlb	0	; () banked
  9234  0144D6  2570               	addwf	?___awmod& (0+255),w,b
  9235  0144D8  6EF6               	movwf	tblptrl,c
  9236  0144DA  0EFD               	movlw	high __npowers_
  9237  0144DC  0100               	movlb	0	; () banked
  9238  0144DE  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  9239  0144E0  6EF7               	movwf	tblptrh,c
  9240  0144E2                     	if	1	;There are 3 active tblptr bytes
  9241  0144E2  6AF8               	clrf	tblptru,c
  9242  0144E4  0E00               	movlw	low (__mediumconst shr (0+16))
  9243  0144E6  22F8               	addwfc	tblptru,f,c
  9244  0144E8                     	endif
  9245  0144E8  0009               	tblrd		*+
  9246  0144EA  CFF5 F082          	movff	tablat,___flmul@a
  9247  0144EE  0009               	tblrd		*+
  9248  0144F0  CFF5 F083          	movff	tablat,___flmul@a+1
  9249  0144F4  0009               	tblrd		*+
  9250  0144F6  CFF5 F084          	movff	tablat,___flmul@a+2
  9251  0144FA  000A               	tblrd		*-
  9252  0144FC  CFF5 F085          	movff	tablat,___flmul@a+3
  9253  014500  C09F  F07E         	movff	_fround$4254,___flmul@b
  9254  014504  C0A0  F07F         	movff	_fround$4254+1,___flmul@b+1
  9255  014508  C0A1  F080         	movff	_fround$4254+2,___flmul@b+2
  9256  01450C  C0A2  F081         	movff	_fround$4254+3,___flmul@b+3
  9257  014510  ECD9  F09B         	call	___flmul	;wreg free
  9258  014514  C07E  F09B         	movff	?___flmul,_fround$4255
  9259  014518  C07F  F09C         	movff	?___flmul+1,_fround$4255+1
  9260  01451C  C080  F09D         	movff	?___flmul+2,_fround$4255+2
  9261  014520  C081  F09E         	movff	?___flmul+3,_fround$4255+3
  9262                           
  9263                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9264  014524  C09B  F07E         	movff	_fround$4255,___flmul@b
  9265  014528  C09C  F07F         	movff	_fround$4255+1,___flmul@b+1
  9266  01452C  C09D  F080         	movff	_fround$4255+2,___flmul@b+2
  9267  014530  C09E  F081         	movff	_fround$4255+3,___flmul@b+3
  9268  014534  0E00               	movlw	0
  9269  014536  0100               	movlb	0	; () banked
  9270  014538  6F82               	movwf	___flmul@a& (0+255),b
  9271  01453A  0E00               	movlw	0
  9272  01453C  6F83               	movwf	(___flmul@a+1)& (0+255),b
  9273  01453E  0E00               	movlw	0
  9274  014540  6F84               	movwf	(___flmul@a+2)& (0+255),b
  9275  014542  0E3F               	movlw	63
  9276  014544  6F85               	movwf	(___flmul@a+3)& (0+255),b
  9277  014546  ECD9  F09B         	call	___flmul	;wreg free
  9278  01454A  C07E  F097         	movff	?___flmul,?_fround
  9279  01454E  C07F  F098         	movff	?___flmul+1,?_fround+1
  9280  014552  C080  F099         	movff	?___flmul+2,?_fround+2
  9281  014556  C081  F09A         	movff	?___flmul+3,?_fround+3
  9282  01455A  0012               	return	
  9283  01455C                     l8326:
  9284                           
  9285                           ;doprnt.c: 415: else if(prec > 10)
  9286  01455C  0E0A               	movlw	10
  9287  01455E  0100               	movlb	0	; () banked
  9288  014560  65A3               	cpfsgt	fround@prec& (0+255),b
  9289  014562  D078               	goto	l8334
  9290                           
  9291                           ; BSR set to: 0
  9292                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9293  014564  0E00               	movlw	0
  9294  014566  0100               	movlb	0	; () banked
  9295  014568  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9296  01456A  0E0A               	movlw	10
  9297  01456C  6F72               	movwf	___awmod@divisor& (0+255),b
  9298  01456E  C0A3  F070         	movff	fround@prec,___awmod@dividend
  9299  014572  0100               	movlb	0	; () banked
  9300  014574  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9301  014576  EC0F  F0AE         	call	___awmod	;wreg free
  9302  01457A  0100               	movlb	0	; () banked
  9303  01457C  90D8               	bcf	status,0,c
  9304  01457E  3770               	rlcf	?___awmod& (0+255),f,b
  9305  014580  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9306  014582  0100               	movlb	0	; () banked
  9307  014584  90D8               	bcf	status,0,c
  9308  014586  3770               	rlcf	?___awmod& (0+255),f,b
  9309  014588  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9310  01458A  0EC9               	movlw	low __npowers_
  9311  01458C  0100               	movlb	0	; () banked
  9312  01458E  2570               	addwf	?___awmod& (0+255),w,b
  9313  014590  6EF6               	movwf	tblptrl,c
  9314  014592  0EFD               	movlw	high __npowers_
  9315  014594  0100               	movlb	0	; () banked
  9316  014596  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  9317  014598  6EF7               	movwf	tblptrh,c
  9318  01459A                     	if	1	;There are 3 active tblptr bytes
  9319  01459A  6AF8               	clrf	tblptru,c
  9320  01459C  0E00               	movlw	low (__mediumconst shr (0+16))
  9321  01459E  22F8               	addwfc	tblptru,f,c
  9322  0145A0                     	endif
  9323  0145A0  0009               	tblrd		*+
  9324  0145A2  CFF5 F082          	movff	tablat,___flmul@a
  9325  0145A6  0009               	tblrd		*+
  9326  0145A8  CFF5 F083          	movff	tablat,___flmul@a+1
  9327  0145AC  0009               	tblrd		*+
  9328  0145AE  CFF5 F084          	movff	tablat,___flmul@a+2
  9329  0145B2  000A               	tblrd		*-
  9330  0145B4  CFF5 F085          	movff	tablat,___flmul@a+3
  9331  0145B8  0E00               	movlw	0
  9332  0145BA  0100               	movlb	0	; () banked
  9333  0145BC  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9334  0145BE  0E0A               	movlw	10
  9335  0145C0  6F78               	movwf	___awdiv@divisor& (0+255),b
  9336  0145C2  C0A3  F076         	movff	fround@prec,___awdiv@dividend
  9337  0145C6  0100               	movlb	0	; () banked
  9338  0145C8  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  9339  0145CA  ECED  F0AB         	call	___awdiv	;wreg free
  9340  0145CE  0100               	movlb	0	; () banked
  9341  0145D0  90D8               	bcf	status,0,c
  9342  0145D2  3776               	rlcf	?___awdiv& (0+255),f,b
  9343  0145D4  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9344  0145D6  0100               	movlb	0	; () banked
  9345  0145D8  90D8               	bcf	status,0,c
  9346  0145DA  3776               	rlcf	?___awdiv& (0+255),f,b
  9347  0145DC  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9348  0145DE  0E24               	movlw	36
  9349  0145E0  0100               	movlb	0	; () banked
  9350  0145E2  2776               	addwf	?___awdiv& (0+255),f,b
  9351  0145E4  0E00               	movlw	0
  9352  0145E6  0100               	movlb	0	; () banked
  9353  0145E8  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9354  0145EA  0EC9               	movlw	low __npowers_
  9355  0145EC  0100               	movlb	0	; () banked
  9356  0145EE  2576               	addwf	?___awdiv& (0+255),w,b
  9357  0145F0  6EF6               	movwf	tblptrl,c
  9358  0145F2  0EFD               	movlw	high __npowers_
  9359  0145F4  0100               	movlb	0	; () banked
  9360  0145F6  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9361  0145F8  6EF7               	movwf	tblptrh,c
  9362  0145FA                     	if	1	;There are 3 active tblptr bytes
  9363  0145FA  6AF8               	clrf	tblptru,c
  9364  0145FC  0E00               	movlw	low (__mediumconst shr (0+16))
  9365  0145FE  22F8               	addwfc	tblptru,f,c
  9366  014600                     	endif
  9367  014600  0009               	tblrd		*+
  9368  014602  CFF5 F07E          	movff	tablat,___flmul@b
  9369  014606  0009               	tblrd		*+
  9370  014608  CFF5 F07F          	movff	tablat,___flmul@b+1
  9371  01460C  0009               	tblrd		*+
  9372  01460E  CFF5 F080          	movff	tablat,___flmul@b+2
  9373  014612  000A               	tblrd		*-
  9374  014614  CFF5 F081          	movff	tablat,___flmul@b+3
  9375  014618  ECD9  F09B         	call	___flmul	;wreg free
  9376  01461C  C07E  F09F         	movff	?___flmul,_fround$4254
  9377  014620  C07F  F0A0         	movff	?___flmul+1,_fround$4254+1
  9378  014624  C080  F0A1         	movff	?___flmul+2,_fround$4254+2
  9379  014628  C081  F0A2         	movff	?___flmul+3,_fround$4254+3
  9380                           
  9381                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9382  01462C  C09F  F07E         	movff	_fround$4254,___flmul@b
  9383  014630  C0A0  F07F         	movff	_fround$4254+1,___flmul@b+1
  9384  014634  C0A1  F080         	movff	_fround$4254+2,___flmul@b+2
  9385  014638  C0A2  F081         	movff	_fround$4254+3,___flmul@b+3
  9386  01463C  0E00               	movlw	0
  9387  01463E  0100               	movlb	0	; () banked
  9388  014640  6F82               	movwf	___flmul@a& (0+255),b
  9389  014642  0E00               	movlw	0
  9390  014644  6F83               	movwf	(___flmul@a+1)& (0+255),b
  9391  014646  0E00               	movlw	0
  9392  014648  6F84               	movwf	(___flmul@a+2)& (0+255),b
  9393  01464A  0E3F               	movlw	63
  9394  01464C  6F85               	movwf	(___flmul@a+3)& (0+255),b
  9395  01464E  ECD9  F09B         	call	___flmul	;wreg free
  9396  014652  D77B               	goto	L10
  9397  014654                     l8334:
  9398                           
  9399                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9400  014654  0100               	movlb	0	; () banked
  9401  014656  51A3               	movf	fround@prec& (0+255),w,b
  9402  014658  0D04               	mullw	4
  9403  01465A  0EC9               	movlw	low __npowers_
  9404  01465C  24F3               	addwf	prodl,w,c
  9405  01465E  6EF6               	movwf	tblptrl,c
  9406  014660  0EFD               	movlw	high __npowers_
  9407  014662  20F4               	addwfc	prodh,w,c
  9408  014664  6EF7               	movwf	tblptrh,c
  9409  014666                     	if	1	;There are 3 active tblptr bytes
  9410  014666  6AF8               	clrf	tblptru,c
  9411  014668  0E00               	movlw	low (__mediumconst shr (0+16))
  9412  01466A  22F8               	addwfc	tblptru,f,c
  9413  01466C                     	endif
  9414  01466C  0009               	tblrd		*+
  9415  01466E  CFF5 F07E          	movff	tablat,___flmul@b
  9416  014672  0009               	tblrd		*+
  9417  014674  CFF5 F07F          	movff	tablat,___flmul@b+1
  9418  014678  0009               	tblrd		*+
  9419  01467A  CFF5 F080          	movff	tablat,___flmul@b+2
  9420  01467E  000A               	tblrd		*-
  9421  014680  CFF5 F081          	movff	tablat,___flmul@b+3
  9422  014684  0E00               	movlw	0
  9423  014686  0100               	movlb	0	; () banked
  9424  014688  6F82               	movwf	___flmul@a& (0+255),b
  9425  01468A  0E00               	movlw	0
  9426  01468C  6F83               	movwf	(___flmul@a+1)& (0+255),b
  9427  01468E  0E00               	movlw	0
  9428  014690  6F84               	movwf	(___flmul@a+2)& (0+255),b
  9429  014692  0E3F               	movlw	63
  9430  014694  6F85               	movwf	(___flmul@a+3)& (0+255),b
  9431  014696  ECD9  F09B         	call	___flmul	;wreg free
  9432  01469A  C07E  F097         	movff	?___flmul,?_fround
  9433  01469E  C07F  F098         	movff	?___flmul+1,?_fround+1
  9434  0146A2  C080  F099         	movff	?___flmul+2,?_fround+2
  9435  0146A6  C081  F09A         	movff	?___flmul+3,?_fround+3
  9436  0146AA  0012               	return	
  9437  0146AC                     __end_of_fround:
  9438                           	opt stack 0
  9439                           tblptru	equ	0xFF8
  9440                           tblptrh	equ	0xFF7
  9441                           tblptrl	equ	0xFF6
  9442                           tablat	equ	0xFF5
  9443                           prodh	equ	0xFF4
  9444                           prodl	equ	0xFF3
  9445                           intcon	equ	0xFF2
  9446                           postinc0	equ	0xFEE
  9447                           wreg	equ	0xFE8
  9448                           indf2	equ	0xFDF
  9449                           postinc2	equ	0xFDE
  9450                           fsr2h	equ	0xFDA
  9451                           fsr2l	equ	0xFD9
  9452                           status	equ	0xFD8
  9453                           
  9454 ;; *************** function ___flmul *****************
  9455 ;; Defined at:
  9456 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  9457 ;; Parameters:    Size  Location     Type
  9458 ;;  b               4   30[BANK0 ] unsigned char 
  9459 ;;  a               4   34[BANK0 ] unsigned char 
  9460 ;; Auto vars:     Size  Location     Type
  9461 ;;  prod            4   49[BANK0 ] struct .
  9462 ;;  grs             4   44[BANK0 ] unsigned long 
  9463 ;;  temp            2   53[BANK0 ] struct .
  9464 ;;  bexp            1   48[BANK0 ] unsigned char 
  9465 ;;  aexp            1   43[BANK0 ] unsigned char 
  9466 ;;  sign            1   42[BANK0 ] unsigned char 
  9467 ;; Return value:  Size  Location     Type
  9468 ;;                  4   30[BANK0 ] unsigned char 
  9469 ;; Registers used:
  9470 ;;		wreg, status,2, status,0, prodl, prodh
  9471 ;; Tracked objects:
  9472 ;;		On entry : 0/0
  9473 ;;		On exit  : 0/0
  9474 ;;		Unchanged: 0/0
  9475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9476 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9477 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9478 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9479 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9480 ;;Total ram usage:       25 bytes
  9481 ;; Hardware stack levels used:    1
  9482 ;; Hardware stack levels required when called:    3
  9483 ;; This function calls:
  9484 ;;		Nothing
  9485 ;; This function is called by:
  9486 ;;		_main
  9487 ;;		_fround
  9488 ;;		_scale
  9489 ;;		_sprintf
  9490 ;; This function uses a non-reentrant model
  9491 ;;
  9492                           
  9493                           	psect	text14
  9494  0137B2                     __ptext14:
  9495                           	opt stack 0
  9496  0137B2                     ___flmul:
  9497                           	opt stack 27
  9498                           
  9499                           ;incstack = 0
  9500  0137B2  0100               	movlb	0	; () banked
  9501  0137B4  5181               	movf	(___flmul@b+3)& (0+255),w,b
  9502  0137B6  0B80               	andlw	128
  9503  0137B8  0100               	movlb	0	; () banked
  9504  0137BA  6F8A               	movwf	___flmul@sign& (0+255),b
  9505  0137BC  0100               	movlb	0	; () banked
  9506  0137BE  5181               	movf	(___flmul@b+3)& (0+255),w,b
  9507  0137C0  2581               	addwf	(___flmul@b+3)& (0+255),w,b
  9508  0137C2  0100               	movlb	0	; () banked
  9509  0137C4  6F90               	movwf	___flmul@bexp& (0+255),b
  9510                           
  9511                           ; BSR set to: 0
  9512  0137C6  0100               	movlb	0	; () banked
  9513  0137C8  AF80               	btfss	(___flmul@b+2)& (0+255),7,b
  9514  0137CA  D002               	goto	l8080
  9515                           
  9516                           ; BSR set to: 0
  9517  0137CC  0100               	movlb	0	; () banked
  9518  0137CE  8190               	bsf	___flmul@bexp& (0+255),0,b
  9519  0137D0                     l8080:
  9520                           
  9521                           ; BSR set to: 0
  9522  0137D0  0100               	movlb	0	; () banked
  9523  0137D2  5190               	movf	___flmul@bexp& (0+255),w,b
  9524  0137D4  0100               	movlb	0	; () banked
  9525  0137D6  B4D8               	btfsc	status,2,c
  9526  0137D8  D010               	goto	l8088
  9527                           
  9528                           ; BSR set to: 0
  9529  0137DA  0100               	movlb	0	; () banked
  9530  0137DC  2990               	incf	___flmul@bexp& (0+255),w,b
  9531  0137DE  A4D8               	btfss	status,2,c
  9532  0137E0  D009               	goto	l8086
  9533                           
  9534                           ; BSR set to: 0
  9535  0137E2  0E00               	movlw	0
  9536  0137E4  0100               	movlb	0	; () banked
  9537  0137E6  6F7E               	movwf	___flmul@b& (0+255),b
  9538  0137E8  0E00               	movlw	0
  9539  0137EA  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  9540  0137EC  0E00               	movlw	0
  9541  0137EE  6F80               	movwf	(___flmul@b+2)& (0+255),b
  9542  0137F0  0E00               	movlw	0
  9543  0137F2  6F81               	movwf	(___flmul@b+3)& (0+255),b
  9544  0137F4                     l8086:
  9545                           
  9546                           ; BSR set to: 0
  9547  0137F4  0100               	movlb	0	; () banked
  9548  0137F6  8F80               	bsf	(___flmul@b+2)& (0+255),7,b
  9549  0137F8  D009               	goto	l8090
  9550  0137FA                     l8088:
  9551                           
  9552                           ; BSR set to: 0
  9553  0137FA  0E00               	movlw	0
  9554  0137FC  0100               	movlb	0	; () banked
  9555  0137FE  6F7E               	movwf	___flmul@b& (0+255),b
  9556  013800  0E00               	movlw	0
  9557  013802  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  9558  013804  0E00               	movlw	0
  9559  013806  6F80               	movwf	(___flmul@b+2)& (0+255),b
  9560  013808  0E00               	movlw	0
  9561  01380A  6F81               	movwf	(___flmul@b+3)& (0+255),b
  9562  01380C                     l8090:
  9563                           
  9564                           ; BSR set to: 0
  9565  01380C  0100               	movlb	0	; () banked
  9566  01380E  5185               	movf	(___flmul@a+3)& (0+255),w,b
  9567  013810  0B80               	andlw	128
  9568  013812  0100               	movlb	0	; () banked
  9569  013814  1B8A               	xorwf	___flmul@sign& (0+255),f,b
  9570                           
  9571                           ; BSR set to: 0
  9572  013816  0100               	movlb	0	; () banked
  9573  013818  5185               	movf	(___flmul@a+3)& (0+255),w,b
  9574  01381A  2585               	addwf	(___flmul@a+3)& (0+255),w,b
  9575  01381C  0100               	movlb	0	; () banked
  9576  01381E  6F8B               	movwf	___flmul@aexp& (0+255),b
  9577                           
  9578                           ; BSR set to: 0
  9579  013820  0100               	movlb	0	; () banked
  9580  013822  AF84               	btfss	(___flmul@a+2)& (0+255),7,b
  9581  013824  D002               	goto	l8098
  9582                           
  9583                           ; BSR set to: 0
  9584  013826  0100               	movlb	0	; () banked
  9585  013828  818B               	bsf	___flmul@aexp& (0+255),0,b
  9586  01382A                     l8098:
  9587                           
  9588                           ; BSR set to: 0
  9589  01382A  0100               	movlb	0	; () banked
  9590  01382C  518B               	movf	___flmul@aexp& (0+255),w,b
  9591  01382E  0100               	movlb	0	; () banked
  9592  013830  B4D8               	btfsc	status,2,c
  9593  013832  D010               	goto	l8106
  9594                           
  9595                           ; BSR set to: 0
  9596  013834  0100               	movlb	0	; () banked
  9597  013836  298B               	incf	___flmul@aexp& (0+255),w,b
  9598  013838  A4D8               	btfss	status,2,c
  9599  01383A  D009               	goto	l8104
  9600                           
  9601                           ; BSR set to: 0
  9602  01383C  0E00               	movlw	0
  9603  01383E  0100               	movlb	0	; () banked
  9604  013840  6F82               	movwf	___flmul@a& (0+255),b
  9605  013842  0E00               	movlw	0
  9606  013844  6F83               	movwf	(___flmul@a+1)& (0+255),b
  9607  013846  0E00               	movlw	0
  9608  013848  6F84               	movwf	(___flmul@a+2)& (0+255),b
  9609  01384A  0E00               	movlw	0
  9610  01384C  6F85               	movwf	(___flmul@a+3)& (0+255),b
  9611  01384E                     l8104:
  9612                           
  9613                           ; BSR set to: 0
  9614  01384E  0100               	movlb	0	; () banked
  9615  013850  8F84               	bsf	(___flmul@a+2)& (0+255),7,b
  9616  013852  D009               	goto	l1626
  9617  013854                     l8106:
  9618                           
  9619                           ; BSR set to: 0
  9620  013854  0E00               	movlw	0
  9621  013856  0100               	movlb	0	; () banked
  9622  013858  6F82               	movwf	___flmul@a& (0+255),b
  9623  01385A  0E00               	movlw	0
  9624  01385C  6F83               	movwf	(___flmul@a+1)& (0+255),b
  9625  01385E  0E00               	movlw	0
  9626  013860  6F84               	movwf	(___flmul@a+2)& (0+255),b
  9627  013862  0E00               	movlw	0
  9628  013864  6F85               	movwf	(___flmul@a+3)& (0+255),b
  9629  013866                     l1626:
  9630                           
  9631                           ; BSR set to: 0
  9632  013866  0100               	movlb	0	; () banked
  9633  013868  518B               	movf	___flmul@aexp& (0+255),w,b
  9634  01386A  0100               	movlb	0	; () banked
  9635  01386C  B4D8               	btfsc	status,2,c
  9636  01386E  D005               	goto	l8110
  9637                           
  9638                           ; BSR set to: 0
  9639  013870  0100               	movlb	0	; () banked
  9640  013872  5190               	movf	___flmul@bexp& (0+255),w,b
  9641  013874  0100               	movlb	0	; () banked
  9642  013876  A4D8               	btfss	status,2,c
  9643  013878  D00A               	goto	l8114
  9644  01387A                     l8110:
  9645                           
  9646                           ; BSR set to: 0
  9647  01387A  0E00               	movlw	0
  9648  01387C  0100               	movlb	0	; () banked
  9649  01387E  6F7E               	movwf	?___flmul& (0+255),b
  9650  013880  0E00               	movlw	0
  9651  013882  6F7F               	movwf	(?___flmul+1)& (0+255),b
  9652  013884  0E00               	movlw	0
  9653  013886  6F80               	movwf	(?___flmul+2)& (0+255),b
  9654  013888  0E00               	movlw	0
  9655  01388A  6F81               	movwf	(?___flmul+3)& (0+255),b
  9656                           
  9657                           ; BSR set to: 0
  9658  01388C  0012               	return	
  9659  01388E                     l8114:
  9660                           
  9661                           ; BSR set to: 0
  9662  01388E  0100               	movlb	0	; () banked
  9663  013890  5184               	movf	(___flmul@a+2)& (0+255),w,b
  9664  013892  0100               	movlb	0	; () banked
  9665  013894  037E               	mulwf	___flmul@b& (0+255),b
  9666  013896  CFF3 F095          	movff	prodl,___flmul@temp
  9667  01389A  CFF4 F096          	movff	prodh,___flmul@temp+1
  9668                           
  9669                           ; BSR set to: 0
  9670  01389E  0100               	movlb	0	; () banked
  9671  0138A0  5195               	movf	___flmul@temp& (0+255),w,b
  9672  0138A2  0100               	movlb	0	; () banked
  9673  0138A4  6F8C               	movwf	___flmul@grs& (0+255),b
  9674  0138A6  6B8D               	clrf	(___flmul@grs+1)& (0+255),b
  9675  0138A8  6B8E               	clrf	(___flmul@grs+2)& (0+255),b
  9676  0138AA  6B8F               	clrf	(___flmul@grs+3)& (0+255),b
  9677                           
  9678                           ; BSR set to: 0
  9679  0138AC  0100               	movlb	0	; () banked
  9680  0138AE  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9681  0138B0  0100               	movlb	0	; () banked
  9682  0138B2  6F91               	movwf	___flmul@prod& (0+255),b
  9683  0138B4  6B92               	clrf	(___flmul@prod+1)& (0+255),b
  9684  0138B6  6B93               	clrf	(___flmul@prod+2)& (0+255),b
  9685  0138B8  6B94               	clrf	(___flmul@prod+3)& (0+255),b
  9686  0138BA  0100               	movlb	0	; () banked
  9687  0138BC  5183               	movf	(___flmul@a+1)& (0+255),w,b
  9688  0138BE  0100               	movlb	0	; () banked
  9689  0138C0  037F               	mulwf	(___flmul@b+1)& (0+255),b
  9690  0138C2  CFF3 F095          	movff	prodl,___flmul@temp
  9691  0138C6  CFF4 F096          	movff	prodh,___flmul@temp+1
  9692                           
  9693                           ; BSR set to: 0
  9694  0138CA  0100               	movlb	0	; () banked
  9695  0138CC  5195               	movf	___flmul@temp& (0+255),w,b
  9696  0138CE  0100               	movlb	0	; () banked
  9697  0138D0  278C               	addwf	___flmul@grs& (0+255),f,b
  9698  0138D2  0E00               	movlw	0
  9699  0138D4  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9700  0138D6  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9701  0138D8  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9702                           
  9703                           ; BSR set to: 0
  9704  0138DA  0100               	movlb	0	; () banked
  9705  0138DC  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9706  0138DE  0100               	movlb	0	; () banked
  9707  0138E0  2791               	addwf	___flmul@prod& (0+255),f,b
  9708  0138E2  0E00               	movlw	0
  9709  0138E4  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9710  0138E6  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9711  0138E8  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9712  0138EA  0100               	movlb	0	; () banked
  9713  0138EC  5182               	movf	___flmul@a& (0+255),w,b
  9714  0138EE  0100               	movlb	0	; () banked
  9715  0138F0  0380               	mulwf	(___flmul@b+2)& (0+255),b
  9716  0138F2  CFF3 F095          	movff	prodl,___flmul@temp
  9717  0138F6  CFF4 F096          	movff	prodh,___flmul@temp+1
  9718                           
  9719                           ; BSR set to: 0
  9720  0138FA  0100               	movlb	0	; () banked
  9721  0138FC  5195               	movf	___flmul@temp& (0+255),w,b
  9722  0138FE  0100               	movlb	0	; () banked
  9723  013900  278C               	addwf	___flmul@grs& (0+255),f,b
  9724  013902  0E00               	movlw	0
  9725  013904  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9726  013906  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9727  013908  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9728                           
  9729                           ; BSR set to: 0
  9730  01390A  0100               	movlb	0	; () banked
  9731  01390C  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9732  01390E  0100               	movlb	0	; () banked
  9733  013910  2791               	addwf	___flmul@prod& (0+255),f,b
  9734  013912  0E00               	movlw	0
  9735  013914  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9736  013916  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9737  013918  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9738                           
  9739                           ; BSR set to: 0
  9740  01391A  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  9741  01391E  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  9742  013922  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  9743  013926  0100               	movlb	0	; () banked
  9744  013928  6B8C               	clrf	___flmul@grs& (0+255),b
  9745                           
  9746                           ; BSR set to: 0
  9747  01392A  0100               	movlb	0	; () banked
  9748  01392C  5182               	movf	___flmul@a& (0+255),w,b
  9749  01392E  0100               	movlb	0	; () banked
  9750  013930  037F               	mulwf	(___flmul@b+1)& (0+255),b
  9751  013932  CFF3 F095          	movff	prodl,___flmul@temp
  9752  013936  CFF4 F096          	movff	prodh,___flmul@temp+1
  9753                           
  9754                           ; BSR set to: 0
  9755  01393A  0100               	movlb	0	; () banked
  9756  01393C  5195               	movf	___flmul@temp& (0+255),w,b
  9757  01393E  0100               	movlb	0	; () banked
  9758  013940  278C               	addwf	___flmul@grs& (0+255),f,b
  9759  013942  0100               	movlb	0	; () banked
  9760  013944  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9761  013946  0100               	movlb	0	; () banked
  9762  013948  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9763  01394A  0E00               	movlw	0
  9764  01394C  0100               	movlb	0	; () banked
  9765  01394E  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9766  013950  0E00               	movlw	0
  9767  013952  0100               	movlb	0	; () banked
  9768  013954  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9769                           
  9770                           ; BSR set to: 0
  9771  013956  0100               	movlb	0	; () banked
  9772  013958  5183               	movf	(___flmul@a+1)& (0+255),w,b
  9773  01395A  0100               	movlb	0	; () banked
  9774  01395C  037E               	mulwf	___flmul@b& (0+255),b
  9775  01395E  CFF3 F095          	movff	prodl,___flmul@temp
  9776  013962  CFF4 F096          	movff	prodh,___flmul@temp+1
  9777                           
  9778                           ; BSR set to: 0
  9779  013966  0100               	movlb	0	; () banked
  9780  013968  5195               	movf	___flmul@temp& (0+255),w,b
  9781  01396A  0100               	movlb	0	; () banked
  9782  01396C  278C               	addwf	___flmul@grs& (0+255),f,b
  9783  01396E  0100               	movlb	0	; () banked
  9784  013970  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9785  013972  0100               	movlb	0	; () banked
  9786  013974  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9787  013976  0E00               	movlw	0
  9788  013978  0100               	movlb	0	; () banked
  9789  01397A  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9790  01397C  0E00               	movlw	0
  9791  01397E  0100               	movlb	0	; () banked
  9792  013980  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9793                           
  9794                           ; BSR set to: 0
  9795  013982  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  9796  013986  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  9797  01398A  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  9798  01398E  0100               	movlb	0	; () banked
  9799  013990  6B8C               	clrf	___flmul@grs& (0+255),b
  9800  013992  0100               	movlb	0	; () banked
  9801  013994  5182               	movf	___flmul@a& (0+255),w,b
  9802  013996  0100               	movlb	0	; () banked
  9803  013998  037E               	mulwf	___flmul@b& (0+255),b
  9804  01399A  CFF3 F095          	movff	prodl,___flmul@temp
  9805  01399E  CFF4 F096          	movff	prodh,___flmul@temp+1
  9806                           
  9807                           ; BSR set to: 0
  9808  0139A2  0100               	movlb	0	; () banked
  9809  0139A4  5195               	movf	___flmul@temp& (0+255),w,b
  9810  0139A6  0100               	movlb	0	; () banked
  9811  0139A8  278C               	addwf	___flmul@grs& (0+255),f,b
  9812  0139AA  0100               	movlb	0	; () banked
  9813  0139AC  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9814  0139AE  0100               	movlb	0	; () banked
  9815  0139B0  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9816  0139B2  0E00               	movlw	0
  9817  0139B4  0100               	movlb	0	; () banked
  9818  0139B6  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9819  0139B8  0E00               	movlw	0
  9820  0139BA  0100               	movlb	0	; () banked
  9821  0139BC  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9822                           
  9823                           ; BSR set to: 0
  9824  0139BE  0100               	movlb	0	; () banked
  9825  0139C0  5184               	movf	(___flmul@a+2)& (0+255),w,b
  9826  0139C2  0100               	movlb	0	; () banked
  9827  0139C4  037F               	mulwf	(___flmul@b+1)& (0+255),b
  9828  0139C6  CFF3 F095          	movff	prodl,___flmul@temp
  9829  0139CA  CFF4 F096          	movff	prodh,___flmul@temp+1
  9830  0139CE  0100               	movlb	0	; () banked
  9831  0139D0  5195               	movf	___flmul@temp& (0+255),w,b
  9832  0139D2  0100               	movlb	0	; () banked
  9833  0139D4  2791               	addwf	___flmul@prod& (0+255),f,b
  9834  0139D6  0100               	movlb	0	; () banked
  9835  0139D8  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9836  0139DA  0100               	movlb	0	; () banked
  9837  0139DC  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9838  0139DE  0E00               	movlw	0
  9839  0139E0  0100               	movlb	0	; () banked
  9840  0139E2  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9841  0139E4  0E00               	movlw	0
  9842  0139E6  0100               	movlb	0	; () banked
  9843  0139E8  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9844                           
  9845                           ; BSR set to: 0
  9846  0139EA  0100               	movlb	0	; () banked
  9847  0139EC  5183               	movf	(___flmul@a+1)& (0+255),w,b
  9848  0139EE  0100               	movlb	0	; () banked
  9849  0139F0  0380               	mulwf	(___flmul@b+2)& (0+255),b
  9850  0139F2  CFF3 F095          	movff	prodl,___flmul@temp
  9851  0139F6  CFF4 F096          	movff	prodh,___flmul@temp+1
  9852                           
  9853                           ; BSR set to: 0
  9854  0139FA  0100               	movlb	0	; () banked
  9855  0139FC  5195               	movf	___flmul@temp& (0+255),w,b
  9856  0139FE  0100               	movlb	0	; () banked
  9857  013A00  2791               	addwf	___flmul@prod& (0+255),f,b
  9858  013A02  0100               	movlb	0	; () banked
  9859  013A04  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9860  013A06  0100               	movlb	0	; () banked
  9861  013A08  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9862  013A0A  0E00               	movlw	0
  9863  013A0C  0100               	movlb	0	; () banked
  9864  013A0E  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9865  013A10  0E00               	movlw	0
  9866  013A12  0100               	movlb	0	; () banked
  9867  013A14  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9868  013A16  0100               	movlb	0	; () banked
  9869  013A18  5184               	movf	(___flmul@a+2)& (0+255),w,b
  9870  013A1A  0100               	movlb	0	; () banked
  9871  013A1C  0380               	mulwf	(___flmul@b+2)& (0+255),b
  9872  013A1E  CFF3 F095          	movff	prodl,___flmul@temp
  9873  013A22  CFF4 F096          	movff	prodh,___flmul@temp+1
  9874                           
  9875                           ; BSR set to: 0
  9876  013A26  0100               	movlb	0	; () banked
  9877  013A28  5195               	movf	___flmul@temp& (0+255),w,b
  9878  013A2A  0100               	movlb	0	; () banked
  9879  013A2C  6F86               	movwf	??___flmul& (0+255),b
  9880  013A2E  0100               	movlb	0	; () banked
  9881  013A30  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9882  013A32  0100               	movlb	0	; () banked
  9883  013A34  6F87               	movwf	(??___flmul+1)& (0+255),b
  9884  013A36  0100               	movlb	0	; () banked
  9885  013A38  6B88               	clrf	(??___flmul+2)& (0+255),b
  9886  013A3A  0100               	movlb	0	; () banked
  9887  013A3C  6B89               	clrf	(??___flmul+3)& (0+255),b
  9888  013A3E  C088  F089         	movff	??___flmul+2,??___flmul+3
  9889  013A42  C087  F088         	movff	??___flmul+1,??___flmul+2
  9890  013A46  C086  F087         	movff	??___flmul,??___flmul+1
  9891  013A4A  0100               	movlb	0	; () banked
  9892  013A4C  6B86               	clrf	??___flmul& (0+255),b
  9893  013A4E  0100               	movlb	0	; () banked
  9894  013A50  5186               	movf	??___flmul& (0+255),w,b
  9895  013A52  0100               	movlb	0	; () banked
  9896  013A54  2791               	addwf	___flmul@prod& (0+255),f,b
  9897  013A56  0100               	movlb	0	; () banked
  9898  013A58  5187               	movf	(??___flmul+1)& (0+255),w,b
  9899  013A5A  0100               	movlb	0	; () banked
  9900  013A5C  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9901  013A5E  0100               	movlb	0	; () banked
  9902  013A60  5188               	movf	(??___flmul+2)& (0+255),w,b
  9903  013A62  0100               	movlb	0	; () banked
  9904  013A64  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9905  013A66  0100               	movlb	0	; () banked
  9906  013A68  5189               	movf	(??___flmul+3)& (0+255),w,b
  9907  013A6A  0100               	movlb	0	; () banked
  9908  013A6C  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9909                           
  9910                           ; BSR set to: 0
  9911  013A6E  C08C  F086         	movff	___flmul@grs,??___flmul
  9912  013A72  C08D  F087         	movff	___flmul@grs+1,??___flmul+1
  9913  013A76  C08E  F088         	movff	___flmul@grs+2,??___flmul+2
  9914  013A7A  C08F  F089         	movff	___flmul@grs+3,??___flmul+3
  9915  013A7E  0E19               	movlw	25
  9916  013A80  D006               	goto	u10800
  9917  013A82                     u10805:
  9918  013A82  0100               	movlb	0	; () banked
  9919  013A84  90D8               	bcf	status,0,c
  9920  013A86  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  9921  013A88  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  9922  013A8A  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  9923  013A8C  3386               	rrcf	??___flmul& (0+255),f,b
  9924  013A8E                     u10800:
  9925  013A8E  2EE8               	decfsz	wreg,f,c
  9926  013A90  D7F8               	goto	u10805
  9927  013A92  0100               	movlb	0	; () banked
  9928  013A94  5186               	movf	??___flmul& (0+255),w,b
  9929  013A96  0100               	movlb	0	; () banked
  9930  013A98  2791               	addwf	___flmul@prod& (0+255),f,b
  9931  013A9A  0100               	movlb	0	; () banked
  9932  013A9C  5187               	movf	(??___flmul+1)& (0+255),w,b
  9933  013A9E  0100               	movlb	0	; () banked
  9934  013AA0  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9935  013AA2  0100               	movlb	0	; () banked
  9936  013AA4  5188               	movf	(??___flmul+2)& (0+255),w,b
  9937  013AA6  0100               	movlb	0	; () banked
  9938  013AA8  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9939  013AAA  0100               	movlb	0	; () banked
  9940  013AAC  5189               	movf	(??___flmul+3)& (0+255),w,b
  9941  013AAE  0100               	movlb	0	; () banked
  9942  013AB0  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9943                           
  9944                           ; BSR set to: 0
  9945  013AB2  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  9946  013AB6  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  9947  013ABA  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  9948  013ABE  0100               	movlb	0	; () banked
  9949  013AC0  6B8C               	clrf	___flmul@grs& (0+255),b
  9950                           
  9951                           ; BSR set to: 0
  9952  013AC2  0100               	movlb	0	; () banked
  9953  013AC4  518B               	movf	___flmul@aexp& (0+255),w,b
  9954  013AC6  C090  F086         	movff	___flmul@bexp,??___flmul
  9955  013ACA  0100               	movlb	0	; () banked
  9956  013ACC  6B87               	clrf	(??___flmul+1)& (0+255),b
  9957  013ACE  0100               	movlb	0	; () banked
  9958  013AD0  2786               	addwf	??___flmul& (0+255),f,b
  9959  013AD2  0E00               	movlw	0
  9960  013AD4  2387               	addwfc	(??___flmul+1)& (0+255),f,b
  9961  013AD6  0E82               	movlw	130
  9962  013AD8  0100               	movlb	0	; () banked
  9963  013ADA  2586               	addwf	??___flmul& (0+255),w,b
  9964  013ADC  0100               	movlb	0	; () banked
  9965  013ADE  6F95               	movwf	___flmul@temp& (0+255),b
  9966  013AE0  0EFF               	movlw	255
  9967  013AE2  0100               	movlb	0	; () banked
  9968  013AE4  2187               	addwfc	(??___flmul+1)& (0+255),w,b
  9969  013AE6  0100               	movlb	0	; () banked
  9970  013AE8  6F96               	movwf	(___flmul@temp+1)& (0+255),b
  9971  013AEA  D015               	goto	l8162
  9972  013AEC                     l8156:
  9973                           
  9974                           ; BSR set to: 0
  9975  013AEC  0100               	movlb	0	; () banked
  9976  013AEE  90D8               	bcf	status,0,c
  9977  013AF0  3791               	rlcf	___flmul@prod& (0+255),f,b
  9978  013AF2  3792               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9979  013AF4  3793               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9980  013AF6  3794               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9981                           
  9982                           ; BSR set to: 0
  9983  013AF8  0100               	movlb	0	; () banked
  9984  013AFA  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
  9985  013AFC  D002               	goto	l1633
  9986                           
  9987                           ; BSR set to: 0
  9988  013AFE  0100               	movlb	0	; () banked
  9989  013B00  8191               	bsf	___flmul@prod& (0+255),0,b
  9990  013B02                     l1633:
  9991                           
  9992                           ; BSR set to: 0
  9993  013B02  0100               	movlb	0	; () banked
  9994  013B04  90D8               	bcf	status,0,c
  9995  013B06  378C               	rlcf	___flmul@grs& (0+255),f,b
  9996  013B08  378D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9997  013B0A  378E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9998  013B0C  378F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9999  013B0E  0100               	movlb	0	; () banked
 10000  013B10  0795               	decf	___flmul@temp& (0+255),f,b
 10001  013B12  A0D8               	btfss	status,0,c
 10002  013B14  0796               	decf	(___flmul@temp+1)& (0+255),f,b
 10003  013B16                     l8162:
 10004                           
 10005                           ; BSR set to: 0
 10006  013B16  0100               	movlb	0	; () banked
 10007  013B18  AF93               	btfss	(___flmul@prod+2)& (0+255),7,b
 10008  013B1A  D7E8               	goto	l8156
 10009                           
 10010                           ; BSR set to: 0
 10011                           
 10012                           ; BSR set to: 0
 10013  013B1C  0E00               	movlw	0
 10014  013B1E  0100               	movlb	0	; () banked
 10015  013B20  6F8B               	movwf	___flmul@aexp& (0+255),b
 10016                           
 10017                           ; BSR set to: 0
 10018  013B22  0100               	movlb	0	; () banked
 10019  013B24  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
 10020  013B26  D024               	goto	l1635
 10021                           
 10022                           ; BSR set to: 0
 10023  013B28  0EFF               	movlw	255
 10024  013B2A  0100               	movlb	0	; () banked
 10025  013B2C  158C               	andwf	___flmul@grs& (0+255),w,b
 10026  013B2E  0100               	movlb	0	; () banked
 10027  013B30  6F86               	movwf	??___flmul& (0+255),b
 10028  013B32  0EFF               	movlw	255
 10029  013B34  0100               	movlb	0	; () banked
 10030  013B36  158D               	andwf	(___flmul@grs+1)& (0+255),w,b
 10031  013B38  0100               	movlb	0	; () banked
 10032  013B3A  6F87               	movwf	(??___flmul+1)& (0+255),b
 10033  013B3C  0EFF               	movlw	255
 10034  013B3E  0100               	movlb	0	; () banked
 10035  013B40  158E               	andwf	(___flmul@grs+2)& (0+255),w,b
 10036  013B42  0100               	movlb	0	; () banked
 10037  013B44  6F88               	movwf	(??___flmul+2)& (0+255),b
 10038  013B46  0E7F               	movlw	127
 10039  013B48  0100               	movlb	0	; () banked
 10040  013B4A  158F               	andwf	(___flmul@grs+3)& (0+255),w,b
 10041  013B4C  0100               	movlb	0	; () banked
 10042  013B4E  6F89               	movwf	(??___flmul+3)& (0+255),b
 10043  013B50  0100               	movlb	0	; () banked
 10044  013B52  5186               	movf	??___flmul& (0+255),w,b
 10045  013B54  0100               	movlb	0	; () banked
 10046  013B56  1187               	iorwf	(??___flmul+1)& (0+255),w,b
 10047  013B58  0100               	movlb	0	; () banked
 10048  013B5A  1188               	iorwf	(??___flmul+2)& (0+255),w,b
 10049  013B5C  0100               	movlb	0	; () banked
 10050  013B5E  1189               	iorwf	(??___flmul+3)& (0+255),w,b
 10051  013B60  A4D8               	btfss	status,2,c
 10052  013B62  D003               	goto	l8172
 10053                           
 10054                           ; BSR set to: 0
 10055                           
 10056                           ; BSR set to: 0
 10057  013B64  0100               	movlb	0	; () banked
 10058  013B66  A191               	btfss	___flmul@prod& (0+255),0,b
 10059  013B68  D003               	goto	l1635
 10060  013B6A                     l8172:
 10061                           
 10062                           ; BSR set to: 0
 10063  013B6A  0E01               	movlw	1
 10064  013B6C  0100               	movlb	0	; () banked
 10065  013B6E  6F8B               	movwf	___flmul@aexp& (0+255),b
 10066  013B70                     l1635:
 10067                           
 10068                           ; BSR set to: 0
 10069  013B70  0100               	movlb	0	; () banked
 10070  013B72  518B               	movf	___flmul@aexp& (0+255),w,b
 10071  013B74  0100               	movlb	0	; () banked
 10072  013B76  B4D8               	btfsc	status,2,c
 10073  013B78  D023               	goto	l8182
 10074                           
 10075                           ; BSR set to: 0
 10076  013B7A  0E01               	movlw	1
 10077  013B7C  0100               	movlb	0	; () banked
 10078  013B7E  2791               	addwf	___flmul@prod& (0+255),f,b
 10079  013B80  0E00               	movlw	0
 10080  013B82  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10081  013B84  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10082  013B86  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10083                           
 10084                           ; BSR set to: 0
 10085  013B88  0100               	movlb	0	; () banked
 10086  013B8A  A194               	btfss	(___flmul@prod+3)& (0+255),0,b
 10087  013B8C  D019               	goto	l8182
 10088                           
 10089                           ; BSR set to: 0
 10090  013B8E  C091  F086         	movff	___flmul@prod,??___flmul
 10091  013B92  C092  F087         	movff	___flmul@prod+1,??___flmul+1
 10092  013B96  C093  F088         	movff	___flmul@prod+2,??___flmul+2
 10093  013B9A  C094  F089         	movff	___flmul@prod+3,??___flmul+3
 10094  013B9E  0100               	movlb	0	; () banked
 10095  013BA0  3589               	rlcf	(??___flmul+3)& (0+255),w,b
 10096  013BA2  3389               	rrcf	(??___flmul+3)& (0+255),f,b
 10097  013BA4  3388               	rrcf	(??___flmul+2)& (0+255),f,b
 10098  013BA6  3387               	rrcf	(??___flmul+1)& (0+255),f,b
 10099  013BA8  3386               	rrcf	??___flmul& (0+255),f,b
 10100  013BAA  C086  F091         	movff	??___flmul,___flmul@prod
 10101  013BAE  C087  F092         	movff	??___flmul+1,___flmul@prod+1
 10102  013BB2  C088  F093         	movff	??___flmul+2,___flmul@prod+2
 10103  013BB6  C089  F094         	movff	??___flmul+3,___flmul@prod+3
 10104                           
 10105                           ; BSR set to: 0
 10106  013BBA  0100               	movlb	0	; () banked
 10107  013BBC  4B95               	infsnz	___flmul@temp& (0+255),f,b
 10108  013BBE  2B96               	incf	(___flmul@temp+1)& (0+255),f,b
 10109  013BC0                     l8182:
 10110                           
 10111                           ; BSR set to: 0
 10112  013BC0  0100               	movlb	0	; () banked
 10113  013BC2  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10114  013BC4  D010               	goto	l8186
 10115  013BC6  0100               	movlb	0	; () banked
 10116  013BC8  5196               	movf	(___flmul@temp+1)& (0+255),w,b
 10117  013BCA  E104               	bnz	u10880
 10118  013BCC  0100               	movlb	0	; () banked
 10119  013BCE  2995               	incf	___flmul@temp& (0+255),w,b
 10120  013BD0  A0D8               	btfss	status,0,c
 10121  013BD2  D009               	goto	l8186
 10122  013BD4                     u10880:
 10123                           
 10124                           ; BSR set to: 0
 10125  013BD4  0E00               	movlw	0
 10126  013BD6  0100               	movlb	0	; () banked
 10127  013BD8  6F91               	movwf	___flmul@prod& (0+255),b
 10128  013BDA  0E00               	movlw	0
 10129  013BDC  6F92               	movwf	(___flmul@prod+1)& (0+255),b
 10130  013BDE  0E80               	movlw	128
 10131  013BE0  6F93               	movwf	(___flmul@prod+2)& (0+255),b
 10132  013BE2  0E7F               	movlw	127
 10133  013BE4  D02B               	goto	L11
 10134  013BE6                     l8186:
 10135                           
 10136                           ; BSR set to: 0
 10137  013BE6  0100               	movlb	0	; () banked
 10138  013BE8  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
 10139  013BEA  D007               	goto	l8188
 10140  013BEC  0100               	movlb	0	; () banked
 10141  013BEE  5196               	movf	(___flmul@temp+1)& (0+255),w,b
 10142  013BF0  E111               	bnz	l1643
 10143  013BF2  0100               	movlb	0	; () banked
 10144  013BF4  0595               	decf	___flmul@temp& (0+255),w,b
 10145  013BF6  B0D8               	btfsc	status,0,c
 10146  013BF8  D00D               	goto	l1643
 10147  013BFA                     l8188:
 10148                           
 10149                           ; BSR set to: 0
 10150  013BFA  0E00               	movlw	0
 10151  013BFC  0100               	movlb	0	; () banked
 10152  013BFE  6F91               	movwf	___flmul@prod& (0+255),b
 10153  013C00  0E00               	movlw	0
 10154  013C02  6F92               	movwf	(___flmul@prod+1)& (0+255),b
 10155  013C04  0E00               	movlw	0
 10156  013C06  6F93               	movwf	(___flmul@prod+2)& (0+255),b
 10157  013C08  0E00               	movlw	0
 10158  013C0A  6F94               	movwf	(___flmul@prod+3)& (0+255),b
 10159  013C0C  0E00               	movlw	0
 10160  013C0E  0100               	movlb	0	; () banked
 10161  013C10  6F8A               	movwf	___flmul@sign& (0+255),b
 10162  013C12  D015               	goto	l8198
 10163  013C14                     l1643:
 10164                           
 10165                           ; BSR set to: 0
 10166  013C14  C095  F090         	movff	___flmul@temp,___flmul@bexp
 10167                           
 10168                           ; BSR set to: 0
 10169  013C18  0EFF               	movlw	255
 10170  013C1A  0100               	movlb	0	; () banked
 10171  013C1C  1791               	andwf	___flmul@prod& (0+255),f,b
 10172  013C1E  0EFF               	movlw	255
 10173  013C20  1792               	andwf	(___flmul@prod+1)& (0+255),f,b
 10174  013C22  0E7F               	movlw	127
 10175  013C24  1793               	andwf	(___flmul@prod+2)& (0+255),f,b
 10176  013C26  0E00               	movlw	0
 10177  013C28  1794               	andwf	(___flmul@prod+3)& (0+255),f,b
 10178                           
 10179                           ; BSR set to: 0
 10180  013C2A  0100               	movlb	0	; () banked
 10181  013C2C  A190               	btfss	___flmul@bexp& (0+255),0,b
 10182  013C2E  D002               	goto	l8196
 10183                           
 10184                           ; BSR set to: 0
 10185  013C30  0100               	movlb	0	; () banked
 10186  013C32  8F93               	bsf	(___flmul@prod+2)& (0+255),7,b
 10187  013C34                     l8196:
 10188                           
 10189                           ; BSR set to: 0
 10190  013C34  0100               	movlb	0	; () banked
 10191  013C36  90D8               	bcf	status,0,c
 10192  013C38  3190               	rrcf	___flmul@bexp& (0+255),w,b
 10193  013C3A  0100               	movlb	0	; () banked
 10194  013C3C                     L11:
 10195  013C3C  6F94               	movwf	(___flmul@prod+3)& (0+255),b
 10196  013C3E                     l8198:
 10197                           
 10198                           ; BSR set to: 0
 10199  013C3E  0100               	movlb	0	; () banked
 10200  013C40  518A               	movf	___flmul@sign& (0+255),w,b
 10201  013C42  0100               	movlb	0	; () banked
 10202  013C44  1394               	iorwf	(___flmul@prod+3)& (0+255),f,b
 10203                           
 10204                           ; BSR set to: 0
 10205  013C46  C091  F07E         	movff	___flmul@prod,?___flmul
 10206  013C4A  C092  F07F         	movff	___flmul@prod+1,?___flmul+1
 10207  013C4E  C093  F080         	movff	___flmul@prod+2,?___flmul+2
 10208  013C52  C094  F081         	movff	___flmul@prod+3,?___flmul+3
 10209  013C56  0012               	return	
 10210  013C58                     __end_of___flmul:
 10211                           	opt stack 0
 10212                           tblptru	equ	0xFF8
 10213                           tblptrh	equ	0xFF7
 10214                           tblptrl	equ	0xFF6
 10215                           tablat	equ	0xFF5
 10216                           prodh	equ	0xFF4
 10217                           prodl	equ	0xFF3
 10218                           intcon	equ	0xFF2
 10219                           postinc0	equ	0xFEE
 10220                           wreg	equ	0xFE8
 10221                           indf2	equ	0xFDF
 10222                           postinc2	equ	0xFDE
 10223                           fsr2h	equ	0xFDA
 10224                           fsr2l	equ	0xFD9
 10225                           status	equ	0xFD8
 10226                           
 10227 ;; *************** function ___awmod *****************
 10228 ;; Defined at:
 10229 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 10230 ;; Parameters:    Size  Location     Type
 10231 ;;  dividend        2   16[BANK0 ] int 
 10232 ;;  divisor         2   18[BANK0 ] int 
 10233 ;; Auto vars:     Size  Location     Type
 10234 ;;  sign            1   21[BANK0 ] unsigned char 
 10235 ;;  counter         1   20[BANK0 ] unsigned char 
 10236 ;; Return value:  Size  Location     Type
 10237 ;;                  2   16[BANK0 ] int 
 10238 ;; Registers used:
 10239 ;;		wreg, status,2, status,0
 10240 ;; Tracked objects:
 10241 ;;		On entry : 0/0
 10242 ;;		On exit  : 0/0
 10243 ;;		Unchanged: 0/0
 10244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10245 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10246 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10248 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10249 ;;Total ram usage:        6 bytes
 10250 ;; Hardware stack levels used:    1
 10251 ;; Hardware stack levels required when called:    3
 10252 ;; This function calls:
 10253 ;;		Nothing
 10254 ;; This function is called by:
 10255 ;;		_fround
 10256 ;;		_scale
 10257 ;; This function uses a non-reentrant model
 10258 ;;
 10259                           
 10260                           	psect	text15
 10261  015C1E                     __ptext15:
 10262                           	opt stack 0
 10263  015C1E                     ___awmod:
 10264                           	opt stack 24
 10265                           
 10266                           ; BSR set to: 0
 10267                           ;incstack = 0
 10268  015C1E  0E00               	movlw	0
 10269  015C20  0100               	movlb	0	; () banked
 10270  015C22  6F75               	movwf	___awmod@sign& (0+255),b
 10271                           
 10272                           ; BSR set to: 0
 10273  015C24  0100               	movlb	0	; () banked
 10274  015C26  AF71               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10275  015C28  D008               	goto	l8256
 10276                           
 10277                           ; BSR set to: 0
 10278  015C2A  0100               	movlb	0	; () banked
 10279  015C2C  6D70               	negf	___awmod@dividend& (0+255),b
 10280  015C2E  1F71               	comf	(___awmod@dividend+1)& (0+255),f,b
 10281  015C30  B0D8               	btfsc	status,0,c
 10282  015C32  2B71               	incf	(___awmod@dividend+1)& (0+255),f,b
 10283                           
 10284                           ; BSR set to: 0
 10285  015C34  0E01               	movlw	1
 10286  015C36  0100               	movlb	0	; () banked
 10287  015C38  6F75               	movwf	___awmod@sign& (0+255),b
 10288  015C3A                     l8256:
 10289                           
 10290                           ; BSR set to: 0
 10291  015C3A  0100               	movlb	0	; () banked
 10292  015C3C  AF73               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10293  015C3E  D005               	goto	l8260
 10294                           
 10295                           ; BSR set to: 0
 10296  015C40  0100               	movlb	0	; () banked
 10297  015C42  6D72               	negf	___awmod@divisor& (0+255),b
 10298  015C44  1F73               	comf	(___awmod@divisor+1)& (0+255),f,b
 10299  015C46  B0D8               	btfsc	status,0,c
 10300  015C48  2B73               	incf	(___awmod@divisor+1)& (0+255),f,b
 10301  015C4A                     l8260:
 10302                           
 10303                           ; BSR set to: 0
 10304  015C4A  0100               	movlb	0	; () banked
 10305  015C4C  5172               	movf	___awmod@divisor& (0+255),w,b
 10306  015C4E  0100               	movlb	0	; () banked
 10307  015C50  1173               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10308  015C52  B4D8               	btfsc	status,2,c
 10309  015C54  D026               	goto	l8276
 10310                           
 10311                           ; BSR set to: 0
 10312  015C56  0E01               	movlw	1
 10313  015C58  0100               	movlb	0	; () banked
 10314  015C5A  6F74               	movwf	___awmod@counter& (0+255),b
 10315  015C5C  D006               	goto	l8266
 10316  015C5E                     l8264:
 10317                           
 10318                           ; BSR set to: 0
 10319  015C5E  0100               	movlb	0	; () banked
 10320  015C60  90D8               	bcf	status,0,c
 10321  015C62  3772               	rlcf	___awmod@divisor& (0+255),f,b
 10322  015C64  3773               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10323  015C66  0100               	movlb	0	; () banked
 10324  015C68  2B74               	incf	___awmod@counter& (0+255),f,b
 10325  015C6A                     l8266:
 10326                           
 10327                           ; BSR set to: 0
 10328  015C6A  0100               	movlb	0	; () banked
 10329  015C6C  AF73               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10330  015C6E  D7F7               	goto	l8264
 10331  015C70                     l8268:
 10332                           
 10333                           ; BSR set to: 0
 10334  015C70  0100               	movlb	0	; () banked
 10335  015C72  5172               	movf	___awmod@divisor& (0+255),w,b
 10336  015C74  0100               	movlb	0	; () banked
 10337  015C76  5D70               	subwf	___awmod@dividend& (0+255),w,b
 10338  015C78  0100               	movlb	0	; () banked
 10339  015C7A  5173               	movf	(___awmod@divisor+1)& (0+255),w,b
 10340  015C7C  0100               	movlb	0	; () banked
 10341  015C7E  5971               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10342  015C80  A0D8               	btfss	status,0,c
 10343  015C82  D008               	goto	l8272
 10344                           
 10345                           ; BSR set to: 0
 10346  015C84  0100               	movlb	0	; () banked
 10347  015C86  5172               	movf	___awmod@divisor& (0+255),w,b
 10348  015C88  0100               	movlb	0	; () banked
 10349  015C8A  5F70               	subwf	___awmod@dividend& (0+255),f,b
 10350  015C8C  0100               	movlb	0	; () banked
 10351  015C8E  5173               	movf	(___awmod@divisor+1)& (0+255),w,b
 10352  015C90  0100               	movlb	0	; () banked
 10353  015C92  5B71               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10354  015C94                     l8272:
 10355                           
 10356                           ; BSR set to: 0
 10357  015C94  0100               	movlb	0	; () banked
 10358  015C96  90D8               	bcf	status,0,c
 10359  015C98  3373               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10360  015C9A  3372               	rrcf	___awmod@divisor& (0+255),f,b
 10361                           
 10362                           ; BSR set to: 0
 10363  015C9C  0100               	movlb	0	; () banked
 10364  015C9E  2F74               	decfsz	___awmod@counter& (0+255),f,b
 10365  015CA0  D7E7               	goto	l8268
 10366  015CA2                     l8276:
 10367                           
 10368                           ; BSR set to: 0
 10369  015CA2  0100               	movlb	0	; () banked
 10370  015CA4  5175               	movf	___awmod@sign& (0+255),w,b
 10371  015CA6  0100               	movlb	0	; () banked
 10372  015CA8  B4D8               	btfsc	status,2,c
 10373  015CAA  D005               	goto	l8280
 10374                           
 10375                           ; BSR set to: 0
 10376  015CAC  0100               	movlb	0	; () banked
 10377  015CAE  6D70               	negf	___awmod@dividend& (0+255),b
 10378  015CB0  1F71               	comf	(___awmod@dividend+1)& (0+255),f,b
 10379  015CB2  B0D8               	btfsc	status,0,c
 10380  015CB4  2B71               	incf	(___awmod@dividend+1)& (0+255),f,b
 10381  015CB6                     l8280:
 10382                           
 10383                           ; BSR set to: 0
 10384  015CB6  C070  F070         	movff	___awmod@dividend,?___awmod
 10385  015CBA  C071  F071         	movff	___awmod@dividend+1,?___awmod+1
 10386  015CBE  0012               	return	
 10387  015CC0                     __end_of___awmod:
 10388                           	opt stack 0
 10389                           tblptru	equ	0xFF8
 10390                           tblptrh	equ	0xFF7
 10391                           tblptrl	equ	0xFF6
 10392                           tablat	equ	0xFF5
 10393                           prodh	equ	0xFF4
 10394                           prodl	equ	0xFF3
 10395                           intcon	equ	0xFF2
 10396                           postinc0	equ	0xFEE
 10397                           wreg	equ	0xFE8
 10398                           indf2	equ	0xFDF
 10399                           postinc2	equ	0xFDE
 10400                           fsr2h	equ	0xFDA
 10401                           fsr2l	equ	0xFD9
 10402                           status	equ	0xFD8
 10403                           
 10404 ;; *************** function ___awdiv *****************
 10405 ;; Defined at:
 10406 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 10407 ;; Parameters:    Size  Location     Type
 10408 ;;  dividend        2   22[BANK0 ] int 
 10409 ;;  divisor         2   24[BANK0 ] int 
 10410 ;; Auto vars:     Size  Location     Type
 10411 ;;  quotient        2   28[BANK0 ] int 
 10412 ;;  sign            1   27[BANK0 ] unsigned char 
 10413 ;;  counter         1   26[BANK0 ] unsigned char 
 10414 ;; Return value:  Size  Location     Type
 10415 ;;                  2   22[BANK0 ] int 
 10416 ;; Registers used:
 10417 ;;		wreg, status,2, status,0
 10418 ;; Tracked objects:
 10419 ;;		On entry : 0/0
 10420 ;;		On exit  : 0/0
 10421 ;;		Unchanged: 0/0
 10422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10423 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10424 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10426 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10427 ;;Total ram usage:        8 bytes
 10428 ;; Hardware stack levels used:    1
 10429 ;; Hardware stack levels required when called:    3
 10430 ;; This function calls:
 10431 ;;		Nothing
 10432 ;; This function is called by:
 10433 ;;		_fround
 10434 ;;		_scale
 10435 ;;		_sprintf
 10436 ;; This function uses a non-reentrant model
 10437 ;;
 10438                           
 10439                           	psect	text16
 10440  0157DA                     __ptext16:
 10441                           	opt stack 0
 10442  0157DA                     ___awdiv:
 10443                           	opt stack 24
 10444                           
 10445                           ; BSR set to: 0
 10446                           ;incstack = 0
 10447  0157DA  0E00               	movlw	0
 10448  0157DC  0100               	movlb	0	; () banked
 10449  0157DE  6F7B               	movwf	___awdiv@sign& (0+255),b
 10450                           
 10451                           ; BSR set to: 0
 10452  0157E0  0100               	movlb	0	; () banked
 10453  0157E2  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10454  0157E4  D008               	goto	l8212
 10455                           
 10456                           ; BSR set to: 0
 10457  0157E6  0100               	movlb	0	; () banked
 10458  0157E8  6D78               	negf	___awdiv@divisor& (0+255),b
 10459  0157EA  1F79               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10460  0157EC  B0D8               	btfsc	status,0,c
 10461  0157EE  2B79               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10462                           
 10463                           ; BSR set to: 0
 10464  0157F0  0E01               	movlw	1
 10465  0157F2  0100               	movlb	0	; () banked
 10466  0157F4  6F7B               	movwf	___awdiv@sign& (0+255),b
 10467  0157F6                     l8212:
 10468                           
 10469                           ; BSR set to: 0
 10470  0157F6  0100               	movlb	0	; () banked
 10471  0157F8  AF77               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10472  0157FA  D008               	goto	l8218
 10473                           
 10474                           ; BSR set to: 0
 10475  0157FC  0100               	movlb	0	; () banked
 10476  0157FE  6D76               	negf	___awdiv@dividend& (0+255),b
 10477  015800  1F77               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10478  015802  B0D8               	btfsc	status,0,c
 10479  015804  2B77               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10480                           
 10481                           ; BSR set to: 0
 10482  015806  0E01               	movlw	1
 10483  015808  0100               	movlb	0	; () banked
 10484  01580A  1B7B               	xorwf	___awdiv@sign& (0+255),f,b
 10485  01580C                     l8218:
 10486                           
 10487                           ; BSR set to: 0
 10488  01580C  0E00               	movlw	0
 10489  01580E  0100               	movlb	0	; () banked
 10490  015810  6F7D               	movwf	(___awdiv@quotient+1)& (0+255),b
 10491  015812  0E00               	movlw	0
 10492  015814  6F7C               	movwf	___awdiv@quotient& (0+255),b
 10493                           
 10494                           ; BSR set to: 0
 10495  015816  0100               	movlb	0	; () banked
 10496  015818  5178               	movf	___awdiv@divisor& (0+255),w,b
 10497  01581A  0100               	movlb	0	; () banked
 10498  01581C  1179               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10499  01581E  B4D8               	btfsc	status,2,c
 10500  015820  D02C               	goto	l8240
 10501                           
 10502                           ; BSR set to: 0
 10503  015822  0E01               	movlw	1
 10504  015824  0100               	movlb	0	; () banked
 10505  015826  6F7A               	movwf	___awdiv@counter& (0+255),b
 10506  015828  D006               	goto	l8226
 10507  01582A                     l8224:
 10508                           
 10509                           ; BSR set to: 0
 10510  01582A  0100               	movlb	0	; () banked
 10511  01582C  90D8               	bcf	status,0,c
 10512  01582E  3778               	rlcf	___awdiv@divisor& (0+255),f,b
 10513  015830  3779               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10514  015832  0100               	movlb	0	; () banked
 10515  015834  2B7A               	incf	___awdiv@counter& (0+255),f,b
 10516  015836                     l8226:
 10517                           
 10518                           ; BSR set to: 0
 10519  015836  0100               	movlb	0	; () banked
 10520  015838  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10521  01583A  D7F7               	goto	l8224
 10522  01583C                     l8228:
 10523                           
 10524                           ; BSR set to: 0
 10525  01583C  0100               	movlb	0	; () banked
 10526  01583E  90D8               	bcf	status,0,c
 10527  015840  377C               	rlcf	___awdiv@quotient& (0+255),f,b
 10528  015842  377D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10529                           
 10530                           ; BSR set to: 0
 10531  015844  0100               	movlb	0	; () banked
 10532  015846  5178               	movf	___awdiv@divisor& (0+255),w,b
 10533  015848  0100               	movlb	0	; () banked
 10534  01584A  5D76               	subwf	___awdiv@dividend& (0+255),w,b
 10535  01584C  0100               	movlb	0	; () banked
 10536  01584E  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10537  015850  0100               	movlb	0	; () banked
 10538  015852  5977               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10539  015854  A0D8               	btfss	status,0,c
 10540  015856  D00A               	goto	l8236
 10541                           
 10542                           ; BSR set to: 0
 10543  015858  0100               	movlb	0	; () banked
 10544  01585A  5178               	movf	___awdiv@divisor& (0+255),w,b
 10545  01585C  0100               	movlb	0	; () banked
 10546  01585E  5F76               	subwf	___awdiv@dividend& (0+255),f,b
 10547  015860  0100               	movlb	0	; () banked
 10548  015862  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10549  015864  0100               	movlb	0	; () banked
 10550  015866  5B77               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10551                           
 10552                           ; BSR set to: 0
 10553  015868  0100               	movlb	0	; () banked
 10554  01586A  817C               	bsf	___awdiv@quotient& (0+255),0,b
 10555  01586C                     l8236:
 10556                           
 10557                           ; BSR set to: 0
 10558  01586C  0100               	movlb	0	; () banked
 10559  01586E  90D8               	bcf	status,0,c
 10560  015870  3379               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10561  015872  3378               	rrcf	___awdiv@divisor& (0+255),f,b
 10562                           
 10563                           ; BSR set to: 0
 10564  015874  0100               	movlb	0	; () banked
 10565  015876  2F7A               	decfsz	___awdiv@counter& (0+255),f,b
 10566  015878  D7E1               	goto	l8228
 10567  01587A                     l8240:
 10568                           
 10569                           ; BSR set to: 0
 10570  01587A  0100               	movlb	0	; () banked
 10571  01587C  517B               	movf	___awdiv@sign& (0+255),w,b
 10572  01587E  0100               	movlb	0	; () banked
 10573  015880  B4D8               	btfsc	status,2,c
 10574  015882  D005               	goto	l8244
 10575                           
 10576                           ; BSR set to: 0
 10577  015884  0100               	movlb	0	; () banked
 10578  015886  6D7C               	negf	___awdiv@quotient& (0+255),b
 10579  015888  1F7D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10580  01588A  B0D8               	btfsc	status,0,c
 10581  01588C  2B7D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10582  01588E                     l8244:
 10583                           
 10584                           ; BSR set to: 0
 10585  01588E  C07C  F076         	movff	___awdiv@quotient,?___awdiv
 10586  015892  C07D  F077         	movff	___awdiv@quotient+1,?___awdiv+1
 10587  015896  0012               	return	
 10588  015898                     __end_of___awdiv:
 10589                           	opt stack 0
 10590                           tblptru	equ	0xFF8
 10591                           tblptrh	equ	0xFF7
 10592                           tblptrl	equ	0xFF6
 10593                           tablat	equ	0xFF5
 10594                           prodh	equ	0xFF4
 10595                           prodl	equ	0xFF3
 10596                           intcon	equ	0xFF2
 10597                           postinc0	equ	0xFEE
 10598                           wreg	equ	0xFE8
 10599                           indf2	equ	0xFDF
 10600                           postinc2	equ	0xFDE
 10601                           fsr2h	equ	0xFDA
 10602                           fsr2l	equ	0xFD9
 10603                           status	equ	0xFD8
 10604                           
 10605 ;; *************** function __tdiv_to_l_ *****************
 10606 ;; Defined at:
 10607 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
 10608 ;; Parameters:    Size  Location     Type
 10609 ;;  f1              4   16[BANK0 ] float 
 10610 ;;  f2              4   20[BANK0 ] float 
 10611 ;; Auto vars:     Size  Location     Type
 10612 ;;  quot            4   27[BANK0 ] unsigned long 
 10613 ;;  exp1            1   32[BANK0 ] unsigned char 
 10614 ;;  cntr            1   31[BANK0 ] unsigned char 
 10615 ;; Return value:  Size  Location     Type
 10616 ;;                  4   16[BANK0 ] unsigned long 
 10617 ;; Registers used:
 10618 ;;		wreg, status,2, status,0
 10619 ;; Tracked objects:
 10620 ;;		On entry : 0/0
 10621 ;;		On exit  : 0/0
 10622 ;;		Unchanged: 0/0
 10623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10624 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10625 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10626 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10627 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10628 ;;Total ram usage:       17 bytes
 10629 ;; Hardware stack levels used:    1
 10630 ;; Hardware stack levels required when called:    3
 10631 ;; This function calls:
 10632 ;;		Nothing
 10633 ;; This function is called by:
 10634 ;;		_sprintf
 10635 ;; This function uses a non-reentrant model
 10636 ;;
 10637                           
 10638                           	psect	text17
 10639  014FBE                     __ptext17:
 10640                           	opt stack 0
 10641  014FBE                     __tdiv_to_l_:
 10642                           	opt stack 25
 10643                           
 10644                           ; BSR set to: 0
 10645                           ;incstack = 0
 10646  014FBE  C072  F078         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10647  014FC2  0100               	movlb	0	; () banked
 10648  014FC4  6B79               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10649  014FC6  6B7A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10650  014FC8  0100               	movlb	0	; () banked
 10651  014FCA  3571               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10652  014FCC  0100               	movlb	0	; () banked
 10653  014FCE  3778               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10654  014FD0  E301               	bnc	u11141
 10655  014FD2  8179               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10656  014FD4                     u11141:
 10657  014FD4  0100               	movlb	0	; () banked
 10658  014FD6  5178               	movf	??__tdiv_to_l_& (0+255),w,b
 10659  014FD8  0100               	movlb	0	; () banked
 10660  014FDA  6F80               	movwf	__tdiv_to_l_@exp1& (0+255),b
 10661  014FDC  0100               	movlb	0	; () banked
 10662  014FDE  5180               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10663  014FE0  A4D8               	btfss	status,2,c
 10664  014FE2  D00A               	goto	l8394
 10665                           
 10666                           ; BSR set to: 0
 10667  014FE4  0E00               	movlw	0
 10668  014FE6  0100               	movlb	0	; () banked
 10669  014FE8  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 10670  014FEA  0E00               	movlw	0
 10671  014FEC  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10672  014FEE  0E00               	movlw	0
 10673  014FF0  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10674  014FF2  0E00               	movlw	0
 10675  014FF4  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10676                           
 10677                           ; BSR set to: 0
 10678  014FF6  0012               	return	
 10679  014FF8                     l8394:
 10680                           
 10681                           ; BSR set to: 0
 10682  014FF8  C076  F078         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10683  014FFC  0100               	movlb	0	; () banked
 10684  014FFE  6B79               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10685  015000  6B7A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10686  015002  0100               	movlb	0	; () banked
 10687  015004  3575               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10688  015006  0100               	movlb	0	; () banked
 10689  015008  3778               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10690  01500A  E301               	bnc	u11161
 10691  01500C  8179               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10692  01500E                     u11161:
 10693  01500E  0100               	movlb	0	; () banked
 10694  015010  5178               	movf	??__tdiv_to_l_& (0+255),w,b
 10695  015012  0100               	movlb	0	; () banked
 10696  015014  6F7F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10697  015016  0100               	movlb	0	; () banked
 10698  015018  517F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10699  01501A  A4D8               	btfss	status,2,c
 10700  01501C  D00A               	goto	l8400
 10701                           
 10702                           ; BSR set to: 0
 10703  01501E  0E00               	movlw	0
 10704  015020  0100               	movlb	0	; () banked
 10705  015022  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 10706  015024  0E00               	movlw	0
 10707  015026  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10708  015028  0E00               	movlw	0
 10709  01502A  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10710  01502C  0E00               	movlw	0
 10711  01502E  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10712                           
 10713                           ; BSR set to: 0
 10714  015030  0012               	return	
 10715  015032                     l8400:
 10716                           
 10717                           ; BSR set to: 0
 10718  015032  0100               	movlb	0	; () banked
 10719  015034  8F71               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 10720                           
 10721                           ; BSR set to: 0
 10722  015036  0EFF               	movlw	255
 10723  015038  0100               	movlb	0	; () banked
 10724  01503A  1770               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 10725  01503C  0EFF               	movlw	255
 10726  01503E  0100               	movlb	0	; () banked
 10727  015040  1771               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10728  015042  0E00               	movlw	0
 10729  015044  0100               	movlb	0	; () banked
 10730  015046  1772               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10731  015048  0100               	movlb	0	; () banked
 10732  01504A  8F75               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 10733                           
 10734                           ; BSR set to: 0
 10735  01504C  0EFF               	movlw	255
 10736  01504E  0100               	movlb	0	; () banked
 10737  015050  1774               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 10738  015052  0EFF               	movlw	255
 10739  015054  0100               	movlb	0	; () banked
 10740  015056  1775               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 10741  015058  0E00               	movlw	0
 10742  01505A  0100               	movlb	0	; () banked
 10743  01505C  1776               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 10744                           
 10745                           ; BSR set to: 0
 10746  01505E  0E00               	movlw	0
 10747  015060  0100               	movlb	0	; () banked
 10748  015062  6F7B               	movwf	__tdiv_to_l_@quot& (0+255),b
 10749  015064  0E00               	movlw	0
 10750  015066  6F7C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 10751  015068  0E00               	movlw	0
 10752  01506A  6F7D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 10753  01506C  0E00               	movlw	0
 10754  01506E  6F7E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 10755                           
 10756                           ; BSR set to: 0
 10757  015070  0E7F               	movlw	127
 10758  015072  0100               	movlb	0	; () banked
 10759  015074  5F80               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10760                           
 10761                           ; BSR set to: 0
 10762  015076  0100               	movlb	0	; () banked
 10763  015078  517F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10764  01507A  0F98               	addlw	152
 10765  01507C  0100               	movlb	0	; () banked
 10766  01507E  5F80               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10767                           
 10768                           ; BSR set to: 0
 10769  015080  0E18               	movlw	24
 10770  015082  0100               	movlb	0	; () banked
 10771  015084  6F7F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10772  015086                     l1350:
 10773                           
 10774                           ; BSR set to: 0
 10775  015086  0100               	movlb	0	; () banked
 10776  015088  90D8               	bcf	status,0,c
 10777  01508A  377B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10778  01508C  377C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10779  01508E  377D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10780  015090  377E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10781                           
 10782                           ; BSR set to: 0
 10783  015092  0100               	movlb	0	; () banked
 10784  015094  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10785  015096  0100               	movlb	0	; () banked
 10786  015098  5D70               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 10787  01509A  0100               	movlb	0	; () banked
 10788  01509C  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10789  01509E  0100               	movlb	0	; () banked
 10790  0150A0  5971               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10791  0150A2  0100               	movlb	0	; () banked
 10792  0150A4  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10793  0150A6  0100               	movlb	0	; () banked
 10794  0150A8  5972               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10795  0150AA  A0D8               	btfss	status,0,c
 10796  0150AC  D00E               	goto	l1351
 10797                           
 10798                           ; BSR set to: 0
 10799  0150AE  0100               	movlb	0	; () banked
 10800  0150B0  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10801  0150B2  0100               	movlb	0	; () banked
 10802  0150B4  5F70               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10803  0150B6  0100               	movlb	0	; () banked
 10804  0150B8  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10805  0150BA  0100               	movlb	0	; () banked
 10806  0150BC  5B71               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10807  0150BE  0100               	movlb	0	; () banked
 10808  0150C0  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10809  0150C2  0100               	movlb	0	; () banked
 10810  0150C4  5B72               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10811                           
 10812                           ; BSR set to: 0
 10813  0150C6  0100               	movlb	0	; () banked
 10814  0150C8  817B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 10815  0150CA                     l1351:
 10816                           
 10817                           ; BSR set to: 0
 10818  0150CA  0100               	movlb	0	; () banked
 10819  0150CC  90D8               	bcf	status,0,c
 10820  0150CE  3770               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10821  0150D0  3771               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10822  0150D2  3772               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10823                           
 10824                           ; BSR set to: 0
 10825  0150D4  0100               	movlb	0	; () banked
 10826  0150D6  2F7F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 10827  0150D8  D7D6               	goto	l1350
 10828                           
 10829                           ; BSR set to: 0
 10830                           
 10831                           ; BSR set to: 0
 10832  0150DA  0100               	movlb	0	; () banked
 10833  0150DC  AF80               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 10834  0150DE  D01A               	goto	l8434
 10835                           
 10836                           ; BSR set to: 0
 10837  0150E0  0100               	movlb	0	; () banked
 10838  0150E2  5180               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10839  0150E4  0A80               	xorlw	128
 10840  0150E6  0F97               	addlw	151
 10841  0150E8  B0D8               	btfsc	status,0,c
 10842  0150EA  D00A               	goto	l8430
 10843                           
 10844                           ; BSR set to: 0
 10845  0150EC  0E00               	movlw	0
 10846  0150EE  0100               	movlb	0	; () banked
 10847  0150F0  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 10848  0150F2  0E00               	movlw	0
 10849  0150F4  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10850  0150F6  0E00               	movlw	0
 10851  0150F8  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10852  0150FA  0E00               	movlw	0
 10853  0150FC  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10854                           
 10855                           ; BSR set to: 0
 10856  0150FE  0012               	return	
 10857  015100                     l8430:
 10858                           
 10859                           ; BSR set to: 0
 10860  015100  0100               	movlb	0	; () banked
 10861  015102  90D8               	bcf	status,0,c
 10862  015104  337E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10863  015106  337D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10864  015108  337C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10865  01510A  337B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 10866                           
 10867                           ; BSR set to: 0
 10868  01510C  0100               	movlb	0	; () banked
 10869  01510E  3F80               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 10870  015110  D7F7               	goto	l8430
 10871                           
 10872                           ; BSR set to: 0
 10873  015112  D01B               	goto	l1357
 10874  015114                     l8434:
 10875                           
 10876                           ; BSR set to: 0
 10877  015114  0E17               	movlw	23
 10878  015116  0100               	movlb	0	; () banked
 10879  015118  6580               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 10880  01511A  D012               	goto	l8442
 10881                           
 10882                           ; BSR set to: 0
 10883  01511C  0E00               	movlw	0
 10884  01511E  0100               	movlb	0	; () banked
 10885  015120  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 10886  015122  0E00               	movlw	0
 10887  015124  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10888  015126  0E00               	movlw	0
 10889  015128  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10890  01512A  0E00               	movlw	0
 10891  01512C  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10892                           
 10893                           ; BSR set to: 0
 10894  01512E  0012               	return	
 10895  015130                     l8440:
 10896                           
 10897                           ; BSR set to: 0
 10898  015130  0100               	movlb	0	; () banked
 10899  015132  90D8               	bcf	status,0,c
 10900  015134  377B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10901  015136  377C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10902  015138  377D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10903  01513A  377E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10904  01513C  0100               	movlb	0	; () banked
 10905  01513E  0780               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 10906  015140                     l8442:
 10907                           
 10908                           ; BSR set to: 0
 10909  015140  0100               	movlb	0	; () banked
 10910  015142  5180               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10911  015144  0100               	movlb	0	; () banked
 10912  015146  A4D8               	btfss	status,2,c
 10913  015148  D7F3               	goto	l8440
 10914  01514A                     l1357:
 10915                           
 10916                           ; BSR set to: 0
 10917  01514A  C07B  F070         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10918  01514E  C07C  F071         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10919  015152  C07D  F072         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10920  015156  C07E  F073         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10921                           
 10922                           ; BSR set to: 0
 10923  01515A  0012               	return		;funcret
 10924  01515C                     __end_of__tdiv_to_l_:
 10925                           	opt stack 0
 10926                           tblptru	equ	0xFF8
 10927                           tblptrh	equ	0xFF7
 10928                           tblptrl	equ	0xFF6
 10929                           tablat	equ	0xFF5
 10930                           prodh	equ	0xFF4
 10931                           prodl	equ	0xFF3
 10932                           intcon	equ	0xFF2
 10933                           postinc0	equ	0xFEE
 10934                           wreg	equ	0xFE8
 10935                           indf2	equ	0xFDF
 10936                           postinc2	equ	0xFDE
 10937                           fsr2h	equ	0xFDA
 10938                           fsr2l	equ	0xFD9
 10939                           status	equ	0xFD8
 10940                           
 10941 ;; *************** function __div_to_l_ *****************
 10942 ;; Defined at:
 10943 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
 10944 ;; Parameters:    Size  Location     Type
 10945 ;;  f1              4   16[BANK0 ] unsigned long 
 10946 ;;  f2              4   20[BANK0 ] unsigned long 
 10947 ;; Auto vars:     Size  Location     Type
 10948 ;;  quot            4   24[BANK0 ] unsigned long 
 10949 ;;  exp1            1   29[BANK0 ] unsigned char 
 10950 ;;  cntr            1   28[BANK0 ] unsigned char 
 10951 ;; Return value:  Size  Location     Type
 10952 ;;                  4   16[BANK0 ] unsigned long 
 10953 ;; Registers used:
 10954 ;;		wreg, status,2, status,0
 10955 ;; Tracked objects:
 10956 ;;		On entry : 0/0
 10957 ;;		On exit  : 0/0
 10958 ;;		Unchanged: 0/0
 10959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10960 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10961 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10963 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10964 ;;Total ram usage:       14 bytes
 10965 ;; Hardware stack levels used:    1
 10966 ;; Hardware stack levels required when called:    3
 10967 ;; This function calls:
 10968 ;;		Nothing
 10969 ;; This function is called by:
 10970 ;;		_sprintf
 10971 ;; This function uses a non-reentrant model
 10972 ;;
 10973                           
 10974                           	psect	text18
 10975  0152EC                     __ptext18:
 10976                           	opt stack 0
 10977  0152EC                     __div_to_l_:
 10978                           	opt stack 25
 10979                           
 10980                           ; BSR set to: 0
 10981                           ;incstack = 0
 10982  0152EC  0100               	movlb	0	; () banked
 10983  0152EE  3572               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10984  0152F0  3573               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10985  0152F2  0100               	movlb	0	; () banked
 10986  0152F4  6F7D               	movwf	__div_to_l_@exp1& (0+255),b
 10987  0152F6  0100               	movlb	0	; () banked
 10988  0152F8  517D               	movf	__div_to_l_@exp1& (0+255),w,b
 10989  0152FA  A4D8               	btfss	status,2,c
 10990  0152FC  D00A               	goto	l8450
 10991                           
 10992                           ; BSR set to: 0
 10993  0152FE  0E00               	movlw	0
 10994  015300  0100               	movlb	0	; () banked
 10995  015302  6F70               	movwf	?__div_to_l_& (0+255),b
 10996  015304  0E00               	movlw	0
 10997  015306  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 10998  015308  0E00               	movlw	0
 10999  01530A  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 11000  01530C  0E00               	movlw	0
 11001  01530E  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 11002                           
 11003                           ; BSR set to: 0
 11004  015310  0012               	return	
 11005  015312                     l8450:
 11006                           
 11007                           ; BSR set to: 0
 11008  015312  0100               	movlb	0	; () banked
 11009  015314  3576               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 11010  015316  3577               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 11011  015318  0100               	movlb	0	; () banked
 11012  01531A  6F7C               	movwf	__div_to_l_@cntr& (0+255),b
 11013  01531C  0100               	movlb	0	; () banked
 11014  01531E  517C               	movf	__div_to_l_@cntr& (0+255),w,b
 11015  015320  A4D8               	btfss	status,2,c
 11016  015322  D00A               	goto	l8456
 11017                           
 11018                           ; BSR set to: 0
 11019  015324  0E00               	movlw	0
 11020  015326  0100               	movlb	0	; () banked
 11021  015328  6F70               	movwf	?__div_to_l_& (0+255),b
 11022  01532A  0E00               	movlw	0
 11023  01532C  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 11024  01532E  0E00               	movlw	0
 11025  015330  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 11026  015332  0E00               	movlw	0
 11027  015334  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 11028                           
 11029                           ; BSR set to: 0
 11030  015336  0012               	return	
 11031  015338                     l8456:
 11032                           
 11033                           ; BSR set to: 0
 11034  015338  0100               	movlb	0	; () banked
 11035  01533A  8F72               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 11036                           
 11037                           ; BSR set to: 0
 11038  01533C  0EFF               	movlw	255
 11039  01533E  0100               	movlb	0	; () banked
 11040  015340  1770               	andwf	__div_to_l_@f1& (0+255),f,b
 11041  015342  0EFF               	movlw	255
 11042  015344  1771               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 11043  015346  0EFF               	movlw	255
 11044  015348  1772               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 11045  01534A  0E00               	movlw	0
 11046  01534C  1773               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 11047                           
 11048                           ; BSR set to: 0
 11049  01534E  0100               	movlb	0	; () banked
 11050  015350  8F76               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 11051  015352  0EFF               	movlw	255
 11052  015354  0100               	movlb	0	; () banked
 11053  015356  1774               	andwf	__div_to_l_@f2& (0+255),f,b
 11054  015358  0EFF               	movlw	255
 11055  01535A  1775               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 11056  01535C  0EFF               	movlw	255
 11057  01535E  1776               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 11058  015360  0E00               	movlw	0
 11059  015362  1777               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 11060                           
 11061                           ; BSR set to: 0
 11062  015364  0E00               	movlw	0
 11063  015366  0100               	movlb	0	; () banked
 11064  015368  6F78               	movwf	__div_to_l_@quot& (0+255),b
 11065  01536A  0E00               	movlw	0
 11066  01536C  6F79               	movwf	(__div_to_l_@quot+1)& (0+255),b
 11067  01536E  0E00               	movlw	0
 11068  015370  6F7A               	movwf	(__div_to_l_@quot+2)& (0+255),b
 11069  015372  0E00               	movlw	0
 11070  015374  6F7B               	movwf	(__div_to_l_@quot+3)& (0+255),b
 11071                           
 11072                           ; BSR set to: 0
 11073  015376  0E7F               	movlw	127
 11074  015378  0100               	movlb	0	; () banked
 11075  01537A  5F7D               	subwf	__div_to_l_@exp1& (0+255),f,b
 11076                           
 11077                           ; BSR set to: 0
 11078  01537C  0100               	movlb	0	; () banked
 11079  01537E  517C               	movf	__div_to_l_@cntr& (0+255),w,b
 11080  015380  0FA0               	addlw	160
 11081  015382  0100               	movlb	0	; () banked
 11082  015384  5F7D               	subwf	__div_to_l_@exp1& (0+255),f,b
 11083                           
 11084                           ; BSR set to: 0
 11085  015386  0E20               	movlw	32
 11086  015388  0100               	movlb	0	; () banked
 11087  01538A  6F7C               	movwf	__div_to_l_@cntr& (0+255),b
 11088  01538C                     l8470:
 11089                           
 11090                           ; BSR set to: 0
 11091  01538C  0100               	movlb	0	; () banked
 11092  01538E  90D8               	bcf	status,0,c
 11093  015390  3778               	rlcf	__div_to_l_@quot& (0+255),f,b
 11094  015392  3779               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11095  015394  377A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11096  015396  377B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11097                           
 11098                           ; BSR set to: 0
 11099  015398  0100               	movlb	0	; () banked
 11100  01539A  5174               	movf	__div_to_l_@f2& (0+255),w,b
 11101  01539C  0100               	movlb	0	; () banked
 11102  01539E  5D70               	subwf	__div_to_l_@f1& (0+255),w,b
 11103  0153A0  0100               	movlb	0	; () banked
 11104  0153A2  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11105  0153A4  0100               	movlb	0	; () banked
 11106  0153A6  5971               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 11107  0153A8  0100               	movlb	0	; () banked
 11108  0153AA  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11109  0153AC  0100               	movlb	0	; () banked
 11110  0153AE  5972               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 11111  0153B0  0100               	movlb	0	; () banked
 11112  0153B2  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11113  0153B4  0100               	movlb	0	; () banked
 11114  0153B6  5973               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 11115  0153B8  A0D8               	btfss	status,0,c
 11116  0153BA  D012               	goto	l8478
 11117                           
 11118                           ; BSR set to: 0
 11119  0153BC  0100               	movlb	0	; () banked
 11120  0153BE  5174               	movf	__div_to_l_@f2& (0+255),w,b
 11121  0153C0  0100               	movlb	0	; () banked
 11122  0153C2  5F70               	subwf	__div_to_l_@f1& (0+255),f,b
 11123  0153C4  0100               	movlb	0	; () banked
 11124  0153C6  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11125  0153C8  0100               	movlb	0	; () banked
 11126  0153CA  5B71               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 11127  0153CC  0100               	movlb	0	; () banked
 11128  0153CE  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11129  0153D0  0100               	movlb	0	; () banked
 11130  0153D2  5B72               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 11131  0153D4  0100               	movlb	0	; () banked
 11132  0153D6  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11133  0153D8  0100               	movlb	0	; () banked
 11134  0153DA  5B73               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 11135                           
 11136                           ; BSR set to: 0
 11137  0153DC  0100               	movlb	0	; () banked
 11138  0153DE  8178               	bsf	__div_to_l_@quot& (0+255),0,b
 11139  0153E0                     l8478:
 11140                           
 11141                           ; BSR set to: 0
 11142  0153E0  0100               	movlb	0	; () banked
 11143  0153E2  90D8               	bcf	status,0,c
 11144  0153E4  3770               	rlcf	__div_to_l_@f1& (0+255),f,b
 11145  0153E6  3771               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 11146  0153E8  3772               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 11147  0153EA  3773               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 11148                           
 11149                           ; BSR set to: 0
 11150  0153EC  0100               	movlb	0	; () banked
 11151  0153EE  2F7C               	decfsz	__div_to_l_@cntr& (0+255),f,b
 11152  0153F0  D7CD               	goto	l8470
 11153                           
 11154                           ; BSR set to: 0
 11155                           
 11156                           ; BSR set to: 0
 11157  0153F2  0100               	movlb	0	; () banked
 11158  0153F4  AF7D               	btfss	__div_to_l_@exp1& (0+255),7,b
 11159  0153F6  D01A               	goto	l8494
 11160                           
 11161                           ; BSR set to: 0
 11162  0153F8  0100               	movlb	0	; () banked
 11163  0153FA  517D               	movf	__div_to_l_@exp1& (0+255),w,b
 11164  0153FC  0A80               	xorlw	128
 11165  0153FE  0F9F               	addlw	159
 11166  015400  B0D8               	btfsc	status,0,c
 11167  015402  D00A               	goto	l8490
 11168                           
 11169                           ; BSR set to: 0
 11170  015404  0E00               	movlw	0
 11171  015406  0100               	movlb	0	; () banked
 11172  015408  6F70               	movwf	?__div_to_l_& (0+255),b
 11173  01540A  0E00               	movlw	0
 11174  01540C  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 11175  01540E  0E00               	movlw	0
 11176  015410  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 11177  015412  0E00               	movlw	0
 11178  015414  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 11179                           
 11180                           ; BSR set to: 0
 11181  015416  0012               	return	
 11182  015418                     l8490:
 11183                           
 11184                           ; BSR set to: 0
 11185  015418  0100               	movlb	0	; () banked
 11186  01541A  90D8               	bcf	status,0,c
 11187  01541C  337B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 11188  01541E  337A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 11189  015420  3379               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 11190  015422  3378               	rrcf	__div_to_l_@quot& (0+255),f,b
 11191                           
 11192                           ; BSR set to: 0
 11193  015424  0100               	movlb	0	; () banked
 11194  015426  3F7D               	incfsz	__div_to_l_@exp1& (0+255),f,b
 11195  015428  D7F7               	goto	l8490
 11196                           
 11197                           ; BSR set to: 0
 11198  01542A  D01B               	goto	l1253
 11199  01542C                     l8494:
 11200                           
 11201                           ; BSR set to: 0
 11202  01542C  0E1F               	movlw	31
 11203  01542E  0100               	movlb	0	; () banked
 11204  015430  657D               	cpfsgt	__div_to_l_@exp1& (0+255),b
 11205  015432  D012               	goto	l8502
 11206                           
 11207                           ; BSR set to: 0
 11208  015434  0E00               	movlw	0
 11209  015436  0100               	movlb	0	; () banked
 11210  015438  6F70               	movwf	?__div_to_l_& (0+255),b
 11211  01543A  0E00               	movlw	0
 11212  01543C  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 11213  01543E  0E00               	movlw	0
 11214  015440  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 11215  015442  0E00               	movlw	0
 11216  015444  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 11217                           
 11218                           ; BSR set to: 0
 11219  015446  0012               	return	
 11220  015448                     l8500:
 11221                           
 11222                           ; BSR set to: 0
 11223  015448  0100               	movlb	0	; () banked
 11224  01544A  90D8               	bcf	status,0,c
 11225  01544C  3778               	rlcf	__div_to_l_@quot& (0+255),f,b
 11226  01544E  3779               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11227  015450  377A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11228  015452  377B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11229  015454  0100               	movlb	0	; () banked
 11230  015456  077D               	decf	__div_to_l_@exp1& (0+255),f,b
 11231  015458                     l8502:
 11232                           
 11233                           ; BSR set to: 0
 11234  015458  0100               	movlb	0	; () banked
 11235  01545A  517D               	movf	__div_to_l_@exp1& (0+255),w,b
 11236  01545C  0100               	movlb	0	; () banked
 11237  01545E  A4D8               	btfss	status,2,c
 11238  015460  D7F3               	goto	l8500
 11239  015462                     l1253:
 11240                           
 11241                           ; BSR set to: 0
 11242  015462  C078  F070         	movff	__div_to_l_@quot,?__div_to_l_
 11243  015466  C079  F071         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 11244  01546A  C07A  F072         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 11245  01546E  C07B  F073         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 11246                           
 11247                           ; BSR set to: 0
 11248  015472  0012               	return		;funcret
 11249  015474                     __end_of__div_to_l_:
 11250                           	opt stack 0
 11251                           tblptru	equ	0xFF8
 11252                           tblptrh	equ	0xFF7
 11253                           tblptrl	equ	0xFF6
 11254                           tablat	equ	0xFF5
 11255                           prodh	equ	0xFF4
 11256                           prodl	equ	0xFF3
 11257                           intcon	equ	0xFF2
 11258                           postinc0	equ	0xFEE
 11259                           wreg	equ	0xFE8
 11260                           indf2	equ	0xFDF
 11261                           postinc2	equ	0xFDE
 11262                           fsr2h	equ	0xFDA
 11263                           fsr2l	equ	0xFD9
 11264                           status	equ	0xFD8
 11265                           
 11266 ;; *************** function ___xxtofl *****************
 11267 ;; Defined at:
 11268 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
 11269 ;; Parameters:    Size  Location     Type
 11270 ;;  sign            1    wreg     unsigned char 
 11271 ;;  val             4   16[BANK0 ] long 
 11272 ;; Auto vars:     Size  Location     Type
 11273 ;;  sign            1   24[BANK0 ] unsigned char 
 11274 ;;  arg             4   26[BANK0 ] unsigned long 
 11275 ;;  exp             1   25[BANK0 ] unsigned char 
 11276 ;; Return value:  Size  Location     Type
 11277 ;;                  4   16[BANK0 ] unsigned char 
 11278 ;; Registers used:
 11279 ;;		wreg, status,2, status,0
 11280 ;; Tracked objects:
 11281 ;;		On entry : 0/0
 11282 ;;		On exit  : 0/0
 11283 ;;		Unchanged: 0/0
 11284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11285 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11286 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11287 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11288 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11289 ;;Total ram usage:       14 bytes
 11290 ;; Hardware stack levels used:    1
 11291 ;; Hardware stack levels required when called:    3
 11292 ;; This function calls:
 11293 ;;		Nothing
 11294 ;; This function is called by:
 11295 ;;		_main
 11296 ;;		_LCD_Handler
 11297 ;;		_sprintf
 11298 ;; This function uses a non-reentrant model
 11299 ;;
 11300                           
 11301                           	psect	text19
 11302  0148BC                     __ptext19:
 11303                           	opt stack 0
 11304  0148BC                     ___xxtofl:
 11305                           	opt stack 27
 11306                           
 11307                           ; BSR set to: 0
 11308                           ;incstack = 0
 11309                           ;___xxtofl@sign stored from wreg
 11310  0148BC  0100               	movlb	0	; () banked
 11311  0148BE  6F78               	movwf	___xxtofl@sign& (0+255),b
 11312  0148C0  0100               	movlb	0	; () banked
 11313  0148C2  5178               	movf	___xxtofl@sign& (0+255),w,b
 11314  0148C4  0100               	movlb	0	; () banked
 11315  0148C6  B4D8               	btfsc	status,2,c
 11316  0148C8  D01E               	goto	l1648
 11317                           
 11318                           ; BSR set to: 0
 11319  0148CA  0100               	movlb	0	; () banked
 11320  0148CC  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
 11321  0148CE  D01B               	goto	l1648
 11322                           
 11323                           ; BSR set to: 0
 11324  0148D0  C070  F074         	movff	___xxtofl@val,??___xxtofl
 11325  0148D4  C071  F075         	movff	___xxtofl@val+1,??___xxtofl+1
 11326  0148D8  C072  F076         	movff	___xxtofl@val+2,??___xxtofl+2
 11327  0148DC  C073  F077         	movff	___xxtofl@val+3,??___xxtofl+3
 11328  0148E0  0100               	movlb	0	; () banked
 11329  0148E2  1F74               	comf	??___xxtofl& (0+255),f,b
 11330  0148E4  1F75               	comf	(??___xxtofl+1)& (0+255),f,b
 11331  0148E6  1F76               	comf	(??___xxtofl+2)& (0+255),f,b
 11332  0148E8  1F77               	comf	(??___xxtofl+3)& (0+255),f,b
 11333  0148EA  2B74               	incf	??___xxtofl& (0+255),f,b
 11334  0148EC  0E00               	movlw	0
 11335  0148EE  2375               	addwfc	(??___xxtofl+1)& (0+255),f,b
 11336  0148F0  2376               	addwfc	(??___xxtofl+2)& (0+255),f,b
 11337  0148F2  2377               	addwfc	(??___xxtofl+3)& (0+255),f,b
 11338  0148F4  C074  F07A         	movff	??___xxtofl,___xxtofl@arg
 11339  0148F8  C075  F07B         	movff	??___xxtofl+1,___xxtofl@arg+1
 11340  0148FC  C076  F07C         	movff	??___xxtofl+2,___xxtofl@arg+2
 11341  014900  C077  F07D         	movff	??___xxtofl+3,___xxtofl@arg+3
 11342  014904  D008               	goto	l8628
 11343  014906                     l1648:
 11344                           
 11345                           ; BSR set to: 0
 11346  014906  C070  F07A         	movff	___xxtofl@val,___xxtofl@arg
 11347  01490A  C071  F07B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11348  01490E  C072  F07C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11349  014912  C073  F07D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11350  014916                     l8628:
 11351                           
 11352                           ; BSR set to: 0
 11353  014916  0100               	movlb	0	; () banked
 11354  014918  5170               	movf	___xxtofl@val& (0+255),w,b
 11355  01491A  0100               	movlb	0	; () banked
 11356  01491C  1171               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 11357  01491E  0100               	movlb	0	; () banked
 11358  014920  1172               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 11359  014922  0100               	movlb	0	; () banked
 11360  014924  1173               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 11361  014926  A4D8               	btfss	status,2,c
 11362  014928  D00A               	goto	l8634
 11363                           
 11364                           ; BSR set to: 0
 11365  01492A  0E00               	movlw	0
 11366  01492C  0100               	movlb	0	; () banked
 11367  01492E  6F70               	movwf	?___xxtofl& (0+255),b
 11368  014930  0E00               	movlw	0
 11369  014932  6F71               	movwf	(?___xxtofl+1)& (0+255),b
 11370  014934  0E00               	movlw	0
 11371  014936  6F72               	movwf	(?___xxtofl+2)& (0+255),b
 11372  014938  0E00               	movlw	0
 11373  01493A  6F73               	movwf	(?___xxtofl+3)& (0+255),b
 11374                           
 11375                           ; BSR set to: 0
 11376  01493C  0012               	return	
 11377  01493E                     l8634:
 11378                           
 11379                           ; BSR set to: 0
 11380  01493E  0E96               	movlw	150
 11381  014940  0100               	movlb	0	; () banked
 11382  014942  6F79               	movwf	___xxtofl@exp& (0+255),b
 11383  014944  D008               	goto	l8638
 11384  014946                     l8636:
 11385                           
 11386                           ; BSR set to: 0
 11387  014946  0100               	movlb	0	; () banked
 11388  014948  2B79               	incf	___xxtofl@exp& (0+255),f,b
 11389  01494A  0100               	movlb	0	; () banked
 11390  01494C  90D8               	bcf	status,0,c
 11391  01494E  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 11392  014950  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 11393  014952  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 11394  014954  337A               	rrcf	___xxtofl@arg& (0+255),f,b
 11395  014956                     l8638:
 11396                           
 11397                           ; BSR set to: 0
 11398  014956  0E00               	movlw	0
 11399  014958  0100               	movlb	0	; () banked
 11400  01495A  157A               	andwf	___xxtofl@arg& (0+255),w,b
 11401  01495C  0100               	movlb	0	; () banked
 11402  01495E  6F74               	movwf	??___xxtofl& (0+255),b
 11403  014960  0E00               	movlw	0
 11404  014962  0100               	movlb	0	; () banked
 11405  014964  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 11406  014966  0100               	movlb	0	; () banked
 11407  014968  6F75               	movwf	(??___xxtofl+1)& (0+255),b
 11408  01496A  0E00               	movlw	0
 11409  01496C  0100               	movlb	0	; () banked
 11410  01496E  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 11411  014970  0100               	movlb	0	; () banked
 11412  014972  6F76               	movwf	(??___xxtofl+2)& (0+255),b
 11413  014974  0EFE               	movlw	254
 11414  014976  0100               	movlb	0	; () banked
 11415  014978  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 11416  01497A  0100               	movlb	0	; () banked
 11417  01497C  6F77               	movwf	(??___xxtofl+3)& (0+255),b
 11418  01497E  0100               	movlb	0	; () banked
 11419  014980  5174               	movf	??___xxtofl& (0+255),w,b
 11420  014982  0100               	movlb	0	; () banked
 11421  014984  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
 11422  014986  0100               	movlb	0	; () banked
 11423  014988  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
 11424  01498A  0100               	movlb	0	; () banked
 11425  01498C  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
 11426  01498E  B4D8               	btfsc	status,2,c
 11427  014990  D010               	goto	l1655
 11428  014992  D7D9               	goto	l8636
 11429  014994                     l8640:
 11430                           
 11431                           ; BSR set to: 0
 11432  014994  0100               	movlb	0	; () banked
 11433  014996  2B79               	incf	___xxtofl@exp& (0+255),f,b
 11434                           
 11435                           ; BSR set to: 0
 11436  014998  0E01               	movlw	1
 11437  01499A  0100               	movlb	0	; () banked
 11438  01499C  277A               	addwf	___xxtofl@arg& (0+255),f,b
 11439  01499E  0E00               	movlw	0
 11440  0149A0  237B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 11441  0149A2  237C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 11442  0149A4  237D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 11443                           
 11444                           ; BSR set to: 0
 11445  0149A6  0100               	movlb	0	; () banked
 11446  0149A8  90D8               	bcf	status,0,c
 11447  0149AA  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 11448  0149AC  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 11449  0149AE  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 11450  0149B0  337A               	rrcf	___xxtofl@arg& (0+255),f,b
 11451  0149B2                     l1655:
 11452                           
 11453                           ; BSR set to: 0
 11454  0149B2  0E00               	movlw	0
 11455  0149B4  0100               	movlb	0	; () banked
 11456  0149B6  157A               	andwf	___xxtofl@arg& (0+255),w,b
 11457  0149B8  0100               	movlb	0	; () banked
 11458  0149BA  6F74               	movwf	??___xxtofl& (0+255),b
 11459  0149BC  0E00               	movlw	0
 11460  0149BE  0100               	movlb	0	; () banked
 11461  0149C0  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 11462  0149C2  0100               	movlb	0	; () banked
 11463  0149C4  6F75               	movwf	(??___xxtofl+1)& (0+255),b
 11464  0149C6  0E00               	movlw	0
 11465  0149C8  0100               	movlb	0	; () banked
 11466  0149CA  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 11467  0149CC  0100               	movlb	0	; () banked
 11468  0149CE  6F76               	movwf	(??___xxtofl+2)& (0+255),b
 11469  0149D0  0EFF               	movlw	255
 11470  0149D2  0100               	movlb	0	; () banked
 11471  0149D4  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 11472  0149D6  0100               	movlb	0	; () banked
 11473  0149D8  6F77               	movwf	(??___xxtofl+3)& (0+255),b
 11474  0149DA  0100               	movlb	0	; () banked
 11475  0149DC  5174               	movf	??___xxtofl& (0+255),w,b
 11476  0149DE  0100               	movlb	0	; () banked
 11477  0149E0  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
 11478  0149E2  0100               	movlb	0	; () banked
 11479  0149E4  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
 11480  0149E6  0100               	movlb	0	; () banked
 11481  0149E8  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
 11482  0149EA  B4D8               	btfsc	status,2,c
 11483  0149EC  D009               	goto	l8648
 11484  0149EE  D7D2               	goto	l8640
 11485  0149F0                     l8646:
 11486                           
 11487                           ; BSR set to: 0
 11488  0149F0  0100               	movlb	0	; () banked
 11489  0149F2  0779               	decf	___xxtofl@exp& (0+255),f,b
 11490  0149F4  0100               	movlb	0	; () banked
 11491  0149F6  90D8               	bcf	status,0,c
 11492  0149F8  377A               	rlcf	___xxtofl@arg& (0+255),f,b
 11493  0149FA  377B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 11494  0149FC  377C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 11495  0149FE  377D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 11496  014A00                     l8648:
 11497                           
 11498                           ; BSR set to: 0
 11499  014A00  0100               	movlb	0	; () banked
 11500  014A02  BF7C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 11501  014A04  D004               	goto	l1662
 11502                           
 11503                           ; BSR set to: 0
 11504  014A06  0E02               	movlw	2
 11505  014A08  0100               	movlb	0	; () banked
 11506  014A0A  6179               	cpfslt	___xxtofl@exp& (0+255),b
 11507  014A0C  D7F1               	goto	l8646
 11508  014A0E                     l1662:
 11509                           
 11510                           ; BSR set to: 0
 11511  014A0E  0100               	movlb	0	; () banked
 11512  014A10  B179               	btfsc	___xxtofl@exp& (0+255),0,b
 11513  014A12  D009               	goto	l1663
 11514                           
 11515                           ; BSR set to: 0
 11516  014A14  0EFF               	movlw	255
 11517  014A16  0100               	movlb	0	; () banked
 11518  014A18  177A               	andwf	___xxtofl@arg& (0+255),f,b
 11519  014A1A  0EFF               	movlw	255
 11520  014A1C  177B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 11521  014A1E  0E7F               	movlw	127
 11522  014A20  177C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 11523  014A22  0EFF               	movlw	255
 11524  014A24  177D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 11525  014A26                     l1663:
 11526                           
 11527                           ; BSR set to: 0
 11528  014A26  0100               	movlb	0	; () banked
 11529  014A28  90D8               	bcf	status,0,c
 11530  014A2A  3379               	rrcf	___xxtofl@exp& (0+255),f,b
 11531  014A2C  C079  F074         	movff	___xxtofl@exp,??___xxtofl
 11532  014A30  0100               	movlb	0	; () banked
 11533  014A32  6B75               	clrf	(??___xxtofl+1)& (0+255),b
 11534  014A34  6B76               	clrf	(??___xxtofl+2)& (0+255),b
 11535  014A36  6B77               	clrf	(??___xxtofl+3)& (0+255),b
 11536  014A38  C074  F077         	movff	??___xxtofl,??___xxtofl+3
 11537  014A3C  0100               	movlb	0	; () banked
 11538  014A3E  6B76               	clrf	(??___xxtofl+2)& (0+255),b
 11539  014A40  6B75               	clrf	(??___xxtofl+1)& (0+255),b
 11540  014A42  6B74               	clrf	??___xxtofl& (0+255),b
 11541  014A44  0100               	movlb	0	; () banked
 11542  014A46  5174               	movf	??___xxtofl& (0+255),w,b
 11543  014A48  0100               	movlb	0	; () banked
 11544  014A4A  137A               	iorwf	___xxtofl@arg& (0+255),f,b
 11545  014A4C  0100               	movlb	0	; () banked
 11546  014A4E  5175               	movf	(??___xxtofl+1)& (0+255),w,b
 11547  014A50  0100               	movlb	0	; () banked
 11548  014A52  137B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 11549  014A54  0100               	movlb	0	; () banked
 11550  014A56  5176               	movf	(??___xxtofl+2)& (0+255),w,b
 11551  014A58  0100               	movlb	0	; () banked
 11552  014A5A  137C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 11553  014A5C  0100               	movlb	0	; () banked
 11554  014A5E  5177               	movf	(??___xxtofl+3)& (0+255),w,b
 11555  014A60  0100               	movlb	0	; () banked
 11556  014A62  137D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 11557                           
 11558                           ; BSR set to: 0
 11559  014A64  0100               	movlb	0	; () banked
 11560  014A66  5178               	movf	___xxtofl@sign& (0+255),w,b
 11561  014A68  0100               	movlb	0	; () banked
 11562  014A6A  B4D8               	btfsc	status,2,c
 11563  014A6C  D005               	goto	l8660
 11564                           
 11565                           ; BSR set to: 0
 11566  014A6E  0100               	movlb	0	; () banked
 11567  014A70  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
 11568  014A72  D002               	goto	l8660
 11569                           
 11570                           ; BSR set to: 0
 11571  014A74  0100               	movlb	0	; () banked
 11572  014A76  8F7D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 11573  014A78                     l8660:
 11574                           
 11575                           ; BSR set to: 0
 11576  014A78  C07A  F070         	movff	___xxtofl@arg,?___xxtofl
 11577  014A7C  C07B  F071         	movff	___xxtofl@arg+1,?___xxtofl+1
 11578  014A80  C07C  F072         	movff	___xxtofl@arg+2,?___xxtofl+2
 11579  014A84  C07D  F073         	movff	___xxtofl@arg+3,?___xxtofl+3
 11580  014A88  0012               	return	
 11581  014A8A                     __end_of___xxtofl:
 11582                           	opt stack 0
 11583                           tblptru	equ	0xFF8
 11584                           tblptrh	equ	0xFF7
 11585                           tblptrl	equ	0xFF6
 11586                           tablat	equ	0xFF5
 11587                           prodh	equ	0xFF4
 11588                           prodl	equ	0xFF3
 11589                           intcon	equ	0xFF2
 11590                           postinc0	equ	0xFEE
 11591                           wreg	equ	0xFE8
 11592                           indf2	equ	0xFDF
 11593                           postinc2	equ	0xFDE
 11594                           fsr2h	equ	0xFDA
 11595                           fsr2l	equ	0xFD9
 11596                           status	equ	0xFD8
 11597                           
 11598 ;; *************** function ___llmod *****************
 11599 ;; Defined at:
 11600 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 11601 ;; Parameters:    Size  Location     Type
 11602 ;;  dividend        4   16[BANK0 ] unsigned long 
 11603 ;;  divisor         4   20[BANK0 ] unsigned long 
 11604 ;; Auto vars:     Size  Location     Type
 11605 ;;  counter         1   24[BANK0 ] unsigned char 
 11606 ;; Return value:  Size  Location     Type
 11607 ;;                  4   16[BANK0 ] unsigned long 
 11608 ;; Registers used:
 11609 ;;		wreg, status,2, status,0
 11610 ;; Tracked objects:
 11611 ;;		On entry : 0/0
 11612 ;;		On exit  : 0/0
 11613 ;;		Unchanged: 0/0
 11614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11615 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11616 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11618 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11619 ;;Total ram usage:        9 bytes
 11620 ;; Hardware stack levels used:    1
 11621 ;; Hardware stack levels required when called:    3
 11622 ;; This function calls:
 11623 ;;		Nothing
 11624 ;; This function is called by:
 11625 ;;		_sprintf
 11626 ;; This function uses a non-reentrant model
 11627 ;;
 11628                           
 11629                           	psect	text20
 11630  015CC0                     __ptext20:
 11631                           	opt stack 0
 11632  015CC0                     ___llmod:
 11633                           	opt stack 25
 11634                           
 11635                           ; BSR set to: 0
 11636                           ;incstack = 0
 11637  015CC0  0100               	movlb	0	; () banked
 11638  015CC2  5174               	movf	___llmod@divisor& (0+255),w,b
 11639  015CC4  0100               	movlb	0	; () banked
 11640  015CC6  1175               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11641  015CC8  0100               	movlb	0	; () banked
 11642  015CCA  1176               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11643  015CCC  0100               	movlb	0	; () banked
 11644  015CCE  1177               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11645  015CD0  B4D8               	btfsc	status,2,c
 11646  015CD2  D03A               	goto	l1456
 11647                           
 11648                           ; BSR set to: 0
 11649  015CD4  0E01               	movlw	1
 11650  015CD6  0100               	movlb	0	; () banked
 11651  015CD8  6F78               	movwf	___llmod@counter& (0+255),b
 11652  015CDA  D008               	goto	l8612
 11653  015CDC                     l8610:
 11654                           
 11655                           ; BSR set to: 0
 11656  015CDC  0100               	movlb	0	; () banked
 11657  015CDE  90D8               	bcf	status,0,c
 11658  015CE0  3774               	rlcf	___llmod@divisor& (0+255),f,b
 11659  015CE2  3775               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11660  015CE4  3776               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11661  015CE6  3777               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11662  015CE8  0100               	movlb	0	; () banked
 11663  015CEA  2B78               	incf	___llmod@counter& (0+255),f,b
 11664  015CEC                     l8612:
 11665                           
 11666                           ; BSR set to: 0
 11667  015CEC  0100               	movlb	0	; () banked
 11668  015CEE  AF77               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11669  015CF0  D7F5               	goto	l8610
 11670  015CF2                     l8614:
 11671                           
 11672                           ; BSR set to: 0
 11673  015CF2  0100               	movlb	0	; () banked
 11674  015CF4  5174               	movf	___llmod@divisor& (0+255),w,b
 11675  015CF6  0100               	movlb	0	; () banked
 11676  015CF8  5D70               	subwf	___llmod@dividend& (0+255),w,b
 11677  015CFA  0100               	movlb	0	; () banked
 11678  015CFC  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
 11679  015CFE  0100               	movlb	0	; () banked
 11680  015D00  5971               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11681  015D02  0100               	movlb	0	; () banked
 11682  015D04  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
 11683  015D06  0100               	movlb	0	; () banked
 11684  015D08  5972               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11685  015D0A  0100               	movlb	0	; () banked
 11686  015D0C  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
 11687  015D0E  0100               	movlb	0	; () banked
 11688  015D10  5973               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11689  015D12  A0D8               	btfss	status,0,c
 11690  015D14  D010               	goto	l8618
 11691                           
 11692                           ; BSR set to: 0
 11693  015D16  0100               	movlb	0	; () banked
 11694  015D18  5174               	movf	___llmod@divisor& (0+255),w,b
 11695  015D1A  0100               	movlb	0	; () banked
 11696  015D1C  5F70               	subwf	___llmod@dividend& (0+255),f,b
 11697  015D1E  0100               	movlb	0	; () banked
 11698  015D20  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
 11699  015D22  0100               	movlb	0	; () banked
 11700  015D24  5B71               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11701  015D26  0100               	movlb	0	; () banked
 11702  015D28  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
 11703  015D2A  0100               	movlb	0	; () banked
 11704  015D2C  5B72               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11705  015D2E  0100               	movlb	0	; () banked
 11706  015D30  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
 11707  015D32  0100               	movlb	0	; () banked
 11708  015D34  5B73               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11709  015D36                     l8618:
 11710                           
 11711                           ; BSR set to: 0
 11712  015D36  0100               	movlb	0	; () banked
 11713  015D38  90D8               	bcf	status,0,c
 11714  015D3A  3377               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11715  015D3C  3376               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11716  015D3E  3375               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11717  015D40  3374               	rrcf	___llmod@divisor& (0+255),f,b
 11718                           
 11719                           ; BSR set to: 0
 11720  015D42  0100               	movlb	0	; () banked
 11721  015D44  2F78               	decfsz	___llmod@counter& (0+255),f,b
 11722  015D46  D7D5               	goto	l8614
 11723  015D48                     l1456:
 11724                           
 11725                           ; BSR set to: 0
 11726  015D48  C070  F070         	movff	___llmod@dividend,?___llmod
 11727  015D4C  C071  F071         	movff	___llmod@dividend+1,?___llmod+1
 11728  015D50  C072  F072         	movff	___llmod@dividend+2,?___llmod+2
 11729  015D54  C073  F073         	movff	___llmod@dividend+3,?___llmod+3
 11730                           
 11731                           ; BSR set to: 0
 11732  015D58  0012               	return		;funcret
 11733  015D5A                     __end_of___llmod:
 11734                           	opt stack 0
 11735                           tblptru	equ	0xFF8
 11736                           tblptrh	equ	0xFF7
 11737                           tblptrl	equ	0xFF6
 11738                           tablat	equ	0xFF5
 11739                           prodh	equ	0xFF4
 11740                           prodl	equ	0xFF3
 11741                           intcon	equ	0xFF2
 11742                           postinc0	equ	0xFEE
 11743                           wreg	equ	0xFE8
 11744                           indf2	equ	0xFDF
 11745                           postinc2	equ	0xFDE
 11746                           fsr2h	equ	0xFDA
 11747                           fsr2l	equ	0xFD9
 11748                           status	equ	0xFD8
 11749                           
 11750 ;; *************** function ___lldiv *****************
 11751 ;; Defined at:
 11752 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 11753 ;; Parameters:    Size  Location     Type
 11754 ;;  dividend        4   16[BANK0 ] unsigned long 
 11755 ;;  divisor         4   20[BANK0 ] unsigned long 
 11756 ;; Auto vars:     Size  Location     Type
 11757 ;;  quotient        4   24[BANK0 ] unsigned long 
 11758 ;;  counter         1   28[BANK0 ] unsigned char 
 11759 ;; Return value:  Size  Location     Type
 11760 ;;                  4   16[BANK0 ] unsigned long 
 11761 ;; Registers used:
 11762 ;;		wreg, status,2, status,0
 11763 ;; Tracked objects:
 11764 ;;		On entry : 0/0
 11765 ;;		On exit  : 0/0
 11766 ;;		Unchanged: 0/0
 11767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11768 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11769 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11771 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11772 ;;Total ram usage:       13 bytes
 11773 ;; Hardware stack levels used:    1
 11774 ;; Hardware stack levels required when called:    3
 11775 ;; This function calls:
 11776 ;;		Nothing
 11777 ;; This function is called by:
 11778 ;;		_sprintf
 11779 ;; This function uses a non-reentrant model
 11780 ;;
 11781                           
 11782                           	psect	text21
 11783  015956                     __ptext21:
 11784                           	opt stack 0
 11785  015956                     ___lldiv:
 11786                           	opt stack 25
 11787                           
 11788                           ; BSR set to: 0
 11789                           ;incstack = 0
 11790  015956  0E00               	movlw	0
 11791  015958  0100               	movlb	0	; () banked
 11792  01595A  6F78               	movwf	___lldiv@quotient& (0+255),b
 11793  01595C  0E00               	movlw	0
 11794  01595E  6F79               	movwf	(___lldiv@quotient+1)& (0+255),b
 11795  015960  0E00               	movlw	0
 11796  015962  6F7A               	movwf	(___lldiv@quotient+2)& (0+255),b
 11797  015964  0E00               	movlw	0
 11798  015966  6F7B               	movwf	(___lldiv@quotient+3)& (0+255),b
 11799                           
 11800                           ; BSR set to: 0
 11801  015968  0100               	movlb	0	; () banked
 11802  01596A  5174               	movf	___lldiv@divisor& (0+255),w,b
 11803  01596C  0100               	movlb	0	; () banked
 11804  01596E  1175               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11805  015970  0100               	movlb	0	; () banked
 11806  015972  1176               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11807  015974  0100               	movlb	0	; () banked
 11808  015976  1177               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11809  015978  B4D8               	btfsc	status,2,c
 11810  01597A  D042               	goto	l1446
 11811                           
 11812                           ; BSR set to: 0
 11813  01597C  0E01               	movlw	1
 11814  01597E  0100               	movlb	0	; () banked
 11815  015980  6F7C               	movwf	___lldiv@counter& (0+255),b
 11816  015982  D008               	goto	l8592
 11817  015984                     l8590:
 11818                           
 11819                           ; BSR set to: 0
 11820  015984  0100               	movlb	0	; () banked
 11821  015986  90D8               	bcf	status,0,c
 11822  015988  3774               	rlcf	___lldiv@divisor& (0+255),f,b
 11823  01598A  3775               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11824  01598C  3776               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11825  01598E  3777               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11826  015990  0100               	movlb	0	; () banked
 11827  015992  2B7C               	incf	___lldiv@counter& (0+255),f,b
 11828  015994                     l8592:
 11829                           
 11830                           ; BSR set to: 0
 11831  015994  0100               	movlb	0	; () banked
 11832  015996  AF77               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11833  015998  D7F5               	goto	l8590
 11834  01599A                     l8594:
 11835                           
 11836                           ; BSR set to: 0
 11837  01599A  0100               	movlb	0	; () banked
 11838  01599C  90D8               	bcf	status,0,c
 11839  01599E  3778               	rlcf	___lldiv@quotient& (0+255),f,b
 11840  0159A0  3779               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11841  0159A2  377A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11842  0159A4  377B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11843                           
 11844                           ; BSR set to: 0
 11845  0159A6  0100               	movlb	0	; () banked
 11846  0159A8  5174               	movf	___lldiv@divisor& (0+255),w,b
 11847  0159AA  0100               	movlb	0	; () banked
 11848  0159AC  5D70               	subwf	___lldiv@dividend& (0+255),w,b
 11849  0159AE  0100               	movlb	0	; () banked
 11850  0159B0  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11851  0159B2  0100               	movlb	0	; () banked
 11852  0159B4  5971               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11853  0159B6  0100               	movlb	0	; () banked
 11854  0159B8  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11855  0159BA  0100               	movlb	0	; () banked
 11856  0159BC  5972               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11857  0159BE  0100               	movlb	0	; () banked
 11858  0159C0  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11859  0159C2  0100               	movlb	0	; () banked
 11860  0159C4  5973               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11861  0159C6  A0D8               	btfss	status,0,c
 11862  0159C8  D012               	goto	l8602
 11863                           
 11864                           ; BSR set to: 0
 11865  0159CA  0100               	movlb	0	; () banked
 11866  0159CC  5174               	movf	___lldiv@divisor& (0+255),w,b
 11867  0159CE  0100               	movlb	0	; () banked
 11868  0159D0  5F70               	subwf	___lldiv@dividend& (0+255),f,b
 11869  0159D2  0100               	movlb	0	; () banked
 11870  0159D4  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11871  0159D6  0100               	movlb	0	; () banked
 11872  0159D8  5B71               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11873  0159DA  0100               	movlb	0	; () banked
 11874  0159DC  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11875  0159DE  0100               	movlb	0	; () banked
 11876  0159E0  5B72               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11877  0159E2  0100               	movlb	0	; () banked
 11878  0159E4  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11879  0159E6  0100               	movlb	0	; () banked
 11880  0159E8  5B73               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11881                           
 11882                           ; BSR set to: 0
 11883  0159EA  0100               	movlb	0	; () banked
 11884  0159EC  8178               	bsf	___lldiv@quotient& (0+255),0,b
 11885  0159EE                     l8602:
 11886                           
 11887                           ; BSR set to: 0
 11888  0159EE  0100               	movlb	0	; () banked
 11889  0159F0  90D8               	bcf	status,0,c
 11890  0159F2  3377               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11891  0159F4  3376               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11892  0159F6  3375               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11893  0159F8  3374               	rrcf	___lldiv@divisor& (0+255),f,b
 11894                           
 11895                           ; BSR set to: 0
 11896  0159FA  0100               	movlb	0	; () banked
 11897  0159FC  2F7C               	decfsz	___lldiv@counter& (0+255),f,b
 11898  0159FE  D7CD               	goto	l8594
 11899  015A00                     l1446:
 11900                           
 11901                           ; BSR set to: 0
 11902  015A00  C078  F070         	movff	___lldiv@quotient,?___lldiv
 11903  015A04  C079  F071         	movff	___lldiv@quotient+1,?___lldiv+1
 11904  015A08  C07A  F072         	movff	___lldiv@quotient+2,?___lldiv+2
 11905  015A0C  C07B  F073         	movff	___lldiv@quotient+3,?___lldiv+3
 11906                           
 11907                           ; BSR set to: 0
 11908  015A10  0012               	return		;funcret
 11909  015A12                     __end_of___lldiv:
 11910                           	opt stack 0
 11911                           tblptru	equ	0xFF8
 11912                           tblptrh	equ	0xFF7
 11913                           tblptrl	equ	0xFF6
 11914                           tablat	equ	0xFF5
 11915                           prodh	equ	0xFF4
 11916                           prodl	equ	0xFF3
 11917                           intcon	equ	0xFF2
 11918                           postinc0	equ	0xFEE
 11919                           wreg	equ	0xFE8
 11920                           indf2	equ	0xFDF
 11921                           postinc2	equ	0xFDE
 11922                           fsr2h	equ	0xFDA
 11923                           fsr2l	equ	0xFD9
 11924                           status	equ	0xFD8
 11925                           
 11926 ;; *************** function ___fltol *****************
 11927 ;; Defined at:
 11928 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 11929 ;; Parameters:    Size  Location     Type
 11930 ;;  f1              4   88[BANK0 ] unsigned long 
 11931 ;; Auto vars:     Size  Location     Type
 11932 ;;  exp1            1   97[BANK0 ] unsigned char 
 11933 ;;  sign1           1   96[BANK0 ] unsigned char 
 11934 ;; Return value:  Size  Location     Type
 11935 ;;                  4   88[BANK0 ] long 
 11936 ;; Registers used:
 11937 ;;		wreg, status,2, status,0
 11938 ;; Tracked objects:
 11939 ;;		On entry : 0/0
 11940 ;;		On exit  : 0/0
 11941 ;;		Unchanged: 0/0
 11942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11943 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11944 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11945 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11946 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11947 ;;Total ram usage:       10 bytes
 11948 ;; Hardware stack levels used:    1
 11949 ;; Hardware stack levels required when called:    3
 11950 ;; This function calls:
 11951 ;;		Nothing
 11952 ;; This function is called by:
 11953 ;;		_main
 11954 ;;		_sprintf
 11955 ;; This function uses a non-reentrant model
 11956 ;;
 11957                           
 11958                           	psect	text22
 11959  0155E2                     __ptext22:
 11960                           	opt stack 0
 11961  0155E2                     ___fltol:
 11962                           	opt stack 27
 11963                           
 11964                           ; BSR set to: 0
 11965                           ;incstack = 0
 11966  0155E2  0100               	movlb	0	; () banked
 11967  0155E4  35BA               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11968  0155E6  35BB               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11969  0155E8  0100               	movlb	0	; () banked
 11970  0155EA  6FC1               	movwf	___fltol@exp1& (0+255),b
 11971  0155EC  0100               	movlb	0	; () banked
 11972  0155EE  51C1               	movf	___fltol@exp1& (0+255),w,b
 11973  0155F0  A4D8               	btfss	status,2,c
 11974  0155F2  D00A               	goto	l8546
 11975                           
 11976                           ; BSR set to: 0
 11977  0155F4  0E00               	movlw	0
 11978  0155F6  0100               	movlb	0	; () banked
 11979  0155F8  6FB8               	movwf	?___fltol& (0+255),b
 11980  0155FA  0E00               	movlw	0
 11981  0155FC  6FB9               	movwf	(?___fltol+1)& (0+255),b
 11982  0155FE  0E00               	movlw	0
 11983  015600  6FBA               	movwf	(?___fltol+2)& (0+255),b
 11984  015602  0E00               	movlw	0
 11985  015604  6FBB               	movwf	(?___fltol+3)& (0+255),b
 11986                           
 11987                           ; BSR set to: 0
 11988  015606  0012               	return	
 11989  015608                     l8546:
 11990                           
 11991                           ; BSR set to: 0
 11992  015608  C0B8  F0BC         	movff	___fltol@f1,??___fltol
 11993  01560C  C0B9  F0BD         	movff	___fltol@f1+1,??___fltol+1
 11994  015610  C0BA  F0BE         	movff	___fltol@f1+2,??___fltol+2
 11995  015614  C0BB  F0BF         	movff	___fltol@f1+3,??___fltol+3
 11996  015618  0E20               	movlw	32
 11997  01561A  D006               	goto	u11370
 11998  01561C                     u11375:
 11999  01561C  0100               	movlb	0	; () banked
 12000  01561E  90D8               	bcf	status,0,c
 12001  015620  33BF               	rrcf	(??___fltol+3)& (0+255),f,b
 12002  015622  33BE               	rrcf	(??___fltol+2)& (0+255),f,b
 12003  015624  33BD               	rrcf	(??___fltol+1)& (0+255),f,b
 12004  015626  33BC               	rrcf	??___fltol& (0+255),f,b
 12005  015628                     u11370:
 12006  015628  2EE8               	decfsz	wreg,f,c
 12007  01562A  D7F8               	goto	u11375
 12008  01562C  0100               	movlb	0	; () banked
 12009  01562E  51BC               	movf	??___fltol& (0+255),w,b
 12010  015630  0100               	movlb	0	; () banked
 12011  015632  6FC0               	movwf	___fltol@sign1& (0+255),b
 12012                           
 12013                           ; BSR set to: 0
 12014  015634  0100               	movlb	0	; () banked
 12015  015636  8FBA               	bsf	(___fltol@f1+2)& (0+255),7,b
 12016                           
 12017                           ; BSR set to: 0
 12018  015638  0EFF               	movlw	255
 12019  01563A  0100               	movlb	0	; () banked
 12020  01563C  17B8               	andwf	___fltol@f1& (0+255),f,b
 12021  01563E  0EFF               	movlw	255
 12022  015640  17B9               	andwf	(___fltol@f1+1)& (0+255),f,b
 12023  015642  0EFF               	movlw	255
 12024  015644  17BA               	andwf	(___fltol@f1+2)& (0+255),f,b
 12025  015646  0E00               	movlw	0
 12026  015648  17BB               	andwf	(___fltol@f1+3)& (0+255),f,b
 12027                           
 12028                           ; BSR set to: 0
 12029  01564A  0E96               	movlw	150
 12030  01564C  0100               	movlb	0	; () banked
 12031  01564E  5FC1               	subwf	___fltol@exp1& (0+255),f,b
 12032                           
 12033                           ; BSR set to: 0
 12034  015650  0100               	movlb	0	; () banked
 12035  015652  AFC1               	btfss	___fltol@exp1& (0+255),7,b
 12036  015654  D01A               	goto	l8566
 12037                           
 12038                           ; BSR set to: 0
 12039  015656  0100               	movlb	0	; () banked
 12040  015658  51C1               	movf	___fltol@exp1& (0+255),w,b
 12041  01565A  0A80               	xorlw	128
 12042  01565C  0F97               	addlw	151
 12043  01565E  B0D8               	btfsc	status,0,c
 12044  015660  D00A               	goto	l8562
 12045                           
 12046                           ; BSR set to: 0
 12047  015662  0E00               	movlw	0
 12048  015664  0100               	movlb	0	; () banked
 12049  015666  6FB8               	movwf	?___fltol& (0+255),b
 12050  015668  0E00               	movlw	0
 12051  01566A  6FB9               	movwf	(?___fltol+1)& (0+255),b
 12052  01566C  0E00               	movlw	0
 12053  01566E  6FBA               	movwf	(?___fltol+2)& (0+255),b
 12054  015670  0E00               	movlw	0
 12055  015672  6FBB               	movwf	(?___fltol+3)& (0+255),b
 12056                           
 12057                           ; BSR set to: 0
 12058  015674  0012               	return	
 12059  015676                     l8562:
 12060                           
 12061                           ; BSR set to: 0
 12062  015676  0100               	movlb	0	; () banked
 12063  015678  90D8               	bcf	status,0,c
 12064  01567A  33BB               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12065  01567C  33BA               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12066  01567E  33B9               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12067  015680  33B8               	rrcf	___fltol@f1& (0+255),f,b
 12068                           
 12069                           ; BSR set to: 0
 12070  015682  0100               	movlb	0	; () banked
 12071  015684  3FC1               	incfsz	___fltol@exp1& (0+255),f,b
 12072  015686  D7F7               	goto	l8562
 12073                           
 12074                           ; BSR set to: 0
 12075  015688  D01B               	goto	l8576
 12076  01568A                     l8566:
 12077                           
 12078                           ; BSR set to: 0
 12079  01568A  0E1F               	movlw	31
 12080  01568C  0100               	movlb	0	; () banked
 12081  01568E  65C1               	cpfsgt	___fltol@exp1& (0+255),b
 12082  015690  D012               	goto	l8574
 12083                           
 12084                           ; BSR set to: 0
 12085  015692  0E00               	movlw	0
 12086  015694  0100               	movlb	0	; () banked
 12087  015696  6FB8               	movwf	?___fltol& (0+255),b
 12088  015698  0E00               	movlw	0
 12089  01569A  6FB9               	movwf	(?___fltol+1)& (0+255),b
 12090  01569C  0E00               	movlw	0
 12091  01569E  6FBA               	movwf	(?___fltol+2)& (0+255),b
 12092  0156A0  0E00               	movlw	0
 12093  0156A2  6FBB               	movwf	(?___fltol+3)& (0+255),b
 12094                           
 12095                           ; BSR set to: 0
 12096  0156A4  0012               	return	
 12097  0156A6                     l8572:
 12098                           
 12099                           ; BSR set to: 0
 12100  0156A6  0100               	movlb	0	; () banked
 12101  0156A8  90D8               	bcf	status,0,c
 12102  0156AA  37B8               	rlcf	___fltol@f1& (0+255),f,b
 12103  0156AC  37B9               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12104  0156AE  37BA               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12105  0156B0  37BB               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12106  0156B2  0100               	movlb	0	; () banked
 12107  0156B4  07C1               	decf	___fltol@exp1& (0+255),f,b
 12108  0156B6                     l8574:
 12109                           
 12110                           ; BSR set to: 0
 12111  0156B6  0100               	movlb	0	; () banked
 12112  0156B8  51C1               	movf	___fltol@exp1& (0+255),w,b
 12113  0156BA  0100               	movlb	0	; () banked
 12114  0156BC  A4D8               	btfss	status,2,c
 12115  0156BE  D7F3               	goto	l8572
 12116  0156C0                     l8576:
 12117                           
 12118                           ; BSR set to: 0
 12119  0156C0  0100               	movlb	0	; () banked
 12120  0156C2  51C0               	movf	___fltol@sign1& (0+255),w,b
 12121  0156C4  0100               	movlb	0	; () banked
 12122  0156C6  B4D8               	btfsc	status,2,c
 12123  0156C8  D009               	goto	l8580
 12124                           
 12125                           ; BSR set to: 0
 12126  0156CA  0100               	movlb	0	; () banked
 12127  0156CC  1FBB               	comf	(___fltol@f1+3)& (0+255),f,b
 12128  0156CE  1FBA               	comf	(___fltol@f1+2)& (0+255),f,b
 12129  0156D0  1FB9               	comf	(___fltol@f1+1)& (0+255),f,b
 12130  0156D2  6DB8               	negf	___fltol@f1& (0+255),b
 12131  0156D4  0E00               	movlw	0
 12132  0156D6  23B9               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12133  0156D8  23BA               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12134  0156DA  23BB               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12135  0156DC                     l8580:
 12136                           
 12137                           ; BSR set to: 0
 12138  0156DC  C0B8  F0B8         	movff	___fltol@f1,?___fltol
 12139  0156E0  C0B9  F0B9         	movff	___fltol@f1+1,?___fltol+1
 12140  0156E4  C0BA  F0BA         	movff	___fltol@f1+2,?___fltol+2
 12141  0156E8  C0BB  F0BB         	movff	___fltol@f1+3,?___fltol+3
 12142  0156EC  0012               	return	
 12143  0156EE                     __end_of___fltol:
 12144                           	opt stack 0
 12145                           tblptru	equ	0xFF8
 12146                           tblptrh	equ	0xFF7
 12147                           tblptrl	equ	0xFF6
 12148                           tablat	equ	0xFF5
 12149                           prodh	equ	0xFF4
 12150                           prodl	equ	0xFF3
 12151                           intcon	equ	0xFF2
 12152                           postinc0	equ	0xFEE
 12153                           wreg	equ	0xFE8
 12154                           indf2	equ	0xFDF
 12155                           postinc2	equ	0xFDE
 12156                           fsr2h	equ	0xFDA
 12157                           fsr2l	equ	0xFD9
 12158                           status	equ	0xFD8
 12159                           
 12160 ;; *************** function ___flsub *****************
 12161 ;; Defined at:
 12162 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 12163 ;; Parameters:    Size  Location     Type
 12164 ;;  b               4   88[BANK0 ] long 
 12165 ;;  a               4   92[BANK0 ] long 
 12166 ;; Auto vars:     Size  Location     Type
 12167 ;;		None
 12168 ;; Return value:  Size  Location     Type
 12169 ;;                  4   88[BANK0 ] long 
 12170 ;; Registers used:
 12171 ;;		wreg, status,2, status,0, cstack
 12172 ;; Tracked objects:
 12173 ;;		On entry : 0/0
 12174 ;;		On exit  : 0/0
 12175 ;;		Unchanged: 0/0
 12176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12177 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12180 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12181 ;;Total ram usage:        8 bytes
 12182 ;; Hardware stack levels used:    1
 12183 ;; Hardware stack levels required when called:    4
 12184 ;; This function calls:
 12185 ;;		___fladd
 12186 ;; This function is called by:
 12187 ;;		_sprintf
 12188 ;; This function uses a non-reentrant model
 12189 ;;
 12190                           
 12191                           	psect	text23
 12192  0160FA                     __ptext23:
 12193                           	opt stack 0
 12194  0160FA                     ___flsub:
 12195                           	opt stack 24
 12196                           
 12197                           ; BSR set to: 0
 12198                           ;incstack = 0
 12199  0160FA  0E00               	movlw	0
 12200  0160FC  0100               	movlb	0	; () banked
 12201  0160FE  1BBC               	xorwf	___flsub@a& (0+255),f,b
 12202  016100  0E00               	movlw	0
 12203  016102  1BBD               	xorwf	(___flsub@a+1)& (0+255),f,b
 12204  016104  0E00               	movlw	0
 12205  016106  1BBE               	xorwf	(___flsub@a+2)& (0+255),f,b
 12206  016108  0E80               	movlw	128
 12207  01610A  1BBF               	xorwf	(___flsub@a+3)& (0+255),f,b
 12208                           
 12209                           ; BSR set to: 0
 12210  01610C  C0B8  F0A4         	movff	___flsub@b,___fladd@b
 12211  016110  C0B9  F0A5         	movff	___flsub@b+1,___fladd@b+1
 12212  016114  C0BA  F0A6         	movff	___flsub@b+2,___fladd@b+2
 12213  016118  C0BB  F0A7         	movff	___flsub@b+3,___fladd@b+3
 12214  01611C  C0BC  F0A8         	movff	___flsub@a,___fladd@a
 12215  016120  C0BD  F0A9         	movff	___flsub@a+1,___fladd@a+1
 12216  016124  C0BE  F0AA         	movff	___flsub@a+2,___fladd@a+2
 12217  016128  C0BF  F0AB         	movff	___flsub@a+3,___fladd@a+3
 12218  01612C  EC85  F099         	call	___fladd	;wreg free
 12219  016130  C0A4  F0B8         	movff	?___fladd,?___flsub
 12220  016134  C0A5  F0B9         	movff	?___fladd+1,?___flsub+1
 12221  016138  C0A6  F0BA         	movff	?___fladd+2,?___flsub+2
 12222  01613C  C0A7  F0BB         	movff	?___fladd+3,?___flsub+3
 12223  016140  0012               	return	
 12224  016142                     __end_of___flsub:
 12225                           	opt stack 0
 12226                           tblptru	equ	0xFF8
 12227                           tblptrh	equ	0xFF7
 12228                           tblptrl	equ	0xFF6
 12229                           tablat	equ	0xFF5
 12230                           prodh	equ	0xFF4
 12231                           prodl	equ	0xFF3
 12232                           intcon	equ	0xFF2
 12233                           postinc0	equ	0xFEE
 12234                           wreg	equ	0xFE8
 12235                           indf2	equ	0xFDF
 12236                           postinc2	equ	0xFDE
 12237                           fsr2h	equ	0xFDA
 12238                           fsr2l	equ	0xFD9
 12239                           status	equ	0xFD8
 12240                           
 12241 ;; *************** function ___fladd *****************
 12242 ;; Defined at:
 12243 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 12244 ;; Parameters:    Size  Location     Type
 12245 ;;  b               4   68[BANK0 ] long 
 12246 ;;  a               4   72[BANK0 ] long 
 12247 ;; Auto vars:     Size  Location     Type
 12248 ;;  grs             1   87[BANK0 ] unsigned char 
 12249 ;;  bexp            1   86[BANK0 ] unsigned char 
 12250 ;;  aexp            1   85[BANK0 ] unsigned char 
 12251 ;;  signs           1   84[BANK0 ] unsigned char 
 12252 ;; Return value:  Size  Location     Type
 12253 ;;                  4   68[BANK0 ] unsigned char 
 12254 ;; Registers used:
 12255 ;;		wreg, status,2, status,0
 12256 ;; Tracked objects:
 12257 ;;		On entry : 0/0
 12258 ;;		On exit  : 0/0
 12259 ;;		Unchanged: 0/0
 12260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12261 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12262 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12263 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12264 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12265 ;;Total ram usage:       20 bytes
 12266 ;; Hardware stack levels used:    1
 12267 ;; Hardware stack levels required when called:    3
 12268 ;; This function calls:
 12269 ;;		Nothing
 12270 ;; This function is called by:
 12271 ;;		_main
 12272 ;;		_sprintf
 12273 ;;		___flsub
 12274 ;; This function uses a non-reentrant model
 12275 ;;
 12276                           
 12277                           	psect	text24
 12278  01330A                     __ptext24:
 12279                           	opt stack 0
 12280  01330A                     ___fladd:
 12281                           	opt stack 27
 12282                           
 12283                           ;incstack = 0
 12284  01330A  0100               	movlb	0	; () banked
 12285  01330C  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 12286  01330E  0B80               	andlw	128
 12287  013310  0100               	movlb	0	; () banked
 12288  013312  6FB4               	movwf	___fladd@signs& (0+255),b
 12289  013314  0100               	movlb	0	; () banked
 12290  013316  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 12291  013318  25A7               	addwf	(___fladd@b+3)& (0+255),w,b
 12292  01331A  0100               	movlb	0	; () banked
 12293  01331C  6FB6               	movwf	___fladd@bexp& (0+255),b
 12294                           
 12295                           ; BSR set to: 0
 12296  01331E  0100               	movlb	0	; () banked
 12297  013320  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
 12298  013322  D002               	goto	l7878
 12299                           
 12300                           ; BSR set to: 0
 12301  013324  0100               	movlb	0	; () banked
 12302  013326  81B6               	bsf	___fladd@bexp& (0+255),0,b
 12303  013328                     l7878:
 12304                           
 12305                           ; BSR set to: 0
 12306  013328  0100               	movlb	0	; () banked
 12307  01332A  51B6               	movf	___fladd@bexp& (0+255),w,b
 12308  01332C  0100               	movlb	0	; () banked
 12309  01332E  B4D8               	btfsc	status,2,c
 12310  013330  D012               	goto	l7888
 12311                           
 12312                           ; BSR set to: 0
 12313  013332  0100               	movlb	0	; () banked
 12314  013334  29B6               	incf	___fladd@bexp& (0+255),w,b
 12315  013336  A4D8               	btfss	status,2,c
 12316  013338  D009               	goto	l7884
 12317                           
 12318                           ; BSR set to: 0
 12319  01333A  0E00               	movlw	0
 12320  01333C  0100               	movlb	0	; () banked
 12321  01333E  6FA4               	movwf	___fladd@b& (0+255),b
 12322  013340  0E00               	movlw	0
 12323  013342  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 12324  013344  0E00               	movlw	0
 12325  013346  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 12326  013348  0E00               	movlw	0
 12327  01334A  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 12328  01334C                     l7884:
 12329                           
 12330                           ; BSR set to: 0
 12331  01334C  0100               	movlb	0	; () banked
 12332  01334E  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
 12333                           
 12334                           ; BSR set to: 0
 12335  013350  0E00               	movlw	0
 12336  013352  0100               	movlb	0	; () banked
 12337  013354  D008               	goto	L12
 12338  013356                     l7888:
 12339                           
 12340                           ; BSR set to: 0
 12341  013356  0E00               	movlw	0
 12342  013358  0100               	movlb	0	; () banked
 12343  01335A  6FA4               	movwf	___fladd@b& (0+255),b
 12344  01335C  0E00               	movlw	0
 12345  01335E  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 12346  013360  0E00               	movlw	0
 12347  013362  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 12348  013364  0E00               	movlw	0
 12349  013366                     L12:
 12350  013366  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 12351                           
 12352                           ; BSR set to: 0
 12353                           
 12354                           ; BSR set to: 0
 12355  013368  0100               	movlb	0	; () banked
 12356  01336A  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 12357  01336C  0B80               	andlw	128
 12358  01336E  0100               	movlb	0	; () banked
 12359  013370  6FB5               	movwf	___fladd@aexp& (0+255),b
 12360                           
 12361                           ; BSR set to: 0
 12362  013372  0100               	movlb	0	; () banked
 12363  013374  51B4               	movf	___fladd@signs& (0+255),w,b
 12364  013376  0100               	movlb	0	; () banked
 12365  013378  19B5               	xorwf	___fladd@aexp& (0+255),w,b
 12366  01337A  B4D8               	btfsc	status,2,c
 12367  01337C  D002               	goto	l7896
 12368                           
 12369                           ; BSR set to: 0
 12370  01337E  0100               	movlb	0	; () banked
 12371  013380  8DB4               	bsf	___fladd@signs& (0+255),6,b
 12372  013382                     l7896:
 12373                           
 12374                           ; BSR set to: 0
 12375  013382  0100               	movlb	0	; () banked
 12376  013384  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 12377  013386  25AB               	addwf	(___fladd@a+3)& (0+255),w,b
 12378  013388  0100               	movlb	0	; () banked
 12379  01338A  6FB5               	movwf	___fladd@aexp& (0+255),b
 12380                           
 12381                           ; BSR set to: 0
 12382  01338C  0100               	movlb	0	; () banked
 12383  01338E  AFAA               	btfss	(___fladd@a+2)& (0+255),7,b
 12384  013390  D002               	goto	l7902
 12385                           
 12386                           ; BSR set to: 0
 12387  013392  0100               	movlb	0	; () banked
 12388  013394  81B5               	bsf	___fladd@aexp& (0+255),0,b
 12389  013396                     l7902:
 12390                           
 12391                           ; BSR set to: 0
 12392  013396  0100               	movlb	0	; () banked
 12393  013398  51B5               	movf	___fladd@aexp& (0+255),w,b
 12394  01339A  0100               	movlb	0	; () banked
 12395  01339C  B4D8               	btfsc	status,2,c
 12396  01339E  D012               	goto	l7912
 12397                           
 12398                           ; BSR set to: 0
 12399  0133A0  0100               	movlb	0	; () banked
 12400  0133A2  29B5               	incf	___fladd@aexp& (0+255),w,b
 12401  0133A4  A4D8               	btfss	status,2,c
 12402  0133A6  D009               	goto	l7908
 12403                           
 12404                           ; BSR set to: 0
 12405  0133A8  0E00               	movlw	0
 12406  0133AA  0100               	movlb	0	; () banked
 12407  0133AC  6FA8               	movwf	___fladd@a& (0+255),b
 12408  0133AE  0E00               	movlw	0
 12409  0133B0  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 12410  0133B2  0E00               	movlw	0
 12411  0133B4  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 12412  0133B6  0E00               	movlw	0
 12413  0133B8  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 12414  0133BA                     l7908:
 12415                           
 12416                           ; BSR set to: 0
 12417  0133BA  0100               	movlb	0	; () banked
 12418  0133BC  8FAA               	bsf	(___fladd@a+2)& (0+255),7,b
 12419                           
 12420                           ; BSR set to: 0
 12421  0133BE  0E00               	movlw	0
 12422  0133C0  0100               	movlb	0	; () banked
 12423  0133C2  D008               	goto	L13
 12424  0133C4                     l7912:
 12425                           
 12426                           ; BSR set to: 0
 12427  0133C4  0E00               	movlw	0
 12428  0133C6  0100               	movlb	0	; () banked
 12429  0133C8  6FA8               	movwf	___fladd@a& (0+255),b
 12430  0133CA  0E00               	movlw	0
 12431  0133CC  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 12432  0133CE  0E00               	movlw	0
 12433  0133D0  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 12434  0133D2  0E00               	movlw	0
 12435  0133D4                     L13:
 12436  0133D4  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 12437                           
 12438                           ; BSR set to: 0
 12439                           
 12440                           ; BSR set to: 0
 12441  0133D6  0100               	movlb	0	; () banked
 12442  0133D8  51B6               	movf	___fladd@bexp& (0+255),w,b
 12443  0133DA  0100               	movlb	0	; () banked
 12444  0133DC  5DB5               	subwf	___fladd@aexp& (0+255),w,b
 12445  0133DE  B0D8               	btfsc	status,0,c
 12446  0133E0  D024               	goto	l7950
 12447                           
 12448                           ; BSR set to: 0
 12449  0133E2  0100               	movlb	0	; () banked
 12450  0133E4  ADB4               	btfss	___fladd@signs& (0+255),6,b
 12451  0133E6  D003               	goto	l7920
 12452                           
 12453                           ; BSR set to: 0
 12454  0133E8  0E80               	movlw	128
 12455  0133EA  0100               	movlb	0	; () banked
 12456  0133EC  1BB4               	xorwf	___fladd@signs& (0+255),f,b
 12457  0133EE                     l7920:
 12458                           
 12459                           ; BSR set to: 0
 12460  0133EE  C0B6  F0B7         	movff	___fladd@bexp,___fladd@grs
 12461                           
 12462                           ; BSR set to: 0
 12463  0133F2  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
 12464                           
 12465                           ; BSR set to: 0
 12466  0133F6  C0B7  F0B5         	movff	___fladd@grs,___fladd@aexp
 12467                           
 12468                           ; BSR set to: 0
 12469  0133FA  C0A4  F0B7         	movff	___fladd@b,___fladd@grs
 12470                           
 12471                           ; BSR set to: 0
 12472  0133FE  C0A8  F0A4         	movff	___fladd@a,___fladd@b
 12473                           
 12474                           ; BSR set to: 0
 12475  013402  C0B7  F0A8         	movff	___fladd@grs,___fladd@a
 12476                           
 12477                           ; BSR set to: 0
 12478  013406  C0A5  F0B7         	movff	___fladd@b+1,___fladd@grs
 12479                           
 12480                           ; BSR set to: 0
 12481  01340A  C0A9  F0A5         	movff	___fladd@a+1,___fladd@b+1
 12482                           
 12483                           ; BSR set to: 0
 12484  01340E  C0B7  F0A9         	movff	___fladd@grs,___fladd@a+1
 12485                           
 12486                           ; BSR set to: 0
 12487  013412  C0A6  F0B7         	movff	___fladd@b+2,___fladd@grs
 12488                           
 12489                           ; BSR set to: 0
 12490  013416  C0AA  F0A6         	movff	___fladd@a+2,___fladd@b+2
 12491                           
 12492                           ; BSR set to: 0
 12493  01341A  C0B7  F0AA         	movff	___fladd@grs,___fladd@a+2
 12494                           
 12495                           ; BSR set to: 0
 12496  01341E  C0A7  F0B7         	movff	___fladd@b+3,___fladd@grs
 12497                           
 12498                           ; BSR set to: 0
 12499  013422  C0AB  F0A7         	movff	___fladd@a+3,___fladd@b+3
 12500                           
 12501                           ; BSR set to: 0
 12502  013426  C0B7  F0AB         	movff	___fladd@grs,___fladd@a+3
 12503  01342A                     l7950:
 12504                           
 12505                           ; BSR set to: 0
 12506  01342A  0E00               	movlw	0
 12507  01342C  0100               	movlb	0	; () banked
 12508  01342E  6FB7               	movwf	___fladd@grs& (0+255),b
 12509                           
 12510                           ; BSR set to: 0
 12511  013430  0100               	movlb	0	; () banked
 12512  013432  51B6               	movf	___fladd@bexp& (0+255),w,b
 12513  013434  0100               	movlb	0	; () banked
 12514  013436  6FAC               	movwf	??___fladd& (0+255),b
 12515  013438  6BAD               	clrf	(??___fladd+1)& (0+255),b
 12516  01343A  0100               	movlb	0	; () banked
 12517  01343C  1FAC               	comf	??___fladd& (0+255),f,b
 12518  01343E  1FAD               	comf	(??___fladd+1)& (0+255),f,b
 12519  013440  4BAC               	infsnz	??___fladd& (0+255),f,b
 12520  013442  2BAD               	incf	(??___fladd+1)& (0+255),f,b
 12521  013444  0100               	movlb	0	; () banked
 12522  013446  51B5               	movf	___fladd@aexp& (0+255),w,b
 12523  013448  0100               	movlb	0	; () banked
 12524  01344A  6FAE               	movwf	(??___fladd+2)& (0+255),b
 12525  01344C  6BAF               	clrf	(??___fladd+3)& (0+255),b
 12526  01344E  0100               	movlb	0	; () banked
 12527  013450  51AC               	movf	??___fladd& (0+255),w,b
 12528  013452  0100               	movlb	0	; () banked
 12529  013454  27AE               	addwf	(??___fladd+2)& (0+255),f,b
 12530  013456  0100               	movlb	0	; () banked
 12531  013458  51AD               	movf	(??___fladd+1)& (0+255),w,b
 12532  01345A  0100               	movlb	0	; () banked
 12533  01345C  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
 12534  01345E  0100               	movlb	0	; () banked
 12535  013460  BFAF               	btfsc	(??___fladd+3)& (0+255),7,b
 12536  013462  D03D               	goto	l1541
 12537  013464  0100               	movlb	0	; () banked
 12538  013466  51AF               	movf	(??___fladd+3)& (0+255),w,b
 12539  013468  E105               	bnz	u10420
 12540  01346A  0E1A               	movlw	26
 12541  01346C  0100               	movlb	0	; () banked
 12542  01346E  5DAE               	subwf	(??___fladd+2)& (0+255),w,b
 12543  013470  A0D8               	btfss	status,0,c
 12544  013472  D035               	goto	l1541
 12545  013474                     u10420:
 12546                           
 12547                           ; BSR set to: 0
 12548  013474  0100               	movlb	0	; () banked
 12549  013476  51A4               	movf	___fladd@b& (0+255),w,b
 12550  013478  0100               	movlb	0	; () banked
 12551  01347A  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
 12552  01347C  0100               	movlb	0	; () banked
 12553  01347E  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
 12554  013480  0100               	movlb	0	; () banked
 12555  013482  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
 12556  013484  B4D8               	btfsc	status,2,c
 12557  013486  D002               	goto	u10430
 12558  013488  0E01               	movlw	1
 12559  01348A  D001               	goto	u10440
 12560  01348C                     u10430:
 12561  01348C  0E00               	movlw	0
 12562  01348E                     u10440:
 12563  01348E  0100               	movlb	0	; () banked
 12564  013490  6FB7               	movwf	___fladd@grs& (0+255),b
 12565                           
 12566                           ; BSR set to: 0
 12567  013492  0E00               	movlw	0
 12568  013494  0100               	movlb	0	; () banked
 12569  013496  6FA4               	movwf	___fladd@b& (0+255),b
 12570  013498  0E00               	movlw	0
 12571  01349A  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 12572  01349C  0E00               	movlw	0
 12573  01349E  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 12574  0134A0  0E00               	movlw	0
 12575  0134A2  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 12576                           
 12577                           ; BSR set to: 0
 12578  0134A4  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
 12579  0134A8  D020               	goto	l1540
 12580  0134AA                     l1542:
 12581                           
 12582                           ; BSR set to: 0
 12583  0134AA  0100               	movlb	0	; () banked
 12584  0134AC  A1B7               	btfss	___fladd@grs& (0+255),0,b
 12585  0134AE  D007               	goto	l7962
 12586                           
 12587                           ; BSR set to: 0
 12588  0134B0  0100               	movlb	0	; () banked
 12589  0134B2  90D8               	bcf	status,0,c
 12590  0134B4  31B7               	rrcf	___fladd@grs& (0+255),w,b
 12591  0134B6  0901               	iorlw	1
 12592  0134B8  0100               	movlb	0	; () banked
 12593  0134BA  6FB7               	movwf	___fladd@grs& (0+255),b
 12594  0134BC  D003               	goto	l7964
 12595  0134BE                     l7962:
 12596                           
 12597                           ; BSR set to: 0
 12598  0134BE  0100               	movlb	0	; () banked
 12599  0134C0  90D8               	bcf	status,0,c
 12600  0134C2  33B7               	rrcf	___fladd@grs& (0+255),f,b
 12601  0134C4                     l7964:
 12602                           
 12603                           ; BSR set to: 0
 12604  0134C4  0100               	movlb	0	; () banked
 12605  0134C6  A1A4               	btfss	___fladd@b& (0+255),0,b
 12606  0134C8  D002               	goto	l7968
 12607                           
 12608                           ; BSR set to: 0
 12609  0134CA  0100               	movlb	0	; () banked
 12610  0134CC  8FB7               	bsf	___fladd@grs& (0+255),7,b
 12611  0134CE                     l7968:
 12612                           
 12613                           ; BSR set to: 0
 12614  0134CE  0100               	movlb	0	; () banked
 12615  0134D0  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
 12616  0134D2  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
 12617  0134D4  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
 12618  0134D6  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
 12619  0134D8  33A4               	rrcf	___fladd@b& (0+255),f,b
 12620                           
 12621                           ; BSR set to: 0
 12622  0134DA  0100               	movlb	0	; () banked
 12623  0134DC  2BB6               	incf	___fladd@bexp& (0+255),f,b
 12624  0134DE                     l1541:
 12625                           
 12626                           ; BSR set to: 0
 12627  0134DE  0100               	movlb	0	; () banked
 12628  0134E0  51B5               	movf	___fladd@aexp& (0+255),w,b
 12629  0134E2  0100               	movlb	0	; () banked
 12630  0134E4  5DB6               	subwf	___fladd@bexp& (0+255),w,b
 12631  0134E6  A0D8               	btfss	status,0,c
 12632  0134E8  D7E0               	goto	l1542
 12633  0134EA                     l1540:
 12634                           
 12635                           ; BSR set to: 0
 12636  0134EA  0100               	movlb	0	; () banked
 12637  0134EC  BDB4               	btfsc	___fladd@signs& (0+255),6,b
 12638  0134EE  D03F               	goto	l7996
 12639                           
 12640                           ; BSR set to: 0
 12641  0134F0  0100               	movlb	0	; () banked
 12642  0134F2  51B6               	movf	___fladd@bexp& (0+255),w,b
 12643  0134F4  0100               	movlb	0	; () banked
 12644  0134F6  A4D8               	btfss	status,2,c
 12645  0134F8  D00A               	goto	l7978
 12646                           
 12647                           ; BSR set to: 0
 12648  0134FA  0E00               	movlw	0
 12649  0134FC  0100               	movlb	0	; () banked
 12650  0134FE  6FA4               	movwf	?___fladd& (0+255),b
 12651  013500  0E00               	movlw	0
 12652  013502  6FA5               	movwf	(?___fladd+1)& (0+255),b
 12653  013504  0E00               	movlw	0
 12654  013506  6FA6               	movwf	(?___fladd+2)& (0+255),b
 12655  013508  0E00               	movlw	0
 12656  01350A  6FA7               	movwf	(?___fladd+3)& (0+255),b
 12657                           
 12658                           ; BSR set to: 0
 12659  01350C  0012               	return	
 12660  01350E                     l7978:
 12661                           
 12662                           ; BSR set to: 0
 12663  01350E  0100               	movlb	0	; () banked
 12664  013510  51A8               	movf	___fladd@a& (0+255),w,b
 12665  013512  0100               	movlb	0	; () banked
 12666  013514  27A4               	addwf	___fladd@b& (0+255),f,b
 12667  013516  0100               	movlb	0	; () banked
 12668  013518  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 12669  01351A  0100               	movlb	0	; () banked
 12670  01351C  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 12671  01351E  0100               	movlb	0	; () banked
 12672  013520  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 12673  013522  0100               	movlb	0	; () banked
 12674  013524  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 12675  013526  0100               	movlb	0	; () banked
 12676  013528  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 12677  01352A  0100               	movlb	0	; () banked
 12678  01352C  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 12679                           
 12680                           ; BSR set to: 0
 12681  01352E  0100               	movlb	0	; () banked
 12682  013530  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
 12683  013532  D0CC               	goto	l8032
 12684                           
 12685                           ; BSR set to: 0
 12686  013534  0100               	movlb	0	; () banked
 12687  013536  A1B7               	btfss	___fladd@grs& (0+255),0,b
 12688  013538  D009               	goto	l7986
 12689                           
 12690                           ; BSR set to: 0
 12691  01353A  0100               	movlb	0	; () banked
 12692  01353C  90D8               	bcf	status,0,c
 12693  01353E  33B7               	rrcf	___fladd@grs& (0+255),f,b
 12694  013540  0100               	movlb	0	; () banked
 12695  013542  51B7               	movf	___fladd@grs& (0+255),w,b
 12696  013544  0901               	iorlw	1
 12697  013546  0100               	movlb	0	; () banked
 12698  013548  6FB7               	movwf	___fladd@grs& (0+255),b
 12699  01354A  D003               	goto	l7988
 12700  01354C                     l7986:
 12701                           
 12702                           ; BSR set to: 0
 12703  01354C  0100               	movlb	0	; () banked
 12704  01354E  90D8               	bcf	status,0,c
 12705  013550  33B7               	rrcf	___fladd@grs& (0+255),f,b
 12706  013552                     l7988:
 12707                           
 12708                           ; BSR set to: 0
 12709  013552  0100               	movlb	0	; () banked
 12710  013554  A1A4               	btfss	___fladd@b& (0+255),0,b
 12711  013556  D002               	goto	l7992
 12712                           
 12713                           ; BSR set to: 0
 12714  013558  0100               	movlb	0	; () banked
 12715  01355A  8FB7               	bsf	___fladd@grs& (0+255),7,b
 12716  01355C                     l7992:
 12717                           
 12718                           ; BSR set to: 0
 12719  01355C  0100               	movlb	0	; () banked
 12720  01355E  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
 12721  013560  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
 12722  013562  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
 12723  013564  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
 12724  013566  33A4               	rrcf	___fladd@b& (0+255),f,b
 12725                           
 12726                           ; BSR set to: 0
 12727  013568  0100               	movlb	0	; () banked
 12728  01356A  2BB6               	incf	___fladd@bexp& (0+255),f,b
 12729                           
 12730                           ; BSR set to: 0
 12731  01356C  D0AF               	goto	l8032
 12732  01356E                     l7996:
 12733                           
 12734                           ; BSR set to: 0
 12735  01356E  0100               	movlb	0	; () banked
 12736  013570  51A8               	movf	___fladd@a& (0+255),w,b
 12737  013572  0100               	movlb	0	; () banked
 12738  013574  5DA4               	subwf	___fladd@b& (0+255),w,b
 12739  013576  0100               	movlb	0	; () banked
 12740  013578  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 12741  01357A  0100               	movlb	0	; () banked
 12742  01357C  59A5               	subwfb	(___fladd@b+1)& (0+255),w,b
 12743  01357E  0100               	movlb	0	; () banked
 12744  013580  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 12745  013582  0100               	movlb	0	; () banked
 12746  013584  59A6               	subwfb	(___fladd@b+2)& (0+255),w,b
 12747  013586  0100               	movlb	0	; () banked
 12748  013588  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 12749  01358A  0A80               	xorlw	128
 12750  01358C  0100               	movlb	0	; () banked
 12751  01358E  6FAC               	movwf	??___fladd& (0+255),b
 12752  013590  0100               	movlb	0	; () banked
 12753  013592  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 12754  013594  0A80               	xorlw	128
 12755  013596  0100               	movlb	0	; () banked
 12756  013598  59AC               	subwfb	??___fladd& (0+255),w,b
 12757  01359A  B0D8               	btfsc	status,0,c
 12758  01359C  D050               	goto	l8006
 12759                           
 12760                           ; BSR set to: 0
 12761  01359E  C0A4  F0AC         	movff	___fladd@b,??___fladd
 12762  0135A2  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
 12763  0135A6  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
 12764  0135AA  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
 12765  0135AE  0100               	movlb	0	; () banked
 12766  0135B0  1FAC               	comf	??___fladd& (0+255),f,b
 12767  0135B2  1FAD               	comf	(??___fladd+1)& (0+255),f,b
 12768  0135B4  1FAE               	comf	(??___fladd+2)& (0+255),f,b
 12769  0135B6  1FAF               	comf	(??___fladd+3)& (0+255),f,b
 12770  0135B8  2BAC               	incf	??___fladd& (0+255),f,b
 12771  0135BA  0E00               	movlw	0
 12772  0135BC  23AD               	addwfc	(??___fladd+1)& (0+255),f,b
 12773  0135BE  23AE               	addwfc	(??___fladd+2)& (0+255),f,b
 12774  0135C0  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
 12775  0135C2  0100               	movlb	0	; () banked
 12776  0135C4  51A8               	movf	___fladd@a& (0+255),w,b
 12777  0135C6  0100               	movlb	0	; () banked
 12778  0135C8  25AC               	addwf	??___fladd& (0+255),w,b
 12779  0135CA  0100               	movlb	0	; () banked
 12780  0135CC  6FB0               	movwf	(??___fladd+4)& (0+255),b
 12781  0135CE  0100               	movlb	0	; () banked
 12782  0135D0  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 12783  0135D2  0100               	movlb	0	; () banked
 12784  0135D4  21AD               	addwfc	(??___fladd+1)& (0+255),w,b
 12785  0135D6  0100               	movlb	0	; () banked
 12786  0135D8  6FB1               	movwf	(??___fladd+5)& (0+255),b
 12787  0135DA  0100               	movlb	0	; () banked
 12788  0135DC  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 12789  0135DE  0100               	movlb	0	; () banked
 12790  0135E0  21AE               	addwfc	(??___fladd+2)& (0+255),w,b
 12791  0135E2  0100               	movlb	0	; () banked
 12792  0135E4  6FB2               	movwf	(??___fladd+6)& (0+255),b
 12793  0135E6  0100               	movlb	0	; () banked
 12794  0135E8  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 12795  0135EA  0100               	movlb	0	; () banked
 12796  0135EC  21AF               	addwfc	(??___fladd+3)& (0+255),w,b
 12797  0135EE  0100               	movlb	0	; () banked
 12798  0135F0  6FB3               	movwf	(??___fladd+7)& (0+255),b
 12799  0135F2  0EFF               	movlw	255
 12800  0135F4  0100               	movlb	0	; () banked
 12801  0135F6  25B0               	addwf	(??___fladd+4)& (0+255),w,b
 12802  0135F8  0100               	movlb	0	; () banked
 12803  0135FA  6FA4               	movwf	___fladd@b& (0+255),b
 12804  0135FC  0EFF               	movlw	255
 12805  0135FE  0100               	movlb	0	; () banked
 12806  013600  21B1               	addwfc	(??___fladd+5)& (0+255),w,b
 12807  013602  0100               	movlb	0	; () banked
 12808  013604  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 12809  013606  0EFF               	movlw	255
 12810  013608  0100               	movlb	0	; () banked
 12811  01360A  21B2               	addwfc	(??___fladd+6)& (0+255),w,b
 12812  01360C  0100               	movlb	0	; () banked
 12813  01360E  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 12814  013610  0EFF               	movlw	255
 12815  013612  0100               	movlb	0	; () banked
 12816  013614  21B3               	addwfc	(??___fladd+7)& (0+255),w,b
 12817  013616  0100               	movlb	0	; () banked
 12818  013618  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 12819  01361A  0E80               	movlw	128
 12820  01361C  0100               	movlb	0	; () banked
 12821  01361E  1BB4               	xorwf	___fladd@signs& (0+255),f,b
 12822                           
 12823                           ; BSR set to: 0
 12824  013620  0100               	movlb	0	; () banked
 12825  013622  6DB7               	negf	___fladd@grs& (0+255),b
 12826                           
 12827                           ; BSR set to: 0
 12828  013624  0100               	movlb	0	; () banked
 12829  013626  51B7               	movf	___fladd@grs& (0+255),w,b
 12830  013628  0100               	movlb	0	; () banked
 12831  01362A  A4D8               	btfss	status,2,c
 12832  01362C  D018               	goto	l1557
 12833                           
 12834                           ; BSR set to: 0
 12835  01362E  0E01               	movlw	1
 12836  013630  0100               	movlb	0	; () banked
 12837  013632  27A4               	addwf	___fladd@b& (0+255),f,b
 12838  013634  0E00               	movlw	0
 12839  013636  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 12840  013638  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 12841  01363A  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 12842                           
 12843                           ; BSR set to: 0
 12844  01363C  D010               	goto	l1557
 12845  01363E                     l8006:
 12846                           
 12847                           ; BSR set to: 0
 12848  01363E  0100               	movlb	0	; () banked
 12849  013640  51A8               	movf	___fladd@a& (0+255),w,b
 12850  013642  0100               	movlb	0	; () banked
 12851  013644  5FA4               	subwf	___fladd@b& (0+255),f,b
 12852  013646  0100               	movlb	0	; () banked
 12853  013648  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 12854  01364A  0100               	movlb	0	; () banked
 12855  01364C  5BA5               	subwfb	(___fladd@b+1)& (0+255),f,b
 12856  01364E  0100               	movlb	0	; () banked
 12857  013650  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 12858  013652  0100               	movlb	0	; () banked
 12859  013654  5BA6               	subwfb	(___fladd@b+2)& (0+255),f,b
 12860  013656  0100               	movlb	0	; () banked
 12861  013658  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 12862  01365A  0100               	movlb	0	; () banked
 12863  01365C  5BA7               	subwfb	(___fladd@b+3)& (0+255),f,b
 12864  01365E                     l1557:
 12865                           
 12866                           ; BSR set to: 0
 12867  01365E  0100               	movlb	0	; () banked
 12868  013660  51A4               	movf	___fladd@b& (0+255),w,b
 12869  013662  0100               	movlb	0	; () banked
 12870  013664  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
 12871  013666  0100               	movlb	0	; () banked
 12872  013668  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
 12873  01366A  0100               	movlb	0	; () banked
 12874  01366C  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
 12875  01366E  A4D8               	btfss	status,2,c
 12876  013670  D02A               	goto	l8030
 12877                           
 12878                           ; BSR set to: 0
 12879  013672  0100               	movlb	0	; () banked
 12880  013674  51B7               	movf	___fladd@grs& (0+255),w,b
 12881  013676  0100               	movlb	0	; () banked
 12882  013678  A4D8               	btfss	status,2,c
 12883  01367A  D025               	goto	l8030
 12884                           
 12885                           ; BSR set to: 0
 12886  01367C  0E00               	movlw	0
 12887  01367E  0100               	movlb	0	; () banked
 12888  013680  6FA4               	movwf	?___fladd& (0+255),b
 12889  013682  0E00               	movlw	0
 12890  013684  6FA5               	movwf	(?___fladd+1)& (0+255),b
 12891  013686  0E00               	movlw	0
 12892  013688  6FA6               	movwf	(?___fladd+2)& (0+255),b
 12893  01368A  0E00               	movlw	0
 12894  01368C  6FA7               	movwf	(?___fladd+3)& (0+255),b
 12895                           
 12896                           ; BSR set to: 0
 12897  01368E  0012               	return	
 12898  013690                     l8014:
 12899                           
 12900                           ; BSR set to: 0
 12901  013690  0100               	movlb	0	; () banked
 12902  013692  90D8               	bcf	status,0,c
 12903  013694  37A4               	rlcf	___fladd@b& (0+255),f,b
 12904  013696  37A5               	rlcf	(___fladd@b+1)& (0+255),f,b
 12905  013698  37A6               	rlcf	(___fladd@b+2)& (0+255),f,b
 12906  01369A  37A7               	rlcf	(___fladd@b+3)& (0+255),f,b
 12907                           
 12908                           ; BSR set to: 0
 12909  01369C  0100               	movlb	0	; () banked
 12910  01369E  AFB7               	btfss	___fladd@grs& (0+255),7,b
 12911  0136A0  D002               	goto	l8020
 12912                           
 12913                           ; BSR set to: 0
 12914  0136A2  0100               	movlb	0	; () banked
 12915  0136A4  81A4               	bsf	___fladd@b& (0+255),0,b
 12916  0136A6                     l8020:
 12917                           
 12918                           ; BSR set to: 0
 12919  0136A6  0100               	movlb	0	; () banked
 12920  0136A8  A1B7               	btfss	___fladd@grs& (0+255),0,b
 12921  0136AA  D003               	goto	l8024
 12922                           
 12923                           ; BSR set to: 0
 12924  0136AC  80D8               	bsf	status,0,c
 12925  0136AE  0100               	movlb	0	; () banked
 12926  0136B0  D002               	goto	L14
 12927  0136B2                     l8024:
 12928                           
 12929                           ; BSR set to: 0
 12930  0136B2  0100               	movlb	0	; () banked
 12931  0136B4  90D8               	bcf	status,0,c
 12932  0136B6                     L14:
 12933  0136B6  37B7               	rlcf	___fladd@grs& (0+255),f,b
 12934                           
 12935                           ; BSR set to: 0
 12936                           
 12937                           ; BSR set to: 0
 12938  0136B8  0100               	movlb	0	; () banked
 12939  0136BA  51B6               	movf	___fladd@bexp& (0+255),w,b
 12940  0136BC  0100               	movlb	0	; () banked
 12941  0136BE  B4D8               	btfsc	status,2,c
 12942  0136C0  D002               	goto	l8030
 12943                           
 12944                           ; BSR set to: 0
 12945  0136C2  0100               	movlb	0	; () banked
 12946  0136C4  07B6               	decf	___fladd@bexp& (0+255),f,b
 12947  0136C6                     l8030:
 12948                           
 12949                           ; BSR set to: 0
 12950  0136C6  0100               	movlb	0	; () banked
 12951  0136C8  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
 12952  0136CA  D7E2               	goto	l8014
 12953  0136CC                     l8032:
 12954                           
 12955                           ; BSR set to: 0
 12956  0136CC  0E00               	movlw	0
 12957  0136CE  0100               	movlb	0	; () banked
 12958  0136D0  6FB5               	movwf	___fladd@aexp& (0+255),b
 12959                           
 12960                           ; BSR set to: 0
 12961  0136D2  0100               	movlb	0	; () banked
 12962  0136D4  AFB7               	btfss	___fladd@grs& (0+255),7,b
 12963  0136D6  D00D               	goto	l1566
 12964                           
 12965                           ; BSR set to: 0
 12966  0136D8  C0B7  F0AC         	movff	___fladd@grs,??___fladd
 12967  0136DC  0E7F               	movlw	127
 12968  0136DE  0100               	movlb	0	; () banked
 12969  0136E0  17AC               	andwf	??___fladd& (0+255),f,b
 12970  0136E2  A4D8               	btfss	status,2,c
 12971  0136E4  D003               	goto	l8040
 12972                           
 12973                           ; BSR set to: 0
 12974                           
 12975                           ; BSR set to: 0
 12976  0136E6  0100               	movlb	0	; () banked
 12977  0136E8  A1A4               	btfss	___fladd@b& (0+255),0,b
 12978  0136EA  D003               	goto	l1566
 12979  0136EC                     l8040:
 12980                           
 12981                           ; BSR set to: 0
 12982  0136EC  0E01               	movlw	1
 12983  0136EE  0100               	movlb	0	; () banked
 12984  0136F0  6FB5               	movwf	___fladd@aexp& (0+255),b
 12985  0136F2                     l1566:
 12986                           
 12987                           ; BSR set to: 0
 12988  0136F2  0100               	movlb	0	; () banked
 12989  0136F4  51B5               	movf	___fladd@aexp& (0+255),w,b
 12990  0136F6  0100               	movlb	0	; () banked
 12991  0136F8  B4D8               	btfsc	status,2,c
 12992  0136FA  D026               	goto	l8050
 12993                           
 12994                           ; BSR set to: 0
 12995  0136FC  0E01               	movlw	1
 12996  0136FE  0100               	movlb	0	; () banked
 12997  013700  27A4               	addwf	___fladd@b& (0+255),f,b
 12998  013702  0E00               	movlw	0
 12999  013704  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 13000  013706  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 13001  013708  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 13002                           
 13003                           ; BSR set to: 0
 13004  01370A  0100               	movlb	0	; () banked
 13005  01370C  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
 13006  01370E  D01C               	goto	l8050
 13007                           
 13008                           ; BSR set to: 0
 13009  013710  C0A4  F0AC         	movff	___fladd@b,??___fladd
 13010  013714  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
 13011  013718  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
 13012  01371C  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
 13013  013720  0100               	movlb	0	; () banked
 13014  013722  35AF               	rlcf	(??___fladd+3)& (0+255),w,b
 13015  013724  33AF               	rrcf	(??___fladd+3)& (0+255),f,b
 13016  013726  33AE               	rrcf	(??___fladd+2)& (0+255),f,b
 13017  013728  33AD               	rrcf	(??___fladd+1)& (0+255),f,b
 13018  01372A  33AC               	rrcf	??___fladd& (0+255),f,b
 13019  01372C  C0AC  F0A4         	movff	??___fladd,___fladd@b
 13020  013730  C0AD  F0A5         	movff	??___fladd+1,___fladd@b+1
 13021  013734  C0AE  F0A6         	movff	??___fladd+2,___fladd@b+2
 13022  013738  C0AF  F0A7         	movff	??___fladd+3,___fladd@b+3
 13023  01373C  0100               	movlb	0	; () banked
 13024  01373E  29B6               	incf	___fladd@bexp& (0+255),w,b
 13025  013740  B4D8               	btfsc	status,2,c
 13026  013742  D002               	goto	l8050
 13027                           
 13028                           ; BSR set to: 0
 13029  013744  0100               	movlb	0	; () banked
 13030  013746  2BB6               	incf	___fladd@bexp& (0+255),f,b
 13031  013748                     l8050:
 13032                           
 13033                           ; BSR set to: 0
 13034  013748  0100               	movlb	0	; () banked
 13035  01374A  29B6               	incf	___fladd@bexp& (0+255),w,b
 13036  01374C  B4D8               	btfsc	status,2,c
 13037  01374E  D005               	goto	l8054
 13038                           
 13039                           ; BSR set to: 0
 13040  013750  0100               	movlb	0	; () banked
 13041  013752  51B6               	movf	___fladd@bexp& (0+255),w,b
 13042  013754  0100               	movlb	0	; () banked
 13043  013756  A4D8               	btfss	status,2,c
 13044  013758  D011               	goto	l8058
 13045  01375A                     l8054:
 13046                           
 13047                           ; BSR set to: 0
 13048  01375A  0E00               	movlw	0
 13049  01375C  0100               	movlb	0	; () banked
 13050  01375E  6FA4               	movwf	___fladd@b& (0+255),b
 13051  013760  0E00               	movlw	0
 13052  013762  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 13053  013764  0E00               	movlw	0
 13054  013766  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 13055  013768  0E00               	movlw	0
 13056  01376A  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 13057  01376C  0100               	movlb	0	; () banked
 13058  01376E  51B6               	movf	___fladd@bexp& (0+255),w,b
 13059  013770  0100               	movlb	0	; () banked
 13060  013772  A4D8               	btfss	status,2,c
 13061  013774  D003               	goto	l8058
 13062                           
 13063                           ; BSR set to: 0
 13064  013776  0E00               	movlw	0
 13065  013778  0100               	movlb	0	; () banked
 13066  01377A  6FB4               	movwf	___fladd@signs& (0+255),b
 13067  01377C                     l8058:
 13068                           
 13069                           ; BSR set to: 0
 13070  01377C  0100               	movlb	0	; () banked
 13071  01377E  A1B6               	btfss	___fladd@bexp& (0+255),0,b
 13072  013780  D003               	goto	l8062
 13073                           
 13074                           ; BSR set to: 0
 13075  013782  0100               	movlb	0	; () banked
 13076  013784  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
 13077  013786  D002               	goto	l8064
 13078  013788                     l8062:
 13079                           
 13080                           ; BSR set to: 0
 13081  013788  0100               	movlb	0	; () banked
 13082  01378A  9FA6               	bcf	(___fladd@b+2)& (0+255),7,b
 13083  01378C                     l8064:
 13084                           
 13085                           ; BSR set to: 0
 13086  01378C  0100               	movlb	0	; () banked
 13087  01378E  90D8               	bcf	status,0,c
 13088  013790  31B6               	rrcf	___fladd@bexp& (0+255),w,b
 13089  013792  0100               	movlb	0	; () banked
 13090  013794  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 13091                           
 13092                           ; BSR set to: 0
 13093  013796  0100               	movlb	0	; () banked
 13094  013798  AFB4               	btfss	___fladd@signs& (0+255),7,b
 13095  01379A  D002               	goto	l8070
 13096                           
 13097                           ; BSR set to: 0
 13098  01379C  0100               	movlb	0	; () banked
 13099  01379E  8FA7               	bsf	(___fladd@b+3)& (0+255),7,b
 13100  0137A0                     l8070:
 13101                           
 13102                           ; BSR set to: 0
 13103  0137A0  C0A4  F0A4         	movff	___fladd@b,?___fladd
 13104  0137A4  C0A5  F0A5         	movff	___fladd@b+1,?___fladd+1
 13105  0137A8  C0A6  F0A6         	movff	___fladd@b+2,?___fladd+2
 13106  0137AC  C0A7  F0A7         	movff	___fladd@b+3,?___fladd+3
 13107  0137B0  0012               	return	
 13108  0137B2                     __end_of___fladd:
 13109                           	opt stack 0
 13110                           tblptru	equ	0xFF8
 13111                           tblptrh	equ	0xFF7
 13112                           tblptrl	equ	0xFF6
 13113                           tablat	equ	0xFF5
 13114                           prodh	equ	0xFF4
 13115                           prodl	equ	0xFF3
 13116                           intcon	equ	0xFF2
 13117                           postinc0	equ	0xFEE
 13118                           wreg	equ	0xFE8
 13119                           indf2	equ	0xFDF
 13120                           postinc2	equ	0xFDE
 13121                           fsr2h	equ	0xFDA
 13122                           fsr2l	equ	0xFD9
 13123                           status	equ	0xFD8
 13124                           
 13125 ;; *************** function ___flneg *****************
 13126 ;; Defined at:
 13127 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
 13128 ;; Parameters:    Size  Location     Type
 13129 ;;  f1              4   55[BANK0 ] unsigned char 
 13130 ;; Auto vars:     Size  Location     Type
 13131 ;;		None
 13132 ;; Return value:  Size  Location     Type
 13133 ;;                  4   55[BANK0 ] unsigned char 
 13134 ;; Registers used:
 13135 ;;		wreg, status,2, status,0
 13136 ;; Tracked objects:
 13137 ;;		On entry : 0/0
 13138 ;;		On exit  : 0/0
 13139 ;;		Unchanged: 0/0
 13140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13141 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13144 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13145 ;;Total ram usage:        4 bytes
 13146 ;; Hardware stack levels used:    1
 13147 ;; Hardware stack levels required when called:    3
 13148 ;; This function calls:
 13149 ;;		Nothing
 13150 ;; This function is called by:
 13151 ;;		_main
 13152 ;;		_sprintf
 13153 ;; This function uses a non-reentrant model
 13154 ;;
 13155                           
 13156                           	psect	text25
 13157  016244                     __ptext25:
 13158                           	opt stack 0
 13159  016244                     ___flneg:
 13160                           	opt stack 27
 13161                           
 13162                           ; BSR set to: 0
 13163                           ;incstack = 0
 13164  016244  0100               	movlb	0	; () banked
 13165  016246  5197               	movf	___flneg@f1& (0+255),w,b
 13166  016248  0100               	movlb	0	; () banked
 13167  01624A  1198               	iorwf	(___flneg@f1+1)& (0+255),w,b
 13168  01624C  0100               	movlb	0	; () banked
 13169  01624E  1199               	iorwf	(___flneg@f1+2)& (0+255),w,b
 13170  016250  0100               	movlb	0	; () banked
 13171  016252  119A               	iorwf	(___flneg@f1+3)& (0+255),w,b
 13172  016254  B4D8               	btfsc	status,2,c
 13173  016256  D009               	goto	l8536
 13174                           
 13175                           ; BSR set to: 0
 13176  016258  0E00               	movlw	0
 13177  01625A  0100               	movlb	0	; () banked
 13178  01625C  1B97               	xorwf	___flneg@f1& (0+255),f,b
 13179  01625E  0E00               	movlw	0
 13180  016260  1B98               	xorwf	(___flneg@f1+1)& (0+255),f,b
 13181  016262  0E00               	movlw	0
 13182  016264  1B99               	xorwf	(___flneg@f1+2)& (0+255),f,b
 13183  016266  0E80               	movlw	128
 13184  016268  1B9A               	xorwf	(___flneg@f1+3)& (0+255),f,b
 13185  01626A                     l8536:
 13186                           
 13187                           ; BSR set to: 0
 13188  01626A  C097  F097         	movff	___flneg@f1,?___flneg
 13189  01626E  C098  F098         	movff	___flneg@f1+1,?___flneg+1
 13190  016272  C099  F099         	movff	___flneg@f1+2,?___flneg+2
 13191  016276  C09A  F09A         	movff	___flneg@f1+3,?___flneg+3
 13192  01627A  0012               	return	
 13193  01627C                     __end_of___flneg:
 13194                           	opt stack 0
 13195                           tblptru	equ	0xFF8
 13196                           tblptrh	equ	0xFF7
 13197                           tblptrl	equ	0xFF6
 13198                           tablat	equ	0xFF5
 13199                           prodh	equ	0xFF4
 13200                           prodl	equ	0xFF3
 13201                           intcon	equ	0xFF2
 13202                           postinc0	equ	0xFEE
 13203                           wreg	equ	0xFE8
 13204                           indf2	equ	0xFDF
 13205                           postinc2	equ	0xFDE
 13206                           fsr2h	equ	0xFDA
 13207                           fsr2l	equ	0xFD9
 13208                           status	equ	0xFD8
 13209                           
 13210 ;; *************** function ___flge *****************
 13211 ;; Defined at:
 13212 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
 13213 ;; Parameters:    Size  Location     Type
 13214 ;;  ff1             4   16[BANK0 ] unsigned char 
 13215 ;;  ff2             4   20[BANK0 ] unsigned char 
 13216 ;; Auto vars:     Size  Location     Type
 13217 ;;		None
 13218 ;; Return value:  Size  Location     Type
 13219 ;;		None               void
 13220 ;; Registers used:
 13221 ;;		wreg, status,2, status,0
 13222 ;; Tracked objects:
 13223 ;;		On entry : 0/0
 13224 ;;		On exit  : 0/0
 13225 ;;		Unchanged: 0/0
 13226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13227 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13229 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13230 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13231 ;;Total ram usage:       12 bytes
 13232 ;; Hardware stack levels used:    1
 13233 ;; Hardware stack levels required when called:    3
 13234 ;; This function calls:
 13235 ;;		Nothing
 13236 ;; This function is called by:
 13237 ;;		_sprintf
 13238 ;; This function uses a non-reentrant model
 13239 ;;
 13240                           
 13241                           	psect	text26
 13242  01515C                     __ptext26:
 13243                           	opt stack 0
 13244  01515C                     ___flge:
 13245                           	opt stack 25
 13246                           
 13247                           ; BSR set to: 0
 13248                           ;incstack = 0
 13249  01515C  0E00               	movlw	0
 13250  01515E  0100               	movlb	0	; () banked
 13251  015160  1570               	andwf	___flge@ff1& (0+255),w,b
 13252  015162  0100               	movlb	0	; () banked
 13253  015164  6F78               	movwf	??___flge& (0+255),b
 13254  015166  0E00               	movlw	0
 13255  015168  0100               	movlb	0	; () banked
 13256  01516A  1571               	andwf	(___flge@ff1+1)& (0+255),w,b
 13257  01516C  0100               	movlb	0	; () banked
 13258  01516E  6F79               	movwf	(??___flge+1)& (0+255),b
 13259  015170  0E80               	movlw	128
 13260  015172  0100               	movlb	0	; () banked
 13261  015174  1572               	andwf	(___flge@ff1+2)& (0+255),w,b
 13262  015176  0100               	movlb	0	; () banked
 13263  015178  6F7A               	movwf	(??___flge+2)& (0+255),b
 13264  01517A  0E7F               	movlw	127
 13265  01517C  0100               	movlb	0	; () banked
 13266  01517E  1573               	andwf	(___flge@ff1+3)& (0+255),w,b
 13267  015180  0100               	movlb	0	; () banked
 13268  015182  6F7B               	movwf	(??___flge+3)& (0+255),b
 13269  015184  0100               	movlb	0	; () banked
 13270  015186  5178               	movf	??___flge& (0+255),w,b
 13271  015188  0100               	movlb	0	; () banked
 13272  01518A  1179               	iorwf	(??___flge+1)& (0+255),w,b
 13273  01518C  0100               	movlb	0	; () banked
 13274  01518E  117A               	iorwf	(??___flge+2)& (0+255),w,b
 13275  015190  0100               	movlb	0	; () banked
 13276  015192  117B               	iorwf	(??___flge+3)& (0+255),w,b
 13277  015194  A4D8               	btfss	status,2,c
 13278  015196  D009               	goto	l8514
 13279                           
 13280                           ; BSR set to: 0
 13281  015198  0E00               	movlw	0
 13282  01519A  0100               	movlb	0	; () banked
 13283  01519C  6F70               	movwf	___flge@ff1& (0+255),b
 13284  01519E  0E00               	movlw	0
 13285  0151A0  6F71               	movwf	(___flge@ff1+1)& (0+255),b
 13286  0151A2  0E00               	movlw	0
 13287  0151A4  6F72               	movwf	(___flge@ff1+2)& (0+255),b
 13288  0151A6  0E00               	movlw	0
 13289  0151A8  6F73               	movwf	(___flge@ff1+3)& (0+255),b
 13290  0151AA                     l8514:
 13291                           
 13292                           ; BSR set to: 0
 13293  0151AA  0E00               	movlw	0
 13294  0151AC  0100               	movlb	0	; () banked
 13295  0151AE  1574               	andwf	___flge@ff2& (0+255),w,b
 13296  0151B0  0100               	movlb	0	; () banked
 13297  0151B2  6F78               	movwf	??___flge& (0+255),b
 13298  0151B4  0E00               	movlw	0
 13299  0151B6  0100               	movlb	0	; () banked
 13300  0151B8  1575               	andwf	(___flge@ff2+1)& (0+255),w,b
 13301  0151BA  0100               	movlb	0	; () banked
 13302  0151BC  6F79               	movwf	(??___flge+1)& (0+255),b
 13303  0151BE  0E80               	movlw	128
 13304  0151C0  0100               	movlb	0	; () banked
 13305  0151C2  1576               	andwf	(___flge@ff2+2)& (0+255),w,b
 13306  0151C4  0100               	movlb	0	; () banked
 13307  0151C6  6F7A               	movwf	(??___flge+2)& (0+255),b
 13308  0151C8  0E7F               	movlw	127
 13309  0151CA  0100               	movlb	0	; () banked
 13310  0151CC  1577               	andwf	(___flge@ff2+3)& (0+255),w,b
 13311  0151CE  0100               	movlb	0	; () banked
 13312  0151D0  6F7B               	movwf	(??___flge+3)& (0+255),b
 13313  0151D2  0100               	movlb	0	; () banked
 13314  0151D4  5178               	movf	??___flge& (0+255),w,b
 13315  0151D6  0100               	movlb	0	; () banked
 13316  0151D8  1179               	iorwf	(??___flge+1)& (0+255),w,b
 13317  0151DA  0100               	movlb	0	; () banked
 13318  0151DC  117A               	iorwf	(??___flge+2)& (0+255),w,b
 13319  0151DE  0100               	movlb	0	; () banked
 13320  0151E0  117B               	iorwf	(??___flge+3)& (0+255),w,b
 13321  0151E2  A4D8               	btfss	status,2,c
 13322  0151E4  D009               	goto	l8518
 13323                           
 13324                           ; BSR set to: 0
 13325  0151E6  0E00               	movlw	0
 13326  0151E8  0100               	movlb	0	; () banked
 13327  0151EA  6F74               	movwf	___flge@ff2& (0+255),b
 13328  0151EC  0E00               	movlw	0
 13329  0151EE  6F75               	movwf	(___flge@ff2+1)& (0+255),b
 13330  0151F0  0E00               	movlw	0
 13331  0151F2  6F76               	movwf	(___flge@ff2+2)& (0+255),b
 13332  0151F4  0E00               	movlw	0
 13333  0151F6  6F77               	movwf	(___flge@ff2+3)& (0+255),b
 13334  0151F8                     l8518:
 13335                           
 13336                           ; BSR set to: 0
 13337  0151F8  0100               	movlb	0	; () banked
 13338  0151FA  AF73               	btfss	(___flge@ff1+3)& (0+255),7,b
 13339  0151FC  D026               	goto	l8522
 13340                           
 13341                           ; BSR set to: 0
 13342  0151FE  C070  F078         	movff	___flge@ff1,??___flge
 13343  015202  C071  F079         	movff	___flge@ff1+1,??___flge+1
 13344  015206  C072  F07A         	movff	___flge@ff1+2,??___flge+2
 13345  01520A  C073  F07B         	movff	___flge@ff1+3,??___flge+3
 13346  01520E  0100               	movlb	0	; () banked
 13347  015210  1F78               	comf	??___flge& (0+255),f,b
 13348  015212  1F79               	comf	(??___flge+1)& (0+255),f,b
 13349  015214  1F7A               	comf	(??___flge+2)& (0+255),f,b
 13350  015216  1F7B               	comf	(??___flge+3)& (0+255),f,b
 13351  015218  2B78               	incf	??___flge& (0+255),f,b
 13352  01521A  0E00               	movlw	0
 13353  01521C  2379               	addwfc	(??___flge+1)& (0+255),f,b
 13354  01521E  237A               	addwfc	(??___flge+2)& (0+255),f,b
 13355  015220  237B               	addwfc	(??___flge+3)& (0+255),f,b
 13356  015222  0E00               	movlw	0
 13357  015224  0100               	movlb	0	; () banked
 13358  015226  2578               	addwf	??___flge& (0+255),w,b
 13359  015228  0100               	movlb	0	; () banked
 13360  01522A  6F70               	movwf	___flge@ff1& (0+255),b
 13361  01522C  0E00               	movlw	0
 13362  01522E  0100               	movlb	0	; () banked
 13363  015230  2179               	addwfc	(??___flge+1)& (0+255),w,b
 13364  015232  0100               	movlb	0	; () banked
 13365  015234  6F71               	movwf	(___flge@ff1+1)& (0+255),b
 13366  015236  0E00               	movlw	0
 13367  015238  0100               	movlb	0	; () banked
 13368  01523A  217A               	addwfc	(??___flge+2)& (0+255),w,b
 13369  01523C  0100               	movlb	0	; () banked
 13370  01523E  6F72               	movwf	(___flge@ff1+2)& (0+255),b
 13371  015240  0E80               	movlw	128
 13372  015242  0100               	movlb	0	; () banked
 13373  015244  217B               	addwfc	(??___flge+3)& (0+255),w,b
 13374  015246  0100               	movlb	0	; () banked
 13375  015248  6F73               	movwf	(___flge@ff1+3)& (0+255),b
 13376  01524A                     l8522:
 13377                           
 13378                           ; BSR set to: 0
 13379  01524A  0100               	movlb	0	; () banked
 13380  01524C  AF77               	btfss	(___flge@ff2+3)& (0+255),7,b
 13381  01524E  D026               	goto	l1263
 13382                           
 13383                           ; BSR set to: 0
 13384  015250  C074  F078         	movff	___flge@ff2,??___flge
 13385  015254  C075  F079         	movff	___flge@ff2+1,??___flge+1
 13386  015258  C076  F07A         	movff	___flge@ff2+2,??___flge+2
 13387  01525C  C077  F07B         	movff	___flge@ff2+3,??___flge+3
 13388  015260  0100               	movlb	0	; () banked
 13389  015262  1F78               	comf	??___flge& (0+255),f,b
 13390  015264  1F79               	comf	(??___flge+1)& (0+255),f,b
 13391  015266  1F7A               	comf	(??___flge+2)& (0+255),f,b
 13392  015268  1F7B               	comf	(??___flge+3)& (0+255),f,b
 13393  01526A  2B78               	incf	??___flge& (0+255),f,b
 13394  01526C  0E00               	movlw	0
 13395  01526E  2379               	addwfc	(??___flge+1)& (0+255),f,b
 13396  015270  237A               	addwfc	(??___flge+2)& (0+255),f,b
 13397  015272  237B               	addwfc	(??___flge+3)& (0+255),f,b
 13398  015274  0E00               	movlw	0
 13399  015276  0100               	movlb	0	; () banked
 13400  015278  2578               	addwf	??___flge& (0+255),w,b
 13401  01527A  0100               	movlb	0	; () banked
 13402  01527C  6F74               	movwf	___flge@ff2& (0+255),b
 13403  01527E  0E00               	movlw	0
 13404  015280  0100               	movlb	0	; () banked
 13405  015282  2179               	addwfc	(??___flge+1)& (0+255),w,b
 13406  015284  0100               	movlb	0	; () banked
 13407  015286  6F75               	movwf	(___flge@ff2+1)& (0+255),b
 13408  015288  0E00               	movlw	0
 13409  01528A  0100               	movlb	0	; () banked
 13410  01528C  217A               	addwfc	(??___flge+2)& (0+255),w,b
 13411  01528E  0100               	movlb	0	; () banked
 13412  015290  6F76               	movwf	(___flge@ff2+2)& (0+255),b
 13413  015292  0E80               	movlw	128
 13414  015294  0100               	movlb	0	; () banked
 13415  015296  217B               	addwfc	(??___flge+3)& (0+255),w,b
 13416  015298  0100               	movlb	0	; () banked
 13417  01529A  6F77               	movwf	(___flge@ff2+3)& (0+255),b
 13418  01529C                     l1263:
 13419                           
 13420                           ; BSR set to: 0
 13421  01529C  0E00               	movlw	0
 13422  01529E  0100               	movlb	0	; () banked
 13423  0152A0  1B70               	xorwf	___flge@ff1& (0+255),f,b
 13424  0152A2  0E00               	movlw	0
 13425  0152A4  1B71               	xorwf	(___flge@ff1+1)& (0+255),f,b
 13426  0152A6  0E00               	movlw	0
 13427  0152A8  1B72               	xorwf	(___flge@ff1+2)& (0+255),f,b
 13428  0152AA  0E80               	movlw	128
 13429  0152AC  1B73               	xorwf	(___flge@ff1+3)& (0+255),f,b
 13430  0152AE  0E00               	movlw	0
 13431  0152B0  0100               	movlb	0	; () banked
 13432  0152B2  1B74               	xorwf	___flge@ff2& (0+255),f,b
 13433  0152B4  0E00               	movlw	0
 13434  0152B6  1B75               	xorwf	(___flge@ff2+1)& (0+255),f,b
 13435  0152B8  0E00               	movlw	0
 13436  0152BA  1B76               	xorwf	(___flge@ff2+2)& (0+255),f,b
 13437  0152BC  0E80               	movlw	128
 13438  0152BE  1B77               	xorwf	(___flge@ff2+3)& (0+255),f,b
 13439  0152C0  0100               	movlb	0	; () banked
 13440  0152C2  5174               	movf	___flge@ff2& (0+255),w,b
 13441  0152C4  0100               	movlb	0	; () banked
 13442  0152C6  5D70               	subwf	___flge@ff1& (0+255),w,b
 13443  0152C8  0100               	movlb	0	; () banked
 13444  0152CA  5175               	movf	(___flge@ff2+1)& (0+255),w,b
 13445  0152CC  0100               	movlb	0	; () banked
 13446  0152CE  5971               	subwfb	(___flge@ff1+1)& (0+255),w,b
 13447  0152D0  0100               	movlb	0	; () banked
 13448  0152D2  5176               	movf	(___flge@ff2+2)& (0+255),w,b
 13449  0152D4  0100               	movlb	0	; () banked
 13450  0152D6  5972               	subwfb	(___flge@ff1+2)& (0+255),w,b
 13451  0152D8  0100               	movlb	0	; () banked
 13452  0152DA  5177               	movf	(___flge@ff2+3)& (0+255),w,b
 13453  0152DC  0100               	movlb	0	; () banked
 13454  0152DE  5973               	subwfb	(___flge@ff1+3)& (0+255),w,b
 13455  0152E0  B0D8               	btfsc	status,0,c
 13456  0152E2  D002               	goto	l8528
 13457                           
 13458                           ; BSR set to: 0
 13459  0152E4  90D8               	bcf	status,0,c
 13460  0152E6  0012               	return	
 13461  0152E8                     l8528:
 13462                           
 13463                           ; BSR set to: 0
 13464  0152E8  80D8               	bsf	status,0,c
 13465                           
 13466                           ; BSR set to: 0
 13467  0152EA  0012               	return	
 13468  0152EC                     __end_of___flge:
 13469                           	opt stack 0
 13470                           tblptru	equ	0xFF8
 13471                           tblptrh	equ	0xFF7
 13472                           tblptrl	equ	0xFF6
 13473                           tablat	equ	0xFF5
 13474                           prodh	equ	0xFF4
 13475                           prodl	equ	0xFF3
 13476                           intcon	equ	0xFF2
 13477                           postinc0	equ	0xFEE
 13478                           wreg	equ	0xFE8
 13479                           indf2	equ	0xFDF
 13480                           postinc2	equ	0xFDE
 13481                           fsr2h	equ	0xFDA
 13482                           fsr2l	equ	0xFD9
 13483                           status	equ	0xFD8
 13484                           
 13485 ;; *************** function ___fldiv *****************
 13486 ;; Defined at:
 13487 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 13488 ;; Parameters:    Size  Location     Type
 13489 ;;  b               4   30[BANK0 ] unsigned char 
 13490 ;;  a               4   34[BANK0 ] unsigned char 
 13491 ;; Auto vars:     Size  Location     Type
 13492 ;;  grs             4   49[BANK0 ] unsigned long 
 13493 ;;  rem             4   43[BANK0 ] unsigned long 
 13494 ;;  new_exp         2   47[BANK0 ] int 
 13495 ;;  aexp            1   54[BANK0 ] unsigned char 
 13496 ;;  bexp            1   53[BANK0 ] unsigned char 
 13497 ;;  sign            1   42[BANK0 ] unsigned char 
 13498 ;; Return value:  Size  Location     Type
 13499 ;;                  4   30[BANK0 ] unsigned char 
 13500 ;; Registers used:
 13501 ;;		wreg, status,2, status,0
 13502 ;; Tracked objects:
 13503 ;;		On entry : 0/0
 13504 ;;		On exit  : 0/0
 13505 ;;		Unchanged: 0/0
 13506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13507 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13508 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13509 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13510 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13511 ;;Total ram usage:       25 bytes
 13512 ;; Hardware stack levels used:    1
 13513 ;; Hardware stack levels required when called:    3
 13514 ;; This function calls:
 13515 ;;		Nothing
 13516 ;; This function is called by:
 13517 ;;		_LCD_Handler
 13518 ;; This function uses a non-reentrant model
 13519 ;;
 13520                           
 13521                           	psect	text27
 13522  013C58                     __ptext27:
 13523                           	opt stack 0
 13524  013C58                     ___fldiv:
 13525                           	opt stack 26
 13526                           
 13527                           ; BSR set to: 0
 13528                           ;incstack = 0
 13529  013C58  0100               	movlb	0	; () banked
 13530  013C5A  5181               	movf	(___fldiv@b+3)& (0+255),w,b
 13531  013C5C  0B80               	andlw	128
 13532  013C5E  0100               	movlb	0	; () banked
 13533  013C60  6F8A               	movwf	___fldiv@sign& (0+255),b
 13534  013C62  0100               	movlb	0	; () banked
 13535  013C64  5181               	movf	(___fldiv@b+3)& (0+255),w,b
 13536  013C66  2581               	addwf	(___fldiv@b+3)& (0+255),w,b
 13537  013C68  0100               	movlb	0	; () banked
 13538  013C6A  6F95               	movwf	___fldiv@bexp& (0+255),b
 13539                           
 13540                           ; BSR set to: 0
 13541  013C6C  0100               	movlb	0	; () banked
 13542  013C6E  AF80               	btfss	(___fldiv@b+2)& (0+255),7,b
 13543  013C70  D002               	goto	l6716
 13544                           
 13545                           ; BSR set to: 0
 13546  013C72  0100               	movlb	0	; () banked
 13547  013C74  8195               	bsf	___fldiv@bexp& (0+255),0,b
 13548  013C76                     l6716:
 13549                           
 13550                           ; BSR set to: 0
 13551  013C76  0100               	movlb	0	; () banked
 13552  013C78  5195               	movf	___fldiv@bexp& (0+255),w,b
 13553  013C7A  0100               	movlb	0	; () banked
 13554  013C7C  B4D8               	btfsc	status,2,c
 13555  013C7E  D012               	goto	l6726
 13556                           
 13557                           ; BSR set to: 0
 13558  013C80  0100               	movlb	0	; () banked
 13559  013C82  2995               	incf	___fldiv@bexp& (0+255),w,b
 13560  013C84  A4D8               	btfss	status,2,c
 13561  013C86  D009               	goto	l6722
 13562                           
 13563                           ; BSR set to: 0
 13564  013C88  0E00               	movlw	0
 13565  013C8A  0100               	movlb	0	; () banked
 13566  013C8C  6F7E               	movwf	___fldiv@b& (0+255),b
 13567  013C8E  0E00               	movlw	0
 13568  013C90  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 13569  013C92  0E00               	movlw	0
 13570  013C94  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 13571  013C96  0E00               	movlw	0
 13572  013C98  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13573  013C9A                     l6722:
 13574                           
 13575                           ; BSR set to: 0
 13576  013C9A  0100               	movlb	0	; () banked
 13577  013C9C  8F80               	bsf	(___fldiv@b+2)& (0+255),7,b
 13578                           
 13579                           ; BSR set to: 0
 13580  013C9E  0E00               	movlw	0
 13581  013CA0  0100               	movlb	0	; () banked
 13582  013CA2  D008               	goto	L15
 13583  013CA4                     l6726:
 13584                           
 13585                           ; BSR set to: 0
 13586  013CA4  0E00               	movlw	0
 13587  013CA6  0100               	movlb	0	; () banked
 13588  013CA8  6F7E               	movwf	___fldiv@b& (0+255),b
 13589  013CAA  0E00               	movlw	0
 13590  013CAC  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 13591  013CAE  0E00               	movlw	0
 13592  013CB0  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 13593  013CB2  0E00               	movlw	0
 13594  013CB4                     L15:
 13595  013CB4  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13596                           
 13597                           ; BSR set to: 0
 13598                           
 13599                           ; BSR set to: 0
 13600  013CB6  0100               	movlb	0	; () banked
 13601  013CB8  5185               	movf	(___fldiv@a+3)& (0+255),w,b
 13602  013CBA  0B80               	andlw	128
 13603  013CBC  0100               	movlb	0	; () banked
 13604  013CBE  1B8A               	xorwf	___fldiv@sign& (0+255),f,b
 13605                           
 13606                           ; BSR set to: 0
 13607  013CC0  0100               	movlb	0	; () banked
 13608  013CC2  5185               	movf	(___fldiv@a+3)& (0+255),w,b
 13609  013CC4  2585               	addwf	(___fldiv@a+3)& (0+255),w,b
 13610  013CC6  0100               	movlb	0	; () banked
 13611  013CC8  6F96               	movwf	___fldiv@aexp& (0+255),b
 13612                           
 13613                           ; BSR set to: 0
 13614  013CCA  0100               	movlb	0	; () banked
 13615  013CCC  AF84               	btfss	(___fldiv@a+2)& (0+255),7,b
 13616  013CCE  D002               	goto	l6736
 13617                           
 13618                           ; BSR set to: 0
 13619  013CD0  0100               	movlb	0	; () banked
 13620  013CD2  8196               	bsf	___fldiv@aexp& (0+255),0,b
 13621  013CD4                     l6736:
 13622                           
 13623                           ; BSR set to: 0
 13624  013CD4  0100               	movlb	0	; () banked
 13625  013CD6  5196               	movf	___fldiv@aexp& (0+255),w,b
 13626  013CD8  0100               	movlb	0	; () banked
 13627  013CDA  B4D8               	btfsc	status,2,c
 13628  013CDC  D012               	goto	l6746
 13629                           
 13630                           ; BSR set to: 0
 13631  013CDE  0100               	movlb	0	; () banked
 13632  013CE0  2996               	incf	___fldiv@aexp& (0+255),w,b
 13633  013CE2  A4D8               	btfss	status,2,c
 13634  013CE4  D009               	goto	l6742
 13635                           
 13636                           ; BSR set to: 0
 13637  013CE6  0E00               	movlw	0
 13638  013CE8  0100               	movlb	0	; () banked
 13639  013CEA  6F82               	movwf	___fldiv@a& (0+255),b
 13640  013CEC  0E00               	movlw	0
 13641  013CEE  6F83               	movwf	(___fldiv@a+1)& (0+255),b
 13642  013CF0  0E00               	movlw	0
 13643  013CF2  6F84               	movwf	(___fldiv@a+2)& (0+255),b
 13644  013CF4  0E00               	movlw	0
 13645  013CF6  6F85               	movwf	(___fldiv@a+3)& (0+255),b
 13646  013CF8                     l6742:
 13647                           
 13648                           ; BSR set to: 0
 13649  013CF8  0100               	movlb	0	; () banked
 13650  013CFA  8F84               	bsf	(___fldiv@a+2)& (0+255),7,b
 13651                           
 13652                           ; BSR set to: 0
 13653  013CFC  0E00               	movlw	0
 13654  013CFE  0100               	movlb	0	; () banked
 13655  013D00  D008               	goto	L16
 13656  013D02                     l6746:
 13657                           
 13658                           ; BSR set to: 0
 13659  013D02  0E00               	movlw	0
 13660  013D04  0100               	movlb	0	; () banked
 13661  013D06  6F82               	movwf	___fldiv@a& (0+255),b
 13662  013D08  0E00               	movlw	0
 13663  013D0A  6F83               	movwf	(___fldiv@a+1)& (0+255),b
 13664  013D0C  0E00               	movlw	0
 13665  013D0E  6F84               	movwf	(___fldiv@a+2)& (0+255),b
 13666  013D10  0E00               	movlw	0
 13667  013D12                     L16:
 13668  013D12  6F85               	movwf	(___fldiv@a+3)& (0+255),b
 13669                           
 13670                           ; BSR set to: 0
 13671                           
 13672                           ; BSR set to: 0
 13673  013D14  0100               	movlb	0	; () banked
 13674  013D16  5182               	movf	___fldiv@a& (0+255),w,b
 13675  013D18  0100               	movlb	0	; () banked
 13676  013D1A  1183               	iorwf	(___fldiv@a+1)& (0+255),w,b
 13677  013D1C  0100               	movlb	0	; () banked
 13678  013D1E  1184               	iorwf	(___fldiv@a+2)& (0+255),w,b
 13679  013D20  0100               	movlb	0	; () banked
 13680  013D22  1185               	iorwf	(___fldiv@a+3)& (0+255),w,b
 13681  013D24  A4D8               	btfss	status,2,c
 13682  013D26  D017               	goto	l6758
 13683                           
 13684                           ; BSR set to: 0
 13685  013D28  0E00               	movlw	0
 13686  013D2A  0100               	movlb	0	; () banked
 13687  013D2C  6F7E               	movwf	___fldiv@b& (0+255),b
 13688  013D2E  0E00               	movlw	0
 13689  013D30  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 13690  013D32  0E00               	movlw	0
 13691  013D34  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 13692  013D36  0E00               	movlw	0
 13693  013D38  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13694                           
 13695                           ; BSR set to: 0
 13696  013D3A  0100               	movlb	0	; () banked
 13697  013D3C  0E80               	movlw	128
 13698  013D3E  1380               	iorwf	(___fldiv@b+2)& (0+255),f,b
 13699  013D40  0E7F               	movlw	127
 13700  013D42  1381               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13701                           
 13702                           ; BSR set to: 0
 13703  013D44  C07E  F07E         	movff	___fldiv@b,?___fldiv
 13704  013D48  C07F  F07F         	movff	___fldiv@b+1,?___fldiv+1
 13705  013D4C  C080  F080         	movff	___fldiv@b+2,?___fldiv+2
 13706  013D50  C081  F081         	movff	___fldiv@b+3,?___fldiv+3
 13707                           
 13708                           ; BSR set to: 0
 13709  013D54  0012               	return	
 13710  013D56                     l6758:
 13711                           
 13712                           ; BSR set to: 0
 13713  013D56  0100               	movlb	0	; () banked
 13714  013D58  5195               	movf	___fldiv@bexp& (0+255),w,b
 13715  013D5A  0100               	movlb	0	; () banked
 13716  013D5C  A4D8               	btfss	status,2,c
 13717  013D5E  D012               	goto	l6766
 13718                           
 13719                           ; BSR set to: 0
 13720  013D60  0E00               	movlw	0
 13721  013D62  0100               	movlb	0	; () banked
 13722  013D64  6F7E               	movwf	___fldiv@b& (0+255),b
 13723  013D66  0E00               	movlw	0
 13724  013D68  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 13725  013D6A  0E00               	movlw	0
 13726  013D6C  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 13727  013D6E  0E00               	movlw	0
 13728  013D70  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13729                           
 13730                           ; BSR set to: 0
 13731  013D72  C07E  F07E         	movff	___fldiv@b,?___fldiv
 13732  013D76  C07F  F07F         	movff	___fldiv@b+1,?___fldiv+1
 13733  013D7A  C080  F080         	movff	___fldiv@b+2,?___fldiv+2
 13734  013D7E  C081  F081         	movff	___fldiv@b+3,?___fldiv+3
 13735                           
 13736                           ; BSR set to: 0
 13737  013D82  0012               	return	
 13738  013D84                     l6766:
 13739                           
 13740                           ; BSR set to: 0
 13741  013D84  0100               	movlb	0	; () banked
 13742  013D86  5196               	movf	___fldiv@aexp& (0+255),w,b
 13743  013D88  0100               	movlb	0	; () banked
 13744  013D8A  6F86               	movwf	??___fldiv& (0+255),b
 13745  013D8C  6B87               	clrf	(??___fldiv+1)& (0+255),b
 13746  013D8E  0100               	movlb	0	; () banked
 13747  013D90  1F86               	comf	??___fldiv& (0+255),f,b
 13748  013D92  1F87               	comf	(??___fldiv+1)& (0+255),f,b
 13749  013D94  4B86               	infsnz	??___fldiv& (0+255),f,b
 13750  013D96  2B87               	incf	(??___fldiv+1)& (0+255),f,b
 13751  013D98  0100               	movlb	0	; () banked
 13752  013D9A  5195               	movf	___fldiv@bexp& (0+255),w,b
 13753  013D9C  0100               	movlb	0	; () banked
 13754  013D9E  6F88               	movwf	(??___fldiv+2)& (0+255),b
 13755  013DA0  6B89               	clrf	(??___fldiv+3)& (0+255),b
 13756  013DA2  0100               	movlb	0	; () banked
 13757  013DA4  5186               	movf	??___fldiv& (0+255),w,b
 13758  013DA6  0100               	movlb	0	; () banked
 13759  013DA8  2788               	addwf	(??___fldiv+2)& (0+255),f,b
 13760  013DAA  0100               	movlb	0	; () banked
 13761  013DAC  5187               	movf	(??___fldiv+1)& (0+255),w,b
 13762  013DAE  0100               	movlb	0	; () banked
 13763  013DB0  2389               	addwfc	(??___fldiv+3)& (0+255),f,b
 13764  013DB2  0E7F               	movlw	127
 13765  013DB4  0100               	movlb	0	; () banked
 13766  013DB6  2588               	addwf	(??___fldiv+2)& (0+255),w,b
 13767  013DB8  0100               	movlb	0	; () banked
 13768  013DBA  6F8F               	movwf	___fldiv@new_exp& (0+255),b
 13769  013DBC  0E00               	movlw	0
 13770  013DBE  0100               	movlb	0	; () banked
 13771  013DC0  2189               	addwfc	(??___fldiv+3)& (0+255),w,b
 13772  013DC2  0100               	movlb	0	; () banked
 13773  013DC4  6F90               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13774                           
 13775                           ; BSR set to: 0
 13776  013DC6  C07E  F08B         	movff	___fldiv@b,___fldiv@rem
 13777  013DCA  C07F  F08C         	movff	___fldiv@b+1,___fldiv@rem+1
 13778  013DCE  C080  F08D         	movff	___fldiv@b+2,___fldiv@rem+2
 13779  013DD2  C081  F08E         	movff	___fldiv@b+3,___fldiv@rem+3
 13780                           
 13781                           ; BSR set to: 0
 13782  013DD6  0E00               	movlw	0
 13783  013DD8  0100               	movlb	0	; () banked
 13784  013DDA  6F7E               	movwf	___fldiv@b& (0+255),b
 13785  013DDC  0E00               	movlw	0
 13786  013DDE  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 13787  013DE0  0E00               	movlw	0
 13788  013DE2  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 13789  013DE4  0E00               	movlw	0
 13790  013DE6  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13791                           
 13792                           ; BSR set to: 0
 13793  013DE8  0E00               	movlw	0
 13794  013DEA  0100               	movlb	0	; () banked
 13795  013DEC  6F91               	movwf	___fldiv@grs& (0+255),b
 13796  013DEE  0E00               	movlw	0
 13797  013DF0  6F92               	movwf	(___fldiv@grs+1)& (0+255),b
 13798  013DF2  0E00               	movlw	0
 13799  013DF4  6F93               	movwf	(___fldiv@grs+2)& (0+255),b
 13800  013DF6  0E00               	movlw	0
 13801  013DF8  6F94               	movwf	(___fldiv@grs+3)& (0+255),b
 13802                           
 13803                           ; BSR set to: 0
 13804  013DFA  0E00               	movlw	0
 13805  013DFC  0100               	movlb	0	; () banked
 13806  013DFE  6F96               	movwf	___fldiv@aexp& (0+255),b
 13807  013E00  D042               	goto	l1596
 13808  013E02                     l6776:
 13809                           
 13810                           ; BSR set to: 0
 13811  013E02  0100               	movlb	0	; () banked
 13812  013E04  5196               	movf	___fldiv@aexp& (0+255),w,b
 13813  013E06  0100               	movlb	0	; () banked
 13814  013E08  B4D8               	btfsc	status,2,c
 13815  013E0A  D017               	goto	l6784
 13816                           
 13817                           ; BSR set to: 0
 13818  013E0C  0100               	movlb	0	; () banked
 13819  013E0E  90D8               	bcf	status,0,c
 13820  013E10  378B               	rlcf	___fldiv@rem& (0+255),f,b
 13821  013E12  378C               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13822  013E14  378D               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13823  013E16  378E               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13824  013E18  0100               	movlb	0	; () banked
 13825  013E1A  90D8               	bcf	status,0,c
 13826  013E1C  377E               	rlcf	___fldiv@b& (0+255),f,b
 13827  013E1E  377F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13828  013E20  3780               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13829  013E22  3781               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13830                           
 13831                           ; BSR set to: 0
 13832  013E24  0100               	movlb	0	; () banked
 13833  013E26  AF94               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13834  013E28  D002               	goto	l1599
 13835                           
 13836                           ; BSR set to: 0
 13837  013E2A  0100               	movlb	0	; () banked
 13838  013E2C  817E               	bsf	___fldiv@b& (0+255),0,b
 13839  013E2E                     l1599:
 13840                           
 13841                           ; BSR set to: 0
 13842  013E2E  0100               	movlb	0	; () banked
 13843  013E30  90D8               	bcf	status,0,c
 13844  013E32  3791               	rlcf	___fldiv@grs& (0+255),f,b
 13845  013E34  3792               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13846  013E36  3793               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13847  013E38  3794               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13848  013E3A                     l6784:
 13849                           
 13850                           ; BSR set to: 0
 13851  013E3A  0100               	movlb	0	; () banked
 13852  013E3C  5182               	movf	___fldiv@a& (0+255),w,b
 13853  013E3E  0100               	movlb	0	; () banked
 13854  013E40  5D8B               	subwf	___fldiv@rem& (0+255),w,b
 13855  013E42  0100               	movlb	0	; () banked
 13856  013E44  5183               	movf	(___fldiv@a+1)& (0+255),w,b
 13857  013E46  0100               	movlb	0	; () banked
 13858  013E48  598C               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13859  013E4A  0100               	movlb	0	; () banked
 13860  013E4C  5184               	movf	(___fldiv@a+2)& (0+255),w,b
 13861  013E4E  0100               	movlb	0	; () banked
 13862  013E50  598D               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13863  013E52  0100               	movlb	0	; () banked
 13864  013E54  5185               	movf	(___fldiv@a+3)& (0+255),w,b
 13865  013E56  0100               	movlb	0	; () banked
 13866  013E58  598E               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13867  013E5A  A0D8               	btfss	status,0,c
 13868  013E5C  D012               	goto	l6790
 13869                           
 13870                           ; BSR set to: 0
 13871  013E5E  0100               	movlb	0	; () banked
 13872  013E60  8D94               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13873                           
 13874                           ; BSR set to: 0
 13875  013E62  0100               	movlb	0	; () banked
 13876  013E64  5182               	movf	___fldiv@a& (0+255),w,b
 13877  013E66  0100               	movlb	0	; () banked
 13878  013E68  5F8B               	subwf	___fldiv@rem& (0+255),f,b
 13879  013E6A  0100               	movlb	0	; () banked
 13880  013E6C  5183               	movf	(___fldiv@a+1)& (0+255),w,b
 13881  013E6E  0100               	movlb	0	; () banked
 13882  013E70  5B8C               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13883  013E72  0100               	movlb	0	; () banked
 13884  013E74  5184               	movf	(___fldiv@a+2)& (0+255),w,b
 13885  013E76  0100               	movlb	0	; () banked
 13886  013E78  5B8D               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13887  013E7A  0100               	movlb	0	; () banked
 13888  013E7C  5185               	movf	(___fldiv@a+3)& (0+255),w,b
 13889  013E7E  0100               	movlb	0	; () banked
 13890  013E80  5B8E               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13891  013E82                     l6790:
 13892                           
 13893                           ; BSR set to: 0
 13894  013E82  0100               	movlb	0	; () banked
 13895  013E84  2B96               	incf	___fldiv@aexp& (0+255),f,b
 13896  013E86                     l1596:
 13897                           
 13898                           ; BSR set to: 0
 13899  013E86  0E19               	movlw	25
 13900  013E88  0100               	movlb	0	; () banked
 13901  013E8A  6596               	cpfsgt	___fldiv@aexp& (0+255),b
 13902  013E8C  D7BA               	goto	l6776
 13903                           
 13904                           ; BSR set to: 0
 13905                           
 13906                           ; BSR set to: 0
 13907  013E8E  0100               	movlb	0	; () banked
 13908  013E90  518B               	movf	___fldiv@rem& (0+255),w,b
 13909  013E92  0100               	movlb	0	; () banked
 13910  013E94  118C               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13911  013E96  0100               	movlb	0	; () banked
 13912  013E98  118D               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13913  013E9A  0100               	movlb	0	; () banked
 13914  013E9C  118E               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13915  013E9E  B4D8               	btfsc	status,2,c
 13916  013EA0  D018               	goto	l6802
 13917                           
 13918                           ; BSR set to: 0
 13919  013EA2  0100               	movlb	0	; () banked
 13920  013EA4  8191               	bsf	___fldiv@grs& (0+255),0,b
 13921                           
 13922                           ; BSR set to: 0
 13923  013EA6  D015               	goto	l6802
 13924  013EA8                     l6796:
 13925                           
 13926                           ; BSR set to: 0
 13927  013EA8  0100               	movlb	0	; () banked
 13928  013EAA  90D8               	bcf	status,0,c
 13929  013EAC  377E               	rlcf	___fldiv@b& (0+255),f,b
 13930  013EAE  377F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13931  013EB0  3780               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13932  013EB2  3781               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13933                           
 13934                           ; BSR set to: 0
 13935  013EB4  0100               	movlb	0	; () banked
 13936  013EB6  AF94               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13937  013EB8  D002               	goto	l1605
 13938                           
 13939                           ; BSR set to: 0
 13940  013EBA  0100               	movlb	0	; () banked
 13941  013EBC  817E               	bsf	___fldiv@b& (0+255),0,b
 13942  013EBE                     l1605:
 13943                           
 13944                           ; BSR set to: 0
 13945  013EBE  0100               	movlb	0	; () banked
 13946  013EC0  90D8               	bcf	status,0,c
 13947  013EC2  3791               	rlcf	___fldiv@grs& (0+255),f,b
 13948  013EC4  3792               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13949  013EC6  3793               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13950  013EC8  3794               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13951  013ECA  0100               	movlb	0	; () banked
 13952  013ECC  078F               	decf	___fldiv@new_exp& (0+255),f,b
 13953  013ECE  A0D8               	btfss	status,0,c
 13954  013ED0  0790               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13955  013ED2                     l6802:
 13956                           
 13957                           ; BSR set to: 0
 13958  013ED2  0100               	movlb	0	; () banked
 13959  013ED4  AF80               	btfss	(___fldiv@b+2)& (0+255),7,b
 13960  013ED6  D7E8               	goto	l6796
 13961                           
 13962                           ; BSR set to: 0
 13963                           
 13964                           ; BSR set to: 0
 13965  013ED8  0E00               	movlw	0
 13966  013EDA  0100               	movlb	0	; () banked
 13967  013EDC  6F96               	movwf	___fldiv@aexp& (0+255),b
 13968                           
 13969                           ; BSR set to: 0
 13970  013EDE  0100               	movlb	0	; () banked
 13971  013EE0  AF94               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13972  013EE2  D024               	goto	l1607
 13973                           
 13974                           ; BSR set to: 0
 13975  013EE4  0EFF               	movlw	255
 13976  013EE6  0100               	movlb	0	; () banked
 13977  013EE8  1591               	andwf	___fldiv@grs& (0+255),w,b
 13978  013EEA  0100               	movlb	0	; () banked
 13979  013EEC  6F86               	movwf	??___fldiv& (0+255),b
 13980  013EEE  0EFF               	movlw	255
 13981  013EF0  0100               	movlb	0	; () banked
 13982  013EF2  1592               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13983  013EF4  0100               	movlb	0	; () banked
 13984  013EF6  6F87               	movwf	(??___fldiv+1)& (0+255),b
 13985  013EF8  0EFF               	movlw	255
 13986  013EFA  0100               	movlb	0	; () banked
 13987  013EFC  1593               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13988  013EFE  0100               	movlb	0	; () banked
 13989  013F00  6F88               	movwf	(??___fldiv+2)& (0+255),b
 13990  013F02  0E7F               	movlw	127
 13991  013F04  0100               	movlb	0	; () banked
 13992  013F06  1594               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13993  013F08  0100               	movlb	0	; () banked
 13994  013F0A  6F89               	movwf	(??___fldiv+3)& (0+255),b
 13995  013F0C  0100               	movlb	0	; () banked
 13996  013F0E  5186               	movf	??___fldiv& (0+255),w,b
 13997  013F10  0100               	movlb	0	; () banked
 13998  013F12  1187               	iorwf	(??___fldiv+1)& (0+255),w,b
 13999  013F14  0100               	movlb	0	; () banked
 14000  013F16  1188               	iorwf	(??___fldiv+2)& (0+255),w,b
 14001  013F18  0100               	movlb	0	; () banked
 14002  013F1A  1189               	iorwf	(??___fldiv+3)& (0+255),w,b
 14003  013F1C  A4D8               	btfss	status,2,c
 14004  013F1E  D003               	goto	l6812
 14005                           
 14006                           ; BSR set to: 0
 14007                           
 14008                           ; BSR set to: 0
 14009  013F20  0100               	movlb	0	; () banked
 14010  013F22  A17E               	btfss	___fldiv@b& (0+255),0,b
 14011  013F24  D003               	goto	l1607
 14012  013F26                     l6812:
 14013                           
 14014                           ; BSR set to: 0
 14015  013F26  0E01               	movlw	1
 14016  013F28  0100               	movlb	0	; () banked
 14017  013F2A  6F96               	movwf	___fldiv@aexp& (0+255),b
 14018  013F2C                     l1607:
 14019                           
 14020                           ; BSR set to: 0
 14021  013F2C  0100               	movlb	0	; () banked
 14022  013F2E  5196               	movf	___fldiv@aexp& (0+255),w,b
 14023  013F30  0100               	movlb	0	; () banked
 14024  013F32  B4D8               	btfsc	status,2,c
 14025  013F34  D023               	goto	l6822
 14026                           
 14027                           ; BSR set to: 0
 14028  013F36  0E01               	movlw	1
 14029  013F38  0100               	movlb	0	; () banked
 14030  013F3A  277E               	addwf	___fldiv@b& (0+255),f,b
 14031  013F3C  0E00               	movlw	0
 14032  013F3E  237F               	addwfc	(___fldiv@b+1)& (0+255),f,b
 14033  013F40  2380               	addwfc	(___fldiv@b+2)& (0+255),f,b
 14034  013F42  2381               	addwfc	(___fldiv@b+3)& (0+255),f,b
 14035                           
 14036                           ; BSR set to: 0
 14037  013F44  0100               	movlb	0	; () banked
 14038  013F46  A181               	btfss	(___fldiv@b+3)& (0+255),0,b
 14039  013F48  D019               	goto	l6822
 14040                           
 14041                           ; BSR set to: 0
 14042  013F4A  C07E  F086         	movff	___fldiv@b,??___fldiv
 14043  013F4E  C07F  F087         	movff	___fldiv@b+1,??___fldiv+1
 14044  013F52  C080  F088         	movff	___fldiv@b+2,??___fldiv+2
 14045  013F56  C081  F089         	movff	___fldiv@b+3,??___fldiv+3
 14046  013F5A  0100               	movlb	0	; () banked
 14047  013F5C  3589               	rlcf	(??___fldiv+3)& (0+255),w,b
 14048  013F5E  3389               	rrcf	(??___fldiv+3)& (0+255),f,b
 14049  013F60  3388               	rrcf	(??___fldiv+2)& (0+255),f,b
 14050  013F62  3387               	rrcf	(??___fldiv+1)& (0+255),f,b
 14051  013F64  3386               	rrcf	??___fldiv& (0+255),f,b
 14052  013F66  C086  F07E         	movff	??___fldiv,___fldiv@b
 14053  013F6A  C087  F07F         	movff	??___fldiv+1,___fldiv@b+1
 14054  013F6E  C088  F080         	movff	??___fldiv+2,___fldiv@b+2
 14055  013F72  C089  F081         	movff	??___fldiv+3,___fldiv@b+3
 14056                           
 14057                           ; BSR set to: 0
 14058  013F76  0100               	movlb	0	; () banked
 14059  013F78  4B8F               	infsnz	___fldiv@new_exp& (0+255),f,b
 14060  013F7A  2B90               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 14061  013F7C                     l6822:
 14062                           
 14063                           ; BSR set to: 0
 14064  013F7C  0100               	movlb	0	; () banked
 14065  013F7E  BF90               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14066  013F80  D014               	goto	l6826
 14067  013F82  0100               	movlb	0	; () banked
 14068  013F84  5190               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14069  013F86  E104               	bnz	u8590
 14070  013F88  0100               	movlb	0	; () banked
 14071  013F8A  298F               	incf	___fldiv@new_exp& (0+255),w,b
 14072  013F8C  A0D8               	btfss	status,0,c
 14073  013F8E  D00D               	goto	l6826
 14074  013F90                     u8590:
 14075                           
 14076                           ; BSR set to: 0
 14077  013F90  0E00               	movlw	0
 14078  013F92  0100               	movlb	0	; () banked
 14079  013F94  6F90               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14080  013F96  698F               	setf	___fldiv@new_exp& (0+255),b
 14081  013F98  0E00               	movlw	0
 14082  013F9A  0100               	movlb	0	; () banked
 14083  013F9C  6F7E               	movwf	___fldiv@b& (0+255),b
 14084  013F9E  0E00               	movlw	0
 14085  013FA0  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 14086  013FA2  0E00               	movlw	0
 14087  013FA4  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 14088  013FA6  0E00               	movlw	0
 14089  013FA8  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 14090  013FAA                     l6826:
 14091                           
 14092                           ; BSR set to: 0
 14093  013FAA  0100               	movlb	0	; () banked
 14094  013FAC  BF90               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 14095  013FAE  D007               	goto	l6828
 14096  013FB0  0100               	movlb	0	; () banked
 14097  013FB2  5190               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 14098  013FB4  E115               	bnz	l6830
 14099  013FB6  0100               	movlb	0	; () banked
 14100  013FB8  058F               	decf	___fldiv@new_exp& (0+255),w,b
 14101  013FBA  B0D8               	btfsc	status,0,c
 14102  013FBC  D011               	goto	l6830
 14103  013FBE                     l6828:
 14104                           
 14105                           ; BSR set to: 0
 14106  013FBE  0E00               	movlw	0
 14107  013FC0  0100               	movlb	0	; () banked
 14108  013FC2  6F90               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14109  013FC4  0E00               	movlw	0
 14110  013FC6  6F8F               	movwf	___fldiv@new_exp& (0+255),b
 14111  013FC8  0E00               	movlw	0
 14112  013FCA  0100               	movlb	0	; () banked
 14113  013FCC  6F7E               	movwf	___fldiv@b& (0+255),b
 14114  013FCE  0E00               	movlw	0
 14115  013FD0  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 14116  013FD2  0E00               	movlw	0
 14117  013FD4  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 14118  013FD6  0E00               	movlw	0
 14119  013FD8  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 14120  013FDA  0E00               	movlw	0
 14121  013FDC  0100               	movlb	0	; () banked
 14122  013FDE  6F8A               	movwf	___fldiv@sign& (0+255),b
 14123  013FE0                     l6830:
 14124                           
 14125                           ; BSR set to: 0
 14126  013FE0  C08F  F095         	movff	___fldiv@new_exp,___fldiv@bexp
 14127                           
 14128                           ; BSR set to: 0
 14129  013FE4  0100               	movlb	0	; () banked
 14130  013FE6  A195               	btfss	___fldiv@bexp& (0+255),0,b
 14131  013FE8  D003               	goto	l6836
 14132                           
 14133                           ; BSR set to: 0
 14134  013FEA  0100               	movlb	0	; () banked
 14135  013FEC  8F80               	bsf	(___fldiv@b+2)& (0+255),7,b
 14136  013FEE  D002               	goto	l6838
 14137  013FF0                     l6836:
 14138                           
 14139                           ; BSR set to: 0
 14140  013FF0  0100               	movlb	0	; () banked
 14141  013FF2  9F80               	bcf	(___fldiv@b+2)& (0+255),7,b
 14142  013FF4                     l6838:
 14143                           
 14144                           ; BSR set to: 0
 14145  013FF4  0100               	movlb	0	; () banked
 14146  013FF6  90D8               	bcf	status,0,c
 14147  013FF8  3195               	rrcf	___fldiv@bexp& (0+255),w,b
 14148  013FFA  0100               	movlb	0	; () banked
 14149  013FFC  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 14150                           
 14151                           ; BSR set to: 0
 14152  013FFE  0100               	movlb	0	; () banked
 14153  014000  518A               	movf	___fldiv@sign& (0+255),w,b
 14154  014002  0100               	movlb	0	; () banked
 14155  014004  1381               	iorwf	(___fldiv@b+3)& (0+255),f,b
 14156                           
 14157                           ; BSR set to: 0
 14158  014006  C07E  F07E         	movff	___fldiv@b,?___fldiv
 14159  01400A  C07F  F07F         	movff	___fldiv@b+1,?___fldiv+1
 14160  01400E  C080  F080         	movff	___fldiv@b+2,?___fldiv+2
 14161  014012  C081  F081         	movff	___fldiv@b+3,?___fldiv+3
 14162  014016  0012               	return	
 14163  014018                     __end_of___fldiv:
 14164                           	opt stack 0
 14165                           tblptru	equ	0xFF8
 14166                           tblptrh	equ	0xFF7
 14167                           tblptrl	equ	0xFF6
 14168                           tablat	equ	0xFF5
 14169                           prodh	equ	0xFF4
 14170                           prodl	equ	0xFF3
 14171                           intcon	equ	0xFF2
 14172                           postinc0	equ	0xFEE
 14173                           wreg	equ	0xFE8
 14174                           indf2	equ	0xFDF
 14175                           postinc2	equ	0xFDE
 14176                           fsr2h	equ	0xFDA
 14177                           fsr2l	equ	0xFD9
 14178                           status	equ	0xFD8
 14179                           
 14180 ;; *************** function _LCD_write_integer *****************
 14181 ;; Defined at:
 14182 ;;		line 210 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14183 ;; Parameters:    Size  Location     Type
 14184 ;;  value           2   40[BANK0 ] int 
 14185 ;;  number_of_di    1   42[BANK0 ] unsigned char 
 14186 ;;  zero_cleanin    1   43[BANK0 ] unsigned char 
 14187 ;; Auto vars:     Size  Location     Type
 14188 ;;  convertedInt    6   49[BANK0 ] unsigned char [6]
 14189 ;;  index           1   55[BANK0 ] unsigned char 
 14190 ;; Return value:  Size  Location     Type
 14191 ;;		None               void
 14192 ;; Registers used:
 14193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14194 ;; Tracked objects:
 14195 ;;		On entry : 0/0
 14196 ;;		On exit  : 0/0
 14197 ;;		Unchanged: 0/0
 14198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14199 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14200 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14201 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14202 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14203 ;;Total ram usage:       16 bytes
 14204 ;; Hardware stack levels used:    1
 14205 ;; Hardware stack levels required when called:    9
 14206 ;; This function calls:
 14207 ;;		_LCD_write_string
 14208 ;;		_itoa
 14209 ;; This function is called by:
 14210 ;;		_LCD_Handler
 14211 ;; This function uses a non-reentrant model
 14212 ;;
 14213                           
 14214                           	psect	text28
 14215  014C50                     __ptext28:
 14216                           	opt stack 0
 14217  014C50                     _LCD_write_integer:
 14218                           	opt stack 20
 14219                           
 14220                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 14221                           
 14222                           ; BSR set to: 0
 14223                           ;incstack = 0
 14224  014C50  EE21  F007         	lfsr	2,LCD_write_integer@F17272
 14225  014C54  EE10  F091         	lfsr	1,LCD_write_integer@convertedInt
 14226  014C58  0E05               	movlw	5
 14227  014C5A                     u11601:
 14228  014C5A  CFDB FFE3          	movff	plusw2,plusw1
 14229  014C5E  06E8               	decf	wreg,f,c
 14230  014C60  E2FC               	bc	u11601
 14231                           
 14232                           ;src\LCD_44780.c: 216: unsigned char index;
 14233                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 14234  014C62  0E91               	movlw	low LCD_write_integer@convertedInt
 14235  014C64  0100               	movlb	0	; () banked
 14236  014C66  6F80               	movwf	itoa@buf& (0+255),b
 14237  014C68  0E00               	movlw	high LCD_write_integer@convertedInt
 14238  014C6A  0100               	movlb	0	; () banked
 14239  014C6C  6F81               	movwf	(itoa@buf+1)& (0+255),b
 14240  014C6E  C088  F082         	movff	LCD_write_integer@value,itoa@val
 14241  014C72  C089  F083         	movff	LCD_write_integer@value+1,itoa@val+1
 14242  014C76  0E00               	movlw	0
 14243  014C78  0100               	movlb	0	; () banked
 14244  014C7A  6F85               	movwf	(itoa@base+1)& (0+255),b
 14245  014C7C  0E0A               	movlw	10
 14246  014C7E  6F84               	movwf	itoa@base& (0+255),b
 14247  014C80  ECA1  F0B0         	call	_itoa	;wreg free
 14248                           
 14249                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 14250  014C84  0100               	movlb	0	; () banked
 14251  014C86  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14252  014C88  0100               	movlb	0	; () banked
 14253  014C8A  B4D8               	btfsc	status,2,c
 14254  014C8C  D0B8               	goto	l8704
 14255                           
 14256                           ; BSR set to: 0
 14257                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 14258  014C8E  0100               	movlb	0	; () banked
 14259  014C90  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14260  014C92  0D01               	mullw	1
 14261  014C94  0E91               	movlw	low LCD_write_integer@convertedInt
 14262  014C96  24F3               	addwf	prodl,w,c
 14263  014C98  6ED9               	movwf	fsr2l,c
 14264  014C9A  0E00               	movlw	high LCD_write_integer@convertedInt
 14265  014C9C  20F4               	addwfc	prodh,w,c
 14266  014C9E  6EDA               	movwf	fsr2h,c
 14267  014CA0  0E00               	movlw	0
 14268  014CA2  6EDF               	movwf	indf2,c
 14269                           
 14270                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 14271  014CA4  D070               	goto	l8700
 14272  014CA6                     l8682:
 14273                           
 14274                           ; BSR set to: 0
 14275                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 14276  014CA6  0100               	movlb	0	; () banked
 14277  014CA8  058A               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 14278  014CAA  0100               	movlb	0	; () banked
 14279  014CAC  6F97               	movwf	LCD_write_integer@index& (0+255),b
 14280  014CAE                     l8684:
 14281                           
 14282                           ; BSR set to: 0
 14283  014CAE  0100               	movlb	0	; () banked
 14284  014CB0  5197               	movf	LCD_write_integer@index& (0+255),w,b
 14285  014CB2  0100               	movlb	0	; () banked
 14286  014CB4  B4D8               	btfsc	status,2,c
 14287  014CB6  D067               	goto	l8700
 14288                           
 14289                           ; BSR set to: 0
 14290                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 14291                           
 14292                           ; BSR set to: 0
 14293                           
 14294                           ; BSR set to: 0
 14295  014CB8  0EFF               	movlw	255
 14296  014CBA  0100               	movlb	0	; () banked
 14297  014CBC  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 14298  014CBE  0EFF               	movlw	255
 14299  014CC0  0100               	movlb	0	; () banked
 14300  014CC2  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14301  014CC4  0100               	movlb	0	; () banked
 14302  014CC6  5197               	movf	LCD_write_integer@index& (0+255),w,b
 14303  014CC8  0100               	movlb	0	; () banked
 14304  014CCA  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14305  014CCC  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14306  014CCE  0100               	movlb	0	; () banked
 14307  014CD0  518C               	movf	??_LCD_write_integer& (0+255),w,b
 14308  014CD2  0100               	movlb	0	; () banked
 14309  014CD4  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14310  014CD6  0100               	movlb	0	; () banked
 14311  014CD8  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14312  014CDA  0100               	movlb	0	; () banked
 14313  014CDC  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14314  014CDE  0E91               	movlw	low LCD_write_integer@convertedInt
 14315  014CE0  0100               	movlb	0	; () banked
 14316  014CE2  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14317  014CE4  6ED9               	movwf	fsr2l,c
 14318  014CE6  0E00               	movlw	high LCD_write_integer@convertedInt
 14319  014CE8  0100               	movlb	0	; () banked
 14320  014CEA  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14321  014CEC  6EDA               	movwf	fsr2h,c
 14322  014CEE  0100               	movlb	0	; () banked
 14323  014CF0  5197               	movf	LCD_write_integer@index& (0+255),w,b
 14324  014CF2  0D01               	mullw	1
 14325  014CF4  0E91               	movlw	low LCD_write_integer@convertedInt
 14326  014CF6  24F3               	addwf	prodl,w,c
 14327  014CF8  6EE1               	movwf	fsr1l,c
 14328  014CFA  0E00               	movlw	high LCD_write_integer@convertedInt
 14329  014CFC  20F4               	addwfc	prodh,w,c
 14330  014CFE  6EE2               	movwf	fsr1h,c
 14331  014D00  CFDF FFE7          	movff	indf2,indf1
 14332                           
 14333                           ; BSR set to: 0
 14334                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 14335  014D04  0100               	movlb	0	; () banked
 14336  014D06  058B               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 14337  014D08  A4D8               	btfss	status,2,c
 14338  014D0A  D01D               	goto	l8694
 14339                           
 14340                           ; BSR set to: 0
 14341                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 14342  014D0C  0EFF               	movlw	255
 14343  014D0E  0100               	movlb	0	; () banked
 14344  014D10  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 14345  014D12  0EFF               	movlw	255
 14346  014D14  0100               	movlb	0	; () banked
 14347  014D16  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14348  014D18  0100               	movlb	0	; () banked
 14349  014D1A  5197               	movf	LCD_write_integer@index& (0+255),w,b
 14350  014D1C  0100               	movlb	0	; () banked
 14351  014D1E  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14352  014D20  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14353  014D22  0100               	movlb	0	; () banked
 14354  014D24  518C               	movf	??_LCD_write_integer& (0+255),w,b
 14355  014D26  0100               	movlb	0	; () banked
 14356  014D28  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14357  014D2A  0100               	movlb	0	; () banked
 14358  014D2C  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14359  014D2E  0100               	movlb	0	; () banked
 14360  014D30  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14361  014D32  0E91               	movlw	low LCD_write_integer@convertedInt
 14362  014D34  0100               	movlb	0	; () banked
 14363  014D36  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14364  014D38  6ED9               	movwf	fsr2l,c
 14365  014D3A  0E00               	movlw	high LCD_write_integer@convertedInt
 14366  014D3C  0100               	movlb	0	; () banked
 14367  014D3E  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14368  014D40  6EDA               	movwf	fsr2h,c
 14369  014D42  0E20               	movlw	32
 14370  014D44  D01C               	goto	L17
 14371  014D46                     l8694:
 14372                           
 14373                           ; BSR set to: 0
 14374                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 14375  014D46  0EFF               	movlw	255
 14376  014D48  0100               	movlb	0	; () banked
 14377  014D4A  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 14378  014D4C  0EFF               	movlw	255
 14379  014D4E  0100               	movlb	0	; () banked
 14380  014D50  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14381  014D52  0100               	movlb	0	; () banked
 14382  014D54  5197               	movf	LCD_write_integer@index& (0+255),w,b
 14383  014D56  0100               	movlb	0	; () banked
 14384  014D58  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14385  014D5A  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14386  014D5C  0100               	movlb	0	; () banked
 14387  014D5E  518C               	movf	??_LCD_write_integer& (0+255),w,b
 14388  014D60  0100               	movlb	0	; () banked
 14389  014D62  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14390  014D64  0100               	movlb	0	; () banked
 14391  014D66  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14392  014D68  0100               	movlb	0	; () banked
 14393  014D6A  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14394  014D6C  0E91               	movlw	low LCD_write_integer@convertedInt
 14395  014D6E  0100               	movlb	0	; () banked
 14396  014D70  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14397  014D72  6ED9               	movwf	fsr2l,c
 14398  014D74  0E00               	movlw	high LCD_write_integer@convertedInt
 14399  014D76  0100               	movlb	0	; () banked
 14400  014D78  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14401  014D7A  6EDA               	movwf	fsr2h,c
 14402  014D7C  0E30               	movlw	48
 14403  014D7E                     L17:
 14404  014D7E  6EDF               	movwf	indf2,c
 14405                           
 14406                           ; BSR set to: 0
 14407                           
 14408                           ; BSR set to: 0
 14409  014D80  0100               	movlb	0	; () banked
 14410  014D82  0797               	decf	LCD_write_integer@index& (0+255),f,b
 14411  014D84  D794               	goto	l8684
 14412  014D86                     l8700:
 14413                           
 14414                           ; BSR set to: 0
 14415  014D86  0EFF               	movlw	255
 14416  014D88  0100               	movlb	0	; () banked
 14417  014D8A  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 14418  014D8C  0EFF               	movlw	255
 14419  014D8E  0100               	movlb	0	; () banked
 14420  014D90  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14421  014D92  0100               	movlb	0	; () banked
 14422  014D94  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14423  014D96  0100               	movlb	0	; () banked
 14424  014D98  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14425  014D9A  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14426  014D9C  0100               	movlb	0	; () banked
 14427  014D9E  518C               	movf	??_LCD_write_integer& (0+255),w,b
 14428  014DA0  0100               	movlb	0	; () banked
 14429  014DA2  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14430  014DA4  0100               	movlb	0	; () banked
 14431  014DA6  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14432  014DA8  0100               	movlb	0	; () banked
 14433  014DAA  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14434  014DAC  0E91               	movlw	low LCD_write_integer@convertedInt
 14435  014DAE  0100               	movlb	0	; () banked
 14436  014DB0  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14437  014DB2  6ED9               	movwf	fsr2l,c
 14438  014DB4  0E00               	movlw	high LCD_write_integer@convertedInt
 14439  014DB6  0100               	movlb	0	; () banked
 14440  014DB8  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14441  014DBA  6EDA               	movwf	fsr2h,c
 14442  014DBC  0E3A               	movlw	58
 14443  014DBE  60DF               	cpfslt	indf2,c
 14444  014DC0  D772               	goto	l8682
 14445                           
 14446                           ; BSR set to: 0
 14447  014DC2  0EFF               	movlw	255
 14448  014DC4  0100               	movlb	0	; () banked
 14449  014DC6  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 14450  014DC8  0EFF               	movlw	255
 14451  014DCA  0100               	movlb	0	; () banked
 14452  014DCC  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14453  014DCE  0100               	movlb	0	; () banked
 14454  014DD0  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14455  014DD2  0100               	movlb	0	; () banked
 14456  014DD4  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14457  014DD6  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14458  014DD8  0100               	movlb	0	; () banked
 14459  014DDA  518C               	movf	??_LCD_write_integer& (0+255),w,b
 14460  014DDC  0100               	movlb	0	; () banked
 14461  014DDE  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14462  014DE0  0100               	movlb	0	; () banked
 14463  014DE2  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14464  014DE4  0100               	movlb	0	; () banked
 14465  014DE6  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14466  014DE8  0E91               	movlw	low LCD_write_integer@convertedInt
 14467  014DEA  0100               	movlb	0	; () banked
 14468  014DEC  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14469  014DEE  6ED9               	movwf	fsr2l,c
 14470  014DF0  0E00               	movlw	high LCD_write_integer@convertedInt
 14471  014DF2  0100               	movlb	0	; () banked
 14472  014DF4  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14473  014DF6  6EDA               	movwf	fsr2h,c
 14474  014DF8  0E2F               	movlw	47
 14475  014DFA  64DF               	cpfsgt	indf2,c
 14476  014DFC  D754               	goto	l8682
 14477  014DFE                     l8704:
 14478                           
 14479                           ; BSR set to: 0
 14480                           ;src\LCD_44780.c: 243: }
 14481                           ;src\LCD_44780.c: 245: }
 14482                           ;src\LCD_44780.c: 246: }
 14483                           ;src\LCD_44780.c: 247: }
 14484                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 14485  014DFE  0E91               	movlw	low LCD_write_integer@convertedInt
 14486  014E00  0100               	movlb	0	; () banked
 14487  014E02  6F81               	movwf	LCD_write_string@buffer& (0+255),b
 14488  014E04  0E00               	movlw	high LCD_write_integer@convertedInt
 14489  014E06  0100               	movlb	0	; () banked
 14490  014E08  6F82               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 14491  014E0A  ECBA  F0B1         	call	_LCD_write_string	;wreg free
 14492  014E0E  0012               	return		;funcret
 14493  014E10                     __end_of_LCD_write_integer:
 14494                           	opt stack 0
 14495                           tblptru	equ	0xFF8
 14496                           tblptrh	equ	0xFF7
 14497                           tblptrl	equ	0xFF6
 14498                           tablat	equ	0xFF5
 14499                           prodh	equ	0xFF4
 14500                           prodl	equ	0xFF3
 14501                           intcon	equ	0xFF2
 14502                           postinc0	equ	0xFEE
 14503                           wreg	equ	0xFE8
 14504                           indf1	equ	0xFE7
 14505                           plusw1	equ	0xFE3
 14506                           fsr1h	equ	0xFE2
 14507                           fsr1l	equ	0xFE1
 14508                           indf2	equ	0xFDF
 14509                           postinc2	equ	0xFDE
 14510                           plusw2	equ	0xFDB
 14511                           fsr2h	equ	0xFDA
 14512                           fsr2l	equ	0xFD9
 14513                           status	equ	0xFD8
 14514                           
 14515 ;; *************** function _itoa *****************
 14516 ;; Defined at:
 14517 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 14518 ;; Parameters:    Size  Location     Type
 14519 ;;  buf             2   32[BANK0 ] PTR unsigned char 
 14520 ;;		 -> LCD_write_integer@convertedInt(6), 
 14521 ;;  val             2   34[BANK0 ] int 
 14522 ;;  base            2   36[BANK0 ] int 
 14523 ;; Auto vars:     Size  Location     Type
 14524 ;;  cp              2   38[BANK0 ] PTR unsigned char 
 14525 ;;		 -> LCD_write_integer@convertedInt(6), 
 14526 ;; Return value:  Size  Location     Type
 14527 ;;                  2   32[BANK0 ] PTR unsigned char 
 14528 ;; Registers used:
 14529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14530 ;; Tracked objects:
 14531 ;;		On entry : 0/0
 14532 ;;		On exit  : 0/0
 14533 ;;		Unchanged: 0/0
 14534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14535 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14536 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14538 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14539 ;;Total ram usage:        8 bytes
 14540 ;; Hardware stack levels used:    1
 14541 ;; Hardware stack levels required when called:    5
 14542 ;; This function calls:
 14543 ;;		_utoa
 14544 ;; This function is called by:
 14545 ;;		_LCD_write_integer
 14546 ;; This function uses a non-reentrant model
 14547 ;;
 14548                           
 14549                           	psect	text29
 14550  016142                     __ptext29:
 14551                           	opt stack 0
 14552  016142                     _itoa:
 14553                           	opt stack 23
 14554                           
 14555                           ;incstack = 0
 14556  016142  C080  F086         	movff	itoa@buf,itoa@cp
 14557  016146  C081  F087         	movff	itoa@buf+1,itoa@cp+1
 14558  01614A  0100               	movlb	0	; () banked
 14559  01614C  AF83               	btfss	(itoa@val+1)& (0+255),7,b
 14560  01614E  D00E               	goto	l5770
 14561                           
 14562                           ; BSR set to: 0
 14563  016150  C080  FFD9         	movff	itoa@buf,fsr2l
 14564  016154  C081  FFDA         	movff	itoa@buf+1,fsr2h
 14565  016158  0E2D               	movlw	45
 14566  01615A  6EDF               	movwf	indf2,c
 14567                           
 14568                           ; BSR set to: 0
 14569  01615C  0100               	movlb	0	; () banked
 14570  01615E  4B80               	infsnz	itoa@buf& (0+255),f,b
 14571  016160  2B81               	incf	(itoa@buf+1)& (0+255),f,b
 14572                           
 14573                           ; BSR set to: 0
 14574  016162  0100               	movlb	0	; () banked
 14575  016164  6D82               	negf	itoa@val& (0+255),b
 14576  016166  1F83               	comf	(itoa@val+1)& (0+255),f,b
 14577  016168  B0D8               	btfsc	status,0,c
 14578  01616A  2B83               	incf	(itoa@val+1)& (0+255),f,b
 14579  01616C                     l5770:
 14580                           
 14581                           ; BSR set to: 0
 14582  01616C  C080  F077         	movff	itoa@buf,utoa@buf
 14583  016170  C081  F078         	movff	itoa@buf+1,utoa@buf+1
 14584  016174  C082  F079         	movff	itoa@val,utoa@val
 14585  016178  C083  F07A         	movff	itoa@val+1,utoa@val+1
 14586  01617C  C084  F07B         	movff	itoa@base,utoa@base
 14587  016180  C085  F07C         	movff	itoa@base+1,utoa@base+1
 14588  016184  EC4C  F0AC         	call	_utoa	;wreg free
 14589  016188  0012               	return	
 14590  01618A                     __end_of_itoa:
 14591                           	opt stack 0
 14592                           tblptru	equ	0xFF8
 14593                           tblptrh	equ	0xFF7
 14594                           tblptrl	equ	0xFF6
 14595                           tablat	equ	0xFF5
 14596                           prodh	equ	0xFF4
 14597                           prodl	equ	0xFF3
 14598                           intcon	equ	0xFF2
 14599                           postinc0	equ	0xFEE
 14600                           wreg	equ	0xFE8
 14601                           indf1	equ	0xFE7
 14602                           plusw1	equ	0xFE3
 14603                           fsr1h	equ	0xFE2
 14604                           fsr1l	equ	0xFE1
 14605                           indf2	equ	0xFDF
 14606                           postinc2	equ	0xFDE
 14607                           plusw2	equ	0xFDB
 14608                           fsr2h	equ	0xFDA
 14609                           fsr2l	equ	0xFD9
 14610                           status	equ	0xFD8
 14611                           
 14612 ;; *************** function _utoa *****************
 14613 ;; Defined at:
 14614 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 14615 ;; Parameters:    Size  Location     Type
 14616 ;;  buf             2   23[BANK0 ] PTR unsigned char 
 14617 ;;		 -> LCD_write_integer@convertedInt(6), 
 14618 ;;  val             2   25[BANK0 ] unsigned int 
 14619 ;;  base            2   27[BANK0 ] int 
 14620 ;; Auto vars:     Size  Location     Type
 14621 ;;  v               2   29[BANK0 ] unsigned int 
 14622 ;;  c               1   31[BANK0 ] unsigned char 
 14623 ;; Return value:  Size  Location     Type
 14624 ;;                  2   23[BANK0 ] PTR unsigned char 
 14625 ;; Registers used:
 14626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14627 ;; Tracked objects:
 14628 ;;		On entry : 0/0
 14629 ;;		On exit  : 0/0
 14630 ;;		Unchanged: 0/0
 14631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14632 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14633 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14635 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14636 ;;Total ram usage:        9 bytes
 14637 ;; Hardware stack levels used:    1
 14638 ;; Hardware stack levels required when called:    4
 14639 ;; This function calls:
 14640 ;;		___lwdiv
 14641 ;;		___lwmod
 14642 ;; This function is called by:
 14643 ;;		_itoa
 14644 ;; This function uses a non-reentrant model
 14645 ;;
 14646                           
 14647                           	psect	text30
 14648  015898                     __ptext30:
 14649                           	opt stack 0
 14650  015898                     _utoa:
 14651                           	opt stack 23
 14652                           
 14653                           ;incstack = 0
 14654  015898  C079  F07D         	movff	utoa@val,utoa@v
 14655  01589C  C07A  F07E         	movff	utoa@val+1,utoa@v+1
 14656  0158A0                     l5292:
 14657  0158A0  C07D  F070         	movff	utoa@v,___lwdiv@dividend
 14658  0158A4  C07E  F071         	movff	utoa@v+1,___lwdiv@dividend+1
 14659  0158A8  C07B  F072         	movff	utoa@base,___lwdiv@divisor
 14660  0158AC  C07C  F073         	movff	utoa@base+1,___lwdiv@divisor+1
 14661  0158B0  ECF8  F0AE         	call	___lwdiv	;wreg free
 14662  0158B4  C070  F07D         	movff	?___lwdiv,utoa@v
 14663  0158B8  C071  F07E         	movff	?___lwdiv+1,utoa@v+1
 14664  0158BC  0100               	movlb	0	; () banked
 14665  0158BE  4B77               	infsnz	utoa@buf& (0+255),f,b
 14666  0158C0  2B78               	incf	(utoa@buf+1)& (0+255),f,b
 14667                           
 14668                           ; BSR set to: 0
 14669  0158C2  0100               	movlb	0	; () banked
 14670  0158C4  517D               	movf	utoa@v& (0+255),w,b
 14671  0158C6  0100               	movlb	0	; () banked
 14672  0158C8  117E               	iorwf	(utoa@v+1)& (0+255),w,b
 14673  0158CA  A4D8               	btfss	status,2,c
 14674  0158CC  D7E9               	goto	l5292
 14675                           
 14676                           ; BSR set to: 0
 14677                           
 14678                           ; BSR set to: 0
 14679  0158CE  C077  FFD9         	movff	utoa@buf,fsr2l
 14680  0158D2  C078  FFDA         	movff	utoa@buf+1,fsr2h
 14681  0158D6  0E00               	movlw	0
 14682  0158D8  6EDF               	movwf	indf2,c
 14683                           
 14684                           ; BSR set to: 0
 14685  0158DA  0100               	movlb	0	; () banked
 14686  0158DC  0777               	decf	utoa@buf& (0+255),f,b
 14687  0158DE  A0D8               	btfss	status,0,c
 14688  0158E0  0778               	decf	(utoa@buf+1)& (0+255),f,b
 14689  0158E2                     l5302:
 14690                           
 14691                           ; BSR set to: 0
 14692  0158E2  C079  F070         	movff	utoa@val,___lwmod@dividend
 14693  0158E6  C07A  F071         	movff	utoa@val+1,___lwmod@dividend+1
 14694  0158EA  C07B  F072         	movff	utoa@base,___lwmod@divisor
 14695  0158EE  C07C  F073         	movff	utoa@base+1,___lwmod@divisor+1
 14696  0158F2  ECFC  F0AF         	call	___lwmod	;wreg free
 14697  0158F6  0100               	movlb	0	; () banked
 14698  0158F8  5170               	movf	?___lwmod& (0+255),w,b
 14699  0158FA  0100               	movlb	0	; () banked
 14700  0158FC  6F7F               	movwf	utoa@c& (0+255),b
 14701                           
 14702                           ; BSR set to: 0
 14703  0158FE  C079  F070         	movff	utoa@val,___lwdiv@dividend
 14704  015902  C07A  F071         	movff	utoa@val+1,___lwdiv@dividend+1
 14705  015906  C07B  F072         	movff	utoa@base,___lwdiv@divisor
 14706  01590A  C07C  F073         	movff	utoa@base+1,___lwdiv@divisor+1
 14707  01590E  ECF8  F0AE         	call	___lwdiv	;wreg free
 14708  015912  C070  F079         	movff	?___lwdiv,utoa@val
 14709  015916  C071  F07A         	movff	?___lwdiv+1,utoa@val+1
 14710  01591A  0E09               	movlw	9
 14711  01591C  0100               	movlb	0	; () banked
 14712  01591E  657F               	cpfsgt	utoa@c& (0+255),b
 14713  015920  D003               	goto	l1420
 14714                           
 14715                           ; BSR set to: 0
 14716  015922  0E07               	movlw	7
 14717  015924  0100               	movlb	0	; () banked
 14718  015926  277F               	addwf	utoa@c& (0+255),f,b
 14719  015928                     l1420:
 14720                           
 14721                           ; BSR set to: 0
 14722  015928  0E30               	movlw	48
 14723  01592A  0100               	movlb	0	; () banked
 14724  01592C  277F               	addwf	utoa@c& (0+255),f,b
 14725                           
 14726                           ; BSR set to: 0
 14727  01592E  C077  FFD9         	movff	utoa@buf,fsr2l
 14728  015932  C078  FFDA         	movff	utoa@buf+1,fsr2h
 14729  015936  C07F  FFDF         	movff	utoa@c,indf2
 14730                           
 14731                           ; BSR set to: 0
 14732  01593A  0100               	movlb	0	; () banked
 14733  01593C  0777               	decf	utoa@buf& (0+255),f,b
 14734  01593E  A0D8               	btfss	status,0,c
 14735  015940  0778               	decf	(utoa@buf+1)& (0+255),f,b
 14736                           
 14737                           ; BSR set to: 0
 14738  015942  0100               	movlb	0	; () banked
 14739  015944  5179               	movf	utoa@val& (0+255),w,b
 14740  015946  0100               	movlb	0	; () banked
 14741  015948  117A               	iorwf	(utoa@val+1)& (0+255),w,b
 14742  01594A  A4D8               	btfss	status,2,c
 14743  01594C  D7CA               	goto	l5302
 14744                           
 14745                           ; BSR set to: 0
 14746                           ;	Return value of _utoa is never used
 14747                           
 14748                           ; BSR set to: 0
 14749  01594E  0100               	movlb	0	; () banked
 14750  015950  4B77               	infsnz	utoa@buf& (0+255),f,b
 14751  015952  2B78               	incf	(utoa@buf+1)& (0+255),f,b
 14752  015954  0012               	return	
 14753  015956                     __end_of_utoa:
 14754                           	opt stack 0
 14755                           tblptru	equ	0xFF8
 14756                           tblptrh	equ	0xFF7
 14757                           tblptrl	equ	0xFF6
 14758                           tablat	equ	0xFF5
 14759                           prodh	equ	0xFF4
 14760                           prodl	equ	0xFF3
 14761                           intcon	equ	0xFF2
 14762                           postinc0	equ	0xFEE
 14763                           wreg	equ	0xFE8
 14764                           indf1	equ	0xFE7
 14765                           plusw1	equ	0xFE3
 14766                           fsr1h	equ	0xFE2
 14767                           fsr1l	equ	0xFE1
 14768                           indf2	equ	0xFDF
 14769                           postinc2	equ	0xFDE
 14770                           plusw2	equ	0xFDB
 14771                           fsr2h	equ	0xFDA
 14772                           fsr2l	equ	0xFD9
 14773                           status	equ	0xFD8
 14774                           
 14775 ;; *************** function ___lwmod *****************
 14776 ;; Defined at:
 14777 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14778 ;; Parameters:    Size  Location     Type
 14779 ;;  dividend        2   16[BANK0 ] unsigned int 
 14780 ;;  divisor         2   18[BANK0 ] unsigned int 
 14781 ;; Auto vars:     Size  Location     Type
 14782 ;;  counter         1   20[BANK0 ] unsigned char 
 14783 ;; Return value:  Size  Location     Type
 14784 ;;                  2   16[BANK0 ] unsigned int 
 14785 ;; Registers used:
 14786 ;;		wreg, status,2, status,0
 14787 ;; Tracked objects:
 14788 ;;		On entry : 0/0
 14789 ;;		On exit  : 0/0
 14790 ;;		Unchanged: 0/0
 14791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14792 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14793 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14795 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14796 ;;Total ram usage:        5 bytes
 14797 ;; Hardware stack levels used:    1
 14798 ;; Hardware stack levels required when called:    3
 14799 ;; This function calls:
 14800 ;;		Nothing
 14801 ;; This function is called by:
 14802 ;;		_utoa
 14803 ;; This function uses a non-reentrant model
 14804 ;;
 14805                           
 14806                           	psect	text31
 14807  015FF8                     __ptext31:
 14808                           	opt stack 0
 14809  015FF8                     ___lwmod:
 14810                           	opt stack 23
 14811                           
 14812                           ; BSR set to: 0
 14813                           ;incstack = 0
 14814  015FF8  0100               	movlb	0	; () banked
 14815  015FFA  5172               	movf	___lwmod@divisor& (0+255),w,b
 14816  015FFC  0100               	movlb	0	; () banked
 14817  015FFE  1173               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14818  016000  B4D8               	btfsc	status,2,c
 14819  016002  D026               	goto	l1509
 14820                           
 14821                           ; BSR set to: 0
 14822  016004  0E01               	movlw	1
 14823  016006  0100               	movlb	0	; () banked
 14824  016008  6F74               	movwf	___lwmod@counter& (0+255),b
 14825  01600A  D006               	goto	l4850
 14826  01600C                     l4848:
 14827                           
 14828                           ; BSR set to: 0
 14829  01600C  0100               	movlb	0	; () banked
 14830  01600E  90D8               	bcf	status,0,c
 14831  016010  3772               	rlcf	___lwmod@divisor& (0+255),f,b
 14832  016012  3773               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14833  016014  0100               	movlb	0	; () banked
 14834  016016  2B74               	incf	___lwmod@counter& (0+255),f,b
 14835  016018                     l4850:
 14836                           
 14837                           ; BSR set to: 0
 14838  016018  0100               	movlb	0	; () banked
 14839  01601A  AF73               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14840  01601C  D7F7               	goto	l4848
 14841  01601E                     l4852:
 14842                           
 14843                           ; BSR set to: 0
 14844  01601E  0100               	movlb	0	; () banked
 14845  016020  5172               	movf	___lwmod@divisor& (0+255),w,b
 14846  016022  0100               	movlb	0	; () banked
 14847  016024  5D70               	subwf	___lwmod@dividend& (0+255),w,b
 14848  016026  0100               	movlb	0	; () banked
 14849  016028  5173               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14850  01602A  0100               	movlb	0	; () banked
 14851  01602C  5971               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14852  01602E  A0D8               	btfss	status,0,c
 14853  016030  D008               	goto	l4856
 14854                           
 14855                           ; BSR set to: 0
 14856  016032  0100               	movlb	0	; () banked
 14857  016034  5172               	movf	___lwmod@divisor& (0+255),w,b
 14858  016036  0100               	movlb	0	; () banked
 14859  016038  5F70               	subwf	___lwmod@dividend& (0+255),f,b
 14860  01603A  0100               	movlb	0	; () banked
 14861  01603C  5173               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14862  01603E  0100               	movlb	0	; () banked
 14863  016040  5B71               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14864  016042                     l4856:
 14865                           
 14866                           ; BSR set to: 0
 14867  016042  0100               	movlb	0	; () banked
 14868  016044  90D8               	bcf	status,0,c
 14869  016046  3373               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14870  016048  3372               	rrcf	___lwmod@divisor& (0+255),f,b
 14871                           
 14872                           ; BSR set to: 0
 14873  01604A  0100               	movlb	0	; () banked
 14874  01604C  2F74               	decfsz	___lwmod@counter& (0+255),f,b
 14875  01604E  D7E7               	goto	l4852
 14876  016050                     l1509:
 14877                           
 14878                           ; BSR set to: 0
 14879  016050  C070  F070         	movff	___lwmod@dividend,?___lwmod
 14880  016054  C071  F071         	movff	___lwmod@dividend+1,?___lwmod+1
 14881                           
 14882                           ; BSR set to: 0
 14883  016058  0012               	return		;funcret
 14884  01605A                     __end_of___lwmod:
 14885                           	opt stack 0
 14886                           tblptru	equ	0xFF8
 14887                           tblptrh	equ	0xFF7
 14888                           tblptrl	equ	0xFF6
 14889                           tablat	equ	0xFF5
 14890                           prodh	equ	0xFF4
 14891                           prodl	equ	0xFF3
 14892                           intcon	equ	0xFF2
 14893                           postinc0	equ	0xFEE
 14894                           wreg	equ	0xFE8
 14895                           indf1	equ	0xFE7
 14896                           plusw1	equ	0xFE3
 14897                           fsr1h	equ	0xFE2
 14898                           fsr1l	equ	0xFE1
 14899                           indf2	equ	0xFDF
 14900                           postinc2	equ	0xFDE
 14901                           plusw2	equ	0xFDB
 14902                           fsr2h	equ	0xFDA
 14903                           fsr2l	equ	0xFD9
 14904                           status	equ	0xFD8
 14905                           
 14906 ;; *************** function ___lwdiv *****************
 14907 ;; Defined at:
 14908 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 14909 ;; Parameters:    Size  Location     Type
 14910 ;;  dividend        2   16[BANK0 ] unsigned int 
 14911 ;;  divisor         2   18[BANK0 ] unsigned int 
 14912 ;; Auto vars:     Size  Location     Type
 14913 ;;  quotient        2   20[BANK0 ] unsigned int 
 14914 ;;  counter         1   22[BANK0 ] unsigned char 
 14915 ;; Return value:  Size  Location     Type
 14916 ;;                  2   16[BANK0 ] unsigned int 
 14917 ;; Registers used:
 14918 ;;		wreg, status,2, status,0
 14919 ;; Tracked objects:
 14920 ;;		On entry : 0/0
 14921 ;;		On exit  : 0/0
 14922 ;;		Unchanged: 0/0
 14923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14924 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14925 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14927 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14928 ;;Total ram usage:        7 bytes
 14929 ;; Hardware stack levels used:    1
 14930 ;; Hardware stack levels required when called:    3
 14931 ;; This function calls:
 14932 ;;		Nothing
 14933 ;; This function is called by:
 14934 ;;		_utoa
 14935 ;; This function uses a non-reentrant model
 14936 ;;
 14937                           
 14938                           	psect	text32
 14939  015DF0                     __ptext32:
 14940                           	opt stack 0
 14941  015DF0                     ___lwdiv:
 14942                           	opt stack 23
 14943                           
 14944                           ; BSR set to: 0
 14945                           ;incstack = 0
 14946  015DF0  0E00               	movlw	0
 14947  015DF2  0100               	movlb	0	; () banked
 14948  015DF4  6F75               	movwf	(___lwdiv@quotient+1)& (0+255),b
 14949  015DF6  0E00               	movlw	0
 14950  015DF8  6F74               	movwf	___lwdiv@quotient& (0+255),b
 14951                           
 14952                           ; BSR set to: 0
 14953  015DFA  0100               	movlb	0	; () banked
 14954  015DFC  5172               	movf	___lwdiv@divisor& (0+255),w,b
 14955  015DFE  0100               	movlb	0	; () banked
 14956  015E00  1173               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 14957  015E02  B4D8               	btfsc	status,2,c
 14958  015E04  D02C               	goto	l1499
 14959                           
 14960                           ; BSR set to: 0
 14961  015E06  0E01               	movlw	1
 14962  015E08  0100               	movlb	0	; () banked
 14963  015E0A  6F76               	movwf	___lwdiv@counter& (0+255),b
 14964  015E0C  D006               	goto	l4830
 14965  015E0E                     l4828:
 14966                           
 14967                           ; BSR set to: 0
 14968  015E0E  0100               	movlb	0	; () banked
 14969  015E10  90D8               	bcf	status,0,c
 14970  015E12  3772               	rlcf	___lwdiv@divisor& (0+255),f,b
 14971  015E14  3773               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 14972  015E16  0100               	movlb	0	; () banked
 14973  015E18  2B76               	incf	___lwdiv@counter& (0+255),f,b
 14974  015E1A                     l4830:
 14975                           
 14976                           ; BSR set to: 0
 14977  015E1A  0100               	movlb	0	; () banked
 14978  015E1C  AF73               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 14979  015E1E  D7F7               	goto	l4828
 14980  015E20                     l4832:
 14981                           
 14982                           ; BSR set to: 0
 14983  015E20  0100               	movlb	0	; () banked
 14984  015E22  90D8               	bcf	status,0,c
 14985  015E24  3774               	rlcf	___lwdiv@quotient& (0+255),f,b
 14986  015E26  3775               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 14987                           
 14988                           ; BSR set to: 0
 14989  015E28  0100               	movlb	0	; () banked
 14990  015E2A  5172               	movf	___lwdiv@divisor& (0+255),w,b
 14991  015E2C  0100               	movlb	0	; () banked
 14992  015E2E  5D70               	subwf	___lwdiv@dividend& (0+255),w,b
 14993  015E30  0100               	movlb	0	; () banked
 14994  015E32  5173               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14995  015E34  0100               	movlb	0	; () banked
 14996  015E36  5971               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 14997  015E38  A0D8               	btfss	status,0,c
 14998  015E3A  D00A               	goto	l4840
 14999                           
 15000                           ; BSR set to: 0
 15001  015E3C  0100               	movlb	0	; () banked
 15002  015E3E  5172               	movf	___lwdiv@divisor& (0+255),w,b
 15003  015E40  0100               	movlb	0	; () banked
 15004  015E42  5F70               	subwf	___lwdiv@dividend& (0+255),f,b
 15005  015E44  0100               	movlb	0	; () banked
 15006  015E46  5173               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15007  015E48  0100               	movlb	0	; () banked
 15008  015E4A  5B71               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 15009                           
 15010                           ; BSR set to: 0
 15011  015E4C  0100               	movlb	0	; () banked
 15012  015E4E  8174               	bsf	___lwdiv@quotient& (0+255),0,b
 15013  015E50                     l4840:
 15014                           
 15015                           ; BSR set to: 0
 15016  015E50  0100               	movlb	0	; () banked
 15017  015E52  90D8               	bcf	status,0,c
 15018  015E54  3373               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 15019  015E56  3372               	rrcf	___lwdiv@divisor& (0+255),f,b
 15020                           
 15021                           ; BSR set to: 0
 15022  015E58  0100               	movlb	0	; () banked
 15023  015E5A  2F76               	decfsz	___lwdiv@counter& (0+255),f,b
 15024  015E5C  D7E1               	goto	l4832
 15025  015E5E                     l1499:
 15026                           
 15027                           ; BSR set to: 0
 15028  015E5E  C074  F070         	movff	___lwdiv@quotient,?___lwdiv
 15029  015E62  C075  F071         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15030                           
 15031                           ; BSR set to: 0
 15032  015E66  0012               	return		;funcret
 15033  015E68                     __end_of___lwdiv:
 15034                           	opt stack 0
 15035                           tblptru	equ	0xFF8
 15036                           tblptrh	equ	0xFF7
 15037                           tblptrl	equ	0xFF6
 15038                           tablat	equ	0xFF5
 15039                           prodh	equ	0xFF4
 15040                           prodl	equ	0xFF3
 15041                           intcon	equ	0xFF2
 15042                           postinc0	equ	0xFEE
 15043                           wreg	equ	0xFE8
 15044                           indf1	equ	0xFE7
 15045                           plusw1	equ	0xFE3
 15046                           fsr1h	equ	0xFE2
 15047                           fsr1l	equ	0xFE1
 15048                           indf2	equ	0xFDF
 15049                           postinc2	equ	0xFDE
 15050                           plusw2	equ	0xFDB
 15051                           fsr2h	equ	0xFDA
 15052                           fsr2l	equ	0xFD9
 15053                           status	equ	0xFD8
 15054                           
 15055 ;; *************** function _LCD_write_string *****************
 15056 ;; Defined at:
 15057 ;;		line 194 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15058 ;; Parameters:    Size  Location     Type
 15059 ;;  buffer          2   33[BANK0 ] PTR unsigned char 
 15060 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 15061 ;; Auto vars:     Size  Location     Type
 15062 ;;		None
 15063 ;; Return value:  Size  Location     Type
 15064 ;;		None               void
 15065 ;; Registers used:
 15066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15067 ;; Tracked objects:
 15068 ;;		On entry : 0/0
 15069 ;;		On exit  : 0/0
 15070 ;;		Unchanged: 0/0
 15071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15072 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15075 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15076 ;;Total ram usage:        2 bytes
 15077 ;; Hardware stack levels used:    1
 15078 ;; Hardware stack levels required when called:    8
 15079 ;; This function calls:
 15080 ;;		_LCD_write_char
 15081 ;; This function is called by:
 15082 ;;		_LCD_write_integer
 15083 ;;		_LCD_Handler
 15084 ;; This function uses a non-reentrant model
 15085 ;;
 15086                           
 15087                           	psect	text33
 15088  016374                     __ptext33:
 15089                           	opt stack 0
 15090  016374                     _LCD_write_string:
 15091                           	opt stack 21
 15092                           
 15093                           ;src\LCD_44780.c: 197: while(*buffer){
 15094                           
 15095                           ; BSR set to: 0
 15096                           ;incstack = 0
 15097  016374  D00A               	goto	l8310
 15098  016376                     l8306:
 15099                           
 15100                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 15101  016376  C081  FFD9         	movff	LCD_write_string@buffer,fsr2l
 15102  01637A  C082  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 15103  01637E  50DF               	movf	indf2,w,c
 15104  016380  ECAD  F0AE         	call	_LCD_write_char
 15105                           
 15106                           ;src\LCD_44780.c: 202: buffer++;
 15107  016384  0100               	movlb	0	; () banked
 15108  016386  4B81               	infsnz	LCD_write_string@buffer& (0+255),f,b
 15109  016388  2B82               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 15110  01638A                     l8310:
 15111  01638A  C081  FFD9         	movff	LCD_write_string@buffer,fsr2l
 15112  01638E  C082  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 15113  016392  50DF               	movf	indf2,w,c
 15114  016394  B4D8               	btfsc	status,2,c
 15115  016396  0012               	return	
 15116  016398  D7EE               	goto	l8306
 15117  01639A                     __end_of_LCD_write_string:
 15118                           	opt stack 0
 15119                           tblptru	equ	0xFF8
 15120                           tblptrh	equ	0xFF7
 15121                           tblptrl	equ	0xFF6
 15122                           tablat	equ	0xFF5
 15123                           prodh	equ	0xFF4
 15124                           prodl	equ	0xFF3
 15125                           intcon	equ	0xFF2
 15126                           postinc0	equ	0xFEE
 15127                           wreg	equ	0xFE8
 15128                           indf1	equ	0xFE7
 15129                           plusw1	equ	0xFE3
 15130                           fsr1h	equ	0xFE2
 15131                           fsr1l	equ	0xFE1
 15132                           indf2	equ	0xFDF
 15133                           postinc2	equ	0xFDE
 15134                           plusw2	equ	0xFDB
 15135                           fsr2h	equ	0xFDA
 15136                           fsr2l	equ	0xFD9
 15137                           status	equ	0xFD8
 15138                           
 15139 ;; *************** function _LCD_goto_xy *****************
 15140 ;; Defined at:
 15141 ;;		line 136 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15142 ;; Parameters:    Size  Location     Type
 15143 ;;  x               1    wreg     unsigned char 
 15144 ;;  y               1   31[BANK0 ] unsigned char 
 15145 ;; Auto vars:     Size  Location     Type
 15146 ;;  x               1   32[BANK0 ] unsigned char 
 15147 ;; Return value:  Size  Location     Type
 15148 ;;		None               void
 15149 ;; Registers used:
 15150 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15151 ;; Tracked objects:
 15152 ;;		On entry : 0/0
 15153 ;;		On exit  : 0/0
 15154 ;;		Unchanged: 0/0
 15155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15156 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15157 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15159 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15160 ;;Total ram usage:        2 bytes
 15161 ;; Hardware stack levels used:    1
 15162 ;; Hardware stack levels required when called:    8
 15163 ;; This function calls:
 15164 ;;		_LCD_goto_line
 15165 ;;		_LCD_shift_cursor
 15166 ;; This function is called by:
 15167 ;;		_LCD_Handler
 15168 ;; This function uses a non-reentrant model
 15169 ;;
 15170                           
 15171                           	psect	text34
 15172  01641A                     __ptext34:
 15173                           	opt stack 0
 15174  01641A                     _LCD_goto_xy:
 15175                           	opt stack 21
 15176                           
 15177                           ;incstack = 0
 15178                           ;LCD_goto_xy@x stored from wreg
 15179  01641A  0100               	movlb	0	; () banked
 15180  01641C  6F80               	movwf	LCD_goto_xy@x& (0+255),b
 15181                           
 15182                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 15183  01641E  0100               	movlb	0	; () banked
 15184  016420  517F               	movf	LCD_goto_xy@y& (0+255),w,b
 15185  016422  EC77  F0AB         	call	_LCD_goto_line
 15186                           
 15187                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 15188  016426  0100               	movlb	0	; () banked
 15189  016428  0580               	decf	LCD_goto_xy@x& (0+255),w,b
 15190  01642A  0100               	movlb	0	; () banked
 15191  01642C  6F7C               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 15192  01642E  0E01               	movlw	1
 15193  016430  EC57  F0B0         	call	_LCD_shift_cursor
 15194  016434  0012               	return		;funcret
 15195  016436                     __end_of_LCD_goto_xy:
 15196                           	opt stack 0
 15197                           tblptru	equ	0xFF8
 15198                           tblptrh	equ	0xFF7
 15199                           tblptrl	equ	0xFF6
 15200                           tablat	equ	0xFF5
 15201                           prodh	equ	0xFF4
 15202                           prodl	equ	0xFF3
 15203                           intcon	equ	0xFF2
 15204                           postinc0	equ	0xFEE
 15205                           wreg	equ	0xFE8
 15206                           indf1	equ	0xFE7
 15207                           plusw1	equ	0xFE3
 15208                           fsr1h	equ	0xFE2
 15209                           fsr1l	equ	0xFE1
 15210                           indf2	equ	0xFDF
 15211                           postinc2	equ	0xFDE
 15212                           plusw2	equ	0xFDB
 15213                           fsr2h	equ	0xFDA
 15214                           fsr2l	equ	0xFD9
 15215                           status	equ	0xFD8
 15216                           
 15217 ;; *************** function _LCD_shift_cursor *****************
 15218 ;; Defined at:
 15219 ;;		line 98 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15220 ;; Parameters:    Size  Location     Type
 15221 ;;  shift           1    wreg     unsigned char 
 15222 ;;  number_of_sh    1   28[BANK0 ] unsigned char 
 15223 ;; Auto vars:     Size  Location     Type
 15224 ;;  shift           1   29[BANK0 ] unsigned char 
 15225 ;;  i               1   30[BANK0 ] unsigned char 
 15226 ;; Return value:  Size  Location     Type
 15227 ;;		None               void
 15228 ;; Registers used:
 15229 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15230 ;; Tracked objects:
 15231 ;;		On entry : 0/0
 15232 ;;		On exit  : 0/0
 15233 ;;		Unchanged: 0/0
 15234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15235 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15236 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15238 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15239 ;;Total ram usage:        3 bytes
 15240 ;; Hardware stack levels used:    1
 15241 ;; Hardware stack levels required when called:    7
 15242 ;; This function calls:
 15243 ;;		_LCD_send_command
 15244 ;; This function is called by:
 15245 ;;		_LCD_goto_xy
 15246 ;; This function uses a non-reentrant model
 15247 ;;
 15248                           
 15249                           	psect	text35
 15250  0160AE                     __ptext35:
 15251                           	opt stack 0
 15252  0160AE                     _LCD_shift_cursor:
 15253                           	opt stack 21
 15254                           
 15255                           ;incstack = 0
 15256                           ;LCD_shift_cursor@shift stored from wreg
 15257  0160AE  0100               	movlb	0	; () banked
 15258  0160B0  6F7D               	movwf	LCD_shift_cursor@shift& (0+255),b
 15259                           
 15260                           ;src\LCD_44780.c: 100: unsigned char i;
 15261                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 15262  0160B2  0E00               	movlw	0
 15263  0160B4  0100               	movlb	0	; () banked
 15264  0160B6  6F7E               	movwf	LCD_shift_cursor@i& (0+255),b
 15265  0160B8  D019               	goto	l8290
 15266  0160BA                     l8286:
 15267                           
 15268                           ; BSR set to: 0
 15269                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 15270  0160BA  0E00               	movlw	0
 15271  0160BC  0100               	movlb	0	; () banked
 15272  0160BE  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15273  0160C0  0E00               	movlw	0
 15274  0160C2  0100               	movlb	0	; () banked
 15275  0160C4  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15276  0160C6  0E01               	movlw	1
 15277  0160C8  0100               	movlb	0	; () banked
 15278  0160CA  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15279  0160CC  0E00               	movlw	0
 15280  0160CE  ECE8  F0B0         	call	_LCD_send_command
 15281                           
 15282                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 15283  0160D2  C07D  F078         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 15284  0160D6  0E00               	movlw	0
 15285  0160D8  0100               	movlb	0	; () banked
 15286  0160DA  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15287  0160DC  0E00               	movlw	0
 15288  0160DE  0100               	movlb	0	; () banked
 15289  0160E0  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15290  0160E2  0E00               	movlw	0
 15291  0160E4  ECE8  F0B0         	call	_LCD_send_command
 15292  0160E8  0100               	movlb	0	; () banked
 15293  0160EA  2B7E               	incf	LCD_shift_cursor@i& (0+255),f,b
 15294  0160EC                     l8290:
 15295                           
 15296                           ; BSR set to: 0
 15297  0160EC  0100               	movlb	0	; () banked
 15298  0160EE  517C               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 15299  0160F0  0100               	movlb	0	; () banked
 15300  0160F2  5D7E               	subwf	LCD_shift_cursor@i& (0+255),w,b
 15301  0160F4  B0D8               	btfsc	status,0,c
 15302  0160F6  0012               	return	
 15303  0160F8  D7E0               	goto	l8286
 15304  0160FA                     __end_of_LCD_shift_cursor:
 15305                           	opt stack 0
 15306                           tblptru	equ	0xFF8
 15307                           tblptrh	equ	0xFF7
 15308                           tblptrl	equ	0xFF6
 15309                           tablat	equ	0xFF5
 15310                           prodh	equ	0xFF4
 15311                           prodl	equ	0xFF3
 15312                           intcon	equ	0xFF2
 15313                           postinc0	equ	0xFEE
 15314                           wreg	equ	0xFE8
 15315                           indf1	equ	0xFE7
 15316                           plusw1	equ	0xFE3
 15317                           fsr1h	equ	0xFE2
 15318                           fsr1l	equ	0xFE1
 15319                           indf2	equ	0xFDF
 15320                           postinc2	equ	0xFDE
 15321                           plusw2	equ	0xFDB
 15322                           fsr2h	equ	0xFDA
 15323                           fsr2l	equ	0xFD9
 15324                           status	equ	0xFD8
 15325                           
 15326 ;; *************** function _LCD_Gap *****************
 15327 ;; Defined at:
 15328 ;;		line 474 in file "RemoteCan.c"
 15329 ;; Parameters:    Size  Location     Type
 15330 ;;		None
 15331 ;; Auto vars:     Size  Location     Type
 15332 ;;		None
 15333 ;; Return value:  Size  Location     Type
 15334 ;;		None               void
 15335 ;; Registers used:
 15336 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15337 ;; Tracked objects:
 15338 ;;		On entry : 0/0
 15339 ;;		On exit  : 0/0
 15340 ;;		Unchanged: 0/0
 15341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15346 ;;Total ram usage:        0 bytes
 15347 ;; Hardware stack levels used:    1
 15348 ;; Hardware stack levels required when called:    9
 15349 ;; This function calls:
 15350 ;;		_LCD_clear
 15351 ;;		_LCD_goto_line
 15352 ;;		_LCD_initialize
 15353 ;;		_LCD_write_message
 15354 ;; This function is called by:
 15355 ;;		_main
 15356 ;; This function uses a non-reentrant model
 15357 ;;
 15358                           
 15359                           	psect	text36
 15360  015F30                     __ptext36:
 15361                           	opt stack 0
 15362  015F30                     _LCD_Gap:
 15363                           	opt stack 21
 15364                           
 15365                           ;RemoteCan.c: 475: LCD_initialize(16);
 15366                           
 15367                           ; BSR set to: 0
 15368                           ;incstack = 0
 15369  015F30  0E10               	movlw	16
 15370  015F32  EC3A  F0AA         	call	_LCD_initialize
 15371                           
 15372                           ;RemoteCan.c: 476: LCD_clear();
 15373  015F36  EC8C  F0B1         	call	_LCD_clear	;wreg free
 15374                           
 15375                           ;RemoteCan.c: 477: LCD_goto_line(1);
 15376  015F3A  0E01               	movlw	1
 15377  015F3C  EC77  F0AB         	call	_LCD_goto_line
 15378                           
 15379                           ;RemoteCan.c: 478: LCD_write_message("= PARKING MESSAGES =");
 15380  015F40  0E40               	movlw	low STR_16
 15381  015F42  0100               	movlb	0	; () banked
 15382  015F44  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15383  015F46  0EFF               	movlw	high STR_16
 15384  015F48  0100               	movlb	0	; () banked
 15385  015F4A  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15386  015F4C  EC59  F0B1         	call	_LCD_write_message	;wreg free
 15387                           
 15388                           ;RemoteCan.c: 479: LCD_goto_line(2);
 15389  015F50  0E02               	movlw	2
 15390  015F52  EC77  F0AB         	call	_LCD_goto_line
 15391                           
 15392                           ;RemoteCan.c: 480: LCD_write_message(" Parking space FOUND");
 15393  015F56  0E94               	movlw	low STR_17
 15394  015F58  0100               	movlb	0	; () banked
 15395  015F5A  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15396  015F5C  0EFF               	movlw	high STR_17
 15397  015F5E  0100               	movlb	0	; () banked
 15398  015F60  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15399  015F62  EC59  F0B1         	call	_LCD_write_message	;wreg free
 15400                           
 15401                           ;RemoteCan.c: 481: LCD_goto_line(3);
 15402  015F66  0E03               	movlw	3
 15403  015F68  EC77  F0AB         	call	_LCD_goto_line
 15404                           
 15405                           ;RemoteCan.c: 482: LCD_write_message("->  KEEP MOVING   <-");
 15406  015F6C  0E01               	movlw	low STR_18
 15407  015F6E  0100               	movlb	0	; () banked
 15408  015F70  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15409  015F72  0EFF               	movlw	high STR_18
 15410  015F74  0100               	movlb	0	; () banked
 15411  015F76  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15412  015F78  EC59  F0B1         	call	_LCD_write_message	;wreg free
 15413                           
 15414                           ;RemoteCan.c: 483: LCD_goto_line(4);
 15415  015F7C  0E04               	movlw	4
 15416  015F7E  EC77  F0AB         	call	_LCD_goto_line
 15417                           
 15418                           ;RemoteCan.c: 484: LCD_write_message(" until next message ");
 15419  015F82  0EAD               	movlw	low STR_19
 15420  015F84  0100               	movlb	0	; () banked
 15421  015F86  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15422  015F88  0EFE               	movlw	high STR_19
 15423  015F8A  0100               	movlb	0	; () banked
 15424  015F8C  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15425  015F8E  EC59  F0B1         	call	_LCD_write_message	;wreg free
 15426  015F92  0012               	return		;funcret
 15427  015F94                     __end_of_LCD_Gap:
 15428                           	opt stack 0
 15429                           tblptru	equ	0xFF8
 15430                           tblptrh	equ	0xFF7
 15431                           tblptrl	equ	0xFF6
 15432                           tablat	equ	0xFF5
 15433                           prodh	equ	0xFF4
 15434                           prodl	equ	0xFF3
 15435                           intcon	equ	0xFF2
 15436                           postinc0	equ	0xFEE
 15437                           wreg	equ	0xFE8
 15438                           indf1	equ	0xFE7
 15439                           plusw1	equ	0xFE3
 15440                           fsr1h	equ	0xFE2
 15441                           fsr1l	equ	0xFE1
 15442                           indf2	equ	0xFDF
 15443                           postinc2	equ	0xFDE
 15444                           plusw2	equ	0xFDB
 15445                           fsr2h	equ	0xFDA
 15446                           fsr2l	equ	0xFD9
 15447                           status	equ	0xFD8
 15448                           
 15449 ;; *************** function _LCD_End *****************
 15450 ;; Defined at:
 15451 ;;		line 513 in file "RemoteCan.c"
 15452 ;; Parameters:    Size  Location     Type
 15453 ;;		None
 15454 ;; Auto vars:     Size  Location     Type
 15455 ;;		None
 15456 ;; Return value:  Size  Location     Type
 15457 ;;		None               void
 15458 ;; Registers used:
 15459 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15460 ;; Tracked objects:
 15461 ;;		On entry : 0/0
 15462 ;;		On exit  : 0/0
 15463 ;;		Unchanged: 0/0
 15464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15469 ;;Total ram usage:        0 bytes
 15470 ;; Hardware stack levels used:    1
 15471 ;; Hardware stack levels required when called:    9
 15472 ;; This function calls:
 15473 ;;		_LCD_clear
 15474 ;;		_LCD_goto_line
 15475 ;;		_LCD_initialize
 15476 ;;		_LCD_write_message
 15477 ;; This function is called by:
 15478 ;;		_main
 15479 ;; This function uses a non-reentrant model
 15480 ;;
 15481                           
 15482                           	psect	text37
 15483  015F94                     __ptext37:
 15484                           	opt stack 0
 15485  015F94                     _LCD_End:
 15486                           	opt stack 21
 15487                           
 15488                           ;RemoteCan.c: 514: LCD_initialize(16);
 15489                           
 15490                           ;incstack = 0
 15491  015F94  0E10               	movlw	16
 15492  015F96  EC3A  F0AA         	call	_LCD_initialize
 15493                           
 15494                           ;RemoteCan.c: 515: LCD_clear();
 15495  015F9A  EC8C  F0B1         	call	_LCD_clear	;wreg free
 15496                           
 15497                           ;RemoteCan.c: 516: LCD_goto_line(1);
 15498  015F9E  0E01               	movlw	1
 15499  015FA0  EC77  F0AB         	call	_LCD_goto_line
 15500                           
 15501                           ;RemoteCan.c: 517: LCD_write_message("= PARKING MESSAGES =");
 15502  015FA4  0E40               	movlw	low STR_16
 15503  015FA6  0100               	movlb	0	; () banked
 15504  015FA8  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15505  015FAA  0EFF               	movlw	high STR_16
 15506  015FAC  0100               	movlb	0	; () banked
 15507  015FAE  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15508  015FB0  EC59  F0B1         	call	_LCD_write_message	;wreg free
 15509                           
 15510                           ;RemoteCan.c: 518: LCD_goto_line(2);
 15511  015FB4  0E02               	movlw	2
 15512  015FB6  EC77  F0AB         	call	_LCD_goto_line
 15513                           
 15514                           ;RemoteCan.c: 519: LCD_write_message(" Parking procedures ");
 15515  015FBA  0ED7               	movlw	low STR_29
 15516  015FBC  0100               	movlb	0	; () banked
 15517  015FBE  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15518  015FC0  0EFE               	movlw	high STR_29
 15519  015FC2  0100               	movlb	0	; () banked
 15520  015FC4  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15521  015FC6  EC59  F0B1         	call	_LCD_write_message	;wreg free
 15522                           
 15523                           ;RemoteCan.c: 520: LCD_goto_line(3);
 15524  015FCA  0E03               	movlw	3
 15525  015FCC  EC77  F0AB         	call	_LCD_goto_line
 15526                           
 15527                           ;RemoteCan.c: 521: LCD_write_message("    SUCCESSFULLY    ");
 15528  015FD0  0E6E               	movlw	low STR_30
 15529  015FD2  0100               	movlb	0	; () banked
 15530  015FD4  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15531  015FD6  0EFE               	movlw	high STR_30
 15532  015FD8  0100               	movlb	0	; () banked
 15533  015FDA  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15534  015FDC  EC59  F0B1         	call	_LCD_write_message	;wreg free
 15535                           
 15536                           ;RemoteCan.c: 522: LCD_goto_line(4);
 15537  015FE0  0E04               	movlw	4
 15538  015FE2  EC77  F0AB         	call	_LCD_goto_line
 15539                           
 15540                           ;RemoteCan.c: 523: LCD_write_message("     COMPLETED!     ");
 15541  015FE6  0E59               	movlw	low STR_31
 15542  015FE8  0100               	movlb	0	; () banked
 15543  015FEA  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15544  015FEC  0EFE               	movlw	high STR_31
 15545  015FEE  0100               	movlb	0	; () banked
 15546  015FF0  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15547  015FF2  EC59  F0B1         	call	_LCD_write_message	;wreg free
 15548  015FF6  0012               	return		;funcret
 15549  015FF8                     __end_of_LCD_End:
 15550                           	opt stack 0
 15551                           tblptru	equ	0xFF8
 15552                           tblptrh	equ	0xFF7
 15553                           tblptrl	equ	0xFF6
 15554                           tablat	equ	0xFF5
 15555                           prodh	equ	0xFF4
 15556                           prodl	equ	0xFF3
 15557                           intcon	equ	0xFF2
 15558                           postinc0	equ	0xFEE
 15559                           wreg	equ	0xFE8
 15560                           indf1	equ	0xFE7
 15561                           plusw1	equ	0xFE3
 15562                           fsr1h	equ	0xFE2
 15563                           fsr1l	equ	0xFE1
 15564                           indf2	equ	0xFDF
 15565                           postinc2	equ	0xFDE
 15566                           plusw2	equ	0xFDB
 15567                           fsr2h	equ	0xFDA
 15568                           fsr2l	equ	0xFD9
 15569                           status	equ	0xFD8
 15570                           
 15571 ;; *************** function _LCD_write_message *****************
 15572 ;; Defined at:
 15573 ;;		line 178 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15574 ;; Parameters:    Size  Location     Type
 15575 ;;  buffer          2   33[BANK0 ] PTR const unsigned char 
 15576 ;;		 -> STR_31(21), STR_30(21), STR_29(21), STR_28(21), 
 15577 ;;		 -> STR_27(21), STR_26(21), STR_25(21), STR_24(21), 
 15578 ;;		 -> STR_23(21), STR_22(21), STR_21(21), STR_20(21), 
 15579 ;;		 -> STR_19(21), STR_18(21), STR_17(21), STR_16(21), 
 15580 ;;		 -> STR_15(8), STR_14(8), STR_13(5), STR_12(5), 
 15581 ;;		 -> STR_11(5), STR_10(7), STR_9(14), STR_8(17), 
 15582 ;;		 -> STR_7(12), STR_6(21), STR_4(21), STR_3(21), 
 15583 ;;		 -> STR_2(21), STR_1(21), 
 15584 ;; Auto vars:     Size  Location     Type
 15585 ;;		None
 15586 ;; Return value:  Size  Location     Type
 15587 ;;		None               void
 15588 ;; Registers used:
 15589 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15590 ;; Tracked objects:
 15591 ;;		On entry : 0/0
 15592 ;;		On exit  : 0/0
 15593 ;;		Unchanged: 0/0
 15594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15595 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15598 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15599 ;;Total ram usage:        2 bytes
 15600 ;; Hardware stack levels used:    1
 15601 ;; Hardware stack levels required when called:    8
 15602 ;; This function calls:
 15603 ;;		_LCD_write_char
 15604 ;; This function is called by:
 15605 ;;		_main
 15606 ;;		_LCD_Handler
 15607 ;;		_LCD_Gap
 15608 ;;		_LCD_Park
 15609 ;;		_LCD_Parking
 15610 ;;		_LCD_End
 15611 ;; This function uses a non-reentrant model
 15612 ;;
 15613                           
 15614                           	psect	text38
 15615  0162B2                     __ptext38:
 15616                           	opt stack 0
 15617  0162B2                     _LCD_write_message:
 15618                           	opt stack 22
 15619                           
 15620                           ;src\LCD_44780.c: 181: while(*buffer) {
 15621                           
 15622                           ;incstack = 0
 15623  0162B2  D00D               	goto	l8672
 15624  0162B4                     l8668:
 15625                           
 15626                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 15627  0162B4  C081  FFF6         	movff	LCD_write_message@buffer,tblptrl
 15628  0162B8  C082  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 15629  0162BC                     	if	0	;tblptru may be non-zero
 15630  0162BC                     	endif
 15631  0162BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15632  0162BC  0E00               	movlw	low (__mediumconst shr (0+16))
 15633  0162BE  6EF8               	movwf	tblptru,c
 15634  0162C0                     	endif
 15635  0162C0  0008               	tblrd		*
 15636  0162C2  50F5               	movf	tablat,w,c
 15637  0162C4  ECAD  F0AE         	call	_LCD_write_char
 15638                           
 15639                           ;src\LCD_44780.c: 186: buffer++;
 15640  0162C8  0100               	movlb	0	; () banked
 15641  0162CA  4B81               	infsnz	LCD_write_message@buffer& (0+255),f,b
 15642  0162CC  2B82               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 15643  0162CE                     l8672:
 15644  0162CE  C081  FFF6         	movff	LCD_write_message@buffer,tblptrl
 15645  0162D2  C082  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 15646  0162D6                     	if	0	;tblptru may be non-zero
 15647  0162D6                     	endif
 15648  0162D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15649  0162D6  0E00               	movlw	low (__mediumconst shr (0+16))
 15650  0162D8  6EF8               	movwf	tblptru,c
 15651  0162DA                     	endif
 15652  0162DA  0008               	tblrd		*
 15653  0162DC  50F5               	movf	tablat,w,c
 15654  0162DE  0900               	iorlw	0
 15655  0162E0  B4D8               	btfsc	status,2,c
 15656  0162E2  0012               	return	
 15657  0162E4  D7E7               	goto	l8668
 15658  0162E6                     __end_of_LCD_write_message:
 15659                           	opt stack 0
 15660                           tblptru	equ	0xFF8
 15661                           tblptrh	equ	0xFF7
 15662                           tblptrl	equ	0xFF6
 15663                           tablat	equ	0xFF5
 15664                           prodh	equ	0xFF4
 15665                           prodl	equ	0xFF3
 15666                           intcon	equ	0xFF2
 15667                           postinc0	equ	0xFEE
 15668                           wreg	equ	0xFE8
 15669                           indf1	equ	0xFE7
 15670                           plusw1	equ	0xFE3
 15671                           fsr1h	equ	0xFE2
 15672                           fsr1l	equ	0xFE1
 15673                           indf2	equ	0xFDF
 15674                           postinc2	equ	0xFDE
 15675                           plusw2	equ	0xFDB
 15676                           fsr2h	equ	0xFDA
 15677                           fsr2l	equ	0xFD9
 15678                           status	equ	0xFD8
 15679                           
 15680 ;; *************** function _LCD_write_char *****************
 15681 ;; Defined at:
 15682 ;;		line 145 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15683 ;; Parameters:    Size  Location     Type
 15684 ;;  value           1    wreg     unsigned char 
 15685 ;; Auto vars:     Size  Location     Type
 15686 ;;  value           1   32[BANK0 ] unsigned char 
 15687 ;;  D0              1   31[BANK0 ] unsigned char 
 15688 ;;  D1              1   30[BANK0 ] unsigned char 
 15689 ;;  D2              1   29[BANK0 ] unsigned char 
 15690 ;;  D3              1   28[BANK0 ] unsigned char 
 15691 ;; Return value:  Size  Location     Type
 15692 ;;		None               void
 15693 ;; Registers used:
 15694 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15695 ;; Tracked objects:
 15696 ;;		On entry : 0/0
 15697 ;;		On exit  : 0/0
 15698 ;;		Unchanged: 0/0
 15699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15701 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15703 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15704 ;;Total ram usage:        5 bytes
 15705 ;; Hardware stack levels used:    1
 15706 ;; Hardware stack levels required when called:    7
 15707 ;; This function calls:
 15708 ;;		_LCD_send_command
 15709 ;; This function is called by:
 15710 ;;		_LCD_write_message
 15711 ;;		_LCD_write_string
 15712 ;; This function uses a non-reentrant model
 15713 ;;
 15714                           
 15715                           	psect	text39
 15716  015D5A                     __ptext39:
 15717                           	opt stack 0
 15718  015D5A                     _LCD_write_char:
 15719                           	opt stack 22
 15720                           
 15721                           ;incstack = 0
 15722                           ;LCD_write_char@value stored from wreg
 15723  015D5A  0100               	movlb	0	; () banked
 15724  015D5C  6F80               	movwf	LCD_write_char@value& (0+255),b
 15725                           
 15726                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 15727                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 15728  015D5E  848D               	bsf	3981,2,c	;volatile
 15729                           
 15730                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 15731  015D60  0100               	movlb	0	; () banked
 15732  015D62  4580               	rlncf	LCD_write_char@value& (0+255),w,b
 15733  015D64  0B01               	andlw	1
 15734  015D66  0100               	movlb	0	; () banked
 15735  015D68  6F7C               	movwf	LCD_write_char@D3& (0+255),b
 15736                           
 15737                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 15738  015D6A  0100               	movlb	0	; () banked
 15739  015D6C  4580               	rlncf	LCD_write_char@value& (0+255),w,b
 15740  015D6E  46E8               	rlncf	wreg,f,c
 15741  015D70  0B03               	andlw	3
 15742  015D72  0B01               	andlw	1
 15743  015D74  0100               	movlb	0	; () banked
 15744  015D76  6F7D               	movwf	LCD_write_char@D2& (0+255),b
 15745                           
 15746                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 15747  015D78  0100               	movlb	0	; () banked
 15748  015D7A  3980               	swapf	LCD_write_char@value& (0+255),w,b
 15749  015D7C  42E8               	rrncf	wreg,f,c
 15750  015D7E  0B07               	andlw	7
 15751  015D80  0B01               	andlw	1
 15752  015D82  0100               	movlb	0	; () banked
 15753  015D84  6F7E               	movwf	LCD_write_char@D1& (0+255),b
 15754                           
 15755                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 15756  015D86  0100               	movlb	0	; () banked
 15757  015D88  3980               	swapf	LCD_write_char@value& (0+255),w,b
 15758  015D8A  0B0F               	andlw	15
 15759  015D8C  0B01               	andlw	1
 15760  015D8E  0100               	movlb	0	; () banked
 15761  015D90  6F7F               	movwf	LCD_write_char@D0& (0+255),b
 15762                           
 15763                           ; BSR set to: 0
 15764                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 15765  015D92  C07D  F078         	movff	LCD_write_char@D2,LCD_send_command@D2
 15766  015D96  C07E  F079         	movff	LCD_write_char@D1,LCD_send_command@D1
 15767  015D9A  C07F  F07A         	movff	LCD_write_char@D0,LCD_send_command@D0
 15768  015D9E  0100               	movlb	0	; () banked
 15769  015DA0  517C               	movf	LCD_write_char@D3& (0+255),w,b
 15770  015DA2  ECE8  F0B0         	call	_LCD_send_command
 15771                           
 15772                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 15773  015DA6  0100               	movlb	0	; () banked
 15774  015DA8  3980               	swapf	LCD_write_char@value& (0+255),w,b
 15775  015DAA  46E8               	rlncf	wreg,f,c
 15776  015DAC  0B1F               	andlw	31
 15777  015DAE  0B01               	andlw	1
 15778  015DB0  0100               	movlb	0	; () banked
 15779  015DB2  6F7C               	movwf	LCD_write_char@D3& (0+255),b
 15780                           
 15781                           ; BSR set to: 0
 15782                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 15783  015DB4  0100               	movlb	0	; () banked
 15784  015DB6  4180               	rrncf	LCD_write_char@value& (0+255),w,b
 15785  015DB8  42E8               	rrncf	wreg,f,c
 15786  015DBA  0B3F               	andlw	63
 15787  015DBC  0B01               	andlw	1
 15788  015DBE  0100               	movlb	0	; () banked
 15789  015DC0  6F7D               	movwf	LCD_write_char@D2& (0+255),b
 15790                           
 15791                           ; BSR set to: 0
 15792                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 15793  015DC2  0100               	movlb	0	; () banked
 15794  015DC4  90D8               	bcf	status,0,c
 15795  015DC6  3180               	rrcf	LCD_write_char@value& (0+255),w,b
 15796  015DC8  0B01               	andlw	1
 15797  015DCA  0100               	movlb	0	; () banked
 15798  015DCC  6F7E               	movwf	LCD_write_char@D1& (0+255),b
 15799                           
 15800                           ; BSR set to: 0
 15801                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 15802  015DCE  0100               	movlb	0	; () banked
 15803  015DD0  5180               	movf	LCD_write_char@value& (0+255),w,b
 15804  015DD2  0B01               	andlw	1
 15805  015DD4  0100               	movlb	0	; () banked
 15806  015DD6  6F7F               	movwf	LCD_write_char@D0& (0+255),b
 15807                           
 15808                           ; BSR set to: 0
 15809                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 15810  015DD8  C07D  F078         	movff	LCD_write_char@D2,LCD_send_command@D2
 15811  015DDC  C07E  F079         	movff	LCD_write_char@D1,LCD_send_command@D1
 15812  015DE0  C07F  F07A         	movff	LCD_write_char@D0,LCD_send_command@D0
 15813  015DE4  0100               	movlb	0	; () banked
 15814  015DE6  517C               	movf	LCD_write_char@D3& (0+255),w,b
 15815  015DE8  ECE8  F0B0         	call	_LCD_send_command
 15816                           
 15817                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 15818  015DEC  948D               	bcf	3981,2,c	;volatile
 15819  015DEE  0012               	return		;funcret
 15820  015DF0                     __end_of_LCD_write_char:
 15821                           	opt stack 0
 15822                           tblptru	equ	0xFF8
 15823                           tblptrh	equ	0xFF7
 15824                           tblptrl	equ	0xFF6
 15825                           tablat	equ	0xFF5
 15826                           prodh	equ	0xFF4
 15827                           prodl	equ	0xFF3
 15828                           intcon	equ	0xFF2
 15829                           postinc0	equ	0xFEE
 15830                           wreg	equ	0xFE8
 15831                           indf1	equ	0xFE7
 15832                           plusw1	equ	0xFE3
 15833                           fsr1h	equ	0xFE2
 15834                           fsr1l	equ	0xFE1
 15835                           indf2	equ	0xFDF
 15836                           postinc2	equ	0xFDE
 15837                           plusw2	equ	0xFDB
 15838                           fsr2h	equ	0xFDA
 15839                           fsr2l	equ	0xFD9
 15840                           status	equ	0xFD8
 15841                           
 15842 ;; *************** function _LCD_initialize *****************
 15843 ;; Defined at:
 15844 ;;		line 283 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15845 ;; Parameters:    Size  Location     Type
 15846 ;;  quartz_frequ    1    wreg     unsigned char 
 15847 ;; Auto vars:     Size  Location     Type
 15848 ;;  quartz_frequ    1   30[BANK0 ] unsigned char 
 15849 ;; Return value:  Size  Location     Type
 15850 ;;		None               void
 15851 ;; Registers used:
 15852 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15853 ;; Tracked objects:
 15854 ;;		On entry : 0/0
 15855 ;;		On exit  : 0/0
 15856 ;;		Unchanged: 0/0
 15857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15859 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15861 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15862 ;;Total ram usage:        1 bytes
 15863 ;; Hardware stack levels used:    1
 15864 ;; Hardware stack levels required when called:    8
 15865 ;; This function calls:
 15866 ;;		_LCD_clear
 15867 ;;		_LCD_cursor
 15868 ;;		_LCD_send_command
 15869 ;;		_delay_ms
 15870 ;;		_delay_set_quartz
 15871 ;; This function is called by:
 15872 ;;		_main
 15873 ;;		_LCD_Handler
 15874 ;;		_LCD_Gap
 15875 ;;		_LCD_Park
 15876 ;;		_LCD_Parking
 15877 ;;		_LCD_End
 15878 ;;		_board_initialization
 15879 ;; This function uses a non-reentrant model
 15880 ;;
 15881                           
 15882                           	psect	text40
 15883  015474                     __ptext40:
 15884                           	opt stack 0
 15885  015474                     _LCD_initialize:
 15886                           	opt stack 21
 15887                           
 15888                           ;incstack = 0
 15889                           ;LCD_initialize@quartz_frequency stored from wreg
 15890  015474  0100               	movlb	0	; () banked
 15891  015476  6F7E               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 15892                           
 15893                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 15894  015478  0100               	movlb	0	; () banked
 15895  01547A  517E               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 15896  01547C  EC4D  F0B2         	call	_delay_set_quartz
 15897                           
 15898                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 15899  015480  948D               	bcf	3981,2,c	;volatile
 15900                           
 15901                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 15902  015482  928B               	bcf	3979,1,c	;volatile
 15903                           
 15904                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 15905  015484  908B               	bcf	3979,0,c	;volatile
 15906                           
 15907                           ;src\LCD_44780.c: 291: delay_ms (100);
 15908  015486  0E00               	movlw	0
 15909  015488  0100               	movlb	0	; () banked
 15910  01548A  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15911  01548C  0E64               	movlw	100
 15912  01548E  6F76               	movwf	delay_ms@value_ms& (0+255),b
 15913  015490  EC05  F0B1         	call	_delay_ms	;wreg free
 15914                           
 15915                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 15916  015494  0E00               	movlw	0
 15917  015496  0100               	movlb	0	; () banked
 15918  015498  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15919  01549A  0E01               	movlw	1
 15920  01549C  0100               	movlb	0	; () banked
 15921  01549E  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15922  0154A0  0E01               	movlw	1
 15923  0154A2  0100               	movlb	0	; () banked
 15924  0154A4  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15925  0154A6  0E00               	movlw	0
 15926  0154A8  ECE8  F0B0         	call	_LCD_send_command
 15927                           
 15928                           ;src\LCD_44780.c: 293: delay_ms (100);
 15929  0154AC  0E00               	movlw	0
 15930  0154AE  0100               	movlb	0	; () banked
 15931  0154B0  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15932  0154B2  0E64               	movlw	100
 15933  0154B4  6F76               	movwf	delay_ms@value_ms& (0+255),b
 15934  0154B6  EC05  F0B1         	call	_delay_ms	;wreg free
 15935                           
 15936                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 15937  0154BA  0E00               	movlw	0
 15938  0154BC  0100               	movlb	0	; () banked
 15939  0154BE  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15940  0154C0  0E01               	movlw	1
 15941  0154C2  0100               	movlb	0	; () banked
 15942  0154C4  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15943  0154C6  0E01               	movlw	1
 15944  0154C8  0100               	movlb	0	; () banked
 15945  0154CA  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15946  0154CC  0E00               	movlw	0
 15947  0154CE  ECE8  F0B0         	call	_LCD_send_command
 15948                           
 15949                           ;src\LCD_44780.c: 295: delay_ms (10);
 15950  0154D2  0E00               	movlw	0
 15951  0154D4  0100               	movlb	0	; () banked
 15952  0154D6  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15953  0154D8  0E0A               	movlw	10
 15954  0154DA  6F76               	movwf	delay_ms@value_ms& (0+255),b
 15955  0154DC  EC05  F0B1         	call	_delay_ms	;wreg free
 15956                           
 15957                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 15958  0154E0  0E00               	movlw	0
 15959  0154E2  0100               	movlb	0	; () banked
 15960  0154E4  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15961  0154E6  0E01               	movlw	1
 15962  0154E8  0100               	movlb	0	; () banked
 15963  0154EA  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15964  0154EC  0E01               	movlw	1
 15965  0154EE  0100               	movlb	0	; () banked
 15966  0154F0  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15967  0154F2  0E00               	movlw	0
 15968  0154F4  ECE8  F0B0         	call	_LCD_send_command
 15969                           
 15970                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 15971  0154F8  0E00               	movlw	0
 15972  0154FA  0100               	movlb	0	; () banked
 15973  0154FC  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15974  0154FE  0E01               	movlw	1
 15975  015500  0100               	movlb	0	; () banked
 15976  015502  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15977  015504  0E00               	movlw	0
 15978  015506  0100               	movlb	0	; () banked
 15979  015508  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15980  01550A  0E00               	movlw	0
 15981  01550C  ECE8  F0B0         	call	_LCD_send_command
 15982                           
 15983                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 15984  015510  0E00               	movlw	0
 15985  015512  0100               	movlb	0	; () banked
 15986  015514  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15987  015516  0E01               	movlw	1
 15988  015518  0100               	movlb	0	; () banked
 15989  01551A  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15990  01551C  0E00               	movlw	0
 15991  01551E  0100               	movlb	0	; () banked
 15992  015520  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15993  015522  0E00               	movlw	0
 15994  015524  ECE8  F0B0         	call	_LCD_send_command
 15995                           
 15996                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 15997  015528  0E00               	movlw	0
 15998  01552A  0100               	movlb	0	; () banked
 15999  01552C  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16000  01552E  0E00               	movlw	0
 16001  015530  0100               	movlb	0	; () banked
 16002  015532  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16003  015534  0E00               	movlw	0
 16004  015536  0100               	movlb	0	; () banked
 16005  015538  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16006  01553A  0E01               	movlw	1
 16007  01553C  ECE8  F0B0         	call	_LCD_send_command
 16008                           
 16009                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 16010  015540  0E00               	movlw	0
 16011  015542  0100               	movlb	0	; () banked
 16012  015544  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16013  015546  0E00               	movlw	0
 16014  015548  0100               	movlb	0	; () banked
 16015  01554A  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16016  01554C  0E00               	movlw	0
 16017  01554E  0100               	movlb	0	; () banked
 16018  015550  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16019  015552  0E00               	movlw	0
 16020  015554  ECE8  F0B0         	call	_LCD_send_command
 16021                           
 16022                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 16023  015558  0E00               	movlw	0
 16024  01555A  0100               	movlb	0	; () banked
 16025  01555C  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16026  01555E  0E00               	movlw	0
 16027  015560  0100               	movlb	0	; () banked
 16028  015562  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16029  015564  0E00               	movlw	0
 16030  015566  0100               	movlb	0	; () banked
 16031  015568  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16032  01556A  0E01               	movlw	1
 16033  01556C  ECE8  F0B0         	call	_LCD_send_command
 16034                           
 16035                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 16036  015570  0E00               	movlw	0
 16037  015572  0100               	movlb	0	; () banked
 16038  015574  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16039  015576  0E00               	movlw	0
 16040  015578  0100               	movlb	0	; () banked
 16041  01557A  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16042  01557C  0E00               	movlw	0
 16043  01557E  0100               	movlb	0	; () banked
 16044  015580  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16045  015582  0E00               	movlw	0
 16046  015584  ECE8  F0B0         	call	_LCD_send_command
 16047                           
 16048                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 16049  015588  0E00               	movlw	0
 16050  01558A  0100               	movlb	0	; () banked
 16051  01558C  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16052  01558E  0E00               	movlw	0
 16053  015590  0100               	movlb	0	; () banked
 16054  015592  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16055  015594  0E01               	movlw	1
 16056  015596  0100               	movlb	0	; () banked
 16057  015598  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16058  01559A  0E00               	movlw	0
 16059  01559C  ECE8  F0B0         	call	_LCD_send_command
 16060                           
 16061                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 16062  0155A0  0E00               	movlw	0
 16063  0155A2  0100               	movlb	0	; () banked
 16064  0155A4  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16065  0155A6  0E00               	movlw	0
 16066  0155A8  0100               	movlb	0	; () banked
 16067  0155AA  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16068  0155AC  0E00               	movlw	0
 16069  0155AE  0100               	movlb	0	; () banked
 16070  0155B0  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16071  0155B2  0E00               	movlw	0
 16072  0155B4  ECE8  F0B0         	call	_LCD_send_command
 16073                           
 16074                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 16075  0155B8  0E01               	movlw	1
 16076  0155BA  0100               	movlb	0	; () banked
 16077  0155BC  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16078  0155BE  0E01               	movlw	1
 16079  0155C0  0100               	movlb	0	; () banked
 16080  0155C2  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16081  0155C4  0E00               	movlw	0
 16082  0155C6  0100               	movlb	0	; () banked
 16083  0155C8  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16084  0155CA  0E00               	movlw	0
 16085  0155CC  ECE8  F0B0         	call	_LCD_send_command
 16086                           
 16087                           ;src\LCD_44780.c: 312: LCD_clear ();
 16088  0155D0  EC8C  F0B1         	call	_LCD_clear	;wreg free
 16089                           
 16090                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 16091  0155D4  0E00               	movlw	0
 16092  0155D6  0100               	movlb	0	; () banked
 16093  0155D8  6F7C               	movwf	LCD_cursor@blinking& (0+255),b
 16094  0155DA  0E00               	movlw	0
 16095  0155DC  EC73  F0B1         	call	_LCD_cursor
 16096  0155E0  0012               	return		;funcret
 16097  0155E2                     __end_of_LCD_initialize:
 16098                           	opt stack 0
 16099                           tblptru	equ	0xFF8
 16100                           tblptrh	equ	0xFF7
 16101                           tblptrl	equ	0xFF6
 16102                           tablat	equ	0xFF5
 16103                           prodh	equ	0xFF4
 16104                           prodl	equ	0xFF3
 16105                           intcon	equ	0xFF2
 16106                           postinc0	equ	0xFEE
 16107                           wreg	equ	0xFE8
 16108                           indf1	equ	0xFE7
 16109                           plusw1	equ	0xFE3
 16110                           fsr1h	equ	0xFE2
 16111                           fsr1l	equ	0xFE1
 16112                           indf2	equ	0xFDF
 16113                           postinc2	equ	0xFDE
 16114                           plusw2	equ	0xFDB
 16115                           fsr2h	equ	0xFDA
 16116                           fsr2l	equ	0xFD9
 16117                           status	equ	0xFD8
 16118                           
 16119 ;; *************** function _delay_set_quartz *****************
 16120 ;; Defined at:
 16121 ;;		line 115 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 16122 ;; Parameters:    Size  Location     Type
 16123 ;;  frequency       1    wreg     unsigned char 
 16124 ;; Auto vars:     Size  Location     Type
 16125 ;;  frequency       1   16[BANK0 ] unsigned char 
 16126 ;; Return value:  Size  Location     Type
 16127 ;;		None               void
 16128 ;; Registers used:
 16129 ;;		wreg
 16130 ;; Tracked objects:
 16131 ;;		On entry : 0/0
 16132 ;;		On exit  : 0/0
 16133 ;;		Unchanged: 0/0
 16134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16136 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16138 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16139 ;;Total ram usage:        1 bytes
 16140 ;; Hardware stack levels used:    1
 16141 ;; Hardware stack levels required when called:    3
 16142 ;; This function calls:
 16143 ;;		Nothing
 16144 ;; This function is called by:
 16145 ;;		_LCD_initialize
 16146 ;; This function uses a non-reentrant model
 16147 ;;
 16148                           
 16149                           	psect	text41
 16150  01649A                     __ptext41:
 16151                           	opt stack 0
 16152  01649A                     _delay_set_quartz:
 16153                           	opt stack 25
 16154                           
 16155                           ;incstack = 0
 16156                           ;delay_set_quartz@frequency stored from wreg
 16157  01649A  0100               	movlb	0	; () banked
 16158  01649C  6F70               	movwf	delay_set_quartz@frequency& (0+255),b
 16159                           
 16160                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 16161  01649E  C070  F0EB         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 16162  0164A2  0012               	return		;funcret
 16163  0164A4                     __end_of_delay_set_quartz:
 16164                           	opt stack 0
 16165                           tblptru	equ	0xFF8
 16166                           tblptrh	equ	0xFF7
 16167                           tblptrl	equ	0xFF6
 16168                           tablat	equ	0xFF5
 16169                           prodh	equ	0xFF4
 16170                           prodl	equ	0xFF3
 16171                           intcon	equ	0xFF2
 16172                           postinc0	equ	0xFEE
 16173                           wreg	equ	0xFE8
 16174                           indf1	equ	0xFE7
 16175                           plusw1	equ	0xFE3
 16176                           fsr1h	equ	0xFE2
 16177                           fsr1l	equ	0xFE1
 16178                           indf2	equ	0xFDF
 16179                           postinc2	equ	0xFDE
 16180                           plusw2	equ	0xFDB
 16181                           fsr2h	equ	0xFDA
 16182                           fsr2l	equ	0xFD9
 16183                           status	equ	0xFD8
 16184                           
 16185 ;; *************** function _LCD_cursor *****************
 16186 ;; Defined at:
 16187 ;;		line 266 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16188 ;; Parameters:    Size  Location     Type
 16189 ;;  active          1    wreg     unsigned char 
 16190 ;;  blinking        1   28[BANK0 ] unsigned char 
 16191 ;; Auto vars:     Size  Location     Type
 16192 ;;  active          1   29[BANK0 ] unsigned char 
 16193 ;; Return value:  Size  Location     Type
 16194 ;;		None               void
 16195 ;; Registers used:
 16196 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16197 ;; Tracked objects:
 16198 ;;		On entry : 0/0
 16199 ;;		On exit  : 0/0
 16200 ;;		Unchanged: 0/0
 16201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16202 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16203 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16205 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16206 ;;Total ram usage:        2 bytes
 16207 ;; Hardware stack levels used:    1
 16208 ;; Hardware stack levels required when called:    7
 16209 ;; This function calls:
 16210 ;;		_LCD_send_command
 16211 ;; This function is called by:
 16212 ;;		_LCD_initialize
 16213 ;; This function uses a non-reentrant model
 16214 ;;
 16215                           
 16216                           	psect	text42
 16217  0162E6                     __ptext42:
 16218                           	opt stack 0
 16219  0162E6                     _LCD_cursor:
 16220                           	opt stack 21
 16221                           
 16222                           ;incstack = 0
 16223                           ;LCD_cursor@active stored from wreg
 16224  0162E6  0100               	movlb	0	; () banked
 16225  0162E8  6F7D               	movwf	LCD_cursor@active& (0+255),b
 16226                           
 16227                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 16228  0162EA  0E00               	movlw	0
 16229  0162EC  0100               	movlb	0	; () banked
 16230  0162EE  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16231  0162F0  0E00               	movlw	0
 16232  0162F2  0100               	movlb	0	; () banked
 16233  0162F4  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16234  0162F6  0E00               	movlw	0
 16235  0162F8  0100               	movlb	0	; () banked
 16236  0162FA  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16237  0162FC  0E00               	movlw	0
 16238  0162FE  ECE8  F0B0         	call	_LCD_send_command
 16239                           
 16240                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 16241  016302  0E01               	movlw	1
 16242  016304  0100               	movlb	0	; () banked
 16243  016306  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16244  016308  C07D  F079         	movff	LCD_cursor@active,LCD_send_command@D1
 16245  01630C  C07C  F07A         	movff	LCD_cursor@blinking,LCD_send_command@D0
 16246  016310  0E01               	movlw	1
 16247  016312  ECE8  F0B0         	call	_LCD_send_command
 16248  016316  0012               	return		;funcret
 16249  016318                     __end_of_LCD_cursor:
 16250                           	opt stack 0
 16251                           tblptru	equ	0xFF8
 16252                           tblptrh	equ	0xFF7
 16253                           tblptrl	equ	0xFF6
 16254                           tablat	equ	0xFF5
 16255                           prodh	equ	0xFF4
 16256                           prodl	equ	0xFF3
 16257                           intcon	equ	0xFF2
 16258                           postinc0	equ	0xFEE
 16259                           wreg	equ	0xFE8
 16260                           indf1	equ	0xFE7
 16261                           plusw1	equ	0xFE3
 16262                           fsr1h	equ	0xFE2
 16263                           fsr1l	equ	0xFE1
 16264                           indf2	equ	0xFDF
 16265                           postinc2	equ	0xFDE
 16266                           plusw2	equ	0xFDB
 16267                           fsr2h	equ	0xFDA
 16268                           fsr2l	equ	0xFD9
 16269                           status	equ	0xFD8
 16270                           
 16271 ;; *************** function _LCD_clear *****************
 16272 ;; Defined at:
 16273 ;;		line 257 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16274 ;; Parameters:    Size  Location     Type
 16275 ;;		None
 16276 ;; Auto vars:     Size  Location     Type
 16277 ;;		None
 16278 ;; Return value:  Size  Location     Type
 16279 ;;		None               void
 16280 ;; Registers used:
 16281 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16282 ;; Tracked objects:
 16283 ;;		On entry : 0/0
 16284 ;;		On exit  : 0/0
 16285 ;;		Unchanged: 0/0
 16286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16291 ;;Total ram usage:        0 bytes
 16292 ;; Hardware stack levels used:    1
 16293 ;; Hardware stack levels required when called:    7
 16294 ;; This function calls:
 16295 ;;		_LCD_send_command
 16296 ;; This function is called by:
 16297 ;;		_LCD_initialize
 16298 ;;		_LCD_Handler
 16299 ;;		_LCD_Gap
 16300 ;;		_LCD_Park
 16301 ;;		_LCD_Parking
 16302 ;;		_LCD_End
 16303 ;;		_board_initialization
 16304 ;; This function uses a non-reentrant model
 16305 ;;
 16306                           
 16307                           	psect	text43
 16308  016318                     __ptext43:
 16309                           	opt stack 0
 16310  016318                     _LCD_clear:
 16311                           	opt stack 21
 16312                           
 16313                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 16314                           
 16315                           ;incstack = 0
 16316  016318  0E00               	movlw	0
 16317  01631A  0100               	movlb	0	; () banked
 16318  01631C  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16319  01631E  0E00               	movlw	0
 16320  016320  0100               	movlb	0	; () banked
 16321  016322  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16322  016324  0E00               	movlw	0
 16323  016326  0100               	movlb	0	; () banked
 16324  016328  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16325  01632A  0E00               	movlw	0
 16326  01632C  ECE8  F0B0         	call	_LCD_send_command
 16327                           
 16328                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 16329  016330  0E00               	movlw	0
 16330  016332  0100               	movlb	0	; () banked
 16331  016334  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16332  016336  0E00               	movlw	0
 16333  016338  0100               	movlb	0	; () banked
 16334  01633A  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16335  01633C  0E01               	movlw	1
 16336  01633E  0100               	movlb	0	; () banked
 16337  016340  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16338  016342  0E00               	movlw	0
 16339  016344  ECE8  F0B0         	call	_LCD_send_command
 16340  016348  0012               	return		;funcret
 16341  01634A                     __end_of_LCD_clear:
 16342                           	opt stack 0
 16343                           tblptru	equ	0xFF8
 16344                           tblptrh	equ	0xFF7
 16345                           tblptrl	equ	0xFF6
 16346                           tablat	equ	0xFF5
 16347                           prodh	equ	0xFF4
 16348                           prodl	equ	0xFF3
 16349                           intcon	equ	0xFF2
 16350                           postinc0	equ	0xFEE
 16351                           wreg	equ	0xFE8
 16352                           indf1	equ	0xFE7
 16353                           plusw1	equ	0xFE3
 16354                           fsr1h	equ	0xFE2
 16355                           fsr1l	equ	0xFE1
 16356                           indf2	equ	0xFDF
 16357                           postinc2	equ	0xFDE
 16358                           plusw2	equ	0xFDB
 16359                           fsr2h	equ	0xFDA
 16360                           fsr2l	equ	0xFD9
 16361                           status	equ	0xFD8
 16362                           
 16363 ;; *************** function _LCD_goto_line *****************
 16364 ;; Defined at:
 16365 ;;		line 111 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16366 ;; Parameters:    Size  Location     Type
 16367 ;;  line            1    wreg     unsigned char 
 16368 ;; Auto vars:     Size  Location     Type
 16369 ;;  line            1   28[BANK0 ] unsigned char 
 16370 ;; Return value:  Size  Location     Type
 16371 ;;		None               void
 16372 ;; Registers used:
 16373 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16374 ;; Tracked objects:
 16375 ;;		On entry : 0/0
 16376 ;;		On exit  : 0/0
 16377 ;;		Unchanged: 0/0
 16378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16380 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16382 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16383 ;;Total ram usage:        1 bytes
 16384 ;; Hardware stack levels used:    1
 16385 ;; Hardware stack levels required when called:    7
 16386 ;; This function calls:
 16387 ;;		_LCD_send_command
 16388 ;; This function is called by:
 16389 ;;		_LCD_goto_xy
 16390 ;;		_main
 16391 ;;		_LCD_Handler
 16392 ;;		_LCD_Gap
 16393 ;;		_LCD_Park
 16394 ;;		_LCD_Parking
 16395 ;;		_LCD_End
 16396 ;;		_board_initialization
 16397 ;; This function uses a non-reentrant model
 16398 ;;
 16399                           
 16400                           	psect	text44
 16401  0156EE                     __ptext44:
 16402                           	opt stack 0
 16403  0156EE                     _LCD_goto_line:
 16404                           	opt stack 22
 16405                           
 16406                           ;incstack = 0
 16407                           ;LCD_goto_line@line stored from wreg
 16408  0156EE  0100               	movlb	0	; () banked
 16409  0156F0  6F7C               	movwf	LCD_goto_line@line& (0+255),b
 16410                           
 16411                           ;src\LCD_44780.c: 113: switch(line) {
 16412  0156F2  D064               	goto	l8302
 16413  0156F4                     l8294:
 16414  0156F4  0E00               	movlw	0
 16415  0156F6  0100               	movlb	0	; () banked
 16416  0156F8  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16417  0156FA  0E00               	movlw	0
 16418  0156FC  0100               	movlb	0	; () banked
 16419  0156FE  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16420  015700  0E00               	movlw	0
 16421  015702  0100               	movlb	0	; () banked
 16422  015704  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16423  015706  0E01               	movlw	1
 16424  015708  ECE8  F0B0         	call	_LCD_send_command
 16425                           
 16426                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 16427  01570C  0E00               	movlw	0
 16428  01570E  0100               	movlb	0	; () banked
 16429  015710  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16430  015712  0E00               	movlw	0
 16431  015714  0100               	movlb	0	; () banked
 16432  015716  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16433  015718  0E00               	movlw	0
 16434  01571A  0100               	movlb	0	; () banked
 16435  01571C  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16436  01571E  0E00               	movlw	0
 16437  015720  ECE8  F0B0         	call	_LCD_send_command
 16438                           
 16439                           ;src\LCD_44780.c: 117: break;
 16440  015724  0012               	return	
 16441  015726                     l8296:
 16442  015726  0E01               	movlw	1
 16443  015728  0100               	movlb	0	; () banked
 16444  01572A  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16445  01572C  0E00               	movlw	0
 16446  01572E  0100               	movlb	0	; () banked
 16447  015730  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16448  015732  0E00               	movlw	0
 16449  015734  0100               	movlb	0	; () banked
 16450  015736  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16451  015738  0E01               	movlw	1
 16452  01573A  ECE8  F0B0         	call	_LCD_send_command
 16453                           
 16454                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 16455  01573E  0E00               	movlw	0
 16456  015740  0100               	movlb	0	; () banked
 16457  015742  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16458  015744  0E00               	movlw	0
 16459  015746  0100               	movlb	0	; () banked
 16460  015748  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16461  01574A  0E00               	movlw	0
 16462  01574C  0100               	movlb	0	; () banked
 16463  01574E  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16464  015750  0E00               	movlw	0
 16465  015752  ECE8  F0B0         	call	_LCD_send_command
 16466                           
 16467                           ;src\LCD_44780.c: 121: break;
 16468  015756  0012               	return	
 16469  015758                     l8298:
 16470  015758  0E00               	movlw	0
 16471  01575A  0100               	movlb	0	; () banked
 16472  01575C  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16473  01575E  0E00               	movlw	0
 16474  015760  0100               	movlb	0	; () banked
 16475  015762  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16476  015764  0E01               	movlw	1
 16477  015766  0100               	movlb	0	; () banked
 16478  015768  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16479  01576A  0E01               	movlw	1
 16480  01576C  ECE8  F0B0         	call	_LCD_send_command
 16481                           
 16482                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 16483  015770  0E01               	movlw	1
 16484  015772  0100               	movlb	0	; () banked
 16485  015774  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16486  015776  0E00               	movlw	0
 16487  015778  0100               	movlb	0	; () banked
 16488  01577A  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16489  01577C  0E00               	movlw	0
 16490  01577E  0100               	movlb	0	; () banked
 16491  015780  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16492  015782  0E00               	movlw	0
 16493  015784  ECE8  F0B0         	call	_LCD_send_command
 16494                           
 16495                           ;src\LCD_44780.c: 125: break;
 16496  015788  0012               	return	
 16497  01578A                     l8300:
 16498  01578A  0E01               	movlw	1
 16499  01578C  0100               	movlb	0	; () banked
 16500  01578E  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16501  015790  0E00               	movlw	0
 16502  015792  0100               	movlb	0	; () banked
 16503  015794  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16504  015796  0E01               	movlw	1
 16505  015798  0100               	movlb	0	; () banked
 16506  01579A  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16507  01579C  0E01               	movlw	1
 16508  01579E  ECE8  F0B0         	call	_LCD_send_command
 16509                           
 16510                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 16511  0157A2  0E01               	movlw	1
 16512  0157A4  0100               	movlb	0	; () banked
 16513  0157A6  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16514  0157A8  0E00               	movlw	0
 16515  0157AA  0100               	movlb	0	; () banked
 16516  0157AC  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16517  0157AE  0E00               	movlw	0
 16518  0157B0  0100               	movlb	0	; () banked
 16519  0157B2  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16520  0157B4  0E00               	movlw	0
 16521  0157B6  ECE8  F0B0         	call	_LCD_send_command
 16522                           
 16523                           ;src\LCD_44780.c: 129: }
 16524  0157BA  0012               	return	
 16525  0157BC                     l8302:
 16526  0157BC  0100               	movlb	0	; () banked
 16527  0157BE  517C               	movf	LCD_goto_line@line& (0+255),w,b
 16528                           
 16529                           ; Switch size 1, requested type "space"
 16530                           ; Number of cases is 4, Range of values is 1 to 4
 16531                           ; switch strategies available:
 16532                           ; Name         Instructions Cycles
 16533                           ; simple_byte           13     7 (average)
 16534                           ;	Chosen strategy is simple_byte
 16535  0157C0  0A01               	xorlw	1	; case 1
 16536  0157C2  B4D8               	btfsc	status,2,c
 16537  0157C4  D797               	goto	l8294
 16538  0157C6  0A03               	xorlw	3	; case 2
 16539  0157C8  B4D8               	btfsc	status,2,c
 16540  0157CA  D7AD               	goto	l8296
 16541  0157CC  0A01               	xorlw	1	; case 3
 16542  0157CE  B4D8               	btfsc	status,2,c
 16543  0157D0  D7C3               	goto	l8298
 16544  0157D2  0A07               	xorlw	7	; case 4
 16545  0157D4  A4D8               	btfss	status,2,c
 16546  0157D6  0012               	return	
 16547  0157D8  D7D8               	goto	l8300
 16548  0157DA                     __end_of_LCD_goto_line:
 16549                           	opt stack 0
 16550                           tblptru	equ	0xFF8
 16551                           tblptrh	equ	0xFF7
 16552                           tblptrl	equ	0xFF6
 16553                           tablat	equ	0xFF5
 16554                           prodh	equ	0xFF4
 16555                           prodl	equ	0xFF3
 16556                           intcon	equ	0xFF2
 16557                           postinc0	equ	0xFEE
 16558                           wreg	equ	0xFE8
 16559                           indf1	equ	0xFE7
 16560                           plusw1	equ	0xFE3
 16561                           fsr1h	equ	0xFE2
 16562                           fsr1l	equ	0xFE1
 16563                           indf2	equ	0xFDF
 16564                           postinc2	equ	0xFDE
 16565                           plusw2	equ	0xFDB
 16566                           fsr2h	equ	0xFDA
 16567                           fsr2l	equ	0xFD9
 16568                           status	equ	0xFD8
 16569                           
 16570 ;; *************** function _LCD_send_command *****************
 16571 ;; Defined at:
 16572 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16573 ;; Parameters:    Size  Location     Type
 16574 ;;  D3              1    wreg     unsigned char 
 16575 ;;  D2              1   24[BANK0 ] unsigned char 
 16576 ;;  D1              1   25[BANK0 ] unsigned char 
 16577 ;;  D0              1   26[BANK0 ] unsigned char 
 16578 ;; Auto vars:     Size  Location     Type
 16579 ;;  D3              1   27[BANK0 ] unsigned char 
 16580 ;; Return value:  Size  Location     Type
 16581 ;;		None               void
 16582 ;; Registers used:
 16583 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16584 ;; Tracked objects:
 16585 ;;		On entry : 0/0
 16586 ;;		On exit  : 0/0
 16587 ;;		Unchanged: 0/0
 16588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16589 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16590 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16592 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16593 ;;Total ram usage:        4 bytes
 16594 ;; Hardware stack levels used:    1
 16595 ;; Hardware stack levels required when called:    6
 16596 ;; This function calls:
 16597 ;;		_LCD_enable_pulse
 16598 ;; This function is called by:
 16599 ;;		_LCD_shift_cursor
 16600 ;;		_LCD_goto_line
 16601 ;;		_LCD_write_char
 16602 ;;		_LCD_clear
 16603 ;;		_LCD_cursor
 16604 ;;		_LCD_initialize
 16605 ;;		_LCD_home
 16606 ;;		_LCD_shift
 16607 ;; This function uses a non-reentrant model
 16608 ;;
 16609                           
 16610                           	psect	text45
 16611  0161D0                     __ptext45:
 16612                           	opt stack 0
 16613  0161D0                     _LCD_send_command:
 16614                           	opt stack 22
 16615                           
 16616                           ;incstack = 0
 16617                           ;LCD_send_command@D3 stored from wreg
 16618  0161D0  0100               	movlb	0	; () banked
 16619  0161D2  6F7B               	movwf	LCD_send_command@D3& (0+255),b
 16620                           
 16621                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 16622  0161D4  0100               	movlb	0	; () banked
 16623  0161D6  B17A               	btfsc	LCD_send_command@D0& (0+255),0,b
 16624  0161D8  D002               	bra	u10295
 16625  0161DA  948B               	bcf	3979,2,c	;volatile
 16626  0161DC  D001               	bra	u10296
 16627  0161DE                     u10295:
 16628  0161DE  848B               	bsf	3979,2,c	;volatile
 16629  0161E0                     u10296:
 16630                           
 16631                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 16632  0161E0  0100               	movlb	0	; () banked
 16633  0161E2  B179               	btfsc	LCD_send_command@D1& (0+255),0,b
 16634  0161E4  D002               	bra	u10305
 16635  0161E6  968B               	bcf	3979,3,c	;volatile
 16636  0161E8  D001               	bra	u10306
 16637  0161EA                     u10305:
 16638  0161EA  868B               	bsf	3979,3,c	;volatile
 16639  0161EC                     u10306:
 16640                           
 16641                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 16642  0161EC  0100               	movlb	0	; () banked
 16643  0161EE  B178               	btfsc	LCD_send_command@D2& (0+255),0,b
 16644  0161F0  D002               	bra	u10315
 16645  0161F2  908C               	bcf	3980,0,c	;volatile
 16646  0161F4  D001               	bra	u10316
 16647  0161F6                     u10315:
 16648  0161F6  808C               	bsf	3980,0,c	;volatile
 16649  0161F8                     u10316:
 16650                           
 16651                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 16652  0161F8  0100               	movlb	0	; () banked
 16653  0161FA  B17B               	btfsc	LCD_send_command@D3& (0+255),0,b
 16654  0161FC  D002               	bra	u10325
 16655  0161FE  928C               	bcf	3980,1,c	;volatile
 16656  016200  D001               	bra	u10326
 16657  016202                     u10325:
 16658  016202  828C               	bsf	3980,1,c	;volatile
 16659  016204                     u10326:
 16660                           
 16661                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 16662  016204  ECDF  F0B1         	call	_LCD_enable_pulse	;wreg free
 16663  016208  0012               	return		;funcret
 16664  01620A                     __end_of_LCD_send_command:
 16665                           	opt stack 0
 16666                           tblptru	equ	0xFF8
 16667                           tblptrh	equ	0xFF7
 16668                           tblptrl	equ	0xFF6
 16669                           tablat	equ	0xFF5
 16670                           prodh	equ	0xFF4
 16671                           prodl	equ	0xFF3
 16672                           intcon	equ	0xFF2
 16673                           postinc0	equ	0xFEE
 16674                           wreg	equ	0xFE8
 16675                           indf1	equ	0xFE7
 16676                           plusw1	equ	0xFE3
 16677                           fsr1h	equ	0xFE2
 16678                           fsr1l	equ	0xFE1
 16679                           indf2	equ	0xFDF
 16680                           postinc2	equ	0xFDE
 16681                           plusw2	equ	0xFDB
 16682                           fsr2h	equ	0xFDA
 16683                           fsr2l	equ	0xFD9
 16684                           status	equ	0xFD8
 16685                           
 16686 ;; *************** function _LCD_enable_pulse *****************
 16687 ;; Defined at:
 16688 ;;		line 49 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16689 ;; Parameters:    Size  Location     Type
 16690 ;;		None
 16691 ;; Auto vars:     Size  Location     Type
 16692 ;;		None
 16693 ;; Return value:  Size  Location     Type
 16694 ;;		None               void
 16695 ;; Registers used:
 16696 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16697 ;; Tracked objects:
 16698 ;;		On entry : 0/0
 16699 ;;		On exit  : 0/0
 16700 ;;		Unchanged: 0/0
 16701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16706 ;;Total ram usage:        0 bytes
 16707 ;; Hardware stack levels used:    1
 16708 ;; Hardware stack levels required when called:    5
 16709 ;; This function calls:
 16710 ;;		_delay_ms
 16711 ;; This function is called by:
 16712 ;;		_LCD_send_command
 16713 ;; This function uses a non-reentrant model
 16714 ;;
 16715                           
 16716                           	psect	text46
 16717  0163BE                     __ptext46:
 16718                           	opt stack 0
 16719  0163BE                     _LCD_enable_pulse:
 16720                           	opt stack 22
 16721                           
 16722                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 16723                           
 16724                           ;incstack = 0
 16725  0163BE  828B               	bsf	3979,1,c	;volatile
 16726                           
 16727                           ;src\LCD_44780.c: 52: delay_ms (1);
 16728  0163C0  0E00               	movlw	0
 16729  0163C2  0100               	movlb	0	; () banked
 16730  0163C4  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16731  0163C6  0E01               	movlw	1
 16732  0163C8  6F76               	movwf	delay_ms@value_ms& (0+255),b
 16733  0163CA  EC05  F0B1         	call	_delay_ms	;wreg free
 16734                           
 16735                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 16736  0163CE  928B               	bcf	3979,1,c	;volatile
 16737                           
 16738                           ;src\LCD_44780.c: 54: delay_ms (1);
 16739  0163D0  0E00               	movlw	0
 16740  0163D2  0100               	movlb	0	; () banked
 16741  0163D4  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16742  0163D6  0E01               	movlw	1
 16743  0163D8  6F76               	movwf	delay_ms@value_ms& (0+255),b
 16744  0163DA  EC05  F0B1         	call	_delay_ms	;wreg free
 16745  0163DE  0012               	return		;funcret
 16746  0163E0                     __end_of_LCD_enable_pulse:
 16747                           	opt stack 0
 16748                           tblptru	equ	0xFF8
 16749                           tblptrh	equ	0xFF7
 16750                           tblptrl	equ	0xFF6
 16751                           tablat	equ	0xFF5
 16752                           prodh	equ	0xFF4
 16753                           prodl	equ	0xFF3
 16754                           intcon	equ	0xFF2
 16755                           postinc0	equ	0xFEE
 16756                           wreg	equ	0xFE8
 16757                           indf1	equ	0xFE7
 16758                           plusw1	equ	0xFE3
 16759                           fsr1h	equ	0xFE2
 16760                           fsr1l	equ	0xFE1
 16761                           indf2	equ	0xFDF
 16762                           postinc2	equ	0xFDE
 16763                           plusw2	equ	0xFDB
 16764                           fsr2h	equ	0xFDA
 16765                           fsr2l	equ	0xFD9
 16766                           status	equ	0xFD8
 16767                           
 16768 ;; *************** function _delay_ms *****************
 16769 ;; Defined at:
 16770 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 16771 ;; Parameters:    Size  Location     Type
 16772 ;;  value_ms        2   22[BANK0 ] unsigned int 
 16773 ;; Auto vars:     Size  Location     Type
 16774 ;;		None
 16775 ;; Return value:  Size  Location     Type
 16776 ;;		None               void
 16777 ;; Registers used:
 16778 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16779 ;; Tracked objects:
 16780 ;;		On entry : 0/0
 16781 ;;		On exit  : 0/0
 16782 ;;		Unchanged: 0/0
 16783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16784 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16787 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16788 ;;Total ram usage:        2 bytes
 16789 ;; Hardware stack levels used:    1
 16790 ;; Hardware stack levels required when called:    4
 16791 ;; This function calls:
 16792 ;;		___wmul
 16793 ;; This function is called by:
 16794 ;;		_LCD_enable_pulse
 16795 ;;		_LCD_initialize
 16796 ;;		_main
 16797 ;;		_delay_s
 16798 ;; This function uses a non-reentrant model
 16799 ;;
 16800                           
 16801                           	psect	text47
 16802  01620A                     __ptext47:
 16803                           	opt stack 0
 16804  01620A                     _delay_ms:
 16805                           	opt stack 26
 16806                           
 16807                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 16808                           
 16809                           ;incstack = 0
 16810  01620A  C0EB  F070         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 16811  01620E  0100               	movlb	0	; () banked
 16812  016210  6B71               	clrf	(___wmul@multiplier+1)& (0+255),b
 16813  016212  C076  F072         	movff	delay_ms@value_ms,___wmul@multiplicand
 16814  016216  C077  F073         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 16815  01621A  EC3E  F0B1         	call	___wmul	;wreg free
 16816  01621E  C070  F0E0         	movff	?___wmul,_clock_counter_reference	;volatile
 16817  016222  C071  F0E1         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 16818                           
 16819                           ;src\delay.c: 75: while (clock_counter_reference) {
 16820  016226  D007               	goto	l589
 16821  016228                     l7838:
 16822                           
 16823                           ;src\delay.c: 85: _delay(240);
 16824  016228  0E50               	movlw	80
 16825  01622A                     u12687:
 16826  01622A  2EE8               	decfsz	wreg,f,c
 16827  01622C  D7FE               	goto	u12687
 16828                           
 16829                           ;src\delay.c: 88: clock_counter_reference--;
 16830  01622E  0100               	movlb	0	; () banked
 16831  016230  07E0               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 16832  016232  A0D8               	btfss	status,0,c
 16833  016234  07E1               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 16834  016236                     l589:
 16835  016236  0100               	movlb	0	; () banked
 16836  016238  51E0               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 16837  01623A  0100               	movlb	0	; () banked
 16838  01623C  11E1               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 16839  01623E  B4D8               	btfsc	status,2,c
 16840  016240  0012               	return	
 16841  016242  D7F2               	goto	l7838
 16842  016244                     __end_of_delay_ms:
 16843                           	opt stack 0
 16844                           tblptru	equ	0xFF8
 16845                           tblptrh	equ	0xFF7
 16846                           tblptrl	equ	0xFF6
 16847                           tablat	equ	0xFF5
 16848                           prodh	equ	0xFF4
 16849                           prodl	equ	0xFF3
 16850                           intcon	equ	0xFF2
 16851                           postinc0	equ	0xFEE
 16852                           wreg	equ	0xFE8
 16853                           indf1	equ	0xFE7
 16854                           plusw1	equ	0xFE3
 16855                           fsr1h	equ	0xFE2
 16856                           fsr1l	equ	0xFE1
 16857                           indf2	equ	0xFDF
 16858                           postinc2	equ	0xFDE
 16859                           plusw2	equ	0xFDB
 16860                           fsr2h	equ	0xFDA
 16861                           fsr2l	equ	0xFD9
 16862                           status	equ	0xFD8
 16863                           
 16864 ;; *************** function ___wmul *****************
 16865 ;; Defined at:
 16866 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 16867 ;; Parameters:    Size  Location     Type
 16868 ;;  multiplier      2   16[BANK0 ] unsigned int 
 16869 ;;  multiplicand    2   18[BANK0 ] unsigned int 
 16870 ;; Auto vars:     Size  Location     Type
 16871 ;;  product         2   20[BANK0 ] unsigned int 
 16872 ;; Return value:  Size  Location     Type
 16873 ;;                  2   16[BANK0 ] unsigned int 
 16874 ;; Registers used:
 16875 ;;		wreg, status,2, status,0, prodl, prodh
 16876 ;; Tracked objects:
 16877 ;;		On entry : 0/0
 16878 ;;		On exit  : 0/0
 16879 ;;		Unchanged: 0/0
 16880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16881 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16882 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16884 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16885 ;;Total ram usage:        6 bytes
 16886 ;; Hardware stack levels used:    1
 16887 ;; Hardware stack levels required when called:    3
 16888 ;; This function calls:
 16889 ;;		Nothing
 16890 ;; This function is called by:
 16891 ;;		_delay_ms
 16892 ;;		_sprintf
 16893 ;; This function uses a non-reentrant model
 16894 ;;
 16895                           
 16896                           	psect	text48
 16897  01627C                     __ptext48:
 16898                           	opt stack 0
 16899  01627C                     ___wmul:
 16900                           	opt stack 26
 16901                           
 16902                           ; BSR set to: 0
 16903                           ;incstack = 0
 16904  01627C  0100               	movlb	0	; () banked
 16905  01627E  5170               	movf	___wmul@multiplier& (0+255),w,b
 16906  016280  0100               	movlb	0	; () banked
 16907  016282  0372               	mulwf	___wmul@multiplicand& (0+255),b
 16908  016284  CFF3 F074          	movff	prodl,___wmul@product
 16909  016288  CFF4 F075          	movff	prodh,___wmul@product+1
 16910  01628C  0100               	movlb	0	; () banked
 16911  01628E  5170               	movf	___wmul@multiplier& (0+255),w,b
 16912  016290  0100               	movlb	0	; () banked
 16913  016292  0373               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 16914  016294  50F3               	movf	prodl,w,c
 16915  016296  0100               	movlb	0	; () banked
 16916  016298  2775               	addwf	(___wmul@product+1)& (0+255),f,b
 16917  01629A  0100               	movlb	0	; () banked
 16918  01629C  5171               	movf	(___wmul@multiplier+1)& (0+255),w,b
 16919  01629E  0100               	movlb	0	; () banked
 16920  0162A0  0372               	mulwf	___wmul@multiplicand& (0+255),b
 16921  0162A2  50F3               	movf	prodl,w,c
 16922  0162A4  0100               	movlb	0	; () banked
 16923  0162A6  2775               	addwf	(___wmul@product+1)& (0+255),f,b
 16924                           
 16925                           ; BSR set to: 0
 16926  0162A8  C074  F070         	movff	___wmul@product,?___wmul
 16927  0162AC  C075  F071         	movff	___wmul@product+1,?___wmul+1
 16928  0162B0  0012               	return	
 16929  0162B2                     __end_of___wmul:
 16930                           	opt stack 0
 16931                           tblptru	equ	0xFF8
 16932                           tblptrh	equ	0xFF7
 16933                           tblptrl	equ	0xFF6
 16934                           tablat	equ	0xFF5
 16935                           prodh	equ	0xFF4
 16936                           prodl	equ	0xFF3
 16937                           intcon	equ	0xFF2
 16938                           postinc0	equ	0xFEE
 16939                           wreg	equ	0xFE8
 16940                           indf1	equ	0xFE7
 16941                           plusw1	equ	0xFE3
 16942                           fsr1h	equ	0xFE2
 16943                           fsr1l	equ	0xFE1
 16944                           indf2	equ	0xFDF
 16945                           postinc2	equ	0xFDE
 16946                           plusw2	equ	0xFDB
 16947                           fsr2h	equ	0xFDA
 16948                           fsr2l	equ	0xFD9
 16949                           status	equ	0xFD8
 16950                           
 16951 ;; *************** function _Joystick_Polling *****************
 16952 ;; Defined at:
 16953 ;;		line 556 in file "RemoteCan.c"
 16954 ;; Parameters:    Size  Location     Type
 16955 ;;		None
 16956 ;; Auto vars:     Size  Location     Type
 16957 ;;  i               1   17[BANK0 ] unsigned char 
 16958 ;; Return value:  Size  Location     Type
 16959 ;;		None               void
 16960 ;; Registers used:
 16961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16962 ;; Tracked objects:
 16963 ;;		On entry : 0/0
 16964 ;;		On exit  : 0/0
 16965 ;;		Unchanged: 0/0
 16966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16968 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16969 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16970 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16971 ;;Total ram usage:        2 bytes
 16972 ;; Hardware stack levels used:    1
 16973 ;; Hardware stack levels required when called:    3
 16974 ;; This function calls:
 16975 ;;		Nothing
 16976 ;; This function is called by:
 16977 ;;		_main
 16978 ;; This function uses a non-reentrant model
 16979 ;;
 16980                           
 16981                           	psect	text49
 16982  01605A                     __ptext49:
 16983                           	opt stack 0
 16984  01605A                     _Joystick_Polling:
 16985                           	opt stack 27
 16986                           
 16987                           ;RemoteCan.c: 557: for (unsigned char i = 0; i < 2; i++) {
 16988                           
 16989                           ; BSR set to: 0
 16990                           ;incstack = 0
 16991  01605A  0E00               	movlw	0
 16992  01605C  0100               	movlb	0	; () banked
 16993  01605E  6F71               	movwf	Joystick_Polling@i& (0+255),b
 16994  016060                     l7102:
 16995                           
 16996                           ; BSR set to: 0
 16997  016060  0E01               	movlw	1
 16998  016062  0100               	movlb	0	; () banked
 16999  016064  6571               	cpfsgt	Joystick_Polling@i& (0+255),b
 17000  016066  D001               	goto	l919
 17001  016068  0012               	return	
 17002  01606A                     l919:
 17003                           
 17004                           ; BSR set to: 0
 17005                           ;RemoteCan.c: 558: ADCON0bits.GO = 1;
 17006  01606A  82C2               	bsf	4034,1,c	;volatile
 17007  01606C                     l921:
 17008  01606C  B2C2               	btfsc	4034,1,c	;volatile
 17009  01606E  D7FE               	goto	l921
 17010                           
 17011                           ;RemoteCan.c: 560: JoystickValues[i] = ADRESH;
 17012  016070  0100               	movlb	0	; () banked
 17013  016072  5171               	movf	Joystick_Polling@i& (0+255),w,b
 17014  016074  0D01               	mullw	1
 17015  016076  0EDC               	movlw	low _JoystickValues
 17016  016078  24F3               	addwf	prodl,w,c
 17017  01607A  6ED9               	movwf	fsr2l,c
 17018  01607C  0E00               	movlw	high _JoystickValues
 17019  01607E  20F4               	addwfc	prodh,w,c
 17020  016080  6EDA               	movwf	fsr2h,c
 17021  016082  CFC4 FFDF          	movff	4036,indf2	;volatile
 17022                           
 17023                           ; BSR set to: 0
 17024                           ;RemoteCan.c: 561: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 17025  016086  A4C2               	btfss	4034,2,c	;volatile
 17026  016088  D002               	goto	u9080
 17027  01608A  0E01               	movlw	1
 17028  01608C  D001               	goto	u9086
 17029  01608E                     u9080:
 17030  01608E  0E00               	movlw	0
 17031  016090                     u9086:
 17032  016090  0AFF               	xorlw	255
 17033  016092  0100               	movlb	0	; () banked
 17034  016094  6F70               	movwf	??_Joystick_Polling& (0+255),b
 17035  016096  0100               	movlb	0	; () banked
 17036  016098  4770               	rlncf	??_Joystick_Polling& (0+255),f,b
 17037  01609A  4770               	rlncf	??_Joystick_Polling& (0+255),f,b
 17038  01609C  50C2               	movf	4034,w,c	;volatile
 17039  01609E  0100               	movlb	0	; () banked
 17040  0160A0  1970               	xorwf	??_Joystick_Polling& (0+255),w,b
 17041  0160A2  0BFB               	andlw	-5
 17042  0160A4  1970               	xorwf	??_Joystick_Polling& (0+255),w,b
 17043  0160A6  6EC2               	movwf	4034,c	;volatile
 17044                           
 17045                           ; BSR set to: 0
 17046  0160A8  0100               	movlb	0	; () banked
 17047  0160AA  2B71               	incf	Joystick_Polling@i& (0+255),f,b
 17048  0160AC  D7D9               	goto	l7102
 17049  0160AE                     __end_of_Joystick_Polling:
 17050                           	opt stack 0
 17051                           tblptru	equ	0xFF8
 17052                           tblptrh	equ	0xFF7
 17053                           tblptrl	equ	0xFF6
 17054                           tablat	equ	0xFF5
 17055                           prodh	equ	0xFF4
 17056                           prodl	equ	0xFF3
 17057                           intcon	equ	0xFF2
 17058                           postinc0	equ	0xFEE
 17059                           wreg	equ	0xFE8
 17060                           indf1	equ	0xFE7
 17061                           plusw1	equ	0xFE3
 17062                           fsr1h	equ	0xFE2
 17063                           fsr1l	equ	0xFE1
 17064                           indf2	equ	0xFDF
 17065                           postinc2	equ	0xFDE
 17066                           plusw2	equ	0xFDB
 17067                           fsr2h	equ	0xFDA
 17068                           fsr2l	equ	0xFD9
 17069                           status	equ	0xFD8
 17070                           
 17071 ;; *************** function _F2_Button_Polling *****************
 17072 ;; Defined at:
 17073 ;;		line 546 in file "RemoteCan.c"
 17074 ;; Parameters:    Size  Location     Type
 17075 ;;		None
 17076 ;; Auto vars:     Size  Location     Type
 17077 ;;		None
 17078 ;; Return value:  Size  Location     Type
 17079 ;;		None               void
 17080 ;; Registers used:
 17081 ;;		None
 17082 ;; Tracked objects:
 17083 ;;		On entry : 0/0
 17084 ;;		On exit  : 0/0
 17085 ;;		Unchanged: 0/0
 17086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17091 ;;Total ram usage:        0 bytes
 17092 ;; Hardware stack levels used:    1
 17093 ;; Hardware stack levels required when called:    3
 17094 ;; This function calls:
 17095 ;;		Nothing
 17096 ;; This function is called by:
 17097 ;;		_main
 17098 ;; This function uses a non-reentrant model
 17099 ;;
 17100                           
 17101                           	psect	text50
 17102  016436                     __ptext50:
 17103                           	opt stack 0
 17104  016436                     _F2_Button_Polling:
 17105                           	opt stack 27
 17106                           
 17107                           ;RemoteCan.c: 547: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 17108                           
 17109                           ; BSR set to: 0
 17110                           ;incstack = 0
 17111  016436  A281               	btfss	3969,1,c	;volatile
 17112  016438  D002               	goto	l914
 17113  01643A  B04B               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 17114  01643C  0012               	return	
 17115  01643E                     l914:
 17116                           
 17117                           ;RemoteCan.c: 548: wait_low_3 = 0;
 17118  01643E  904B               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 17119                           
 17120                           ;RemoteCan.c: 549: if (PORTBbits.RB1 == 1) {
 17121  016440  A281               	btfss	3969,1,c	;volatile
 17122  016442  0012               	return	
 17123                           
 17124                           ;RemoteCan.c: 550: F2_switch = ~F2_switch;
 17125  016444  B649               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 17126  016446  D002               	goto	u9010
 17127  016448  8649               	bsf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 17128  01644A  D001               	goto	u9025
 17129  01644C                     u9010:
 17130  01644C  9649               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 17131  01644E                     u9025:
 17132                           
 17133                           ;RemoteCan.c: 551: wait_low_3 = 1;
 17134  01644E  804B               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 17135  016450  0012               	return	
 17136  016452                     __end_of_F2_Button_Polling:
 17137                           	opt stack 0
 17138                           tblptru	equ	0xFF8
 17139                           tblptrh	equ	0xFF7
 17140                           tblptrl	equ	0xFF6
 17141                           tablat	equ	0xFF5
 17142                           prodh	equ	0xFF4
 17143                           prodl	equ	0xFF3
 17144                           intcon	equ	0xFF2
 17145                           postinc0	equ	0xFEE
 17146                           wreg	equ	0xFE8
 17147                           indf1	equ	0xFE7
 17148                           plusw1	equ	0xFE3
 17149                           fsr1h	equ	0xFE2
 17150                           fsr1l	equ	0xFE1
 17151                           indf2	equ	0xFDF
 17152                           postinc2	equ	0xFDE
 17153                           plusw2	equ	0xFDB
 17154                           fsr2h	equ	0xFDA
 17155                           fsr2l	equ	0xFD9
 17156                           status	equ	0xFD8
 17157                           
 17158 ;; *************** function _F1_Button_Polling *****************
 17159 ;; Defined at:
 17160 ;;		line 536 in file "RemoteCan.c"
 17161 ;; Parameters:    Size  Location     Type
 17162 ;;		None
 17163 ;; Auto vars:     Size  Location     Type
 17164 ;;		None
 17165 ;; Return value:  Size  Location     Type
 17166 ;;		None               void
 17167 ;; Registers used:
 17168 ;;		None
 17169 ;; Tracked objects:
 17170 ;;		On entry : 0/0
 17171 ;;		On exit  : 0/0
 17172 ;;		Unchanged: 0/0
 17173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17178 ;;Total ram usage:        0 bytes
 17179 ;; Hardware stack levels used:    1
 17180 ;; Hardware stack levels required when called:    3
 17181 ;; This function calls:
 17182 ;;		Nothing
 17183 ;; This function is called by:
 17184 ;;		_main
 17185 ;; This function uses a non-reentrant model
 17186 ;;
 17187                           
 17188                           	psect	text51
 17189  016452                     __ptext51:
 17190                           	opt stack 0
 17191  016452                     _F1_Button_Polling:
 17192                           	opt stack 27
 17193                           
 17194                           ;RemoteCan.c: 537: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 17195                           
 17196                           ;incstack = 0
 17197  016452  A881               	btfss	3969,4,c	;volatile
 17198  016454  D002               	goto	l907
 17199  016456  BE4A               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 17200  016458  0012               	return	
 17201  01645A                     l907:
 17202                           
 17203                           ;RemoteCan.c: 538: wait_low_2 = 0;
 17204  01645A  9E4A               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 17205                           
 17206                           ;RemoteCan.c: 539: if (PORTBbits.RB4 == 1) {
 17207  01645C  A881               	btfss	3969,4,c	;volatile
 17208  01645E  0012               	return	
 17209                           
 17210                           ;RemoteCan.c: 540: F1_switch = ~F1_switch;
 17211  016460  B449               	btfsc	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 17212  016462  D002               	goto	u8960
 17213  016464  8449               	bsf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 17214  016466  D001               	goto	u8975
 17215  016468                     u8960:
 17216  016468  9449               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 17217  01646A                     u8975:
 17218                           
 17219                           ;RemoteCan.c: 541: wait_low_2 = 1;
 17220  01646A  8E4A               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 17221  01646C  0012               	return	
 17222  01646E                     __end_of_F1_Button_Polling:
 17223                           	opt stack 0
 17224                           tblptru	equ	0xFF8
 17225                           tblptrh	equ	0xFF7
 17226                           tblptrl	equ	0xFF6
 17227                           tablat	equ	0xFF5
 17228                           prodh	equ	0xFF4
 17229                           prodl	equ	0xFF3
 17230                           intcon	equ	0xFF2
 17231                           postinc0	equ	0xFEE
 17232                           wreg	equ	0xFE8
 17233                           indf1	equ	0xFE7
 17234                           plusw1	equ	0xFE3
 17235                           fsr1h	equ	0xFE2
 17236                           fsr1l	equ	0xFE1
 17237                           indf2	equ	0xFDF
 17238                           postinc2	equ	0xFDE
 17239                           plusw2	equ	0xFDB
 17240                           fsr2h	equ	0xFDA
 17241                           fsr2l	equ	0xFD9
 17242                           status	equ	0xFD8
 17243                           
 17244 ;; *************** function _CAN_Tx *****************
 17245 ;; Defined at:
 17246 ;;		line 565 in file "RemoteCan.c"
 17247 ;; Parameters:    Size  Location     Type
 17248 ;;		None
 17249 ;; Auto vars:     Size  Location     Type
 17250 ;;		None
 17251 ;; Return value:  Size  Location     Type
 17252 ;;		None               void
 17253 ;; Registers used:
 17254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17255 ;; Tracked objects:
 17256 ;;		On entry : 0/0
 17257 ;;		On exit  : 0/0
 17258 ;;		Unchanged: 0/0
 17259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17264 ;;Total ram usage:        0 bytes
 17265 ;; Hardware stack levels used:    1
 17266 ;; Hardware stack levels required when called:    4
 17267 ;; This function calls:
 17268 ;;		_CANisTxReady
 17269 ;;		_CANsendMessage
 17270 ;; This function is called by:
 17271 ;;		_main
 17272 ;; This function uses a non-reentrant model
 17273 ;;
 17274                           
 17275                           	psect	text52
 17276  015A12                     __ptext52:
 17277                           	opt stack 0
 17278  015A12                     _CAN_Tx:
 17279                           	opt stack 26
 17280  015A12                     l7082:
 17281  015A12  ECCD  F0B1         	call	_CANisTxReady	;wreg free
 17282  015A16  06E8               	decf	wreg,f,c
 17283  015A18  A4D8               	btfss	status,2,c
 17284  015A1A  D7FB               	goto	l7082
 17285                           
 17286                           ;RemoteCan.c: 568: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17287  015A1C  0E05               	movlw	5
 17288  015A1E  0100               	movlb	0	; () banked
 17289  015A20  6F70               	movwf	CANsendMessage@identifier& (0+255),b
 17290  015A22  0E00               	movlw	0
 17291  015A24  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17292  015A26  0E00               	movlw	0
 17293  015A28  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17294  015A2A  0E00               	movlw	0
 17295  015A2C  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17296  015A2E  0EEA               	movlw	low _data_steering
 17297  015A30  0100               	movlb	0	; () banked
 17298  015A32  6F74               	movwf	CANsendMessage@data& (0+255),b
 17299  015A34  0E00               	movlw	high _data_steering
 17300  015A36  0100               	movlb	0	; () banked
 17301  015A38  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
 17302  015A3A  0E08               	movlw	8
 17303  015A3C  0100               	movlb	0	; () banked
 17304  015A3E  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
 17305  015A40  0EBC               	movlw	188
 17306  015A42  0100               	movlb	0	; () banked
 17307  015A44  6F77               	movwf	CANsendMessage@flags& (0+255),b
 17308  015A46  ECCD  F089         	call	_CANsendMessage	;wreg free
 17309                           
 17310                           ;RemoteCan.c: 571: data_speed[0] = set_speed;
 17311  015A4A  C0E2  F0E9         	movff	_set_speed,_data_speed	;volatile
 17312                           
 17313                           ;RemoteCan.c: 572: data_speed[1] = (set_speed >> 8);
 17314  015A4E  0100               	movlb	0	; () banked
 17315  015A50  51E3               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 17316  015A52  0100               	movlb	0	; () banked
 17317  015A54  6FEA               	movwf	(_data_speed+1)& (0+255),b
 17318                           
 17319                           ; BSR set to: 0
 17320                           ;RemoteCan.c: 573: data_speed[2] = dir;
 17321  015A56  C0E4  F0EB         	movff	_dir,_data_speed+2	;volatile
 17322  015A5A                     l7092:
 17323  015A5A  ECCD  F0B1         	call	_CANisTxReady	;wreg free
 17324  015A5E  06E8               	decf	wreg,f,c
 17325  015A60  A4D8               	btfss	status,2,c
 17326  015A62  D7FB               	goto	l7092
 17327                           
 17328                           ;RemoteCan.c: 575: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17329  015A64  0E03               	movlw	3
 17330  015A66  0100               	movlb	0	; () banked
 17331  015A68  6F70               	movwf	CANsendMessage@identifier& (0+255),b
 17332  015A6A  0E00               	movlw	0
 17333  015A6C  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17334  015A6E  0E00               	movlw	0
 17335  015A70  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17336  015A72  0E00               	movlw	0
 17337  015A74  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17338  015A76  0EE9               	movlw	low _data_speed
 17339  015A78  0100               	movlb	0	; () banked
 17340  015A7A  6F74               	movwf	CANsendMessage@data& (0+255),b
 17341  015A7C  0E00               	movlw	high _data_speed
 17342  015A7E  0100               	movlb	0	; () banked
 17343  015A80  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
 17344  015A82  0E08               	movlw	8
 17345  015A84  0100               	movlb	0	; () banked
 17346  015A86  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
 17347  015A88  0EBC               	movlw	188
 17348  015A8A  0100               	movlb	0	; () banked
 17349  015A8C  6F77               	movwf	CANsendMessage@flags& (0+255),b
 17350  015A8E  ECCD  F089         	call	_CANsendMessage	;wreg free
 17351  015A92                     l7096:
 17352  015A92  ECCD  F0B1         	call	_CANisTxReady	;wreg free
 17353  015A96  06E8               	decf	wreg,f,c
 17354  015A98  A4D8               	btfss	status,2,c
 17355  015A9A  D7FB               	goto	l7096
 17356                           
 17357                           ;RemoteCan.c: 579: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_1);
 17358  015A9C  0E04               	movlw	4
 17359  015A9E  0100               	movlb	0	; () banked
 17360  015AA0  6F70               	movwf	CANsendMessage@identifier& (0+255),b
 17361  015AA2  0E00               	movlw	0
 17362  015AA4  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17363  015AA6  0E00               	movlw	0
 17364  015AA8  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17365  015AAA  0E00               	movlw	0
 17366  015AAC  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17367  015AAE  0E26               	movlw	low _data_brake
 17368  015AB0  0100               	movlb	0	; () banked
 17369  015AB2  6F74               	movwf	CANsendMessage@data& (0+255),b
 17370  015AB4  0E00               	movlw	high _data_brake
 17371  015AB6  0100               	movlb	0	; () banked
 17372  015AB8  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
 17373  015ABA  0E08               	movlw	8
 17374  015ABC  0100               	movlb	0	; () banked
 17375  015ABE  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
 17376  015AC0  0EBD               	movlw	189
 17377  015AC2  0100               	movlb	0	; () banked
 17378  015AC4  6F77               	movwf	CANsendMessage@flags& (0+255),b
 17379  015AC6  ECCD  F089         	call	_CANsendMessage	;wreg free
 17380  015ACA  0012               	return		;funcret
 17381  015ACC                     __end_of_CAN_Tx:
 17382                           	opt stack 0
 17383                           tblptru	equ	0xFF8
 17384                           tblptrh	equ	0xFF7
 17385                           tblptrl	equ	0xFF6
 17386                           tablat	equ	0xFF5
 17387                           prodh	equ	0xFF4
 17388                           prodl	equ	0xFF3
 17389                           intcon	equ	0xFF2
 17390                           postinc0	equ	0xFEE
 17391                           wreg	equ	0xFE8
 17392                           indf1	equ	0xFE7
 17393                           plusw1	equ	0xFE3
 17394                           fsr1h	equ	0xFE2
 17395                           fsr1l	equ	0xFE1
 17396                           indf2	equ	0xFDF
 17397                           postinc2	equ	0xFDE
 17398                           plusw2	equ	0xFDB
 17399                           fsr2h	equ	0xFDA
 17400                           fsr2l	equ	0xFD9
 17401                           status	equ	0xFD8
 17402                           
 17403 ;; *************** function _CANsendMessage *****************
 17404 ;; Defined at:
 17405 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 17406 ;; Parameters:    Size  Location     Type
 17407 ;;  identifier      4   16[BANK0 ] unsigned long 
 17408 ;;  data            2   20[BANK0 ] PTR unsigned char 
 17409 ;;		 -> data_speed(1), park_assist_state(8), data(1), data_brake(1), 
 17410 ;;		 -> data_steering(1), 
 17411 ;;  dataLength      1   22[BANK0 ] unsigned char 
 17412 ;;  flags           1   23[BANK0 ] enum E16909
 17413 ;; Auto vars:     Size  Location     Type
 17414 ;;  tamp            4   28[BANK0 ] unsigned long 
 17415 ;; Return value:  Size  Location     Type
 17416 ;;		None               void
 17417 ;; Registers used:
 17418 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17419 ;; Tracked objects:
 17420 ;;		On entry : 0/0
 17421 ;;		On exit  : 0/0
 17422 ;;		Unchanged: 0/0
 17423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17424 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17425 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17426 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17427 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17428 ;;Total ram usage:       16 bytes
 17429 ;; Hardware stack levels used:    1
 17430 ;; Hardware stack levels required when called:    3
 17431 ;; This function calls:
 17432 ;;		Nothing
 17433 ;; This function is called by:
 17434 ;;		_main
 17435 ;;		_LCD_Handler
 17436 ;;		_CAN_Tx
 17437 ;; This function uses a non-reentrant model
 17438 ;;
 17439                           
 17440                           	psect	text53
 17441  01139A                     __ptext53:
 17442                           	opt stack 0
 17443  01139A                     _CANsendMessage:
 17444                           	opt stack 26
 17445                           
 17446                           ;inc\CANlib.h: 296: unsigned long tamp;
 17447                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 17448                           
 17449                           ;incstack = 0
 17450  01139A  010F               	movlb	15	; () banked
 17451  01139C  B740               	btfsc	64,3,b	;volatile
 17452  01139E  D13F               	goto	l383
 17453                           
 17454                           ; BSR set to: 15
 17455                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 17456  0113A0  C076  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 17457                           
 17458                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 17459  0113A4  0100               	movlb	0	; () banked
 17460  0113A6  AD77               	btfss	CANsendMessage@flags& (0+255),6,b
 17461  0113A8  D003               	goto	l384
 17462                           
 17463                           ; BSR set to: 0
 17464                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 17465  0113AA  010F               	movlb	15	; () banked
 17466  0113AC  8D45               	bsf	69,6,b	;volatile
 17467  0113AE  D002               	goto	l385
 17468  0113B0                     l384:
 17469                           
 17470                           ; BSR set to: 0
 17471                           ;inc\CANlib.h: 302: else
 17472                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 17473  0113B0  010F               	movlb	15	; () banked
 17474  0113B2  9D45               	bcf	69,6,b	;volatile
 17475  0113B4                     l385:
 17476                           
 17477                           ; BSR set to: 15
 17478                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 17479  0113B4  0100               	movlb	0	; () banked
 17480  0113B6  A777               	btfss	CANsendMessage@flags& (0+255),3,b
 17481  0113B8  D079               	goto	l386
 17482                           
 17483                           ; BSR set to: 0
 17484                           ;inc\CANlib.h: 306: {
 17485                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 17486  0113BA  0100               	movlb	0	; () banked
 17487  0113BC  5170               	movf	CANsendMessage@identifier& (0+255),w,b
 17488  0113BE  0100               	movlb	0	; () banked
 17489  0113C0  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17490  0113C2  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17491  0113C4  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17492  0113C6  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17493                           
 17494                           ; BSR set to: 0
 17495                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 17496  0113C8  C07C  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 17497                           
 17498                           ; BSR set to: 0
 17499                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 17500  0113CC  0E00               	movlw	0
 17501  0113CE  0100               	movlb	0	; () banked
 17502  0113D0  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17503  0113D2  0100               	movlb	0	; () banked
 17504  0113D4  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17505  0113D6  0EFF               	movlw	255
 17506  0113D8  0100               	movlb	0	; () banked
 17507  0113DA  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17508  0113DC  0100               	movlb	0	; () banked
 17509  0113DE  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17510  0113E0  0E00               	movlw	0
 17511  0113E2  0100               	movlb	0	; () banked
 17512  0113E4  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17513  0113E6  0100               	movlb	0	; () banked
 17514  0113E8  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17515  0113EA  0E00               	movlw	0
 17516  0113EC  0100               	movlb	0	; () banked
 17517  0113EE  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17518  0113F0  0100               	movlb	0	; () banked
 17519  0113F2  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17520                           
 17521                           ; BSR set to: 0
 17522                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 17523  0113F4  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17524  0113F8  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17525  0113FC  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17526  011400  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17527  011404  C079  F078         	movff	??_CANsendMessage+1,??_CANsendMessage
 17528  011408  C07A  F079         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17529  01140C  C07B  F07A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17530  011410  0100               	movlb	0	; () banked
 17531  011412  6B7B               	clrf	(??_CANsendMessage+3)& (0+255),b
 17532  011414  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17533  011418  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17534  01141C  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17535  011420  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17536                           
 17537                           ; BSR set to: 0
 17538                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 17539  011424  C07C  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 17540                           
 17541                           ; BSR set to: 0
 17542                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 17543  011428  0E00               	movlw	0
 17544  01142A  010F               	movlb	15	; () banked
 17545  01142C  6F42               	movwf	66,b	;volatile
 17546                           
 17547                           ; BSR set to: 15
 17548                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 17549  01142E  010F               	movlb	15	; () banked
 17550  011430  8742               	bsf	66,3,b	;volatile
 17551                           
 17552                           ; BSR set to: 15
 17553                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 17554  011432  0100               	movlb	0	; () banked
 17555  011434  A172               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17556  011436  D002               	goto	l387
 17557                           
 17558                           ; BSR set to: 0
 17559                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 17560  011438  010F               	movlb	15	; () banked
 17561  01143A  8142               	bsf	66,0,b	;volatile
 17562  01143C                     l387:
 17563                           
 17564                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 17565  01143C  0100               	movlb	0	; () banked
 17566  01143E  A372               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17567  011440  D002               	goto	l388
 17568                           
 17569                           ; BSR set to: 0
 17570                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 17571  011442  010F               	movlb	15	; () banked
 17572  011444  8342               	bsf	66,1,b	;volatile
 17573  011446                     l388:
 17574                           
 17575                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 17576  011446  0100               	movlb	0	; () banked
 17577  011448  A572               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17578  01144A  D002               	goto	l389
 17579                           
 17580                           ; BSR set to: 0
 17581                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 17582  01144C  010F               	movlb	15	; () banked
 17583  01144E  8B42               	bsf	66,5,b	;volatile
 17584  011450                     l389:
 17585                           
 17586                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 17587  011450  0100               	movlb	0	; () banked
 17588  011452  A772               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17589  011454  D002               	goto	l390
 17590                           
 17591                           ; BSR set to: 0
 17592                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 17593  011456  010F               	movlb	15	; () banked
 17594  011458  8D42               	bsf	66,6,b	;volatile
 17595  01145A                     l390:
 17596                           
 17597                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 17598  01145A  0100               	movlb	0	; () banked
 17599  01145C  A972               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17600  01145E  D002               	goto	l6210
 17601                           
 17602                           ; BSR set to: 0
 17603                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 17604  011460  010F               	movlb	15	; () banked
 17605  011462  8F42               	bsf	66,7,b	;volatile
 17606  011464                     l6210:
 17607                           
 17608                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 17609  011464  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17610  011468  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17611  01146C  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17612  011470  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17613  011474  0E16               	movlw	22
 17614  011476  D006               	goto	u7650
 17615  011478                     u7655:
 17616  011478  0100               	movlb	0	; () banked
 17617  01147A  90D8               	bcf	status,0,c
 17618  01147C  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17619  01147E  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17620  011480  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17621  011482  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17622  011484                     u7650:
 17623  011484  2EE8               	decfsz	wreg,f,c
 17624  011486  D7F8               	goto	u7655
 17625  011488  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17626  01148C  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17627  011490  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17628  011494  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17629                           
 17630                           ; BSR set to: 0
 17631                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 17632  011498  0100               	movlb	0	; () banked
 17633  01149A  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 17634  01149C  0100               	movlb	0	; () banked
 17635  01149E  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17636  0114A0  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17637  0114A2  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17638  0114A4  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17639                           
 17640                           ; BSR set to: 0
 17641                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 17642  0114A6  C07C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17643                           
 17644                           ;inc\CANlib.h: 332: }
 17645  0114AA  D059               	goto	l6230
 17646  0114AC                     l386:
 17647                           
 17648                           ; BSR set to: 0
 17649                           ;inc\CANlib.h: 334: else
 17650                           ;inc\CANlib.h: 336: {
 17651                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 17652  0114AC  010F               	movlb	15	; () banked
 17653  0114AE  9742               	bcf	66,3,b	;volatile
 17654                           
 17655                           ; BSR set to: 15
 17656                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 17657  0114B0  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17658  0114B4  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17659  0114B8  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17660  0114BC  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17661  0114C0  0E04               	movlw	4
 17662  0114C2  D006               	goto	u7660
 17663  0114C4                     u7665:
 17664  0114C4  0100               	movlb	0	; () banked
 17665  0114C6  90D8               	bcf	status,0,c
 17666  0114C8  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17667  0114CA  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17668  0114CC  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17669  0114CE  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17670  0114D0                     u7660:
 17671  0114D0  2EE8               	decfsz	wreg,f,c
 17672  0114D2  D7F8               	goto	u7665
 17673  0114D4  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17674  0114D8  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17675  0114DC  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17676  0114E0  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17677                           
 17678                           ; BSR set to: 0
 17679                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 17680  0114E4  0100               	movlb	0	; () banked
 17681  0114E6  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 17682  0114E8  0100               	movlb	0	; () banked
 17683  0114EA  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17684  0114EC  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17685  0114EE  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17686  0114F0  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17687                           
 17688                           ; BSR set to: 0
 17689                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 17690  0114F2  C07C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17691                           
 17692                           ; BSR set to: 0
 17693                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 17694  0114F6  0E07               	movlw	7
 17695  0114F8  0100               	movlb	0	; () banked
 17696  0114FA  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17697  0114FC  0100               	movlb	0	; () banked
 17698  0114FE  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17699  011500  0E00               	movlw	0
 17700  011502  0100               	movlb	0	; () banked
 17701  011504  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17702  011506  0100               	movlb	0	; () banked
 17703  011508  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17704  01150A  0E00               	movlw	0
 17705  01150C  0100               	movlb	0	; () banked
 17706  01150E  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17707  011510  0100               	movlb	0	; () banked
 17708  011512  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17709  011514  0E00               	movlw	0
 17710  011516  0100               	movlb	0	; () banked
 17711  011518  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17712  01151A  0100               	movlb	0	; () banked
 17713  01151C  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17714                           
 17715                           ; BSR set to: 0
 17716                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 17717  01151E  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17718  011522  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17719  011526  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17720  01152A  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17721  01152E  0E05               	movlw	5
 17722  011530                     u7675:
 17723  011530  90D8               	bcf	status,0,c
 17724  011532  0100               	movlb	0	; () banked
 17725  011534  3778               	rlcf	??_CANsendMessage& (0+255),f,b
 17726  011536  3779               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17727  011538  377A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17728  01153A  377B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17729  01153C  2EE8               	decfsz	wreg,f,c
 17730  01153E  D7F8               	goto	u7675
 17731  011540  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17732  011544  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17733  011548  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17734  01154C  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17735                           
 17736                           ; BSR set to: 0
 17737                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 17738  011550  010F               	movlb	15	; () banked
 17739  011552  5142               	movf	66,w,b	;volatile
 17740  011554  0B1F               	andlw	31
 17741  011556  010F               	movlb	15	; () banked
 17742  011558  6F42               	movwf	66,b	;volatile
 17743                           
 17744                           ; BSR set to: 15
 17745                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 17746  01155A  C07C  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 17747  01155E                     l6230:
 17748                           
 17749                           ;inc\CANlib.h: 347: }
 17750                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 17751  01155E  0100               	movlb	0	; () banked
 17752  011560  A177               	btfss	CANsendMessage@flags& (0+255),0,b
 17753  011562  D003               	goto	l393
 17754                           
 17755                           ; BSR set to: 0
 17756                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 17757  011564  010F               	movlb	15	; () banked
 17758  011566  8140               	bsf	64,0,b	;volatile
 17759  011568  D002               	goto	l394
 17760  01156A                     l393:
 17761                           
 17762                           ; BSR set to: 0
 17763                           ;inc\CANlib.h: 351: else
 17764                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 17765  01156A  010F               	movlb	15	; () banked
 17766  01156C  9140               	bcf	64,0,b	;volatile
 17767  01156E                     l394:
 17768                           
 17769                           ; BSR set to: 15
 17770                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 17771  01156E  0100               	movlb	0	; () banked
 17772  011570  A377               	btfss	CANsendMessage@flags& (0+255),1,b
 17773  011572  D003               	goto	l395
 17774                           
 17775                           ; BSR set to: 0
 17776                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 17777  011574  010F               	movlb	15	; () banked
 17778  011576  8340               	bsf	64,1,b	;volatile
 17779  011578  D002               	goto	l6236
 17780  01157A                     l395:
 17781                           
 17782                           ; BSR set to: 0
 17783                           ;inc\CANlib.h: 355: else
 17784                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 17785  01157A  010F               	movlb	15	; () banked
 17786  01157C  9340               	bcf	64,1,b	;volatile
 17787  01157E                     l6236:
 17788                           
 17789                           ; BSR set to: 15
 17790                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 17791  01157E  C074  FFD9         	movff	CANsendMessage@data,fsr2l
 17792  011582  C075  FFDA         	movff	CANsendMessage@data+1,fsr2h
 17793  011586  50DF               	movf	indf2,w,c
 17794  011588  010F               	movlb	15	; () banked
 17795  01158A  6F46               	movwf	70,b	;volatile
 17796                           
 17797                           ; BSR set to: 15
 17798                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 17799  01158C  0100               	movlb	0	; () banked
 17800  01158E  EE20 F001          	lfsr	2,1
 17801  011592  5174               	movf	CANsendMessage@data& (0+255),w,b
 17802  011594  26D9               	addwf	fsr2l,f,c
 17803  011596  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17804  011598  22DA               	addwfc	fsr2h,f,c
 17805  01159A  50DF               	movf	indf2,w,c
 17806  01159C  010F               	movlb	15	; () banked
 17807  01159E  6F47               	movwf	71,b	;volatile
 17808                           
 17809                           ; BSR set to: 15
 17810                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 17811  0115A0  0100               	movlb	0	; () banked
 17812  0115A2  EE20 F002          	lfsr	2,2
 17813  0115A6  5174               	movf	CANsendMessage@data& (0+255),w,b
 17814  0115A8  26D9               	addwf	fsr2l,f,c
 17815  0115AA  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17816  0115AC  22DA               	addwfc	fsr2h,f,c
 17817  0115AE  50DF               	movf	indf2,w,c
 17818  0115B0  010F               	movlb	15	; () banked
 17819  0115B2  6F48               	movwf	72,b	;volatile
 17820                           
 17821                           ; BSR set to: 15
 17822                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 17823  0115B4  0100               	movlb	0	; () banked
 17824  0115B6  EE20 F003          	lfsr	2,3
 17825  0115BA  5174               	movf	CANsendMessage@data& (0+255),w,b
 17826  0115BC  26D9               	addwf	fsr2l,f,c
 17827  0115BE  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17828  0115C0  22DA               	addwfc	fsr2h,f,c
 17829  0115C2  50DF               	movf	indf2,w,c
 17830  0115C4  010F               	movlb	15	; () banked
 17831  0115C6  6F49               	movwf	73,b	;volatile
 17832                           
 17833                           ; BSR set to: 15
 17834                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 17835  0115C8  0100               	movlb	0	; () banked
 17836  0115CA  EE20 F004          	lfsr	2,4
 17837  0115CE  5174               	movf	CANsendMessage@data& (0+255),w,b
 17838  0115D0  26D9               	addwf	fsr2l,f,c
 17839  0115D2  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17840  0115D4  22DA               	addwfc	fsr2h,f,c
 17841  0115D6  50DF               	movf	indf2,w,c
 17842  0115D8  010F               	movlb	15	; () banked
 17843  0115DA  6F4A               	movwf	74,b	;volatile
 17844                           
 17845                           ; BSR set to: 15
 17846                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 17847  0115DC  0100               	movlb	0	; () banked
 17848  0115DE  EE20 F005          	lfsr	2,5
 17849  0115E2  5174               	movf	CANsendMessage@data& (0+255),w,b
 17850  0115E4  26D9               	addwf	fsr2l,f,c
 17851  0115E6  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17852  0115E8  22DA               	addwfc	fsr2h,f,c
 17853  0115EA  50DF               	movf	indf2,w,c
 17854  0115EC  010F               	movlb	15	; () banked
 17855  0115EE  6F4B               	movwf	75,b	;volatile
 17856                           
 17857                           ; BSR set to: 15
 17858                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 17859  0115F0  0100               	movlb	0	; () banked
 17860  0115F2  EE20 F006          	lfsr	2,6
 17861  0115F6  5174               	movf	CANsendMessage@data& (0+255),w,b
 17862  0115F8  26D9               	addwf	fsr2l,f,c
 17863  0115FA  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17864  0115FC  22DA               	addwfc	fsr2h,f,c
 17865  0115FE  50DF               	movf	indf2,w,c
 17866  011600  010F               	movlb	15	; () banked
 17867  011602  6F4C               	movwf	76,b	;volatile
 17868                           
 17869                           ; BSR set to: 15
 17870                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 17871  011604  0100               	movlb	0	; () banked
 17872  011606  EE20 F007          	lfsr	2,7
 17873  01160A  5174               	movf	CANsendMessage@data& (0+255),w,b
 17874  01160C  26D9               	addwf	fsr2l,f,c
 17875  01160E  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17876  011610  22DA               	addwfc	fsr2h,f,c
 17877  011612  50DF               	movf	indf2,w,c
 17878  011614  010F               	movlb	15	; () banked
 17879  011616  6F4D               	movwf	77,b	;volatile
 17880                           
 17881                           ; BSR set to: 15
 17882                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 17883  011618  010F               	movlb	15	; () banked
 17884  01161A  8740               	bsf	64,3,b	;volatile
 17885                           
 17886                           ; BSR set to: 15
 17887                           ;inc\CANlib.h: 368: return;
 17888  01161C  0012               	return	
 17889  01161E                     l383:
 17890                           
 17891                           ; BSR set to: 15
 17892                           ;inc\CANlib.h: 369: }
 17893                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 17894  01161E  010F               	movlb	15	; () banked
 17895  011620  B730               	btfsc	48,3,b	;volatile
 17896  011622  D13F               	goto	l398
 17897                           
 17898                           ; BSR set to: 15
 17899                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 17900  011624  C076  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 17901                           
 17902                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 17903  011628  0100               	movlb	0	; () banked
 17904  01162A  AD77               	btfss	CANsendMessage@flags& (0+255),6,b
 17905  01162C  D003               	goto	l399
 17906                           
 17907                           ; BSR set to: 0
 17908                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 17909  01162E  010F               	movlb	15	; () banked
 17910  011630  8D35               	bsf	53,6,b	;volatile
 17911  011632  D002               	goto	l400
 17912  011634                     l399:
 17913                           
 17914                           ; BSR set to: 0
 17915                           ;inc\CANlib.h: 378: else
 17916                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 17917  011634  010F               	movlb	15	; () banked
 17918  011636  9D35               	bcf	53,6,b	;volatile
 17919  011638                     l400:
 17920                           
 17921                           ; BSR set to: 15
 17922                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 17923  011638  0100               	movlb	0	; () banked
 17924  01163A  A777               	btfss	CANsendMessage@flags& (0+255),3,b
 17925  01163C  D079               	goto	l401
 17926                           
 17927                           ; BSR set to: 0
 17928                           ;inc\CANlib.h: 382: {
 17929                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 17930  01163E  0100               	movlb	0	; () banked
 17931  011640  5170               	movf	CANsendMessage@identifier& (0+255),w,b
 17932  011642  0100               	movlb	0	; () banked
 17933  011644  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17934  011646  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17935  011648  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17936  01164A  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17937                           
 17938                           ; BSR set to: 0
 17939                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 17940  01164C  C07C  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 17941                           
 17942                           ; BSR set to: 0
 17943                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 17944  011650  0E00               	movlw	0
 17945  011652  0100               	movlb	0	; () banked
 17946  011654  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17947  011656  0100               	movlb	0	; () banked
 17948  011658  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17949  01165A  0EFF               	movlw	255
 17950  01165C  0100               	movlb	0	; () banked
 17951  01165E  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17952  011660  0100               	movlb	0	; () banked
 17953  011662  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17954  011664  0E00               	movlw	0
 17955  011666  0100               	movlb	0	; () banked
 17956  011668  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17957  01166A  0100               	movlb	0	; () banked
 17958  01166C  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17959  01166E  0E00               	movlw	0
 17960  011670  0100               	movlb	0	; () banked
 17961  011672  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17962  011674  0100               	movlb	0	; () banked
 17963  011676  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17964                           
 17965                           ; BSR set to: 0
 17966                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 17967  011678  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17968  01167C  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17969  011680  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17970  011684  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17971  011688  C079  F078         	movff	??_CANsendMessage+1,??_CANsendMessage
 17972  01168C  C07A  F079         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17973  011690  C07B  F07A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17974  011694  0100               	movlb	0	; () banked
 17975  011696  6B7B               	clrf	(??_CANsendMessage+3)& (0+255),b
 17976  011698  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17977  01169C  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17978  0116A0  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17979  0116A4  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17980                           
 17981                           ; BSR set to: 0
 17982                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 17983  0116A8  C07C  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 17984                           
 17985                           ; BSR set to: 0
 17986                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 17987  0116AC  0E00               	movlw	0
 17988  0116AE  010F               	movlb	15	; () banked
 17989  0116B0  6F32               	movwf	50,b	;volatile
 17990                           
 17991                           ; BSR set to: 15
 17992                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 17993  0116B2  010F               	movlb	15	; () banked
 17994  0116B4  8732               	bsf	50,3,b	;volatile
 17995                           
 17996                           ; BSR set to: 15
 17997                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 17998  0116B6  0100               	movlb	0	; () banked
 17999  0116B8  A172               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 18000  0116BA  D002               	goto	l402
 18001                           
 18002                           ; BSR set to: 0
 18003                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 18004  0116BC  010F               	movlb	15	; () banked
 18005  0116BE  8132               	bsf	50,0,b	;volatile
 18006  0116C0                     l402:
 18007                           
 18008                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 18009  0116C0  0100               	movlb	0	; () banked
 18010  0116C2  A372               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 18011  0116C4  D002               	goto	l403
 18012                           
 18013                           ; BSR set to: 0
 18014                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 18015  0116C6  010F               	movlb	15	; () banked
 18016  0116C8  8332               	bsf	50,1,b	;volatile
 18017  0116CA                     l403:
 18018                           
 18019                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 18020  0116CA  0100               	movlb	0	; () banked
 18021  0116CC  A572               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 18022  0116CE  D002               	goto	l404
 18023                           
 18024                           ; BSR set to: 0
 18025                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 18026  0116D0  010F               	movlb	15	; () banked
 18027  0116D2  8B32               	bsf	50,5,b	;volatile
 18028  0116D4                     l404:
 18029                           
 18030                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 18031  0116D4  0100               	movlb	0	; () banked
 18032  0116D6  A772               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 18033  0116D8  D002               	goto	l405
 18034                           
 18035                           ; BSR set to: 0
 18036                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 18037  0116DA  010F               	movlb	15	; () banked
 18038  0116DC  8D32               	bsf	50,6,b	;volatile
 18039  0116DE                     l405:
 18040                           
 18041                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 18042  0116DE  0100               	movlb	0	; () banked
 18043  0116E0  A972               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 18044  0116E2  D002               	goto	l6286
 18045                           
 18046                           ; BSR set to: 0
 18047                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 18048  0116E4  010F               	movlb	15	; () banked
 18049  0116E6  8F32               	bsf	50,7,b	;volatile
 18050  0116E8                     l6286:
 18051                           
 18052                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 18053  0116E8  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 18054  0116EC  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18055  0116F0  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18056  0116F4  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18057  0116F8  0E16               	movlw	22
 18058  0116FA  D006               	goto	u7780
 18059  0116FC                     u7785:
 18060  0116FC  0100               	movlb	0	; () banked
 18061  0116FE  90D8               	bcf	status,0,c
 18062  011700  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18063  011702  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18064  011704  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18065  011706  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 18066  011708                     u7780:
 18067  011708  2EE8               	decfsz	wreg,f,c
 18068  01170A  D7F8               	goto	u7785
 18069  01170C  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18070  011710  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18071  011714  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18072  011718  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18073                           
 18074                           ; BSR set to: 0
 18075                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 18076  01171C  0100               	movlb	0	; () banked
 18077  01171E  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 18078  011720  0100               	movlb	0	; () banked
 18079  011722  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18080  011724  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18081  011726  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18082  011728  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18083                           
 18084                           ; BSR set to: 0
 18085                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 18086  01172A  C07C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 18087                           
 18088                           ;inc\CANlib.h: 407: }
 18089  01172E  D059               	goto	l6306
 18090  011730                     l401:
 18091                           
 18092                           ; BSR set to: 0
 18093                           ;inc\CANlib.h: 409: else
 18094                           ;inc\CANlib.h: 411: {
 18095                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 18096  011730  010F               	movlb	15	; () banked
 18097  011732  9732               	bcf	50,3,b	;volatile
 18098                           
 18099                           ; BSR set to: 15
 18100                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 18101  011734  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 18102  011738  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18103  01173C  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18104  011740  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18105  011744  0E04               	movlw	4
 18106  011746  D006               	goto	u7790
 18107  011748                     u7795:
 18108  011748  0100               	movlb	0	; () banked
 18109  01174A  90D8               	bcf	status,0,c
 18110  01174C  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18111  01174E  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18112  011750  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18113  011752  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 18114  011754                     u7790:
 18115  011754  2EE8               	decfsz	wreg,f,c
 18116  011756  D7F8               	goto	u7795
 18117  011758  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18118  01175C  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18119  011760  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18120  011764  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18121                           
 18122                           ; BSR set to: 0
 18123                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 18124  011768  0100               	movlb	0	; () banked
 18125  01176A  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 18126  01176C  0100               	movlb	0	; () banked
 18127  01176E  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18128  011770  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18129  011772  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18130  011774  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18131                           
 18132                           ; BSR set to: 0
 18133                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 18134  011776  C07C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 18135                           
 18136                           ; BSR set to: 0
 18137                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 18138  01177A  0E07               	movlw	7
 18139  01177C  0100               	movlb	0	; () banked
 18140  01177E  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 18141  011780  0100               	movlb	0	; () banked
 18142  011782  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18143  011784  0E00               	movlw	0
 18144  011786  0100               	movlb	0	; () banked
 18145  011788  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18146  01178A  0100               	movlb	0	; () banked
 18147  01178C  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18148  01178E  0E00               	movlw	0
 18149  011790  0100               	movlb	0	; () banked
 18150  011792  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18151  011794  0100               	movlb	0	; () banked
 18152  011796  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18153  011798  0E00               	movlw	0
 18154  01179A  0100               	movlb	0	; () banked
 18155  01179C  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18156  01179E  0100               	movlb	0	; () banked
 18157  0117A0  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18158                           
 18159                           ; BSR set to: 0
 18160                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 18161  0117A2  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 18162  0117A6  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18163  0117AA  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18164  0117AE  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18165  0117B2  0E05               	movlw	5
 18166  0117B4                     u7805:
 18167  0117B4  90D8               	bcf	status,0,c
 18168  0117B6  0100               	movlb	0	; () banked
 18169  0117B8  3778               	rlcf	??_CANsendMessage& (0+255),f,b
 18170  0117BA  3779               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18171  0117BC  377A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18172  0117BE  377B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18173  0117C0  2EE8               	decfsz	wreg,f,c
 18174  0117C2  D7F8               	goto	u7805
 18175  0117C4  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18176  0117C8  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18177  0117CC  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18178  0117D0  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18179                           
 18180                           ; BSR set to: 0
 18181                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 18182  0117D4  010F               	movlb	15	; () banked
 18183  0117D6  5132               	movf	50,w,b	;volatile
 18184  0117D8  0B1F               	andlw	31
 18185  0117DA  010F               	movlb	15	; () banked
 18186  0117DC  6F32               	movwf	50,b	;volatile
 18187                           
 18188                           ; BSR set to: 15
 18189                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 18190  0117DE  C07C  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 18191  0117E2                     l6306:
 18192                           
 18193                           ;inc\CANlib.h: 422: }
 18194                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 18195  0117E2  0100               	movlb	0	; () banked
 18196  0117E4  A177               	btfss	CANsendMessage@flags& (0+255),0,b
 18197  0117E6  D003               	goto	l408
 18198                           
 18199                           ; BSR set to: 0
 18200                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 18201  0117E8  010F               	movlb	15	; () banked
 18202  0117EA  8130               	bsf	48,0,b	;volatile
 18203  0117EC  D002               	goto	l409
 18204  0117EE                     l408:
 18205                           
 18206                           ; BSR set to: 0
 18207                           ;inc\CANlib.h: 426: else
 18208                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 18209  0117EE  010F               	movlb	15	; () banked
 18210  0117F0  9130               	bcf	48,0,b	;volatile
 18211  0117F2                     l409:
 18212                           
 18213                           ; BSR set to: 15
 18214                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 18215  0117F2  0100               	movlb	0	; () banked
 18216  0117F4  A377               	btfss	CANsendMessage@flags& (0+255),1,b
 18217  0117F6  D003               	goto	l410
 18218                           
 18219                           ; BSR set to: 0
 18220                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 18221  0117F8  010F               	movlb	15	; () banked
 18222  0117FA  8330               	bsf	48,1,b	;volatile
 18223  0117FC  D002               	goto	l6312
 18224  0117FE                     l410:
 18225                           
 18226                           ; BSR set to: 0
 18227                           ;inc\CANlib.h: 430: else
 18228                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 18229  0117FE  010F               	movlb	15	; () banked
 18230  011800  9330               	bcf	48,1,b	;volatile
 18231  011802                     l6312:
 18232                           
 18233                           ; BSR set to: 15
 18234                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 18235  011802  C074  FFD9         	movff	CANsendMessage@data,fsr2l
 18236  011806  C075  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18237  01180A  50DF               	movf	indf2,w,c
 18238  01180C  010F               	movlb	15	; () banked
 18239  01180E  6F36               	movwf	54,b	;volatile
 18240                           
 18241                           ; BSR set to: 15
 18242                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 18243  011810  0100               	movlb	0	; () banked
 18244  011812  EE20 F001          	lfsr	2,1
 18245  011816  5174               	movf	CANsendMessage@data& (0+255),w,b
 18246  011818  26D9               	addwf	fsr2l,f,c
 18247  01181A  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18248  01181C  22DA               	addwfc	fsr2h,f,c
 18249  01181E  50DF               	movf	indf2,w,c
 18250  011820  010F               	movlb	15	; () banked
 18251  011822  6F37               	movwf	55,b	;volatile
 18252                           
 18253                           ; BSR set to: 15
 18254                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 18255  011824  0100               	movlb	0	; () banked
 18256  011826  EE20 F002          	lfsr	2,2
 18257  01182A  5174               	movf	CANsendMessage@data& (0+255),w,b
 18258  01182C  26D9               	addwf	fsr2l,f,c
 18259  01182E  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18260  011830  22DA               	addwfc	fsr2h,f,c
 18261  011832  50DF               	movf	indf2,w,c
 18262  011834  010F               	movlb	15	; () banked
 18263  011836  6F38               	movwf	56,b	;volatile
 18264                           
 18265                           ; BSR set to: 15
 18266                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 18267  011838  0100               	movlb	0	; () banked
 18268  01183A  EE20 F003          	lfsr	2,3
 18269  01183E  5174               	movf	CANsendMessage@data& (0+255),w,b
 18270  011840  26D9               	addwf	fsr2l,f,c
 18271  011842  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18272  011844  22DA               	addwfc	fsr2h,f,c
 18273  011846  50DF               	movf	indf2,w,c
 18274  011848  010F               	movlb	15	; () banked
 18275  01184A  6F39               	movwf	57,b	;volatile
 18276                           
 18277                           ; BSR set to: 15
 18278                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 18279  01184C  0100               	movlb	0	; () banked
 18280  01184E  EE20 F004          	lfsr	2,4
 18281  011852  5174               	movf	CANsendMessage@data& (0+255),w,b
 18282  011854  26D9               	addwf	fsr2l,f,c
 18283  011856  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18284  011858  22DA               	addwfc	fsr2h,f,c
 18285  01185A  50DF               	movf	indf2,w,c
 18286  01185C  010F               	movlb	15	; () banked
 18287  01185E  6F3A               	movwf	58,b	;volatile
 18288                           
 18289                           ; BSR set to: 15
 18290                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 18291  011860  0100               	movlb	0	; () banked
 18292  011862  EE20 F005          	lfsr	2,5
 18293  011866  5174               	movf	CANsendMessage@data& (0+255),w,b
 18294  011868  26D9               	addwf	fsr2l,f,c
 18295  01186A  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18296  01186C  22DA               	addwfc	fsr2h,f,c
 18297  01186E  50DF               	movf	indf2,w,c
 18298  011870  010F               	movlb	15	; () banked
 18299  011872  6F3B               	movwf	59,b	;volatile
 18300                           
 18301                           ; BSR set to: 15
 18302                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 18303  011874  0100               	movlb	0	; () banked
 18304  011876  EE20 F006          	lfsr	2,6
 18305  01187A  5174               	movf	CANsendMessage@data& (0+255),w,b
 18306  01187C  26D9               	addwf	fsr2l,f,c
 18307  01187E  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18308  011880  22DA               	addwfc	fsr2h,f,c
 18309  011882  50DF               	movf	indf2,w,c
 18310  011884  010F               	movlb	15	; () banked
 18311  011886  6F3C               	movwf	60,b	;volatile
 18312                           
 18313                           ; BSR set to: 15
 18314                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 18315  011888  0100               	movlb	0	; () banked
 18316  01188A  EE20 F007          	lfsr	2,7
 18317  01188E  5174               	movf	CANsendMessage@data& (0+255),w,b
 18318  011890  26D9               	addwf	fsr2l,f,c
 18319  011892  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18320  011894  22DA               	addwfc	fsr2h,f,c
 18321  011896  50DF               	movf	indf2,w,c
 18322  011898  010F               	movlb	15	; () banked
 18323  01189A  6F3D               	movwf	61,b	;volatile
 18324                           
 18325                           ; BSR set to: 15
 18326                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 18327  01189C  010F               	movlb	15	; () banked
 18328  01189E  8730               	bsf	48,3,b	;volatile
 18329                           
 18330                           ; BSR set to: 15
 18331                           ;inc\CANlib.h: 444: return;
 18332  0118A0  0012               	return	
 18333  0118A2                     l398:
 18334                           
 18335                           ; BSR set to: 15
 18336                           ;inc\CANlib.h: 445: }
 18337                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 18338  0118A2  010F               	movlb	15	; () banked
 18339  0118A4  B720               	btfsc	32,3,b	;volatile
 18340  0118A6  0012               	return	
 18341                           
 18342                           ; BSR set to: 15
 18343                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 18344  0118A8  C076  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 18345                           
 18346                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 18347  0118AC  0100               	movlb	0	; () banked
 18348  0118AE  AD77               	btfss	CANsendMessage@flags& (0+255),6,b
 18349  0118B0  D003               	goto	l413
 18350                           
 18351                           ; BSR set to: 0
 18352                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 18353  0118B2  010F               	movlb	15	; () banked
 18354  0118B4  8D25               	bsf	37,6,b	;volatile
 18355  0118B6  D002               	goto	l414
 18356  0118B8                     l413:
 18357                           
 18358                           ; BSR set to: 0
 18359                           ;inc\CANlib.h: 454: else
 18360                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 18361  0118B8  010F               	movlb	15	; () banked
 18362  0118BA  9D25               	bcf	37,6,b	;volatile
 18363  0118BC                     l414:
 18364                           
 18365                           ; BSR set to: 15
 18366                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 18367  0118BC  0100               	movlb	0	; () banked
 18368  0118BE  A777               	btfss	CANsendMessage@flags& (0+255),3,b
 18369  0118C0  D079               	goto	l415
 18370                           
 18371                           ; BSR set to: 0
 18372                           ;inc\CANlib.h: 458: {
 18373                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 18374  0118C2  0100               	movlb	0	; () banked
 18375  0118C4  5170               	movf	CANsendMessage@identifier& (0+255),w,b
 18376  0118C6  0100               	movlb	0	; () banked
 18377  0118C8  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18378  0118CA  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18379  0118CC  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18380  0118CE  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18381                           
 18382                           ; BSR set to: 0
 18383                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 18384  0118D0  C07C  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 18385                           
 18386                           ; BSR set to: 0
 18387                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 18388  0118D4  0E00               	movlw	0
 18389  0118D6  0100               	movlb	0	; () banked
 18390  0118D8  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 18391  0118DA  0100               	movlb	0	; () banked
 18392  0118DC  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18393  0118DE  0EFF               	movlw	255
 18394  0118E0  0100               	movlb	0	; () banked
 18395  0118E2  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18396  0118E4  0100               	movlb	0	; () banked
 18397  0118E6  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18398  0118E8  0E00               	movlw	0
 18399  0118EA  0100               	movlb	0	; () banked
 18400  0118EC  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18401  0118EE  0100               	movlb	0	; () banked
 18402  0118F0  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18403  0118F2  0E00               	movlw	0
 18404  0118F4  0100               	movlb	0	; () banked
 18405  0118F6  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18406  0118F8  0100               	movlb	0	; () banked
 18407  0118FA  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18408                           
 18409                           ; BSR set to: 0
 18410                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 18411  0118FC  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 18412  011900  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18413  011904  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18414  011908  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18415  01190C  C079  F078         	movff	??_CANsendMessage+1,??_CANsendMessage
 18416  011910  C07A  F079         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 18417  011914  C07B  F07A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 18418  011918  0100               	movlb	0	; () banked
 18419  01191A  6B7B               	clrf	(??_CANsendMessage+3)& (0+255),b
 18420  01191C  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18421  011920  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18422  011924  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18423  011928  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18424                           
 18425                           ; BSR set to: 0
 18426                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 18427  01192C  C07C  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 18428                           
 18429                           ; BSR set to: 0
 18430                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 18431  011930  0E00               	movlw	0
 18432  011932  010F               	movlb	15	; () banked
 18433  011934  6F22               	movwf	34,b	;volatile
 18434                           
 18435                           ; BSR set to: 15
 18436                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 18437  011936  010F               	movlb	15	; () banked
 18438  011938  8722               	bsf	34,3,b	;volatile
 18439                           
 18440                           ; BSR set to: 15
 18441                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 18442  01193A  0100               	movlb	0	; () banked
 18443  01193C  A172               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 18444  01193E  D002               	goto	l416
 18445                           
 18446                           ; BSR set to: 0
 18447                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 18448  011940  010F               	movlb	15	; () banked
 18449  011942  8122               	bsf	34,0,b	;volatile
 18450  011944                     l416:
 18451                           
 18452                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 18453  011944  0100               	movlb	0	; () banked
 18454  011946  A372               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 18455  011948  D002               	goto	l417
 18456                           
 18457                           ; BSR set to: 0
 18458                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 18459  01194A  010F               	movlb	15	; () banked
 18460  01194C  8322               	bsf	34,1,b	;volatile
 18461  01194E                     l417:
 18462                           
 18463                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 18464  01194E  0100               	movlb	0	; () banked
 18465  011950  A572               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 18466  011952  D002               	goto	l418
 18467                           
 18468                           ; BSR set to: 0
 18469                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 18470  011954  010F               	movlb	15	; () banked
 18471  011956  8B22               	bsf	34,5,b	;volatile
 18472  011958                     l418:
 18473                           
 18474                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 18475  011958  0100               	movlb	0	; () banked
 18476  01195A  A772               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 18477  01195C  D002               	goto	l419
 18478                           
 18479                           ; BSR set to: 0
 18480                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 18481  01195E  010F               	movlb	15	; () banked
 18482  011960  8D22               	bsf	34,6,b	;volatile
 18483  011962                     l419:
 18484                           
 18485                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 18486  011962  0100               	movlb	0	; () banked
 18487  011964  A972               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 18488  011966  D002               	goto	l6362
 18489                           
 18490                           ; BSR set to: 0
 18491                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 18492  011968  010F               	movlb	15	; () banked
 18493  01196A  8F22               	bsf	34,7,b	;volatile
 18494  01196C                     l6362:
 18495                           
 18496                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 18497  01196C  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 18498  011970  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18499  011974  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18500  011978  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18501  01197C  0E16               	movlw	22
 18502  01197E  D006               	goto	u7910
 18503  011980                     u7915:
 18504  011980  0100               	movlb	0	; () banked
 18505  011982  90D8               	bcf	status,0,c
 18506  011984  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18507  011986  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18508  011988  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18509  01198A  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 18510  01198C                     u7910:
 18511  01198C  2EE8               	decfsz	wreg,f,c
 18512  01198E  D7F8               	goto	u7915
 18513  011990  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18514  011994  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18515  011998  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18516  01199C  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18517                           
 18518                           ; BSR set to: 0
 18519                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 18520  0119A0  0100               	movlb	0	; () banked
 18521  0119A2  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 18522  0119A4  0100               	movlb	0	; () banked
 18523  0119A6  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18524  0119A8  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18525  0119AA  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18526  0119AC  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18527                           
 18528                           ; BSR set to: 0
 18529                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 18530  0119AE  C07C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 18531                           
 18532                           ;inc\CANlib.h: 483: }
 18533  0119B2  D059               	goto	l6382
 18534  0119B4                     l415:
 18535                           
 18536                           ; BSR set to: 0
 18537                           ;inc\CANlib.h: 485: else
 18538                           ;inc\CANlib.h: 487: {
 18539                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 18540  0119B4  010F               	movlb	15	; () banked
 18541  0119B6  9722               	bcf	34,3,b	;volatile
 18542                           
 18543                           ; BSR set to: 15
 18544                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 18545  0119B8  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 18546  0119BC  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18547  0119C0  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18548  0119C4  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18549  0119C8  0E04               	movlw	4
 18550  0119CA  D006               	goto	u7920
 18551  0119CC                     u7925:
 18552  0119CC  0100               	movlb	0	; () banked
 18553  0119CE  90D8               	bcf	status,0,c
 18554  0119D0  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18555  0119D2  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18556  0119D4  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18557  0119D6  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 18558  0119D8                     u7920:
 18559  0119D8  2EE8               	decfsz	wreg,f,c
 18560  0119DA  D7F8               	goto	u7925
 18561  0119DC  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18562  0119E0  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18563  0119E4  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18564  0119E8  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18565                           
 18566                           ; BSR set to: 0
 18567                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 18568  0119EC  0100               	movlb	0	; () banked
 18569  0119EE  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 18570  0119F0  0100               	movlb	0	; () banked
 18571  0119F2  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18572  0119F4  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18573  0119F6  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18574  0119F8  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18575                           
 18576                           ; BSR set to: 0
 18577                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 18578  0119FA  C07C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 18579                           
 18580                           ; BSR set to: 0
 18581                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 18582  0119FE  0E07               	movlw	7
 18583  011A00  0100               	movlb	0	; () banked
 18584  011A02  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 18585  011A04  0100               	movlb	0	; () banked
 18586  011A06  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18587  011A08  0E00               	movlw	0
 18588  011A0A  0100               	movlb	0	; () banked
 18589  011A0C  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18590  011A0E  0100               	movlb	0	; () banked
 18591  011A10  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18592  011A12  0E00               	movlw	0
 18593  011A14  0100               	movlb	0	; () banked
 18594  011A16  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18595  011A18  0100               	movlb	0	; () banked
 18596  011A1A  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18597  011A1C  0E00               	movlw	0
 18598  011A1E  0100               	movlb	0	; () banked
 18599  011A20  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18600  011A22  0100               	movlb	0	; () banked
 18601  011A24  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18602                           
 18603                           ; BSR set to: 0
 18604                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 18605  011A26  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 18606  011A2A  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18607  011A2E  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18608  011A32  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18609  011A36  0E05               	movlw	5
 18610  011A38                     u7935:
 18611  011A38  90D8               	bcf	status,0,c
 18612  011A3A  0100               	movlb	0	; () banked
 18613  011A3C  3778               	rlcf	??_CANsendMessage& (0+255),f,b
 18614  011A3E  3779               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18615  011A40  377A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18616  011A42  377B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18617  011A44  2EE8               	decfsz	wreg,f,c
 18618  011A46  D7F8               	goto	u7935
 18619  011A48  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18620  011A4C  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18621  011A50  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18622  011A54  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18623                           
 18624                           ; BSR set to: 0
 18625                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 18626  011A58  010F               	movlb	15	; () banked
 18627  011A5A  5122               	movf	34,w,b	;volatile
 18628  011A5C  0B1F               	andlw	31
 18629  011A5E  010F               	movlb	15	; () banked
 18630  011A60  6F22               	movwf	34,b	;volatile
 18631                           
 18632                           ; BSR set to: 15
 18633                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 18634  011A62  C07C  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 18635  011A66                     l6382:
 18636                           
 18637                           ;inc\CANlib.h: 498: }
 18638                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 18639  011A66  0100               	movlb	0	; () banked
 18640  011A68  A177               	btfss	CANsendMessage@flags& (0+255),0,b
 18641  011A6A  D003               	goto	l422
 18642                           
 18643                           ; BSR set to: 0
 18644                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 18645  011A6C  010F               	movlb	15	; () banked
 18646  011A6E  8120               	bsf	32,0,b	;volatile
 18647  011A70  D002               	goto	l423
 18648  011A72                     l422:
 18649                           
 18650                           ; BSR set to: 0
 18651                           ;inc\CANlib.h: 502: else
 18652                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 18653  011A72  010F               	movlb	15	; () banked
 18654  011A74  9120               	bcf	32,0,b	;volatile
 18655  011A76                     l423:
 18656                           
 18657                           ; BSR set to: 15
 18658                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 18659  011A76  0100               	movlb	0	; () banked
 18660  011A78  A377               	btfss	CANsendMessage@flags& (0+255),1,b
 18661  011A7A  D003               	goto	l424
 18662                           
 18663                           ; BSR set to: 0
 18664                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 18665  011A7C  010F               	movlb	15	; () banked
 18666  011A7E  8320               	bsf	32,1,b	;volatile
 18667  011A80  D002               	goto	l6388
 18668  011A82                     l424:
 18669                           
 18670                           ; BSR set to: 0
 18671                           ;inc\CANlib.h: 506: else
 18672                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 18673  011A82  010F               	movlb	15	; () banked
 18674  011A84  9320               	bcf	32,1,b	;volatile
 18675  011A86                     l6388:
 18676                           
 18677                           ; BSR set to: 15
 18678                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 18679  011A86  C074  FFD9         	movff	CANsendMessage@data,fsr2l
 18680  011A8A  C075  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18681  011A8E  50DF               	movf	indf2,w,c
 18682  011A90  010F               	movlb	15	; () banked
 18683  011A92  6F26               	movwf	38,b	;volatile
 18684                           
 18685                           ; BSR set to: 15
 18686                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 18687  011A94  0100               	movlb	0	; () banked
 18688  011A96  EE20 F001          	lfsr	2,1
 18689  011A9A  5174               	movf	CANsendMessage@data& (0+255),w,b
 18690  011A9C  26D9               	addwf	fsr2l,f,c
 18691  011A9E  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18692  011AA0  22DA               	addwfc	fsr2h,f,c
 18693  011AA2  50DF               	movf	indf2,w,c
 18694  011AA4  010F               	movlb	15	; () banked
 18695  011AA6  6F27               	movwf	39,b	;volatile
 18696                           
 18697                           ; BSR set to: 15
 18698                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 18699  011AA8  0100               	movlb	0	; () banked
 18700  011AAA  EE20 F002          	lfsr	2,2
 18701  011AAE  5174               	movf	CANsendMessage@data& (0+255),w,b
 18702  011AB0  26D9               	addwf	fsr2l,f,c
 18703  011AB2  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18704  011AB4  22DA               	addwfc	fsr2h,f,c
 18705  011AB6  50DF               	movf	indf2,w,c
 18706  011AB8  010F               	movlb	15	; () banked
 18707  011ABA  6F28               	movwf	40,b	;volatile
 18708                           
 18709                           ; BSR set to: 15
 18710                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 18711  011ABC  0100               	movlb	0	; () banked
 18712  011ABE  EE20 F003          	lfsr	2,3
 18713  011AC2  5174               	movf	CANsendMessage@data& (0+255),w,b
 18714  011AC4  26D9               	addwf	fsr2l,f,c
 18715  011AC6  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18716  011AC8  22DA               	addwfc	fsr2h,f,c
 18717  011ACA  50DF               	movf	indf2,w,c
 18718  011ACC  010F               	movlb	15	; () banked
 18719  011ACE  6F29               	movwf	41,b	;volatile
 18720                           
 18721                           ; BSR set to: 15
 18722                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 18723  011AD0  0100               	movlb	0	; () banked
 18724  011AD2  EE20 F004          	lfsr	2,4
 18725  011AD6  5174               	movf	CANsendMessage@data& (0+255),w,b
 18726  011AD8  26D9               	addwf	fsr2l,f,c
 18727  011ADA  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18728  011ADC  22DA               	addwfc	fsr2h,f,c
 18729  011ADE  50DF               	movf	indf2,w,c
 18730  011AE0  010F               	movlb	15	; () banked
 18731  011AE2  6F2A               	movwf	42,b	;volatile
 18732                           
 18733                           ; BSR set to: 15
 18734                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 18735  011AE4  0100               	movlb	0	; () banked
 18736  011AE6  EE20 F005          	lfsr	2,5
 18737  011AEA  5174               	movf	CANsendMessage@data& (0+255),w,b
 18738  011AEC  26D9               	addwf	fsr2l,f,c
 18739  011AEE  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18740  011AF0  22DA               	addwfc	fsr2h,f,c
 18741  011AF2  50DF               	movf	indf2,w,c
 18742  011AF4  010F               	movlb	15	; () banked
 18743  011AF6  6F2B               	movwf	43,b	;volatile
 18744                           
 18745                           ; BSR set to: 15
 18746                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 18747  011AF8  0100               	movlb	0	; () banked
 18748  011AFA  EE20 F006          	lfsr	2,6
 18749  011AFE  5174               	movf	CANsendMessage@data& (0+255),w,b
 18750  011B00  26D9               	addwf	fsr2l,f,c
 18751  011B02  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18752  011B04  22DA               	addwfc	fsr2h,f,c
 18753  011B06  50DF               	movf	indf2,w,c
 18754  011B08  010F               	movlb	15	; () banked
 18755  011B0A  6F2C               	movwf	44,b	;volatile
 18756                           
 18757                           ; BSR set to: 15
 18758                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 18759  011B0C  0100               	movlb	0	; () banked
 18760  011B0E  EE20 F007          	lfsr	2,7
 18761  011B12  5174               	movf	CANsendMessage@data& (0+255),w,b
 18762  011B14  26D9               	addwf	fsr2l,f,c
 18763  011B16  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18764  011B18  22DA               	addwfc	fsr2h,f,c
 18765  011B1A  50DF               	movf	indf2,w,c
 18766  011B1C  010F               	movlb	15	; () banked
 18767  011B1E  6F2D               	movwf	45,b	;volatile
 18768                           
 18769                           ; BSR set to: 15
 18770                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 18771  011B20  010F               	movlb	15	; () banked
 18772  011B22  8720               	bsf	32,3,b	;volatile
 18773                           
 18774                           ; BSR set to: 15
 18775                           ;inc\CANlib.h: 520: return;
 18776  011B24  0012               	return	
 18777  011B26                     __end_of_CANsendMessage:
 18778                           	opt stack 0
 18779                           tblptru	equ	0xFF8
 18780                           tblptrh	equ	0xFF7
 18781                           tblptrl	equ	0xFF6
 18782                           tablat	equ	0xFF5
 18783                           prodh	equ	0xFF4
 18784                           prodl	equ	0xFF3
 18785                           intcon	equ	0xFF2
 18786                           postinc0	equ	0xFEE
 18787                           wreg	equ	0xFE8
 18788                           indf1	equ	0xFE7
 18789                           plusw1	equ	0xFE3
 18790                           fsr1h	equ	0xFE2
 18791                           fsr1l	equ	0xFE1
 18792                           indf2	equ	0xFDF
 18793                           postinc2	equ	0xFDE
 18794                           plusw2	equ	0xFDB
 18795                           fsr2h	equ	0xFDA
 18796                           fsr2l	equ	0xFD9
 18797                           status	equ	0xFD8
 18798                           
 18799 ;; *************** function _CANisTxReady *****************
 18800 ;; Defined at:
 18801 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 18802 ;; Parameters:    Size  Location     Type
 18803 ;;		None
 18804 ;; Auto vars:     Size  Location     Type
 18805 ;;		None
 18806 ;; Return value:  Size  Location     Type
 18807 ;;                  1    wreg      unsigned char 
 18808 ;; Registers used:
 18809 ;;		wreg, status,2
 18810 ;; Tracked objects:
 18811 ;;		On entry : 0/0
 18812 ;;		On exit  : 0/0
 18813 ;;		Unchanged: 0/0
 18814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18816 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18818 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18819 ;;Total ram usage:        1 bytes
 18820 ;; Hardware stack levels used:    1
 18821 ;; Hardware stack levels required when called:    3
 18822 ;; This function calls:
 18823 ;;		Nothing
 18824 ;; This function is called by:
 18825 ;;		_main
 18826 ;;		_LCD_Handler
 18827 ;;		_CAN_Tx
 18828 ;; This function uses a non-reentrant model
 18829 ;;
 18830                           
 18831                           	psect	text54
 18832  01639A                     __ptext54:
 18833                           	opt stack 0
 18834  01639A                     _CANisTxReady:
 18835                           	opt stack 26
 18836                           
 18837                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 18838                           
 18839                           ; BSR set to: 15
 18840                           ;incstack = 0
 18841  01639A  0E01               	movlw	1
 18842  01639C  0100               	movlb	0	; () banked
 18843  01639E  6F70               	movwf	_CANisTxReady$3251& (0+255),b
 18844                           
 18845                           ; BSR set to: 0
 18846  0163A0  010F               	movlb	15	; () banked
 18847  0163A2  A740               	btfss	64,3,b	;volatile
 18848  0163A4  D009               	goto	l576
 18849                           
 18850                           ; BSR set to: 15
 18851  0163A6  010F               	movlb	15	; () banked
 18852  0163A8  A730               	btfss	48,3,b	;volatile
 18853  0163AA  D006               	goto	l576
 18854                           
 18855                           ; BSR set to: 15
 18856  0163AC  010F               	movlb	15	; () banked
 18857  0163AE  A720               	btfss	32,3,b	;volatile
 18858  0163B0  D003               	goto	l576
 18859                           
 18860                           ; BSR set to: 15
 18861  0163B2  0E00               	movlw	0
 18862  0163B4  0100               	movlb	0	; () banked
 18863  0163B6  6F70               	movwf	_CANisTxReady$3251& (0+255),b
 18864  0163B8                     l576:
 18865  0163B8  0100               	movlb	0	; () banked
 18866  0163BA  5170               	movf	_CANisTxReady$3251& (0+255),w,b
 18867  0163BC  0012               	return	
 18868  0163BE                     __end_of_CANisTxReady:
 18869                           	opt stack 0
 18870                           tblptru	equ	0xFF8
 18871                           tblptrh	equ	0xFF7
 18872                           tblptrl	equ	0xFF6
 18873                           tablat	equ	0xFF5
 18874                           prodh	equ	0xFF4
 18875                           prodl	equ	0xFF3
 18876                           intcon	equ	0xFF2
 18877                           postinc0	equ	0xFEE
 18878                           wreg	equ	0xFE8
 18879                           indf1	equ	0xFE7
 18880                           plusw1	equ	0xFE3
 18881                           fsr1h	equ	0xFE2
 18882                           fsr1l	equ	0xFE1
 18883                           indf2	equ	0xFDF
 18884                           postinc2	equ	0xFDE
 18885                           plusw2	equ	0xFDB
 18886                           fsr2h	equ	0xFDA
 18887                           fsr2l	equ	0xFD9
 18888                           status	equ	0xFD8
 18889                           
 18890 ;; *************** function _CAN_Rx *****************
 18891 ;; Defined at:
 18892 ;;		line 583 in file "RemoteCan.c"
 18893 ;; Parameters:    Size  Location     Type
 18894 ;;		None
 18895 ;; Auto vars:     Size  Location     Type
 18896 ;;		None
 18897 ;; Return value:  Size  Location     Type
 18898 ;;		None               void
 18899 ;; Registers used:
 18900 ;;		wreg, status,2, status,0
 18901 ;; Tracked objects:
 18902 ;;		On entry : 0/0
 18903 ;;		On exit  : 0/0
 18904 ;;		Unchanged: 0/0
 18905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18908 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18909 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18910 ;;Total ram usage:        4 bytes
 18911 ;; Hardware stack levels used:    1
 18912 ;; Hardware stack levels required when called:    3
 18913 ;; This function calls:
 18914 ;;		Nothing
 18915 ;; This function is called by:
 18916 ;;		_main
 18917 ;; This function uses a non-reentrant model
 18918 ;;
 18919                           
 18920                           	psect	text55
 18921  015ACC                     __ptext55:
 18922                           	opt stack 0
 18923  015ACC                     _CAN_Rx:
 18924                           	opt stack 27
 18925                           
 18926                           ;RemoteCan.c: 584: if (id == 0b00000000010) {
 18927                           
 18928                           ; BSR set to: 0
 18929                           ;incstack = 0
 18930  015ACC  0E02               	movlw	2
 18931  015ACE  1801               	xorwf	_id,w,c	;volatile
 18932  015AD0  1002               	iorwf	_id+1,w,c	;volatile
 18933  015AD2  1003               	iorwf	_id+2,w,c	;volatile
 18934  015AD4  1004               	iorwf	_id+3,w,c	;volatile
 18935  015AD6  A4D8               	btfss	status,2,c
 18936  015AD8  D015               	goto	l7130
 18937                           
 18938                           ;RemoteCan.c: 585: if (RTR_Flag == 1) {
 18939  015ADA  AA49               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18940  015ADC  D00C               	goto	l7120
 18941                           
 18942                           ;RemoteCan.c: 586: pr_time_4 = time_counter;
 18943  015ADE  C019  F00D         	movff	_time_counter,_pr_time_4	;volatile
 18944  015AE2  C01A  F00E         	movff	_time_counter+1,_pr_time_4+1	;volatile
 18945  015AE6  C01B  F00F         	movff	_time_counter+2,_pr_time_4+2	;volatile
 18946  015AEA  C01C  F010         	movff	_time_counter+3,_pr_time_4+3	;volatile
 18947                           
 18948                           ;RemoteCan.c: 587: MotoreFlag = 1;
 18949  015AEE  8849               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 18950                           
 18951                           ;RemoteCan.c: 588: AbsFlag = 0;
 18952  015AF0  9049               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 18953                           
 18954                           ;RemoteCan.c: 589: SterzoFlag = 0;
 18955  015AF2  9C49               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 18956                           
 18957                           ;RemoteCan.c: 590: } else {
 18958  015AF4  D007               	goto	l7130
 18959  015AF6                     l7120:
 18960                           
 18961                           ;RemoteCan.c: 591: if (data[0] == 0x01) {
 18962  015AF6  0425               	decf	_data,w,c
 18963  015AF8  B4D8               	btfsc	status,2,c
 18964                           
 18965                           ;RemoteCan.c: 592: AbsFlag = 1;
 18966  015AFA  8049               	bsf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 18967                           
 18968                           ;RemoteCan.c: 593: }
 18969                           ;RemoteCan.c: 594: if (data[0] == 0x02) {
 18970  015AFC  0E02               	movlw	2
 18971  015AFE  1825               	xorwf	_data,w,c
 18972  015B00  B4D8               	btfsc	status,2,c
 18973                           
 18974                           ;RemoteCan.c: 595: SterzoFlag = 1;
 18975  015B02  8C49               	bsf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 18976  015B04                     l7130:
 18977                           
 18978                           ;RemoteCan.c: 602: }
 18979                           ;RemoteCan.c: 604: if ((id == 0b00000000110)&&(RTR_Flag == 0)) {
 18980  015B04  0E06               	movlw	6
 18981  015B06  1801               	xorwf	_id,w,c	;volatile
 18982  015B08  1002               	iorwf	_id+1,w,c	;volatile
 18983  015B0A  1003               	iorwf	_id+2,w,c	;volatile
 18984  015B0C  1004               	iorwf	_id+3,w,c	;volatile
 18985  015B0E  B4D8               	btfsc	status,2,c
 18986  015B10  BA49               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18987  015B12  D029               	goto	l7142
 18988                           
 18989                           ;RemoteCan.c: 605: left_speed = data_speed_rx[1];
 18990  015B14  C101  F01D         	movff	_data_speed_rx+1,_left_speed	;volatile
 18991  015B18  6A1E               	clrf	_left_speed+1,c	;volatile
 18992                           
 18993                           ;RemoteCan.c: 606: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 18994  015B1A  501D               	movf	_left_speed,w,c	;volatile
 18995  015B1C  0100               	movlb	0	; () banked
 18996  015B1E  6F70               	movwf	??_CAN_Rx& (0+255),b
 18997  015B20  0101               	movlb	1	; () banked
 18998  015B22  5100               	movf	_data_speed_rx& (0+255),w,b
 18999  015B24  6E1D               	movwf	_left_speed,c	;volatile
 19000  015B26  C070  F01E         	movff	??_CAN_Rx,_left_speed+1	;volatile
 19001                           
 19002                           ; BSR set to: 1
 19003                           ;RemoteCan.c: 607: right_speed = data_speed_rx[3];
 19004  015B2A  C103  F01F         	movff	_data_speed_rx+3,_right_speed	;volatile
 19005  015B2E  6A20               	clrf	_right_speed+1,c	;volatile
 19006                           
 19007                           ;RemoteCan.c: 608: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 19008  015B30  501F               	movf	_right_speed,w,c	;volatile
 19009  015B32  0100               	movlb	0	; () banked
 19010  015B34  6F70               	movwf	??_CAN_Rx& (0+255),b
 19011  015B36  0101               	movlb	1	; () banked
 19012  015B38  5102               	movf	(_data_speed_rx+2)& (0+255),w,b
 19013  015B3A  6E1F               	movwf	_right_speed,c	;volatile
 19014  015B3C  C070  F020         	movff	??_CAN_Rx,_right_speed+1	;volatile
 19015                           
 19016                           ; BSR set to: 1
 19017                           ;RemoteCan.c: 609: actual_speed = (right_speed + left_speed) / 2;
 19018  015B40  501D               	movf	_left_speed,w,c	;volatile
 19019  015B42  241F               	addwf	_right_speed,w,c	;volatile
 19020  015B44  0100               	movlb	0	; () banked
 19021  015B46  6F70               	movwf	??_CAN_Rx& (0+255),b
 19022  015B48  501E               	movf	_left_speed+1,w,c	;volatile
 19023  015B4A  2020               	addwfc	_right_speed+1,w,c	;volatile
 19024  015B4C  0100               	movlb	0	; () banked
 19025  015B4E  6F71               	movwf	(??_CAN_Rx+1)& (0+255),b
 19026  015B50  90D8               	bcf	status,0,c
 19027  015B52  0100               	movlb	0	; () banked
 19028  015B54  3171               	rrcf	(??_CAN_Rx+1)& (0+255),w,b
 19029  015B56  0100               	movlb	0	; () banked
 19030  015B58  6F72               	movwf	(??_CAN_Rx+2)& (0+255),b
 19031  015B5A  0100               	movlb	0	; () banked
 19032  015B5C  3170               	rrcf	??_CAN_Rx& (0+255),w,b
 19033  015B5E  0100               	movlb	0	; () banked
 19034  015B60  6FDE               	movwf	_actual_speed& (0+255),b	;volatile
 19035  015B62  C072  F0DF         	movff	??_CAN_Rx+2,_actual_speed+1	;volatile
 19036  015B66                     l7142:
 19037                           
 19038                           ;RemoteCan.c: 610: }
 19039                           ;RemoteCan.c: 612: if (id == 0b00000001001) {
 19040  015B66  0E09               	movlw	9
 19041  015B68  1801               	xorwf	_id,w,c	;volatile
 19042  015B6A  1002               	iorwf	_id+1,w,c	;volatile
 19043  015B6C  1003               	iorwf	_id+2,w,c	;volatile
 19044  015B6E  1004               	iorwf	_id+3,w,c	;volatile
 19045  015B70  A4D8               	btfss	status,2,c
 19046  015B72  0012               	return	
 19047                           
 19048                           ;RemoteCan.c: 613: battery = data[0];
 19049  015B74  C025  F023         	movff	_data,_battery	;volatile
 19050  015B78  0012               	return	
 19051  015B7A                     __end_of_CAN_Rx:
 19052                           	opt stack 0
 19053                           tblptru	equ	0xFF8
 19054                           tblptrh	equ	0xFF7
 19055                           tblptrl	equ	0xFF6
 19056                           tablat	equ	0xFF5
 19057                           prodh	equ	0xFF4
 19058                           prodl	equ	0xFF3
 19059                           intcon	equ	0xFF2
 19060                           postinc0	equ	0xFEE
 19061                           wreg	equ	0xFE8
 19062                           indf1	equ	0xFE7
 19063                           plusw1	equ	0xFE3
 19064                           fsr1h	equ	0xFE2
 19065                           fsr1l	equ	0xFE1
 19066                           indf2	equ	0xFDF
 19067                           postinc2	equ	0xFDE
 19068                           plusw2	equ	0xFDB
 19069                           fsr2h	equ	0xFDA
 19070                           fsr2l	equ	0xFD9
 19071                           status	equ	0xFD8
 19072                           
 19073 ;; *************** function _ISR_bassa *****************
 19074 ;; Defined at:
 19075 ;;		line 192 in file "RemoteCan.c"
 19076 ;; Parameters:    Size  Location     Type
 19077 ;;		None
 19078 ;; Auto vars:     Size  Location     Type
 19079 ;;		None
 19080 ;; Return value:  Size  Location     Type
 19081 ;;		None               void
 19082 ;; Registers used:
 19083 ;;		wreg, status,2, status,0
 19084 ;; Tracked objects:
 19085 ;;		On entry : 0/0
 19086 ;;		On exit  : 0/0
 19087 ;;		Unchanged: 0/0
 19088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19091 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19092 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19093 ;;Total ram usage:       17 bytes
 19094 ;; Hardware stack levels used:    1
 19095 ;; Hardware stack levels required when called:    2
 19096 ;; This function calls:
 19097 ;;		Nothing
 19098 ;; This function is called by:
 19099 ;;		Interrupt level 1
 19100 ;; This function uses a non-reentrant model
 19101 ;;
 19102                           
 19103                           	psect	intcodelo
 19104  000018                     __pintcodelo:
 19105                           	opt stack 0
 19106  000018                     _ISR_bassa:
 19107                           	opt stack 20
 19108                           
 19109                           ;incstack = 0
 19110  000018  804C               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 19111  00001A  CFD8 F027          	movff	status,??_ISR_bassa
 19112  00001E  CFE8 F028          	movff	wreg,??_ISR_bassa+1
 19113  000022  CFE0 F029          	movff	bsr,??_ISR_bassa+2
 19114  000026  CFFA F02A          	movff	pclath,??_ISR_bassa+3
 19115  00002A  CFFB F02B          	movff	pclatu,??_ISR_bassa+4
 19116  00002E  CFE9 F02C          	movff	fsr0l,??_ISR_bassa+5
 19117  000032  CFEA F02D          	movff	fsr0h,??_ISR_bassa+6
 19118  000036  CFE1 F02E          	movff	fsr1l,??_ISR_bassa+7
 19119  00003A  CFE2 F02F          	movff	fsr1h,??_ISR_bassa+8
 19120  00003E  CFD9 F030          	movff	fsr2l,??_ISR_bassa+9
 19121  000042  CFDA F031          	movff	fsr2h,??_ISR_bassa+10
 19122  000046  CFF3 F032          	movff	prodl,??_ISR_bassa+11
 19123  00004A  CFF4 F033          	movff	prodh,??_ISR_bassa+12
 19124  00004E  CFF6 F034          	movff	tblptrl,??_ISR_bassa+13
 19125  000052  CFF7 F035          	movff	tblptrh,??_ISR_bassa+14
 19126  000056  CFF8 F036          	movff	tblptru,??_ISR_bassa+15
 19127  00005A  CFF5 F037          	movff	tablat,??_ISR_bassa+16
 19128                           
 19129                           ;RemoteCan.c: 193: if (PIR2bits.TMR3IF == 1) {
 19130  00005E  A2A1               	btfss	4001,1,c	;volatile
 19131  000060  D00B               	goto	i1l800
 19132                           
 19133                           ;RemoteCan.c: 194: time_counter++;
 19134  000062  0E01               	movlw	1
 19135  000064  2619               	addwf	_time_counter,f,c	;volatile
 19136  000066  0E00               	movlw	0
 19137  000068  221A               	addwfc	_time_counter+1,f,c	;volatile
 19138  00006A  221B               	addwfc	_time_counter+2,f,c	;volatile
 19139  00006C  221C               	addwfc	_time_counter+3,f,c	;volatile
 19140                           
 19141                           ;RemoteCan.c: 195: TMR3H = 0x63;
 19142  00006E  0E63               	movlw	99
 19143  000070  6EB3               	movwf	4019,c	;volatile
 19144                           
 19145                           ;RemoteCan.c: 196: TMR3L = 0xC0;
 19146  000072  0EC0               	movlw	192
 19147  000074  6EB2               	movwf	4018,c	;volatile
 19148                           
 19149                           ;RemoteCan.c: 197: PIR2bits.TMR3IF = 0;
 19150  000076  92A1               	bcf	4001,1,c	;volatile
 19151  000078                     i1l800:
 19152  000078  C037  FFF5         	movff	??_ISR_bassa+16,tablat
 19153  00007C  C036  FFF8         	movff	??_ISR_bassa+15,tblptru
 19154  000080  C035  FFF7         	movff	??_ISR_bassa+14,tblptrh
 19155  000084  C034  FFF6         	movff	??_ISR_bassa+13,tblptrl
 19156  000088  C033  FFF4         	movff	??_ISR_bassa+12,prodh
 19157  00008C  C032  FFF3         	movff	??_ISR_bassa+11,prodl
 19158  000090  C031  FFDA         	movff	??_ISR_bassa+10,fsr2h
 19159  000094  C030  FFD9         	movff	??_ISR_bassa+9,fsr2l
 19160  000098  C02F  FFE2         	movff	??_ISR_bassa+8,fsr1h
 19161  00009C  C02E  FFE1         	movff	??_ISR_bassa+7,fsr1l
 19162  0000A0  C02D  FFEA         	movff	??_ISR_bassa+6,fsr0h
 19163  0000A4  C02C  FFE9         	movff	??_ISR_bassa+5,fsr0l
 19164  0000A8  C02B  FFFB         	movff	??_ISR_bassa+4,pclatu
 19165  0000AC  C02A  FFFA         	movff	??_ISR_bassa+3,pclath
 19166  0000B0  C029  FFE0         	movff	??_ISR_bassa+2,bsr
 19167  0000B4  C028  FFE8         	movff	??_ISR_bassa+1,wreg
 19168  0000B8  C027  FFD8         	movff	??_ISR_bassa,status
 19169  0000BC  904C               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 19170  0000BE  0010               	retfie	
 19171  0000C0                     __end_of_ISR_bassa:
 19172                           	opt stack 0
 19173                           pclatu	equ	0xFFB
 19174                           pclath	equ	0xFFA
 19175                           tblptru	equ	0xFF8
 19176                           tblptrh	equ	0xFF7
 19177                           tblptrl	equ	0xFF6
 19178                           tablat	equ	0xFF5
 19179                           prodh	equ	0xFF4
 19180                           prodl	equ	0xFF3
 19181                           intcon	equ	0xFF2
 19182                           postinc0	equ	0xFEE
 19183                           fsr0h	equ	0xFEA
 19184                           fsr0l	equ	0xFE9
 19185                           wreg	equ	0xFE8
 19186                           indf1	equ	0xFE7
 19187                           plusw1	equ	0xFE3
 19188                           fsr1h	equ	0xFE2
 19189                           fsr1l	equ	0xFE1
 19190                           bsr	equ	0xFE0
 19191                           indf2	equ	0xFDF
 19192                           postinc2	equ	0xFDE
 19193                           plusw2	equ	0xFDB
 19194                           fsr2h	equ	0xFDA
 19195                           fsr2l	equ	0xFD9
 19196                           status	equ	0xFD8
 19197                           
 19198 ;; *************** function _ISR_alta *****************
 19199 ;; Defined at:
 19200 ;;		line 119 in file "RemoteCan.c"
 19201 ;; Parameters:    Size  Location     Type
 19202 ;;		None
 19203 ;; Auto vars:     Size  Location     Type
 19204 ;;  i               1   33[COMRAM] unsigned char 
 19205 ;; Return value:  Size  Location     Type
 19206 ;;		None               void
 19207 ;; Registers used:
 19208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19209 ;; Tracked objects:
 19210 ;;		On entry : 0/0
 19211 ;;		On exit  : 0/0
 19212 ;;		Unchanged: 0/0
 19213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19215 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19216 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19217 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19218 ;;Total ram usage:       17 bytes
 19219 ;; Hardware stack levels used:    1
 19220 ;; Hardware stack levels required when called:    1
 19221 ;; This function calls:
 19222 ;;		_CANisRxReady
 19223 ;;		_CANreceiveMessage
 19224 ;;		i2_CANisTxReady
 19225 ;;		i2_CANsendMessage
 19226 ;; This function is called by:
 19227 ;;		Interrupt level 2
 19228 ;; This function uses a non-reentrant model
 19229 ;;
 19230                           
 19231                           	psect	intcode
 19232  000008                     __pintcode:
 19233                           	opt stack 0
 19234  000008                     _ISR_alta:
 19235                           	opt stack 20
 19236                           
 19237                           ;incstack = 0
 19238  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 19239  00000A  CFFA F062          	movff	pclath,??_ISR_alta+2
 19240  00000E  CFFB F063          	movff	pclatu,??_ISR_alta+3
 19241  000012  EF56  F0A3         	goto	int_func
 19242                           pclatu	equ	0xFFB
 19243                           pclath	equ	0xFFA
 19244                           tblptru	equ	0xFF8
 19245                           tblptrh	equ	0xFF7
 19246                           tblptrl	equ	0xFF6
 19247                           tablat	equ	0xFF5
 19248                           prodh	equ	0xFF4
 19249                           prodl	equ	0xFF3
 19250                           intcon	equ	0xFF2
 19251                           postinc0	equ	0xFEE
 19252                           fsr0h	equ	0xFEA
 19253                           fsr0l	equ	0xFE9
 19254                           wreg	equ	0xFE8
 19255                           indf1	equ	0xFE7
 19256                           plusw1	equ	0xFE3
 19257                           fsr1h	equ	0xFE2
 19258                           fsr1l	equ	0xFE1
 19259                           bsr	equ	0xFE0
 19260                           indf2	equ	0xFDF
 19261                           postinc2	equ	0xFDE
 19262                           plusw2	equ	0xFDB
 19263                           fsr2h	equ	0xFDA
 19264                           fsr2l	equ	0xFD9
 19265                           status	equ	0xFD8
 19266                           
 19267                           	psect	intcode_body
 19268  0146AC                     __pintcode_body:
 19269                           	opt stack 20
 19270  0146AC                     int_func:
 19271                           	opt stack 20
 19272  0146AC  CFE9 F064          	movff	fsr0l,??_ISR_alta+4
 19273  0146B0  CFEA F065          	movff	fsr0h,??_ISR_alta+5
 19274  0146B4  CFE1 F066          	movff	fsr1l,??_ISR_alta+6
 19275  0146B8  CFE2 F067          	movff	fsr1h,??_ISR_alta+7
 19276  0146BC  CFD9 F068          	movff	fsr2l,??_ISR_alta+8
 19277  0146C0  CFDA F069          	movff	fsr2h,??_ISR_alta+9
 19278  0146C4  CFF3 F06A          	movff	prodl,??_ISR_alta+10
 19279  0146C8  CFF4 F06B          	movff	prodh,??_ISR_alta+11
 19280  0146CC  CFF6 F06C          	movff	tblptrl,??_ISR_alta+12
 19281  0146D0  CFF7 F06D          	movff	tblptrh,??_ISR_alta+13
 19282  0146D4  CFF8 F06E          	movff	tblptru,??_ISR_alta+14
 19283  0146D8  CFF5 F06F          	movff	tablat,??_ISR_alta+15
 19284                           
 19285                           ;RemoteCan.c: 120: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 19286  0146DC  A2A4               	btfss	4004,1,c	;volatile
 19287  0146DE  B0A4               	btfsc	4004,0,c	;volatile
 19288  0146E0  D001               	goto	i2l9152
 19289  0146E2  D0CE               	goto	i2l796
 19290  0146E4                     i2l9152:
 19291                           
 19292                           ;RemoteCan.c: 121: if (CANisRxReady()) {
 19293  0146E4  EC42  F0B2         	call	_CANisRxReady	;wreg free
 19294  0146E8  0900               	iorlw	0
 19295  0146EA  B4D8               	btfsc	status,2,c
 19296  0146EC  D0C7               	goto	i2l9224
 19297                           
 19298                           ;RemoteCan.c: 122: CANreceiveMessage(&msg);
 19299  0146EE  0E11               	movlw	low _msg
 19300  0146F0  6E38               	movwf	CANreceiveMessage@msg,c
 19301  0146F2  0E01               	movlw	high _msg
 19302  0146F4  6E39               	movwf	CANreceiveMessage@msg+1,c
 19303  0146F6  ECFF  F096         	call	_CANreceiveMessage	;wreg free
 19304                           
 19305                           ;RemoteCan.c: 123: RTR_Flag = msg.RTR;
 19306  0146FA  0101               	movlb	1	; () banked
 19307  0146FC  A11F               	btfss	(_msg+14)& (0+255),0,b
 19308  0146FE  D002               	goto	i2u1209_40
 19309  014700  8A49               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19310  014702  D001               	goto	i2l9158
 19311  014704                     i2u1209_40:
 19312  014704  9A49               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19313  014706                     i2l9158:
 19314                           
 19315                           ;RemoteCan.c: 124: id = msg.identifier;
 19316  014706  C111  F001         	movff	_msg,_id	;volatile
 19317  01470A  C112  F002         	movff	_msg+1,_id+1	;volatile
 19318  01470E  C113  F003         	movff	_msg+2,_id+2	;volatile
 19319  014712  C114  F004         	movff	_msg+3,_id+3	;volatile
 19320                           
 19321                           ;RemoteCan.c: 125: newMessageCan = 1;
 19322  014716  804A               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 19323                           
 19324                           ;RemoteCan.c: 126: if (id == 0b00000000110) {
 19325  014718  0E06               	movlw	6
 19326  01471A  1801               	xorwf	_id,w,c	;volatile
 19327  01471C  1002               	iorwf	_id+1,w,c	;volatile
 19328  01471E  1003               	iorwf	_id+2,w,c	;volatile
 19329  014720  1004               	iorwf	_id+3,w,c	;volatile
 19330  014722  A4D8               	btfss	status,2,c
 19331  014724  D01A               	goto	i2l9176
 19332                           
 19333                           ;RemoteCan.c: 127: for (unsigned char i = 0; i < 8; i++) {
 19334  014726  0E00               	movlw	0
 19335  014728  6E48               	movwf	ISR_alta@i,c
 19336  01472A                     i2l9166:
 19337  01472A  0E07               	movlw	7
 19338  01472C  6448               	cpfsgt	ISR_alta@i,c
 19339  01472E  D001               	goto	i2l9170
 19340  014730  D014               	goto	i2l9176
 19341  014732                     i2l9170:
 19342                           
 19343                           ;RemoteCan.c: 128: data_speed_rx[i] = msg.data[i];
 19344  014732  5048               	movf	ISR_alta@i,w,c
 19345  014734  0D01               	mullw	1
 19346  014736  0E15               	movlw	low (_msg+4)
 19347  014738  24F3               	addwf	prodl,w,c
 19348  01473A  6ED9               	movwf	fsr2l,c
 19349  01473C  0E01               	movlw	high (_msg+4)
 19350  01473E  20F4               	addwfc	prodh,w,c
 19351  014740  6EDA               	movwf	fsr2h,c
 19352  014742  5048               	movf	ISR_alta@i,w,c
 19353  014744  0D01               	mullw	1
 19354  014746  0E00               	movlw	low _data_speed_rx
 19355  014748  24F3               	addwf	prodl,w,c
 19356  01474A  6EE1               	movwf	fsr1l,c
 19357  01474C  0E01               	movlw	high _data_speed_rx
 19358  01474E  20F4               	addwfc	prodh,w,c
 19359  014750  6EE2               	movwf	fsr1h,c
 19360  014752  CFDF FFE7          	movff	indf2,indf1
 19361  014756  2A48               	incf	ISR_alta@i,f,c
 19362  014758  D7E8               	goto	i2l9166
 19363  01475A                     i2l9176:
 19364                           
 19365                           ;RemoteCan.c: 129: }
 19366                           ;RemoteCan.c: 130: }
 19367                           ;RemoteCan.c: 132: if (id == 0b00000001011) {
 19368  01475A  0E0B               	movlw	11
 19369  01475C  1801               	xorwf	_id,w,c	;volatile
 19370  01475E  1002               	iorwf	_id+1,w,c	;volatile
 19371  014760  1003               	iorwf	_id+2,w,c	;volatile
 19372  014762  1004               	iorwf	_id+3,w,c	;volatile
 19373  014764  A4D8               	btfss	status,2,c
 19374  014766  D03C               	goto	i2l9200
 19375                           
 19376                           ;RemoteCan.c: 133: if (msg.data[0] == 1) {
 19377  014768  0101               	movlb	1	; () banked
 19378  01476A  0515               	decf	(_msg+4)& (0+255),w,b
 19379  01476C  A4D8               	btfss	status,2,c
 19380  01476E  D008               	goto	i2l9184
 19381                           
 19382                           ; BSR set to: 1
 19383                           ;RemoteCan.c: 134: LATDbits.LATD2 = 1;
 19384  014770  848C               	bsf	3980,2,c	;volatile
 19385                           
 19386                           ;RemoteCan.c: 135: space_available = 1;
 19387  014772  864A               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 19388                           
 19389                           ;RemoteCan.c: 136: space_gap_reached = 0;
 19390  014774  984A               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 19391                           
 19392                           ;RemoteCan.c: 137: F2_switch = 0;
 19393  014776  9649               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 19394                           
 19395                           ;RemoteCan.c: 138: parking_message_E = 1;
 19396  014778  824A               	bsf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
 19397                           
 19398                           ; BSR set to: 1
 19399                           ;RemoteCan.c: 139: parking_message_ID = 0;
 19400  01477A  0E00               	movlw	0
 19401  01477C  0100               	movlb	0	; () banked
 19402  01477E  6FE5               	movwf	_parking_message_ID& (0+255),b	;volatile
 19403  014780                     i2l9184:
 19404                           
 19405                           ;RemoteCan.c: 140: }
 19406                           ;RemoteCan.c: 142: if (msg.data[0] == 2) {
 19407  014780  0E02               	movlw	2
 19408  014782  0101               	movlb	1	; () banked
 19409  014784  1915               	xorwf	(_msg+4)& (0+255),w,b
 19410  014786  A4D8               	btfss	status,2,c
 19411  014788  D016               	goto	i2l9192
 19412                           
 19413                           ; BSR set to: 1
 19414                           ;RemoteCan.c: 143: LATDbits.LATD3 = 1;
 19415  01478A  868C               	bsf	3980,3,c	;volatile
 19416                           
 19417                           ;RemoteCan.c: 144: space_available = 1;
 19418  01478C  864A               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 19419                           
 19420                           ;RemoteCan.c: 145: space_gap_reached = 1;
 19421  01478E  884A               	bsf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 19422                           
 19423                           ; BSR set to: 1
 19424                           ;RemoteCan.c: 146: dir = 1;
 19425  014790  0E01               	movlw	1
 19426  014792  0100               	movlb	0	; () banked
 19427  014794  6FE4               	movwf	_dir& (0+255),b	;volatile
 19428                           
 19429                           ;RemoteCan.c: 147: set_speed = 0;
 19430  014796  0E00               	movlw	0
 19431  014798  0100               	movlb	0	; () banked
 19432  01479A  6FE3               	movwf	(_set_speed+1)& (0+255),b	;volatile
 19433  01479C  0E00               	movlw	0
 19434  01479E  6FE2               	movwf	_set_speed& (0+255),b	;volatile
 19435                           
 19436                           ;RemoteCan.c: 148: data_steering [0] = 90;
 19437  0147A0  0E5A               	movlw	90
 19438  0147A2  0100               	movlb	0	; () banked
 19439  0147A4  6FEA               	movwf	_data_steering& (0+255),b
 19440                           
 19441                           ;RemoteCan.c: 149: data_brake [0] = 0;
 19442  0147A6  0E00               	movlw	0
 19443  0147A8  6E26               	movwf	_data_brake,c
 19444                           
 19445                           ;RemoteCan.c: 150: data_brake [1] = 0;
 19446  0147AA  0E00               	movlw	0
 19447  0147AC  6E27               	movwf	_data_brake+1,c
 19448                           
 19449                           ; BSR set to: 0
 19450                           ;RemoteCan.c: 151: Can_Tx_Force = 1;
 19451  0147AE  8249               	bsf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
 19452                           
 19453                           ;RemoteCan.c: 152: parking_message_ID = 2;
 19454  0147B0  0E02               	movlw	2
 19455  0147B2  0100               	movlb	0	; () banked
 19456  0147B4  6FE5               	movwf	_parking_message_ID& (0+255),b	;volatile
 19457  0147B6                     i2l9192:
 19458                           
 19459                           ;RemoteCan.c: 153: }
 19460                           ;RemoteCan.c: 155: if (msg.data[0] == 3) {
 19461  0147B6  0E03               	movlw	3
 19462  0147B8  0101               	movlb	1	; () banked
 19463  0147BA  1915               	xorwf	(_msg+4)& (0+255),w,b
 19464  0147BC  A4D8               	btfss	status,2,c
 19465  0147BE  D010               	goto	i2l9200
 19466                           
 19467                           ; BSR set to: 1
 19468                           ;RemoteCan.c: 156: parking_message_ID = 6;
 19469  0147C0  0E06               	movlw	6
 19470  0147C2  0100               	movlb	0	; () banked
 19471  0147C4  6FE5               	movwf	_parking_message_ID& (0+255),b	;volatile
 19472                           
 19473                           ; BSR set to: 0
 19474                           ;RemoteCan.c: 157: F1_switch = 0;
 19475  0147C6  9449               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 19476                           
 19477                           ; BSR set to: 0
 19478                           ;RemoteCan.c: 158: pr_time_6 = time_counter + (2000 / 10);
 19479  0147C8  0EC8               	movlw	200
 19480  0147CA  2419               	addwf	_time_counter,w,c	;volatile
 19481  0147CC  6E15               	movwf	_pr_time_6,c	;volatile
 19482  0147CE  0E00               	movlw	0
 19483  0147D0  201A               	addwfc	_time_counter+1,w,c	;volatile
 19484  0147D2  6E16               	movwf	_pr_time_6+1,c	;volatile
 19485  0147D4  0E00               	movlw	0
 19486  0147D6  201B               	addwfc	_time_counter+2,w,c	;volatile
 19487  0147D8  6E17               	movwf	_pr_time_6+2,c	;volatile
 19488  0147DA  0E00               	movlw	0
 19489  0147DC  201C               	addwfc	_time_counter+3,w,c	;volatile
 19490  0147DE  6E18               	movwf	_pr_time_6+3,c	;volatile
 19491  0147E0                     i2l9200:
 19492                           
 19493                           ;RemoteCan.c: 159: }
 19494                           ;RemoteCan.c: 160: }
 19495                           ;RemoteCan.c: 162: if (id == 0b00000001110) {
 19496  0147E0  0E0E               	movlw	14
 19497  0147E2  1801               	xorwf	_id,w,c	;volatile
 19498  0147E4  1002               	iorwf	_id+1,w,c	;volatile
 19499  0147E6  1003               	iorwf	_id+2,w,c	;volatile
 19500  0147E8  1004               	iorwf	_id+3,w,c	;volatile
 19501  0147EA  A4D8               	btfss	status,2,c
 19502  0147EC  D008               	goto	i2l9204
 19503                           
 19504                           ;RemoteCan.c: 163: steering_correction_dir = msg.data[1];
 19505  0147EE  0101               	movlb	1	; () banked
 19506  0147F0  A116               	btfss	(_msg+5)& (0+255),0,b
 19507  0147F2  D002               	goto	i2u1219_40
 19508  0147F4  8A4A               	bsf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 19509  0147F6  D001               	goto	i2u1220_45
 19510  0147F8                     i2u1219_40:
 19511  0147F8  9A4A               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 19512  0147FA                     i2u1220_45:
 19513                           
 19514                           ;RemoteCan.c: 164: steering_correction = msg.data[0];
 19515  0147FA  C115  F0E7         	movff	_msg+4,_steering_correction	;volatile
 19516  0147FE                     i2l9204:
 19517                           
 19518                           ;RemoteCan.c: 165: }
 19519                           ;RemoteCan.c: 167: if (id == 0xAA) {
 19520  0147FE  0EAA               	movlw	170
 19521  014800  1801               	xorwf	_id,w,c	;volatile
 19522  014802  1002               	iorwf	_id+1,w,c	;volatile
 19523  014804  1003               	iorwf	_id+2,w,c	;volatile
 19524  014806  1004               	iorwf	_id+3,w,c	;volatile
 19525  014808  A4D8               	btfss	status,2,c
 19526  01480A  D00B               	goto	i2l9210
 19527                           
 19528                           ;RemoteCan.c: 168: user_data = msg.data[1];
 19529  01480C  C116  F021         	movff	_msg+5,_user_data	;volatile
 19530  014810  6A22               	clrf	_user_data+1,c	;volatile
 19531                           
 19532                           ;RemoteCan.c: 169: user_data = ((user_data << 8) | msg.data[0]);
 19533  014812  5021               	movf	_user_data,w,c	;volatile
 19534  014814  0100               	movlb	0	; () banked
 19535  014816  6F60               	movwf	??_ISR_alta& (0+255),b
 19536  014818  0101               	movlb	1	; () banked
 19537  01481A  5115               	movf	(_msg+4)& (0+255),w,b
 19538  01481C  6E21               	movwf	_user_data,c	;volatile
 19539  01481E  C060  F022         	movff	??_ISR_alta,_user_data+1	;volatile
 19540  014822                     i2l9210:
 19541                           
 19542                           ;RemoteCan.c: 170: }
 19543                           ;RemoteCan.c: 172: if (id == 0b00000000010) {
 19544  014822  0E02               	movlw	2
 19545  014824  1801               	xorwf	_id,w,c	;volatile
 19546  014826  1002               	iorwf	_id+1,w,c	;volatile
 19547  014828  1003               	iorwf	_id+2,w,c	;volatile
 19548  01482A  1004               	iorwf	_id+3,w,c	;volatile
 19549  01482C  B4D8               	btfsc	status,2,c
 19550                           
 19551                           ;RemoteCan.c: 173: if (RTR_Flag == 1) {
 19552  01482E  AA49               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19553  014830  D025               	goto	i2l9224
 19554                           
 19555                           ;RemoteCan.c: 174: pr_time_4 = time_counter;
 19556  014832  C019  F00D         	movff	_time_counter,_pr_time_4	;volatile
 19557  014836  C01A  F00E         	movff	_time_counter+1,_pr_time_4+1	;volatile
 19558  01483A  C01B  F00F         	movff	_time_counter+2,_pr_time_4+2	;volatile
 19559  01483E  C01C  F010         	movff	_time_counter+3,_pr_time_4+3	;volatile
 19560                           
 19561                           ;RemoteCan.c: 175: data[0] = 0x03;
 19562  014842  0E03               	movlw	3
 19563  014844  6E25               	movwf	_data,c
 19564                           
 19565                           ;RemoteCan.c: 176: _delay((unsigned long)((10)*(16000000/4000000.0)));
 19566  014846  0E0D               	movlw	13
 19567  014848                     i2u1269_47:
 19568  014848  2EE8               	decfsz	wreg,f,c
 19569  01484A  D7FE               	goto	i2u1269_47
 19570  01484C  F000               	nop	
 19571  01484E                     i2l9220:
 19572  01484E  ECF0  F0B1         	call	i2_CANisTxReady	;wreg free
 19573  014852  06E8               	decf	wreg,f,c
 19574  014854  A4D8               	btfss	status,2,c
 19575  014856  D7FB               	goto	i2l9220
 19576                           
 19577                           ;RemoteCan.c: 178: CANsendMessage(0b00000000010, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 19578  014858  0E02               	movlw	2
 19579  01485A  6E38               	movwf	i2CANsendMessage@identifier,c
 19580  01485C  0E00               	movlw	0
 19581  01485E  6E39               	movwf	i2CANsendMessage@identifier+1,c
 19582  014860  0E00               	movlw	0
 19583  014862  6E3A               	movwf	i2CANsendMessage@identifier+2,c
 19584  014864  0E00               	movlw	0
 19585  014866  6E3B               	movwf	i2CANsendMessage@identifier+3,c
 19586  014868  0E25               	movlw	low _data
 19587  01486A  6E3C               	movwf	i2CANsendMessage@data,c
 19588  01486C  0E00               	movlw	high _data
 19589  01486E  6E3D               	movwf	i2CANsendMessage@data+1,c
 19590  014870  0E08               	movlw	8
 19591  014872  6E3E               	movwf	i2CANsendMessage@dataLength,c
 19592  014874  0EBC               	movlw	188
 19593  014876  6E3F               	movwf	i2CANsendMessage@flags,c
 19594  014878  EC2A  F091         	call	i2_CANsendMessage	;wreg free
 19595  01487C                     i2l9224:
 19596                           
 19597                           ;RemoteCan.c: 184: }
 19598                           ;RemoteCan.c: 185: }
 19599                           ;RemoteCan.c: 186: }
 19600                           ;RemoteCan.c: 187: PIR3bits.RXB1IF = 0;
 19601  01487C  92A4               	bcf	4004,1,c	;volatile
 19602                           
 19603                           ;RemoteCan.c: 188: PIR3bits.RXB0IF = 0;
 19604  01487E  90A4               	bcf	4004,0,c	;volatile
 19605  014880                     i2l796:
 19606  014880  C06F  FFF5         	movff	??_ISR_alta+15,tablat
 19607  014884  C06E  FFF8         	movff	??_ISR_alta+14,tblptru
 19608  014888  C06D  FFF7         	movff	??_ISR_alta+13,tblptrh
 19609  01488C  C06C  FFF6         	movff	??_ISR_alta+12,tblptrl
 19610  014890  C06B  FFF4         	movff	??_ISR_alta+11,prodh
 19611  014894  C06A  FFF3         	movff	??_ISR_alta+10,prodl
 19612  014898  C069  FFDA         	movff	??_ISR_alta+9,fsr2h
 19613  01489C  C068  FFD9         	movff	??_ISR_alta+8,fsr2l
 19614  0148A0  C067  FFE2         	movff	??_ISR_alta+7,fsr1h
 19615  0148A4  C066  FFE1         	movff	??_ISR_alta+6,fsr1l
 19616  0148A8  C065  FFEA         	movff	??_ISR_alta+5,fsr0h
 19617  0148AC  C064  FFE9         	movff	??_ISR_alta+4,fsr0l
 19618  0148B0  C063  FFFB         	movff	??_ISR_alta+3,pclatu
 19619  0148B4  C062  FFFA         	movff	??_ISR_alta+2,pclath
 19620  0148B8  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 19621  0148BA  0011               	retfie		f
 19622  0148BC                     __end_of_ISR_alta:
 19623                           	opt stack 0
 19624                           pclatu	equ	0xFFB
 19625                           pclath	equ	0xFFA
 19626                           tblptru	equ	0xFF8
 19627                           tblptrh	equ	0xFF7
 19628                           tblptrl	equ	0xFF6
 19629                           tablat	equ	0xFF5
 19630                           prodh	equ	0xFF4
 19631                           prodl	equ	0xFF3
 19632                           intcon	equ	0xFF2
 19633                           postinc0	equ	0xFEE
 19634                           fsr0h	equ	0xFEA
 19635                           fsr0l	equ	0xFE9
 19636                           wreg	equ	0xFE8
 19637                           indf1	equ	0xFE7
 19638                           plusw1	equ	0xFE3
 19639                           fsr1h	equ	0xFE2
 19640                           fsr1l	equ	0xFE1
 19641                           bsr	equ	0xFE0
 19642                           indf2	equ	0xFDF
 19643                           postinc2	equ	0xFDE
 19644                           plusw2	equ	0xFDB
 19645                           fsr2h	equ	0xFDA
 19646                           fsr2l	equ	0xFD9
 19647                           status	equ	0xFD8
 19648                           
 19649 ;; *************** function i2_CANsendMessage *****************
 19650 ;; Defined at:
 19651 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 19652 ;; Parameters:    Size  Location     Type
 19653 ;;  identifier      4   17[COMRAM] unsigned long 
 19654 ;;  data            2   21[COMRAM] PTR unsigned char 
 19655 ;;		 -> data_speed(1), park_assist_state(8), data(1), data_brake(1), 
 19656 ;;		 -> data_steering(1), 
 19657 ;;  dataLength      1   23[COMRAM] unsigned char 
 19658 ;;  flags           1   24[COMRAM] enum E16909
 19659 ;; Auto vars:     Size  Location     Type
 19660 ;;  CANsendMessa    4   29[COMRAM] unsigned long 
 19661 ;; Return value:  Size  Location     Type
 19662 ;;		None               void
 19663 ;; Registers used:
 19664 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19665 ;; Tracked objects:
 19666 ;;		On entry : 0/0
 19667 ;;		On exit  : 0/0
 19668 ;;		Unchanged: 0/0
 19669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19670 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19671 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19672 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19673 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19674 ;;Total ram usage:       16 bytes
 19675 ;; Hardware stack levels used:    1
 19676 ;; This function calls:
 19677 ;;		Nothing
 19678 ;; This function is called by:
 19679 ;;		_ISR_alta
 19680 ;; This function uses a non-reentrant model
 19681 ;;
 19682                           
 19683                           	psect	text58
 19684  012254                     __ptext58:
 19685                           	opt stack 0
 19686  012254                     i2_CANsendMessage:
 19687                           	opt stack 20
 19688                           
 19689                           ;inc\CANlib.h: 296: unsigned long tamp;
 19690                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 19691                           
 19692                           ;incstack = 0
 19693  012254  010F               	movlb	15	; () banked
 19694  012256  B740               	btfsc	64,3,b	;volatile
 19695  012258  D115               	goto	i2l383
 19696                           
 19697                           ; BSR set to: 15
 19698                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 19699  01225A  C03E  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 19700                           
 19701                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 19702  01225E  AC3F               	btfss	i2CANsendMessage@flags,6,c
 19703  012260  D003               	goto	i2l384
 19704                           
 19705                           ; BSR set to: 15
 19706                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 19707  012262  010F               	movlb	15	; () banked
 19708  012264  8D45               	bsf	69,6,b	;volatile
 19709  012266  D002               	goto	i2l385
 19710  012268                     i2l384:
 19711                           
 19712                           ; BSR set to: 15
 19713                           ;inc\CANlib.h: 302: else
 19714                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 19715  012268  010F               	movlb	15	; () banked
 19716  01226A  9D45               	bcf	69,6,b	;volatile
 19717  01226C                     i2l385:
 19718                           
 19719                           ; BSR set to: 15
 19720                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 19721  01226C  A63F               	btfss	i2CANsendMessage@flags,3,c
 19722  01226E  D066               	goto	i2l386
 19723                           
 19724                           ; BSR set to: 15
 19725                           ;inc\CANlib.h: 306: {
 19726                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 19727  012270  5038               	movf	i2CANsendMessage@identifier,w,c
 19728  012272  6E44               	movwf	i2CANsendMessage@tamp,c
 19729  012274  6A45               	clrf	i2CANsendMessage@tamp+1,c
 19730  012276  6A46               	clrf	i2CANsendMessage@tamp+2,c
 19731  012278  6A47               	clrf	i2CANsendMessage@tamp+3,c
 19732                           
 19733                           ; BSR set to: 15
 19734                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 19735  01227A  C044  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 19736                           
 19737                           ; BSR set to: 15
 19738                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 19739  01227E  0E00               	movlw	0
 19740  012280  1438               	andwf	i2CANsendMessage@identifier,w,c
 19741  012282  6E44               	movwf	i2CANsendMessage@tamp,c
 19742  012284  0EFF               	movlw	255
 19743  012286  1439               	andwf	i2CANsendMessage@identifier+1,w,c
 19744  012288  6E45               	movwf	i2CANsendMessage@tamp+1,c
 19745  01228A  0E00               	movlw	0
 19746  01228C  143A               	andwf	i2CANsendMessage@identifier+2,w,c
 19747  01228E  6E46               	movwf	i2CANsendMessage@tamp+2,c
 19748  012290  0E00               	movlw	0
 19749  012292  143B               	andwf	i2CANsendMessage@identifier+3,w,c
 19750  012294  6E47               	movwf	i2CANsendMessage@tamp+3,c
 19751                           
 19752                           ; BSR set to: 15
 19753                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 19754  012296  C044  F040         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19755  01229A  C045  F041         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19756  01229E  C046  F042         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19757  0122A2  C047  F043         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19758  0122A6  C041  F040         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19759  0122AA  C042  F041         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19760  0122AE  C043  F042         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19761  0122B2  6A43               	clrf	??i2_CANsendMessage+3,c
 19762  0122B4  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19763  0122B8  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19764  0122BC  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19765  0122C0  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19766                           
 19767                           ; BSR set to: 15
 19768                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 19769  0122C4  C044  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 19770                           
 19771                           ; BSR set to: 15
 19772                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 19773  0122C8  0E00               	movlw	0
 19774  0122CA  010F               	movlb	15	; () banked
 19775  0122CC  6F42               	movwf	66,b	;volatile
 19776                           
 19777                           ; BSR set to: 15
 19778                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 19779  0122CE  010F               	movlb	15	; () banked
 19780  0122D0  8742               	bsf	66,3,b	;volatile
 19781                           
 19782                           ; BSR set to: 15
 19783                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 19784  0122D2  A03A               	btfss	i2CANsendMessage@identifier+2,0,c
 19785  0122D4  D002               	goto	i2l387
 19786                           
 19787                           ; BSR set to: 15
 19788                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 19789  0122D6  010F               	movlb	15	; () banked
 19790  0122D8  8142               	bsf	66,0,b	;volatile
 19791  0122DA                     i2l387:
 19792                           
 19793                           ; BSR set to: 15
 19794                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 19795  0122DA  A23A               	btfss	i2CANsendMessage@identifier+2,1,c
 19796  0122DC  D002               	goto	i2l388
 19797                           
 19798                           ; BSR set to: 15
 19799                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 19800  0122DE  010F               	movlb	15	; () banked
 19801  0122E0  8342               	bsf	66,1,b	;volatile
 19802  0122E2                     i2l388:
 19803                           
 19804                           ; BSR set to: 15
 19805                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 19806  0122E2  A43A               	btfss	i2CANsendMessage@identifier+2,2,c
 19807  0122E4  D002               	goto	i2l389
 19808                           
 19809                           ; BSR set to: 15
 19810                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 19811  0122E6  010F               	movlb	15	; () banked
 19812  0122E8  8B42               	bsf	66,5,b	;volatile
 19813  0122EA                     i2l389:
 19814                           
 19815                           ; BSR set to: 15
 19816                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 19817  0122EA  A63A               	btfss	i2CANsendMessage@identifier+2,3,c
 19818  0122EC  D002               	goto	i2l390
 19819                           
 19820                           ; BSR set to: 15
 19821                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 19822  0122EE  010F               	movlb	15	; () banked
 19823  0122F0  8D42               	bsf	66,6,b	;volatile
 19824  0122F2                     i2l390:
 19825                           
 19826                           ; BSR set to: 15
 19827                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 19828  0122F2  A83A               	btfss	i2CANsendMessage@identifier+2,4,c
 19829  0122F4  D002               	goto	i2l7284
 19830                           
 19831                           ; BSR set to: 15
 19832                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 19833  0122F6  010F               	movlb	15	; () banked
 19834  0122F8  8F42               	bsf	66,7,b	;volatile
 19835  0122FA                     i2l7284:
 19836                           
 19837                           ; BSR set to: 15
 19838                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 19839  0122FA  C038  F040         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19840  0122FE  C039  F041         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19841  012302  C03A  F042         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19842  012306  C03B  F043         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19843  01230A  0E16               	movlw	22
 19844  01230C  D005               	goto	i2u930_40
 19845  01230E                     i2u930_45:
 19846  01230E  90D8               	bcf	status,0,c
 19847  012310  3243               	rrcf	??i2_CANsendMessage+3,f,c
 19848  012312  3242               	rrcf	??i2_CANsendMessage+2,f,c
 19849  012314  3241               	rrcf	??i2_CANsendMessage+1,f,c
 19850  012316  3240               	rrcf	??i2_CANsendMessage,f,c
 19851  012318                     i2u930_40:
 19852  012318  2EE8               	decfsz	wreg,f,c
 19853  01231A  D7F9               	goto	i2u930_45
 19854  01231C  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19855  012320  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19856  012324  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19857  012328  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19858                           
 19859                           ; BSR set to: 15
 19860                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 19861  01232C  5044               	movf	i2CANsendMessage@tamp,w,c
 19862  01232E  6E44               	movwf	i2CANsendMessage@tamp,c
 19863  012330  6A45               	clrf	i2CANsendMessage@tamp+1,c
 19864  012332  6A46               	clrf	i2CANsendMessage@tamp+2,c
 19865  012334  6A47               	clrf	i2CANsendMessage@tamp+3,c
 19866                           
 19867                           ; BSR set to: 15
 19868                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 19869  012336  C044  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 19870                           
 19871                           ;inc\CANlib.h: 332: }
 19872  01233A  D04D               	goto	i2l7304
 19873  01233C                     i2l386:
 19874                           
 19875                           ; BSR set to: 15
 19876                           ;inc\CANlib.h: 334: else
 19877                           ;inc\CANlib.h: 336: {
 19878                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 19879  01233C  010F               	movlb	15	; () banked
 19880  01233E  9742               	bcf	66,3,b	;volatile
 19881                           
 19882                           ; BSR set to: 15
 19883                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 19884  012340  C038  F040         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19885  012344  C039  F041         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19886  012348  C03A  F042         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19887  01234C  C03B  F043         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19888  012350  0E04               	movlw	4
 19889  012352  D005               	goto	i2u931_40
 19890  012354                     i2u931_45:
 19891  012354  90D8               	bcf	status,0,c
 19892  012356  3243               	rrcf	??i2_CANsendMessage+3,f,c
 19893  012358  3242               	rrcf	??i2_CANsendMessage+2,f,c
 19894  01235A  3241               	rrcf	??i2_CANsendMessage+1,f,c
 19895  01235C  3240               	rrcf	??i2_CANsendMessage,f,c
 19896  01235E                     i2u931_40:
 19897  01235E  2EE8               	decfsz	wreg,f,c
 19898  012360  D7F9               	goto	i2u931_45
 19899  012362  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19900  012366  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19901  01236A  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19902  01236E  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19903                           
 19904                           ; BSR set to: 15
 19905                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 19906  012372  5044               	movf	i2CANsendMessage@tamp,w,c
 19907  012374  6E44               	movwf	i2CANsendMessage@tamp,c
 19908  012376  6A45               	clrf	i2CANsendMessage@tamp+1,c
 19909  012378  6A46               	clrf	i2CANsendMessage@tamp+2,c
 19910  01237A  6A47               	clrf	i2CANsendMessage@tamp+3,c
 19911                           
 19912                           ; BSR set to: 15
 19913                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 19914  01237C  C044  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 19915                           
 19916                           ; BSR set to: 15
 19917                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 19918  012380  0E07               	movlw	7
 19919  012382  1438               	andwf	i2CANsendMessage@identifier,w,c
 19920  012384  6E44               	movwf	i2CANsendMessage@tamp,c
 19921  012386  0E00               	movlw	0
 19922  012388  1439               	andwf	i2CANsendMessage@identifier+1,w,c
 19923  01238A  6E45               	movwf	i2CANsendMessage@tamp+1,c
 19924  01238C  0E00               	movlw	0
 19925  01238E  143A               	andwf	i2CANsendMessage@identifier+2,w,c
 19926  012390  6E46               	movwf	i2CANsendMessage@tamp+2,c
 19927  012392  0E00               	movlw	0
 19928  012394  143B               	andwf	i2CANsendMessage@identifier+3,w,c
 19929  012396  6E47               	movwf	i2CANsendMessage@tamp+3,c
 19930                           
 19931                           ; BSR set to: 15
 19932                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 19933  012398  C044  F040         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19934  01239C  C045  F041         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19935  0123A0  C046  F042         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19936  0123A4  C047  F043         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19937  0123A8  0E05               	movlw	5
 19938  0123AA                     i2u932_45:
 19939  0123AA  90D8               	bcf	status,0,c
 19940  0123AC  3640               	rlcf	??i2_CANsendMessage,f,c
 19941  0123AE  3641               	rlcf	??i2_CANsendMessage+1,f,c
 19942  0123B0  3642               	rlcf	??i2_CANsendMessage+2,f,c
 19943  0123B2  3643               	rlcf	??i2_CANsendMessage+3,f,c
 19944  0123B4  2EE8               	decfsz	wreg,f,c
 19945  0123B6  D7F9               	goto	i2u932_45
 19946  0123B8  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19947  0123BC  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19948  0123C0  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19949  0123C4  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19950                           
 19951                           ; BSR set to: 15
 19952                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 19953  0123C8  010F               	movlb	15	; () banked
 19954  0123CA  5142               	movf	66,w,b	;volatile
 19955  0123CC  0B1F               	andlw	31
 19956  0123CE  010F               	movlb	15	; () banked
 19957  0123D0  6F42               	movwf	66,b	;volatile
 19958                           
 19959                           ; BSR set to: 15
 19960                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 19961  0123D2  C044  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 19962  0123D6                     i2l7304:
 19963                           
 19964                           ; BSR set to: 15
 19965                           ;inc\CANlib.h: 347: }
 19966                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 19967  0123D6  A03F               	btfss	i2CANsendMessage@flags,0,c
 19968  0123D8  D003               	goto	i2l393
 19969                           
 19970                           ; BSR set to: 15
 19971                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 19972  0123DA  010F               	movlb	15	; () banked
 19973  0123DC  8140               	bsf	64,0,b	;volatile
 19974  0123DE  D002               	goto	i2l394
 19975  0123E0                     i2l393:
 19976                           
 19977                           ; BSR set to: 15
 19978                           ;inc\CANlib.h: 351: else
 19979                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 19980  0123E0  010F               	movlb	15	; () banked
 19981  0123E2  9140               	bcf	64,0,b	;volatile
 19982  0123E4                     i2l394:
 19983                           
 19984                           ; BSR set to: 15
 19985                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 19986  0123E4  A23F               	btfss	i2CANsendMessage@flags,1,c
 19987  0123E6  D003               	goto	i2l395
 19988                           
 19989                           ; BSR set to: 15
 19990                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 19991  0123E8  010F               	movlb	15	; () banked
 19992  0123EA  8340               	bsf	64,1,b	;volatile
 19993  0123EC  D002               	goto	i2l7310
 19994  0123EE                     i2l395:
 19995                           
 19996                           ; BSR set to: 15
 19997                           ;inc\CANlib.h: 355: else
 19998                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 19999  0123EE  010F               	movlb	15	; () banked
 20000  0123F0  9340               	bcf	64,1,b	;volatile
 20001  0123F2                     i2l7310:
 20002                           
 20003                           ; BSR set to: 15
 20004                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 20005  0123F2  C03C  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20006  0123F6  C03D  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20007  0123FA  50DF               	movf	indf2,w,c
 20008  0123FC  010F               	movlb	15	; () banked
 20009  0123FE  6F46               	movwf	70,b	;volatile
 20010                           
 20011                           ; BSR set to: 15
 20012                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 20013  012400  EE20 F001          	lfsr	2,1
 20014  012404  503C               	movf	i2CANsendMessage@data,w,c
 20015  012406  26D9               	addwf	fsr2l,f,c
 20016  012408  503D               	movf	i2CANsendMessage@data+1,w,c
 20017  01240A  22DA               	addwfc	fsr2h,f,c
 20018  01240C  50DF               	movf	indf2,w,c
 20019  01240E  010F               	movlb	15	; () banked
 20020  012410  6F47               	movwf	71,b	;volatile
 20021                           
 20022                           ; BSR set to: 15
 20023                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 20024  012412  EE20 F002          	lfsr	2,2
 20025  012416  503C               	movf	i2CANsendMessage@data,w,c
 20026  012418  26D9               	addwf	fsr2l,f,c
 20027  01241A  503D               	movf	i2CANsendMessage@data+1,w,c
 20028  01241C  22DA               	addwfc	fsr2h,f,c
 20029  01241E  50DF               	movf	indf2,w,c
 20030  012420  010F               	movlb	15	; () banked
 20031  012422  6F48               	movwf	72,b	;volatile
 20032                           
 20033                           ; BSR set to: 15
 20034                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 20035  012424  EE20 F003          	lfsr	2,3
 20036  012428  503C               	movf	i2CANsendMessage@data,w,c
 20037  01242A  26D9               	addwf	fsr2l,f,c
 20038  01242C  503D               	movf	i2CANsendMessage@data+1,w,c
 20039  01242E  22DA               	addwfc	fsr2h,f,c
 20040  012430  50DF               	movf	indf2,w,c
 20041  012432  010F               	movlb	15	; () banked
 20042  012434  6F49               	movwf	73,b	;volatile
 20043                           
 20044                           ; BSR set to: 15
 20045                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 20046  012436  EE20 F004          	lfsr	2,4
 20047  01243A  503C               	movf	i2CANsendMessage@data,w,c
 20048  01243C  26D9               	addwf	fsr2l,f,c
 20049  01243E  503D               	movf	i2CANsendMessage@data+1,w,c
 20050  012440  22DA               	addwfc	fsr2h,f,c
 20051  012442  50DF               	movf	indf2,w,c
 20052  012444  010F               	movlb	15	; () banked
 20053  012446  6F4A               	movwf	74,b	;volatile
 20054                           
 20055                           ; BSR set to: 15
 20056                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 20057  012448  EE20 F005          	lfsr	2,5
 20058  01244C  503C               	movf	i2CANsendMessage@data,w,c
 20059  01244E  26D9               	addwf	fsr2l,f,c
 20060  012450  503D               	movf	i2CANsendMessage@data+1,w,c
 20061  012452  22DA               	addwfc	fsr2h,f,c
 20062  012454  50DF               	movf	indf2,w,c
 20063  012456  010F               	movlb	15	; () banked
 20064  012458  6F4B               	movwf	75,b	;volatile
 20065                           
 20066                           ; BSR set to: 15
 20067                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 20068  01245A  EE20 F006          	lfsr	2,6
 20069  01245E  503C               	movf	i2CANsendMessage@data,w,c
 20070  012460  26D9               	addwf	fsr2l,f,c
 20071  012462  503D               	movf	i2CANsendMessage@data+1,w,c
 20072  012464  22DA               	addwfc	fsr2h,f,c
 20073  012466  50DF               	movf	indf2,w,c
 20074  012468  010F               	movlb	15	; () banked
 20075  01246A  6F4C               	movwf	76,b	;volatile
 20076                           
 20077                           ; BSR set to: 15
 20078                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 20079  01246C  EE20 F007          	lfsr	2,7
 20080  012470  503C               	movf	i2CANsendMessage@data,w,c
 20081  012472  26D9               	addwf	fsr2l,f,c
 20082  012474  503D               	movf	i2CANsendMessage@data+1,w,c
 20083  012476  22DA               	addwfc	fsr2h,f,c
 20084  012478  50DF               	movf	indf2,w,c
 20085  01247A  010F               	movlb	15	; () banked
 20086  01247C  6F4D               	movwf	77,b	;volatile
 20087                           
 20088                           ; BSR set to: 15
 20089                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 20090  01247E  010F               	movlb	15	; () banked
 20091  012480  8740               	bsf	64,3,b	;volatile
 20092                           
 20093                           ; BSR set to: 15
 20094                           ;inc\CANlib.h: 368: return;
 20095  012482  0012               	return	
 20096  012484                     i2l383:
 20097                           
 20098                           ; BSR set to: 15
 20099                           ;inc\CANlib.h: 369: }
 20100                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 20101  012484  010F               	movlb	15	; () banked
 20102  012486  B730               	btfsc	48,3,b	;volatile
 20103  012488  D115               	goto	i2l398
 20104                           
 20105                           ; BSR set to: 15
 20106                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 20107  01248A  C03E  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 20108                           
 20109                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 20110  01248E  AC3F               	btfss	i2CANsendMessage@flags,6,c
 20111  012490  D003               	goto	i2l399
 20112                           
 20113                           ; BSR set to: 15
 20114                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 20115  012492  010F               	movlb	15	; () banked
 20116  012494  8D35               	bsf	53,6,b	;volatile
 20117  012496  D002               	goto	i2l400
 20118  012498                     i2l399:
 20119                           
 20120                           ; BSR set to: 15
 20121                           ;inc\CANlib.h: 378: else
 20122                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 20123  012498  010F               	movlb	15	; () banked
 20124  01249A  9D35               	bcf	53,6,b	;volatile
 20125  01249C                     i2l400:
 20126                           
 20127                           ; BSR set to: 15
 20128                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 20129  01249C  A63F               	btfss	i2CANsendMessage@flags,3,c
 20130  01249E  D066               	goto	i2l401
 20131                           
 20132                           ; BSR set to: 15
 20133                           ;inc\CANlib.h: 382: {
 20134                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 20135  0124A0  5038               	movf	i2CANsendMessage@identifier,w,c
 20136  0124A2  6E44               	movwf	i2CANsendMessage@tamp,c
 20137  0124A4  6A45               	clrf	i2CANsendMessage@tamp+1,c
 20138  0124A6  6A46               	clrf	i2CANsendMessage@tamp+2,c
 20139  0124A8  6A47               	clrf	i2CANsendMessage@tamp+3,c
 20140                           
 20141                           ; BSR set to: 15
 20142                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 20143  0124AA  C044  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 20144                           
 20145                           ; BSR set to: 15
 20146                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 20147  0124AE  0E00               	movlw	0
 20148  0124B0  1438               	andwf	i2CANsendMessage@identifier,w,c
 20149  0124B2  6E44               	movwf	i2CANsendMessage@tamp,c
 20150  0124B4  0EFF               	movlw	255
 20151  0124B6  1439               	andwf	i2CANsendMessage@identifier+1,w,c
 20152  0124B8  6E45               	movwf	i2CANsendMessage@tamp+1,c
 20153  0124BA  0E00               	movlw	0
 20154  0124BC  143A               	andwf	i2CANsendMessage@identifier+2,w,c
 20155  0124BE  6E46               	movwf	i2CANsendMessage@tamp+2,c
 20156  0124C0  0E00               	movlw	0
 20157  0124C2  143B               	andwf	i2CANsendMessage@identifier+3,w,c
 20158  0124C4  6E47               	movwf	i2CANsendMessage@tamp+3,c
 20159                           
 20160                           ; BSR set to: 15
 20161                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 20162  0124C6  C044  F040         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20163  0124CA  C045  F041         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20164  0124CE  C046  F042         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20165  0124D2  C047  F043         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20166  0124D6  C041  F040         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 20167  0124DA  C042  F041         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 20168  0124DE  C043  F042         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 20169  0124E2  6A43               	clrf	??i2_CANsendMessage+3,c
 20170  0124E4  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20171  0124E8  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20172  0124EC  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20173  0124F0  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20174                           
 20175                           ; BSR set to: 15
 20176                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 20177  0124F4  C044  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 20178                           
 20179                           ; BSR set to: 15
 20180                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 20181  0124F8  0E00               	movlw	0
 20182  0124FA  010F               	movlb	15	; () banked
 20183  0124FC  6F32               	movwf	50,b	;volatile
 20184                           
 20185                           ; BSR set to: 15
 20186                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 20187  0124FE  010F               	movlb	15	; () banked
 20188  012500  8732               	bsf	50,3,b	;volatile
 20189                           
 20190                           ; BSR set to: 15
 20191                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 20192  012502  A03A               	btfss	i2CANsendMessage@identifier+2,0,c
 20193  012504  D002               	goto	i2l402
 20194                           
 20195                           ; BSR set to: 15
 20196                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 20197  012506  010F               	movlb	15	; () banked
 20198  012508  8132               	bsf	50,0,b	;volatile
 20199  01250A                     i2l402:
 20200                           
 20201                           ; BSR set to: 15
 20202                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 20203  01250A  A23A               	btfss	i2CANsendMessage@identifier+2,1,c
 20204  01250C  D002               	goto	i2l403
 20205                           
 20206                           ; BSR set to: 15
 20207                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 20208  01250E  010F               	movlb	15	; () banked
 20209  012510  8332               	bsf	50,1,b	;volatile
 20210  012512                     i2l403:
 20211                           
 20212                           ; BSR set to: 15
 20213                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 20214  012512  A43A               	btfss	i2CANsendMessage@identifier+2,2,c
 20215  012514  D002               	goto	i2l404
 20216                           
 20217                           ; BSR set to: 15
 20218                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 20219  012516  010F               	movlb	15	; () banked
 20220  012518  8B32               	bsf	50,5,b	;volatile
 20221  01251A                     i2l404:
 20222                           
 20223                           ; BSR set to: 15
 20224                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 20225  01251A  A63A               	btfss	i2CANsendMessage@identifier+2,3,c
 20226  01251C  D002               	goto	i2l405
 20227                           
 20228                           ; BSR set to: 15
 20229                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 20230  01251E  010F               	movlb	15	; () banked
 20231  012520  8D32               	bsf	50,6,b	;volatile
 20232  012522                     i2l405:
 20233                           
 20234                           ; BSR set to: 15
 20235                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 20236  012522  A83A               	btfss	i2CANsendMessage@identifier+2,4,c
 20237  012524  D002               	goto	i2l7360
 20238                           
 20239                           ; BSR set to: 15
 20240                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 20241  012526  010F               	movlb	15	; () banked
 20242  012528  8F32               	bsf	50,7,b	;volatile
 20243  01252A                     i2l7360:
 20244                           
 20245                           ; BSR set to: 15
 20246                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 20247  01252A  C038  F040         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20248  01252E  C039  F041         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20249  012532  C03A  F042         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20250  012536  C03B  F043         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20251  01253A  0E16               	movlw	22
 20252  01253C  D005               	goto	i2u943_40
 20253  01253E                     i2u943_45:
 20254  01253E  90D8               	bcf	status,0,c
 20255  012540  3243               	rrcf	??i2_CANsendMessage+3,f,c
 20256  012542  3242               	rrcf	??i2_CANsendMessage+2,f,c
 20257  012544  3241               	rrcf	??i2_CANsendMessage+1,f,c
 20258  012546  3240               	rrcf	??i2_CANsendMessage,f,c
 20259  012548                     i2u943_40:
 20260  012548  2EE8               	decfsz	wreg,f,c
 20261  01254A  D7F9               	goto	i2u943_45
 20262  01254C  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20263  012550  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20264  012554  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20265  012558  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20266                           
 20267                           ; BSR set to: 15
 20268                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 20269  01255C  5044               	movf	i2CANsendMessage@tamp,w,c
 20270  01255E  6E44               	movwf	i2CANsendMessage@tamp,c
 20271  012560  6A45               	clrf	i2CANsendMessage@tamp+1,c
 20272  012562  6A46               	clrf	i2CANsendMessage@tamp+2,c
 20273  012564  6A47               	clrf	i2CANsendMessage@tamp+3,c
 20274                           
 20275                           ; BSR set to: 15
 20276                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 20277  012566  C044  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 20278                           
 20279                           ;inc\CANlib.h: 407: }
 20280  01256A  D04D               	goto	i2l7380
 20281  01256C                     i2l401:
 20282                           
 20283                           ; BSR set to: 15
 20284                           ;inc\CANlib.h: 409: else
 20285                           ;inc\CANlib.h: 411: {
 20286                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 20287  01256C  010F               	movlb	15	; () banked
 20288  01256E  9732               	bcf	50,3,b	;volatile
 20289                           
 20290                           ; BSR set to: 15
 20291                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 20292  012570  C038  F040         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20293  012574  C039  F041         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20294  012578  C03A  F042         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20295  01257C  C03B  F043         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20296  012580  0E04               	movlw	4
 20297  012582  D005               	goto	i2u944_40
 20298  012584                     i2u944_45:
 20299  012584  90D8               	bcf	status,0,c
 20300  012586  3243               	rrcf	??i2_CANsendMessage+3,f,c
 20301  012588  3242               	rrcf	??i2_CANsendMessage+2,f,c
 20302  01258A  3241               	rrcf	??i2_CANsendMessage+1,f,c
 20303  01258C  3240               	rrcf	??i2_CANsendMessage,f,c
 20304  01258E                     i2u944_40:
 20305  01258E  2EE8               	decfsz	wreg,f,c
 20306  012590  D7F9               	goto	i2u944_45
 20307  012592  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20308  012596  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20309  01259A  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20310  01259E  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20311                           
 20312                           ; BSR set to: 15
 20313                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 20314  0125A2  5044               	movf	i2CANsendMessage@tamp,w,c
 20315  0125A4  6E44               	movwf	i2CANsendMessage@tamp,c
 20316  0125A6  6A45               	clrf	i2CANsendMessage@tamp+1,c
 20317  0125A8  6A46               	clrf	i2CANsendMessage@tamp+2,c
 20318  0125AA  6A47               	clrf	i2CANsendMessage@tamp+3,c
 20319                           
 20320                           ; BSR set to: 15
 20321                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 20322  0125AC  C044  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 20323                           
 20324                           ; BSR set to: 15
 20325                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 20326  0125B0  0E07               	movlw	7
 20327  0125B2  1438               	andwf	i2CANsendMessage@identifier,w,c
 20328  0125B4  6E44               	movwf	i2CANsendMessage@tamp,c
 20329  0125B6  0E00               	movlw	0
 20330  0125B8  1439               	andwf	i2CANsendMessage@identifier+1,w,c
 20331  0125BA  6E45               	movwf	i2CANsendMessage@tamp+1,c
 20332  0125BC  0E00               	movlw	0
 20333  0125BE  143A               	andwf	i2CANsendMessage@identifier+2,w,c
 20334  0125C0  6E46               	movwf	i2CANsendMessage@tamp+2,c
 20335  0125C2  0E00               	movlw	0
 20336  0125C4  143B               	andwf	i2CANsendMessage@identifier+3,w,c
 20337  0125C6  6E47               	movwf	i2CANsendMessage@tamp+3,c
 20338                           
 20339                           ; BSR set to: 15
 20340                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 20341  0125C8  C044  F040         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20342  0125CC  C045  F041         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20343  0125D0  C046  F042         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20344  0125D4  C047  F043         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20345  0125D8  0E05               	movlw	5
 20346  0125DA                     i2u945_45:
 20347  0125DA  90D8               	bcf	status,0,c
 20348  0125DC  3640               	rlcf	??i2_CANsendMessage,f,c
 20349  0125DE  3641               	rlcf	??i2_CANsendMessage+1,f,c
 20350  0125E0  3642               	rlcf	??i2_CANsendMessage+2,f,c
 20351  0125E2  3643               	rlcf	??i2_CANsendMessage+3,f,c
 20352  0125E4  2EE8               	decfsz	wreg,f,c
 20353  0125E6  D7F9               	goto	i2u945_45
 20354  0125E8  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20355  0125EC  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20356  0125F0  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20357  0125F4  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20358                           
 20359                           ; BSR set to: 15
 20360                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 20361  0125F8  010F               	movlb	15	; () banked
 20362  0125FA  5132               	movf	50,w,b	;volatile
 20363  0125FC  0B1F               	andlw	31
 20364  0125FE  010F               	movlb	15	; () banked
 20365  012600  6F32               	movwf	50,b	;volatile
 20366                           
 20367                           ; BSR set to: 15
 20368                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 20369  012602  C044  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 20370  012606                     i2l7380:
 20371                           
 20372                           ; BSR set to: 15
 20373                           ;inc\CANlib.h: 422: }
 20374                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 20375  012606  A03F               	btfss	i2CANsendMessage@flags,0,c
 20376  012608  D003               	goto	i2l408
 20377                           
 20378                           ; BSR set to: 15
 20379                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 20380  01260A  010F               	movlb	15	; () banked
 20381  01260C  8130               	bsf	48,0,b	;volatile
 20382  01260E  D002               	goto	i2l409
 20383  012610                     i2l408:
 20384                           
 20385                           ; BSR set to: 15
 20386                           ;inc\CANlib.h: 426: else
 20387                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 20388  012610  010F               	movlb	15	; () banked
 20389  012612  9130               	bcf	48,0,b	;volatile
 20390  012614                     i2l409:
 20391                           
 20392                           ; BSR set to: 15
 20393                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 20394  012614  A23F               	btfss	i2CANsendMessage@flags,1,c
 20395  012616  D003               	goto	i2l410
 20396                           
 20397                           ; BSR set to: 15
 20398                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 20399  012618  010F               	movlb	15	; () banked
 20400  01261A  8330               	bsf	48,1,b	;volatile
 20401  01261C  D002               	goto	i2l7386
 20402  01261E                     i2l410:
 20403                           
 20404                           ; BSR set to: 15
 20405                           ;inc\CANlib.h: 430: else
 20406                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 20407  01261E  010F               	movlb	15	; () banked
 20408  012620  9330               	bcf	48,1,b	;volatile
 20409  012622                     i2l7386:
 20410                           
 20411                           ; BSR set to: 15
 20412                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 20413  012622  C03C  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20414  012626  C03D  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20415  01262A  50DF               	movf	indf2,w,c
 20416  01262C  010F               	movlb	15	; () banked
 20417  01262E  6F36               	movwf	54,b	;volatile
 20418                           
 20419                           ; BSR set to: 15
 20420                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 20421  012630  EE20 F001          	lfsr	2,1
 20422  012634  503C               	movf	i2CANsendMessage@data,w,c
 20423  012636  26D9               	addwf	fsr2l,f,c
 20424  012638  503D               	movf	i2CANsendMessage@data+1,w,c
 20425  01263A  22DA               	addwfc	fsr2h,f,c
 20426  01263C  50DF               	movf	indf2,w,c
 20427  01263E  010F               	movlb	15	; () banked
 20428  012640  6F37               	movwf	55,b	;volatile
 20429                           
 20430                           ; BSR set to: 15
 20431                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 20432  012642  EE20 F002          	lfsr	2,2
 20433  012646  503C               	movf	i2CANsendMessage@data,w,c
 20434  012648  26D9               	addwf	fsr2l,f,c
 20435  01264A  503D               	movf	i2CANsendMessage@data+1,w,c
 20436  01264C  22DA               	addwfc	fsr2h,f,c
 20437  01264E  50DF               	movf	indf2,w,c
 20438  012650  010F               	movlb	15	; () banked
 20439  012652  6F38               	movwf	56,b	;volatile
 20440                           
 20441                           ; BSR set to: 15
 20442                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 20443  012654  EE20 F003          	lfsr	2,3
 20444  012658  503C               	movf	i2CANsendMessage@data,w,c
 20445  01265A  26D9               	addwf	fsr2l,f,c
 20446  01265C  503D               	movf	i2CANsendMessage@data+1,w,c
 20447  01265E  22DA               	addwfc	fsr2h,f,c
 20448  012660  50DF               	movf	indf2,w,c
 20449  012662  010F               	movlb	15	; () banked
 20450  012664  6F39               	movwf	57,b	;volatile
 20451                           
 20452                           ; BSR set to: 15
 20453                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 20454  012666  EE20 F004          	lfsr	2,4
 20455  01266A  503C               	movf	i2CANsendMessage@data,w,c
 20456  01266C  26D9               	addwf	fsr2l,f,c
 20457  01266E  503D               	movf	i2CANsendMessage@data+1,w,c
 20458  012670  22DA               	addwfc	fsr2h,f,c
 20459  012672  50DF               	movf	indf2,w,c
 20460  012674  010F               	movlb	15	; () banked
 20461  012676  6F3A               	movwf	58,b	;volatile
 20462                           
 20463                           ; BSR set to: 15
 20464                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 20465  012678  EE20 F005          	lfsr	2,5
 20466  01267C  503C               	movf	i2CANsendMessage@data,w,c
 20467  01267E  26D9               	addwf	fsr2l,f,c
 20468  012680  503D               	movf	i2CANsendMessage@data+1,w,c
 20469  012682  22DA               	addwfc	fsr2h,f,c
 20470  012684  50DF               	movf	indf2,w,c
 20471  012686  010F               	movlb	15	; () banked
 20472  012688  6F3B               	movwf	59,b	;volatile
 20473                           
 20474                           ; BSR set to: 15
 20475                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 20476  01268A  EE20 F006          	lfsr	2,6
 20477  01268E  503C               	movf	i2CANsendMessage@data,w,c
 20478  012690  26D9               	addwf	fsr2l,f,c
 20479  012692  503D               	movf	i2CANsendMessage@data+1,w,c
 20480  012694  22DA               	addwfc	fsr2h,f,c
 20481  012696  50DF               	movf	indf2,w,c
 20482  012698  010F               	movlb	15	; () banked
 20483  01269A  6F3C               	movwf	60,b	;volatile
 20484                           
 20485                           ; BSR set to: 15
 20486                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 20487  01269C  EE20 F007          	lfsr	2,7
 20488  0126A0  503C               	movf	i2CANsendMessage@data,w,c
 20489  0126A2  26D9               	addwf	fsr2l,f,c
 20490  0126A4  503D               	movf	i2CANsendMessage@data+1,w,c
 20491  0126A6  22DA               	addwfc	fsr2h,f,c
 20492  0126A8  50DF               	movf	indf2,w,c
 20493  0126AA  010F               	movlb	15	; () banked
 20494  0126AC  6F3D               	movwf	61,b	;volatile
 20495                           
 20496                           ; BSR set to: 15
 20497                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 20498  0126AE  010F               	movlb	15	; () banked
 20499  0126B0  8730               	bsf	48,3,b	;volatile
 20500                           
 20501                           ; BSR set to: 15
 20502                           ;inc\CANlib.h: 444: return;
 20503  0126B2  0012               	return	
 20504  0126B4                     i2l398:
 20505                           
 20506                           ; BSR set to: 15
 20507                           ;inc\CANlib.h: 445: }
 20508                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 20509  0126B4  010F               	movlb	15	; () banked
 20510  0126B6  B720               	btfsc	32,3,b	;volatile
 20511  0126B8  0012               	return	
 20512                           
 20513                           ; BSR set to: 15
 20514                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 20515  0126BA  C03E  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 20516                           
 20517                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 20518  0126BE  AC3F               	btfss	i2CANsendMessage@flags,6,c
 20519  0126C0  D003               	goto	i2l413
 20520                           
 20521                           ; BSR set to: 15
 20522                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 20523  0126C2  010F               	movlb	15	; () banked
 20524  0126C4  8D25               	bsf	37,6,b	;volatile
 20525  0126C6  D002               	goto	i2l414
 20526  0126C8                     i2l413:
 20527                           
 20528                           ; BSR set to: 15
 20529                           ;inc\CANlib.h: 454: else
 20530                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 20531  0126C8  010F               	movlb	15	; () banked
 20532  0126CA  9D25               	bcf	37,6,b	;volatile
 20533  0126CC                     i2l414:
 20534                           
 20535                           ; BSR set to: 15
 20536                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 20537  0126CC  A63F               	btfss	i2CANsendMessage@flags,3,c
 20538  0126CE  D066               	goto	i2l415
 20539                           
 20540                           ; BSR set to: 15
 20541                           ;inc\CANlib.h: 458: {
 20542                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 20543  0126D0  5038               	movf	i2CANsendMessage@identifier,w,c
 20544  0126D2  6E44               	movwf	i2CANsendMessage@tamp,c
 20545  0126D4  6A45               	clrf	i2CANsendMessage@tamp+1,c
 20546  0126D6  6A46               	clrf	i2CANsendMessage@tamp+2,c
 20547  0126D8  6A47               	clrf	i2CANsendMessage@tamp+3,c
 20548                           
 20549                           ; BSR set to: 15
 20550                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 20551  0126DA  C044  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 20552                           
 20553                           ; BSR set to: 15
 20554                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 20555  0126DE  0E00               	movlw	0
 20556  0126E0  1438               	andwf	i2CANsendMessage@identifier,w,c
 20557  0126E2  6E44               	movwf	i2CANsendMessage@tamp,c
 20558  0126E4  0EFF               	movlw	255
 20559  0126E6  1439               	andwf	i2CANsendMessage@identifier+1,w,c
 20560  0126E8  6E45               	movwf	i2CANsendMessage@tamp+1,c
 20561  0126EA  0E00               	movlw	0
 20562  0126EC  143A               	andwf	i2CANsendMessage@identifier+2,w,c
 20563  0126EE  6E46               	movwf	i2CANsendMessage@tamp+2,c
 20564  0126F0  0E00               	movlw	0
 20565  0126F2  143B               	andwf	i2CANsendMessage@identifier+3,w,c
 20566  0126F4  6E47               	movwf	i2CANsendMessage@tamp+3,c
 20567                           
 20568                           ; BSR set to: 15
 20569                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 20570  0126F6  C044  F040         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20571  0126FA  C045  F041         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20572  0126FE  C046  F042         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20573  012702  C047  F043         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20574  012706  C041  F040         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 20575  01270A  C042  F041         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 20576  01270E  C043  F042         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 20577  012712  6A43               	clrf	??i2_CANsendMessage+3,c
 20578  012714  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20579  012718  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20580  01271C  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20581  012720  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20582                           
 20583                           ; BSR set to: 15
 20584                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 20585  012724  C044  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 20586                           
 20587                           ; BSR set to: 15
 20588                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 20589  012728  0E00               	movlw	0
 20590  01272A  010F               	movlb	15	; () banked
 20591  01272C  6F22               	movwf	34,b	;volatile
 20592                           
 20593                           ; BSR set to: 15
 20594                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 20595  01272E  010F               	movlb	15	; () banked
 20596  012730  8722               	bsf	34,3,b	;volatile
 20597                           
 20598                           ; BSR set to: 15
 20599                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 20600  012732  A03A               	btfss	i2CANsendMessage@identifier+2,0,c
 20601  012734  D002               	goto	i2l416
 20602                           
 20603                           ; BSR set to: 15
 20604                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 20605  012736  010F               	movlb	15	; () banked
 20606  012738  8122               	bsf	34,0,b	;volatile
 20607  01273A                     i2l416:
 20608                           
 20609                           ; BSR set to: 15
 20610                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 20611  01273A  A23A               	btfss	i2CANsendMessage@identifier+2,1,c
 20612  01273C  D002               	goto	i2l417
 20613                           
 20614                           ; BSR set to: 15
 20615                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 20616  01273E  010F               	movlb	15	; () banked
 20617  012740  8322               	bsf	34,1,b	;volatile
 20618  012742                     i2l417:
 20619                           
 20620                           ; BSR set to: 15
 20621                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 20622  012742  A43A               	btfss	i2CANsendMessage@identifier+2,2,c
 20623  012744  D002               	goto	i2l418
 20624                           
 20625                           ; BSR set to: 15
 20626                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 20627  012746  010F               	movlb	15	; () banked
 20628  012748  8B22               	bsf	34,5,b	;volatile
 20629  01274A                     i2l418:
 20630                           
 20631                           ; BSR set to: 15
 20632                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 20633  01274A  A63A               	btfss	i2CANsendMessage@identifier+2,3,c
 20634  01274C  D002               	goto	i2l419
 20635                           
 20636                           ; BSR set to: 15
 20637                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 20638  01274E  010F               	movlb	15	; () banked
 20639  012750  8D22               	bsf	34,6,b	;volatile
 20640  012752                     i2l419:
 20641                           
 20642                           ; BSR set to: 15
 20643                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 20644  012752  A83A               	btfss	i2CANsendMessage@identifier+2,4,c
 20645  012754  D002               	goto	i2l7436
 20646                           
 20647                           ; BSR set to: 15
 20648                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 20649  012756  010F               	movlb	15	; () banked
 20650  012758  8F22               	bsf	34,7,b	;volatile
 20651  01275A                     i2l7436:
 20652                           
 20653                           ; BSR set to: 15
 20654                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 20655  01275A  C038  F040         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20656  01275E  C039  F041         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20657  012762  C03A  F042         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20658  012766  C03B  F043         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20659  01276A  0E16               	movlw	22
 20660  01276C  D005               	goto	i2u956_40
 20661  01276E                     i2u956_45:
 20662  01276E  90D8               	bcf	status,0,c
 20663  012770  3243               	rrcf	??i2_CANsendMessage+3,f,c
 20664  012772  3242               	rrcf	??i2_CANsendMessage+2,f,c
 20665  012774  3241               	rrcf	??i2_CANsendMessage+1,f,c
 20666  012776  3240               	rrcf	??i2_CANsendMessage,f,c
 20667  012778                     i2u956_40:
 20668  012778  2EE8               	decfsz	wreg,f,c
 20669  01277A  D7F9               	goto	i2u956_45
 20670  01277C  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20671  012780  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20672  012784  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20673  012788  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20674                           
 20675                           ; BSR set to: 15
 20676                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 20677  01278C  5044               	movf	i2CANsendMessage@tamp,w,c
 20678  01278E  6E44               	movwf	i2CANsendMessage@tamp,c
 20679  012790  6A45               	clrf	i2CANsendMessage@tamp+1,c
 20680  012792  6A46               	clrf	i2CANsendMessage@tamp+2,c
 20681  012794  6A47               	clrf	i2CANsendMessage@tamp+3,c
 20682                           
 20683                           ; BSR set to: 15
 20684                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 20685  012796  C044  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20686                           
 20687                           ;inc\CANlib.h: 483: }
 20688  01279A  D04D               	goto	i2l7456
 20689  01279C                     i2l415:
 20690                           
 20691                           ; BSR set to: 15
 20692                           ;inc\CANlib.h: 485: else
 20693                           ;inc\CANlib.h: 487: {
 20694                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 20695  01279C  010F               	movlb	15	; () banked
 20696  01279E  9722               	bcf	34,3,b	;volatile
 20697                           
 20698                           ; BSR set to: 15
 20699                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 20700  0127A0  C038  F040         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20701  0127A4  C039  F041         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20702  0127A8  C03A  F042         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20703  0127AC  C03B  F043         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20704  0127B0  0E04               	movlw	4
 20705  0127B2  D005               	goto	i2u957_40
 20706  0127B4                     i2u957_45:
 20707  0127B4  90D8               	bcf	status,0,c
 20708  0127B6  3243               	rrcf	??i2_CANsendMessage+3,f,c
 20709  0127B8  3242               	rrcf	??i2_CANsendMessage+2,f,c
 20710  0127BA  3241               	rrcf	??i2_CANsendMessage+1,f,c
 20711  0127BC  3240               	rrcf	??i2_CANsendMessage,f,c
 20712  0127BE                     i2u957_40:
 20713  0127BE  2EE8               	decfsz	wreg,f,c
 20714  0127C0  D7F9               	goto	i2u957_45
 20715  0127C2  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20716  0127C6  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20717  0127CA  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20718  0127CE  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20719                           
 20720                           ; BSR set to: 15
 20721                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 20722  0127D2  5044               	movf	i2CANsendMessage@tamp,w,c
 20723  0127D4  6E44               	movwf	i2CANsendMessage@tamp,c
 20724  0127D6  6A45               	clrf	i2CANsendMessage@tamp+1,c
 20725  0127D8  6A46               	clrf	i2CANsendMessage@tamp+2,c
 20726  0127DA  6A47               	clrf	i2CANsendMessage@tamp+3,c
 20727                           
 20728                           ; BSR set to: 15
 20729                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 20730  0127DC  C044  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20731                           
 20732                           ; BSR set to: 15
 20733                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 20734  0127E0  0E07               	movlw	7
 20735  0127E2  1438               	andwf	i2CANsendMessage@identifier,w,c
 20736  0127E4  6E44               	movwf	i2CANsendMessage@tamp,c
 20737  0127E6  0E00               	movlw	0
 20738  0127E8  1439               	andwf	i2CANsendMessage@identifier+1,w,c
 20739  0127EA  6E45               	movwf	i2CANsendMessage@tamp+1,c
 20740  0127EC  0E00               	movlw	0
 20741  0127EE  143A               	andwf	i2CANsendMessage@identifier+2,w,c
 20742  0127F0  6E46               	movwf	i2CANsendMessage@tamp+2,c
 20743  0127F2  0E00               	movlw	0
 20744  0127F4  143B               	andwf	i2CANsendMessage@identifier+3,w,c
 20745  0127F6  6E47               	movwf	i2CANsendMessage@tamp+3,c
 20746                           
 20747                           ; BSR set to: 15
 20748                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 20749  0127F8  C044  F040         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20750  0127FC  C045  F041         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20751  012800  C046  F042         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20752  012804  C047  F043         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20753  012808  0E05               	movlw	5
 20754  01280A                     i2u958_45:
 20755  01280A  90D8               	bcf	status,0,c
 20756  01280C  3640               	rlcf	??i2_CANsendMessage,f,c
 20757  01280E  3641               	rlcf	??i2_CANsendMessage+1,f,c
 20758  012810  3642               	rlcf	??i2_CANsendMessage+2,f,c
 20759  012812  3643               	rlcf	??i2_CANsendMessage+3,f,c
 20760  012814  2EE8               	decfsz	wreg,f,c
 20761  012816  D7F9               	goto	i2u958_45
 20762  012818  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20763  01281C  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20764  012820  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20765  012824  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20766                           
 20767                           ; BSR set to: 15
 20768                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 20769  012828  010F               	movlb	15	; () banked
 20770  01282A  5122               	movf	34,w,b	;volatile
 20771  01282C  0B1F               	andlw	31
 20772  01282E  010F               	movlb	15	; () banked
 20773  012830  6F22               	movwf	34,b	;volatile
 20774                           
 20775                           ; BSR set to: 15
 20776                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 20777  012832  C044  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 20778  012836                     i2l7456:
 20779                           
 20780                           ; BSR set to: 15
 20781                           ;inc\CANlib.h: 498: }
 20782                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 20783  012836  A03F               	btfss	i2CANsendMessage@flags,0,c
 20784  012838  D003               	goto	i2l422
 20785                           
 20786                           ; BSR set to: 15
 20787                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 20788  01283A  010F               	movlb	15	; () banked
 20789  01283C  8120               	bsf	32,0,b	;volatile
 20790  01283E  D002               	goto	i2l423
 20791  012840                     i2l422:
 20792                           
 20793                           ; BSR set to: 15
 20794                           ;inc\CANlib.h: 502: else
 20795                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 20796  012840  010F               	movlb	15	; () banked
 20797  012842  9120               	bcf	32,0,b	;volatile
 20798  012844                     i2l423:
 20799                           
 20800                           ; BSR set to: 15
 20801                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 20802  012844  A23F               	btfss	i2CANsendMessage@flags,1,c
 20803  012846  D003               	goto	i2l424
 20804                           
 20805                           ; BSR set to: 15
 20806                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 20807  012848  010F               	movlb	15	; () banked
 20808  01284A  8320               	bsf	32,1,b	;volatile
 20809  01284C  D002               	goto	i2l7462
 20810  01284E                     i2l424:
 20811                           
 20812                           ; BSR set to: 15
 20813                           ;inc\CANlib.h: 506: else
 20814                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 20815  01284E  010F               	movlb	15	; () banked
 20816  012850  9320               	bcf	32,1,b	;volatile
 20817  012852                     i2l7462:
 20818                           
 20819                           ; BSR set to: 15
 20820                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 20821  012852  C03C  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20822  012856  C03D  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20823  01285A  50DF               	movf	indf2,w,c
 20824  01285C  010F               	movlb	15	; () banked
 20825  01285E  6F26               	movwf	38,b	;volatile
 20826                           
 20827                           ; BSR set to: 15
 20828                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 20829  012860  EE20 F001          	lfsr	2,1
 20830  012864  503C               	movf	i2CANsendMessage@data,w,c
 20831  012866  26D9               	addwf	fsr2l,f,c
 20832  012868  503D               	movf	i2CANsendMessage@data+1,w,c
 20833  01286A  22DA               	addwfc	fsr2h,f,c
 20834  01286C  50DF               	movf	indf2,w,c
 20835  01286E  010F               	movlb	15	; () banked
 20836  012870  6F27               	movwf	39,b	;volatile
 20837                           
 20838                           ; BSR set to: 15
 20839                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 20840  012872  EE20 F002          	lfsr	2,2
 20841  012876  503C               	movf	i2CANsendMessage@data,w,c
 20842  012878  26D9               	addwf	fsr2l,f,c
 20843  01287A  503D               	movf	i2CANsendMessage@data+1,w,c
 20844  01287C  22DA               	addwfc	fsr2h,f,c
 20845  01287E  50DF               	movf	indf2,w,c
 20846  012880  010F               	movlb	15	; () banked
 20847  012882  6F28               	movwf	40,b	;volatile
 20848                           
 20849                           ; BSR set to: 15
 20850                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 20851  012884  EE20 F003          	lfsr	2,3
 20852  012888  503C               	movf	i2CANsendMessage@data,w,c
 20853  01288A  26D9               	addwf	fsr2l,f,c
 20854  01288C  503D               	movf	i2CANsendMessage@data+1,w,c
 20855  01288E  22DA               	addwfc	fsr2h,f,c
 20856  012890  50DF               	movf	indf2,w,c
 20857  012892  010F               	movlb	15	; () banked
 20858  012894  6F29               	movwf	41,b	;volatile
 20859                           
 20860                           ; BSR set to: 15
 20861                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 20862  012896  EE20 F004          	lfsr	2,4
 20863  01289A  503C               	movf	i2CANsendMessage@data,w,c
 20864  01289C  26D9               	addwf	fsr2l,f,c
 20865  01289E  503D               	movf	i2CANsendMessage@data+1,w,c
 20866  0128A0  22DA               	addwfc	fsr2h,f,c
 20867  0128A2  50DF               	movf	indf2,w,c
 20868  0128A4  010F               	movlb	15	; () banked
 20869  0128A6  6F2A               	movwf	42,b	;volatile
 20870                           
 20871                           ; BSR set to: 15
 20872                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 20873  0128A8  EE20 F005          	lfsr	2,5
 20874  0128AC  503C               	movf	i2CANsendMessage@data,w,c
 20875  0128AE  26D9               	addwf	fsr2l,f,c
 20876  0128B0  503D               	movf	i2CANsendMessage@data+1,w,c
 20877  0128B2  22DA               	addwfc	fsr2h,f,c
 20878  0128B4  50DF               	movf	indf2,w,c
 20879  0128B6  010F               	movlb	15	; () banked
 20880  0128B8  6F2B               	movwf	43,b	;volatile
 20881                           
 20882                           ; BSR set to: 15
 20883                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 20884  0128BA  EE20 F006          	lfsr	2,6
 20885  0128BE  503C               	movf	i2CANsendMessage@data,w,c
 20886  0128C0  26D9               	addwf	fsr2l,f,c
 20887  0128C2  503D               	movf	i2CANsendMessage@data+1,w,c
 20888  0128C4  22DA               	addwfc	fsr2h,f,c
 20889  0128C6  50DF               	movf	indf2,w,c
 20890  0128C8  010F               	movlb	15	; () banked
 20891  0128CA  6F2C               	movwf	44,b	;volatile
 20892                           
 20893                           ; BSR set to: 15
 20894                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 20895  0128CC  EE20 F007          	lfsr	2,7
 20896  0128D0  503C               	movf	i2CANsendMessage@data,w,c
 20897  0128D2  26D9               	addwf	fsr2l,f,c
 20898  0128D4  503D               	movf	i2CANsendMessage@data+1,w,c
 20899  0128D6  22DA               	addwfc	fsr2h,f,c
 20900  0128D8  50DF               	movf	indf2,w,c
 20901  0128DA  010F               	movlb	15	; () banked
 20902  0128DC  6F2D               	movwf	45,b	;volatile
 20903                           
 20904                           ; BSR set to: 15
 20905                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 20906  0128DE  010F               	movlb	15	; () banked
 20907  0128E0  8720               	bsf	32,3,b	;volatile
 20908                           
 20909                           ; BSR set to: 15
 20910                           ;inc\CANlib.h: 520: return;
 20911  0128E2  0012               	return	
 20912  0128E4                     __end_ofi2_CANsendMessage:
 20913                           	opt stack 0
 20914                           pclatu	equ	0xFFB
 20915                           pclath	equ	0xFFA
 20916                           tblptru	equ	0xFF8
 20917                           tblptrh	equ	0xFF7
 20918                           tblptrl	equ	0xFF6
 20919                           tablat	equ	0xFF5
 20920                           prodh	equ	0xFF4
 20921                           prodl	equ	0xFF3
 20922                           intcon	equ	0xFF2
 20923                           postinc0	equ	0xFEE
 20924                           fsr0h	equ	0xFEA
 20925                           fsr0l	equ	0xFE9
 20926                           wreg	equ	0xFE8
 20927                           indf1	equ	0xFE7
 20928                           plusw1	equ	0xFE3
 20929                           fsr1h	equ	0xFE2
 20930                           fsr1l	equ	0xFE1
 20931                           bsr	equ	0xFE0
 20932                           indf2	equ	0xFDF
 20933                           postinc2	equ	0xFDE
 20934                           plusw2	equ	0xFDB
 20935                           fsr2h	equ	0xFDA
 20936                           fsr2l	equ	0xFD9
 20937                           status	equ	0xFD8
 20938                           
 20939 ;; *************** function i2_CANisTxReady *****************
 20940 ;; Defined at:
 20941 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 20942 ;; Parameters:    Size  Location     Type
 20943 ;;		None
 20944 ;; Auto vars:     Size  Location     Type
 20945 ;;		None
 20946 ;; Return value:  Size  Location     Type
 20947 ;;                  1    wreg      unsigned char 
 20948 ;; Registers used:
 20949 ;;		wreg, status,2
 20950 ;; Tracked objects:
 20951 ;;		On entry : 0/0
 20952 ;;		On exit  : 0/0
 20953 ;;		Unchanged: 0/0
 20954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20959 ;;Total ram usage:        1 bytes
 20960 ;; Hardware stack levels used:    1
 20961 ;; This function calls:
 20962 ;;		Nothing
 20963 ;; This function is called by:
 20964 ;;		_ISR_alta
 20965 ;; This function uses a non-reentrant model
 20966 ;;
 20967                           
 20968                           	psect	text59
 20969  0163E0                     __ptext59:
 20970                           	opt stack 0
 20971  0163E0                     i2_CANisTxReady:
 20972                           	opt stack 20
 20973                           
 20974                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 20975                           
 20976                           ; BSR set to: 15
 20977                           ;incstack = 0
 20978  0163E0  0E01               	movlw	1
 20979  0163E2  6E38               	movwf	i2_CANisTxReady$3251,c
 20980  0163E4  010F               	movlb	15	; () banked
 20981  0163E6  A740               	btfss	64,3,b	;volatile
 20982  0163E8  D008               	goto	i2l576
 20983                           
 20984                           ; BSR set to: 15
 20985  0163EA  010F               	movlb	15	; () banked
 20986  0163EC  A730               	btfss	48,3,b	;volatile
 20987  0163EE  D005               	goto	i2l576
 20988                           
 20989                           ; BSR set to: 15
 20990  0163F0  010F               	movlb	15	; () banked
 20991  0163F2  A720               	btfss	32,3,b	;volatile
 20992  0163F4  D002               	goto	i2l576
 20993                           
 20994                           ; BSR set to: 15
 20995  0163F6  0E00               	movlw	0
 20996  0163F8  6E38               	movwf	i2_CANisTxReady$3251,c
 20997  0163FA                     i2l576:
 20998                           
 20999                           ; BSR set to: 15
 21000  0163FA  5038               	movf	i2_CANisTxReady$3251,w,c
 21001  0163FC  0012               	return	
 21002  0163FE                     __end_ofi2_CANisTxReady:
 21003                           	opt stack 0
 21004                           pclatu	equ	0xFFB
 21005                           pclath	equ	0xFFA
 21006                           tblptru	equ	0xFF8
 21007                           tblptrh	equ	0xFF7
 21008                           tblptrl	equ	0xFF6
 21009                           tablat	equ	0xFF5
 21010                           prodh	equ	0xFF4
 21011                           prodl	equ	0xFF3
 21012                           intcon	equ	0xFF2
 21013                           postinc0	equ	0xFEE
 21014                           fsr0h	equ	0xFEA
 21015                           fsr0l	equ	0xFE9
 21016                           wreg	equ	0xFE8
 21017                           indf1	equ	0xFE7
 21018                           plusw1	equ	0xFE3
 21019                           fsr1h	equ	0xFE2
 21020                           fsr1l	equ	0xFE1
 21021                           bsr	equ	0xFE0
 21022                           indf2	equ	0xFDF
 21023                           postinc2	equ	0xFDE
 21024                           plusw2	equ	0xFDB
 21025                           fsr2h	equ	0xFDA
 21026                           fsr2l	equ	0xFD9
 21027                           status	equ	0xFD8
 21028                           
 21029 ;; *************** function _CANreceiveMessage *****************
 21030 ;; Defined at:
 21031 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 21032 ;; Parameters:    Size  Location     Type
 21033 ;;  msg             2   17[COMRAM] PTR struct .
 21034 ;;		 -> msg(15), 
 21035 ;; Auto vars:     Size  Location     Type
 21036 ;;  tamp            1   28[COMRAM] unsigned char 
 21037 ;;  error           1   27[COMRAM] unsigned char 
 21038 ;; Return value:  Size  Location     Type
 21039 ;;                  1    wreg      unsigned char 
 21040 ;; Registers used:
 21041 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21042 ;; Tracked objects:
 21043 ;;		On entry : 0/0
 21044 ;;		On exit  : 0/0
 21045 ;;		Unchanged: 0/0
 21046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21048 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21049 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21050 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21051 ;;Total ram usage:       12 bytes
 21052 ;; Hardware stack levels used:    1
 21053 ;; This function calls:
 21054 ;;		Nothing
 21055 ;; This function is called by:
 21056 ;;		_ISR_alta
 21057 ;; This function uses a non-reentrant model
 21058 ;;
 21059                           
 21060                           	psect	text60
 21061  012DFE                     __ptext60:
 21062                           	opt stack 0
 21063  012DFE                     _CANreceiveMessage:
 21064                           	opt stack 20
 21065                           
 21066                           ;inc\CANlib.h: 530: BYTE tamp;
 21067                           ;inc\CANlib.h: 531: BYTE error = 0;
 21068                           
 21069                           ; BSR set to: 15
 21070                           ;incstack = 0
 21071  012DFE  0E00               	movlw	0
 21072  012E00  6E42               	movwf	CANreceiveMessage@error,c
 21073                           
 21074                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 21075  012E02  BE74               	btfsc	3956,7,c	;volatile
 21076                           
 21077                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 21078  012E04  8042               	bsf	CANreceiveMessage@error,0,c
 21079                           
 21080                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 21081  012E06  BC74               	btfsc	3956,6,c	;volatile
 21082                           
 21083                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 21084  012E08  8242               	bsf	CANreceiveMessage@error,1,c
 21085                           
 21086                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 21087  012E0A  010F               	movlb	15	; () banked
 21088  012E0C  AF50               	btfss	80,7,b	;volatile
 21089  012E0E  D143               	goto	i2l430
 21090                           
 21091                           ; BSR set to: 15
 21092                           ;inc\CANlib.h: 541: {
 21093                           ;inc\CANlib.h: 542: msg->identifier = 0;
 21094  012E10  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21095  012E14  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21096  012E18  6ADE               	clrf	postinc2,c
 21097  012E1A  6ADE               	clrf	postinc2,c
 21098  012E1C  6ADE               	clrf	postinc2,c
 21099  012E1E  6ADD               	clrf	postdec2,c
 21100                           
 21101                           ; BSR set to: 15
 21102                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 21103  012E20  EE20 F004          	lfsr	2,4
 21104  012E24  5038               	movf	CANreceiveMessage@msg,w,c
 21105  012E26  26D9               	addwf	fsr2l,f,c
 21106  012E28  5039               	movf	CANreceiveMessage@msg+1,w,c
 21107  012E2A  22DA               	addwfc	fsr2h,f,c
 21108  012E2C  CF56 FFDF          	movff	3926,indf2	;volatile
 21109                           
 21110                           ; BSR set to: 15
 21111                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 21112  012E30  EE20 F005          	lfsr	2,5
 21113  012E34  5038               	movf	CANreceiveMessage@msg,w,c
 21114  012E36  26D9               	addwf	fsr2l,f,c
 21115  012E38  5039               	movf	CANreceiveMessage@msg+1,w,c
 21116  012E3A  22DA               	addwfc	fsr2h,f,c
 21117  012E3C  CF57 FFDF          	movff	3927,indf2	;volatile
 21118                           
 21119                           ; BSR set to: 15
 21120                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 21121  012E40  EE20 F006          	lfsr	2,6
 21122  012E44  5038               	movf	CANreceiveMessage@msg,w,c
 21123  012E46  26D9               	addwf	fsr2l,f,c
 21124  012E48  5039               	movf	CANreceiveMessage@msg+1,w,c
 21125  012E4A  22DA               	addwfc	fsr2h,f,c
 21126  012E4C  CF58 FFDF          	movff	3928,indf2	;volatile
 21127                           
 21128                           ; BSR set to: 15
 21129                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 21130  012E50  EE20 F007          	lfsr	2,7
 21131  012E54  5038               	movf	CANreceiveMessage@msg,w,c
 21132  012E56  26D9               	addwf	fsr2l,f,c
 21133  012E58  5039               	movf	CANreceiveMessage@msg+1,w,c
 21134  012E5A  22DA               	addwfc	fsr2h,f,c
 21135  012E5C  CF59 FFDF          	movff	3929,indf2	;volatile
 21136                           
 21137                           ; BSR set to: 15
 21138                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 21139  012E60  EE20 F008          	lfsr	2,8
 21140  012E64  5038               	movf	CANreceiveMessage@msg,w,c
 21141  012E66  26D9               	addwf	fsr2l,f,c
 21142  012E68  5039               	movf	CANreceiveMessage@msg+1,w,c
 21143  012E6A  22DA               	addwfc	fsr2h,f,c
 21144  012E6C  CF5A FFDF          	movff	3930,indf2	;volatile
 21145                           
 21146                           ; BSR set to: 15
 21147                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 21148  012E70  EE20 F009          	lfsr	2,9
 21149  012E74  5038               	movf	CANreceiveMessage@msg,w,c
 21150  012E76  26D9               	addwf	fsr2l,f,c
 21151  012E78  5039               	movf	CANreceiveMessage@msg+1,w,c
 21152  012E7A  22DA               	addwfc	fsr2h,f,c
 21153  012E7C  CF5B FFDF          	movff	3931,indf2	;volatile
 21154                           
 21155                           ; BSR set to: 15
 21156                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 21157  012E80  EE20 F00A          	lfsr	2,10
 21158  012E84  5038               	movf	CANreceiveMessage@msg,w,c
 21159  012E86  26D9               	addwf	fsr2l,f,c
 21160  012E88  5039               	movf	CANreceiveMessage@msg+1,w,c
 21161  012E8A  22DA               	addwfc	fsr2h,f,c
 21162  012E8C  CF5C FFDF          	movff	3932,indf2	;volatile
 21163                           
 21164                           ; BSR set to: 15
 21165                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 21166  012E90  EE20 F00B          	lfsr	2,11
 21167  012E94  5038               	movf	CANreceiveMessage@msg,w,c
 21168  012E96  26D9               	addwf	fsr2l,f,c
 21169  012E98  5039               	movf	CANreceiveMessage@msg+1,w,c
 21170  012E9A  22DA               	addwfc	fsr2h,f,c
 21171  012E9C  CF5D FFDF          	movff	3933,indf2	;volatile
 21172                           
 21173                           ; BSR set to: 15
 21174                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 21175  012EA0  EE20 F00E          	lfsr	2,14
 21176  012EA4  5038               	movf	CANreceiveMessage@msg,w,c
 21177  012EA6  26D9               	addwf	fsr2l,f,c
 21178  012EA8  5039               	movf	CANreceiveMessage@msg+1,w,c
 21179  012EAA  22DA               	addwfc	fsr2h,f,c
 21180  012EAC  010F               	movlb	15	; () banked
 21181  012EAE  AD55               	btfss	85,6,b	;volatile
 21182  012EB0  D002               	goto	i2u865_40
 21183  012EB2  0E01               	movlw	1
 21184  012EB4  D001               	goto	i2u865_46
 21185  012EB6                     i2u865_40:
 21186  012EB6  0E00               	movlw	0
 21187  012EB8                     i2u865_46:
 21188  012EB8  6EDF               	movwf	indf2,c
 21189                           
 21190                           ; BSR set to: 15
 21191                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 21192  012EBA  EE20 F00D          	lfsr	2,13
 21193  012EBE  5038               	movf	CANreceiveMessage@msg,w,c
 21194  012EC0  26D9               	addwf	fsr2l,f,c
 21195  012EC2  5039               	movf	CANreceiveMessage@msg+1,w,c
 21196  012EC4  22DA               	addwfc	fsr2h,f,c
 21197  012EC6  010F               	movlb	15	; () banked
 21198  012EC8  5155               	movf	85,w,b	;volatile
 21199  012ECA  0B0F               	andlw	15
 21200  012ECC  6EDF               	movwf	indf2,c
 21201                           
 21202                           ; BSR set to: 15
 21203                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 21204  012ECE  EE20 F00C          	lfsr	2,12
 21205  012ED2  5038               	movf	CANreceiveMessage@msg,w,c
 21206  012ED4  26D9               	addwf	fsr2l,f,c
 21207  012ED6  5039               	movf	CANreceiveMessage@msg+1,w,c
 21208  012ED8  22DA               	addwfc	fsr2h,f,c
 21209  012EDA  010F               	movlb	15	; () banked
 21210  012EDC  A752               	btfss	82,3,b	;volatile
 21211  012EDE  D002               	goto	i2u866_40
 21212  012EE0  0E01               	movlw	1
 21213  012EE2  D001               	goto	i2u866_46
 21214  012EE4                     i2u866_40:
 21215  012EE4  0E00               	movlw	0
 21216  012EE6                     i2u866_46:
 21217  012EE6  6EDF               	movwf	indf2,c
 21218                           
 21219                           ; BSR set to: 15
 21220                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 21221  012EE8  010F               	movlb	15	; () banked
 21222  012EEA  B752               	btfsc	82,3,b	;volatile
 21223  012EEC  D044               	goto	i2l6890
 21224                           
 21225                           ; BSR set to: 15
 21226                           ;inc\CANlib.h: 559: {
 21227                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 21228  012EEE  CF51 F03A          	movff	3921,??_CANreceiveMessage	;volatile
 21229  012EF2  6A3B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21230  012EF4  6A3C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21231  012EF6  6A3D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21232  012EF8  0E03               	movlw	3
 21233  012EFA                     i2u868_45:
 21234  012EFA  90D8               	bcf	status,0,c
 21235  012EFC  363A               	rlcf	??_CANreceiveMessage,f,c
 21236  012EFE  363B               	rlcf	??_CANreceiveMessage+1,f,c
 21237  012F00  363C               	rlcf	??_CANreceiveMessage+2,f,c
 21238  012F02  363D               	rlcf	??_CANreceiveMessage+3,f,c
 21239  012F04  2EE8               	decfsz	wreg,f,c
 21240  012F06  D7F9               	goto	i2u868_45
 21241  012F08  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21242  012F0C  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21243  012F10  C03A  FFDE         	movff	??_CANreceiveMessage,postinc2
 21244  012F14  C03B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21245  012F18  C03C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21246  012F1C  C03D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21247                           
 21248                           ; BSR set to: 15
 21249                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 21250  012F20  010F               	movlb	15	; () banked
 21251  012F22  3952               	swapf	82,w,b	;volatile
 21252  012F24  42E8               	rrncf	wreg,f,c
 21253  012F26  0B07               	andlw	7
 21254  012F28  0B07               	andlw	7
 21255  012F2A  6E43               	movwf	CANreceiveMessage@tamp,c
 21256                           
 21257                           ; BSR set to: 15
 21258                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 21259  012F2C  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21260  012F30  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21261  012F34  CFDE F03A          	movff	postinc2,??_CANreceiveMessage
 21262  012F38  CFDE F03B          	movff	postinc2,??_CANreceiveMessage+1
 21263  012F3C  CFDE F03C          	movff	postinc2,??_CANreceiveMessage+2
 21264  012F40  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+3
 21265  012F44  5043               	movf	CANreceiveMessage@tamp,w,c
 21266  012F46  243A               	addwf	??_CANreceiveMessage,w,c
 21267  012F48  6E3E               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 21268  012F4A  0E00               	movlw	0
 21269  012F4C  203B               	addwfc	??_CANreceiveMessage+1,w,c
 21270  012F4E  6E3F               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 21271  012F50  0E00               	movlw	0
 21272  012F52  203C               	addwfc	??_CANreceiveMessage+2,w,c
 21273  012F54  6E40               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 21274  012F56  0E00               	movlw	0
 21275  012F58  203D               	addwfc	??_CANreceiveMessage+3,w,c
 21276  012F5A  6E41               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 21277  012F5C  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21278  012F60  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21279  012F64  C03E  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 21280  012F68  C03F  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 21281  012F6C  C040  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 21282  012F70  C041  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 21283                           
 21284                           ;inc\CANlib.h: 563: }
 21285  012F74  D08D               	goto	i2l6916
 21286  012F76                     i2l6890:
 21287                           
 21288                           ; BSR set to: 15
 21289                           ;inc\CANlib.h: 564: else
 21290                           ;inc\CANlib.h: 565: {
 21291                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 21292  012F76  CF54 F03A          	movff	3924,??_CANreceiveMessage	;volatile
 21293  012F7A  6A3B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21294  012F7C  6A3C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21295  012F7E  6A3D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21296  012F80  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21297  012F84  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21298  012F88  C03A  FFDE         	movff	??_CANreceiveMessage,postinc2
 21299  012F8C  C03B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21300  012F90  C03C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21301  012F94  C03D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21302                           
 21303                           ; BSR set to: 15
 21304                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 21305  012F98  CF53 F03A          	movff	3923,??_CANreceiveMessage	;volatile
 21306  012F9C  6A3B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21307  012F9E  6A3C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21308  012FA0  6A3D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21309  012FA2  C03C  F03D         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 21310  012FA6  C03B  F03C         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 21311  012FAA  C03A  F03B         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 21312  012FAE  6A3A               	clrf	??_CANreceiveMessage,c
 21313  012FB0  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21314  012FB4  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21315  012FB8  503A               	movf	??_CANreceiveMessage,w,c
 21316  012FBA  26DE               	addwf	postinc2,f,c
 21317  012FBC  503B               	movf	??_CANreceiveMessage+1,w,c
 21318  012FBE  22DE               	addwfc	postinc2,f,c
 21319  012FC0  503C               	movf	??_CANreceiveMessage+2,w,c
 21320  012FC2  22DE               	addwfc	postinc2,f,c
 21321  012FC4  503D               	movf	??_CANreceiveMessage+3,w,c
 21322  012FC6  22DE               	addwfc	postinc2,f,c
 21323                           
 21324                           ; BSR set to: 15
 21325                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 21326  012FC8  010F               	movlb	15	; () banked
 21327  012FCA  A152               	btfss	82,0,b	;volatile
 21328  012FCC  D00C               	goto	i2l6898
 21329                           
 21330                           ; BSR set to: 15
 21331                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 21332  012FCE  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21333  012FD2  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21334  012FD6  0E00               	movlw	0
 21335  012FD8  12DE               	iorwf	postinc2,f,c
 21336  012FDA  0E00               	movlw	0
 21337  012FDC  12DE               	iorwf	postinc2,f,c
 21338  012FDE  0E01               	movlw	1
 21339  012FE0  12DE               	iorwf	postinc2,f,c
 21340  012FE2  0E00               	movlw	0
 21341  012FE4  12DE               	iorwf	postinc2,f,c
 21342  012FE6                     i2l6898:
 21343                           
 21344                           ; BSR set to: 15
 21345                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 21346  012FE6  010F               	movlb	15	; () banked
 21347  012FE8  A352               	btfss	82,1,b	;volatile
 21348  012FEA  D00C               	goto	i2l6902
 21349                           
 21350                           ; BSR set to: 15
 21351                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 21352  012FEC  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21353  012FF0  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21354  012FF4  0E00               	movlw	0
 21355  012FF6  12DE               	iorwf	postinc2,f,c
 21356  012FF8  0E00               	movlw	0
 21357  012FFA  12DE               	iorwf	postinc2,f,c
 21358  012FFC  0E02               	movlw	2
 21359  012FFE  12DE               	iorwf	postinc2,f,c
 21360  013000  0E00               	movlw	0
 21361  013002  12DE               	iorwf	postinc2,f,c
 21362  013004                     i2l6902:
 21363                           
 21364                           ; BSR set to: 15
 21365                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 21366  013004  010F               	movlb	15	; () banked
 21367  013006  AB52               	btfss	82,5,b	;volatile
 21368  013008  D00C               	goto	i2l6906
 21369                           
 21370                           ; BSR set to: 15
 21371                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 21372  01300A  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21373  01300E  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21374  013012  0E00               	movlw	0
 21375  013014  12DE               	iorwf	postinc2,f,c
 21376  013016  0E00               	movlw	0
 21377  013018  12DE               	iorwf	postinc2,f,c
 21378  01301A  0E04               	movlw	4
 21379  01301C  12DE               	iorwf	postinc2,f,c
 21380  01301E  0E00               	movlw	0
 21381  013020  12DE               	iorwf	postinc2,f,c
 21382  013022                     i2l6906:
 21383                           
 21384                           ; BSR set to: 15
 21385                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 21386  013022  010F               	movlb	15	; () banked
 21387  013024  AD52               	btfss	82,6,b	;volatile
 21388  013026  D00C               	goto	i2l6910
 21389                           
 21390                           ; BSR set to: 15
 21391                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 21392  013028  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21393  01302C  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21394  013030  0E00               	movlw	0
 21395  013032  12DE               	iorwf	postinc2,f,c
 21396  013034  0E00               	movlw	0
 21397  013036  12DE               	iorwf	postinc2,f,c
 21398  013038  0E08               	movlw	8
 21399  01303A  12DE               	iorwf	postinc2,f,c
 21400  01303C  0E00               	movlw	0
 21401  01303E  12DE               	iorwf	postinc2,f,c
 21402  013040                     i2l6910:
 21403                           
 21404                           ; BSR set to: 15
 21405                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 21406  013040  010F               	movlb	15	; () banked
 21407  013042  AF52               	btfss	82,7,b	;volatile
 21408  013044  D00C               	goto	i2l6914
 21409                           
 21410                           ; BSR set to: 15
 21411                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 21412  013046  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21413  01304A  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21414  01304E  0E00               	movlw	0
 21415  013050  12DE               	iorwf	postinc2,f,c
 21416  013052  0E00               	movlw	0
 21417  013054  12DE               	iorwf	postinc2,f,c
 21418  013056  0E10               	movlw	16
 21419  013058  12DE               	iorwf	postinc2,f,c
 21420  01305A  0E00               	movlw	0
 21421  01305C  12DE               	iorwf	postinc2,f,c
 21422  01305E                     i2l6914:
 21423                           
 21424                           ; BSR set to: 15
 21425                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 21426  01305E  CF51 F03A          	movff	3921,??_CANreceiveMessage	;volatile
 21427  013062  6A3B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21428  013064  6A3C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21429  013066  6A3D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21430  013068  0E15               	movlw	21
 21431  01306A                     i2u874_45:
 21432  01306A  90D8               	bcf	status,0,c
 21433  01306C  363A               	rlcf	??_CANreceiveMessage,f,c
 21434  01306E  363B               	rlcf	??_CANreceiveMessage+1,f,c
 21435  013070  363C               	rlcf	??_CANreceiveMessage+2,f,c
 21436  013072  363D               	rlcf	??_CANreceiveMessage+3,f,c
 21437  013074  2EE8               	decfsz	wreg,f,c
 21438  013076  D7F9               	goto	i2u874_45
 21439  013078  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21440  01307C  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21441  013080  503A               	movf	??_CANreceiveMessage,w,c
 21442  013082  12DE               	iorwf	postinc2,f,c
 21443  013084  503B               	movf	??_CANreceiveMessage+1,w,c
 21444  013086  12DE               	iorwf	postinc2,f,c
 21445  013088  503C               	movf	??_CANreceiveMessage+2,w,c
 21446  01308A  12DE               	iorwf	postinc2,f,c
 21447  01308C  503D               	movf	??_CANreceiveMessage+3,w,c
 21448  01308E  12DE               	iorwf	postinc2,f,c
 21449  013090                     i2l6916:
 21450                           
 21451                           ; BSR set to: 15
 21452                           ;inc\CANlib.h: 581: }
 21453                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 21454  013090  010F               	movlb	15	; () banked
 21455  013092  9F50               	bcf	80,7,b	;volatile
 21456                           
 21457                           ; BSR set to: 15
 21458                           ;inc\CANlib.h: 584: return (error);
 21459                           ;	Return value of _CANreceiveMessage is never used
 21460  013094  0012               	return	
 21461  013096                     i2l430:
 21462                           
 21463                           ; BSR set to: 15
 21464                           ;inc\CANlib.h: 585: }
 21465                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 21466  013096  AE60               	btfss	3936,7,c	;volatile
 21467  013098  0012               	return	
 21468                           
 21469                           ; BSR set to: 15
 21470                           ;inc\CANlib.h: 588: {
 21471                           ;inc\CANlib.h: 589: msg->identifier = 0;
 21472  01309A  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21473  01309E  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21474  0130A2  6ADE               	clrf	postinc2,c
 21475  0130A4  6ADE               	clrf	postinc2,c
 21476  0130A6  6ADE               	clrf	postinc2,c
 21477  0130A8  6ADD               	clrf	postdec2,c
 21478                           
 21479                           ; BSR set to: 15
 21480                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 21481  0130AA  EE20 F004          	lfsr	2,4
 21482  0130AE  5038               	movf	CANreceiveMessage@msg,w,c
 21483  0130B0  26D9               	addwf	fsr2l,f,c
 21484  0130B2  5039               	movf	CANreceiveMessage@msg+1,w,c
 21485  0130B4  22DA               	addwfc	fsr2h,f,c
 21486  0130B6  CF66 FFDF          	movff	3942,indf2	;volatile
 21487                           
 21488                           ; BSR set to: 15
 21489                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 21490  0130BA  EE20 F005          	lfsr	2,5
 21491  0130BE  5038               	movf	CANreceiveMessage@msg,w,c
 21492  0130C0  26D9               	addwf	fsr2l,f,c
 21493  0130C2  5039               	movf	CANreceiveMessage@msg+1,w,c
 21494  0130C4  22DA               	addwfc	fsr2h,f,c
 21495  0130C6  CF67 FFDF          	movff	3943,indf2	;volatile
 21496                           
 21497                           ; BSR set to: 15
 21498                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 21499  0130CA  EE20 F006          	lfsr	2,6
 21500  0130CE  5038               	movf	CANreceiveMessage@msg,w,c
 21501  0130D0  26D9               	addwf	fsr2l,f,c
 21502  0130D2  5039               	movf	CANreceiveMessage@msg+1,w,c
 21503  0130D4  22DA               	addwfc	fsr2h,f,c
 21504  0130D6  CF68 FFDF          	movff	3944,indf2	;volatile
 21505                           
 21506                           ; BSR set to: 15
 21507                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 21508  0130DA  EE20 F007          	lfsr	2,7
 21509  0130DE  5038               	movf	CANreceiveMessage@msg,w,c
 21510  0130E0  26D9               	addwf	fsr2l,f,c
 21511  0130E2  5039               	movf	CANreceiveMessage@msg+1,w,c
 21512  0130E4  22DA               	addwfc	fsr2h,f,c
 21513  0130E6  CF69 FFDF          	movff	3945,indf2	;volatile
 21514                           
 21515                           ; BSR set to: 15
 21516                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 21517  0130EA  EE20 F008          	lfsr	2,8
 21518  0130EE  5038               	movf	CANreceiveMessage@msg,w,c
 21519  0130F0  26D9               	addwf	fsr2l,f,c
 21520  0130F2  5039               	movf	CANreceiveMessage@msg+1,w,c
 21521  0130F4  22DA               	addwfc	fsr2h,f,c
 21522  0130F6  CF6A FFDF          	movff	3946,indf2	;volatile
 21523                           
 21524                           ; BSR set to: 15
 21525                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 21526  0130FA  EE20 F009          	lfsr	2,9
 21527  0130FE  5038               	movf	CANreceiveMessage@msg,w,c
 21528  013100  26D9               	addwf	fsr2l,f,c
 21529  013102  5039               	movf	CANreceiveMessage@msg+1,w,c
 21530  013104  22DA               	addwfc	fsr2h,f,c
 21531  013106  CF6B FFDF          	movff	3947,indf2	;volatile
 21532                           
 21533                           ; BSR set to: 15
 21534                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 21535  01310A  EE20 F00A          	lfsr	2,10
 21536  01310E  5038               	movf	CANreceiveMessage@msg,w,c
 21537  013110  26D9               	addwf	fsr2l,f,c
 21538  013112  5039               	movf	CANreceiveMessage@msg+1,w,c
 21539  013114  22DA               	addwfc	fsr2h,f,c
 21540  013116  CF6C FFDF          	movff	3948,indf2	;volatile
 21541                           
 21542                           ; BSR set to: 15
 21543                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 21544  01311A  EE20 F00B          	lfsr	2,11
 21545  01311E  5038               	movf	CANreceiveMessage@msg,w,c
 21546  013120  26D9               	addwf	fsr2l,f,c
 21547  013122  5039               	movf	CANreceiveMessage@msg+1,w,c
 21548  013124  22DA               	addwfc	fsr2h,f,c
 21549  013126  CF6D FFDF          	movff	3949,indf2	;volatile
 21550                           
 21551                           ; BSR set to: 15
 21552                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 21553  01312A  EE20 F00E          	lfsr	2,14
 21554  01312E  5038               	movf	CANreceiveMessage@msg,w,c
 21555  013130  26D9               	addwf	fsr2l,f,c
 21556  013132  5039               	movf	CANreceiveMessage@msg+1,w,c
 21557  013134  22DA               	addwfc	fsr2h,f,c
 21558  013136  AC65               	btfss	3941,6,c	;volatile
 21559  013138  D002               	goto	i2u876_40
 21560  01313A  0E01               	movlw	1
 21561  01313C  D001               	goto	i2u876_46
 21562  01313E                     i2u876_40:
 21563  01313E  0E00               	movlw	0
 21564  013140                     i2u876_46:
 21565  013140  6EDF               	movwf	indf2,c
 21566                           
 21567                           ; BSR set to: 15
 21568                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 21569  013142  EE20 F00D          	lfsr	2,13
 21570  013146  5038               	movf	CANreceiveMessage@msg,w,c
 21571  013148  26D9               	addwf	fsr2l,f,c
 21572  01314A  5039               	movf	CANreceiveMessage@msg+1,w,c
 21573  01314C  22DA               	addwfc	fsr2h,f,c
 21574  01314E  5065               	movf	3941,w,c	;volatile
 21575  013150  0B0F               	andlw	15
 21576  013152  6EDF               	movwf	indf2,c
 21577                           
 21578                           ; BSR set to: 15
 21579                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 21580  013154  EE20 F00C          	lfsr	2,12
 21581  013158  5038               	movf	CANreceiveMessage@msg,w,c
 21582  01315A  26D9               	addwf	fsr2l,f,c
 21583  01315C  5039               	movf	CANreceiveMessage@msg+1,w,c
 21584  01315E  22DA               	addwfc	fsr2h,f,c
 21585  013160  A662               	btfss	3938,3,c	;volatile
 21586  013162  D002               	goto	i2u877_40
 21587  013164  0E01               	movlw	1
 21588  013166  D001               	goto	i2u877_46
 21589  013168                     i2u877_40:
 21590  013168  0E00               	movlw	0
 21591  01316A                     i2u877_46:
 21592  01316A  6EDF               	movwf	indf2,c
 21593                           
 21594                           ; BSR set to: 15
 21595                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 21596  01316C  B662               	btfsc	3938,3,c	;volatile
 21597  01316E  D043               	goto	i2l6952
 21598                           
 21599                           ; BSR set to: 15
 21600                           ;inc\CANlib.h: 606: {
 21601                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 21602  013170  CF61 F03A          	movff	3937,??_CANreceiveMessage	;volatile
 21603  013174  6A3B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21604  013176  6A3C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21605  013178  6A3D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21606  01317A  0E03               	movlw	3
 21607  01317C                     i2u879_45:
 21608  01317C  90D8               	bcf	status,0,c
 21609  01317E  363A               	rlcf	??_CANreceiveMessage,f,c
 21610  013180  363B               	rlcf	??_CANreceiveMessage+1,f,c
 21611  013182  363C               	rlcf	??_CANreceiveMessage+2,f,c
 21612  013184  363D               	rlcf	??_CANreceiveMessage+3,f,c
 21613  013186  2EE8               	decfsz	wreg,f,c
 21614  013188  D7F9               	goto	i2u879_45
 21615  01318A  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21616  01318E  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21617  013192  C03A  FFDE         	movff	??_CANreceiveMessage,postinc2
 21618  013196  C03B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21619  01319A  C03C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21620  01319E  C03D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21621                           
 21622                           ; BSR set to: 15
 21623                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 21624  0131A2  3862               	swapf	3938,w,c	;volatile
 21625  0131A4  42E8               	rrncf	wreg,f,c
 21626  0131A6  0B07               	andlw	7
 21627  0131A8  0B07               	andlw	7
 21628  0131AA  6E43               	movwf	CANreceiveMessage@tamp,c
 21629                           
 21630                           ; BSR set to: 15
 21631                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 21632  0131AC  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21633  0131B0  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21634  0131B4  CFDE F03A          	movff	postinc2,??_CANreceiveMessage
 21635  0131B8  CFDE F03B          	movff	postinc2,??_CANreceiveMessage+1
 21636  0131BC  CFDE F03C          	movff	postinc2,??_CANreceiveMessage+2
 21637  0131C0  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+3
 21638  0131C4  5043               	movf	CANreceiveMessage@tamp,w,c
 21639  0131C6  243A               	addwf	??_CANreceiveMessage,w,c
 21640  0131C8  6E3E               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 21641  0131CA  0E00               	movlw	0
 21642  0131CC  203B               	addwfc	??_CANreceiveMessage+1,w,c
 21643  0131CE  6E3F               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 21644  0131D0  0E00               	movlw	0
 21645  0131D2  203C               	addwfc	??_CANreceiveMessage+2,w,c
 21646  0131D4  6E40               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 21647  0131D6  0E00               	movlw	0
 21648  0131D8  203D               	addwfc	??_CANreceiveMessage+3,w,c
 21649  0131DA  6E41               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 21650  0131DC  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21651  0131E0  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21652  0131E4  C03E  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 21653  0131E8  C03F  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 21654  0131EC  C040  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 21655  0131F0  C041  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 21656                           
 21657                           ;inc\CANlib.h: 610: }
 21658  0131F4  D088               	goto	i2l6978
 21659  0131F6                     i2l6952:
 21660                           
 21661                           ; BSR set to: 15
 21662                           ;inc\CANlib.h: 611: else
 21663                           ;inc\CANlib.h: 612: {
 21664                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 21665  0131F6  CF64 F03A          	movff	3940,??_CANreceiveMessage	;volatile
 21666  0131FA  6A3B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21667  0131FC  6A3C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21668  0131FE  6A3D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21669  013200  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21670  013204  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21671  013208  C03A  FFDE         	movff	??_CANreceiveMessage,postinc2
 21672  01320C  C03B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21673  013210  C03C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21674  013214  C03D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21675                           
 21676                           ; BSR set to: 15
 21677                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 21678  013218  CF63 F03A          	movff	3939,??_CANreceiveMessage	;volatile
 21679  01321C  6A3B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21680  01321E  6A3C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21681  013220  6A3D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21682  013222  C03C  F03D         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 21683  013226  C03B  F03C         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 21684  01322A  C03A  F03B         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 21685  01322E  6A3A               	clrf	??_CANreceiveMessage,c
 21686  013230  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21687  013234  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21688  013238  503A               	movf	??_CANreceiveMessage,w,c
 21689  01323A  26DE               	addwf	postinc2,f,c
 21690  01323C  503B               	movf	??_CANreceiveMessage+1,w,c
 21691  01323E  22DE               	addwfc	postinc2,f,c
 21692  013240  503C               	movf	??_CANreceiveMessage+2,w,c
 21693  013242  22DE               	addwfc	postinc2,f,c
 21694  013244  503D               	movf	??_CANreceiveMessage+3,w,c
 21695  013246  22DE               	addwfc	postinc2,f,c
 21696                           
 21697                           ; BSR set to: 15
 21698                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 21699  013248  A062               	btfss	3938,0,c	;volatile
 21700  01324A  D00C               	goto	i2l6960
 21701                           
 21702                           ; BSR set to: 15
 21703                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 21704  01324C  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21705  013250  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21706  013254  0E00               	movlw	0
 21707  013256  12DE               	iorwf	postinc2,f,c
 21708  013258  0E00               	movlw	0
 21709  01325A  12DE               	iorwf	postinc2,f,c
 21710  01325C  0E01               	movlw	1
 21711  01325E  12DE               	iorwf	postinc2,f,c
 21712  013260  0E00               	movlw	0
 21713  013262  12DE               	iorwf	postinc2,f,c
 21714  013264                     i2l6960:
 21715                           
 21716                           ; BSR set to: 15
 21717                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 21718  013264  A262               	btfss	3938,1,c	;volatile
 21719  013266  D00C               	goto	i2l6964
 21720                           
 21721                           ; BSR set to: 15
 21722                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 21723  013268  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21724  01326C  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21725  013270  0E00               	movlw	0
 21726  013272  12DE               	iorwf	postinc2,f,c
 21727  013274  0E00               	movlw	0
 21728  013276  12DE               	iorwf	postinc2,f,c
 21729  013278  0E02               	movlw	2
 21730  01327A  12DE               	iorwf	postinc2,f,c
 21731  01327C  0E00               	movlw	0
 21732  01327E  12DE               	iorwf	postinc2,f,c
 21733  013280                     i2l6964:
 21734                           
 21735                           ; BSR set to: 15
 21736                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 21737  013280  AA62               	btfss	3938,5,c	;volatile
 21738  013282  D00C               	goto	i2l6968
 21739                           
 21740                           ; BSR set to: 15
 21741                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 21742  013284  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21743  013288  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21744  01328C  0E00               	movlw	0
 21745  01328E  12DE               	iorwf	postinc2,f,c
 21746  013290  0E00               	movlw	0
 21747  013292  12DE               	iorwf	postinc2,f,c
 21748  013294  0E04               	movlw	4
 21749  013296  12DE               	iorwf	postinc2,f,c
 21750  013298  0E00               	movlw	0
 21751  01329A  12DE               	iorwf	postinc2,f,c
 21752  01329C                     i2l6968:
 21753                           
 21754                           ; BSR set to: 15
 21755                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 21756  01329C  AC62               	btfss	3938,6,c	;volatile
 21757  01329E  D00C               	goto	i2l6972
 21758                           
 21759                           ; BSR set to: 15
 21760                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 21761  0132A0  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21762  0132A4  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21763  0132A8  0E00               	movlw	0
 21764  0132AA  12DE               	iorwf	postinc2,f,c
 21765  0132AC  0E00               	movlw	0
 21766  0132AE  12DE               	iorwf	postinc2,f,c
 21767  0132B0  0E08               	movlw	8
 21768  0132B2  12DE               	iorwf	postinc2,f,c
 21769  0132B4  0E00               	movlw	0
 21770  0132B6  12DE               	iorwf	postinc2,f,c
 21771  0132B8                     i2l6972:
 21772                           
 21773                           ; BSR set to: 15
 21774                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 21775  0132B8  AE62               	btfss	3938,7,c	;volatile
 21776  0132BA  D00C               	goto	i2l6976
 21777                           
 21778                           ; BSR set to: 15
 21779                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 21780  0132BC  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21781  0132C0  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21782  0132C4  0E00               	movlw	0
 21783  0132C6  12DE               	iorwf	postinc2,f,c
 21784  0132C8  0E00               	movlw	0
 21785  0132CA  12DE               	iorwf	postinc2,f,c
 21786  0132CC  0E10               	movlw	16
 21787  0132CE  12DE               	iorwf	postinc2,f,c
 21788  0132D0  0E00               	movlw	0
 21789  0132D2  12DE               	iorwf	postinc2,f,c
 21790  0132D4                     i2l6976:
 21791                           
 21792                           ; BSR set to: 15
 21793                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 21794  0132D4  CF61 F03A          	movff	3937,??_CANreceiveMessage	;volatile
 21795  0132D8  6A3B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21796  0132DA  6A3C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21797  0132DC  6A3D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21798  0132DE  0E15               	movlw	21
 21799  0132E0                     i2u885_45:
 21800  0132E0  90D8               	bcf	status,0,c
 21801  0132E2  363A               	rlcf	??_CANreceiveMessage,f,c
 21802  0132E4  363B               	rlcf	??_CANreceiveMessage+1,f,c
 21803  0132E6  363C               	rlcf	??_CANreceiveMessage+2,f,c
 21804  0132E8  363D               	rlcf	??_CANreceiveMessage+3,f,c
 21805  0132EA  2EE8               	decfsz	wreg,f,c
 21806  0132EC  D7F9               	goto	i2u885_45
 21807  0132EE  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21808  0132F2  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21809  0132F6  503A               	movf	??_CANreceiveMessage,w,c
 21810  0132F8  12DE               	iorwf	postinc2,f,c
 21811  0132FA  503B               	movf	??_CANreceiveMessage+1,w,c
 21812  0132FC  12DE               	iorwf	postinc2,f,c
 21813  0132FE  503C               	movf	??_CANreceiveMessage+2,w,c
 21814  013300  12DE               	iorwf	postinc2,f,c
 21815  013302  503D               	movf	??_CANreceiveMessage+3,w,c
 21816  013304  12DE               	iorwf	postinc2,f,c
 21817  013306                     i2l6978:
 21818                           
 21819                           ; BSR set to: 15
 21820                           ;inc\CANlib.h: 629: }
 21821                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 21822  013306  9E60               	bcf	3936,7,c	;volatile
 21823                           
 21824                           ; BSR set to: 15
 21825                           ;inc\CANlib.h: 632: return (error);
 21826                           ;	Return value of _CANreceiveMessage is never used
 21827  013308  0012               	return	
 21828  01330A                     __end_of_CANreceiveMessage:
 21829                           	opt stack 0
 21830                           pclatu	equ	0xFFB
 21831                           pclath	equ	0xFFA
 21832                           tblptru	equ	0xFF8
 21833                           tblptrh	equ	0xFF7
 21834                           tblptrl	equ	0xFF6
 21835                           tablat	equ	0xFF5
 21836                           prodh	equ	0xFF4
 21837                           prodl	equ	0xFF3
 21838                           intcon	equ	0xFF2
 21839                           postinc0	equ	0xFEE
 21840                           fsr0h	equ	0xFEA
 21841                           fsr0l	equ	0xFE9
 21842                           wreg	equ	0xFE8
 21843                           indf1	equ	0xFE7
 21844                           plusw1	equ	0xFE3
 21845                           fsr1h	equ	0xFE2
 21846                           fsr1l	equ	0xFE1
 21847                           bsr	equ	0xFE0
 21848                           indf2	equ	0xFDF
 21849                           postinc2	equ	0xFDE
 21850                           postdec2	equ	0xFDD
 21851                           plusw2	equ	0xFDB
 21852                           fsr2h	equ	0xFDA
 21853                           fsr2l	equ	0xFD9
 21854                           status	equ	0xFD8
 21855                           
 21856 ;; *************** function _CANisRxReady *****************
 21857 ;; Defined at:
 21858 ;;		line 1163 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 21859 ;; Parameters:    Size  Location     Type
 21860 ;;		None
 21861 ;; Auto vars:     Size  Location     Type
 21862 ;;		None
 21863 ;; Return value:  Size  Location     Type
 21864 ;;                  1    wreg      unsigned char 
 21865 ;; Registers used:
 21866 ;;		wreg, status,2
 21867 ;; Tracked objects:
 21868 ;;		On entry : 0/0
 21869 ;;		On exit  : 0/0
 21870 ;;		Unchanged: 0/0
 21871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21876 ;;Total ram usage:        1 bytes
 21877 ;; Hardware stack levels used:    1
 21878 ;; This function calls:
 21879 ;;		Nothing
 21880 ;; This function is called by:
 21881 ;;		_ISR_alta
 21882 ;; This function uses a non-reentrant model
 21883 ;;
 21884                           
 21885                           	psect	text61
 21886  016484                     __ptext61:
 21887                           	opt stack 0
 21888  016484                     _CANisRxReady:
 21889                           	opt stack 20
 21890                           
 21891                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 21892                           
 21893                           ; BSR set to: 15
 21894                           ;incstack = 0
 21895  016484  0E01               	movlw	1
 21896  016486  6E38               	movwf	_CANisRxReady$3253,c
 21897  016488  BE60               	btfsc	3936,7,c	;volatile
 21898  01648A  D005               	goto	i2l581
 21899  01648C  010F               	movlb	15	; () banked
 21900  01648E  BF50               	btfsc	80,7,b	;volatile
 21901  016490  D002               	goto	i2l581
 21902                           
 21903                           ; BSR set to: 15
 21904  016492  0E00               	movlw	0
 21905  016494  6E38               	movwf	_CANisRxReady$3253,c
 21906  016496                     i2l581:
 21907  016496  5038               	movf	_CANisRxReady$3253,w,c
 21908  016498  0012               	return	
 21909  01649A                     __end_of_CANisRxReady:
 21910                           	opt stack 0
 21911                           pclatu	equ	0xFFB
 21912                           pclath	equ	0xFFA
 21913                           tblptru	equ	0xFF8
 21914                           tblptrh	equ	0xFF7
 21915                           tblptrl	equ	0xFF6
 21916                           tablat	equ	0xFF5
 21917                           prodh	equ	0xFF4
 21918                           prodl	equ	0xFF3
 21919                           intcon	equ	0xFF2
 21920                           postinc0	equ	0xFEE
 21921                           fsr0h	equ	0xFEA
 21922                           fsr0l	equ	0xFE9
 21923                           wreg	equ	0xFE8
 21924                           indf1	equ	0xFE7
 21925                           plusw1	equ	0xFE3
 21926                           fsr1h	equ	0xFE2
 21927                           fsr1l	equ	0xFE1
 21928                           bsr	equ	0xFE0
 21929                           indf2	equ	0xFDF
 21930                           postinc2	equ	0xFDE
 21931                           postdec2	equ	0xFDD
 21932                           plusw2	equ	0xFDB
 21933                           fsr2h	equ	0xFDA
 21934                           fsr2l	equ	0xFD9
 21935                           status	equ	0xFD8
 21936                           pclatu	equ	0xFFB
 21937                           pclath	equ	0xFFA
 21938                           tblptru	equ	0xFF8
 21939                           tblptrh	equ	0xFF7
 21940                           tblptrl	equ	0xFF6
 21941                           tablat	equ	0xFF5
 21942                           prodh	equ	0xFF4
 21943                           prodl	equ	0xFF3
 21944                           intcon	equ	0xFF2
 21945                           postinc0	equ	0xFEE
 21946                           fsr0h	equ	0xFEA
 21947                           fsr0l	equ	0xFE9
 21948                           wreg	equ	0xFE8
 21949                           indf1	equ	0xFE7
 21950                           plusw1	equ	0xFE3
 21951                           fsr1h	equ	0xFE2
 21952                           fsr1l	equ	0xFE1
 21953                           bsr	equ	0xFE0
 21954                           indf2	equ	0xFDF
 21955                           postinc2	equ	0xFDE
 21956                           postdec2	equ	0xFDD
 21957                           plusw2	equ	0xFDB
 21958                           fsr2h	equ	0xFDA
 21959                           fsr2l	equ	0xFD9
 21960                           status	equ	0xFD8
 21961                           
 21962                           	psect	rparam
 21963  0000                     pclatu	equ	0xFFB
 21964                           pclath	equ	0xFFA
 21965                           tblptru	equ	0xFF8
 21966                           tblptrh	equ	0xFF7
 21967                           tblptrl	equ	0xFF6
 21968                           tablat	equ	0xFF5
 21969                           prodh	equ	0xFF4
 21970                           prodl	equ	0xFF3
 21971                           intcon	equ	0xFF2
 21972                           postinc0	equ	0xFEE
 21973                           fsr0h	equ	0xFEA
 21974                           fsr0l	equ	0xFE9
 21975                           wreg	equ	0xFE8
 21976                           indf1	equ	0xFE7
 21977                           plusw1	equ	0xFE3
 21978                           fsr1h	equ	0xFE2
 21979                           fsr1l	equ	0xFE1
 21980                           bsr	equ	0xFE0
 21981                           indf2	equ	0xFDF
 21982                           postinc2	equ	0xFDE
 21983                           postdec2	equ	0xFDD
 21984                           plusw2	equ	0xFDB
 21985                           fsr2h	equ	0xFDA
 21986                           fsr2l	equ	0xFD9
 21987                           status	equ	0xFD8
 21988                           
 21989                           	psect	temp
 21990  00004C                     btemp:
 21991                           	opt stack 0
 21992  00004C                     	ds	1
 21993  0000                     int$flags	set	btemp
 21994                           pclatu	equ	0xFFB
 21995                           pclath	equ	0xFFA
 21996                           tblptru	equ	0xFF8
 21997                           tblptrh	equ	0xFF7
 21998                           tblptrl	equ	0xFF6
 21999                           tablat	equ	0xFF5
 22000                           prodh	equ	0xFF4
 22001                           prodl	equ	0xFF3
 22002                           intcon	equ	0xFF2
 22003                           postinc0	equ	0xFEE
 22004                           fsr0h	equ	0xFEA
 22005                           fsr0l	equ	0xFE9
 22006                           wreg	equ	0xFE8
 22007                           indf1	equ	0xFE7
 22008                           plusw1	equ	0xFE3
 22009                           fsr1h	equ	0xFE2
 22010                           fsr1l	equ	0xFE1
 22011                           bsr	equ	0xFE0
 22012                           indf2	equ	0xFDF
 22013                           postinc2	equ	0xFDE
 22014                           postdec2	equ	0xFDD
 22015                           plusw2	equ	0xFDB
 22016                           fsr2h	equ	0xFDA
 22017                           fsr2l	equ	0xFD9
 22018                           status	equ	0xFD8


Data Sizes:
    Strings     422
    Constant    144
    Data        1
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      75
    BANK0           160    108     140
    BANK1           256     33      85
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_31(CODE[21]), STR_30(CODE[21]), STR_29(CODE[21]), STR_28(CODE[21]), 
		 -> STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[21]), 
		 -> STR_23(CODE[21]), STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[21]), 
		 -> STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[8]), STR_14(CODE[8]), STR_13(CODE[5]), STR_12(CODE[5]), 
		 -> STR_11(CODE[5]), STR_10(CODE[7]), STR_9(CODE[14]), STR_8(CODE[17]), 
		 -> STR_7(CODE[12]), STR_6(CODE[21]), STR_4(CODE[21]), STR_3(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK0[1]), park_assist_state(BANK1[8]), data(COMRAM[1]), data_brake(COMRAM[1]), 
		 -> data_steering(BANK0[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Parking->_LCD_write_message
    _LCD_Park->_LCD_write_message
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___fldiv->___xxtofl
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_Gap->_LCD_write_message
    _LCD_End->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Tx->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  491385
                                             25 BANK1      8     8      0
                             _CAN_Rx
                             _CAN_Tx
                       _CANisTxReady
                     _CANsendMessage
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                            _LCD_End
                            _LCD_Gap
                        _LCD_Handler
                           _LCD_Park
                        _LCD_Parking
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   51321
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             30 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             16 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             16 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Parking                                          0     0      0   57062
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Park                                             0     0      0   57062
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  143974
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41008
                                             98 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9272
                                             55 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             16 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    8993
                                             55 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4771
                                             30 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             22 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             16 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             16 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     784
                                             16 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             16 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             16 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     722
                                             88 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             88 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    3518
                                             68 BANK0     20    12      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             55 BANK0      4     0      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             16 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             30 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   12052
                                             40 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             32 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             23 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             16 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             16 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9519
                                             33 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18137
                                             31 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    8956
                                             28 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_Gap                                              0     0      0   57062
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_End                                              0     0      0   57062
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2   11675
                                             33 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    9300
                                             28 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   27796
                                             30 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8919
                                             28 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8780
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8811
                                             28 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8780
                                             24 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0    1264
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1264
                                             22 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      68
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_Tx                                               0     0      0    4107
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4083
                                             16 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Rx                                               4     4      0       0
                                             16 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_alta                                           17    17      0    3558
                                             33 COMRAM     1     1      0
                                              0 BANK0     16    16      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (11) i2_CANsendMessage                                   16     8      8    2243
                                             17 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (11) i2_CANisTxReady                                      1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CANreceiveMessage                                  12    10      2    1137
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (11) _CANisRxReady                                        1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Rx
   _CAN_Tx
     _CANisTxReady
     _CANsendMessage
   _CANisTxReady
   _CANsendMessage
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_End
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Gap
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_Park
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Parking
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     21      55       7       33.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6C      8C       5       87.5%
BITCOMRAM           5E      0       3       0        3.2%
COMRAM              5E     22      4B       1       79.8%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12C      20        0.0%
DATA                 0      0     12C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri May 06 22:59:19 2016

                     ___fldiv@aexp 0096                       ___fldiv@bexp 0095  
                                _x 0259                                  _y 025A  
                                _z 025B          __size_of_delay_set_quartz 000A  
             __end_of_CANSetFilter 0B06                       ?_LCD_Handler 0027  
                     ___fldiv@sign 008A                       ___awdiv@sign 007B  
                               _id 0001                                 bsr 000FE0  
              ___wmul@multiplicand 0072                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       ?_LCD_Parking 0027  
                     __CFG_CP3$OFF 000000                        __CFG_OSC$HS 000000  
                     __CFG_CP4$OFF 000000                       __CFG_CP5$OFF 000000  
                              l400 1638                                l401 1730  
                              l410 17FE                                l402 16C0  
                              l403 16CA                                l404 16D4  
                              l500 063A                                l413 18B8  
                              l405 16DE                                l501 063E  
                              l422 1A72                                l414 18BC  
                              l510 074A                                l502 064A  
                              l423 1A76                                l415 19B4  
                              l511 0756                                l424 1A82  
                              l416 1944                                l408 17EE  
                              l520 0862                                l512 075A  
                              l417 194E                                l409 17F2  
                              l521 0866                                l513 0766  
                              l505 0726                                l418 1958  
                              l530 0972                                l522 0872  
                              l506 072A                                l419 1962  
                              l531 097E                                l523 0876  
                              l507 0736                                l540 0A8A  
                              l532 0982                                l524 0882  
                              l516 0842                                l508 073A  
                              l460 4252                                l452 4212  
                              l541 0A8E                                l533 098E  
                              l517 0846                                l509 0746  
                              l453 4216                                l390 145A  
                              l542 0A9A                                l534 0992  
                              l518 0852                                l470 435E  
                              l454 4222                                l383 161E  
                              l543 0A9E                                l535 099E  
                              l527 095E                                l519 0856  
                              l471 436A                                l463 432A  
                              l455 4226                                l384 13B0  
                              l544 0AAA                                l528 0962  
                              l464 432E                                l456 4232  
                              l393 156A                                l385 13B4  
                              l545 0AAE                                l529 096E  
                              l465 433A                                l457 4236  
                              l394 156E                                l386 14AC  
                              l546 0ABA                                l538 0A7A  
                              l490 0524                                l466 433E  
                              l458 4242                                l378 4B46  
                              l395 157A                                l387 143C  
                              l539 0A7E                                l491 0530  
                              l483 04F0                                l467 434A  
                              l459 4246                                l379 4B50  
                              l388 1446                                l900 6406  
                              l484 04F4                                l468 434E  
                              l804 1C94                                l389 1450  
                              l485 0500                                l469 435A  
                              l813 1E46                                l398 18A2  
                              l494 060A                                l486 0504  
                              l399 1634                                l495 060E  
                              l487 0510                                l576 63B8  
                              l496 061A                                l488 0514  
                              l921 606C                                l497 061E  
                              l489 0520                                l841 2010  
                              l825 1E18                                l809 1CA0  
                              l914 643E                                l498 062A  
                              l834 2008                                l818 1D78  
                              l907 645A                                l499 062E  
                              l827 1E42                                l852 215C  
                              l589 6236                                l854 2158  
                              l919 606A               ??_PWR_Button_Polling 0070  
                     __CFG_CPB$OFF 000000                       __CFG_CPD$OFF 000000  
                      ?_LCD_cursor 007C                                _dir 00E4  
                              _msg 0111                                _str 0120  
                     ___awmod@sign 0075                                prod 000FF3  
                              wreg 000FE8                       ___flmul@aexp 008B  
                     ___flmul@bexp 0090                       ___flmul@sign 008A  
                     ___flmul@temp 0095                       ___flmul@prod 0091  
                  __end_of_LCD_Gap 5F94                       __CFG_LVP$OFF 000000  
                  __end_of_LCD_End 5FF8             __size_of_LCD_goto_line 00EC  
                     ___fltol@exp1 00C1                       __CFG_WDT$OFF 000000  
                             l1028 10FA                               l1420 5928  
                             l1253 5462                               l1350 5086  
                             l1263 529C                               l1351 50CA  
                             l1540 34EA                               l1509 6050  
                             l1605 3EBE                               l1541 34DE  
                             l1357 514A                               l1542 34AA  
                             l1446 5A00                               l1607 3F2C  
                             l1456 5D48                               l1633 3B02  
                             l1626 3866                               l1643 3C14  
                             l1635 3B70                               l1557 365E  
                             l1566 36F2                               l1662 4A0E  
                             l1663 4A26                               l1655 49B2  
                             l1648 4906                               l1499 5E5E  
                             l1596 3E86                               l5302 58E2  
                             l1599 3E2E                               l6210 1464  
                             l5322 6476                               l5340 40D0  
                             l6230 155E                               l7102 6060  
                             l5510 03A4                               l5414 436E  
                             l7120 5AF6                               l6312 1802  
                             l7130 5B04                               l6306 17E2  
                             l6170 4B5C                               l6236 157E  
                             l5292 58A0                               l8020 36A6  
                             l5356 4186                               l6172 4BA0  
                             l6164 4B3E                               l7142 5B66  
                             l4830 5E1A                               l8014 3690  
                             l8030 36C6                               l8006 363E  
                             l8110 387A                               l5630 07B0  
                             l5438 00BE                               l5382 4256  
                             l6166 4B54                               l4840 5E50  
                             l4832 5E20                               l8040 36EC  
                             l8024 36B2                               l8032 36CC  
                             l8104 384E                               l5624 076A  
                             l5528 045E                               l5456 0176  
                             l6362 196C                               l7082 5A12  
                             l4850 6018                               l8050 3748  
                             l8114 388E                               l8106 3854  
                             l5562 057A                               l5474 0230  
                             l7092 5A5A                               l8300 578A  
                             l4828 5E0E                               l4852 601E  
                             l8212 57F6                               l9100 4F6C  
                             l5556 0534                               l5492 02EA  
                             l5388 429C                               l6382 1A66  
                             l6286 16E8                               l8302 57BC  
                             l8310 638A                               l8070 37A0  
                             l8062 3788                               l8054 375A  
                             l9102 4F7C                               l5726 0ABE  
                             l5590 064E                               l7096 5A92  
                             l4856 6042                               l4848 600C  
                             l8064 378C                               l8400 5032  
                             l8224 582A                               l8240 587A  
                             l8080 37D0                               l5664 08CC  
                             l8306 6376                               l5770 616C  
                             l6802 3ED2                               l6722 3C9A  
                             l8058 377C                               l8226 5836  
                             l8218 580C                               l8162 3B16  
                             l8090 380C                               l5658 0886  
                             l6388 1A86                               l6812 3F26  
                             l6716 3C76                               l8500 5448  
                             l8244 588E                               l8236 586C  
                             l8228 583C                               l8260 5C4A  
                             l8172 3B6A                               l8156 3AEC  
                             l5692 09A2                               l5596 0694  
                             l6830 3FE0                               l6822 3F7C  
                             l6742 3CF8                               l6726 3CA4  
                             l8502 5458                               l8430 5100  
                             l8182 3BC0                               l8086 37F4  
                             l8334 4654                               l8326 455C  
                             l9062 4E10                               l6736 3CD4  
                             l8440 5130                               l8280 5CB6  
                             l8272 5C94                               l8264 5C5E  
                             l8256 5C3A                               l8088 37FA  
                             l9400 20EC                               l8290 60EC  
                             l6826 3FAA                               l6746 3D02  
                             l8522 524A                               l8514 51AA  
                             l8602 59EE                               l8610 5CDC  
                             l8450 5312                               l8442 5140  
                             l8434 5114                               l8266 5C6A  
                             l8186 3BE6                               l8098 382A  
                             l8354 2B46                               l9090 4F2C  
                             l5698 09E8                               l9306 1D20  
                             l8700 4D86                               l6836 3FF0  
                             l6828 3FBE                               l8612 5CEC  
                             l8268 5C70                               l8276 5CA2  
                             l8196 3C34                               l8188 3BFA  
                             l8372 2DCC                               l8348 2A74  
                             l9420 2210                               l9316 1D3A  
                             l9324 1D7A                               l9236 1B52  
                             l8294 56F4                               l8286 60BA  
                             l6838 3FF4                               l6790 3E82  
                             l6766 3D84                               l6758 3D56  
                             l8518 51F8                               l7902 3396  
                             l8614 5CF2                               l8470 538C  
                             l8198 3C3E                               l8366 2CFA  
                             l8358 2B78                               l9406 2172  
                             l9270 1BE4                               l8296 5726  
                             l8704 4DFE                               l6784 3E3A  
                             l6776 3E02                               l8528 52E8  
                             l8536 626A                               l7920 33EE  
                             l7912 33C4                               l8640 4994  
                             l8456 5338                               l8384 636A  
                             l9432 2236                               l9336 1E72  
                             l9344 1EB2                               l9280 1C8C  
                             l8298 5758                               l8562 5676  
                             l8546 5608                               l8618 5D36  
                             l8634 493E                               l8490 5418  
                             l8394 4FF8                               l9098 4F5A  
                             l9426 2222                               l9434 223C  
                             l9362 1FD8                               l9346 1EB4  
                             l6796 3EA8                               l7908 33BA  
                             l8580 56DC                               l8572 56A6  
                             l8660 4A78                               l8636 4946  
                             l8628 4916                               l8820 0D7E  
                             l8812 0CFA                               l9364 1FDE  
                             l9348 1EB6                               l9276 1C7A  
                             l7838 6228                               l7950 342A  
                             l8574 56B6                               l8566 568A  
                             l8590 5984                               l8646 49F0  
                             l8638 4956                               l8494 542C  
                             l8478 53E0                               l8830 0E18  
                             l8750 0B16                               l9358 1F72  
                             l9286 1CAE                               l8672 62CE  
                             l8576 56C0                               l8592 5994  
                             l8648 4A00                               l8920 1292  
                             l8904 112E                               l8840 0E9C  
                             l8824 0DB0                               l9384 20BA  
                             l9392 20D4                               l9368 2000  
                             l9288 1CBA                               l8682 4CA6  
                             l7962 34BE                               l8594 599A  
                             l8850 0F06                               l8826 0DC6  
                             l8770 0BCA                               l9394 20E2  
                             l9378 20A4                               l9298 1CE0  
                             l8668 62B4                               l8684 4CAE  
                             l7964 34C4                               l7884 334C  
                             l8908 1190                               l8836 0E6A  
                             l8828 0E02                               l8780 0C0A  
                             l8764 0B66                               l8756 0B30  
                             l9388 20C6                               l8694 4D46  
                             l7878 3328                               l8942 1338  
                             l8934 12E0                               l8926 12AC  
                             l8918 1284                               l8854 0F7E  
                             l8774 0BDA                               l8950 138C  
                             l7992 355C                               l7968 34CE  
                             l7896 3382                               l7888 3356  
                             l8872 0FFC                               l8856 0F84  
                             l8928 12BA                               l8768 0BB0  
                             l7986 354C                               l7978 350E  
                             l8946 1364                               l8938 1308  
                             l8890 10C8                               l8874 1004  
                             l8882 10A0                               l8786 0C24  
                             l8778 0BE0                               l7988 3552  
                             l7996 356E                               l8892 10DC  
                             l8884 10AE                               l8868 0FD0  
                             l8796 0C76                               l8948 136A  
                             STR_1 FF7F                               l8896 10FE  
                             STR_2 FF55                               STR_3 FE98  
                             STR_4 FF7F                               STR_5 FFFA  
                             STR_6 FF6A                               STR_7 FFC8  
                             STR_8 FFA9                               STR_9 FFBA  
                             _LATA 000F89                               _LATB 000F8A  
                             _LATC 000F8B                               _LATD 000F8C  
                             _LATE 000F8D                               u6020 404C  
                             u6025 4040                               u6035 40AC  
                             u6300 00F2                               u6060 4102  
                             u6230 438E                               u6150 4276  
                             u6305 00E6                               u6065 40F6  
                             u6315 0152                               u6235 4382  
                             u6155 426A                               u6075 4162  
                             u6420 0320                               u6340 01AC  
                             u6260 003A                               u6425 0314  
                             u6345 01A0                               u6265 002E  
                             u9010 644C                               u6435 0380  
                             u6355 020C                               u6275 009A  
                             u6460 03DA                               u6380 0266  
                _F2_Button_Polling 6436                               u6710 078A  
                             u6630 066E                               u6550 0554  
                             u9025 644E                               u6465 03CE  
                             u6385 025A                               u6715 077E  
                             u6635 0662                               u6555 0548  
                             u6475 043A                               u6395 02C6  
                             u9080 608E                               u7650 1484  
                             u7660 14D0                               u7805 17B4  
                             u7910 198C                               u9086 6090  
                             u6950 0ADE                               u6870 09C2  
                             u6790 08A6                               u7655 1478  
                             u7920 19D8                               u7665 14C4  
                             u7915 1980                               u7675 1530  
                             u6955 0AD2                               u6875 09B6  
                             u6795 089A                               u7780 1708  
                             u7925 19CC                               u7790 1754  
                             u8590 3F90                               u8910 6414  
                             u7935 1A38                               u7785 16FC  
                             u7795 1748                               u8925 6416  
                             u8960 6468                               u8975 646A  
              __size_of_CANSetMask 039E                       ?_LCD_goto_xy 007F  
                             _data 0025                               _main 1B26  
                             _itoa 6142                 ?_F2_Button_Polling 0027  
        __size_of_LCD_send_command 003A                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               indf1 000FE7  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               btemp 004C  
                             _utoa 5898                               pclat 000FFA  
                             prodh 000FF4                               prodl 000FF3  
                             start 00C0                      __CFG_IESO$OFF 000000  
                  ___fldiv@new_exp 008F                 __size_of_LCD_clear 0032  
                     _sprintf$4257 0134                      __CFG_MCLRE$ON 000000  
                     ___param_bank 000010                ??_F2_Button_Polling 0070  
         __end_of_LCD_enable_pulse 63E0                   _CANOperationMode 646E  
                     _Can_Tx_Force 0249                   __end_of_LCD_Park 5F30  
                  _space_available 0253            __size_of_LCD_initialize 016E  
       __size_of_CANreceiveMessage 050C                      ___fltol@sign1 00C0  
                  __end_of___fladd 37B2                              ?_main 0027  
                  __end_of___fldiv 4018                              ?_itoa 0080  
                  __end_of___awdiv 5898                    __end_of___flneg 627C  
                            STR_10 FFE4                              STR_11 FFF0  
                            STR_20 FF40                              STR_12 FFF5  
                            STR_13 FFEB                              STR_21 FEEC  
                            STR_14 FFD4                              STR_22 FEC2  
                            STR_30 FE6E                              STR_15 FFDC  
                            STR_23 FE83                              STR_31 FE59  
                            STR_24 FF40                              STR_16 FF40  
                            STR_17 FF94                              STR_25 FF16  
                            STR_26 FF2B                              STR_18 FF01  
                            STR_27 FF7F                              STR_19 FEAD  
                            STR_28 FF40                    __end_of___awmod 5CC0  
                            STR_29 FED7                    __end_of___flmul 3C58  
                  __end_of___flsub 6142                    __end_of___fltol 56EE  
                  __end_of___lldiv 5A12                              ?_utoa 0077  
                            u10305 61EA                              u10306 61EC  
                            u10315 61F6                              u10316 61F8  
                            u10420 3474                              u10325 6202  
                            u11141 4FD4                              u10326 6204  
                            u10430 348C                              u10440 348E  
                            u11161 500E                    ___awdiv@divisor 0078  
                            u10295 61DE                              u10296 61E0  
                            u10800 3A8E                              u12400 1DDE  
                            u11601 4C5A                    __end_of___llmod 5D5A  
                            u11370 5628                              u12420 1DFA  
                            u12260 1C48                              u10805 3A82  
                            u12510 1FFC                              u12270 1C60  
                            u11375 561C                              u12440 1E26  
                            u12426 1DFC                              u12620 21EA  
                            u12276 1C62                              u12446 1E28  
                            u10880 3BD4                              _T3CON 000FB1  
                            u12580 2150                              u11890 10F2  
                            u12687 622A                    __end_of___lwdiv 5E68  
                  __end_of___lwmod 605A                              i2l400 249C  
                            i1l800 0078                              i2l401 256C  
                            i2l410 261E                              i2l402 250A  
                            i2l403 2512                              i2l404 251A  
                            i2l413 26C8                              i2l405 2522  
                            i2l430 3096                              i2l422 2840  
                            i2l414 26CC                              i2l423 2844  
                            i2l415 279C                              i2l424 284E  
                            i2l416 273A                              i2l408 2610  
                            i2l417 2742                              i2l409 2614  
                            i2l418 274A                              i2l419 2752  
                            i2l390 22F2                              i2l383 2484  
                            i2l384 2268                              i2l393 23E0  
                            i2l385 226C                              i2l394 23E4  
                            i2l386 233C                              i2l395 23EE  
                            i2l387 22DA                              i2l388 22E2  
                            i2l581 6496                              i2l389 22EA  
                            i2l398 26B4                              i2l399 2498  
                            i2l576 63FA                              i2l796 4880  
                  ___awdiv@counter 007A                              _TMR3H 000FB3  
                            _TMR3L 000FB2                  _CANisRxReady$3253 0038  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                    __CFG_WRT4$OFF 000000                 __size_of_ISR_bassa 00A8  
                    __CFG_WRT5$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
               CANInitialize@flags 0082                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                     __CFG_EBTR4$OFF 000000  
                 __end_of_ISR_alta 48BC                     __CFG_EBTR5$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                              _check 00D4  
                   __CFG_EBTRB$OFF 000000          __end_of_F2_Button_Polling 6452  
                  __end_of_dpowers FE59                              _scale 28E4  
                  __end_of_isdigit 6374          __size_of_LCD_shift_cursor 004C  
                   __pbitbssCOMRAM 0248               __end_of_CANisRxReady 649A  
                            tablat 000FF5               __end_of_CANisTxReady 63BE  
                            plusw1 000FE3                              plusw2 000FDB  
                            utoa@c 007F                              utoa@v 007D  
                            status 000FD8                    __end_of_sprintf 139A  
              __size_of_LCD_cursor 0032                    __initialization 618A  
                     __end_of_main 2254                       __end_of_itoa 618A  
    __size_of_board_initialization 00A4                      _LCD_goto_line 56EE  
                     __end_of_utoa 5956                  ?_Joystick_Polling 0027  
               ??_Joystick_Polling 0070                  ?_LCD_write_string 0081  
                           ??_main 014D                             ??_itoa 0086  
                           ??_utoa 007D          __size_ofi2_CANsendMessage 0690  
                    __activetblptr 000003                          ??_LCD_Gap 0083  
                        ??_LCD_End 0083                     _JoystickValues 00DC  
               ??_LCD_write_string 0083               __size_of__tdiv_to_l_ 019E  
                _CANisTxReady$3251 0070                  __end_of_LCD_clear 634A  
            i2CANsendMessage@flags 003F             LCD_write_string@buffer 0081  
                           _ADCON1 000FC1                             _CANCON 000F6F  
                 ___llmod@dividend 0070                             ?_scale 0097  
                           _ADRESH 000FC4                   ___awdiv@dividend 0076  
                           _CAN_Rx 5ACC                             _CAN_Tx 5A12  
                  __CFG_BBSIZ$1024 000000                             i2l7310 23F2  
                           i2l7304 23D6                             i2l7360 252A  
                           i2l9200 47E0                             i2l9210 4822  
                           i2l7436 275A                             i2l7380 2606  
                           i2l7284 22FA                             i2l9220 484E  
                           i2l9204 47FE                             i2l6910 3040  
                           i2l6902 3004                             i2l7462 2852  
                           i2l7456 2836                             i2l9224 487C  
                           i2l9152 46E4                             i2l6914 305E  
                           i2l6906 3022                             i2l7386 2622  
                           i2l9170 4732                             i2l6916 3090  
                           i2l9166 472A                             i2l9158 4706  
                           i2l6960 3264                             i2l6952 31F6  
                           i2l9192 47B6                             i2l9184 4780  
                           i2l9176 475A                             i2l6890 2F76  
                           i2l6972 32B8                             i2l6964 3280  
                           i2l6976 32D4                             i2l6968 329C  
                           i2l6978 3306                             i2l6898 2FE6  
                           _RXB0D0 000F66                             _RXB0D1 000F67  
                           _RXB0D2 000F68                             _RXB0D3 000F69  
                           _RXB0D4 000F6A                             _RXB1D0 000F56  
                           _RXB0D5 000F6B                             _RXB1D1 000F57  
                           _RXB0D6 000F6C                             _RXB1D2 000F58  
                           _RXB0D7 000F6D                             _RXB1D3 000F59  
                           _RXB1D4 000F5A                             _RXB1D5 000F5B  
                           _RXB1D6 000F5C                             _RXB1D7 000F5D  
                           _TXB0D0 000F46                             _TXB0D1 000F47  
                           _TXB0D2 000F48                             _TXB0D3 000F49  
                           _TXB1D0 000F36                             _TXB0D4 000F4A  
                           _TXB1D1 000F37                             _TXB0D5 000F4B  
                           _TXB1D2 000F38                             _TXB0D6 000F4C  
                           _TXB1D3 000F39                             _TXB0D7 000F4D  
                           _TXB2D0 000F26                             _TXB1D4 000F3A  
                           _TXB2D1 000F27                             _TXB1D5 000F3B  
                           _TXB2D2 000F28                             _TXB1D6 000F3C  
                           _TXB2D3 000F29                             _TXB1D7 000F3D  
                           _TXB2D4 000F2A                             _TXB2D5 000F2B  
                           _TXB2D6 000F2C                             _TXB2D7 000F2D  
               CANsendMessage@data 0074                 CANsendMessage@tamp 007C  
                 __end_of___xxtofl 4A8A                    _switch_position 00E8  
                 __end_of_delay_ms 6244              __size_of_CANSetFilter 0B06  
                   __CFG_XINST$OFF 000000                  __end_of_ISR_bassa 00C0  
                 __end_of__powers_ FE31                         _MotoreFlag 024C  
                   ?_LCD_goto_line 0027                             ___flge 515C  
                        ??___fladd 00AC                   _delay_set_quartz 649A  
                           ___wmul 627C                          ??___fldiv 0086  
                        ??___awdiv 007A                          ??___flneg 009B  
                   __CFG_STVREN$ON 000000                          ??___awmod 0074  
                        ??___flmul 0086                          ??___flsub 00C0  
                        ??___fltol 00BC                          ??___lldiv 0078  
                        ??___llmod 0078                          ??___lwdiv 0074  
                     ??_CANSetMask 0075                          ??___lwmod 0074  
          __size_of_LCD_write_char 0096                             _fround 43B6  
   LCD_initialize@quartz_frequency 007E                             clear_0 6190  
                           clear_1 619C                             clear_2 61AE  
                 ___awdiv@quotient 007C                    ___awmod@divisor 0072  
             __size_of_LCD_Handler 01AE                    ___awmod@counter 0074  
                  __CFG_BOREN$BOHW 000000                  _JoystickConstants 00CC  
                           itoa@cp 0086                          ??_isdigit 0070  
             __size_of_LCD_Parking 0064                       __mediumconst FDC8  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8         __size_of_F2_Button_Polling 001C  
                        ??_sprintf 00CA                       _CANSetFilter 0000  
                       ___flge@ff1 0070                         ___flge@ff2 0074  
                     ___xxtofl@arg 007A                       ___xxtofl@exp 0079  
                     ___xxtofl@val 0070                         __accesstop 0060  
          __end_of__initialization 61C6                 __end_of_CANSetMask 43B6  
                        ?_LCD_Park 0027                    __CFG_PBADEN$OFF 000000  
                       _SterzoFlag 024E                         ___flneg@f1 0097  
                 _LCD_send_command 61D0                      ___rparam_used 000001  
LCD_write_integer@number_of_digits 008A                         ___fltol@f1 00B8  
             __size_of_LCD_goto_xy 001C                     __pcstackCOMRAM 0027  
                     __pidataBANK0 64A4                          ?_ISR_alta 0027  
                     LCD_goto_xy@x 0080                       LCD_goto_xy@y 007F  
                    __end_of_scale 2DFE                     _LCD_initialize 5474  
                _LCD_write_integer 4C50                  _LCD_write_message 62B2  
            CANSetFilter@numBuffer 0079                 ?_LCD_write_integer 0088  
           LCD_write_integer@index 0097                 ?_LCD_write_message 0081  
                       __div_to_l_ 52EC                       ??_LCD_cursor 007D  
           LCD_write_integer@value 0088      LCD_write_integer@convertedInt 0091  
                _space_gap_reached 0254                      _newMessageCan 0250  
                     _actual_speed 00DE              __size_of_CANisRxReady 0016  
            __size_of_CANisTxReady 0024                ??_LCD_write_integer 008C  
                  __div_to_l_@exp1 007D                ??_LCD_write_message 0083  
                  __div_to_l_@cntr 007C                            ??_scale 009B  
                 _LCD_shift_cursor 60AE                    __div_to_l_@quot 0078  
         __end_of_CANOperationMode 6484                            ?_CAN_Rx 0027  
                          ?_CAN_Tx 0027                         __pbssBANK0 00CC  
                       __pbssBANK1 0100                         _data_brake 0026  
                       ??_LCD_Park 0083            __size_of_CANsendMessage 078C  
                       _data_speed 00E9                      __div_to_l_@f1 0070  
                    __div_to_l_@f2 0074                    ??_LCD_goto_line 007C  
               __end_of_LCD_cursor 6318             __end_of_LCD_initialize 55E2  
                          ?___flge 0070                            ?___wmul 0070  
                       ??_ISR_alta 0060          __end_of_LCD_write_integer 4E10  
        __end_of_LCD_write_message 62E6                  ?_LCD_enable_pulse 0027  
                          ?_fround 0097                       _CANisRxReady 6484  
                          _CANSTAT 000F6E                 ??_LCD_enable_pulse 0078  
                     _CANisTxReady 639A                          ISR_alta@i 0048  
                          _BRGCON1 000F70                            _BRGCON2 000F71  
                          _BRGCON3 000F72                   i2_CANsendMessage 2254  
      __size_of_PWR_Button_Polling 001C                            _LCD_Gap 5F30  
                          _LCD_End 5F94                          ?___xxtofl 0070  
          __size_ofi2_CANisTxReady 001E             __size_of_CANInitialize 01C6  
                 LCD_cursor@active 007D                          ?_delay_ms 0076  
                          _RXB0DLC 000F65                            _RXB1DLC 000F55  
                          _RXB0CON 000F60                            _RXB1CON 000F50  
                          _TXB0DLC 000F45                            _TXB1DLC 000F35  
                          _TXB2DLC 000F25                CANsendMessage@flags 0077  
                          _AbsFlag 0248                  _parking_message_E 0251  
                  __size_of_CAN_Rx 00AE                    __size_of_CAN_Tx 00BA  
                __end_of__npowers_ FDFD                            __Hparam 0000  
                       _left_speed 001D                         _scale$4256 009B  
                          __Lparam 0000                   delay_ms@value_ms 0076  
                  ?_LCD_initialize 0027                    __size_of___flge 0190  
                          ___fladd 330A                            ___fldiv 3C58  
                          ___awdiv 57DA                            ___flneg 6244  
                          ___awmod 5C1E                            ___flmul 37B2  
                          ___flsub 60FA                            ___fltol 55E2  
                          ___lldiv 5956                    __size_of___wmul 0036  
                   _LCD_write_char 5D5A                            ___llmod 5CC0  
                          ___lwdiv 5DF0                            ___lwmod 5FF8  
             CANInitialize@propSeg 0087                            __pcinit 618A  
                          _battery 0023                    __size_of_fround 02F6  
                          __ramtop 0D00                LCD_write_char@value 0080  
                          __ptext0 1B26                            __ptext1 5B7A  
                          __ptext2 4A8A                            __ptext3 4018  
                          __ptext4 0000                            __ptext5 646E  
                          __ptext6 63FE                            __ptext7 5E68  
                          __ptext8 5ECC                            __ptext9 4E10  
                      ?__div_to_l_ 0070                   LCD_write_char@D0 007F  
                 LCD_write_char@D1 007E                   LCD_write_char@D2 007D  
                 LCD_write_char@D3 007C                          _F1_switch 024A  
                          _dpowers FE31                          _F2_switch 024B  
                          _isdigit 634A                         ??___xxtofl 0074  
                 ___awmod@dividend 0070                         ??_delay_ms 0078  
           CANreceiveMessage@error 0042       __end_of_board_initialization 5C1E  
        __size_of_Joystick_Polling 0054           __end_of_delay_set_quartz 64A4  
                          _sprintf 0B06                     __pintcode_body 46AC  
                        _LCD_clear 6318               end_of_initialization 61C6  
        __size_of_LCD_write_string 0026                            itoa@buf 0080  
                          itoa@val 0082                            int_func 46AC  
                        i2u1220_45 47FA                          i2u1209_40 4704  
                        i2u1219_40 47F8                          i2u1269_47 4848  
                    _CANInitialize 4A8A                    ___lldiv@divisor 0074  
               LCD_cursor@blinking 007C                      _parking_state 00E6  
                  ___lldiv@counter 007C             __end_of_LCD_write_char 5DF0  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE         __size_of_LCD_write_integer 01C0  
       __size_of_LCD_write_message 0034                            utoa@buf 0077  
                   __tdiv_to_l_@f1 0070                     __tdiv_to_l_@f2 0074  
                          utoa@val 0079                         _wait_low_1 0256  
                       _wait_low_2 0257                         _wait_low_3 0258  
                        _ISR_bassa 0018                      ??__tdiv_to_l_ 0078  
          _steering_correction_dir 0255                          _PORTAbits 000F80  
                        _PORTBbits 000F81                     CANSetMask@mask 0070  
                        _PORTDbits 000F83                     CANSetMask@tamp 007A  
         __end_of_LCD_send_command 620A                     CANSetMask@type 0074  
                      ___fladd@grs 00B7                      ___xxtofl@sign 0078  
                      ___fldiv@grs 0091                        ___fldiv@rem 008B  
                _F1_Button_Polling 6452                         ?_LCD_clear 0027  
               ?_F1_Button_Polling 0027                     __end_of_CAN_Rx 5B7A  
                   __end_of_CAN_Tx 5ACC            _clock_counter_reference 00E0  
                      ___flmul@grs 008C                     _CANsendMessage 139A  
                 CANInitialize@BRP 0081                   CANInitialize@SJW 0080  
                   ?_CANInitialize 007E                ??_F1_Button_Polling 0070  
                __size_of_LCD_Park 0064                __size_of__div_to_l_ 0188  
          LCD_write_integer@F17272 0107                    ?_LCD_write_char 0027  
                    ??_LCD_Handler 00CC           __end_of_LCD_shift_cursor 60FA  
                   __end_of___flge 52EC                         ?_ISR_bassa 0027  
                   __end_of___wmul 62B2                  __size_of_ISR_alta 48B4  
                    ??_LCD_Parking 0083                  LCD_shift_cursor@i 007E  
                   __end_of_fround 46AC                     i2_CANisTxReady 63E0  
        __end_of_F1_Button_Polling 646E                start_initialization 618A  
              __end_of__tdiv_to_l_ 515C                CANSetMask@numBuffer 0079  
                    _data_speed_rx 0100             __end_of_CANsendMessage 1B26  
                         ??_CAN_Rx 0070                           ??_CAN_Tx 0080  
                ?_CANOperationMode 0027                      _data_steering 00EA  
                    ??_LCD_goto_xy 0080         i2CANsendMessage@dataLength 003E  
             i2CANsendMessage@data 003C                 ??_CANOperationMode 0070  
             i2CANsendMessage@tamp 0044                    ___llmod@divisor 0074  
         __end_ofi2_CANsendMessage 28E4         CANInitialize@FilterConfig1 0088  
       CANInitialize@FilterConfig2 0089                    ___llmod@counter 0078  
              _steering_correction 00E7                           ??___flge 0078  
             _board_initialization 5B7A                           ??___wmul 0074  
                      __pdataBANK0 00EB                   __CFG_LPT1OSC$OFF 000000  
                         ??_fround 009B             __end_ofi2_CANisTxReady 63FE  
                    sprintf@tmpval 0142                          ___fladd@a 00A8  
                        ___fladd@b 00A4             CANInitialize@phaseSeg1 007E  
           CANInitialize@phaseSeg2 007F                         fround@prec 00A3  
              __end_of_LCD_Handler 4FBE                           ?_LCD_Gap 0027  
                         ?_LCD_End 0027                          ___fldiv@a 0082  
                        ___fldiv@b 007E                          ___flmul@a 0082  
                        ___flmul@b 007E                        __pbssCOMRAM 0001  
                        ___flsub@a 00BC                          ___flsub@b 00B8  
                    __pcstackBANK0 0060                      __pcstackBANK1 0134  
                      _BRGCON2bits 000F71                __end_of_LCD_Parking 5ECC  
                      _BRGCON3bits 000F72                   _Joystick_Polling 605A  
                __size_of___xxtofl 01CE          __size_of_LCD_enable_pulse 0022  
                     _isdigit$3840 0071         i2CANsendMessage@identifier 0038  
                _park_assist_state 012C                  __size_of_delay_ms 003A  
                      ??_LCD_clear 007C                    ?_CANsendMessage 0070  
          LCD_write_message@buffer 0081                   _LCD_write_string 6374  
                  ??_CANInitialize 0083                        sprintf@flag 013A  
                      sprintf@fval 0148                        sprintf@prec 0146  
                 ??_LCD_initialize 007E                 CANSetFilter@filter 0070  
        delay_set_quartz@frequency 0070                   ___lwdiv@dividend 0070  
               LCD_send_command@D0 007A                 LCD_send_command@D1 0079  
               LCD_send_command@D2 0078                 LCD_send_command@D3 007B  
              __end_of_LCD_goto_xy 6436              __end_of_LCD_goto_line 57DA  
            ?_board_initialization 0027                          __pintcode 0008  
                    __pmediumconst FDC8                           ?___fladd 00A4  
                         ?___fldiv 007E                           ?___awdiv 0076  
                         ?___flneg 0097                           ?___awmod 0070  
                         ?___flmul 007E                           ?___flsub 00B8  
                         ?___fltol 00B8                           ?___lldiv 0070  
                         ?___llmod 0070                          __npowers_ FDC9  
                         ?___lwdiv 0070                           ?___lwmod 0070  
                      ??_ISR_bassa 0027                        __pintcodelo 0018  
       __end_of_PWR_Button_Polling 641A                    ?i2_CANisTxReady 0027  
                      __tdiv_to_l_ 4FBE                       ??__div_to_l_ 0078  
                      _COMSTATbits 000F74                           ?_isdigit 0027  
       __size_of_F1_Button_Polling 001C                   ___lwdiv@quotient 0074  
                         ?_sprintf 00C2                     __size_of_scale 051A  
                ?_delay_set_quartz 0027              CANreceiveMessage@tamp 0043  
               ??_delay_set_quartz 0070                           _LCD_Park 5ECC  
                   ___wmul@product 0074                           _LATCbits 000F8B  
                         _LATDbits 000F8C                           _LATEbits 000F8D  
                         _IPR2bits 000FA2       _delay_quartz_frequency_value 00EB  
                         _IPR3bits 000FA5                           _PIE2bits 000FA0  
                         _PIE3bits 000FA3                 __end_of__div_to_l_ 5474  
                         _PIR2bits 000FA1                           _PIR3bits 000FA4  
                         i2u930_40 2318                           i2u930_45 230E  
                         i2u931_40 235E                           i2u931_45 2354  
                         i2u932_45 23AA                           i2u943_40 2548  
                         i2u943_45 253E                           i2u944_40 258E  
                         i2u944_45 2584                           i2u865_40 2EB6  
                         _RXB0EIDH 000F63                           _RXB0EIDL 000F64  
                         i2u945_45 25DA                           i2u865_46 2EB8  
                         i2u866_40 2EE4                           i2u874_45 306A  
                         i2u866_46 2EE6                           _RXB1EIDH 000F53  
                        _pr_time_1 00D8                          _pr_time_2 0005  
                         _RXB1EIDL 000F54                          _pr_time_3 0009  
                        _pr_time_4 000D                          _pr_time_5 0011  
                        _pr_time_6 0015                           i2u876_40 313E  
                         i2u956_40 2778                           i2u868_45 2EFA  
                         i2u956_45 276E                           i2u876_46 3140  
                         i2u877_40 3168                           i2u957_40 27BE  
                         i2u885_45 32E0                           i2u957_45 27B4  
                         i2u877_46 316A                          _set_speed 00E2  
                         i2u958_45 280A                           _RCONbits 000FD0  
                         i2u879_45 317C                   __CFG_WDTPS$32768 000000  
                         _RXB0SIDH 000F61                           _RXB0SIDL 000F62  
                         _RXF0EIDH 000F02                           _RXB1SIDH 000F51  
                         _RXF0EIDL 000F03                           _RXB1SIDL 000F52  
                         _RXF1EIDH 000F06                           _RXF1EIDL 000F07  
                         _RXF2EIDH 000F0A                           _RXF2EIDL 000F0B  
                         _RXF3EIDH 000F0E                           _RXF3EIDL 000F0F  
                         _RXF4EIDH 000F12                           _RXF4EIDL 000F13  
                         _RXF5EIDH 000F16                           _RXF5EIDL 000F17  
                         _RXF0SIDH 000F00                           _RXF0SIDL 000F01  
                         _TXB0EIDH 000F43                           _RXF1SIDH 000F04  
                         _TXB0EIDL 000F44                           _RXF1SIDL 000F05  
                         _TXB1EIDH 000F33                           _RXF2SIDH 000F08  
                         _TXB1EIDL 000F34                           _RXF2SIDL 000F09  
                         _ISR_alta 0008                           _TXB2EIDH 000F23  
                         _RXF3SIDH 000F0C                           _TXB2EIDL 000F24  
                         _RXF3SIDL 000F0D                           _RXF4SIDH 000F10  
                         _RXF4SIDL 000F11                           _RXF5SIDH 000F14  
                         _RXF5SIDL 000F15                           _RXM0EIDH 000F1A  
                         _RXM0EIDL 000F1B                           _TXB0SIDH 000F41  
                         _RXM1EIDH 000F1E                           _TXB0SIDL 000F42  
                         _RXM1EIDL 000F1F                           _TXB1SIDH 000F31  
                         _TXB1SIDL 000F32                           _TXB2SIDH 000F21  
                         _TXB2SIDL 000F22                        _LCD_Handler 4E10  
                         _RXM0SIDH 000F18                           _RXM0SIDL 000F19  
                         _RXM1SIDH 000F1C                           _RXM1SIDL 000F1D  
                         _RXERRCNT 000F75     LCD_write_integer@zero_cleaning 008B  
               _parking_message_ID 00E5                           _TXERRCNT 000F76  
                       _ADCON0bits 000FC2                        _LCD_Parking 5E68  
                       _ADCON2bits 000FC0                  ___wmul@multiplier 0070  
                         _RTR_Flag 024D                  ?_LCD_send_command 0078  
                 _actual_speed_kmh 010D                          _user_data 0021  
                 __size_of_LCD_Gap 0064                   __size_of_LCD_End 0064  
               ??_LCD_send_command 007B                      ?_CANSetFilter 0070  
                       _CANCONbits 000F6F                        _LCD_goto_xy 641A  
                 ??_LCD_write_char 007C                  LCD_goto_line@line 007C  
                         __Hrparam 0000                       _RXB0SIDLbits 000F62  
           ??_board_initialization 008A                           __Lrparam 0000  
                     _RXB1SIDLbits 000F52                   __size_of___fladd 04A8  
                       _CANSetMask 4018                   __size_of___fldiv 03C0  
                 __size_of___awdiv 00BE                   __size_of___flneg 0038  
                 __size_of___awmod 00A2                   __size_of___flmul 04A6  
                ?_LCD_shift_cursor 007C                   __size_of___flsub 0048  
                 __size_of___fltol 010C                   __size_of___lldiv 00BC  
                 __size_of___llmod 009A                   __size_of___lwdiv 0078  
                 __size_of___lwmod 0062                        _fround$4254 009F  
                      _fround$4255 009B                 ??_LCD_shift_cursor 007D  
                       sprintf@exp 0140                         sprintf@val 013C  
                         ___xxtofl 48BC                       _RXF0SIDLbits 000F01  
                 __size_of_isdigit 002A                           _delay_ms 620A  
                  ___lwdiv@divisor 0072                       _RXF1SIDLbits 000F05  
                  ___lwdiv@counter 0076                     ??_CANSetFilter 0075  
                 _LCD_enable_pulse 63BE                           __ptext10 0B06  
                         __ptext11 28E4                           __ptext20 5CC0  
                         __ptext12 634A                           __ptext21 5956  
                         __ptext13 43B6                           __ptext30 5898  
                         __ptext22 55E2                           __ptext14 37B2  
                         __ptext31 5FF8                           __ptext23 60FA  
                         __ptext15 5C1E                           __ptext40 5474  
                         __ptext32 5DF0                           __ptext24 330A  
                         __ptext16 57DA                           __ptext41 649A  
                         __ptext33 6374                           __ptext25 6244  
                         __ptext17 4FBE                           __ptext50 6436  
                         __ptext42 62E6                           __ptext34 641A  
                         __ptext26 515C                           __ptext18 52EC  
                         __ptext51 6452                           __ptext43 6318  
                         __ptext35 60AE                           __ptext27 3C58  
                         __ptext19 48BC                           __ptext60 2DFE  
                         __ptext52 5A12                           __ptext44 56EE  
                         __ptext36 5F30                           __ptext28 4C50  
                         __ptext61 6484                           __ptext53 139A  
                         __ptext45 61D0                           __ptext37 5F94  
                         __ptext29 6142                           __ptext54 639A  
                         __ptext46 63BE                           __ptext38 62B2  
                         __ptext55 5ACC                           __ptext47 620A  
                         __ptext39 5D5A                           __ptext48 627C  
                         __ptext49 605A                           __ptext58 2254  
                         __ptext59 63E0                       _RXF2SIDLbits 000F09  
                         __powers_ FDFD                       _RXF3SIDLbits 000F0D  
                 __size_of_sprintf 0894                       _RXF4SIDLbits 000F11  
                     _RXF5SIDLbits 000F15           CANsendMessage@dataLength 0076  
                    __size_of_main 072E                      __size_of_itoa 0048  
                    __size_of_utoa 00BE                  ?i2_CANsendMessage 0038  
             CANreceiveMessage@msg 0038              LCD_shift_cursor@shift 007D  
              i2_CANisTxReady$3251 0038                       _TXB0SIDLbits 000F42  
                Joystick_Polling@i 0071                 ??i2_CANsendMessage 0040  
                     _TXB1SIDLbits 000F32           __end_of_Joystick_Polling 60AE  
                     _TXB2SIDLbits 000F22                           int$flags 004C  
        __size_of_CANOperationMode 0016                      ?_CANisRxReady 0027  
                    ?_CANisTxReady 0027           __end_of_LCD_write_string 639A  
                      _RXB0DLCbits 000F65                        _RXB1DLCbits 000F55  
                     _RXM0SIDLbits 000F19                        _RXB0CONbits 000F60  
                       _LCD_cursor 62E6                        _RXB1CONbits 000F50  
                _CANreceiveMessage 2DFE                       _RXM1SIDLbits 000F1D  
                       _INTCONbits 000FF2                       _set_steering 0024  
                 ??_CANsendMessage 0078                 ?_CANreceiveMessage 0038  
                         itoa@base 0084                           isdigit@c 0072  
                         scale@scl 009F           CANsendMessage@identifier 0070  
                     _time_counter 0019                           intlevel1 0000  
                         intlevel2 0000                          sprintf@ap 0138  
                 __tdiv_to_l_@exp1 0080                          sprintf@sp 00C2  
                 __tdiv_to_l_@cntr 007F                   CANSetFilter@tamp 007A  
                 __tdiv_to_l_@quot 007B                   CANSetFilter@type 0074  
              ??_CANreceiveMessage 003A                   ___lwmod@dividend 0070  
                 ___lldiv@dividend 0070                        _TXB0DLCbits 000F45  
                      _right_speed 001F                        _TXB1DLCbits 000F35  
                      _TXB0CONbits 000F40                        _TXB2DLCbits 000F25  
                      _TXB1CONbits 000F30                        _TXB2CONbits 000F20  
                  _display_refresh 024F                   ??i2_CANisTxReady 0038  
             CANOperationMode@mode 0070                     ??_CANisRxReady 0038  
                      ?_CANSetMask 0070                     ??_CANisTxReady 0070  
                     ?__tdiv_to_l_ 0070          __end_of_CANreceiveMessage 330A  
                         utoa@base 007B                           sprintf@c 014C  
                         sprintf@f 00C4                   ___lldiv@quotient 0078  
                  ___lwmod@divisor 0072    LCD_shift_cursor@number_of_shift 007C  
                  ___lwmod@counter 0074                      ___fladd@signs 00B4  
               _PWR_Button_Polling 63FE                       ___fladd@aexp 00B5  
                     ___fladd@bexp 00B6              __end_of_CANInitialize 4C50  
              ?_PWR_Button_Polling 0027                       _power_switch 0252  
