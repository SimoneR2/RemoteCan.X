

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Apr 14 17:26:39 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73  0000                     
    74                           	psect	idataBANK0
    75  015E7E                     __pidataBANK0:
    76                           	opt stack 0
    77                           
    78                           ;initializer for _delay_quartz_frequency_value
    79  015E7E  10                 	db	16
    80                           
    81                           	psect	mediumconst
    82  00FECE                     __pmediumconst:
    83                           	opt stack 0
    84  00FECE  00                 	db	0
    85  00FECF                     __npowers_:
    86                           	opt stack 0
    87  00FECF  0000               	dw	0
    88  00FED1  3F80               	dw	16256
    89  00FED3  CCCD               	dw	52429
    90  00FED5  3DCC               	dw	15820
    91  00FED7  D70A               	dw	55050
    92  00FED9  3C23               	dw	15395
    93  00FEDB  126F               	dw	4719
    94  00FEDD  3A83               	dw	14979
    95  00FEDF  B717               	dw	46871
    96  00FEE1  38D1               	dw	14545
    97  00FEE3  C5AC               	dw	50604
    98  00FEE5  3727               	dw	14119
    99  00FEE7  37BD               	dw	14269
   100  00FEE9  3586               	dw	13702
   101  00FEEB  BF95               	dw	49045
   102  00FEED  33D6               	dw	13270
   103  00FEEF  CC77               	dw	52343
   104  00FEF1  322B               	dw	12843
   105  00FEF3  705F               	dw	28767
   106  00FEF5  3089               	dw	12425
   107  00FEF7  E6FF               	dw	59135
   108  00FEF9  2EDB               	dw	11995
   109  00FEFB  E508               	dw	58632
   110  00FEFD  1E3C               	dw	7740
   111  00FEFF  4260               	dw	16992
   112  00FF01  0DA2               	dw	3490
   113  00FF03                     __end_of__npowers_:
   114                           	opt stack 0
   115  00FF03                     __powers_:
   116                           	opt stack 0
   117  00FF03  0000               	dw	0
   118  00FF05  3F80               	dw	16256
   119  00FF07  0000               	dw	0
   120  00FF09  4120               	dw	16672
   121  00FF0B  0000               	dw	0
   122  00FF0D  42C8               	dw	17096
   123  00FF0F  0000               	dw	0
   124  00FF11  447A               	dw	17530
   125  00FF13  4000               	dw	16384
   126  00FF15  461C               	dw	17948
   127  00FF17  5000               	dw	20480
   128  00FF19  47C3               	dw	18371
   129  00FF1B  2400               	dw	9216
   130  00FF1D  4974               	dw	18804
   131  00FF1F  9680               	dw	38528
   132  00FF21  4B18               	dw	19224
   133  00FF23  BC20               	dw	48160
   134  00FF25  4CBE               	dw	19646
   135  00FF27  6B28               	dw	27432
   136  00FF29  4E6E               	dw	20078
   137  00FF2B  02F9               	dw	761
   138  00FF2D  5015               	dw	20501
   139  00FF2F  78EC               	dw	30956
   140  00FF31  60AD               	dw	24749
   141  00FF33  F2CA               	dw	62154
   142  00FF35  7149               	dw	29001
   143  00FF37                     __end_of__powers_:
   144                           	opt stack 0
   145  00FF37                     _dpowers:
   146                           	opt stack 0
   147  00FF37  0001               	dw	1
   148  00FF39  0000               	dw	0
   149  00FF3B  000A               	dw	10
   150  00FF3D  0000               	dw	0
   151  00FF3F  0064               	dw	100
   152  00FF41  0000               	dw	0
   153  00FF43  03E8               	dw	1000
   154  00FF45  0000               	dw	0
   155  00FF47  2710               	dw	10000
   156  00FF49  0000               	dw	0
   157  00FF4B  86A0               	dw	34464
   158  00FF4D  0001               	dw	1
   159  00FF4F  4240               	dw	16960
   160  00FF51  000F               	dw	15
   161  00FF53  9680               	dw	38528
   162  00FF55  0098               	dw	152
   163  00FF57  E100               	dw	57600
   164  00FF59  05F5               	dw	1525
   165  00FF5B  CA00               	dw	51712
   166  00FF5D  3B9A               	dw	15258
   167  00FF5F                     __end_of_dpowers:
   168                           	opt stack 0
   169  0000                     _RXB1CON	set	3920
   170  0000                     _RXB1CONbits	set	3920
   171  0000                     _RXB1D0	set	3926
   172  0000                     _RXB1D1	set	3927
   173  0000                     _RXB1D2	set	3928
   174  0000                     _RXB1D3	set	3929
   175  0000                     _RXB1D4	set	3930
   176  0000                     _RXB1D5	set	3931
   177  0000                     _RXB1D6	set	3932
   178  0000                     _RXB1D7	set	3933
   179  0000                     _RXB1DLC	set	3925
   180  0000                     _RXB1DLCbits	set	3925
   181  0000                     _RXB1EIDH	set	3923
   182  0000                     _RXB1EIDL	set	3924
   183  0000                     _RXB1SIDH	set	3921
   184  0000                     _RXB1SIDL	set	3922
   185  0000                     _RXB1SIDLbits	set	3922
   186  0000                     _RXF0EIDH	set	3842
   187  0000                     _RXF0EIDL	set	3843
   188  0000                     _RXF0SIDH	set	3840
   189  0000                     _RXF0SIDL	set	3841
   190  0000                     _RXF0SIDLbits	set	3841
   191  0000                     _RXF1EIDH	set	3846
   192  0000                     _RXF1EIDL	set	3847
   193  0000                     _RXF1SIDH	set	3844
   194  0000                     _RXF1SIDL	set	3845
   195  0000                     _RXF1SIDLbits	set	3845
   196  0000                     _RXF2EIDH	set	3850
   197  0000                     _RXF2EIDL	set	3851
   198  0000                     _RXF2SIDH	set	3848
   199  0000                     _RXF2SIDL	set	3849
   200  0000                     _RXF2SIDLbits	set	3849
   201  0000                     _RXF3EIDH	set	3854
   202  0000                     _RXF3EIDL	set	3855
   203  0000                     _RXF3SIDH	set	3852
   204  0000                     _RXF3SIDL	set	3853
   205  0000                     _RXF3SIDLbits	set	3853
   206  0000                     _RXF4EIDH	set	3858
   207  0000                     _RXF4EIDL	set	3859
   208  0000                     _RXF4SIDH	set	3856
   209  0000                     _RXF4SIDL	set	3857
   210  0000                     _RXF4SIDLbits	set	3857
   211  0000                     _RXF5EIDH	set	3862
   212  0000                     _RXF5EIDL	set	3863
   213  0000                     _RXF5SIDH	set	3860
   214  0000                     _RXF5SIDL	set	3861
   215  0000                     _RXF5SIDLbits	set	3861
   216  0000                     _RXM0EIDH	set	3866
   217  0000                     _RXM0EIDL	set	3867
   218  0000                     _RXM0SIDH	set	3864
   219  0000                     _RXM0SIDL	set	3865
   220  0000                     _RXM0SIDLbits	set	3865
   221  0000                     _RXM1EIDH	set	3870
   222  0000                     _RXM1EIDL	set	3871
   223  0000                     _RXM1SIDH	set	3868
   224  0000                     _RXM1SIDL	set	3869
   225  0000                     _RXM1SIDLbits	set	3869
   226  0000                     _TXB0CONbits	set	3904
   227  0000                     _TXB0D0	set	3910
   228  0000                     _TXB0D1	set	3911
   229  0000                     _TXB0D2	set	3912
   230  0000                     _TXB0D3	set	3913
   231  0000                     _TXB0D4	set	3914
   232  0000                     _TXB0D5	set	3915
   233  0000                     _TXB0D6	set	3916
   234  0000                     _TXB0D7	set	3917
   235  0000                     _TXB0DLC	set	3909
   236  0000                     _TXB0DLCbits	set	3909
   237  0000                     _TXB0EIDH	set	3907
   238  0000                     _TXB0EIDL	set	3908
   239  0000                     _TXB0SIDH	set	3905
   240  0000                     _TXB0SIDL	set	3906
   241  0000                     _TXB0SIDLbits	set	3906
   242  0000                     _TXB1CONbits	set	3888
   243  0000                     _TXB1D0	set	3894
   244  0000                     _TXB1D1	set	3895
   245  0000                     _TXB1D2	set	3896
   246  0000                     _TXB1D3	set	3897
   247  0000                     _TXB1D4	set	3898
   248  0000                     _TXB1D5	set	3899
   249  0000                     _TXB1D6	set	3900
   250  0000                     _TXB1D7	set	3901
   251  0000                     _TXB1DLC	set	3893
   252  0000                     _TXB1DLCbits	set	3893
   253  0000                     _TXB1EIDH	set	3891
   254  0000                     _TXB1EIDL	set	3892
   255  0000                     _TXB1SIDH	set	3889
   256  0000                     _TXB1SIDL	set	3890
   257  0000                     _TXB1SIDLbits	set	3890
   258  0000                     _TXB2CONbits	set	3872
   259  0000                     _TXB2D0	set	3878
   260  0000                     _TXB2D1	set	3879
   261  0000                     _TXB2D2	set	3880
   262  0000                     _TXB2D3	set	3881
   263  0000                     _TXB2D4	set	3882
   264  0000                     _TXB2D5	set	3883
   265  0000                     _TXB2D6	set	3884
   266  0000                     _TXB2D7	set	3885
   267  0000                     _TXB2DLC	set	3877
   268  0000                     _TXB2DLCbits	set	3877
   269  0000                     _TXB2EIDH	set	3875
   270  0000                     _TXB2EIDL	set	3876
   271  0000                     _TXB2SIDH	set	3873
   272  0000                     _TXB2SIDL	set	3874
   273  0000                     _TXB2SIDLbits	set	3874
   274  0000                     _ADCON0bits	set	4034
   275  0000                     _ADCON1	set	4033
   276  0000                     _ADCON2bits	set	4032
   277  0000                     _ADRESH	set	4036
   278  0000                     _BRGCON1	set	3952
   279  0000                     _BRGCON2	set	3953
   280  0000                     _BRGCON2bits	set	3953
   281  0000                     _BRGCON3	set	3954
   282  0000                     _BRGCON3bits	set	3954
   283  0000                     _CANCON	set	3951
   284  0000                     _CANCONbits	set	3951
   285  0000                     _CANSTAT	set	3950
   286  0000                     _COMSTATbits	set	3956
   287  0000                     _INTCONbits	set	4082
   288  0000                     _IPR2bits	set	4002
   289  0000                     _IPR3bits	set	4005
   290  0000                     _LATA	set	3977
   291  0000                     _LATB	set	3978
   292  0000                     _LATC	set	3979
   293  0000                     _LATCbits	set	3979
   294  0000                     _LATD	set	3980
   295  0000                     _LATDbits	set	3980
   296  0000                     _LATE	set	3981
   297  0000                     _LATEbits	set	3981
   298  0000                     _PIE2bits	set	4000
   299  0000                     _PIE3bits	set	4003
   300  0000                     _PIR2bits	set	4001
   301  0000                     _PIR3bits	set	4004
   302  0000                     _PORTAbits	set	3968
   303  0000                     _PORTBbits	set	3969
   304  0000                     _PORTDbits	set	3971
   305  0000                     _RCONbits	set	4048
   306  0000                     _RXB0CON	set	3936
   307  0000                     _RXB0CONbits	set	3936
   308  0000                     _RXB0D0	set	3942
   309  0000                     _RXB0D1	set	3943
   310  0000                     _RXB0D2	set	3944
   311  0000                     _RXB0D3	set	3945
   312  0000                     _RXB0D4	set	3946
   313  0000                     _RXB0D5	set	3947
   314  0000                     _RXB0D6	set	3948
   315  0000                     _RXB0D7	set	3949
   316  0000                     _RXB0DLC	set	3941
   317  0000                     _RXB0DLCbits	set	3941
   318  0000                     _RXB0EIDH	set	3939
   319  0000                     _RXB0EIDL	set	3940
   320  0000                     _RXB0SIDH	set	3937
   321  0000                     _RXB0SIDL	set	3938
   322  0000                     _RXB0SIDLbits	set	3938
   323  0000                     _RXERRCNT	set	3957
   324  0000                     _T3CON	set	4017
   325  0000                     _TMR3H	set	4019
   326  0000                     _TMR3L	set	4018
   327  0000                     _TRISA	set	3986
   328  0000                     _TRISB	set	3987
   329  0000                     _TRISC	set	3988
   330  0000                     _TRISD	set	3989
   331  0000                     _TRISE	set	3990
   332  0000                     _TXERRCNT	set	3958
   333  00FF5F                     STR_3:
   334  00FF5F  54                 	db	84	;'T'
   335  00FF60  75                 	db	117	;'u'
   336  00FF61  72                 	db	114	;'r'
   337  00FF62  6E                 	db	110	;'n'
   338  00FF63  20                 	db	32
   339  00FF64  74                 	db	116	;'t'
   340  00FF65  68                 	db	104	;'h'
   341  00FF66  65                 	db	101	;'e'
   342  00FF67  20                 	db	32
   343  00FF68  73                 	db	115	;'s'
   344  00FF69  77                 	db	119	;'w'
   345  00FF6A  69                 	db	105	;'i'
   346  00FF6B  74                 	db	116	;'t'
   347  00FF6C  63                 	db	99	;'c'
   348  00FF6D  68                 	db	104	;'h'
   349  00FF6E  20                 	db	32
   350  00FF6F  4F                 	db	79	;'O'
   351  00FF70  4E                 	db	78	;'N'
   352  00FF71  21                 	db	33
   353  00FF72  20                 	db	32
   354  00FF73  00                 	db	0
   355  00FF74                     STR_2:
   356  00FF74  3D                 	db	61	;'='
   357  00FF75  3D                 	db	61	;'='
   358  00FF76  3E                 	db	62	;'>'
   359  00FF77  20                 	db	32
   360  00FF78  56                 	db	86	;'V'
   361  00FF79  45                 	db	69	;'E'
   362  00FF7A  48                 	db	72	;'H'
   363  00FF7B  49                 	db	73	;'I'
   364  00FF7C  43                 	db	67	;'C'
   365  00FF7D  4C                 	db	76	;'L'
   366  00FF7E  45                 	db	69	;'E'
   367  00FF7F  20                 	db	32
   368  00FF80  20                 	db	32
   369  00FF81  4F                 	db	79	;'O'
   370  00FF82  46                 	db	70	;'F'
   371  00FF83  46                 	db	70	;'F'
   372  00FF84  20                 	db	32
   373  00FF85  3C                 	db	60	;'<'
   374  00FF86  3D                 	db	61	;'='
   375  00FF87  3D                 	db	61	;'='
   376  00FF88  00                 	db	0
   377  00FF89                     STR_6:
   378  00FF89  3D                 	db	61	;'='
   379  00FF8A  3D                 	db	61	;'='
   380  00FF8B  3D                 	db	61	;'='
   381  00FF8C  20                 	db	32
   382  00FF8D  56                 	db	86	;'V'
   383  00FF8E  45                 	db	69	;'E'
   384  00FF8F  48                 	db	72	;'H'
   385  00FF90  49                 	db	73	;'I'
   386  00FF91  43                 	db	67	;'C'
   387  00FF92  4C                 	db	76	;'L'
   388  00FF93  45                 	db	69	;'E'
   389  00FF94  20                 	db	32
   390  00FF95  44                 	db	68	;'D'
   391  00FF96  41                 	db	65	;'A'
   392  00FF97  54                 	db	84	;'T'
   393  00FF98  41                 	db	65	;'A'
   394  00FF99  20                 	db	32
   395  00FF9A  3D                 	db	61	;'='
   396  00FF9B  3D                 	db	61	;'='
   397  00FF9C  3D                 	db	61	;'='
   398  00FF9D  00                 	db	0
   399  00FF9E                     STR_1:
   400  00FF9E  3D                 	db	61	;'='
   401  00FF9F  3D                 	db	61	;'='
   402  00FFA0  3D                 	db	61	;'='
   403  00FFA1  3D                 	db	61	;'='
   404  00FFA2  3D                 	db	61	;'='
   405  00FFA3  3D                 	db	61	;'='
   406  00FFA4  3D                 	db	61	;'='
   407  00FFA5  3D                 	db	61	;'='
   408  00FFA6  3D                 	db	61	;'='
   409  00FFA7  3D                 	db	61	;'='
   410  00FFA8  3D                 	db	61	;'='
   411  00FFA9  3D                 	db	61	;'='
   412  00FFAA  3D                 	db	61	;'='
   413  00FFAB  3D                 	db	61	;'='
   414  00FFAC  3D                 	db	61	;'='
   415  00FFAD  3D                 	db	61	;'='
   416  00FFAE  3D                 	db	61	;'='
   417  00FFAF  3D                 	db	61	;'='
   418  00FFB0  3D                 	db	61	;'='
   419  00FFB1  3D                 	db	61	;'='
   420  00FFB2  00                 	db	0
   421  00FFB3                     STR_8:
   422  00FFB3  53                 	db	83	;'S'
   423  00FFB4  70                 	db	112	;'p'
   424  00FFB5  65                 	db	101	;'e'
   425  00FFB6  65                 	db	101	;'e'
   426  00FFB7  64                 	db	100	;'d'
   427  00FFB8  3A                 	db	58	;':'
   428  00FFB9  20                 	db	32
   429  00FFBA  78                 	db	120	;'x'
   430  00FFBB  2E                 	db	46
   431  00FFBC  78                 	db	120	;'x'
   432  00FFBD  78                 	db	120	;'x'
   433  00FFBE  20                 	db	32
   434  00FFBF  4B                 	db	75	;'K'
   435  00FFC0  6D                 	db	109	;'m'
   436  00FFC1  2F                 	db	47
   437  00FFC2  68                 	db	104	;'h'
   438  00FFC3  00                 	db	0
   439  00FFC4                     STR_7:
   440  00FFC4  44                 	db	68	;'D'
   441  00FFC5  69                 	db	105	;'i'
   442  00FFC6  72                 	db	114	;'r'
   443  00FFC7  65                 	db	101	;'e'
   444  00FFC8  63                 	db	99	;'c'
   445  00FFC9  74                 	db	116	;'t'
   446  00FFCA  69                 	db	105	;'i'
   447  00FFCB  6F                 	db	111	;'o'
   448  00FFCC  6E                 	db	110	;'n'
   449  00FFCD  3A                 	db	58	;':'
   450  00FFCE  20                 	db	32
   451  00FFCF  00                 	db	0
   452  00FFD0                     STR_16:
   453  00FFD0  57                 	db	87	;'W'
   454  00FFD1  61                 	db	97	;'a'
   455  00FFD2  69                 	db	105	;'i'
   456  00FFD3  74                 	db	116	;'t'
   457  00FFD4  2E                 	db	46
   458  00FFD5  2E                 	db	46
   459  00FFD6  2E                 	db	46
   460  00FFD7  00                 	db	0
   461  00FFD8                     STR_14:
   462  00FFD8  20                 	db	32
   463  00FFD9  20                 	db	32
   464  00FFDA  20                 	db	32
   465  00FFDB  20                 	db	32
   466  00FFDC  20                 	db	32
   467  00FFDD  00                 	db	0
   468  00FFDE                     STR_13:
   469  00FFDE  20                 	db	32
   470  00FFDF  53                 	db	83	;'S'
   471  00FFE0  52                 	db	82	;'R'
   472  00FFE1  43                 	db	67	;'C'
   473  00FFE2  48                 	db	72	;'H'
   474  00FFE3  00                 	db	0
   475  00FFE4                     STR_15:
   476  00FFE4  20                 	db	32
   477  00FFE5  50                 	db	80	;'P'
   478  00FFE6  41                 	db	65	;'A'
   479  00FFE7  52                 	db	82	;'R'
   480  00FFE8  4B                 	db	75	;'K'
   481  00FFE9  00                 	db	0
   482  00FFEA                     STR_12:
   483  00FFEA  50                 	db	80	;'P'
   484  00FFEB  20                 	db	32
   485  00FFEC  20                 	db	32
   486  00FFED  20                 	db	32
   487  00FFEE  00                 	db	0
   488  00FFEF                     STR_10:
   489  00FFEF  46                 	db	70	;'F'
   490  00FFF0  57                 	db	87	;'W'
   491  00FFF1  44                 	db	68	;'D'
   492  00FFF2  20                 	db	32
   493  00FFF3  00                 	db	0
   494  00FFF4                     STR_11:
   495  00FFF4  42                 	db	66	;'B'
   496  00FFF5  4B                 	db	75	;'K'
   497  00FFF6  57                 	db	87	;'W'
   498  00FFF7  44                 	db	68	;'D'
   499  00FFF8  00                 	db	0
   500  00FFF9                     STR_5:
   501  00FFF9  25                 	db	37
   502  00FFFA  2E                 	db	46
   503  00FFFB  33                 	db	51	;'3'
   504  00FFFC  66                 	db	102	;'f'
   505  00FFFD  00                 	db	0
   506  0000                     
   507                           ; #config settings
   508  00FFFE  00                 	db	0	; dummy byte at the end
   509  0000                     
   510                           	psect	cinit
   511  015B66                     __pcinit:
   512                           	opt stack 0
   513  015B66                     start_initialization:
   514                           	opt stack 0
   515  015B66                     __initialization:
   516                           	opt stack 0
   517                           
   518                           ; Clear objects allocated to BANK1 (41 bytes)
   519  015B66  EE01  F000         	lfsr	0,__pbssBANK1
   520  015B6A  0E29               	movlw	41
   521  015B6C                     clear_0:
   522  015B6C  6AEE               	clrf	postinc0,c
   523  015B6E  06E8               	decf	wreg,f,c
   524  015B70  E1FD               	bnz	clear_0
   525                           
   526                           ; Clear objects allocated to BANK0 (32 bytes)
   527  015B72  EE00  F0CB         	lfsr	0,__pbssBANK0
   528  015B76  0E20               	movlw	32
   529  015B78                     clear_1:
   530  015B78  6AEE               	clrf	postinc0,c
   531  015B7A  06E8               	decf	wreg,f,c
   532  015B7C  E1FD               	bnz	clear_1
   533                           
   534                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   535  015B7E  6A4D               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   536  015B80  6A4C               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   537                           
   538                           ; Clear objects allocated to COMRAM (42 bytes)
   539  015B82  EE00  F001         	lfsr	0,__pbssCOMRAM
   540  015B86  0E2A               	movlw	42
   541  015B88                     clear_2:
   542  015B88  6AEE               	clrf	postinc0,c
   543  015B8A  06E8               	decf	wreg,f,c
   544  015B8C  E1FD               	bnz	clear_2
   545                           
   546                           ; Initialize objects allocated to BANK0 (1 bytes)
   547                           ; load TBLPTR registers with __pidataBANK0
   548  015B8E  0E7E               	movlw	low __pidataBANK0
   549  015B90  6EF6               	movwf	tblptrl,c
   550  015B92  0E5E               	movlw	high __pidataBANK0
   551  015B94  6EF7               	movwf	tblptrh,c
   552  015B96  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   553  015B98  6EF8               	movwf	tblptru,c
   554  015B9A  0009               	tblrd		*+	;fetch initializer
   555  015B9C  CFF5 F0EB          	movff	tablat,__pdataBANK0
   556  015BA0                     end_of_initialization:
   557                           	opt stack 0
   558  015BA0                     __end_of__initialization:
   559                           	opt stack 0
   560  015BA0  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   561  015BA2  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   562  015BA4  0100               	movlb	0
   563  015BA6  EF93  F08D         	goto	_main	;jump to C main() function
   564                           tblptru	equ	0xFF8
   565                           tblptrh	equ	0xFF7
   566                           tblptrl	equ	0xFF6
   567                           tablat	equ	0xFF5
   568                           postinc0	equ	0xFEE
   569                           wreg	equ	0xFE8
   570                           
   571                           	psect	bitbssCOMRAM
   572  000260                     __pbitbssCOMRAM:
   573                           	opt stack 0
   574  000260                     _AbsFlag:
   575                           	opt stack 0
   576  000260                     	ds	1
   577  000261                     _F1_switch:
   578                           	opt stack 0
   579  000261                     	ds	1
   580  000262                     _F2_switch:
   581                           	opt stack 0
   582  000262                     	ds	1
   583  000263                     _MotoreFlag:
   584                           	opt stack 0
   585  000263                     	ds	1
   586  000264                     _RTR_Flag:
   587                           	opt stack 0
   588  000264                     	ds	1
   589  000265                     _SterzoFlag:
   590                           	opt stack 0
   591  000265                     	ds	1
   592  000266                     _display_refresh:
   593                           	opt stack 0
   594  000266                     	ds	1
   595  000267                     _newMessageCan:
   596                           	opt stack 0
   597  000267                     	ds	1
   598  000268                     _power_switch:
   599                           	opt stack 0
   600  000268                     	ds	1
   601  000269                     _wait_low_1:
   602                           	opt stack 0
   603  000269                     	ds	1
   604  00026A                     _wait_low_2:
   605                           	opt stack 0
   606  00026A                     	ds	1
   607  00026B                     _wait_low_3:
   608                           	opt stack 0
   609  00026B                     	ds	1
   610  00026C                     _y:
   611                           	opt stack 0
   612  00026C                     	ds	1
   613                           tblptru	equ	0xFF8
   614                           tblptrh	equ	0xFF7
   615                           tblptrl	equ	0xFF6
   616                           tablat	equ	0xFF5
   617                           postinc0	equ	0xFEE
   618                           wreg	equ	0xFE8
   619                           
   620                           	psect	bssCOMRAM
   621  000001                     __pbssCOMRAM:
   622                           	opt stack 0
   623  000001                     _data_speed_rx:
   624                           	opt stack 0
   625  000001                     	ds	7
   626  000008                     _actual_speed_kmh:
   627                           	opt stack 0
   628  000008                     	ds	4
   629  00000C                     _id:
   630                           	opt stack 0
   631  00000C                     	ds	4
   632  000010                     _pr_time_3:
   633                           	opt stack 0
   634  000010                     	ds	4
   635  000014                     _pr_time_4:
   636                           	opt stack 0
   637  000014                     	ds	4
   638  000018                     _pr_time_5:
   639                           	opt stack 0
   640  000018                     	ds	4
   641  00001C                     _pr_time_6:
   642                           	opt stack 0
   643  00001C                     	ds	4
   644  000020                     _time_counter:
   645                           	opt stack 0
   646  000020                     	ds	4
   647  000024                     _left_speed:
   648                           	opt stack 0
   649  000024                     	ds	2
   650  000026                     _right_speed:
   651                           	opt stack 0
   652  000026                     	ds	2
   653  000028                     _battery:
   654                           	opt stack 0
   655  000028                     	ds	1
   656  000029                     _set_steering:
   657                           	opt stack 0
   658  000029                     	ds	1
   659  00002A                     _data:
   660                           	opt stack 0
   661  00002A                     	ds	1
   662                           tblptru	equ	0xFF8
   663                           tblptrh	equ	0xFF7
   664                           tblptrl	equ	0xFF6
   665                           tablat	equ	0xFF5
   666                           postinc0	equ	0xFEE
   667                           wreg	equ	0xFE8
   668                           
   669                           	psect	bssBANK0
   670  0000CB                     __pbssBANK0:
   671                           	opt stack 0
   672  0000CB                     _JoystickConstants:
   673                           	opt stack 0
   674  0000CB                     	ds	8
   675  0000D3                     _pr_time_1:
   676                           	opt stack 0
   677  0000D3                     	ds	4
   678  0000D7                     _pr_time_2:
   679                           	opt stack 0
   680  0000D7                     	ds	4
   681  0000DB                     _JoystickValues:
   682                           	opt stack 0
   683  0000DB                     	ds	2
   684  0000DD                     _actual_speed:
   685                           	opt stack 0
   686  0000DD                     	ds	2
   687  0000DF                     _clock_counter_reference:
   688                           	opt stack 0
   689  0000DF                     	ds	2
   690  0000E1                     _set_speed:
   691                           	opt stack 0
   692  0000E1                     	ds	2
   693  0000E3                     _dir:
   694                           	opt stack 0
   695  0000E3                     	ds	1
   696  0000E4                     _parking_state:
   697                           	opt stack 0
   698  0000E4                     	ds	1
   699  0000E5                     _switch_position:
   700                           	opt stack 0
   701  0000E5                     	ds	1
   702  0000E6                     _x:
   703                           	opt stack 0
   704  0000E6                     	ds	1
   705  0000E7                     _z:
   706                           	opt stack 0
   707  0000E7                     	ds	1
   708  0000E8                     _data_brake:
   709                           	opt stack 0
   710  0000E8                     	ds	1
   711  0000E9                     _data_speed:
   712                           	opt stack 0
   713  0000E9                     	ds	1
   714  0000EA                     _data_steering:
   715                           	opt stack 0
   716  0000EA                     	ds	1
   717                           tblptru	equ	0xFF8
   718                           tblptrh	equ	0xFF7
   719                           tblptrl	equ	0xFF6
   720                           tablat	equ	0xFF5
   721                           postinc0	equ	0xFEE
   722                           wreg	equ	0xFE8
   723                           
   724                           	psect	dataBANK0
   725  0000EB                     __pdataBANK0:
   726                           	opt stack 0
   727  0000EB                     _delay_quartz_frequency_value:
   728                           	opt stack 0
   729  0000EB                     	ds	1
   730                           tblptru	equ	0xFF8
   731                           tblptrh	equ	0xFF7
   732                           tblptrl	equ	0xFF6
   733                           tablat	equ	0xFF5
   734                           postinc0	equ	0xFEE
   735                           wreg	equ	0xFE8
   736                           
   737                           	psect	bssBANK1
   738  000100                     __pbssBANK1:
   739                           	opt stack 0
   740  000100                     LCD_write_integer@F17272:
   741                           	opt stack 0
   742  000100                     	ds	6
   743  000106                     _msg:
   744                           	opt stack 0
   745  000106                     	ds	15
   746  000115                     _str:
   747                           	opt stack 0
   748  000115                     	ds	12
   749  000121                     _park_assist_state:
   750                           	opt stack 0
   751  000121                     	ds	8
   752                           tblptru	equ	0xFF8
   753                           tblptrh	equ	0xFF7
   754                           tblptrl	equ	0xFF6
   755                           tablat	equ	0xFF5
   756                           postinc0	equ	0xFEE
   757                           wreg	equ	0xFE8
   758                           
   759                           	psect	cstackBANK1
   760  000129                     __pcstackBANK1:
   761                           	opt stack 0
   762  000129                     _sprintf$4222:
   763                           	opt stack 0
   764                           
   765                           ; 4 bytes @ 0x0
   766  000129                     	ds	4
   767  00012D                     sprintf@ap:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x4
   771  00012D                     	ds	2
   772  00012F                     sprintf@flag:
   773                           	opt stack 0
   774                           
   775                           ; 2 bytes @ 0x6
   776  00012F                     	ds	2
   777  000131                     sprintf@val:
   778                           	opt stack 0
   779                           
   780                           ; 4 bytes @ 0x8
   781  000131                     	ds	4
   782  000135                     sprintf@exp:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0xC
   786  000135                     	ds	2
   787  000137                     sprintf@tmpval:
   788                           	opt stack 0
   789                           
   790                           ; 4 bytes @ 0xE
   791  000137                     	ds	4
   792  00013B                     sprintf@prec:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x12
   796  00013B                     	ds	2
   797  00013D                     sprintf@fval:
   798                           	opt stack 0
   799                           
   800                           ; 4 bytes @ 0x14
   801  00013D                     	ds	4
   802  000141                     sprintf@c:
   803                           	opt stack 0
   804                           
   805                           ; 1 bytes @ 0x18
   806  000141                     	ds	1
   807  000142                     ??_main:
   808                           
   809                           ; 0 bytes @ 0x19
   810  000142                     	ds	8
   811                           tblptru	equ	0xFF8
   812                           tblptrh	equ	0xFF7
   813                           tblptrl	equ	0xFF6
   814                           tablat	equ	0xFF5
   815                           postinc0	equ	0xFEE
   816                           wreg	equ	0xFE8
   817                           
   818                           	psect	cstackBANK0
   819  000060                     __pcstackBANK0:
   820                           	opt stack 0
   821  000060                     ??_ISR_alta:
   822                           
   823                           ; 0 bytes @ 0x0
   824  000060                     	ds	14
   825  00006E                     ISR_alta@i:
   826                           	opt stack 0
   827                           
   828                           ; 1 bytes @ 0xE
   829  00006E                     	ds	1
   830  00006F                     ??_Joystick_Polling:
   831  00006F                     ??_CAN_interpreter:
   832  00006F                     ??_isdigit:
   833  00006F                     ?___wmul:
   834                           	opt stack 0
   835  00006F                     ?___awmod:
   836                           	opt stack 0
   837  00006F                     ?__tdiv_to_l_:
   838                           	opt stack 0
   839  00006F                     ?__div_to_l_:
   840                           	opt stack 0
   841  00006F                     ?___lldiv:
   842                           	opt stack 0
   843  00006F                     ?___llmod:
   844                           	opt stack 0
   845  00006F                     ?___xxtofl:
   846                           	opt stack 0
   847  00006F                     CANOperationMode@mode:
   848                           	opt stack 0
   849  00006F                     _CANisTxReady$3235:
   850                           	opt stack 0
   851  00006F                     delay_set_quartz@frequency:
   852                           	opt stack 0
   853  00006F                     ___wmul@multiplier:
   854                           	opt stack 0
   855  00006F                     ___awmod@dividend:
   856                           	opt stack 0
   857  00006F                     CANsendMessage@identifier:
   858                           	opt stack 0
   859  00006F                     CANSetMask@mask:
   860                           	opt stack 0
   861  00006F                     CANSetFilter@filter:
   862                           	opt stack 0
   863  00006F                     __div_to_l_@f1:
   864                           	opt stack 0
   865  00006F                     ___flge@ff1:
   866                           	opt stack 0
   867  00006F                     __tdiv_to_l_@f1:
   868                           	opt stack 0
   869  00006F                     ___lldiv@dividend:
   870                           	opt stack 0
   871  00006F                     ___llmod@dividend:
   872                           	opt stack 0
   873  00006F                     ___xxtofl@val:
   874                           	opt stack 0
   875                           
   876                           ; 4 bytes @ 0xF
   877  00006F                     	ds	1
   878  000070                     Joystick_Polling@i:
   879                           	opt stack 0
   880  000070                     _isdigit$3801:
   881                           	opt stack 0
   882                           
   883                           ; 1 bytes @ 0x10
   884  000070                     	ds	1
   885  000071                     isdigit@c:
   886                           	opt stack 0
   887  000071                     ___wmul@multiplicand:
   888                           	opt stack 0
   889  000071                     ___awmod@divisor:
   890                           	opt stack 0
   891                           
   892                           ; 2 bytes @ 0x11
   893  000071                     	ds	2
   894  000073                     ??___xxtofl:
   895  000073                     CANSetMask@type:
   896                           	opt stack 0
   897  000073                     CANSetFilter@type:
   898                           	opt stack 0
   899  000073                     ___awmod@counter:
   900                           	opt stack 0
   901  000073                     CANsendMessage@data:
   902                           	opt stack 0
   903  000073                     ___wmul@product:
   904                           	opt stack 0
   905  000073                     __div_to_l_@f2:
   906                           	opt stack 0
   907  000073                     ___flge@ff2:
   908                           	opt stack 0
   909  000073                     __tdiv_to_l_@f2:
   910                           	opt stack 0
   911  000073                     ___lldiv@divisor:
   912                           	opt stack 0
   913  000073                     ___llmod@divisor:
   914                           	opt stack 0
   915                           
   916                           ; 4 bytes @ 0x13
   917  000073                     	ds	1
   918  000074                     ??_CANSetMask:
   919  000074                     ??_CANSetFilter:
   920  000074                     ___awmod@sign:
   921                           	opt stack 0
   922                           
   923                           ; 1 bytes @ 0x14
   924  000074                     	ds	1
   925  000075                     ?___awdiv:
   926                           	opt stack 0
   927  000075                     CANsendMessage@dataLength:
   928                           	opt stack 0
   929  000075                     delay_ms@value_ms:
   930                           	opt stack 0
   931  000075                     ___awdiv@dividend:
   932                           	opt stack 0
   933                           
   934                           ; 2 bytes @ 0x15
   935  000075                     	ds	1
   936  000076                     CANsendMessage@flags:
   937                           	opt stack 0
   938                           
   939                           ; 1 bytes @ 0x16
   940  000076                     	ds	1
   941  000077                     ??__tdiv_to_l_:
   942  000077                     ??_CANsendMessage:
   943  000077                     ??___flge:
   944  000077                     LCD_send_command@D2:
   945                           	opt stack 0
   946  000077                     ___llmod@counter:
   947                           	opt stack 0
   948  000077                     ___xxtofl@sign:
   949                           	opt stack 0
   950  000077                     ___awdiv@divisor:
   951                           	opt stack 0
   952  000077                     __div_to_l_@quot:
   953                           	opt stack 0
   954  000077                     ___lldiv@quotient:
   955                           	opt stack 0
   956                           
   957                           ; 4 bytes @ 0x17
   958  000077                     	ds	1
   959  000078                     CANSetMask@numBuffer:
   960                           	opt stack 0
   961  000078                     CANSetFilter@numBuffer:
   962                           	opt stack 0
   963  000078                     LCD_send_command@D1:
   964                           	opt stack 0
   965  000078                     ___xxtofl@exp:
   966                           	opt stack 0
   967                           
   968                           ; 1 bytes @ 0x18
   969  000078                     	ds	1
   970  000079                     LCD_send_command@D0:
   971                           	opt stack 0
   972  000079                     ___awdiv@counter:
   973                           	opt stack 0
   974  000079                     CANSetMask@tamp:
   975                           	opt stack 0
   976  000079                     CANSetFilter@tamp:
   977                           	opt stack 0
   978  000079                     ___xxtofl@arg:
   979                           	opt stack 0
   980                           
   981                           ; 4 bytes @ 0x19
   982  000079                     	ds	1
   983  00007A                     LCD_send_command@D3:
   984                           	opt stack 0
   985  00007A                     ___awdiv@sign:
   986                           	opt stack 0
   987  00007A                     __tdiv_to_l_@quot:
   988                           	opt stack 0
   989                           
   990                           ; 4 bytes @ 0x1A
   991  00007A                     	ds	1
   992  00007B                     LCD_shift_cursor@number_of_shift:
   993                           	opt stack 0
   994  00007B                     LCD_goto_line@line:
   995                           	opt stack 0
   996  00007B                     LCD_write_char@D3:
   997                           	opt stack 0
   998  00007B                     LCD_cursor@blinking:
   999                           	opt stack 0
  1000  00007B                     __div_to_l_@cntr:
  1001                           	opt stack 0
  1002  00007B                     ___lldiv@counter:
  1003                           	opt stack 0
  1004  00007B                     ___awdiv@quotient:
  1005                           	opt stack 0
  1006  00007B                     CANsendMessage@tamp:
  1007                           	opt stack 0
  1008                           
  1009                           ; 4 bytes @ 0x1B
  1010  00007B                     	ds	1
  1011  00007C                     LCD_shift_cursor@shift:
  1012                           	opt stack 0
  1013  00007C                     LCD_write_char@D2:
  1014                           	opt stack 0
  1015  00007C                     LCD_cursor@active:
  1016                           	opt stack 0
  1017  00007C                     __div_to_l_@exp1:
  1018                           	opt stack 0
  1019                           
  1020                           ; 1 bytes @ 0x1C
  1021  00007C                     	ds	1
  1022  00007D                     ?___fldiv:
  1023                           	opt stack 0
  1024  00007D                     ?___flmul:
  1025                           	opt stack 0
  1026  00007D                     CANInitialize@phaseSeg1:
  1027                           	opt stack 0
  1028  00007D                     LCD_shift_cursor@i:
  1029                           	opt stack 0
  1030  00007D                     LCD_write_char@D1:
  1031                           	opt stack 0
  1032  00007D                     LCD_initialize@quartz_frequency:
  1033                           	opt stack 0
  1034  00007D                     ___fldiv@b:
  1035                           	opt stack 0
  1036  00007D                     ___flmul@b:
  1037                           	opt stack 0
  1038                           
  1039                           ; 4 bytes @ 0x1D
  1040  00007D                     	ds	1
  1041  00007E                     CANInitialize@phaseSeg2:
  1042                           	opt stack 0
  1043  00007E                     LCD_goto_xy@y:
  1044                           	opt stack 0
  1045  00007E                     LCD_write_char@D0:
  1046                           	opt stack 0
  1047  00007E                     __tdiv_to_l_@cntr:
  1048                           	opt stack 0
  1049                           
  1050                           ; 1 bytes @ 0x1E
  1051  00007E                     	ds	1
  1052  00007F                     CANInitialize@SJW:
  1053                           	opt stack 0
  1054  00007F                     LCD_goto_xy@x:
  1055                           	opt stack 0
  1056  00007F                     LCD_write_char@value:
  1057                           	opt stack 0
  1058  00007F                     __tdiv_to_l_@exp1:
  1059                           	opt stack 0
  1060                           
  1061                           ; 1 bytes @ 0x1F
  1062  00007F                     	ds	1
  1063  000080                     CANInitialize@BRP:
  1064                           	opt stack 0
  1065  000080                     LCD_write_message@buffer:
  1066                           	opt stack 0
  1067  000080                     LCD_write_string@buffer:
  1068                           	opt stack 0
  1069                           
  1070                           ; 2 bytes @ 0x20
  1071  000080                     	ds	1
  1072  000081                     CANInitialize@flags:
  1073                           	opt stack 0
  1074  000081                     ___fldiv@a:
  1075                           	opt stack 0
  1076  000081                     ___flmul@a:
  1077                           	opt stack 0
  1078                           
  1079                           ; 4 bytes @ 0x21
  1080  000081                     	ds	1
  1081  000082                     ??_CANInitialize:
  1082  000082                     
  1083                           ; 0 bytes @ 0x22
  1084  000082                     	ds	3
  1085  000085                     ??___fldiv:
  1086  000085                     ??___flmul:
  1087                           
  1088                           ; 0 bytes @ 0x25
  1089  000085                     	ds	1
  1090  000086                     CANInitialize@propSeg:
  1091                           	opt stack 0
  1092                           
  1093                           ; 1 bytes @ 0x26
  1094  000086                     	ds	1
  1095  000087                     CANInitialize@FilterConfig1:
  1096                           	opt stack 0
  1097                           
  1098                           ; 1 bytes @ 0x27
  1099  000087                     	ds	1
  1100  000088                     CANInitialize@FilterConfig2:
  1101                           	opt stack 0
  1102                           
  1103                           ; 1 bytes @ 0x28
  1104  000088                     	ds	1
  1105  000089                     ___fldiv@sign:
  1106                           	opt stack 0
  1107  000089                     ___flmul@sign:
  1108                           	opt stack 0
  1109                           
  1110                           ; 1 bytes @ 0x29
  1111  000089                     	ds	1
  1112  00008A                     ___flmul@aexp:
  1113                           	opt stack 0
  1114  00008A                     ___fldiv@rem:
  1115                           	opt stack 0
  1116                           
  1117                           ; 4 bytes @ 0x2A
  1118  00008A                     	ds	1
  1119  00008B                     ___flmul@grs:
  1120                           	opt stack 0
  1121                           
  1122                           ; 4 bytes @ 0x2B
  1123  00008B                     	ds	3
  1124  00008E                     ___fldiv@new_exp:
  1125                           	opt stack 0
  1126                           
  1127                           ; 2 bytes @ 0x2E
  1128  00008E                     	ds	1
  1129  00008F                     ___flmul@bexp:
  1130                           	opt stack 0
  1131                           
  1132                           ; 1 bytes @ 0x2F
  1133  00008F                     	ds	1
  1134  000090                     ___fldiv@grs:
  1135                           	opt stack 0
  1136  000090                     ___flmul@prod:
  1137                           	opt stack 0
  1138                           
  1139                           ; 4 bytes @ 0x30
  1140  000090                     	ds	4
  1141  000094                     ___fldiv@bexp:
  1142                           	opt stack 0
  1143  000094                     ___flmul@temp:
  1144                           	opt stack 0
  1145                           
  1146                           ; 2 bytes @ 0x34
  1147  000094                     	ds	1
  1148  000095                     ___fldiv@aexp:
  1149                           	opt stack 0
  1150                           
  1151                           ; 1 bytes @ 0x35
  1152  000095                     	ds	1
  1153  000096                     ?_fround:
  1154                           	opt stack 0
  1155  000096                     ?_scale:
  1156                           	opt stack 0
  1157  000096                     ?___flneg:
  1158                           	opt stack 0
  1159  000096                     ___flneg@f1:
  1160                           	opt stack 0
  1161                           
  1162                           ; 4 bytes @ 0x36
  1163  000096                     	ds	4
  1164  00009A                     _fround$4220:
  1165                           	opt stack 0
  1166  00009A                     _scale$4221:
  1167                           	opt stack 0
  1168                           
  1169                           ; 4 bytes @ 0x3A
  1170  00009A                     	ds	4
  1171  00009E                     scale@scl:
  1172                           	opt stack 0
  1173  00009E                     _fround$4219:
  1174                           	opt stack 0
  1175                           
  1176                           ; 4 bytes @ 0x3E
  1177  00009E                     	ds	4
  1178  0000A2                     fround@prec:
  1179                           	opt stack 0
  1180                           
  1181                           ; 1 bytes @ 0x42
  1182  0000A2                     	ds	1
  1183  0000A3                     ?___fladd:
  1184                           	opt stack 0
  1185  0000A3                     ___fladd@b:
  1186                           	opt stack 0
  1187                           
  1188                           ; 4 bytes @ 0x43
  1189  0000A3                     	ds	4
  1190  0000A7                     ___fladd@a:
  1191                           	opt stack 0
  1192                           
  1193                           ; 4 bytes @ 0x47
  1194  0000A7                     	ds	4
  1195  0000AB                     ??___fladd:
  1196                           
  1197                           ; 0 bytes @ 0x4B
  1198  0000AB                     	ds	8
  1199  0000B3                     ___fladd@signs:
  1200                           	opt stack 0
  1201                           
  1202                           ; 1 bytes @ 0x53
  1203  0000B3                     	ds	1
  1204  0000B4                     ___fladd@aexp:
  1205                           	opt stack 0
  1206                           
  1207                           ; 1 bytes @ 0x54
  1208  0000B4                     	ds	1
  1209  0000B5                     ___fladd@bexp:
  1210                           	opt stack 0
  1211                           
  1212                           ; 1 bytes @ 0x55
  1213  0000B5                     	ds	1
  1214  0000B6                     ___fladd@grs:
  1215                           	opt stack 0
  1216                           
  1217                           ; 1 bytes @ 0x56
  1218  0000B6                     	ds	1
  1219  0000B7                     ?___flsub:
  1220                           	opt stack 0
  1221  0000B7                     ?___fltol:
  1222                           	opt stack 0
  1223  0000B7                     ___fltol@f1:
  1224                           	opt stack 0
  1225  0000B7                     ___flsub@b:
  1226                           	opt stack 0
  1227                           
  1228                           ; 4 bytes @ 0x57
  1229  0000B7                     	ds	4
  1230  0000BB                     ??___fltol:
  1231  0000BB                     ___flsub@a:
  1232                           	opt stack 0
  1233                           
  1234                           ; 4 bytes @ 0x5B
  1235  0000BB                     	ds	4
  1236  0000BF                     ___fltol@sign1:
  1237                           	opt stack 0
  1238                           
  1239                           ; 1 bytes @ 0x5F
  1240  0000BF                     	ds	1
  1241  0000C0                     ___fltol@exp1:
  1242                           	opt stack 0
  1243                           
  1244                           ; 1 bytes @ 0x60
  1245  0000C0                     	ds	1
  1246  0000C1                     ?_sprintf:
  1247                           	opt stack 0
  1248  0000C1                     sprintf@sp:
  1249                           	opt stack 0
  1250                           
  1251                           ; 2 bytes @ 0x61
  1252  0000C1                     	ds	2
  1253  0000C3                     sprintf@f:
  1254                           	opt stack 0
  1255                           
  1256                           ; 2 bytes @ 0x63
  1257  0000C3                     	ds	6
  1258  0000C9                     ??_sprintf:
  1259                           
  1260                           ; 0 bytes @ 0x69
  1261  0000C9                     	ds	2
  1262  0000CB                     tblptru	equ	0xFF8
  1263                           tblptrh	equ	0xFF7
  1264                           tblptrl	equ	0xFF6
  1265                           tablat	equ	0xFF5
  1266                           postinc0	equ	0xFEE
  1267                           wreg	equ	0xFE8
  1268                           
  1269                           ; 0 bytes @ 0x6B
  1270                           
  1271                           	psect	cstackCOMRAM
  1272  00002B                     __pcstackCOMRAM:
  1273                           	opt stack 0
  1274  00002B                     ??_ISR_bassa:
  1275  00002B                     
  1276                           ; 1 bytes @ 0x0
  1277  00002B                     	ds	17
  1278  00003C                     _CANisRxReady$3237:
  1279                           	opt stack 0
  1280  00003C                     i2_CANisTxReady$3235:
  1281                           	opt stack 0
  1282  00003C                     CANreceiveMessage@msg:
  1283                           	opt stack 0
  1284  00003C                     i2CANsendMessage@identifier:
  1285                           	opt stack 0
  1286                           
  1287                           ; 4 bytes @ 0x11
  1288  00003C                     	ds	2
  1289  00003E                     ??_CANreceiveMessage:
  1290                           
  1291                           ; 0 bytes @ 0x13
  1292  00003E                     	ds	2
  1293  000040                     i2CANsendMessage@data:
  1294                           	opt stack 0
  1295                           
  1296                           ; 2 bytes @ 0x15
  1297  000040                     	ds	2
  1298  000042                     i2CANsendMessage@dataLength:
  1299                           	opt stack 0
  1300                           
  1301                           ; 1 bytes @ 0x17
  1302  000042                     	ds	1
  1303  000043                     i2CANsendMessage@flags:
  1304                           	opt stack 0
  1305                           
  1306                           ; 1 bytes @ 0x18
  1307  000043                     	ds	1
  1308  000044                     ??i2_CANsendMessage:
  1309                           
  1310                           ; 0 bytes @ 0x19
  1311  000044                     	ds	2
  1312  000046                     CANreceiveMessage@error:
  1313                           	opt stack 0
  1314                           
  1315                           ; 1 bytes @ 0x1B
  1316  000046                     	ds	1
  1317  000047                     CANreceiveMessage@tamp:
  1318                           	opt stack 0
  1319                           
  1320                           ; 1 bytes @ 0x1C
  1321  000047                     	ds	1
  1322  000048                     i2CANsendMessage@tamp:
  1323                           	opt stack 0
  1324                           
  1325                           ; 4 bytes @ 0x1D
  1326  000048                     	ds	4
  1327                           tblptru	equ	0xFF8
  1328                           tblptrh	equ	0xFF7
  1329                           tblptrl	equ	0xFF6
  1330                           tablat	equ	0xFF5
  1331                           postinc0	equ	0xFEE
  1332                           wreg	equ	0xFE8
  1333                           
  1334 ;;
  1335 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1336 ;;
  1337 ;; *************** function _main *****************
  1338 ;; Defined at:
  1339 ;;		line 147 in file "RemoteCan.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;		None
  1344 ;; Return value:  Size  Location     Type
  1345 ;;		None               void
  1346 ;; Registers used:
  1347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1355 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1356 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1357 ;;Total ram usage:        8 bytes
  1358 ;; Hardware stack levels required when called:   10
  1359 ;; This function calls:
  1360 ;;		_CAN_Send
  1361 ;;		_CAN_interpreter
  1362 ;;		_CANisTxReady
  1363 ;;		_CANsendMessage
  1364 ;;		_F1_Button_Polling
  1365 ;;		_F2_Button_Polling
  1366 ;;		_Joystick_Polling
  1367 ;;		_LCD_Handler
  1368 ;;		_LCD_goto_line
  1369 ;;		_LCD_initialize
  1370 ;;		_LCD_write_message
  1371 ;;		_PWR_Button_Polling
  1372 ;;		___fladd
  1373 ;;		___flmul
  1374 ;;		___flneg
  1375 ;;		___fltol
  1376 ;;		___xxtofl
  1377 ;;		_board_initialization
  1378 ;;		_delay_ms
  1379 ;; This function is called by:
  1380 ;;		Startup code after reset
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text0
  1385  011B26                     __ptext0:
  1386                           	opt stack 0
  1387  011B26                     _main:
  1388                           	opt stack 21
  1389                           
  1390                           ;RemoteCan.c: 148: board_initialization();
  1391                           
  1392                           ;incstack = 0
  1393  011B26  EC86  F0AA         	call	_board_initialization	;wreg free
  1394                           
  1395                           ;RemoteCan.c: 150: LATDbits.LD6 = 1;
  1396  011B2A  8C8C               	bsf	3980,6,c	;volatile
  1397                           
  1398                           ;RemoteCan.c: 151: LATDbits.LD5 = 1;
  1399  011B2C  8A8C               	bsf	3980,5,c	;volatile
  1400                           
  1401                           ;RemoteCan.c: 152: delay_ms(500);
  1402  011B2E  0E01               	movlw	1
  1403  011B30  0100               	movlb	0	; () banked
  1404  011B32  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1405  011B34  0EF4               	movlw	244
  1406  011B36  6F75               	movwf	delay_ms@value_ms& (0+255),b
  1407  011B38  ECF2  F0AD         	call	_delay_ms	;wreg free
  1408                           
  1409                           ;RemoteCan.c: 153: LATDbits.LD6 = 0;
  1410  011B3C  9C8C               	bcf	3980,6,c	;volatile
  1411                           
  1412                           ;RemoteCan.c: 154: LATDbits.LD5 = 0;
  1413  011B3E  9A8C               	bcf	3980,5,c	;volatile
  1414                           
  1415                           ;RemoteCan.c: 156: JoystickConstants[0] = 0.703;
  1416  011B40  0ECF               	movlw	207
  1417  011B42  0100               	movlb	0	; () banked
  1418  011B44  6FCB               	movwf	_JoystickConstants& (0+255),b	;volatile
  1419  011B46  0EF7               	movlw	247
  1420  011B48  6FCC               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1421  011B4A  0E33               	movlw	51
  1422  011B4C  6FCD               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1423  011B4E  0E3F               	movlw	63
  1424  011B50  6FCE               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;RemoteCan.c: 157: JoystickConstants[1] = 10;
  1428  011B52  0E00               	movlw	0
  1429  011B54  0100               	movlb	0	; () banked
  1430  011B56  6FCF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1431  011B58  0E00               	movlw	0
  1432  011B5A  6FD0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1433  011B5C  0E20               	movlw	32
  1434  011B5E  6FD1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1435  011B60  0E41               	movlw	65
  1436  011B62  6FD2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;RemoteCan.c: 159: display_refresh = 1;
  1440  011B64  8C4C               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  1441  011B66                     l9172:
  1442                           
  1443                           ;RemoteCan.c: 163: PWR_Button_Polling();
  1444  011B66  ECEC  F0AE         	call	_PWR_Button_Polling	;wreg free
  1445                           
  1446                           ;RemoteCan.c: 164: F1_Button_Polling();
  1447  011B6A  EC16  F0AF         	call	_F1_Button_Polling	;wreg free
  1448                           
  1449                           ;RemoteCan.c: 165: F2_Button_Polling();
  1450  011B6E  EC08  F0AF         	call	_F2_Button_Polling	;wreg free
  1451                           
  1452                           ;RemoteCan.c: 168: if (power_switch == 0) {
  1453  011B72  B04D               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1454  011B74  D09B               	goto	l9214
  1455                           
  1456                           ;RemoteCan.c: 169: dir = 1;
  1457  011B76  0E01               	movlw	1
  1458  011B78  0100               	movlb	0	; () banked
  1459  011B7A  6FE3               	movwf	_dir& (0+255),b	;volatile
  1460                           
  1461                           ;RemoteCan.c: 170: set_speed = 0;
  1462  011B7C  0E00               	movlw	0
  1463  011B7E  0100               	movlb	0	; () banked
  1464  011B80  6FE2               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1465  011B82  0E00               	movlw	0
  1466  011B84  6FE1               	movwf	_set_speed& (0+255),b	;volatile
  1467                           
  1468                           ;RemoteCan.c: 171: data_steering [0] = 90;
  1469  011B86  0E5A               	movlw	90
  1470  011B88  0100               	movlb	0	; () banked
  1471  011B8A  6FEA               	movwf	_data_steering& (0+255),b
  1472                           
  1473                           ;RemoteCan.c: 172: data_brake [0] = 0;
  1474  011B8C  0E00               	movlw	0
  1475  011B8E  0100               	movlb	0	; () banked
  1476  011B90  6FE8               	movwf	_data_brake& (0+255),b
  1477                           
  1478                           ;RemoteCan.c: 173: data_brake [1] = 1;
  1479  011B92  0E01               	movlw	1
  1480  011B94  0100               	movlb	0	; () banked
  1481  011B96  6FE9               	movwf	(_data_brake+1)& (0+255),b
  1482                           
  1483                           ; BSR set to: 0
  1484                           ;RemoteCan.c: 174: CAN_Send();
  1485  011B98  ECA4  F0AB         	call	_CAN_Send	;wreg free
  1486                           
  1487                           ;RemoteCan.c: 175: LCD_initialize(16);
  1488  011B9C  0E10               	movlw	16
  1489  011B9E  EC25  F0A8         	call	_LCD_initialize
  1490                           
  1491                           ;RemoteCan.c: 176: LCD_goto_line(1);
  1492  011BA2  0E01               	movlw	1
  1493  011BA4  EC10  F0AA         	call	_LCD_goto_line
  1494                           
  1495                           ;RemoteCan.c: 177: LCD_write_message("====================");
  1496  011BA8  0E9E               	movlw	low STR_1
  1497  011BAA  0100               	movlb	0	; () banked
  1498  011BAC  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  1499  011BAE  0EFF               	movlw	high STR_1
  1500  011BB0  0100               	movlb	0	; () banked
  1501  011BB2  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1502  011BB4  EC46  F0AE         	call	_LCD_write_message	;wreg free
  1503                           
  1504                           ;RemoteCan.c: 178: LCD_goto_line(2);
  1505  011BB8  0E02               	movlw	2
  1506  011BBA  EC10  F0AA         	call	_LCD_goto_line
  1507                           
  1508                           ;RemoteCan.c: 179: LCD_write_message("==> VEHICLE  OFF <==");
  1509  011BBE  0E74               	movlw	low STR_2
  1510  011BC0  0100               	movlb	0	; () banked
  1511  011BC2  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  1512  011BC4  0EFF               	movlw	high STR_2
  1513  011BC6  0100               	movlb	0	; () banked
  1514  011BC8  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1515  011BCA  EC46  F0AE         	call	_LCD_write_message	;wreg free
  1516                           
  1517                           ;RemoteCan.c: 180: LCD_goto_line(3);
  1518  011BCE  0E03               	movlw	3
  1519  011BD0  EC10  F0AA         	call	_LCD_goto_line
  1520                           
  1521                           ;RemoteCan.c: 181: LCD_write_message("Turn the switch ON! ");
  1522  011BD4  0E5F               	movlw	low STR_3
  1523  011BD6  0100               	movlb	0	; () banked
  1524  011BD8  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  1525  011BDA  0EFF               	movlw	high STR_3
  1526  011BDC  0100               	movlb	0	; () banked
  1527  011BDE  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1528  011BE0  EC46  F0AE         	call	_LCD_write_message	;wreg free
  1529                           
  1530                           ;RemoteCan.c: 182: LCD_goto_line(4);
  1531  011BE4  0E04               	movlw	4
  1532  011BE6  EC10  F0AA         	call	_LCD_goto_line
  1533                           
  1534                           ;RemoteCan.c: 183: LCD_write_message("====================");
  1535  011BEA  0E9E               	movlw	low STR_1
  1536  011BEC  0100               	movlb	0	; () banked
  1537  011BEE  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  1538  011BF0  0EFF               	movlw	high STR_1
  1539  011BF2  0100               	movlb	0	; () banked
  1540  011BF4  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1541  011BF6  EC46  F0AE         	call	_LCD_write_message	;wreg free
  1542                           
  1543                           ;RemoteCan.c: 184: while (power_switch == 0) {
  1544  011BFA  D054               	goto	l9212
  1545  011BFC                     l9202:
  1546                           
  1547                           ;RemoteCan.c: 185: if ((time_counter - pr_time_1) >= 30) {
  1548  011BFC  C0D3  F142         	movff	_pr_time_1,??_main	;volatile
  1549  011C00  C0D4  F143         	movff	_pr_time_1+1,??_main+1	;volatile
  1550  011C04  C0D5  F144         	movff	_pr_time_1+2,??_main+2	;volatile
  1551  011C08  C0D6  F145         	movff	_pr_time_1+3,??_main+3	;volatile
  1552  011C0C  0101               	movlb	1	; () banked
  1553  011C0E  1F42               	comf	??_main& (0+255),f,b
  1554  011C10  1F43               	comf	(??_main+1)& (0+255),f,b
  1555  011C12  1F44               	comf	(??_main+2)& (0+255),f,b
  1556  011C14  1F45               	comf	(??_main+3)& (0+255),f,b
  1557  011C16  2B42               	incf	??_main& (0+255),f,b
  1558  011C18  0E00               	movlw	0
  1559  011C1A  2343               	addwfc	(??_main+1)& (0+255),f,b
  1560  011C1C  2344               	addwfc	(??_main+2)& (0+255),f,b
  1561  011C1E  2345               	addwfc	(??_main+3)& (0+255),f,b
  1562  011C20  5020               	movf	_time_counter,w,c	;volatile
  1563  011C22  0101               	movlb	1	; () banked
  1564  011C24  2542               	addwf	??_main& (0+255),w,b
  1565  011C26  0101               	movlb	1	; () banked
  1566  011C28  6F46               	movwf	(??_main+4)& (0+255),b
  1567  011C2A  5021               	movf	_time_counter+1,w,c	;volatile
  1568  011C2C  0101               	movlb	1	; () banked
  1569  011C2E  2143               	addwfc	(??_main+1)& (0+255),w,b
  1570  011C30  0101               	movlb	1	; () banked
  1571  011C32  6F47               	movwf	(??_main+5)& (0+255),b
  1572  011C34  5022               	movf	_time_counter+2,w,c	;volatile
  1573  011C36  0101               	movlb	1	; () banked
  1574  011C38  2144               	addwfc	(??_main+2)& (0+255),w,b
  1575  011C3A  0101               	movlb	1	; () banked
  1576  011C3C  6F48               	movwf	(??_main+6)& (0+255),b
  1577  011C3E  5023               	movf	_time_counter+3,w,c	;volatile
  1578  011C40  0101               	movlb	1	; () banked
  1579  011C42  2145               	addwfc	(??_main+3)& (0+255),w,b
  1580  011C44  0101               	movlb	1	; () banked
  1581  011C46  6F49               	movwf	(??_main+7)& (0+255),b
  1582  011C48  0101               	movlb	1	; () banked
  1583  011C4A  5149               	movf	(??_main+7)& (0+255),w,b
  1584  011C4C  0101               	movlb	1	; () banked
  1585  011C4E  1148               	iorwf	(??_main+6)& (0+255),w,b
  1586  011C50  0101               	movlb	1	; () banked
  1587  011C52  1147               	iorwf	(??_main+5)& (0+255),w,b
  1588  011C54  E105               	bnz	u12260
  1589  011C56  0E1E               	movlw	30
  1590  011C58  0101               	movlb	1	; () banked
  1591  011C5A  5D46               	subwf	(??_main+4)& (0+255),w,b
  1592  011C5C  A0D8               	btfss	status,0,c
  1593  011C5E  D019               	goto	l9208
  1594  011C60                     u12260:
  1595                           
  1596                           ; BSR set to: 1
  1597                           ;RemoteCan.c: 186: pr_time_1 = time_counter;
  1598  011C60  C020  F0D3         	movff	_time_counter,_pr_time_1	;volatile
  1599  011C64  C021  F0D4         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1600  011C68  C022  F0D5         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1601  011C6C  C023  F0D6         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1602                           
  1603                           ; BSR set to: 1
  1604                           ;RemoteCan.c: 187: PORTDbits.RD7 = ~PORTDbits.RD7;
  1605  011C70  AE83               	btfss	3971,7,c	;volatile
  1606  011C72  D002               	goto	u12270
  1607  011C74  0E01               	movlw	1
  1608  011C76  D001               	goto	u12276
  1609  011C78                     u12270:
  1610  011C78  0E00               	movlw	0
  1611  011C7A                     u12276:
  1612  011C7A  0AFF               	xorlw	255
  1613  011C7C  0101               	movlb	1	; () banked
  1614  011C7E  6F42               	movwf	??_main& (0+255),b
  1615  011C80  0101               	movlb	1	; () banked
  1616  011C82  3342               	rrcf	??_main& (0+255),f,b
  1617  011C84  3342               	rrcf	??_main& (0+255),f,b
  1618  011C86  5083               	movf	3971,w,c	;volatile
  1619  011C88  0101               	movlb	1	; () banked
  1620  011C8A  1942               	xorwf	??_main& (0+255),w,b
  1621  011C8C  0B7F               	andlw	-129
  1622  011C8E  1942               	xorwf	??_main& (0+255),w,b
  1623  011C90  6E83               	movwf	3971,c	;volatile
  1624  011C92                     l9208:
  1625                           
  1626                           ; BSR set to: 1
  1627                           ;RemoteCan.c: 188: }
  1628                           ;RemoteCan.c: 189: PWR_Button_Polling();
  1629  011C92  ECEC  F0AE         	call	_PWR_Button_Polling	;wreg free
  1630                           
  1631                           ;RemoteCan.c: 190: delay_ms(10);
  1632  011C96  0E00               	movlw	0
  1633  011C98  0100               	movlb	0	; () banked
  1634  011C9A  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1635  011C9C  0E0A               	movlw	10
  1636  011C9E  6F75               	movwf	delay_ms@value_ms& (0+255),b
  1637  011CA0  ECF2  F0AD         	call	_delay_ms	;wreg free
  1638  011CA4                     l9212:
  1639  011CA4  A04D               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1640  011CA6  D7AA               	goto	l9202
  1641                           
  1642                           ;RemoteCan.c: 191: }
  1643                           ;RemoteCan.c: 192: PORTDbits.RD7 = 0;
  1644  011CA8  9E83               	bcf	3971,7,c	;volatile
  1645                           
  1646                           ;RemoteCan.c: 193: display_refresh = 1;
  1647  011CAA  8C4C               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  1648  011CAC                     l9214:
  1649                           
  1650                           ;RemoteCan.c: 194: }
  1651                           ;RemoteCan.c: 196: Joystick_Polling();
  1652  011CAC  EC3F  F0AD         	call	_Joystick_Polling	;wreg free
  1653                           
  1654                           ;RemoteCan.c: 199: if (PORTAbits.RA2 == 1) {
  1655  011CB0  A480               	btfss	3968,2,c	;volatile
  1656  011CB2  D004               	goto	l780
  1657                           
  1658                           ;RemoteCan.c: 200: switch_position = 0;
  1659  011CB4  0E00               	movlw	0
  1660  011CB6  0100               	movlb	0	; () banked
  1661  011CB8  6FE5               	movwf	_switch_position& (0+255),b	;volatile
  1662                           
  1663                           ;RemoteCan.c: 201: } else {
  1664  011CBA  D00D               	goto	l9224
  1665  011CBC                     l780:
  1666                           
  1667                           ;RemoteCan.c: 202: if (PORTAbits.RA3 == 0) {
  1668  011CBC  B680               	btfsc	3968,3,c	;volatile
  1669  011CBE  D005               	goto	l9222
  1670                           
  1671                           ;RemoteCan.c: 203: switch_position = 1;
  1672  011CC0  0E01               	movlw	1
  1673  011CC2  0100               	movlb	0	; () banked
  1674  011CC4  6FE5               	movwf	_switch_position& (0+255),b	;volatile
  1675                           
  1676                           ;RemoteCan.c: 204: dir = 1;
  1677  011CC6  0E01               	movlw	1
  1678  011CC8  D004               	goto	L1
  1679  011CCA                     l9222:
  1680                           
  1681                           ;RemoteCan.c: 206: switch_position = 2;
  1682  011CCA  0E02               	movlw	2
  1683  011CCC  0100               	movlb	0	; () banked
  1684  011CCE  6FE5               	movwf	_switch_position& (0+255),b	;volatile
  1685                           
  1686                           ;RemoteCan.c: 207: dir = 0;
  1687  011CD0  0E00               	movlw	0
  1688  011CD2                     L1:
  1689  011CD2  0100               	movlb	0	; () banked
  1690  011CD4  6FE3               	movwf	_dir& (0+255),b	;volatile
  1691  011CD6                     l9224:
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;RemoteCan.c: 208: }
  1695                           ;RemoteCan.c: 209: }
  1696                           ;RemoteCan.c: 212: if (F1_switch == 1) {
  1697  011CD6  A24C               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  1698  011CD8  D0F6               	goto	l9264
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;RemoteCan.c: 213: y = 0;
  1702  011CDA  984D               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;RemoteCan.c: 214: if ((time_counter - pr_time_5) >= 30) {
  1706  011CDC  C018  F142         	movff	_pr_time_5,??_main	;volatile
  1707  011CE0  C019  F143         	movff	_pr_time_5+1,??_main+1	;volatile
  1708  011CE4  C01A  F144         	movff	_pr_time_5+2,??_main+2	;volatile
  1709  011CE8  C01B  F145         	movff	_pr_time_5+3,??_main+3	;volatile
  1710  011CEC  0101               	movlb	1	; () banked
  1711  011CEE  1F42               	comf	??_main& (0+255),f,b
  1712  011CF0  1F43               	comf	(??_main+1)& (0+255),f,b
  1713  011CF2  1F44               	comf	(??_main+2)& (0+255),f,b
  1714  011CF4  1F45               	comf	(??_main+3)& (0+255),f,b
  1715  011CF6  2B42               	incf	??_main& (0+255),f,b
  1716  011CF8  0E00               	movlw	0
  1717  011CFA  2343               	addwfc	(??_main+1)& (0+255),f,b
  1718  011CFC  2344               	addwfc	(??_main+2)& (0+255),f,b
  1719  011CFE  2345               	addwfc	(??_main+3)& (0+255),f,b
  1720  011D00  5020               	movf	_time_counter,w,c	;volatile
  1721  011D02  0101               	movlb	1	; () banked
  1722  011D04  2542               	addwf	??_main& (0+255),w,b
  1723  011D06  0101               	movlb	1	; () banked
  1724  011D08  6F46               	movwf	(??_main+4)& (0+255),b
  1725  011D0A  5021               	movf	_time_counter+1,w,c	;volatile
  1726  011D0C  0101               	movlb	1	; () banked
  1727  011D0E  2143               	addwfc	(??_main+1)& (0+255),w,b
  1728  011D10  0101               	movlb	1	; () banked
  1729  011D12  6F47               	movwf	(??_main+5)& (0+255),b
  1730  011D14  5022               	movf	_time_counter+2,w,c	;volatile
  1731  011D16  0101               	movlb	1	; () banked
  1732  011D18  2144               	addwfc	(??_main+2)& (0+255),w,b
  1733  011D1A  0101               	movlb	1	; () banked
  1734  011D1C  6F48               	movwf	(??_main+6)& (0+255),b
  1735  011D1E  5023               	movf	_time_counter+3,w,c	;volatile
  1736  011D20  0101               	movlb	1	; () banked
  1737  011D22  2145               	addwfc	(??_main+3)& (0+255),w,b
  1738  011D24  0101               	movlb	1	; () banked
  1739  011D26  6F49               	movwf	(??_main+7)& (0+255),b
  1740  011D28  0101               	movlb	1	; () banked
  1741  011D2A  5149               	movf	(??_main+7)& (0+255),w,b
  1742  011D2C  0101               	movlb	1	; () banked
  1743  011D2E  1148               	iorwf	(??_main+6)& (0+255),w,b
  1744  011D30  0101               	movlb	1	; () banked
  1745  011D32  1147               	iorwf	(??_main+5)& (0+255),w,b
  1746  011D34  E105               	bnz	u12320
  1747  011D36  0E1E               	movlw	30
  1748  011D38  0101               	movlb	1	; () banked
  1749  011D3A  5D46               	subwf	(??_main+4)& (0+255),w,b
  1750  011D3C  A0D8               	btfss	status,0,c
  1751  011D3E  D01A               	goto	l785
  1752  011D40                     u12320:
  1753                           
  1754                           ; BSR set to: 1
  1755                           ;RemoteCan.c: 215: pr_time_5 = time_counter;
  1756  011D40  C020  F018         	movff	_time_counter,_pr_time_5	;volatile
  1757  011D44  C021  F019         	movff	_time_counter+1,_pr_time_5+1	;volatile
  1758  011D48  C022  F01A         	movff	_time_counter+2,_pr_time_5+2	;volatile
  1759  011D4C  C023  F01B         	movff	_time_counter+3,_pr_time_5+3	;volatile
  1760                           
  1761                           ; BSR set to: 1
  1762                           ;RemoteCan.c: 216: PORTDbits.RD6 = ~PORTDbits.RD6;
  1763  011D50  AC83               	btfss	3971,6,c	;volatile
  1764  011D52  D002               	goto	u12330
  1765  011D54  0E01               	movlw	1
  1766  011D56  D001               	goto	u12336
  1767  011D58                     u12330:
  1768  011D58  0E00               	movlw	0
  1769  011D5A                     u12336:
  1770  011D5A  0AFF               	xorlw	255
  1771  011D5C  0101               	movlb	1	; () banked
  1772  011D5E  6F42               	movwf	??_main& (0+255),b
  1773  011D60  0101               	movlb	1	; () banked
  1774  011D62  3B42               	swapf	??_main& (0+255),f,b
  1775  011D64  4742               	rlncf	??_main& (0+255),f,b
  1776  011D66  4742               	rlncf	??_main& (0+255),f,b
  1777  011D68  5083               	movf	3971,w,c	;volatile
  1778  011D6A  0101               	movlb	1	; () banked
  1779  011D6C  1942               	xorwf	??_main& (0+255),w,b
  1780  011D6E  0BBF               	andlw	-65
  1781  011D70  1942               	xorwf	??_main& (0+255),w,b
  1782  011D72  6E83               	movwf	3971,c	;volatile
  1783  011D74                     l785:
  1784                           
  1785                           ; BSR set to: 1
  1786                           ;RemoteCan.c: 217: }
  1787                           ;RemoteCan.c: 218: if ((x <5)&&(F2_switch == 0)) {
  1788  011D74  0E05               	movlw	5
  1789  011D76  0100               	movlb	0	; () banked
  1790  011D78  61E6               	cpfslt	_x& (0+255),b	;volatile
  1791  011D7A  D02F               	goto	l9246
  1792                           
  1793                           ; BSR set to: 0
  1794  011D7C  B44C               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1795  011D7E  D02D               	goto	l9246
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;RemoteCan.c: 219: parking_state = 1;
  1799  011D80  0E01               	movlw	1
  1800  011D82  0100               	movlb	0	; () banked
  1801  011D84  6FE4               	movwf	_parking_state& (0+255),b	;volatile
  1802                           
  1803                           ;RemoteCan.c: 220: JoystickConstants[1] = 2;
  1804  011D86  0E00               	movlw	0
  1805  011D88  0100               	movlb	0	; () banked
  1806  011D8A  6FCF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1807  011D8C  0E00               	movlw	0
  1808  011D8E  6FD0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1809  011D90  0E00               	movlw	0
  1810  011D92  6FD1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1811  011D94  0E40               	movlw	64
  1812  011D96  6FD2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1813  011D98                     l9238:
  1814  011D98  ECBA  F0AE         	call	_CANisTxReady	;wreg free
  1815  011D9C  0900               	iorlw	0
  1816  011D9E  B4D8               	btfsc	status,2,c
  1817  011DA0  D7FB               	goto	l9238
  1818                           
  1819                           ;RemoteCan.c: 222: park_assist_state[0] = 0b00000001;
  1820  011DA2  0E01               	movlw	1
  1821  011DA4  0101               	movlb	1	; () banked
  1822  011DA6  6F21               	movwf	_park_assist_state& (0+255),b
  1823                           
  1824                           ; BSR set to: 1
  1825                           ;RemoteCan.c: 223: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1826  011DA8  0E0A               	movlw	10
  1827  011DAA  0100               	movlb	0	; () banked
  1828  011DAC  6F6F               	movwf	CANsendMessage@identifier& (0+255),b
  1829  011DAE  0E00               	movlw	0
  1830  011DB0  6F70               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1831  011DB2  0E00               	movlw	0
  1832  011DB4  6F71               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1833  011DB6  0E00               	movlw	0
  1834  011DB8  6F72               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1835  011DBA  0E21               	movlw	low _park_assist_state
  1836  011DBC  0100               	movlb	0	; () banked
  1837  011DBE  6F73               	movwf	CANsendMessage@data& (0+255),b
  1838  011DC0  0E01               	movlw	high _park_assist_state
  1839  011DC2  0100               	movlb	0	; () banked
  1840  011DC4  6F74               	movwf	(CANsendMessage@data+1)& (0+255),b
  1841  011DC6  0E08               	movlw	8
  1842  011DC8  0100               	movlb	0	; () banked
  1843  011DCA  6F75               	movwf	CANsendMessage@dataLength& (0+255),b
  1844  011DCC  0EBC               	movlw	188
  1845  011DCE  0100               	movlb	0	; () banked
  1846  011DD0  6F76               	movwf	CANsendMessage@flags& (0+255),b
  1847  011DD2  ECCD  F089         	call	_CANsendMessage	;wreg free
  1848                           
  1849                           ;RemoteCan.c: 224: x++;
  1850  011DD6  0100               	movlb	0	; () banked
  1851  011DD8  2BE6               	incf	_x& (0+255),f,b	;volatile
  1852  011DDA                     l9246:
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;RemoteCan.c: 225: }
  1856                           ;RemoteCan.c: 226: if (F2_switch == 1) {
  1857  011DDA  A44C               	btfss	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1858  011DDC  D0AD               	goto	l9288
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;RemoteCan.c: 227: if ((time_counter - pr_time_6) >= 30) {
  1862  011DDE  C01C  F142         	movff	_pr_time_6,??_main	;volatile
  1863  011DE2  C01D  F143         	movff	_pr_time_6+1,??_main+1	;volatile
  1864  011DE6  C01E  F144         	movff	_pr_time_6+2,??_main+2	;volatile
  1865  011DEA  C01F  F145         	movff	_pr_time_6+3,??_main+3	;volatile
  1866  011DEE  0101               	movlb	1	; () banked
  1867  011DF0  1F42               	comf	??_main& (0+255),f,b
  1868  011DF2  1F43               	comf	(??_main+1)& (0+255),f,b
  1869  011DF4  1F44               	comf	(??_main+2)& (0+255),f,b
  1870  011DF6  1F45               	comf	(??_main+3)& (0+255),f,b
  1871  011DF8  2B42               	incf	??_main& (0+255),f,b
  1872  011DFA  0E00               	movlw	0
  1873  011DFC  2343               	addwfc	(??_main+1)& (0+255),f,b
  1874  011DFE  2344               	addwfc	(??_main+2)& (0+255),f,b
  1875  011E00  2345               	addwfc	(??_main+3)& (0+255),f,b
  1876  011E02  5020               	movf	_time_counter,w,c	;volatile
  1877  011E04  0101               	movlb	1	; () banked
  1878  011E06  2542               	addwf	??_main& (0+255),w,b
  1879  011E08  0101               	movlb	1	; () banked
  1880  011E0A  6F46               	movwf	(??_main+4)& (0+255),b
  1881  011E0C  5021               	movf	_time_counter+1,w,c	;volatile
  1882  011E0E  0101               	movlb	1	; () banked
  1883  011E10  2143               	addwfc	(??_main+1)& (0+255),w,b
  1884  011E12  0101               	movlb	1	; () banked
  1885  011E14  6F47               	movwf	(??_main+5)& (0+255),b
  1886  011E16  5022               	movf	_time_counter+2,w,c	;volatile
  1887  011E18  0101               	movlb	1	; () banked
  1888  011E1A  2144               	addwfc	(??_main+2)& (0+255),w,b
  1889  011E1C  0101               	movlb	1	; () banked
  1890  011E1E  6F48               	movwf	(??_main+6)& (0+255),b
  1891  011E20  5023               	movf	_time_counter+3,w,c	;volatile
  1892  011E22  0101               	movlb	1	; () banked
  1893  011E24  2145               	addwfc	(??_main+3)& (0+255),w,b
  1894  011E26  0101               	movlb	1	; () banked
  1895  011E28  6F49               	movwf	(??_main+7)& (0+255),b
  1896  011E2A  0101               	movlb	1	; () banked
  1897  011E2C  5149               	movf	(??_main+7)& (0+255),w,b
  1898  011E2E  0101               	movlb	1	; () banked
  1899  011E30  1148               	iorwf	(??_main+6)& (0+255),w,b
  1900  011E32  0101               	movlb	1	; () banked
  1901  011E34  1147               	iorwf	(??_main+5)& (0+255),w,b
  1902  011E36  E105               	bnz	u12380
  1903  011E38  0E1E               	movlw	30
  1904  011E3A  0101               	movlb	1	; () banked
  1905  011E3C  5D46               	subwf	(??_main+4)& (0+255),w,b
  1906  011E3E  A0D8               	btfss	status,0,c
  1907  011E40  D019               	goto	l791
  1908  011E42                     u12380:
  1909                           
  1910                           ; BSR set to: 1
  1911                           ;RemoteCan.c: 228: pr_time_6 = time_counter;
  1912  011E42  C020  F01C         	movff	_time_counter,_pr_time_6	;volatile
  1913  011E46  C021  F01D         	movff	_time_counter+1,_pr_time_6+1	;volatile
  1914  011E4A  C022  F01E         	movff	_time_counter+2,_pr_time_6+2	;volatile
  1915  011E4E  C023  F01F         	movff	_time_counter+3,_pr_time_6+3	;volatile
  1916                           
  1917                           ; BSR set to: 1
  1918                           ;RemoteCan.c: 229: PORTDbits.RD5 = ~PORTDbits.RD5;
  1919  011E52  AA83               	btfss	3971,5,c	;volatile
  1920  011E54  D002               	goto	u12390
  1921  011E56  0E01               	movlw	1
  1922  011E58  D001               	goto	u12396
  1923  011E5A                     u12390:
  1924  011E5A  0E00               	movlw	0
  1925  011E5C                     u12396:
  1926  011E5C  0AFF               	xorlw	255
  1927  011E5E  0101               	movlb	1	; () banked
  1928  011E60  6F42               	movwf	??_main& (0+255),b
  1929  011E62  0101               	movlb	1	; () banked
  1930  011E64  3B42               	swapf	??_main& (0+255),f,b
  1931  011E66  4742               	rlncf	??_main& (0+255),f,b
  1932  011E68  5083               	movf	3971,w,c	;volatile
  1933  011E6A  0101               	movlb	1	; () banked
  1934  011E6C  1942               	xorwf	??_main& (0+255),w,b
  1935  011E6E  0BDF               	andlw	-33
  1936  011E70  1942               	xorwf	??_main& (0+255),w,b
  1937  011E72  6E83               	movwf	3971,c	;volatile
  1938  011E74                     l791:
  1939                           
  1940                           ; BSR set to: 1
  1941                           ;RemoteCan.c: 230: }
  1942                           ;RemoteCan.c: 231: if (z < 5) {
  1943  011E74  0E05               	movlw	5
  1944  011E76  0100               	movlb	0	; () banked
  1945  011E78  61E7               	cpfslt	_z& (0+255),b	;volatile
  1946  011E7A  D05E               	goto	l9288
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;RemoteCan.c: 232: parking_state = 2;
  1950  011E7C  0E02               	movlw	2
  1951  011E7E  0100               	movlb	0	; () banked
  1952  011E80  6FE4               	movwf	_parking_state& (0+255),b	;volatile
  1953  011E82                     l9256:
  1954  011E82  ECBA  F0AE         	call	_CANisTxReady	;wreg free
  1955  011E86  0900               	iorlw	0
  1956  011E88  B4D8               	btfsc	status,2,c
  1957  011E8A  D7FB               	goto	l9256
  1958                           
  1959                           ;RemoteCan.c: 234: CANsendMessage(0b00000001011, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  1960  011E8C  0E0B               	movlw	11
  1961  011E8E  0100               	movlb	0	; () banked
  1962  011E90  6F6F               	movwf	CANsendMessage@identifier& (0+255),b
  1963  011E92  0E00               	movlw	0
  1964  011E94  6F70               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1965  011E96  0E00               	movlw	0
  1966  011E98  6F71               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1967  011E9A  0E00               	movlw	0
  1968  011E9C  6F72               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1969  011E9E  0E2A               	movlw	low _data
  1970  011EA0  0100               	movlb	0	; () banked
  1971  011EA2  6F73               	movwf	CANsendMessage@data& (0+255),b
  1972  011EA4  0E00               	movlw	high _data
  1973  011EA6  0100               	movlb	0	; () banked
  1974  011EA8  6F74               	movwf	(CANsendMessage@data+1)& (0+255),b
  1975  011EAA  0E08               	movlw	8
  1976  011EAC  0100               	movlb	0	; () banked
  1977  011EAE  6F75               	movwf	CANsendMessage@dataLength& (0+255),b
  1978  011EB0  0EBC               	movlw	188
  1979  011EB2  0100               	movlb	0	; () banked
  1980  011EB4  6F76               	movwf	CANsendMessage@flags& (0+255),b
  1981  011EB6  ECCD  F089         	call	_CANsendMessage	;wreg free
  1982                           
  1983                           ;RemoteCan.c: 235: x = 0;
  1984  011EBA  0E00               	movlw	0
  1985  011EBC  0100               	movlb	0	; () banked
  1986  011EBE  6FE6               	movwf	_x& (0+255),b	;volatile
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;RemoteCan.c: 236: z++;
  1990  011EC0  0100               	movlb	0	; () banked
  1991  011EC2  2BE7               	incf	_z& (0+255),f,b	;volatile
  1992                           
  1993                           ; BSR set to: 0
  1994                           ;RemoteCan.c: 237: }
  1995                           ;RemoteCan.c: 238: }
  1996                           ;RemoteCan.c: 239: } else {
  1997                           
  1998                           ; BSR set to: 0
  1999  011EC4  D039               	goto	l9288
  2000  011EC6                     l9264:
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;RemoteCan.c: 240: x = 0;
  2004  011EC6  0E00               	movlw	0
  2005  011EC8  0100               	movlb	0	; () banked
  2006  011ECA  6FE6               	movwf	_x& (0+255),b	;volatile
  2007                           
  2008                           ;RemoteCan.c: 241: z = 0;
  2009  011ECC  0E00               	movlw	0
  2010  011ECE  0100               	movlb	0	; () banked
  2011  011ED0  6FE7               	movwf	_z& (0+255),b	;volatile
  2012                           
  2013                           ; BSR set to: 0
  2014                           ;RemoteCan.c: 242: F2_switch = 0;
  2015  011ED2  944C               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;RemoteCan.c: 243: PORTDbits.RD5 = 0;
  2019  011ED4  9A83               	bcf	3971,5,c	;volatile
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;RemoteCan.c: 244: PORTDbits.RD6 = 0;
  2023  011ED6  9C83               	bcf	3971,6,c	;volatile
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;RemoteCan.c: 245: if (y == 0) {
  2027  011ED8  B84D               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  2028  011EDA  D02C               	goto	l9284
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;RemoteCan.c: 246: parking_state = 0;
  2032  011EDC  0E00               	movlw	0
  2033  011EDE  0100               	movlb	0	; () banked
  2034  011EE0  6FE4               	movwf	_parking_state& (0+255),b	;volatile
  2035                           
  2036                           ;RemoteCan.c: 247: JoystickConstants[1] = 10;
  2037  011EE2  0E00               	movlw	0
  2038  011EE4  0100               	movlb	0	; () banked
  2039  011EE6  6FCF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2040  011EE8  0E00               	movlw	0
  2041  011EEA  6FD0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2042  011EEC  0E20               	movlw	32
  2043  011EEE  6FD1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2044  011EF0  0E41               	movlw	65
  2045  011EF2  6FD2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2046  011EF4                     l9276:
  2047  011EF4  ECBA  F0AE         	call	_CANisTxReady	;wreg free
  2048  011EF8  0900               	iorlw	0
  2049  011EFA  B4D8               	btfsc	status,2,c
  2050  011EFC  D7FB               	goto	l9276
  2051                           
  2052                           ;RemoteCan.c: 249: park_assist_state[0] = 0b00000000;
  2053  011EFE  0E00               	movlw	0
  2054  011F00  0101               	movlb	1	; () banked
  2055  011F02  6F21               	movwf	_park_assist_state& (0+255),b
  2056                           
  2057                           ; BSR set to: 1
  2058                           ;RemoteCan.c: 250: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2059  011F04  0E0A               	movlw	10
  2060  011F06  0100               	movlb	0	; () banked
  2061  011F08  6F6F               	movwf	CANsendMessage@identifier& (0+255),b
  2062  011F0A  0E00               	movlw	0
  2063  011F0C  6F70               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2064  011F0E  0E00               	movlw	0
  2065  011F10  6F71               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2066  011F12  0E00               	movlw	0
  2067  011F14  6F72               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2068  011F16  0E21               	movlw	low _park_assist_state
  2069  011F18  0100               	movlb	0	; () banked
  2070  011F1A  6F73               	movwf	CANsendMessage@data& (0+255),b
  2071  011F1C  0E01               	movlw	high _park_assist_state
  2072  011F1E  0100               	movlb	0	; () banked
  2073  011F20  6F74               	movwf	(CANsendMessage@data+1)& (0+255),b
  2074  011F22  0E08               	movlw	8
  2075  011F24  0100               	movlb	0	; () banked
  2076  011F26  6F75               	movwf	CANsendMessage@dataLength& (0+255),b
  2077  011F28  0EBC               	movlw	188
  2078  011F2A  0100               	movlb	0	; () banked
  2079  011F2C  6F76               	movwf	CANsendMessage@flags& (0+255),b
  2080  011F2E  ECCD  F089         	call	_CANsendMessage	;wreg free
  2081                           
  2082                           ;RemoteCan.c: 251: y = 1;
  2083  011F32  884D               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2084  011F34                     l9284:
  2085                           
  2086                           ;RemoteCan.c: 252: }
  2087                           ;RemoteCan.c: 253: PORTDbits.RD6 = 0;
  2088  011F34  9C83               	bcf	3971,6,c	;volatile
  2089                           
  2090                           ;RemoteCan.c: 254: PORTDbits.RD5 = 0;
  2091  011F36  9A83               	bcf	3971,5,c	;volatile
  2092  011F38                     l9288:
  2093                           
  2094                           ;RemoteCan.c: 255: }
  2095                           ;RemoteCan.c: 257: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2096  011F38  0E00               	movlw	0
  2097  011F3A  0100               	movlb	0	; () banked
  2098  011F3C  6FA7               	movwf	___fladd@a& (0+255),b
  2099  011F3E  0E00               	movlw	0
  2100  011F40  6FA8               	movwf	(___fladd@a+1)& (0+255),b
  2101  011F42  0E34               	movlw	52
  2102  011F44  6FA9               	movwf	(___fladd@a+2)& (0+255),b
  2103  011F46  0E43               	movlw	67
  2104  011F48  6FAA               	movwf	(___fladd@a+3)& (0+255),b
  2105  011F4A  C0CB  F081         	movff	_JoystickConstants,___flmul@a	;volatile
  2106  011F4E  C0CC  F082         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  2107  011F52  C0CD  F083         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  2108  011F56  C0CE  F084         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  2109  011F5A  0100               	movlb	0	; () banked
  2110  011F5C  51DB               	movf	_JoystickValues& (0+255),w,b	;volatile
  2111  011F5E  0100               	movlb	0	; () banked
  2112  011F60  6F6F               	movwf	___xxtofl@val& (0+255),b
  2113  011F62  6B70               	clrf	(___xxtofl@val+1)& (0+255),b
  2114  011F64  6B71               	clrf	(___xxtofl@val+2)& (0+255),b
  2115  011F66  6B72               	clrf	(___xxtofl@val+3)& (0+255),b
  2116  011F68  0E00               	movlw	0
  2117  011F6A  EC00  F0A4         	call	___xxtofl
  2118  011F6E  C06F  F07D         	movff	?___xxtofl,___flmul@b
  2119  011F72  C070  F07E         	movff	?___xxtofl+1,___flmul@b+1
  2120  011F76  C071  F07F         	movff	?___xxtofl+2,___flmul@b+2
  2121  011F7A  C072  F080         	movff	?___xxtofl+3,___flmul@b+3
  2122  011F7E  EC9C  F09B         	call	___flmul	;wreg free
  2123  011F82  C07D  F096         	movff	?___flmul,___flneg@f1
  2124  011F86  C07E  F097         	movff	?___flmul+1,___flneg@f1+1
  2125  011F8A  C07F  F098         	movff	?___flmul+2,___flneg@f1+2
  2126  011F8E  C080  F099         	movff	?___flmul+3,___flneg@f1+3
  2127  011F92  EC0F  F0AE         	call	___flneg	;wreg free
  2128  011F96  C096  F0A3         	movff	?___flneg,___fladd@b
  2129  011F9A  C097  F0A4         	movff	?___flneg+1,___fladd@b+1
  2130  011F9E  C098  F0A5         	movff	?___flneg+2,___fladd@b+2
  2131  011FA2  C099  F0A6         	movff	?___flneg+3,___fladd@b+3
  2132  011FA6  EC48  F099         	call	___fladd	;wreg free
  2133  011FAA  C0A3  F0B7         	movff	?___fladd,___fltol@f1
  2134  011FAE  C0A4  F0B8         	movff	?___fladd+1,___fltol@f1+1
  2135  011FB2  C0A5  F0B9         	movff	?___fladd+2,___fltol@f1+2
  2136  011FB6  C0A6  F0BA         	movff	?___fladd+3,___fltol@f1+3
  2137  011FBA  EC8A  F0A9         	call	___fltol	;wreg free
  2138  011FBE  0100               	movlb	0	; () banked
  2139  011FC0  51B7               	movf	?___fltol& (0+255),w,b
  2140  011FC2  0100               	movlb	0	; () banked
  2141  011FC4  6FEA               	movwf	_data_steering& (0+255),b
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;RemoteCan.c: 258: if (switch_position != 0) {
  2145  011FC6  0100               	movlb	0	; () banked
  2146  011FC8  51E5               	movf	_switch_position& (0+255),w,b	;volatile
  2147  011FCA  B4D8               	btfsc	status,2,c
  2148  011FCC  D088               	goto	l9302
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;RemoteCan.c: 259: if (JoystickValues[1] > 132) {
  2152  011FCE  0E84               	movlw	132
  2153  011FD0  0100               	movlb	0	; () banked
  2154  011FD2  65DC               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  2155  011FD4  D042               	goto	l9298
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;RemoteCan.c: 260: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  2159  011FD6  C0CF  F081         	movff	_JoystickConstants+4,___flmul@a	;volatile
  2160  011FDA  C0D0  F082         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  2161  011FDE  C0D1  F083         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  2162  011FE2  C0D2  F084         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  2163  011FE6  0E7E               	movlw	126
  2164  011FE8  0101               	movlb	1	; () banked
  2165  011FEA  6F42               	movwf	??_main& (0+255),b
  2166  011FEC  0EFF               	movlw	255
  2167  011FEE  0101               	movlb	1	; () banked
  2168  011FF0  6F43               	movwf	(??_main+1)& (0+255),b
  2169  011FF2  0100               	movlb	0	; () banked
  2170  011FF4  51DC               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2171  011FF6  0101               	movlb	1	; () banked
  2172  011FF8  6F44               	movwf	(??_main+2)& (0+255),b
  2173  011FFA  6B45               	clrf	(??_main+3)& (0+255),b
  2174  011FFC  0101               	movlb	1	; () banked
  2175  011FFE  5142               	movf	??_main& (0+255),w,b
  2176  012000  0101               	movlb	1	; () banked
  2177  012002  2744               	addwf	(??_main+2)& (0+255),f,b
  2178  012004  0101               	movlb	1	; () banked
  2179  012006  5143               	movf	(??_main+1)& (0+255),w,b
  2180  012008  0101               	movlb	1	; () banked
  2181  01200A  2345               	addwfc	(??_main+3)& (0+255),f,b
  2182  01200C  C144  F06F         	movff	??_main+2,___xxtofl@val
  2183  012010  C145  F070         	movff	??_main+3,___xxtofl@val+1
  2184  012014  0100               	movlb	0	; () banked
  2185  012016  0E00               	movlw	0
  2186  012018  BF70               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2187  01201A  0EFF               	movlw	-1
  2188  01201C  6F71               	movwf	(___xxtofl@val+2)& (0+255),b
  2189  01201E  6F72               	movwf	(___xxtofl@val+3)& (0+255),b
  2190  012020  0E01               	movlw	1
  2191  012022  EC00  F0A4         	call	___xxtofl
  2192  012026  C06F  F07D         	movff	?___xxtofl,___flmul@b
  2193  01202A  C070  F07E         	movff	?___xxtofl+1,___flmul@b+1
  2194  01202E  C071  F07F         	movff	?___xxtofl+2,___flmul@b+2
  2195  012032  C072  F080         	movff	?___xxtofl+3,___flmul@b+3
  2196  012036  EC9C  F09B         	call	___flmul	;wreg free
  2197  01203A  C07D  F0B7         	movff	?___flmul,___fltol@f1
  2198  01203E  C07E  F0B8         	movff	?___flmul+1,___fltol@f1+1
  2199  012042  C07F  F0B9         	movff	?___flmul+2,___fltol@f1+2
  2200  012046  C080  F0BA         	movff	?___flmul+3,___fltol@f1+3
  2201  01204A  EC8A  F0A9         	call	___fltol	;wreg free
  2202  01204E  C0B7  F0E1         	movff	?___fltol,_set_speed	;volatile
  2203  012052  C0B8  F0E2         	movff	?___fltol+1,_set_speed+1	;volatile
  2204                           
  2205                           ;RemoteCan.c: 261: data_brake [0] = 0;
  2206  012056  0E00               	movlw	0
  2207  012058  D040               	goto	L2
  2208  01205A                     l9298:
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;RemoteCan.c: 263: set_speed = 0;
  2212  01205A  0E00               	movlw	0
  2213  01205C  0100               	movlb	0	; () banked
  2214  01205E  6FE2               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2215  012060  0E00               	movlw	0
  2216  012062  6FE1               	movwf	_set_speed& (0+255),b	;volatile
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;RemoteCan.c: 264: data_brake [0] = ((130 - JoystickValues[1]))*(1.9);
  2220  012064  0E33               	movlw	51
  2221  012066  0100               	movlb	0	; () banked
  2222  012068  6F81               	movwf	___flmul@a& (0+255),b
  2223  01206A  0E33               	movlw	51
  2224  01206C  6F82               	movwf	(___flmul@a+1)& (0+255),b
  2225  01206E  0EF3               	movlw	243
  2226  012070  6F83               	movwf	(___flmul@a+2)& (0+255),b
  2227  012072  0E3F               	movlw	63
  2228  012074  6F84               	movwf	(___flmul@a+3)& (0+255),b
  2229  012076  0100               	movlb	0	; () banked
  2230  012078  51DC               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2231  01207A  0101               	movlb	1	; () banked
  2232  01207C  6F42               	movwf	??_main& (0+255),b
  2233  01207E  6B43               	clrf	(??_main+1)& (0+255),b
  2234  012080  0101               	movlb	1	; () banked
  2235  012082  1F42               	comf	??_main& (0+255),f,b
  2236  012084  1F43               	comf	(??_main+1)& (0+255),f,b
  2237  012086  4B42               	infsnz	??_main& (0+255),f,b
  2238  012088  2B43               	incf	(??_main+1)& (0+255),f,b
  2239  01208A  0E82               	movlw	130
  2240  01208C  0101               	movlb	1	; () banked
  2241  01208E  2742               	addwf	??_main& (0+255),f,b
  2242  012090  0E00               	movlw	0
  2243  012092  2343               	addwfc	(??_main+1)& (0+255),f,b
  2244  012094  C142  F06F         	movff	??_main,___xxtofl@val
  2245  012098  C143  F070         	movff	??_main+1,___xxtofl@val+1
  2246  01209C  0100               	movlb	0	; () banked
  2247  01209E  0E00               	movlw	0
  2248  0120A0  BF70               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2249  0120A2  0EFF               	movlw	-1
  2250  0120A4  6F71               	movwf	(___xxtofl@val+2)& (0+255),b
  2251  0120A6  6F72               	movwf	(___xxtofl@val+3)& (0+255),b
  2252  0120A8  0E01               	movlw	1
  2253  0120AA  EC00  F0A4         	call	___xxtofl
  2254  0120AE  C06F  F07D         	movff	?___xxtofl,___flmul@b
  2255  0120B2  C070  F07E         	movff	?___xxtofl+1,___flmul@b+1
  2256  0120B6  C071  F07F         	movff	?___xxtofl+2,___flmul@b+2
  2257  0120BA  C072  F080         	movff	?___xxtofl+3,___flmul@b+3
  2258  0120BE  EC9C  F09B         	call	___flmul	;wreg free
  2259  0120C2  C07D  F0B7         	movff	?___flmul,___fltol@f1
  2260  0120C6  C07E  F0B8         	movff	?___flmul+1,___fltol@f1+1
  2261  0120CA  C07F  F0B9         	movff	?___flmul+2,___fltol@f1+2
  2262  0120CE  C080  F0BA         	movff	?___flmul+3,___fltol@f1+3
  2263  0120D2  EC8A  F0A9         	call	___fltol	;wreg free
  2264  0120D6  0100               	movlb	0	; () banked
  2265  0120D8  51B7               	movf	?___fltol& (0+255),w,b
  2266  0120DA                     L2:
  2267  0120DA  0100               	movlb	0	; () banked
  2268  0120DC  6FE8               	movwf	_data_brake& (0+255),b
  2269  0120DE                     l9302:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;RemoteCan.c: 265: }
  2273                           ;RemoteCan.c: 266: }
  2274                           ;RemoteCan.c: 268: if (newMessageCan == 1) {
  2275  0120DE  AE4C               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2276  0120E0  D003               	goto	l9308
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;RemoteCan.c: 269: CAN_interpreter();
  2280  0120E2  EC01  F0AC         	call	_CAN_interpreter	;wreg free
  2281                           
  2282                           ;RemoteCan.c: 270: newMessageCan = 0;
  2283  0120E6  9E4C               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2284  0120E8                     l9308:
  2285                           
  2286                           ;RemoteCan.c: 271: }
  2287                           ;RemoteCan.c: 273: if ((time_counter - pr_time_2) >= 2) {
  2288  0120E8  C0D7  F142         	movff	_pr_time_2,??_main	;volatile
  2289  0120EC  C0D8  F143         	movff	_pr_time_2+1,??_main+1	;volatile
  2290  0120F0  C0D9  F144         	movff	_pr_time_2+2,??_main+2	;volatile
  2291  0120F4  C0DA  F145         	movff	_pr_time_2+3,??_main+3	;volatile
  2292  0120F8  0101               	movlb	1	; () banked
  2293  0120FA  1F42               	comf	??_main& (0+255),f,b
  2294  0120FC  1F43               	comf	(??_main+1)& (0+255),f,b
  2295  0120FE  1F44               	comf	(??_main+2)& (0+255),f,b
  2296  012100  1F45               	comf	(??_main+3)& (0+255),f,b
  2297  012102  2B42               	incf	??_main& (0+255),f,b
  2298  012104  0E00               	movlw	0
  2299  012106  2343               	addwfc	(??_main+1)& (0+255),f,b
  2300  012108  2344               	addwfc	(??_main+2)& (0+255),f,b
  2301  01210A  2345               	addwfc	(??_main+3)& (0+255),f,b
  2302  01210C  5020               	movf	_time_counter,w,c	;volatile
  2303  01210E  0101               	movlb	1	; () banked
  2304  012110  2542               	addwf	??_main& (0+255),w,b
  2305  012112  0101               	movlb	1	; () banked
  2306  012114  6F46               	movwf	(??_main+4)& (0+255),b
  2307  012116  5021               	movf	_time_counter+1,w,c	;volatile
  2308  012118  0101               	movlb	1	; () banked
  2309  01211A  2143               	addwfc	(??_main+1)& (0+255),w,b
  2310  01211C  0101               	movlb	1	; () banked
  2311  01211E  6F47               	movwf	(??_main+5)& (0+255),b
  2312  012120  5022               	movf	_time_counter+2,w,c	;volatile
  2313  012122  0101               	movlb	1	; () banked
  2314  012124  2144               	addwfc	(??_main+2)& (0+255),w,b
  2315  012126  0101               	movlb	1	; () banked
  2316  012128  6F48               	movwf	(??_main+6)& (0+255),b
  2317  01212A  5023               	movf	_time_counter+3,w,c	;volatile
  2318  01212C  0101               	movlb	1	; () banked
  2319  01212E  2145               	addwfc	(??_main+3)& (0+255),w,b
  2320  012130  0101               	movlb	1	; () banked
  2321  012132  6F49               	movwf	(??_main+7)& (0+255),b
  2322  012134  0101               	movlb	1	; () banked
  2323  012136  5149               	movf	(??_main+7)& (0+255),w,b
  2324  012138  0101               	movlb	1	; () banked
  2325  01213A  1148               	iorwf	(??_main+6)& (0+255),w,b
  2326  01213C  0101               	movlb	1	; () banked
  2327  01213E  1147               	iorwf	(??_main+5)& (0+255),w,b
  2328  012140  E105               	bnz	u12470
  2329  012142  0E02               	movlw	2
  2330  012144  0101               	movlb	1	; () banked
  2331  012146  5D46               	subwf	(??_main+4)& (0+255),w,b
  2332  012148  A0D8               	btfss	status,0,c
  2333  01214A  D00A               	goto	l9314
  2334  01214C                     u12470:
  2335                           
  2336                           ; BSR set to: 1
  2337                           ;RemoteCan.c: 274: pr_time_2 = time_counter;
  2338  01214C  C020  F0D7         	movff	_time_counter,_pr_time_2	;volatile
  2339  012150  C021  F0D8         	movff	_time_counter+1,_pr_time_2+1	;volatile
  2340  012154  C022  F0D9         	movff	_time_counter+2,_pr_time_2+2	;volatile
  2341  012158  C023  F0DA         	movff	_time_counter+3,_pr_time_2+3	;volatile
  2342                           
  2343                           ; BSR set to: 1
  2344                           ;RemoteCan.c: 275: CAN_Send();
  2345  01215C  ECA4  F0AB         	call	_CAN_Send	;wreg free
  2346  012160                     l9314:
  2347                           
  2348                           ;RemoteCan.c: 276: }
  2349                           ;RemoteCan.c: 278: if ((time_counter - pr_time_3) >= (100 / 10)) {
  2350  012160  C010  F142         	movff	_pr_time_3,??_main	;volatile
  2351  012164  C011  F143         	movff	_pr_time_3+1,??_main+1	;volatile
  2352  012168  C012  F144         	movff	_pr_time_3+2,??_main+2	;volatile
  2353  01216C  C013  F145         	movff	_pr_time_3+3,??_main+3	;volatile
  2354  012170  0101               	movlb	1	; () banked
  2355  012172  1F42               	comf	??_main& (0+255),f,b
  2356  012174  1F43               	comf	(??_main+1)& (0+255),f,b
  2357  012176  1F44               	comf	(??_main+2)& (0+255),f,b
  2358  012178  1F45               	comf	(??_main+3)& (0+255),f,b
  2359  01217A  2B42               	incf	??_main& (0+255),f,b
  2360  01217C  0E00               	movlw	0
  2361  01217E  2343               	addwfc	(??_main+1)& (0+255),f,b
  2362  012180  2344               	addwfc	(??_main+2)& (0+255),f,b
  2363  012182  2345               	addwfc	(??_main+3)& (0+255),f,b
  2364  012184  5020               	movf	_time_counter,w,c	;volatile
  2365  012186  0101               	movlb	1	; () banked
  2366  012188  2542               	addwf	??_main& (0+255),w,b
  2367  01218A  0101               	movlb	1	; () banked
  2368  01218C  6F46               	movwf	(??_main+4)& (0+255),b
  2369  01218E  5021               	movf	_time_counter+1,w,c	;volatile
  2370  012190  0101               	movlb	1	; () banked
  2371  012192  2143               	addwfc	(??_main+1)& (0+255),w,b
  2372  012194  0101               	movlb	1	; () banked
  2373  012196  6F47               	movwf	(??_main+5)& (0+255),b
  2374  012198  5022               	movf	_time_counter+2,w,c	;volatile
  2375  01219A  0101               	movlb	1	; () banked
  2376  01219C  2144               	addwfc	(??_main+2)& (0+255),w,b
  2377  01219E  0101               	movlb	1	; () banked
  2378  0121A0  6F48               	movwf	(??_main+6)& (0+255),b
  2379  0121A2  5023               	movf	_time_counter+3,w,c	;volatile
  2380  0121A4  0101               	movlb	1	; () banked
  2381  0121A6  2145               	addwfc	(??_main+3)& (0+255),w,b
  2382  0121A8  0101               	movlb	1	; () banked
  2383  0121AA  6F49               	movwf	(??_main+7)& (0+255),b
  2384  0121AC  0101               	movlb	1	; () banked
  2385  0121AE  5149               	movf	(??_main+7)& (0+255),w,b
  2386  0121B0  0101               	movlb	1	; () banked
  2387  0121B2  1148               	iorwf	(??_main+6)& (0+255),w,b
  2388  0121B4  0101               	movlb	1	; () banked
  2389  0121B6  1147               	iorwf	(??_main+5)& (0+255),w,b
  2390  0121B8  E105               	bnz	u12480
  2391  0121BA  0E0A               	movlw	10
  2392  0121BC  0101               	movlb	1	; () banked
  2393  0121BE  5D46               	subwf	(??_main+4)& (0+255),w,b
  2394  0121C0  A0D8               	btfss	status,0,c
  2395  0121C2  D4D1               	goto	l9172
  2396  0121C4                     u12480:
  2397                           
  2398                           ; BSR set to: 1
  2399                           ;RemoteCan.c: 279: pr_time_3 = time_counter;
  2400  0121C4  C020  F010         	movff	_time_counter,_pr_time_3	;volatile
  2401  0121C8  C021  F011         	movff	_time_counter+1,_pr_time_3+1	;volatile
  2402  0121CC  C022  F012         	movff	_time_counter+2,_pr_time_3+2	;volatile
  2403  0121D0  C023  F013         	movff	_time_counter+3,_pr_time_3+3	;volatile
  2404                           
  2405                           ; BSR set to: 1
  2406                           ;RemoteCan.c: 280: LCD_Handler();
  2407  0121D4  EC19  F0A3         	call	_LCD_Handler	;wreg free
  2408  0121D8  D4C6               	goto	l9172
  2409  0121DA                     __end_of_main:
  2410                           	opt stack 0
  2411                           tblptru	equ	0xFF8
  2412                           tblptrh	equ	0xFF7
  2413                           tblptrl	equ	0xFF6
  2414                           tablat	equ	0xFF5
  2415                           postinc0	equ	0xFEE
  2416                           wreg	equ	0xFE8
  2417                           status	equ	0xFD8
  2418                           
  2419 ;; *************** function _board_initialization *****************
  2420 ;; Defined at:
  2421 ;;		line 431 in file "RemoteCan.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;		None
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;		None
  2426 ;; Return value:  Size  Location     Type
  2427 ;;		None               void
  2428 ;; Registers used:
  2429 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2439 ;;Total ram usage:        0 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    9
  2442 ;; This function calls:
  2443 ;;		_CANInitialize
  2444 ;;		_LCD_clear
  2445 ;;		_LCD_goto_line
  2446 ;;		_LCD_initialize
  2447 ;;		_LCD_write_message
  2448 ;;		_delay_ms
  2449 ;; This function is called by:
  2450 ;;		_main
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text1
  2455  01550C                     __ptext1:
  2456                           	opt stack 0
  2457  01550C                     _board_initialization:
  2458                           	opt stack 21
  2459                           
  2460                           ;RemoteCan.c: 433: LATA = 0x00;
  2461                           
  2462                           ;incstack = 0
  2463  01550C  0E00               	movlw	0
  2464  01550E  6E89               	movwf	3977,c	;volatile
  2465                           
  2466                           ;RemoteCan.c: 434: TRISA = 0b00011111;
  2467  015510  0E1F               	movlw	31
  2468  015512  6E92               	movwf	3986,c	;volatile
  2469                           
  2470                           ;RemoteCan.c: 435: LATB = 0x00;
  2471  015514  0E00               	movlw	0
  2472  015516  6E8A               	movwf	3978,c	;volatile
  2473                           
  2474                           ;RemoteCan.c: 436: TRISB = 0b11111011;
  2475  015518  0EFB               	movlw	251
  2476  01551A  6E93               	movwf	3987,c	;volatile
  2477                           
  2478                           ;RemoteCan.c: 437: LATC = 0x00;
  2479  01551C  0E00               	movlw	0
  2480  01551E  6E8B               	movwf	3979,c	;volatile
  2481                           
  2482                           ;RemoteCan.c: 438: TRISC = 0b11110000;
  2483  015520  0EF0               	movlw	240
  2484  015522  6E94               	movwf	3988,c	;volatile
  2485                           
  2486                           ;RemoteCan.c: 439: LATD = 0x00;
  2487  015524  0E00               	movlw	0
  2488  015526  6E8C               	movwf	3980,c	;volatile
  2489                           
  2490                           ;RemoteCan.c: 440: TRISD = 0x00;
  2491  015528  0E00               	movlw	0
  2492  01552A  6E95               	movwf	3989,c	;volatile
  2493                           
  2494                           ;RemoteCan.c: 441: LATE = 0x00;
  2495  01552C  0E00               	movlw	0
  2496  01552E  6E8D               	movwf	3981,c	;volatile
  2497                           
  2498                           ;RemoteCan.c: 442: TRISE = 0x00;
  2499  015530  0E00               	movlw	0
  2500  015532  6E96               	movwf	3990,c	;volatile
  2501                           
  2502                           ;RemoteCan.c: 444: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2503  015534  0E06               	movlw	6
  2504  015536  0100               	movlb	0	; () banked
  2505  015538  6F7D               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2506  01553A  0E05               	movlw	5
  2507  01553C  0100               	movlb	0	; () banked
  2508  01553E  6F7E               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2509  015540  0E01               	movlw	1
  2510  015542  0100               	movlb	0	; () banked
  2511  015544  6F7F               	movwf	CANInitialize@SJW& (0+255),b
  2512  015546  0E03               	movlw	3
  2513  015548  0100               	movlb	0	; () banked
  2514  01554A  6F80               	movwf	CANInitialize@BRP& (0+255),b
  2515  01554C  0E9D               	movlw	157
  2516  01554E  0100               	movlb	0	; () banked
  2517  015550  6F81               	movwf	CANInitialize@flags& (0+255),b
  2518  015552  0E04               	movlw	4
  2519  015554  ECE7  F0A4         	call	_CANInitialize
  2520                           
  2521                           ;RemoteCan.c: 448: PIR2bits.TMR3IF = 0;
  2522  015558  92A1               	bcf	4001,1,c	;volatile
  2523                           
  2524                           ;RemoteCan.c: 449: PIR3bits.RXB1IF = 0;
  2525  01555A  92A4               	bcf	4004,1,c	;volatile
  2526                           
  2527                           ;RemoteCan.c: 450: PIR3bits.RXB0IF = 0;
  2528  01555C  90A4               	bcf	4004,0,c	;volatile
  2529                           
  2530                           ;RemoteCan.c: 453: RCONbits.IPEN = 1;
  2531  01555E  8ED0               	bsf	4048,7,c	;volatile
  2532                           
  2533                           ;RemoteCan.c: 454: IPR3bits.RXB1IP = 1;
  2534  015560  82A5               	bsf	4005,1,c	;volatile
  2535                           
  2536                           ;RemoteCan.c: 455: IPR3bits.RXB0IP = 1;
  2537  015562  80A5               	bsf	4005,0,c	;volatile
  2538                           
  2539                           ;RemoteCan.c: 456: IPR2bits.TMR3IP = 0;
  2540  015564  92A2               	bcf	4002,1,c	;volatile
  2541                           
  2542                           ;RemoteCan.c: 459: ADCON1 = 0b00001101;
  2543  015566  0E0D               	movlw	13
  2544  015568  6EC1               	movwf	4033,c	;volatile
  2545                           
  2546                           ;RemoteCan.c: 460: ADCON0bits.CHS2 = 0;
  2547  01556A  98C2               	bcf	4034,4,c	;volatile
  2548                           
  2549                           ;RemoteCan.c: 461: ADCON0bits.CHS1 = 0;
  2550  01556C  96C2               	bcf	4034,3,c	;volatile
  2551                           
  2552                           ;RemoteCan.c: 462: ADCON0bits.CHS0 = 0;
  2553  01556E  94C2               	bcf	4034,2,c	;volatile
  2554                           
  2555                           ;RemoteCan.c: 463: ADCON2bits.ACQT2 = 1;
  2556  015570  8AC0               	bsf	4032,5,c	;volatile
  2557                           
  2558                           ;RemoteCan.c: 464: ADCON2bits.ACQT1 = 1;
  2559  015572  88C0               	bsf	4032,4,c	;volatile
  2560                           
  2561                           ;RemoteCan.c: 465: ADCON2bits.ACQT0 = 0;
  2562  015574  96C0               	bcf	4032,3,c	;volatile
  2563                           
  2564                           ;RemoteCan.c: 466: ADCON2bits.ADCS2 = 1;
  2565  015576  84C0               	bsf	4032,2,c	;volatile
  2566                           
  2567                           ;RemoteCan.c: 467: ADCON2bits.ADCS1 = 0;
  2568  015578  92C0               	bcf	4032,1,c	;volatile
  2569                           
  2570                           ;RemoteCan.c: 468: ADCON2bits.ADCS0 = 1;
  2571  01557A  80C0               	bsf	4032,0,c	;volatile
  2572                           
  2573                           ;RemoteCan.c: 469: ADCON2bits.ADFM = 0;
  2574  01557C  9EC0               	bcf	4032,7,c	;volatile
  2575                           
  2576                           ;RemoteCan.c: 470: ADCON0bits.ADON = 1;
  2577  01557E  80C2               	bsf	4034,0,c	;volatile
  2578                           
  2579                           ;RemoteCan.c: 473: LCD_initialize(16);
  2580  015580  0E10               	movlw	16
  2581  015582  EC25  F0A8         	call	_LCD_initialize
  2582                           
  2583                           ;RemoteCan.c: 475: LCD_clear();
  2584  015586  EC79  F0AE         	call	_LCD_clear	;wreg free
  2585                           
  2586                           ;RemoteCan.c: 476: LCD_goto_line(1);
  2587  01558A  0E01               	movlw	1
  2588  01558C  EC10  F0AA         	call	_LCD_goto_line
  2589                           
  2590                           ;RemoteCan.c: 477: LCD_write_message("Wait...");
  2591  015590  0ED0               	movlw	low STR_16
  2592  015592  0100               	movlb	0	; () banked
  2593  015594  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  2594  015596  0EFF               	movlw	high STR_16
  2595  015598  0100               	movlb	0	; () banked
  2596  01559A  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2597  01559C  EC46  F0AE         	call	_LCD_write_message	;wreg free
  2598                           
  2599                           ;RemoteCan.c: 478: delay_ms(300);
  2600  0155A0  0E01               	movlw	1
  2601  0155A2  0100               	movlb	0	; () banked
  2602  0155A4  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2603  0155A6  0E2C               	movlw	44
  2604  0155A8  6F75               	movwf	delay_ms@value_ms& (0+255),b
  2605  0155AA  ECF2  F0AD         	call	_delay_ms	;wreg free
  2606                           
  2607                           ;RemoteCan.c: 480: PORTDbits.RD2 = 0;
  2608  0155AE  9483               	bcf	3971,2,c	;volatile
  2609                           
  2610                           ;RemoteCan.c: 481: PORTDbits.RD3 = 0;
  2611  0155B0  9683               	bcf	3971,3,c	;volatile
  2612                           
  2613                           ;RemoteCan.c: 484: TMR3H = 0x63;
  2614  0155B2  0E63               	movlw	99
  2615  0155B4  6EB3               	movwf	4019,c	;volatile
  2616                           
  2617                           ;RemoteCan.c: 485: TMR3L = 0xC0;
  2618  0155B6  0EC0               	movlw	192
  2619  0155B8  6EB2               	movwf	4018,c	;volatile
  2620                           
  2621                           ;RemoteCan.c: 488: PIE3bits.RXB1IE = 1;
  2622  0155BA  82A3               	bsf	4003,1,c	;volatile
  2623                           
  2624                           ;RemoteCan.c: 489: PIE3bits.RXB0IE = 1;
  2625  0155BC  80A3               	bsf	4003,0,c	;volatile
  2626                           
  2627                           ;RemoteCan.c: 490: PIE2bits.TMR3IE = 1;
  2628  0155BE  82A0               	bsf	4000,1,c	;volatile
  2629                           
  2630                           ;RemoteCan.c: 493: T3CON = 0x01;
  2631  0155C0  0E01               	movlw	1
  2632  0155C2  6EB1               	movwf	4017,c	;volatile
  2633                           
  2634                           ;RemoteCan.c: 494: LCD_clear();
  2635  0155C4  EC79  F0AE         	call	_LCD_clear	;wreg free
  2636                           
  2637                           ;RemoteCan.c: 495: INTCONbits.GIEH = 1;
  2638  0155C8  8EF2               	bsf	intcon,7,c	;volatile
  2639                           
  2640                           ;RemoteCan.c: 496: INTCONbits.GIEL = 1;
  2641  0155CA  8CF2               	bsf	intcon,6,c	;volatile
  2642  0155CC  0012               	return		;funcret
  2643  0155CE                     __end_of_board_initialization:
  2644                           	opt stack 0
  2645                           tblptru	equ	0xFF8
  2646                           tblptrh	equ	0xFF7
  2647                           tblptrl	equ	0xFF6
  2648                           tablat	equ	0xFF5
  2649                           intcon	equ	0xFF2
  2650                           postinc0	equ	0xFEE
  2651                           wreg	equ	0xFE8
  2652                           status	equ	0xFD8
  2653                           
  2654 ;; *************** function _CANInitialize *****************
  2655 ;; Defined at:
  2656 ;;		line 218 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;  propSeg         1    wreg     unsigned char 
  2659 ;;  phaseSeg1       1   29[BANK0 ] unsigned char 
  2660 ;;  phaseSeg2       1   30[BANK0 ] unsigned char 
  2661 ;;  SJW             1   31[BANK0 ] unsigned char 
  2662 ;;  BRP             1   32[BANK0 ] unsigned char 
  2663 ;;  flags           1   33[BANK0 ] enum E16887
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  propSeg         1   38[BANK0 ] unsigned char 
  2666 ;;  FilterConfig    1   40[BANK0 ] unsigned char 
  2667 ;;  FilterConfig    1   39[BANK0 ] unsigned char 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;		None               void
  2670 ;; Registers used:
  2671 ;;		wreg, status,2, status,0, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2677 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2678 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2679 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2680 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2681 ;;Total ram usage:       12 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    4
  2684 ;; This function calls:
  2685 ;;		_CANOperationMode
  2686 ;;		_CANSetFilter
  2687 ;;		_CANSetMask
  2688 ;; This function is called by:
  2689 ;;		_board_initialization
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text2
  2694  0149CE                     __ptext2:
  2695                           	opt stack 0
  2696  0149CE                     _CANInitialize:
  2697                           	opt stack 25
  2698                           
  2699                           ;incstack = 0
  2700                           ;CANInitialize@propSeg stored from wreg
  2701  0149CE  0100               	movlb	0	; () banked
  2702  0149D0  6F86               	movwf	CANInitialize@propSeg& (0+255),b
  2703                           
  2704                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  2705                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  2706                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2707  0149D2  0E80               	movlw	128
  2708  0149D4  EC24  F0AF         	call	_CANOperationMode
  2709                           
  2710                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  2711  0149D8  0E00               	movlw	0
  2712  0149DA  6E70               	movwf	3952,c	;volatile
  2713                           
  2714                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  2715  0149DC  0E00               	movlw	0
  2716  0149DE  6E71               	movwf	3953,c	;volatile
  2717                           
  2718                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  2719  0149E0  0E00               	movlw	0
  2720  0149E2  6E72               	movwf	3954,c	;volatile
  2721                           
  2722                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  2723  0149E4  0100               	movlb	0	; () banked
  2724  0149E6  417F               	rrncf	CANInitialize@SJW& (0+255),w,b
  2725  0149E8  42E8               	rrncf	wreg,f,c
  2726  0149EA  0BC0               	andlw	192
  2727  0149EC  0100               	movlb	0	; () banked
  2728  0149EE  6F7F               	movwf	CANInitialize@SJW& (0+255),b
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  2732  0149F0  0100               	movlb	0	; () banked
  2733  0149F2  517F               	movf	CANInitialize@SJW& (0+255),w,b
  2734  0149F4  1270               	iorwf	3952,f,c	;volatile
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  2738  0149F6  0100               	movlb	0	; () banked
  2739  0149F8  5180               	movf	CANInitialize@BRP& (0+255),w,b
  2740  0149FA  1270               	iorwf	3952,f,c	;volatile
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  2744  0149FC  0100               	movlb	0	; () banked
  2745  0149FE  5186               	movf	CANInitialize@propSeg& (0+255),w,b
  2746  014A00  1271               	iorwf	3953,f,c	;volatile
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2750  014A02  0100               	movlb	0	; () banked
  2751  014A04  397D               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2752  014A06  42E8               	rrncf	wreg,f,c
  2753  014A08  0BF8               	andlw	248
  2754  014A0A  0100               	movlb	0	; () banked
  2755  014A0C  6F7D               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2759  014A0E  0100               	movlb	0	; () banked
  2760  014A10  517D               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2761  014A12  1271               	iorwf	3953,f,c	;volatile
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2765  014A14  0100               	movlb	0	; () banked
  2766  014A16  A581               	btfss	CANInitialize@flags& (0+255),2,b
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  2770  014A18  8C71               	bsf	3953,6,c	;volatile
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2774  014A1A  0100               	movlb	0	; () banked
  2775  014A1C  B181               	btfsc	CANInitialize@flags& (0+255),0,b
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2779  014A1E  8E71               	bsf	3953,7,c	;volatile
  2780                           
  2781                           ; BSR set to: 0
  2782                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2783                           
  2784                           ; BSR set to: 0
  2785  014A20  0100               	movlb	0	; () banked
  2786  014A22  517E               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2787  014A24  1272               	iorwf	3954,f,c	;volatile
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2791  014A26  0100               	movlb	0	; () banked
  2792  014A28  B381               	btfsc	CANInitialize@flags& (0+255),1,b
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2796  014A2A  8C72               	bsf	3954,6,c	;volatile
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2800                           
  2801                           ; BSR set to: 0
  2802  014A2C  0100               	movlb	0	; () banked
  2803  014A2E  5181               	movf	CANInitialize@flags& (0+255),w,b
  2804  014A30  0B60               	andlw	96
  2805  014A32  6E60               	movwf	3936,c	;volatile
  2806                           
  2807                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  2808  014A34  0100               	movlb	0	; () banked
  2809  014A36  5181               	movf	CANInitialize@flags& (0+255),w,b
  2810  014A38  0B10               	andlw	16
  2811  014A3A  0AFF               	xorlw	255
  2812  014A3C  B4D8               	btfsc	status,2,c
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2816  014A3E  8460               	bsf	3936,2,c	;volatile
  2817                           
  2818                           ; BSR set to: 0
  2819                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  2820  014A40  CF60 FF50          	movff	3936,3920	;volatile
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2824  014A44  0E00               	movlw	0
  2825  014A46  0100               	movlb	0	; () banked
  2826  014A48  6F6F               	movwf	CANSetMask@mask& (0+255),b
  2827  014A4A  0E00               	movlw	0
  2828  014A4C  6F70               	movwf	(CANSetMask@mask+1)& (0+255),b
  2829  014A4E  0E00               	movlw	0
  2830  014A50  6F71               	movwf	(CANSetMask@mask+2)& (0+255),b
  2831  014A52  0E00               	movlw	0
  2832  014A54  6F72               	movwf	(CANSetMask@mask+3)& (0+255),b
  2833  014A56  0EF7               	movlw	247
  2834  014A58  0100               	movlb	0	; () banked
  2835  014A5A  6F73               	movwf	CANSetMask@type& (0+255),b
  2836  014A5C  0E01               	movlw	1
  2837  014A5E  ECCF  F09F         	call	_CANSetMask
  2838                           
  2839                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2840  014A62  0E00               	movlw	0
  2841  014A64  0100               	movlb	0	; () banked
  2842  014A66  6F6F               	movwf	CANSetMask@mask& (0+255),b
  2843  014A68  0E00               	movlw	0
  2844  014A6A  6F70               	movwf	(CANSetMask@mask+1)& (0+255),b
  2845  014A6C  0E00               	movlw	0
  2846  014A6E  6F71               	movwf	(CANSetMask@mask+2)& (0+255),b
  2847  014A70  0E00               	movlw	0
  2848  014A72  6F72               	movwf	(CANSetMask@mask+3)& (0+255),b
  2849  014A74  0EF7               	movlw	247
  2850  014A76  0100               	movlb	0	; () banked
  2851  014A78  6F73               	movwf	CANSetMask@type& (0+255),b
  2852  014A7A  0E02               	movlw	2
  2853  014A7C  ECCF  F09F         	call	_CANSetMask
  2854                           
  2855                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2856  014A80  D00F               	goto	l5812
  2857  014A82                     l5806:
  2858                           
  2859                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2860  014A82  0EF7               	movlw	247
  2861  014A84  0100               	movlb	0	; () banked
  2862  014A86  6F87               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2863  014A88  D007               	goto	l5808
  2864  014A8A                     l370:
  2865                           
  2866                           ; BSR set to: 0
  2867                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2868  014A8A  0100               	movlb	0	; () banked
  2869  014A8C  6987               	setf	CANInitialize@FilterConfig1& (0+255),b
  2870                           
  2871                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2872  014A8E  0100               	movlb	0	; () banked
  2873  014A90  6988               	setf	CANInitialize@FilterConfig2& (0+255),b
  2874                           
  2875                           ;inc\CANlib.h: 273: break;
  2876  014A92  D028               	goto	l5814
  2877  014A94                     l371:
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2881  014A94  0100               	movlb	0	; () banked
  2882  014A96  6987               	setf	CANInitialize@FilterConfig1& (0+255),b
  2883  014A98                     l5808:
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2887  014A98  0EF7               	movlw	247
  2888  014A9A  0100               	movlb	0	; () banked
  2889  014A9C  6F88               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;inc\CANlib.h: 278: }
  2893                           
  2894                           ;inc\CANlib.h: 277: break;
  2895  014A9E  D022               	goto	l5814
  2896  014AA0                     l5812:
  2897  014AA0  0E9F               	movlw	159
  2898  014AA2  0100               	movlb	0	; () banked
  2899  014AA4  6F82               	movwf	??_CANInitialize& (0+255),b
  2900  014AA6  0EFF               	movlw	255
  2901  014AA8  0100               	movlb	0	; () banked
  2902  014AAA  6F83               	movwf	(??_CANInitialize+1)& (0+255),b
  2903  014AAC  0100               	movlb	0	; () banked
  2904  014AAE  5181               	movf	CANInitialize@flags& (0+255),w,b
  2905  014AB0  0B60               	andlw	96
  2906  014AB2  0100               	movlb	0	; () banked
  2907  014AB4  6F84               	movwf	(??_CANInitialize+2)& (0+255),b
  2908  014AB6  6B85               	clrf	(??_CANInitialize+3)& (0+255),b
  2909  014AB8  0100               	movlb	0	; () banked
  2910  014ABA  5182               	movf	??_CANInitialize& (0+255),w,b
  2911  014ABC  0100               	movlb	0	; () banked
  2912  014ABE  1384               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2913  014AC0  0100               	movlb	0	; () banked
  2914  014AC2  5183               	movf	(??_CANInitialize+1)& (0+255),w,b
  2915  014AC4  0100               	movlb	0	; () banked
  2916  014AC6  1385               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2917                           
  2918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2919                           ; Switch size 1, requested type "space"
  2920                           ; Number of cases is 1, Range of values is 0 to 0
  2921                           ; switch strategies available:
  2922                           ; Name         Instructions Cycles
  2923                           ; simple_byte            4     3 (average)
  2924                           ;	Chosen strategy is simple_byte
  2925  014AC8  0100               	movlb	0	; () banked
  2926  014ACA  5185               	movf	(??_CANInitialize+3)& (0+255),w,b
  2927  014ACC  0A00               	xorlw	0	; case 0
  2928  014ACE  A4D8               	btfss	status,2,c
  2929  014AD0  D7E1               	goto	l371
  2930                           
  2931                           ; BSR set to: 0
  2932                           ; Switch size 1, requested type "space"
  2933                           ; Number of cases is 2, Range of values is 191 to 223
  2934                           ; switch strategies available:
  2935                           ; Name         Instructions Cycles
  2936                           ; simple_byte            7     4 (average)
  2937                           ;	Chosen strategy is simple_byte
  2938  014AD2  0100               	movlb	0	; () banked
  2939  014AD4  5184               	movf	(??_CANInitialize+2)& (0+255),w,b
  2940  014AD6  0ABF               	xorlw	191	; case 191
  2941  014AD8  B4D8               	btfsc	status,2,c
  2942  014ADA  D7D7               	goto	l370
  2943  014ADC  0A60               	xorlw	96	; case 223
  2944  014ADE  B4D8               	btfsc	status,2,c
  2945  014AE0  D7D0               	goto	l5806
  2946  014AE2  D7D8               	goto	l371
  2947  014AE4                     l5814:
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2951  014AE4  0E00               	movlw	0
  2952  014AE6  0100               	movlb	0	; () banked
  2953  014AE8  6F6F               	movwf	CANSetFilter@filter& (0+255),b
  2954  014AEA  0E00               	movlw	0
  2955  014AEC  6F70               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2956  014AEE  0E00               	movlw	0
  2957  014AF0  6F71               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2958  014AF2  0E00               	movlw	0
  2959  014AF4  6F72               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2960  014AF6  C087  F073         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2961  014AFA  0E00               	movlw	0
  2962  014AFC  EC00  F080         	call	_CANSetFilter
  2963                           
  2964                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2965  014B00  0E00               	movlw	0
  2966  014B02  0100               	movlb	0	; () banked
  2967  014B04  6F6F               	movwf	CANSetFilter@filter& (0+255),b
  2968  014B06  0E00               	movlw	0
  2969  014B08  6F70               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2970  014B0A  0E00               	movlw	0
  2971  014B0C  6F71               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2972  014B0E  0E00               	movlw	0
  2973  014B10  6F72               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2974  014B12  C087  F073         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2975  014B16  0E01               	movlw	1
  2976  014B18  EC00  F080         	call	_CANSetFilter
  2977                           
  2978                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2979  014B1C  0E00               	movlw	0
  2980  014B1E  0100               	movlb	0	; () banked
  2981  014B20  6F6F               	movwf	CANSetFilter@filter& (0+255),b
  2982  014B22  0E00               	movlw	0
  2983  014B24  6F70               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2984  014B26  0E00               	movlw	0
  2985  014B28  6F71               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2986  014B2A  0E00               	movlw	0
  2987  014B2C  6F72               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2988  014B2E  C088  F073         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2989  014B32  0E02               	movlw	2
  2990  014B34  EC00  F080         	call	_CANSetFilter
  2991                           
  2992                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2993  014B38  0E00               	movlw	0
  2994  014B3A  0100               	movlb	0	; () banked
  2995  014B3C  6F6F               	movwf	CANSetFilter@filter& (0+255),b
  2996  014B3E  0E00               	movlw	0
  2997  014B40  6F70               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2998  014B42  0E00               	movlw	0
  2999  014B44  6F71               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3000  014B46  0E00               	movlw	0
  3001  014B48  6F72               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3002  014B4A  C088  F073         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3003  014B4E  0E03               	movlw	3
  3004  014B50  EC00  F080         	call	_CANSetFilter
  3005                           
  3006                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3007  014B54  0E00               	movlw	0
  3008  014B56  0100               	movlb	0	; () banked
  3009  014B58  6F6F               	movwf	CANSetFilter@filter& (0+255),b
  3010  014B5A  0E00               	movlw	0
  3011  014B5C  6F70               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3012  014B5E  0E00               	movlw	0
  3013  014B60  6F71               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3014  014B62  0E00               	movlw	0
  3015  014B64  6F72               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3016  014B66  C088  F073         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3017  014B6A  0E04               	movlw	4
  3018  014B6C  EC00  F080         	call	_CANSetFilter
  3019                           
  3020                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3021  014B70  0E00               	movlw	0
  3022  014B72  0100               	movlb	0	; () banked
  3023  014B74  6F6F               	movwf	CANSetFilter@filter& (0+255),b
  3024  014B76  0E00               	movlw	0
  3025  014B78  6F70               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3026  014B7A  0E00               	movlw	0
  3027  014B7C  6F71               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3028  014B7E  0E00               	movlw	0
  3029  014B80  6F72               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3030  014B82  C088  F073         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3031  014B86  0E05               	movlw	5
  3032  014B88  EC00  F080         	call	_CANSetFilter
  3033                           
  3034                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3035  014B8C  0E00               	movlw	0
  3036  014B8E  EC24  F0AF         	call	_CANOperationMode
  3037  014B92  0012               	return		;funcret
  3038  014B94                     __end_of_CANInitialize:
  3039                           	opt stack 0
  3040                           tblptru	equ	0xFF8
  3041                           tblptrh	equ	0xFF7
  3042                           tblptrl	equ	0xFF6
  3043                           tablat	equ	0xFF5
  3044                           intcon	equ	0xFF2
  3045                           postinc0	equ	0xFEE
  3046                           wreg	equ	0xFE8
  3047                           status	equ	0xFD8
  3048                           
  3049 ;; *************** function _CANSetMask *****************
  3050 ;; Defined at:
  3051 ;;		line 640 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;  numBuffer       1    wreg     enum E16921
  3054 ;;  mask            4   15[BANK0 ] unsigned long 
  3055 ;;  type            1   19[BANK0 ] enum E16887
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  numBuffer       1   24[BANK0 ] enum E16921
  3058 ;;  tamp            4   25[BANK0 ] unsigned long 
  3059 ;; Return value:  Size  Location     Type
  3060 ;;		None               void
  3061 ;; Registers used:
  3062 ;;		wreg, status,2, status,0
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3068 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3069 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3070 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3071 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3072 ;;Total ram usage:       14 bytes
  3073 ;; Hardware stack levels used:    1
  3074 ;; Hardware stack levels required when called:    3
  3075 ;; This function calls:
  3076 ;;		Nothing
  3077 ;; This function is called by:
  3078 ;;		_CANInitialize
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text3
  3083  013F9E                     __ptext3:
  3084                           	opt stack 0
  3085  013F9E                     _CANSetMask:
  3086                           	opt stack 25
  3087                           
  3088                           ;incstack = 0
  3089                           ;CANSetMask@numBuffer stored from wreg
  3090  013F9E  0100               	movlb	0	; () banked
  3091  013FA0  6F78               	movwf	CANSetMask@numBuffer& (0+255),b
  3092                           
  3093                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3094  013FA2  0100               	movlb	0	; () banked
  3095  013FA4  0578               	decf	CANSetMask@numBuffer& (0+255),w,b
  3096  013FA6  A4D8               	btfss	status,2,c
  3097  013FA8  D056               	goto	l4984
  3098                           
  3099                           ; BSR set to: 0
  3100  013FAA  0100               	movlb	0	; () banked
  3101  013FAC  2973               	incf	CANSetMask@type& (0+255),w,b
  3102  013FAE  A4D8               	btfss	status,2,c
  3103  013FB0  D052               	goto	l4984
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;inc\CANlib.h: 644: {
  3107                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3108  013FB2  C06F  F074         	movff	CANSetMask@mask,??_CANSetMask
  3109  013FB6  C070  F075         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3110  013FBA  C071  F076         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3111  013FBE  C072  F077         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3112  013FC2  0E04               	movlw	4
  3113  013FC4  D006               	goto	u5580
  3114  013FC6                     u5585:
  3115  013FC6  0100               	movlb	0	; () banked
  3116  013FC8  90D8               	bcf	status,0,c
  3117  013FCA  3377               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3118  013FCC  3376               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3119  013FCE  3375               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3120  013FD0  3374               	rrcf	??_CANSetMask& (0+255),f,b
  3121  013FD2                     u5580:
  3122  013FD2  2EE8               	decfsz	wreg,f,c
  3123  013FD4  D7F8               	goto	u5585
  3124  013FD6  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  3125  013FDA  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3126  013FDE  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3127  013FE2  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3131  013FE6  0100               	movlb	0	; () banked
  3132  013FE8  5179               	movf	CANSetMask@tamp& (0+255),w,b
  3133  013FEA  0100               	movlb	0	; () banked
  3134  013FEC  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3135  013FEE  6B7A               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3136  013FF0  6B7B               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3137  013FF2  6B7C               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3141  013FF4  C079  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3142                           
  3143                           ; BSR set to: 0
  3144                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3145  013FF8  0E07               	movlw	7
  3146  013FFA  0100               	movlb	0	; () banked
  3147  013FFC  156F               	andwf	CANSetMask@mask& (0+255),w,b
  3148  013FFE  0100               	movlb	0	; () banked
  3149  014000  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3150  014002  0E00               	movlw	0
  3151  014004  0100               	movlb	0	; () banked
  3152  014006  1570               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3153  014008  0100               	movlb	0	; () banked
  3154  01400A  6F7A               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3155  01400C  0E00               	movlw	0
  3156  01400E  0100               	movlb	0	; () banked
  3157  014010  1571               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3158  014012  0100               	movlb	0	; () banked
  3159  014014  6F7B               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3160  014016  0E00               	movlw	0
  3161  014018  0100               	movlb	0	; () banked
  3162  01401A  1572               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3163  01401C  0100               	movlb	0	; () banked
  3164  01401E  6F7C               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3168  014020  C079  F074         	movff	CANSetMask@tamp,??_CANSetMask
  3169  014024  C07A  F075         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3170  014028  C07B  F076         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3171  01402C  C07C  F077         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3172  014030  0E05               	movlw	5
  3173  014032                     u5595:
  3174  014032  90D8               	bcf	status,0,c
  3175  014034  0100               	movlb	0	; () banked
  3176  014036  3774               	rlcf	??_CANSetMask& (0+255),f,b
  3177  014038  3775               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3178  01403A  3776               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3179  01403C  3777               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3180  01403E  2EE8               	decfsz	wreg,f,c
  3181  014040  D7F8               	goto	u5595
  3182  014042  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  3183  014046  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3184  01404A  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3185  01404E  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3189  014052  C079  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3190  014056                     l4984:
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;inc\CANlib.h: 652: }
  3194                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3195  014056  0E02               	movlw	2
  3196  014058  0100               	movlb	0	; () banked
  3197  01405A  1978               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3198  01405C  A4D8               	btfss	status,2,c
  3199  01405E  D056               	goto	l5000
  3200                           
  3201                           ; BSR set to: 0
  3202  014060  0100               	movlb	0	; () banked
  3203  014062  2973               	incf	CANSetMask@type& (0+255),w,b
  3204  014064  A4D8               	btfss	status,2,c
  3205  014066  D052               	goto	l5000
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;inc\CANlib.h: 655: {
  3209                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3210  014068  C06F  F074         	movff	CANSetMask@mask,??_CANSetMask
  3211  01406C  C070  F075         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3212  014070  C071  F076         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3213  014074  C072  F077         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3214  014078  0E04               	movlw	4
  3215  01407A  D006               	goto	u5620
  3216  01407C                     u5625:
  3217  01407C  0100               	movlb	0	; () banked
  3218  01407E  90D8               	bcf	status,0,c
  3219  014080  3377               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3220  014082  3376               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3221  014084  3375               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3222  014086  3374               	rrcf	??_CANSetMask& (0+255),f,b
  3223  014088                     u5620:
  3224  014088  2EE8               	decfsz	wreg,f,c
  3225  01408A  D7F8               	goto	u5625
  3226  01408C  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  3227  014090  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3228  014094  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3229  014098  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3233  01409C  0100               	movlb	0	; () banked
  3234  01409E  5179               	movf	CANSetMask@tamp& (0+255),w,b
  3235  0140A0  0100               	movlb	0	; () banked
  3236  0140A2  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3237  0140A4  6B7A               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3238  0140A6  6B7B               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3239  0140A8  6B7C               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3243  0140AA  C079  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3247  0140AE  0E07               	movlw	7
  3248  0140B0  0100               	movlb	0	; () banked
  3249  0140B2  156F               	andwf	CANSetMask@mask& (0+255),w,b
  3250  0140B4  0100               	movlb	0	; () banked
  3251  0140B6  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3252  0140B8  0E00               	movlw	0
  3253  0140BA  0100               	movlb	0	; () banked
  3254  0140BC  1570               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3255  0140BE  0100               	movlb	0	; () banked
  3256  0140C0  6F7A               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3257  0140C2  0E00               	movlw	0
  3258  0140C4  0100               	movlb	0	; () banked
  3259  0140C6  1571               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3260  0140C8  0100               	movlb	0	; () banked
  3261  0140CA  6F7B               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3262  0140CC  0E00               	movlw	0
  3263  0140CE  0100               	movlb	0	; () banked
  3264  0140D0  1572               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3265  0140D2  0100               	movlb	0	; () banked
  3266  0140D4  6F7C               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3270  0140D6  C079  F074         	movff	CANSetMask@tamp,??_CANSetMask
  3271  0140DA  C07A  F075         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3272  0140DE  C07B  F076         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3273  0140E2  C07C  F077         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3274  0140E6  0E05               	movlw	5
  3275  0140E8                     u5635:
  3276  0140E8  90D8               	bcf	status,0,c
  3277  0140EA  0100               	movlb	0	; () banked
  3278  0140EC  3774               	rlcf	??_CANSetMask& (0+255),f,b
  3279  0140EE  3775               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3280  0140F0  3776               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3281  0140F2  3777               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3282  0140F4  2EE8               	decfsz	wreg,f,c
  3283  0140F6  D7F8               	goto	u5635
  3284  0140F8  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  3285  0140FC  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3286  014100  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3287  014104  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3291  014108  C079  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3292  01410C                     l5000:
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;inc\CANlib.h: 663: }
  3296                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3297  01410C  0100               	movlb	0	; () banked
  3298  01410E  0578               	decf	CANSetMask@numBuffer& (0+255),w,b
  3299  014110  A4D8               	btfss	status,2,c
  3300  014112  D087               	goto	l5032
  3301                           
  3302                           ; BSR set to: 0
  3303  014114  0EF7               	movlw	247
  3304  014116  0100               	movlb	0	; () banked
  3305  014118  1973               	xorwf	CANSetMask@type& (0+255),w,b
  3306  01411A  A4D8               	btfss	status,2,c
  3307  01411C  D082               	goto	l5032
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;inc\CANlib.h: 666: {
  3311                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3312  01411E  0100               	movlb	0	; () banked
  3313  014120  516F               	movf	CANSetMask@mask& (0+255),w,b
  3314  014122  0100               	movlb	0	; () banked
  3315  014124  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3316  014126  6B7A               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3317  014128  6B7B               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3318  01412A  6B7C               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3322  01412C  C079  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3326  014130  0E00               	movlw	0
  3327  014132  0100               	movlb	0	; () banked
  3328  014134  156F               	andwf	CANSetMask@mask& (0+255),w,b
  3329  014136  0100               	movlb	0	; () banked
  3330  014138  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3331  01413A  0EFF               	movlw	255
  3332  01413C  0100               	movlb	0	; () banked
  3333  01413E  1570               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3334  014140  0100               	movlb	0	; () banked
  3335  014142  6F7A               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3336  014144  0E00               	movlw	0
  3337  014146  0100               	movlb	0	; () banked
  3338  014148  1571               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3339  01414A  0100               	movlb	0	; () banked
  3340  01414C  6F7B               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3341  01414E  0E00               	movlw	0
  3342  014150  0100               	movlb	0	; () banked
  3343  014152  1572               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3344  014154  0100               	movlb	0	; () banked
  3345  014156  6F7C               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3349  014158  C079  F074         	movff	CANSetMask@tamp,??_CANSetMask
  3350  01415C  C07A  F075         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3351  014160  C07B  F076         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3352  014164  C07C  F077         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3353  014168  C075  F074         	movff	??_CANSetMask+1,??_CANSetMask
  3354  01416C  C076  F075         	movff	??_CANSetMask+2,??_CANSetMask+1
  3355  014170  C077  F076         	movff	??_CANSetMask+3,??_CANSetMask+2
  3356  014174  0100               	movlb	0	; () banked
  3357  014176  6B77               	clrf	(??_CANSetMask+3)& (0+255),b
  3358  014178  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  3359  01417C  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3360  014180  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3361  014184  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3365  014188  C079  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3369  01418C  0100               	movlb	0	; () banked
  3370  01418E  A171               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3371  014190  D003               	goto	l444
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3375  014192  010F               	movlb	15	; () banked
  3376  014194  8119               	bsf	25,0,b	;volatile
  3377  014196  D002               	goto	l445
  3378  014198                     l444:
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;inc\CANlib.h: 676: else
  3382                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3383  014198  010F               	movlb	15	; () banked
  3384  01419A  9119               	bcf	25,0,b	;volatile
  3385  01419C                     l445:
  3386                           
  3387                           ; BSR set to: 15
  3388                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3389  01419C  0100               	movlb	0	; () banked
  3390  01419E  A371               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3391  0141A0  D003               	goto	l446
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3395  0141A2  010F               	movlb	15	; () banked
  3396  0141A4  8319               	bsf	25,1,b	;volatile
  3397  0141A6  D002               	goto	l447
  3398  0141A8                     l446:
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;inc\CANlib.h: 681: else
  3402                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3403  0141A8  010F               	movlb	15	; () banked
  3404  0141AA  9319               	bcf	25,1,b	;volatile
  3405  0141AC                     l447:
  3406                           
  3407                           ; BSR set to: 15
  3408                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3409  0141AC  0100               	movlb	0	; () banked
  3410  0141AE  A571               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3411  0141B0  D003               	goto	l448
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3415  0141B2  010F               	movlb	15	; () banked
  3416  0141B4  8B19               	bsf	25,5,b	;volatile
  3417  0141B6  D002               	goto	l449
  3418  0141B8                     l448:
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;inc\CANlib.h: 686: else
  3422                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3423  0141B8  010F               	movlb	15	; () banked
  3424  0141BA  9B19               	bcf	25,5,b	;volatile
  3425  0141BC                     l449:
  3426                           
  3427                           ; BSR set to: 15
  3428                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3429  0141BC  0100               	movlb	0	; () banked
  3430  0141BE  A771               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3431  0141C0  D003               	goto	l450
  3432                           
  3433                           ; BSR set to: 0
  3434                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3435  0141C2  010F               	movlb	15	; () banked
  3436  0141C4  8D19               	bsf	25,6,b	;volatile
  3437  0141C6  D002               	goto	l451
  3438  0141C8                     l450:
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;inc\CANlib.h: 691: else
  3442                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3443  0141C8  010F               	movlb	15	; () banked
  3444  0141CA  9D19               	bcf	25,6,b	;volatile
  3445  0141CC                     l451:
  3446                           
  3447                           ; BSR set to: 15
  3448                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3449  0141CC  0100               	movlb	0	; () banked
  3450  0141CE  A971               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3451  0141D0  D003               	goto	l452
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3455  0141D2  010F               	movlb	15	; () banked
  3456  0141D4  8F19               	bsf	25,7,b	;volatile
  3457  0141D6  D002               	goto	l5026
  3458  0141D8                     l452:
  3459                           
  3460                           ; BSR set to: 0
  3461                           ;inc\CANlib.h: 696: else
  3462                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3463  0141D8  010F               	movlb	15	; () banked
  3464  0141DA  9F19               	bcf	25,7,b	;volatile
  3465  0141DC                     l5026:
  3466                           
  3467                           ; BSR set to: 15
  3468                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  3469  0141DC  C06F  F074         	movff	CANSetMask@mask,??_CANSetMask
  3470  0141E0  C070  F075         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3471  0141E4  C071  F076         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3472  0141E8  C072  F077         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3473  0141EC  0E16               	movlw	22
  3474  0141EE  D006               	goto	u5710
  3475  0141F0                     u5715:
  3476  0141F0  0100               	movlb	0	; () banked
  3477  0141F2  90D8               	bcf	status,0,c
  3478  0141F4  3377               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3479  0141F6  3376               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3480  0141F8  3375               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3481  0141FA  3374               	rrcf	??_CANSetMask& (0+255),f,b
  3482  0141FC                     u5710:
  3483  0141FC  2EE8               	decfsz	wreg,f,c
  3484  0141FE  D7F8               	goto	u5715
  3485  014200  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  3486  014204  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3487  014208  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3488  01420C  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3492  014210  0100               	movlb	0	; () banked
  3493  014212  5179               	movf	CANSetMask@tamp& (0+255),w,b
  3494  014214  0100               	movlb	0	; () banked
  3495  014216  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3496  014218  6B7A               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3497  01421A  6B7B               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3498  01421C  6B7C               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3502  01421E  C079  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3503  014222                     l5032:
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;inc\CANlib.h: 702: }
  3507                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3508  014222  0E02               	movlw	2
  3509  014224  0100               	movlb	0	; () banked
  3510  014226  1978               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3511  014228  A4D8               	btfss	status,2,c
  3512  01422A  0012               	return	
  3513                           
  3514                           ; BSR set to: 0
  3515  01422C  0EF7               	movlw	247
  3516  01422E  0100               	movlb	0	; () banked
  3517  014230  1973               	xorwf	CANSetMask@type& (0+255),w,b
  3518  014232  A4D8               	btfss	status,2,c
  3519  014234  0012               	return	
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;inc\CANlib.h: 705: {
  3523                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  3524  014236  0100               	movlb	0	; () banked
  3525  014238  516F               	movf	CANSetMask@mask& (0+255),w,b
  3526  01423A  0100               	movlb	0	; () banked
  3527  01423C  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3528  01423E  6B7A               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3529  014240  6B7B               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3530  014242  6B7C               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3534  014244  C079  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3538  014248  0E00               	movlw	0
  3539  01424A  0100               	movlb	0	; () banked
  3540  01424C  156F               	andwf	CANSetMask@mask& (0+255),w,b
  3541  01424E  0100               	movlb	0	; () banked
  3542  014250  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3543  014252  0EFF               	movlw	255
  3544  014254  0100               	movlb	0	; () banked
  3545  014256  1570               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3546  014258  0100               	movlb	0	; () banked
  3547  01425A  6F7A               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3548  01425C  0E00               	movlw	0
  3549  01425E  0100               	movlb	0	; () banked
  3550  014260  1571               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3551  014262  0100               	movlb	0	; () banked
  3552  014264  6F7B               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3553  014266  0E00               	movlw	0
  3554  014268  0100               	movlb	0	; () banked
  3555  01426A  1572               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3556  01426C  0100               	movlb	0	; () banked
  3557  01426E  6F7C               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  3561  014270  C079  F074         	movff	CANSetMask@tamp,??_CANSetMask
  3562  014274  C07A  F075         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3563  014278  C07B  F076         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3564  01427C  C07C  F077         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3565  014280  C075  F074         	movff	??_CANSetMask+1,??_CANSetMask
  3566  014284  C076  F075         	movff	??_CANSetMask+2,??_CANSetMask+1
  3567  014288  C077  F076         	movff	??_CANSetMask+3,??_CANSetMask+2
  3568  01428C  0100               	movlb	0	; () banked
  3569  01428E  6B77               	clrf	(??_CANSetMask+3)& (0+255),b
  3570  014290  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  3571  014294  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3572  014298  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3573  01429C  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3577  0142A0  C079  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  3581  0142A4  0100               	movlb	0	; () banked
  3582  0142A6  A171               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3583  0142A8  D003               	goto	l455
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3587  0142AA  010F               	movlb	15	; () banked
  3588  0142AC  811D               	bsf	29,0,b	;volatile
  3589  0142AE  D002               	goto	l456
  3590  0142B0                     l455:
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;inc\CANlib.h: 715: else
  3594                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3595  0142B0  010F               	movlb	15	; () banked
  3596  0142B2  911D               	bcf	29,0,b	;volatile
  3597  0142B4                     l456:
  3598                           
  3599                           ; BSR set to: 15
  3600                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  3601  0142B4  0100               	movlb	0	; () banked
  3602  0142B6  A371               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3603  0142B8  D003               	goto	l457
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3607  0142BA  010F               	movlb	15	; () banked
  3608  0142BC  831D               	bsf	29,1,b	;volatile
  3609  0142BE  D002               	goto	l458
  3610  0142C0                     l457:
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;inc\CANlib.h: 720: else
  3614                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3615  0142C0  010F               	movlb	15	; () banked
  3616  0142C2  931D               	bcf	29,1,b	;volatile
  3617  0142C4                     l458:
  3618                           
  3619                           ; BSR set to: 15
  3620                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  3621  0142C4  0100               	movlb	0	; () banked
  3622  0142C6  A571               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3623  0142C8  D003               	goto	l459
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3627  0142CA  010F               	movlb	15	; () banked
  3628  0142CC  8B1D               	bsf	29,5,b	;volatile
  3629  0142CE  D002               	goto	l460
  3630  0142D0                     l459:
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;inc\CANlib.h: 725: else
  3634                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3635  0142D0  010F               	movlb	15	; () banked
  3636  0142D2  9B1D               	bcf	29,5,b	;volatile
  3637  0142D4                     l460:
  3638                           
  3639                           ; BSR set to: 15
  3640                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  3641  0142D4  0100               	movlb	0	; () banked
  3642  0142D6  A771               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3643  0142D8  D003               	goto	l461
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3647  0142DA  010F               	movlb	15	; () banked
  3648  0142DC  8D1D               	bsf	29,6,b	;volatile
  3649  0142DE  D002               	goto	l462
  3650  0142E0                     l461:
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;inc\CANlib.h: 730: else
  3654                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3655  0142E0  010F               	movlb	15	; () banked
  3656  0142E2  9D1D               	bcf	29,6,b	;volatile
  3657  0142E4                     l462:
  3658                           
  3659                           ; BSR set to: 15
  3660                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  3661  0142E4  0100               	movlb	0	; () banked
  3662  0142E6  A971               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3663  0142E8  D003               	goto	l463
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3667  0142EA  010F               	movlb	15	; () banked
  3668  0142EC  8F1D               	bsf	29,7,b	;volatile
  3669  0142EE  D002               	goto	l5058
  3670  0142F0                     l463:
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;inc\CANlib.h: 735: else
  3674                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3675  0142F0  010F               	movlb	15	; () banked
  3676  0142F2  9F1D               	bcf	29,7,b	;volatile
  3677  0142F4                     l5058:
  3678                           
  3679                           ; BSR set to: 15
  3680                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  3681  0142F4  C06F  F074         	movff	CANSetMask@mask,??_CANSetMask
  3682  0142F8  C070  F075         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3683  0142FC  C071  F076         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3684  014300  C072  F077         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3685  014304  0E16               	movlw	22
  3686  014306  D006               	goto	u5790
  3687  014308                     u5795:
  3688  014308  0100               	movlb	0	; () banked
  3689  01430A  90D8               	bcf	status,0,c
  3690  01430C  3377               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3691  01430E  3376               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3692  014310  3375               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3693  014312  3374               	rrcf	??_CANSetMask& (0+255),f,b
  3694  014314                     u5790:
  3695  014314  2EE8               	decfsz	wreg,f,c
  3696  014316  D7F8               	goto	u5795
  3697  014318  C074  F079         	movff	??_CANSetMask,CANSetMask@tamp
  3698  01431C  C075  F07A         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3699  014320  C076  F07B         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3700  014324  C077  F07C         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  3704  014328  0100               	movlb	0	; () banked
  3705  01432A  5179               	movf	CANSetMask@tamp& (0+255),w,b
  3706  01432C  0100               	movlb	0	; () banked
  3707  01432E  6F79               	movwf	CANSetMask@tamp& (0+255),b
  3708  014330  6B7A               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3709  014332  6B7B               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3710  014334  6B7C               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3714  014336  C079  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3715  01433A  0012               	return	
  3716  01433C                     __end_of_CANSetMask:
  3717                           	opt stack 0
  3718                           tblptru	equ	0xFF8
  3719                           tblptrh	equ	0xFF7
  3720                           tblptrl	equ	0xFF6
  3721                           tablat	equ	0xFF5
  3722                           intcon	equ	0xFF2
  3723                           postinc0	equ	0xFEE
  3724                           wreg	equ	0xFE8
  3725                           status	equ	0xFD8
  3726                           
  3727 ;; *************** function _CANSetFilter *****************
  3728 ;; Defined at:
  3729 ;;		line 748 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;  numBuffer       1    wreg     enum E16924
  3732 ;;  filter          4   15[BANK0 ] unsigned long 
  3733 ;;  type            1   19[BANK0 ] enum E16887
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  numBuffer       1   24[BANK0 ] enum E16924
  3736 ;;  tamp            4   25[BANK0 ] unsigned long 
  3737 ;; Return value:  Size  Location     Type
  3738 ;;		None               void
  3739 ;; Registers used:
  3740 ;;		wreg, status,2, status,0
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3746 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3747 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3748 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3749 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3750 ;;Total ram usage:       14 bytes
  3751 ;; Hardware stack levels used:    1
  3752 ;; Hardware stack levels required when called:    3
  3753 ;; This function calls:
  3754 ;;		Nothing
  3755 ;; This function is called by:
  3756 ;;		_CANInitialize
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text4
  3761  010000                     __ptext4:
  3762                           	opt stack 0
  3763  010000                     _CANSetFilter:
  3764                           	opt stack 25
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;incstack = 0
  3768                           ;CANSetFilter@numBuffer stored from wreg
  3769  010000  0100               	movlb	0	; () banked
  3770  010002  6F78               	movwf	CANSetFilter@numBuffer& (0+255),b
  3771                           
  3772                           ;inc\CANlib.h: 750: unsigned long tamp;
  3773                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3774  010004  0100               	movlb	0	; () banked
  3775  010006  5178               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3776  010008  0100               	movlb	0	; () banked
  3777  01000A  A4D8               	btfss	status,2,c
  3778  01000C  D058               	goto	l5082
  3779                           
  3780                           ; BSR set to: 0
  3781  01000E  0100               	movlb	0	; () banked
  3782  010010  2973               	incf	CANSetFilter@type& (0+255),w,b
  3783  010012  A4D8               	btfss	status,2,c
  3784  010014  D054               	goto	l5082
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;inc\CANlib.h: 753: {
  3788                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3789  010016  010F               	movlb	15	; () banked
  3790  010018  9701               	bcf	1,3,b	;volatile
  3791                           
  3792                           ; BSR set to: 15
  3793                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  3794  01001A  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  3795  01001E  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3796  010022  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3797  010026  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3798  01002A  0E04               	movlw	4
  3799  01002C  D006               	goto	u5820
  3800  01002E                     u5825:
  3801  01002E  0100               	movlb	0	; () banked
  3802  010030  90D8               	bcf	status,0,c
  3803  010032  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3804  010034  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3805  010036  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3806  010038  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  3807  01003A                     u5820:
  3808  01003A  2EE8               	decfsz	wreg,f,c
  3809  01003C  D7F8               	goto	u5825
  3810  01003E  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3811  010042  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3812  010046  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3813  01004A  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  3817  01004E  0100               	movlb	0	; () banked
  3818  010050  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  3819  010052  0100               	movlb	0	; () banked
  3820  010054  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3821  010056  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3822  010058  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3823  01005A  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3824                           
  3825                           ; BSR set to: 0
  3826                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3827  01005C  C079  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3828                           
  3829                           ; BSR set to: 0
  3830                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  3831  010060  0E07               	movlw	7
  3832  010062  0100               	movlb	0	; () banked
  3833  010064  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  3834  010066  0100               	movlb	0	; () banked
  3835  010068  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3836  01006A  0E00               	movlw	0
  3837  01006C  0100               	movlb	0	; () banked
  3838  01006E  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3839  010070  0100               	movlb	0	; () banked
  3840  010072  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3841  010074  0E00               	movlw	0
  3842  010076  0100               	movlb	0	; () banked
  3843  010078  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3844  01007A  0100               	movlb	0	; () banked
  3845  01007C  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3846  01007E  0E00               	movlw	0
  3847  010080  0100               	movlb	0	; () banked
  3848  010082  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3849  010084  0100               	movlb	0	; () banked
  3850  010086  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  3854  010088  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  3855  01008C  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3856  010090  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3857  010094  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3858  010098  0E05               	movlw	5
  3859  01009A                     u5835:
  3860  01009A  90D8               	bcf	status,0,c
  3861  01009C  0100               	movlb	0	; () banked
  3862  01009E  3774               	rlcf	??_CANSetFilter& (0+255),f,b
  3863  0100A0  3775               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3864  0100A2  3776               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3865  0100A4  3777               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3866  0100A6  2EE8               	decfsz	wreg,f,c
  3867  0100A8  D7F8               	goto	u5835
  3868  0100AA  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3869  0100AE  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3870  0100B2  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3871  0100B6  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3875  0100BA  C079  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3876  0100BE                     l5082:
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;inc\CANlib.h: 763: }
  3880                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3881  0100BE  0100               	movlb	0	; () banked
  3882  0100C0  0578               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3883  0100C2  A4D8               	btfss	status,2,c
  3884  0100C4  D058               	goto	l5100
  3885                           
  3886                           ; BSR set to: 0
  3887  0100C6  0100               	movlb	0	; () banked
  3888  0100C8  2973               	incf	CANSetFilter@type& (0+255),w,b
  3889  0100CA  A4D8               	btfss	status,2,c
  3890  0100CC  D054               	goto	l5100
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;inc\CANlib.h: 766: {
  3894                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3895  0100CE  010F               	movlb	15	; () banked
  3896  0100D0  9705               	bcf	5,3,b	;volatile
  3897                           
  3898                           ; BSR set to: 15
  3899                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  3900  0100D2  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  3901  0100D6  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3902  0100DA  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3903  0100DE  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3904  0100E2  0E04               	movlw	4
  3905  0100E4  D006               	goto	u5860
  3906  0100E6                     u5865:
  3907  0100E6  0100               	movlb	0	; () banked
  3908  0100E8  90D8               	bcf	status,0,c
  3909  0100EA  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3910  0100EC  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3911  0100EE  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3912  0100F0  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  3913  0100F2                     u5860:
  3914  0100F2  2EE8               	decfsz	wreg,f,c
  3915  0100F4  D7F8               	goto	u5865
  3916  0100F6  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3917  0100FA  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3918  0100FE  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3919  010102  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  3923  010106  0100               	movlb	0	; () banked
  3924  010108  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  3925  01010A  0100               	movlb	0	; () banked
  3926  01010C  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3927  01010E  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3928  010110  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3929  010112  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3933  010114  C079  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  3937  010118  0E07               	movlw	7
  3938  01011A  0100               	movlb	0	; () banked
  3939  01011C  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  3940  01011E  0100               	movlb	0	; () banked
  3941  010120  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  3942  010122  0E00               	movlw	0
  3943  010124  0100               	movlb	0	; () banked
  3944  010126  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3945  010128  0100               	movlb	0	; () banked
  3946  01012A  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3947  01012C  0E00               	movlw	0
  3948  01012E  0100               	movlb	0	; () banked
  3949  010130  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3950  010132  0100               	movlb	0	; () banked
  3951  010134  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3952  010136  0E00               	movlw	0
  3953  010138  0100               	movlb	0	; () banked
  3954  01013A  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3955  01013C  0100               	movlb	0	; () banked
  3956  01013E  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  3960  010140  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  3961  010144  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3962  010148  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3963  01014C  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3964  010150  0E05               	movlw	5
  3965  010152                     u5875:
  3966  010152  90D8               	bcf	status,0,c
  3967  010154  0100               	movlb	0	; () banked
  3968  010156  3774               	rlcf	??_CANSetFilter& (0+255),f,b
  3969  010158  3775               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3970  01015A  3776               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3971  01015C  3777               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3972  01015E  2EE8               	decfsz	wreg,f,c
  3973  010160  D7F8               	goto	u5875
  3974  010162  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  3975  010166  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3976  01016A  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3977  01016E  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3981  010172  C079  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3982  010176                     l5100:
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;inc\CANlib.h: 776: }
  3986                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3987  010176  0E02               	movlw	2
  3988  010178  0100               	movlb	0	; () banked
  3989  01017A  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3990  01017C  A4D8               	btfss	status,2,c
  3991  01017E  D058               	goto	l5118
  3992                           
  3993                           ; BSR set to: 0
  3994  010180  0100               	movlb	0	; () banked
  3995  010182  2973               	incf	CANSetFilter@type& (0+255),w,b
  3996  010184  A4D8               	btfss	status,2,c
  3997  010186  D054               	goto	l5118
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;inc\CANlib.h: 779: {
  4001                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4002  010188  010F               	movlb	15	; () banked
  4003  01018A  9709               	bcf	9,3,b	;volatile
  4004                           
  4005                           ; BSR set to: 15
  4006                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4007  01018C  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  4008  010190  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4009  010194  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4010  010198  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4011  01019C  0E04               	movlw	4
  4012  01019E  D006               	goto	u5900
  4013  0101A0                     u5905:
  4014  0101A0  0100               	movlb	0	; () banked
  4015  0101A2  90D8               	bcf	status,0,c
  4016  0101A4  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4017  0101A6  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4018  0101A8  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4019  0101AA  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  4020  0101AC                     u5900:
  4021  0101AC  2EE8               	decfsz	wreg,f,c
  4022  0101AE  D7F8               	goto	u5905
  4023  0101B0  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4024  0101B4  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4025  0101B8  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4026  0101BC  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4030  0101C0  0100               	movlb	0	; () banked
  4031  0101C2  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  4032  0101C4  0100               	movlb	0	; () banked
  4033  0101C6  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4034  0101C8  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4035  0101CA  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4036  0101CC  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4040  0101CE  C079  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4044  0101D2  0E07               	movlw	7
  4045  0101D4  0100               	movlb	0	; () banked
  4046  0101D6  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  4047  0101D8  0100               	movlb	0	; () banked
  4048  0101DA  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4049  0101DC  0E00               	movlw	0
  4050  0101DE  0100               	movlb	0	; () banked
  4051  0101E0  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4052  0101E2  0100               	movlb	0	; () banked
  4053  0101E4  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4054  0101E6  0E00               	movlw	0
  4055  0101E8  0100               	movlb	0	; () banked
  4056  0101EA  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4057  0101EC  0100               	movlb	0	; () banked
  4058  0101EE  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4059  0101F0  0E00               	movlw	0
  4060  0101F2  0100               	movlb	0	; () banked
  4061  0101F4  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4062  0101F6  0100               	movlb	0	; () banked
  4063  0101F8  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4067  0101FA  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  4068  0101FE  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4069  010202  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4070  010206  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4071  01020A  0E05               	movlw	5
  4072  01020C                     u5915:
  4073  01020C  90D8               	bcf	status,0,c
  4074  01020E  0100               	movlb	0	; () banked
  4075  010210  3774               	rlcf	??_CANSetFilter& (0+255),f,b
  4076  010212  3775               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4077  010214  3776               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4078  010216  3777               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4079  010218  2EE8               	decfsz	wreg,f,c
  4080  01021A  D7F8               	goto	u5915
  4081  01021C  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4082  010220  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4083  010224  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4084  010228  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4088  01022C  C079  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4089  010230                     l5118:
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;inc\CANlib.h: 789: }
  4093                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4094  010230  0E03               	movlw	3
  4095  010232  0100               	movlb	0	; () banked
  4096  010234  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4097  010236  A4D8               	btfss	status,2,c
  4098  010238  D058               	goto	l5136
  4099                           
  4100                           ; BSR set to: 0
  4101  01023A  0100               	movlb	0	; () banked
  4102  01023C  2973               	incf	CANSetFilter@type& (0+255),w,b
  4103  01023E  A4D8               	btfss	status,2,c
  4104  010240  D054               	goto	l5136
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;inc\CANlib.h: 792: {
  4108                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4109  010242  010F               	movlb	15	; () banked
  4110  010244  970D               	bcf	13,3,b	;volatile
  4111                           
  4112                           ; BSR set to: 15
  4113                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4114  010246  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  4115  01024A  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4116  01024E  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4117  010252  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4118  010256  0E04               	movlw	4
  4119  010258  D006               	goto	u5940
  4120  01025A                     u5945:
  4121  01025A  0100               	movlb	0	; () banked
  4122  01025C  90D8               	bcf	status,0,c
  4123  01025E  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4124  010260  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4125  010262  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4126  010264  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  4127  010266                     u5940:
  4128  010266  2EE8               	decfsz	wreg,f,c
  4129  010268  D7F8               	goto	u5945
  4130  01026A  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4131  01026E  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4132  010272  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4133  010276  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4137  01027A  0100               	movlb	0	; () banked
  4138  01027C  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  4139  01027E  0100               	movlb	0	; () banked
  4140  010280  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4141  010282  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4142  010284  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4143  010286  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4147  010288  C079  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4151  01028C  0E07               	movlw	7
  4152  01028E  0100               	movlb	0	; () banked
  4153  010290  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  4154  010292  0100               	movlb	0	; () banked
  4155  010294  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4156  010296  0E00               	movlw	0
  4157  010298  0100               	movlb	0	; () banked
  4158  01029A  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4159  01029C  0100               	movlb	0	; () banked
  4160  01029E  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4161  0102A0  0E00               	movlw	0
  4162  0102A2  0100               	movlb	0	; () banked
  4163  0102A4  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4164  0102A6  0100               	movlb	0	; () banked
  4165  0102A8  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4166  0102AA  0E00               	movlw	0
  4167  0102AC  0100               	movlb	0	; () banked
  4168  0102AE  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4169  0102B0  0100               	movlb	0	; () banked
  4170  0102B2  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4174  0102B4  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  4175  0102B8  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4176  0102BC  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4177  0102C0  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4178  0102C4  0E05               	movlw	5
  4179  0102C6                     u5955:
  4180  0102C6  90D8               	bcf	status,0,c
  4181  0102C8  0100               	movlb	0	; () banked
  4182  0102CA  3774               	rlcf	??_CANSetFilter& (0+255),f,b
  4183  0102CC  3775               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4184  0102CE  3776               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4185  0102D0  3777               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4186  0102D2  2EE8               	decfsz	wreg,f,c
  4187  0102D4  D7F8               	goto	u5955
  4188  0102D6  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4189  0102DA  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4190  0102DE  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4191  0102E2  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4195  0102E6  C079  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4196  0102EA                     l5136:
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;inc\CANlib.h: 802: }
  4200                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4201  0102EA  0E04               	movlw	4
  4202  0102EC  0100               	movlb	0	; () banked
  4203  0102EE  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4204  0102F0  A4D8               	btfss	status,2,c
  4205  0102F2  D058               	goto	l5154
  4206                           
  4207                           ; BSR set to: 0
  4208  0102F4  0100               	movlb	0	; () banked
  4209  0102F6  2973               	incf	CANSetFilter@type& (0+255),w,b
  4210  0102F8  A4D8               	btfss	status,2,c
  4211  0102FA  D054               	goto	l5154
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;inc\CANlib.h: 805: {
  4215                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4216  0102FC  010F               	movlb	15	; () banked
  4217  0102FE  9711               	bcf	17,3,b	;volatile
  4218                           
  4219                           ; BSR set to: 15
  4220                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4221  010300  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  4222  010304  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4223  010308  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4224  01030C  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4225  010310  0E04               	movlw	4
  4226  010312  D006               	goto	u5980
  4227  010314                     u5985:
  4228  010314  0100               	movlb	0	; () banked
  4229  010316  90D8               	bcf	status,0,c
  4230  010318  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4231  01031A  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4232  01031C  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4233  01031E  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  4234  010320                     u5980:
  4235  010320  2EE8               	decfsz	wreg,f,c
  4236  010322  D7F8               	goto	u5985
  4237  010324  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4238  010328  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4239  01032C  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4240  010330  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4244  010334  0100               	movlb	0	; () banked
  4245  010336  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  4246  010338  0100               	movlb	0	; () banked
  4247  01033A  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4248  01033C  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4249  01033E  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4250  010340  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4254  010342  C079  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4258  010346  0E07               	movlw	7
  4259  010348  0100               	movlb	0	; () banked
  4260  01034A  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  4261  01034C  0100               	movlb	0	; () banked
  4262  01034E  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4263  010350  0E00               	movlw	0
  4264  010352  0100               	movlb	0	; () banked
  4265  010354  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4266  010356  0100               	movlb	0	; () banked
  4267  010358  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4268  01035A  0E00               	movlw	0
  4269  01035C  0100               	movlb	0	; () banked
  4270  01035E  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4271  010360  0100               	movlb	0	; () banked
  4272  010362  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4273  010364  0E00               	movlw	0
  4274  010366  0100               	movlb	0	; () banked
  4275  010368  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4276  01036A  0100               	movlb	0	; () banked
  4277  01036C  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4281  01036E  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  4282  010372  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4283  010376  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4284  01037A  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4285  01037E  0E05               	movlw	5
  4286  010380                     u5995:
  4287  010380  90D8               	bcf	status,0,c
  4288  010382  0100               	movlb	0	; () banked
  4289  010384  3774               	rlcf	??_CANSetFilter& (0+255),f,b
  4290  010386  3775               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4291  010388  3776               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4292  01038A  3777               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4293  01038C  2EE8               	decfsz	wreg,f,c
  4294  01038E  D7F8               	goto	u5995
  4295  010390  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4296  010394  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4297  010398  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4298  01039C  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4302  0103A0  C079  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4303  0103A4                     l5154:
  4304                           
  4305                           ; BSR set to: 0
  4306                           ;inc\CANlib.h: 815: }
  4307                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4308  0103A4  0E05               	movlw	5
  4309  0103A6  0100               	movlb	0	; () banked
  4310  0103A8  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4311  0103AA  A4D8               	btfss	status,2,c
  4312  0103AC  D058               	goto	l5172
  4313                           
  4314                           ; BSR set to: 0
  4315  0103AE  0100               	movlb	0	; () banked
  4316  0103B0  2973               	incf	CANSetFilter@type& (0+255),w,b
  4317  0103B2  A4D8               	btfss	status,2,c
  4318  0103B4  D054               	goto	l5172
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;inc\CANlib.h: 818: {
  4322                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4323  0103B6  010F               	movlb	15	; () banked
  4324  0103B8  9715               	bcf	21,3,b	;volatile
  4325                           
  4326                           ; BSR set to: 15
  4327                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4328  0103BA  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  4329  0103BE  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4330  0103C2  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4331  0103C6  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4332  0103CA  0E04               	movlw	4
  4333  0103CC  D006               	goto	u6020
  4334  0103CE                     u6025:
  4335  0103CE  0100               	movlb	0	; () banked
  4336  0103D0  90D8               	bcf	status,0,c
  4337  0103D2  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4338  0103D4  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4339  0103D6  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4340  0103D8  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  4341  0103DA                     u6020:
  4342  0103DA  2EE8               	decfsz	wreg,f,c
  4343  0103DC  D7F8               	goto	u6025
  4344  0103DE  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4345  0103E2  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4346  0103E6  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4347  0103EA  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4351  0103EE  0100               	movlb	0	; () banked
  4352  0103F0  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  4353  0103F2  0100               	movlb	0	; () banked
  4354  0103F4  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4355  0103F6  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4356  0103F8  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4357  0103FA  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4361  0103FC  C079  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4365  010400  0E07               	movlw	7
  4366  010402  0100               	movlb	0	; () banked
  4367  010404  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  4368  010406  0100               	movlb	0	; () banked
  4369  010408  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4370  01040A  0E00               	movlw	0
  4371  01040C  0100               	movlb	0	; () banked
  4372  01040E  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4373  010410  0100               	movlb	0	; () banked
  4374  010412  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4375  010414  0E00               	movlw	0
  4376  010416  0100               	movlb	0	; () banked
  4377  010418  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4378  01041A  0100               	movlb	0	; () banked
  4379  01041C  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4380  01041E  0E00               	movlw	0
  4381  010420  0100               	movlb	0	; () banked
  4382  010422  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4383  010424  0100               	movlb	0	; () banked
  4384  010426  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4388  010428  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  4389  01042C  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4390  010430  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4391  010434  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4392  010438  0E05               	movlw	5
  4393  01043A                     u6035:
  4394  01043A  90D8               	bcf	status,0,c
  4395  01043C  0100               	movlb	0	; () banked
  4396  01043E  3774               	rlcf	??_CANSetFilter& (0+255),f,b
  4397  010440  3775               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4398  010442  3776               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4399  010444  3777               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4400  010446  2EE8               	decfsz	wreg,f,c
  4401  010448  D7F8               	goto	u6035
  4402  01044A  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4403  01044E  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4404  010452  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4405  010456  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4409  01045A  C079  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4410  01045E                     l5172:
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;inc\CANlib.h: 828: }
  4414                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4415  01045E  0100               	movlb	0	; () banked
  4416  010460  5178               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4417  010462  0100               	movlb	0	; () banked
  4418  010464  A4D8               	btfss	status,2,c
  4419  010466  D089               	goto	l5206
  4420                           
  4421                           ; BSR set to: 0
  4422  010468  0EF7               	movlw	247
  4423  01046A  0100               	movlb	0	; () banked
  4424  01046C  1973               	xorwf	CANSetFilter@type& (0+255),w,b
  4425  01046E  A4D8               	btfss	status,2,c
  4426  010470  D084               	goto	l5206
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;inc\CANlib.h: 832: {
  4430                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4431  010472  010F               	movlb	15	; () banked
  4432  010474  8701               	bsf	1,3,b	;volatile
  4433                           
  4434                           ; BSR set to: 15
  4435                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4436  010476  0100               	movlb	0	; () banked
  4437  010478  516F               	movf	CANSetFilter@filter& (0+255),w,b
  4438  01047A  0100               	movlb	0	; () banked
  4439  01047C  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4440  01047E  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4441  010480  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4442  010482  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4446  010484  C079  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  4450  010488  0E00               	movlw	0
  4451  01048A  0100               	movlb	0	; () banked
  4452  01048C  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  4453  01048E  0100               	movlb	0	; () banked
  4454  010490  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4455  010492  0EFF               	movlw	255
  4456  010494  0100               	movlb	0	; () banked
  4457  010496  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4458  010498  0100               	movlb	0	; () banked
  4459  01049A  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4460  01049C  0E00               	movlw	0
  4461  01049E  0100               	movlb	0	; () banked
  4462  0104A0  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4463  0104A2  0100               	movlb	0	; () banked
  4464  0104A4  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4465  0104A6  0E00               	movlw	0
  4466  0104A8  0100               	movlb	0	; () banked
  4467  0104AA  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4468  0104AC  0100               	movlb	0	; () banked
  4469  0104AE  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  4473  0104B0  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  4474  0104B4  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4475  0104B8  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4476  0104BC  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4477  0104C0  C075  F074         	movff	??_CANSetFilter+1,??_CANSetFilter
  4478  0104C4  C076  F075         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4479  0104C8  C077  F076         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4480  0104CC  0100               	movlb	0	; () banked
  4481  0104CE  6B77               	clrf	(??_CANSetFilter+3)& (0+255),b
  4482  0104D0  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4483  0104D4  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4484  0104D8  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4485  0104DC  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4489  0104E0  C079  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  4493  0104E4  0100               	movlb	0	; () banked
  4494  0104E6  A171               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4495  0104E8  D003               	goto	l475
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4499  0104EA  010F               	movlb	15	; () banked
  4500  0104EC  8101               	bsf	1,0,b	;volatile
  4501  0104EE  D002               	goto	l476
  4502  0104F0                     l475:
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;inc\CANlib.h: 844: else
  4506                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4507  0104F0  010F               	movlb	15	; () banked
  4508  0104F2  9101               	bcf	1,0,b	;volatile
  4509  0104F4                     l476:
  4510                           
  4511                           ; BSR set to: 15
  4512                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  4513  0104F4  0100               	movlb	0	; () banked
  4514  0104F6  A371               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4515  0104F8  D003               	goto	l477
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4519  0104FA  010F               	movlb	15	; () banked
  4520  0104FC  8301               	bsf	1,1,b	;volatile
  4521  0104FE  D002               	goto	l478
  4522  010500                     l477:
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;inc\CANlib.h: 849: else
  4526                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4527  010500  010F               	movlb	15	; () banked
  4528  010502  9301               	bcf	1,1,b	;volatile
  4529  010504                     l478:
  4530                           
  4531                           ; BSR set to: 15
  4532                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  4533  010504  0100               	movlb	0	; () banked
  4534  010506  A571               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4535  010508  D003               	goto	l479
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4539  01050A  010F               	movlb	15	; () banked
  4540  01050C  8B01               	bsf	1,5,b	;volatile
  4541  01050E  D002               	goto	l480
  4542  010510                     l479:
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;inc\CANlib.h: 854: else
  4546                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4547  010510  010F               	movlb	15	; () banked
  4548  010512  9B01               	bcf	1,5,b	;volatile
  4549  010514                     l480:
  4550                           
  4551                           ; BSR set to: 15
  4552                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  4553  010514  0100               	movlb	0	; () banked
  4554  010516  A771               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4555  010518  D003               	goto	l481
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4559  01051A  010F               	movlb	15	; () banked
  4560  01051C  8D01               	bsf	1,6,b	;volatile
  4561  01051E  D002               	goto	l482
  4562  010520                     l481:
  4563                           
  4564                           ; BSR set to: 0
  4565                           ;inc\CANlib.h: 859: else
  4566                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4567  010520  010F               	movlb	15	; () banked
  4568  010522  9D01               	bcf	1,6,b	;volatile
  4569  010524                     l482:
  4570                           
  4571                           ; BSR set to: 15
  4572                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  4573  010524  0100               	movlb	0	; () banked
  4574  010526  A971               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4575  010528  D003               	goto	l483
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4579  01052A  010F               	movlb	15	; () banked
  4580  01052C  8F01               	bsf	1,7,b	;volatile
  4581  01052E  D002               	goto	l5200
  4582  010530                     l483:
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;inc\CANlib.h: 864: else
  4586                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4587  010530  010F               	movlb	15	; () banked
  4588  010532  9F01               	bcf	1,7,b	;volatile
  4589  010534                     l5200:
  4590                           
  4591                           ; BSR set to: 15
  4592                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  4593  010534  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  4594  010538  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4595  01053C  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4596  010540  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4597  010544  0E16               	movlw	22
  4598  010546  D006               	goto	u6110
  4599  010548                     u6115:
  4600  010548  0100               	movlb	0	; () banked
  4601  01054A  90D8               	bcf	status,0,c
  4602  01054C  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4603  01054E  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4604  010550  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4605  010552  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  4606  010554                     u6110:
  4607  010554  2EE8               	decfsz	wreg,f,c
  4608  010556  D7F8               	goto	u6115
  4609  010558  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4610  01055C  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4611  010560  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4612  010564  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  4616  010568  0100               	movlb	0	; () banked
  4617  01056A  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  4618  01056C  0100               	movlb	0	; () banked
  4619  01056E  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4620  010570  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4621  010572  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4622  010574  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4623                           
  4624                           ; BSR set to: 0
  4625                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4626  010576  C079  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4627  01057A                     l5206:
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;inc\CANlib.h: 870: }
  4631                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4632  01057A  0100               	movlb	0	; () banked
  4633  01057C  0578               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4634  01057E  A4D8               	btfss	status,2,c
  4635  010580  D089               	goto	l5240
  4636                           
  4637                           ; BSR set to: 0
  4638  010582  0EF7               	movlw	247
  4639  010584  0100               	movlb	0	; () banked
  4640  010586  1973               	xorwf	CANSetFilter@type& (0+255),w,b
  4641  010588  A4D8               	btfss	status,2,c
  4642  01058A  D084               	goto	l5240
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;inc\CANlib.h: 873: {
  4646                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4647  01058C  010F               	movlb	15	; () banked
  4648  01058E  8705               	bsf	5,3,b	;volatile
  4649                           
  4650                           ; BSR set to: 15
  4651                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  4652  010590  0100               	movlb	0	; () banked
  4653  010592  516F               	movf	CANSetFilter@filter& (0+255),w,b
  4654  010594  0100               	movlb	0	; () banked
  4655  010596  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4656  010598  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4657  01059A  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4658  01059C  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4662  01059E  C079  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4663                           
  4664                           ; BSR set to: 0
  4665                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  4666  0105A2  0E00               	movlw	0
  4667  0105A4  0100               	movlb	0	; () banked
  4668  0105A6  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  4669  0105A8  0100               	movlb	0	; () banked
  4670  0105AA  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4671  0105AC  0EFF               	movlw	255
  4672  0105AE  0100               	movlb	0	; () banked
  4673  0105B0  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4674  0105B2  0100               	movlb	0	; () banked
  4675  0105B4  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4676  0105B6  0E00               	movlw	0
  4677  0105B8  0100               	movlb	0	; () banked
  4678  0105BA  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4679  0105BC  0100               	movlb	0	; () banked
  4680  0105BE  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4681  0105C0  0E00               	movlw	0
  4682  0105C2  0100               	movlb	0	; () banked
  4683  0105C4  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4684  0105C6  0100               	movlb	0	; () banked
  4685  0105C8  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  4689  0105CA  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  4690  0105CE  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4691  0105D2  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4692  0105D6  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4693  0105DA  C075  F074         	movff	??_CANSetFilter+1,??_CANSetFilter
  4694  0105DE  C076  F075         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4695  0105E2  C077  F076         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4696  0105E6  0100               	movlb	0	; () banked
  4697  0105E8  6B77               	clrf	(??_CANSetFilter+3)& (0+255),b
  4698  0105EA  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4699  0105EE  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4700  0105F2  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4701  0105F6  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4702                           
  4703                           ; BSR set to: 0
  4704                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4705  0105FA  C079  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  4709  0105FE  0100               	movlb	0	; () banked
  4710  010600  A171               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4711  010602  D003               	goto	l486
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4715  010604  010F               	movlb	15	; () banked
  4716  010606  8105               	bsf	5,0,b	;volatile
  4717  010608  D002               	goto	l487
  4718  01060A                     l486:
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;inc\CANlib.h: 885: else
  4722                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4723  01060A  010F               	movlb	15	; () banked
  4724  01060C  9105               	bcf	5,0,b	;volatile
  4725  01060E                     l487:
  4726                           
  4727                           ; BSR set to: 15
  4728                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  4729  01060E  0100               	movlb	0	; () banked
  4730  010610  A371               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4731  010612  D003               	goto	l488
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4735  010614  010F               	movlb	15	; () banked
  4736  010616  8305               	bsf	5,1,b	;volatile
  4737  010618  D002               	goto	l489
  4738  01061A                     l488:
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;inc\CANlib.h: 890: else
  4742                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4743  01061A  010F               	movlb	15	; () banked
  4744  01061C  9305               	bcf	5,1,b	;volatile
  4745  01061E                     l489:
  4746                           
  4747                           ; BSR set to: 15
  4748                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  4749  01061E  0100               	movlb	0	; () banked
  4750  010620  A571               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4751  010622  D003               	goto	l490
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4755  010624  010F               	movlb	15	; () banked
  4756  010626  8B05               	bsf	5,5,b	;volatile
  4757  010628  D002               	goto	l491
  4758  01062A                     l490:
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;inc\CANlib.h: 895: else
  4762                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4763  01062A  010F               	movlb	15	; () banked
  4764  01062C  9B05               	bcf	5,5,b	;volatile
  4765  01062E                     l491:
  4766                           
  4767                           ; BSR set to: 15
  4768                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  4769  01062E  0100               	movlb	0	; () banked
  4770  010630  A771               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4771  010632  D003               	goto	l492
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4775  010634  010F               	movlb	15	; () banked
  4776  010636  8D05               	bsf	5,6,b	;volatile
  4777  010638  D002               	goto	l493
  4778  01063A                     l492:
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;inc\CANlib.h: 900: else
  4782                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4783  01063A  010F               	movlb	15	; () banked
  4784  01063C  9D05               	bcf	5,6,b	;volatile
  4785  01063E                     l493:
  4786                           
  4787                           ; BSR set to: 15
  4788                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  4789  01063E  0100               	movlb	0	; () banked
  4790  010640  A971               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4791  010642  D003               	goto	l494
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4795  010644  010F               	movlb	15	; () banked
  4796  010646  8F05               	bsf	5,7,b	;volatile
  4797  010648  D002               	goto	l5234
  4798  01064A                     l494:
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;inc\CANlib.h: 905: else
  4802                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4803  01064A  010F               	movlb	15	; () banked
  4804  01064C  9F05               	bcf	5,7,b	;volatile
  4805  01064E                     l5234:
  4806                           
  4807                           ; BSR set to: 15
  4808                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  4809  01064E  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  4810  010652  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4811  010656  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4812  01065A  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4813  01065E  0E16               	movlw	22
  4814  010660  D006               	goto	u6190
  4815  010662                     u6195:
  4816  010662  0100               	movlb	0	; () banked
  4817  010664  90D8               	bcf	status,0,c
  4818  010666  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4819  010668  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4820  01066A  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4821  01066C  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  4822  01066E                     u6190:
  4823  01066E  2EE8               	decfsz	wreg,f,c
  4824  010670  D7F8               	goto	u6195
  4825  010672  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4826  010676  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4827  01067A  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4828  01067E  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  4832  010682  0100               	movlb	0	; () banked
  4833  010684  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  4834  010686  0100               	movlb	0	; () banked
  4835  010688  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4836  01068A  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4837  01068C  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4838  01068E  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4842  010690  C079  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4843  010694                     l5240:
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;inc\CANlib.h: 911: }
  4847                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4848  010694  0E02               	movlw	2
  4849  010696  0100               	movlb	0	; () banked
  4850  010698  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4851  01069A  A4D8               	btfss	status,2,c
  4852  01069C  D089               	goto	l5274
  4853                           
  4854                           ; BSR set to: 0
  4855  01069E  0EF7               	movlw	247
  4856  0106A0  0100               	movlb	0	; () banked
  4857  0106A2  1973               	xorwf	CANSetFilter@type& (0+255),w,b
  4858  0106A4  A4D8               	btfss	status,2,c
  4859  0106A6  D084               	goto	l5274
  4860                           
  4861                           ; BSR set to: 0
  4862                           ;inc\CANlib.h: 915: {
  4863                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4864  0106A8  010F               	movlb	15	; () banked
  4865  0106AA  8709               	bsf	9,3,b	;volatile
  4866                           
  4867                           ; BSR set to: 15
  4868                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  4869  0106AC  0100               	movlb	0	; () banked
  4870  0106AE  516F               	movf	CANSetFilter@filter& (0+255),w,b
  4871  0106B0  0100               	movlb	0	; () banked
  4872  0106B2  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4873  0106B4  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4874  0106B6  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4875  0106B8  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4876                           
  4877                           ; BSR set to: 0
  4878                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4879  0106BA  C079  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  4883  0106BE  0E00               	movlw	0
  4884  0106C0  0100               	movlb	0	; () banked
  4885  0106C2  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  4886  0106C4  0100               	movlb	0	; () banked
  4887  0106C6  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  4888  0106C8  0EFF               	movlw	255
  4889  0106CA  0100               	movlb	0	; () banked
  4890  0106CC  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4891  0106CE  0100               	movlb	0	; () banked
  4892  0106D0  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4893  0106D2  0E00               	movlw	0
  4894  0106D4  0100               	movlb	0	; () banked
  4895  0106D6  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4896  0106D8  0100               	movlb	0	; () banked
  4897  0106DA  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4898  0106DC  0E00               	movlw	0
  4899  0106DE  0100               	movlb	0	; () banked
  4900  0106E0  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4901  0106E2  0100               	movlb	0	; () banked
  4902  0106E4  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  4906  0106E6  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  4907  0106EA  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4908  0106EE  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4909  0106F2  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4910  0106F6  C075  F074         	movff	??_CANSetFilter+1,??_CANSetFilter
  4911  0106FA  C076  F075         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4912  0106FE  C077  F076         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4913  010702  0100               	movlb	0	; () banked
  4914  010704  6B77               	clrf	(??_CANSetFilter+3)& (0+255),b
  4915  010706  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  4916  01070A  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4917  01070E  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4918  010712  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4922  010716  C079  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  4926  01071A  0100               	movlb	0	; () banked
  4927  01071C  A171               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4928  01071E  D003               	goto	l497
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4932  010720  010F               	movlb	15	; () banked
  4933  010722  8109               	bsf	9,0,b	;volatile
  4934  010724  D002               	goto	l498
  4935  010726                     l497:
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;inc\CANlib.h: 927: else
  4939                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4940  010726  010F               	movlb	15	; () banked
  4941  010728  9109               	bcf	9,0,b	;volatile
  4942  01072A                     l498:
  4943                           
  4944                           ; BSR set to: 15
  4945                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  4946  01072A  0100               	movlb	0	; () banked
  4947  01072C  A371               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4948  01072E  D003               	goto	l499
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4952  010730  010F               	movlb	15	; () banked
  4953  010732  8309               	bsf	9,1,b	;volatile
  4954  010734  D002               	goto	l500
  4955  010736                     l499:
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;inc\CANlib.h: 932: else
  4959                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4960  010736  010F               	movlb	15	; () banked
  4961  010738  9309               	bcf	9,1,b	;volatile
  4962  01073A                     l500:
  4963                           
  4964                           ; BSR set to: 15
  4965                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  4966  01073A  0100               	movlb	0	; () banked
  4967  01073C  A571               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4968  01073E  D003               	goto	l501
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4972  010740  010F               	movlb	15	; () banked
  4973  010742  8B09               	bsf	9,5,b	;volatile
  4974  010744  D002               	goto	l502
  4975  010746                     l501:
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;inc\CANlib.h: 937: else
  4979                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4980  010746  010F               	movlb	15	; () banked
  4981  010748  9B09               	bcf	9,5,b	;volatile
  4982  01074A                     l502:
  4983                           
  4984                           ; BSR set to: 15
  4985                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  4986  01074A  0100               	movlb	0	; () banked
  4987  01074C  A771               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4988  01074E  D003               	goto	l503
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4992  010750  010F               	movlb	15	; () banked
  4993  010752  8D09               	bsf	9,6,b	;volatile
  4994  010754  D002               	goto	l504
  4995  010756                     l503:
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;inc\CANlib.h: 942: else
  4999                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5000  010756  010F               	movlb	15	; () banked
  5001  010758  9D09               	bcf	9,6,b	;volatile
  5002  01075A                     l504:
  5003                           
  5004                           ; BSR set to: 15
  5005                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5006  01075A  0100               	movlb	0	; () banked
  5007  01075C  A971               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5008  01075E  D003               	goto	l505
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5012  010760  010F               	movlb	15	; () banked
  5013  010762  8F09               	bsf	9,7,b	;volatile
  5014  010764  D002               	goto	l5268
  5015  010766                     l505:
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;inc\CANlib.h: 947: else
  5019                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5020  010766  010F               	movlb	15	; () banked
  5021  010768  9F09               	bcf	9,7,b	;volatile
  5022  01076A                     l5268:
  5023                           
  5024                           ; BSR set to: 15
  5025                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5026  01076A  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  5027  01076E  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5028  010772  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5029  010776  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5030  01077A  0E16               	movlw	22
  5031  01077C  D006               	goto	u6270
  5032  01077E                     u6275:
  5033  01077E  0100               	movlb	0	; () banked
  5034  010780  90D8               	bcf	status,0,c
  5035  010782  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5036  010784  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5037  010786  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5038  010788  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  5039  01078A                     u6270:
  5040  01078A  2EE8               	decfsz	wreg,f,c
  5041  01078C  D7F8               	goto	u6275
  5042  01078E  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  5043  010792  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5044  010796  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5045  01079A  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5049  01079E  0100               	movlb	0	; () banked
  5050  0107A0  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  5051  0107A2  0100               	movlb	0	; () banked
  5052  0107A4  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5053  0107A6  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5054  0107A8  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5055  0107AA  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5059  0107AC  C079  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5060  0107B0                     l5274:
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;inc\CANlib.h: 953: }
  5064                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5065  0107B0  0E03               	movlw	3
  5066  0107B2  0100               	movlb	0	; () banked
  5067  0107B4  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5068  0107B6  A4D8               	btfss	status,2,c
  5069  0107B8  D089               	goto	l5308
  5070                           
  5071                           ; BSR set to: 0
  5072  0107BA  0EF7               	movlw	247
  5073  0107BC  0100               	movlb	0	; () banked
  5074  0107BE  1973               	xorwf	CANSetFilter@type& (0+255),w,b
  5075  0107C0  A4D8               	btfss	status,2,c
  5076  0107C2  D084               	goto	l5308
  5077                           
  5078                           ; BSR set to: 0
  5079                           ;inc\CANlib.h: 956: {
  5080                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5081  0107C4  010F               	movlb	15	; () banked
  5082  0107C6  870D               	bsf	13,3,b	;volatile
  5083                           
  5084                           ; BSR set to: 15
  5085                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5086  0107C8  0100               	movlb	0	; () banked
  5087  0107CA  516F               	movf	CANSetFilter@filter& (0+255),w,b
  5088  0107CC  0100               	movlb	0	; () banked
  5089  0107CE  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5090  0107D0  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5091  0107D2  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5092  0107D4  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5093                           
  5094                           ; BSR set to: 0
  5095                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5096  0107D6  C079  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5100  0107DA  0E00               	movlw	0
  5101  0107DC  0100               	movlb	0	; () banked
  5102  0107DE  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  5103  0107E0  0100               	movlb	0	; () banked
  5104  0107E2  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5105  0107E4  0EFF               	movlw	255
  5106  0107E6  0100               	movlb	0	; () banked
  5107  0107E8  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5108  0107EA  0100               	movlb	0	; () banked
  5109  0107EC  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5110  0107EE  0E00               	movlw	0
  5111  0107F0  0100               	movlb	0	; () banked
  5112  0107F2  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5113  0107F4  0100               	movlb	0	; () banked
  5114  0107F6  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5115  0107F8  0E00               	movlw	0
  5116  0107FA  0100               	movlb	0	; () banked
  5117  0107FC  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5118  0107FE  0100               	movlb	0	; () banked
  5119  010800  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5123  010802  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  5124  010806  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5125  01080A  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5126  01080E  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5127  010812  C075  F074         	movff	??_CANSetFilter+1,??_CANSetFilter
  5128  010816  C076  F075         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5129  01081A  C077  F076         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5130  01081E  0100               	movlb	0	; () banked
  5131  010820  6B77               	clrf	(??_CANSetFilter+3)& (0+255),b
  5132  010822  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  5133  010826  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5134  01082A  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5135  01082E  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5139  010832  C079  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5143  010836  0100               	movlb	0	; () banked
  5144  010838  A171               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5145  01083A  D003               	goto	l508
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5149  01083C  010F               	movlb	15	; () banked
  5150  01083E  810D               	bsf	13,0,b	;volatile
  5151  010840  D002               	goto	l509
  5152  010842                     l508:
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;inc\CANlib.h: 968: else
  5156                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5157  010842  010F               	movlb	15	; () banked
  5158  010844  910D               	bcf	13,0,b	;volatile
  5159  010846                     l509:
  5160                           
  5161                           ; BSR set to: 15
  5162                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5163  010846  0100               	movlb	0	; () banked
  5164  010848  A371               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5165  01084A  D003               	goto	l510
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5169  01084C  010F               	movlb	15	; () banked
  5170  01084E  830D               	bsf	13,1,b	;volatile
  5171  010850  D002               	goto	l511
  5172  010852                     l510:
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;inc\CANlib.h: 973: else
  5176                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5177  010852  010F               	movlb	15	; () banked
  5178  010854  930D               	bcf	13,1,b	;volatile
  5179  010856                     l511:
  5180                           
  5181                           ; BSR set to: 15
  5182                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5183  010856  0100               	movlb	0	; () banked
  5184  010858  A571               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5185  01085A  D003               	goto	l512
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5189  01085C  010F               	movlb	15	; () banked
  5190  01085E  8B0D               	bsf	13,5,b	;volatile
  5191  010860  D002               	goto	l513
  5192  010862                     l512:
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;inc\CANlib.h: 978: else
  5196                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5197  010862  010F               	movlb	15	; () banked
  5198  010864  9B0D               	bcf	13,5,b	;volatile
  5199  010866                     l513:
  5200                           
  5201                           ; BSR set to: 15
  5202                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5203  010866  0100               	movlb	0	; () banked
  5204  010868  A771               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5205  01086A  D003               	goto	l514
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5209  01086C  010F               	movlb	15	; () banked
  5210  01086E  8D0D               	bsf	13,6,b	;volatile
  5211  010870  D002               	goto	l515
  5212  010872                     l514:
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;inc\CANlib.h: 983: else
  5216                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5217  010872  010F               	movlb	15	; () banked
  5218  010874  9D0D               	bcf	13,6,b	;volatile
  5219  010876                     l515:
  5220                           
  5221                           ; BSR set to: 15
  5222                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5223  010876  0100               	movlb	0	; () banked
  5224  010878  A971               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5225  01087A  D003               	goto	l516
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5229  01087C  010F               	movlb	15	; () banked
  5230  01087E  8F0D               	bsf	13,7,b	;volatile
  5231  010880  D002               	goto	l5302
  5232  010882                     l516:
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;inc\CANlib.h: 988: else
  5236                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5237  010882  010F               	movlb	15	; () banked
  5238  010884  9F0D               	bcf	13,7,b	;volatile
  5239  010886                     l5302:
  5240                           
  5241                           ; BSR set to: 15
  5242                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5243  010886  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  5244  01088A  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5245  01088E  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5246  010892  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5247  010896  0E16               	movlw	22
  5248  010898  D006               	goto	u6350
  5249  01089A                     u6355:
  5250  01089A  0100               	movlb	0	; () banked
  5251  01089C  90D8               	bcf	status,0,c
  5252  01089E  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5253  0108A0  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5254  0108A2  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5255  0108A4  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  5256  0108A6                     u6350:
  5257  0108A6  2EE8               	decfsz	wreg,f,c
  5258  0108A8  D7F8               	goto	u6355
  5259  0108AA  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  5260  0108AE  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5261  0108B2  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5262  0108B6  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5266  0108BA  0100               	movlb	0	; () banked
  5267  0108BC  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  5268  0108BE  0100               	movlb	0	; () banked
  5269  0108C0  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5270  0108C2  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5271  0108C4  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5272  0108C6  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5276  0108C8  C079  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5277  0108CC                     l5308:
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;inc\CANlib.h: 994: }
  5281                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5282  0108CC  0E04               	movlw	4
  5283  0108CE  0100               	movlb	0	; () banked
  5284  0108D0  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5285  0108D2  A4D8               	btfss	status,2,c
  5286  0108D4  D089               	goto	l5342
  5287                           
  5288                           ; BSR set to: 0
  5289  0108D6  0EF7               	movlw	247
  5290  0108D8  0100               	movlb	0	; () banked
  5291  0108DA  1973               	xorwf	CANSetFilter@type& (0+255),w,b
  5292  0108DC  A4D8               	btfss	status,2,c
  5293  0108DE  D084               	goto	l5342
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;inc\CANlib.h: 997: {
  5297                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5298  0108E0  010F               	movlb	15	; () banked
  5299  0108E2  8711               	bsf	17,3,b	;volatile
  5300                           
  5301                           ; BSR set to: 15
  5302                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5303  0108E4  0100               	movlb	0	; () banked
  5304  0108E6  516F               	movf	CANSetFilter@filter& (0+255),w,b
  5305  0108E8  0100               	movlb	0	; () banked
  5306  0108EA  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5307  0108EC  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5308  0108EE  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5309  0108F0  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5313  0108F2  C079  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5317  0108F6  0E00               	movlw	0
  5318  0108F8  0100               	movlb	0	; () banked
  5319  0108FA  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  5320  0108FC  0100               	movlb	0	; () banked
  5321  0108FE  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5322  010900  0EFF               	movlw	255
  5323  010902  0100               	movlb	0	; () banked
  5324  010904  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5325  010906  0100               	movlb	0	; () banked
  5326  010908  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5327  01090A  0E00               	movlw	0
  5328  01090C  0100               	movlb	0	; () banked
  5329  01090E  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5330  010910  0100               	movlb	0	; () banked
  5331  010912  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5332  010914  0E00               	movlw	0
  5333  010916  0100               	movlb	0	; () banked
  5334  010918  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5335  01091A  0100               	movlb	0	; () banked
  5336  01091C  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5337                           
  5338                           ; BSR set to: 0
  5339                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5340  01091E  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  5341  010922  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5342  010926  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5343  01092A  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5344  01092E  C075  F074         	movff	??_CANSetFilter+1,??_CANSetFilter
  5345  010932  C076  F075         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5346  010936  C077  F076         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5347  01093A  0100               	movlb	0	; () banked
  5348  01093C  6B77               	clrf	(??_CANSetFilter+3)& (0+255),b
  5349  01093E  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  5350  010942  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5351  010946  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5352  01094A  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5356  01094E  C079  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5360  010952  0100               	movlb	0	; () banked
  5361  010954  A171               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5362  010956  D003               	goto	l519
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5366  010958  010F               	movlb	15	; () banked
  5367  01095A  8111               	bsf	17,0,b	;volatile
  5368  01095C  D002               	goto	l520
  5369  01095E                     l519:
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;inc\CANlib.h: 1009: else
  5373                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5374  01095E  010F               	movlb	15	; () banked
  5375  010960  9111               	bcf	17,0,b	;volatile
  5376  010962                     l520:
  5377                           
  5378                           ; BSR set to: 15
  5379                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5380  010962  0100               	movlb	0	; () banked
  5381  010964  A371               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5382  010966  D003               	goto	l521
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5386  010968  010F               	movlb	15	; () banked
  5387  01096A  8311               	bsf	17,1,b	;volatile
  5388  01096C  D002               	goto	l522
  5389  01096E                     l521:
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;inc\CANlib.h: 1014: else
  5393                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5394  01096E  010F               	movlb	15	; () banked
  5395  010970  9311               	bcf	17,1,b	;volatile
  5396  010972                     l522:
  5397                           
  5398                           ; BSR set to: 15
  5399                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5400  010972  0100               	movlb	0	; () banked
  5401  010974  A571               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5402  010976  D003               	goto	l523
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5406  010978  010F               	movlb	15	; () banked
  5407  01097A  8B11               	bsf	17,5,b	;volatile
  5408  01097C  D002               	goto	l524
  5409  01097E                     l523:
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;inc\CANlib.h: 1019: else
  5413                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5414  01097E  010F               	movlb	15	; () banked
  5415  010980  9B11               	bcf	17,5,b	;volatile
  5416  010982                     l524:
  5417                           
  5418                           ; BSR set to: 15
  5419                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5420  010982  0100               	movlb	0	; () banked
  5421  010984  A771               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5422  010986  D003               	goto	l525
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5426  010988  010F               	movlb	15	; () banked
  5427  01098A  8D11               	bsf	17,6,b	;volatile
  5428  01098C  D002               	goto	l526
  5429  01098E                     l525:
  5430                           
  5431                           ; BSR set to: 0
  5432                           ;inc\CANlib.h: 1024: else
  5433                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5434  01098E  010F               	movlb	15	; () banked
  5435  010990  9D11               	bcf	17,6,b	;volatile
  5436  010992                     l526:
  5437                           
  5438                           ; BSR set to: 15
  5439                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5440  010992  0100               	movlb	0	; () banked
  5441  010994  A971               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5442  010996  D003               	goto	l527
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5446  010998  010F               	movlb	15	; () banked
  5447  01099A  8F11               	bsf	17,7,b	;volatile
  5448  01099C  D002               	goto	l5336
  5449  01099E                     l527:
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;inc\CANlib.h: 1029: else
  5453                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5454  01099E  010F               	movlb	15	; () banked
  5455  0109A0  9F11               	bcf	17,7,b	;volatile
  5456  0109A2                     l5336:
  5457                           
  5458                           ; BSR set to: 15
  5459                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  5460  0109A2  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  5461  0109A6  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5462  0109AA  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5463  0109AE  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5464  0109B2  0E16               	movlw	22
  5465  0109B4  D006               	goto	u6430
  5466  0109B6                     u6435:
  5467  0109B6  0100               	movlb	0	; () banked
  5468  0109B8  90D8               	bcf	status,0,c
  5469  0109BA  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5470  0109BC  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5471  0109BE  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5472  0109C0  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  5473  0109C2                     u6430:
  5474  0109C2  2EE8               	decfsz	wreg,f,c
  5475  0109C4  D7F8               	goto	u6435
  5476  0109C6  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  5477  0109CA  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5478  0109CE  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5479  0109D2  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5480                           
  5481                           ; BSR set to: 0
  5482                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5483  0109D6  0100               	movlb	0	; () banked
  5484  0109D8  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  5485  0109DA  0100               	movlb	0	; () banked
  5486  0109DC  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5487  0109DE  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5488  0109E0  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5489  0109E2  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5490                           
  5491                           ; BSR set to: 0
  5492                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5493  0109E4  C079  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5494  0109E8                     l5342:
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;inc\CANlib.h: 1035: }
  5498                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5499  0109E8  0E05               	movlw	5
  5500  0109EA  0100               	movlb	0	; () banked
  5501  0109EC  1978               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5502  0109EE  A4D8               	btfss	status,2,c
  5503  0109F0  0012               	return	
  5504                           
  5505                           ; BSR set to: 0
  5506  0109F2  0EF7               	movlw	247
  5507  0109F4  0100               	movlb	0	; () banked
  5508  0109F6  1973               	xorwf	CANSetFilter@type& (0+255),w,b
  5509  0109F8  A4D8               	btfss	status,2,c
  5510  0109FA  0012               	return	
  5511                           
  5512                           ; BSR set to: 0
  5513                           ;inc\CANlib.h: 1038: {
  5514                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5515  0109FC  010F               	movlb	15	; () banked
  5516  0109FE  8715               	bsf	21,3,b	;volatile
  5517                           
  5518                           ; BSR set to: 15
  5519                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5520  010A00  0100               	movlb	0	; () banked
  5521  010A02  516F               	movf	CANSetFilter@filter& (0+255),w,b
  5522  010A04  0100               	movlb	0	; () banked
  5523  010A06  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5524  010A08  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5525  010A0A  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5526  010A0C  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5530  010A0E  C079  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5534  010A12  0E00               	movlw	0
  5535  010A14  0100               	movlb	0	; () banked
  5536  010A16  156F               	andwf	CANSetFilter@filter& (0+255),w,b
  5537  010A18  0100               	movlb	0	; () banked
  5538  010A1A  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5539  010A1C  0EFF               	movlw	255
  5540  010A1E  0100               	movlb	0	; () banked
  5541  010A20  1570               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5542  010A22  0100               	movlb	0	; () banked
  5543  010A24  6F7A               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5544  010A26  0E00               	movlw	0
  5545  010A28  0100               	movlb	0	; () banked
  5546  010A2A  1571               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5547  010A2C  0100               	movlb	0	; () banked
  5548  010A2E  6F7B               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5549  010A30  0E00               	movlw	0
  5550  010A32  0100               	movlb	0	; () banked
  5551  010A34  1572               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5552  010A36  0100               	movlb	0	; () banked
  5553  010A38  6F7C               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  5557  010A3A  C079  F074         	movff	CANSetFilter@tamp,??_CANSetFilter
  5558  010A3E  C07A  F075         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5559  010A42  C07B  F076         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5560  010A46  C07C  F077         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5561  010A4A  C075  F074         	movff	??_CANSetFilter+1,??_CANSetFilter
  5562  010A4E  C076  F075         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5563  010A52  C077  F076         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5564  010A56  0100               	movlb	0	; () banked
  5565  010A58  6B77               	clrf	(??_CANSetFilter+3)& (0+255),b
  5566  010A5A  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  5567  010A5E  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5568  010A62  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5569  010A66  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5573  010A6A  C079  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  5577  010A6E  0100               	movlb	0	; () banked
  5578  010A70  A171               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5579  010A72  D003               	goto	l530
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5583  010A74  010F               	movlb	15	; () banked
  5584  010A76  8115               	bsf	21,0,b	;volatile
  5585  010A78  D002               	goto	l531
  5586  010A7A                     l530:
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;inc\CANlib.h: 1050: else
  5590                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5591  010A7A  010F               	movlb	15	; () banked
  5592  010A7C  9115               	bcf	21,0,b	;volatile
  5593  010A7E                     l531:
  5594                           
  5595                           ; BSR set to: 15
  5596                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  5597  010A7E  0100               	movlb	0	; () banked
  5598  010A80  A371               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5599  010A82  D003               	goto	l532
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5603  010A84  010F               	movlb	15	; () banked
  5604  010A86  8315               	bsf	21,1,b	;volatile
  5605  010A88  D002               	goto	l533
  5606  010A8A                     l532:
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;inc\CANlib.h: 1055: else
  5610                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5611  010A8A  010F               	movlb	15	; () banked
  5612  010A8C  9315               	bcf	21,1,b	;volatile
  5613  010A8E                     l533:
  5614                           
  5615                           ; BSR set to: 15
  5616                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  5617  010A8E  0100               	movlb	0	; () banked
  5618  010A90  A571               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5619  010A92  D003               	goto	l534
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5623  010A94  010F               	movlb	15	; () banked
  5624  010A96  8B15               	bsf	21,5,b	;volatile
  5625  010A98  D002               	goto	l535
  5626  010A9A                     l534:
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;inc\CANlib.h: 1060: else
  5630                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5631  010A9A  010F               	movlb	15	; () banked
  5632  010A9C  9B15               	bcf	21,5,b	;volatile
  5633  010A9E                     l535:
  5634                           
  5635                           ; BSR set to: 15
  5636                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  5637  010A9E  0100               	movlb	0	; () banked
  5638  010AA0  A771               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5639  010AA2  D003               	goto	l536
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5643  010AA4  010F               	movlb	15	; () banked
  5644  010AA6  8D15               	bsf	21,6,b	;volatile
  5645  010AA8  D002               	goto	l537
  5646  010AAA                     l536:
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;inc\CANlib.h: 1065: else
  5650                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5651  010AAA  010F               	movlb	15	; () banked
  5652  010AAC  9D15               	bcf	21,6,b	;volatile
  5653  010AAE                     l537:
  5654                           
  5655                           ; BSR set to: 15
  5656                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  5657  010AAE  0100               	movlb	0	; () banked
  5658  010AB0  A971               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5659  010AB2  D003               	goto	l538
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5663  010AB4  010F               	movlb	15	; () banked
  5664  010AB6  8F15               	bsf	21,7,b	;volatile
  5665  010AB8  D002               	goto	l5370
  5666  010ABA                     l538:
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;inc\CANlib.h: 1070: else
  5670                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5671  010ABA  010F               	movlb	15	; () banked
  5672  010ABC  9F15               	bcf	21,7,b	;volatile
  5673  010ABE                     l5370:
  5674                           
  5675                           ; BSR set to: 15
  5676                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  5677  010ABE  C06F  F074         	movff	CANSetFilter@filter,??_CANSetFilter
  5678  010AC2  C070  F075         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5679  010AC6  C071  F076         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5680  010ACA  C072  F077         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5681  010ACE  0E16               	movlw	22
  5682  010AD0  D006               	goto	u6510
  5683  010AD2                     u6515:
  5684  010AD2  0100               	movlb	0	; () banked
  5685  010AD4  90D8               	bcf	status,0,c
  5686  010AD6  3377               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5687  010AD8  3376               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5688  010ADA  3375               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5689  010ADC  3374               	rrcf	??_CANSetFilter& (0+255),f,b
  5690  010ADE                     u6510:
  5691  010ADE  2EE8               	decfsz	wreg,f,c
  5692  010AE0  D7F8               	goto	u6515
  5693  010AE2  C074  F079         	movff	??_CANSetFilter,CANSetFilter@tamp
  5694  010AE6  C075  F07A         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5695  010AEA  C076  F07B         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5696  010AEE  C077  F07C         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5700  010AF2  0100               	movlb	0	; () banked
  5701  010AF4  5179               	movf	CANSetFilter@tamp& (0+255),w,b
  5702  010AF6  0100               	movlb	0	; () banked
  5703  010AF8  6F79               	movwf	CANSetFilter@tamp& (0+255),b
  5704  010AFA  6B7A               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5705  010AFC  6B7B               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5706  010AFE  6B7C               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5710  010B00  C079  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5711  010B04  0012               	return	
  5712  010B06                     __end_of_CANSetFilter:
  5713                           	opt stack 0
  5714                           tblptru	equ	0xFF8
  5715                           tblptrh	equ	0xFF7
  5716                           tblptrl	equ	0xFF6
  5717                           tablat	equ	0xFF5
  5718                           intcon	equ	0xFF2
  5719                           postinc0	equ	0xFEE
  5720                           wreg	equ	0xFE8
  5721                           status	equ	0xFD8
  5722                           
  5723 ;; *************** function _CANOperationMode *****************
  5724 ;; Defined at:
  5725 ;;		line 206 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  mode            1    wreg     enum E16881
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;  mode            1   15[BANK0 ] enum E16881
  5730 ;; Return value:  Size  Location     Type
  5731 ;;		None               void
  5732 ;; Registers used:
  5733 ;;		wreg, status,2, status,0
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5740 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5742 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5743 ;;Total ram usage:        1 bytes
  5744 ;; Hardware stack levels used:    1
  5745 ;; Hardware stack levels required when called:    3
  5746 ;; This function calls:
  5747 ;;		Nothing
  5748 ;; This function is called by:
  5749 ;;		_CANInitialize
  5750 ;; This function uses a non-reentrant model
  5751 ;;
  5752                           
  5753                           	psect	text5
  5754  015E48                     __ptext5:
  5755                           	opt stack 0
  5756  015E48                     _CANOperationMode:
  5757                           	opt stack 25
  5758                           
  5759                           ; BSR set to: 0
  5760                           ;incstack = 0
  5761                           ;CANOperationMode@mode stored from wreg
  5762  015E48  0100               	movlb	0	; () banked
  5763  015E4A  6F6F               	movwf	CANOperationMode@mode& (0+255),b
  5764                           
  5765                           ;inc\CANlib.h: 208: CANCON = mode;
  5766  015E4C  C06F  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5767  015E50                     l4966:
  5768  015E50  506E               	movf	3950,w,c	;volatile
  5769  015E52  0BE0               	andlw	224
  5770  015E54  0100               	movlb	0	; () banked
  5771  015E56  196F               	xorwf	CANOperationMode@mode& (0+255),w,b
  5772  015E58  B4D8               	btfsc	status,2,c
  5773  015E5A  0012               	return	
  5774  015E5C  D7F9               	goto	l4966
  5775  015E5E                     __end_of_CANOperationMode:
  5776                           	opt stack 0
  5777                           tblptru	equ	0xFF8
  5778                           tblptrh	equ	0xFF7
  5779                           tblptrl	equ	0xFF6
  5780                           tablat	equ	0xFF5
  5781                           intcon	equ	0xFF2
  5782                           postinc0	equ	0xFEE
  5783                           wreg	equ	0xFE8
  5784                           status	equ	0xFD8
  5785                           
  5786 ;; *************** function _PWR_Button_Polling *****************
  5787 ;; Defined at:
  5788 ;;		line 392 in file "RemoteCan.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;		None
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;		None
  5793 ;; Return value:  Size  Location     Type
  5794 ;;		None               void
  5795 ;; Registers used:
  5796 ;;		None
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5806 ;;Total ram usage:        0 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; Hardware stack levels required when called:    3
  5809 ;; This function calls:
  5810 ;;		Nothing
  5811 ;; This function is called by:
  5812 ;;		_main
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text6
  5817  015DD8                     __ptext6:
  5818                           	opt stack 0
  5819  015DD8                     _PWR_Button_Polling:
  5820                           	opt stack 27
  5821                           
  5822                           ;RemoteCan.c: 393: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;incstack = 0
  5826  015DD8  AA81               	btfss	3969,5,c	;volatile
  5827  015DDA  D002               	goto	l851
  5828  015DDC  B24D               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5829  015DDE  0012               	return	
  5830  015DE0                     l851:
  5831                           
  5832                           ;RemoteCan.c: 394: wait_low_1 = 0;
  5833  015DE0  924D               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5834                           
  5835                           ;RemoteCan.c: 395: if (PORTBbits.RB5 == 1) {
  5836  015DE2  AA81               	btfss	3969,5,c	;volatile
  5837  015DE4  0012               	return	
  5838                           
  5839                           ;RemoteCan.c: 396: power_switch = ~power_switch;
  5840  015DE6  B04D               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5841  015DE8  D002               	goto	u8390
  5842  015DEA  804D               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5843  015DEC  D001               	goto	u8405
  5844  015DEE                     u8390:
  5845  015DEE  904D               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  5846  015DF0                     u8405:
  5847                           
  5848                           ;RemoteCan.c: 397: wait_low_1 = 1;
  5849  015DF0  824D               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  5850  015DF2  0012               	return	
  5851  015DF4                     __end_of_PWR_Button_Polling:
  5852                           	opt stack 0
  5853                           tblptru	equ	0xFF8
  5854                           tblptrh	equ	0xFF7
  5855                           tblptrl	equ	0xFF6
  5856                           tablat	equ	0xFF5
  5857                           intcon	equ	0xFF2
  5858                           postinc0	equ	0xFEE
  5859                           wreg	equ	0xFE8
  5860                           status	equ	0xFD8
  5861                           
  5862 ;; *************** function _LCD_Handler *****************
  5863 ;; Defined at:
  5864 ;;		line 298 in file "RemoteCan.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;		None
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;		None
  5869 ;; Return value:  Size  Location     Type
  5870 ;;		None               void
  5871 ;; Registers used:
  5872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 0/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5882 ;;Total ram usage:        0 bytes
  5883 ;; Hardware stack levels used:    1
  5884 ;; Hardware stack levels required when called:    9
  5885 ;; This function calls:
  5886 ;;		_CANisTxReady
  5887 ;;		_CANsendMessage
  5888 ;;		_LCD_clear
  5889 ;;		_LCD_goto_line
  5890 ;;		_LCD_goto_xy
  5891 ;;		_LCD_initialize
  5892 ;;		_LCD_write_message
  5893 ;;		_LCD_write_string
  5894 ;;		___fldiv
  5895 ;;		___xxtofl
  5896 ;;		_sprintf
  5897 ;; This function is called by:
  5898 ;;		_main
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           	psect	text7
  5903  014632                     __ptext7:
  5904                           	opt stack 0
  5905  014632                     _LCD_Handler:
  5906                           	opt stack 21
  5907  014632                     l8754:
  5908  014632  ECBA  F0AE         	call	_CANisTxReady	;wreg free
  5909  014636  06E8               	decf	wreg,f,c
  5910  014638  A4D8               	btfss	status,2,c
  5911  01463A  D7FB               	goto	l8754
  5912                           
  5913                           ;RemoteCan.c: 301: CANsendMessage(0b00000000110, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  5914  01463C  0E06               	movlw	6
  5915  01463E  0100               	movlb	0	; () banked
  5916  014640  6F6F               	movwf	CANsendMessage@identifier& (0+255),b
  5917  014642  0E00               	movlw	0
  5918  014644  6F70               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5919  014646  0E00               	movlw	0
  5920  014648  6F71               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5921  01464A  0E00               	movlw	0
  5922  01464C  6F72               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5923  01464E  0EE9               	movlw	low _data_speed
  5924  014650  0100               	movlb	0	; () banked
  5925  014652  6F73               	movwf	CANsendMessage@data& (0+255),b
  5926  014654  0E00               	movlw	high _data_speed
  5927  014656  0100               	movlb	0	; () banked
  5928  014658  6F74               	movwf	(CANsendMessage@data+1)& (0+255),b
  5929  01465A  0E08               	movlw	8
  5930  01465C  0100               	movlb	0	; () banked
  5931  01465E  6F75               	movwf	CANsendMessage@dataLength& (0+255),b
  5932  014660  0EFC               	movlw	252
  5933  014662  0100               	movlb	0	; () banked
  5934  014664  6F76               	movwf	CANsendMessage@flags& (0+255),b
  5935  014666  ECCD  F089         	call	_CANsendMessage	;wreg free
  5936                           
  5937                           ;RemoteCan.c: 303: actual_speed_kmh = ((actual_speed) / 278.0);
  5938  01466A  C0DD  F06F         	movff	_actual_speed,___xxtofl@val
  5939  01466E  C0DE  F070         	movff	_actual_speed+1,___xxtofl@val+1
  5940  014672  0100               	movlb	0	; () banked
  5941  014674  6B71               	clrf	(___xxtofl@val+2)& (0+255),b
  5942  014676  6B72               	clrf	(___xxtofl@val+3)& (0+255),b
  5943  014678  0E00               	movlw	0
  5944  01467A  EC00  F0A4         	call	___xxtofl
  5945  01467E  C06F  F07D         	movff	?___xxtofl,___fldiv@b
  5946  014682  C070  F07E         	movff	?___xxtofl+1,___fldiv@b+1
  5947  014686  C071  F07F         	movff	?___xxtofl+2,___fldiv@b+2
  5948  01468A  C072  F080         	movff	?___xxtofl+3,___fldiv@b+3
  5949  01468E  0E00               	movlw	0
  5950  014690  0100               	movlb	0	; () banked
  5951  014692  6F81               	movwf	___fldiv@a& (0+255),b
  5952  014694  0E00               	movlw	0
  5953  014696  6F82               	movwf	(___fldiv@a+1)& (0+255),b
  5954  014698  0E8B               	movlw	139
  5955  01469A  6F83               	movwf	(___fldiv@a+2)& (0+255),b
  5956  01469C  0E43               	movlw	67
  5957  01469E  6F84               	movwf	(___fldiv@a+3)& (0+255),b
  5958  0146A0  ECEF  F09D         	call	___fldiv	;wreg free
  5959  0146A4  C07D  F008         	movff	?___fldiv,_actual_speed_kmh
  5960  0146A8  C07E  F009         	movff	?___fldiv+1,_actual_speed_kmh+1
  5961  0146AC  C07F  F00A         	movff	?___fldiv+2,_actual_speed_kmh+2
  5962  0146B0  C080  F00B         	movff	?___fldiv+3,_actual_speed_kmh+3
  5963                           
  5964                           ;RemoteCan.c: 304: sprintf(str, "%.3f", actual_speed_kmh);
  5965  0146B4  0E15               	movlw	low _str
  5966  0146B6  0100               	movlb	0	; () banked
  5967  0146B8  6FC1               	movwf	sprintf@sp& (0+255),b
  5968  0146BA  0E01               	movlw	high _str
  5969  0146BC  0100               	movlb	0	; () banked
  5970  0146BE  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  5971  0146C0  0EF9               	movlw	low STR_5
  5972  0146C2  0100               	movlb	0	; () banked
  5973  0146C4  6FC3               	movwf	sprintf@f& (0+255),b
  5974  0146C6  0EFF               	movlw	high STR_5
  5975  0146C8  0100               	movlb	0	; () banked
  5976  0146CA  6FC4               	movwf	(sprintf@f+1)& (0+255),b
  5977  0146CC  C008  F0C5         	movff	_actual_speed_kmh,?_sprintf+4
  5978  0146D0  C009  F0C6         	movff	_actual_speed_kmh+1,?_sprintf+5
  5979  0146D4  C00A  F0C7         	movff	_actual_speed_kmh+2,?_sprintf+6
  5980  0146D8  C00B  F0C8         	movff	_actual_speed_kmh+3,?_sprintf+7
  5981  0146DC  EC83  F085         	call	_sprintf	;wreg free
  5982                           
  5983                           ;RemoteCan.c: 305: str[11] = '\0';
  5984  0146E0  0E00               	movlw	0
  5985  0146E2  0101               	movlb	1	; () banked
  5986  0146E4  6F20               	movwf	(_str+11)& (0+255),b
  5987                           
  5988                           ; BSR set to: 1
  5989                           ;RemoteCan.c: 307: if (display_refresh == 1) {
  5990  0146E6  AC4C               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  5991  0146E8  D032               	goto	l8780
  5992                           
  5993                           ; BSR set to: 1
  5994                           ;RemoteCan.c: 308: LCD_initialize(16);
  5995  0146EA  0E10               	movlw	16
  5996  0146EC  EC25  F0A8         	call	_LCD_initialize
  5997                           
  5998                           ;RemoteCan.c: 309: LCD_clear();
  5999  0146F0  EC79  F0AE         	call	_LCD_clear	;wreg free
  6000                           
  6001                           ;RemoteCan.c: 310: LCD_goto_line(1);
  6002  0146F4  0E01               	movlw	1
  6003  0146F6  EC10  F0AA         	call	_LCD_goto_line
  6004                           
  6005                           ;RemoteCan.c: 311: LCD_write_message("=== VEHICLE DATA ===");
  6006  0146FA  0E89               	movlw	low STR_6
  6007  0146FC  0100               	movlb	0	; () banked
  6008  0146FE  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  6009  014700  0EFF               	movlw	high STR_6
  6010  014702  0100               	movlb	0	; () banked
  6011  014704  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6012  014706  EC46  F0AE         	call	_LCD_write_message	;wreg free
  6013                           
  6014                           ;RemoteCan.c: 312: LCD_goto_line(2);
  6015  01470A  0E02               	movlw	2
  6016  01470C  EC10  F0AA         	call	_LCD_goto_line
  6017                           
  6018                           ;RemoteCan.c: 313: LCD_write_message("Direction: ");
  6019  014710  0EC4               	movlw	low STR_7
  6020  014712  0100               	movlb	0	; () banked
  6021  014714  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  6022  014716  0EFF               	movlw	high STR_7
  6023  014718  0100               	movlb	0	; () banked
  6024  01471A  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6025  01471C  EC46  F0AE         	call	_LCD_write_message	;wreg free
  6026                           
  6027                           ;RemoteCan.c: 314: LCD_goto_line(3);
  6028  014720  0E03               	movlw	3
  6029  014722  EC10  F0AA         	call	_LCD_goto_line
  6030                           
  6031                           ;RemoteCan.c: 315: LCD_write_message("Speed: x.xx Km/h");
  6032  014726  0EB3               	movlw	low STR_8
  6033  014728  0100               	movlb	0	; () banked
  6034  01472A  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  6035  01472C  0EFF               	movlw	high STR_8
  6036  01472E  0100               	movlb	0	; () banked
  6037  014730  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6038  014732  EC46  F0AE         	call	_LCD_write_message	;wreg free
  6039                           
  6040                           ;RemoteCan.c: 316: LCD_goto_line(4);
  6041  014736  0E04               	movlw	4
  6042  014738  EC10  F0AA         	call	_LCD_goto_line
  6043                           
  6044                           ;RemoteCan.c: 317: LCD_write_message("====================");
  6045  01473C  0E9E               	movlw	low STR_1
  6046  01473E  0100               	movlb	0	; () banked
  6047  014740  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  6048  014742  0EFF               	movlw	high STR_1
  6049  014744  0100               	movlb	0	; () banked
  6050  014746  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6051  014748  EC46  F0AE         	call	_LCD_write_message	;wreg free
  6052                           
  6053                           ;RemoteCan.c: 318: display_refresh = 0;
  6054  01474C  9C4C               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6055  01474E                     l8780:
  6056                           
  6057                           ;RemoteCan.c: 319: }
  6058                           ;RemoteCan.c: 323: LCD_goto_xy(12, 2);
  6059  01474E  0E02               	movlw	2
  6060  014750  0100               	movlb	0	; () banked
  6061  014752  6F7E               	movwf	LCD_goto_xy@y& (0+255),b
  6062  014754  0E0C               	movlw	12
  6063  014756  ECFA  F0AE         	call	_LCD_goto_xy
  6064                           
  6065                           ;RemoteCan.c: 324: if (switch_position != 0) {
  6066  01475A  0100               	movlb	0	; () banked
  6067  01475C  51E5               	movf	_switch_position& (0+255),w,b	;volatile
  6068  01475E  B4D8               	btfsc	status,2,c
  6069  014760  D016               	goto	l8790
  6070                           
  6071                           ; BSR set to: 0
  6072                           ;RemoteCan.c: 325: if (dir == 1) {
  6073  014762  0100               	movlb	0	; () banked
  6074  014764  05E3               	decf	_dir& (0+255),w,b	;volatile
  6075  014766  A4D8               	btfss	status,2,c
  6076  014768  D009               	goto	l8788
  6077                           
  6078                           ; BSR set to: 0
  6079                           ;RemoteCan.c: 327: LCD_write_message("FWD ");
  6080  01476A  0EEF               	movlw	low STR_10
  6081  01476C  0100               	movlb	0	; () banked
  6082  01476E  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  6083  014770  0EFF               	movlw	high STR_10
  6084  014772  0100               	movlb	0	; () banked
  6085  014774  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6086  014776  EC46  F0AE         	call	_LCD_write_message	;wreg free
  6087                           
  6088                           ;RemoteCan.c: 328: } else {
  6089  01477A  D011               	goto	l8792
  6090  01477C                     l8788:
  6091                           
  6092                           ;RemoteCan.c: 330: LCD_write_message("BKWD");
  6093  01477C  0EF4               	movlw	low STR_11
  6094  01477E  0100               	movlb	0	; () banked
  6095  014780  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  6096  014782  0EFF               	movlw	high STR_11
  6097  014784  0100               	movlb	0	; () banked
  6098  014786  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6099  014788  EC46  F0AE         	call	_LCD_write_message	;wreg free
  6100                           
  6101                           ;RemoteCan.c: 331: }
  6102                           ;RemoteCan.c: 332: } else {
  6103  01478C  D008               	goto	l8792
  6104  01478E                     l8790:
  6105                           
  6106                           ;RemoteCan.c: 334: LCD_write_message("P   ");
  6107  01478E  0EEA               	movlw	low STR_12
  6108  014790  0100               	movlb	0	; () banked
  6109  014792  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  6110  014794  0EFF               	movlw	high STR_12
  6111  014796  0100               	movlb	0	; () banked
  6112  014798  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6113  01479A  EC46  F0AE         	call	_LCD_write_message	;wreg free
  6114  01479E                     l8792:
  6115                           
  6116                           ;RemoteCan.c: 335: }
  6117                           ;RemoteCan.c: 336: if (parking_state == 1) {
  6118  01479E  0100               	movlb	0	; () banked
  6119  0147A0  05E4               	decf	_parking_state& (0+255),w,b	;volatile
  6120  0147A2  A4D8               	btfss	status,2,c
  6121  0147A4  D009               	goto	l8796
  6122                           
  6123                           ; BSR set to: 0
  6124                           ;RemoteCan.c: 338: LCD_write_message(" SRCH");
  6125  0147A6  0EDE               	movlw	low STR_13
  6126  0147A8  0100               	movlb	0	; () banked
  6127  0147AA  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  6128  0147AC  0EFF               	movlw	high STR_13
  6129  0147AE  0100               	movlb	0	; () banked
  6130  0147B0  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6131  0147B2  EC46  F0AE         	call	_LCD_write_message	;wreg free
  6132                           
  6133                           ;RemoteCan.c: 339: } else {
  6134  0147B6  D008               	goto	l8798
  6135  0147B8                     l8796:
  6136                           
  6137                           ;RemoteCan.c: 340: LCD_write_message("     ");
  6138  0147B8  0ED8               	movlw	low STR_14
  6139  0147BA  0100               	movlb	0	; () banked
  6140  0147BC  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  6141  0147BE  0EFF               	movlw	high STR_14
  6142  0147C0  0100               	movlb	0	; () banked
  6143  0147C2  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6144  0147C4  EC46  F0AE         	call	_LCD_write_message	;wreg free
  6145  0147C8                     l8798:
  6146                           
  6147                           ;RemoteCan.c: 341: }
  6148                           ;RemoteCan.c: 342: if (parking_state == 2) {
  6149  0147C8  0E02               	movlw	2
  6150  0147CA  0100               	movlb	0	; () banked
  6151  0147CC  19E4               	xorwf	_parking_state& (0+255),w,b	;volatile
  6152  0147CE  A4D8               	btfss	status,2,c
  6153  0147D0  D008               	goto	l8802
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;RemoteCan.c: 344: LCD_write_message(" PARK");
  6157  0147D2  0EE4               	movlw	low STR_15
  6158  0147D4  0100               	movlb	0	; () banked
  6159  0147D6  6F80               	movwf	LCD_write_message@buffer& (0+255),b
  6160  0147D8  0EFF               	movlw	high STR_15
  6161  0147DA  0100               	movlb	0	; () banked
  6162  0147DC  6F81               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6163  0147DE  EC46  F0AE         	call	_LCD_write_message	;wreg free
  6164  0147E2                     l8802:
  6165                           
  6166                           ;RemoteCan.c: 345: }
  6167                           ;RemoteCan.c: 349: LCD_goto_xy(8, 3);
  6168  0147E2  0E03               	movlw	3
  6169  0147E4  0100               	movlb	0	; () banked
  6170  0147E6  6F7E               	movwf	LCD_goto_xy@y& (0+255),b
  6171  0147E8  0E08               	movlw	8
  6172  0147EA  ECFA  F0AE         	call	_LCD_goto_xy
  6173                           
  6174                           ;RemoteCan.c: 351: LCD_write_string(str);
  6175  0147EE  0E15               	movlw	low _str
  6176  0147F0  0100               	movlb	0	; () banked
  6177  0147F2  6F80               	movwf	LCD_write_string@buffer& (0+255),b
  6178  0147F4  0E01               	movlw	high _str
  6179  0147F6  0100               	movlb	0	; () banked
  6180  0147F8  6F81               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  6181  0147FA  ECA7  F0AE         	call	_LCD_write_string	;wreg free
  6182  0147FE  0012               	return		;funcret
  6183  014800                     __end_of_LCD_Handler:
  6184                           	opt stack 0
  6185                           tblptru	equ	0xFF8
  6186                           tblptrh	equ	0xFF7
  6187                           tblptrl	equ	0xFF6
  6188                           tablat	equ	0xFF5
  6189                           intcon	equ	0xFF2
  6190                           postinc0	equ	0xFEE
  6191                           wreg	equ	0xFE8
  6192                           status	equ	0xFD8
  6193                           
  6194 ;; *************** function _sprintf *****************
  6195 ;; Defined at:
  6196 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;  sp              2   97[BANK0 ] PTR unsigned char 
  6199 ;;		 -> str(12), 
  6200 ;;  f               2   99[BANK0 ] PTR const unsigned char 
  6201 ;;		 -> STR_5(5), 
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  6204 ;;  tmpval          4   14[BANK1 ] struct .
  6205 ;;  val             4    8[BANK1 ] unsigned long 
  6206 ;;  cp              3    0        PTR const unsigned char 
  6207 ;;  prec            2   18[BANK1 ] int 
  6208 ;;  exp             2   12[BANK1 ] int 
  6209 ;;  flag            2    6[BANK1 ] unsigned short 
  6210 ;;  ap              2    4[BANK1 ] PTR void [1]
  6211 ;;		 -> ?_sprintf(2), 
  6212 ;;  len             2    0        unsigned int 
  6213 ;;  width           2    0        int 
  6214 ;;  c               1   24[BANK1 ] char 
  6215 ;;  d               1    0        unsigned char 
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  2   97[BANK0 ] int 
  6218 ;; Registers used:
  6219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 0/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6225 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6226 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6227 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6228 ;;      Totals:         0      10      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6229 ;;Total ram usage:       35 bytes
  6230 ;; Hardware stack levels used:    1
  6231 ;; Hardware stack levels required when called:    5
  6232 ;; This function calls:
  6233 ;;		___awdiv
  6234 ;;		___fladd
  6235 ;;		___flge
  6236 ;;		___flmul
  6237 ;;		___flneg
  6238 ;;		___flsub
  6239 ;;		___fltol
  6240 ;;		___lldiv
  6241 ;;		___llmod
  6242 ;;		___wmul
  6243 ;;		___xxtofl
  6244 ;;		__div_to_l_
  6245 ;;		__tdiv_to_l_
  6246 ;;		_fround
  6247 ;;		_isdigit
  6248 ;;		_scale
  6249 ;; This function is called by:
  6250 ;;		_LCD_Handler
  6251 ;; This function uses a non-reentrant model
  6252 ;;
  6253                           
  6254                           	psect	text8
  6255  010B06                     __ptext8:
  6256                           	opt stack 0
  6257  010B06                     _sprintf:
  6258                           	opt stack 24
  6259                           
  6260                           ;doprnt.c: 494: va_list ap;
  6261                           ;doprnt.c: 499: signed char c;
  6262                           ;doprnt.c: 501: int width;
  6263                           ;doprnt.c: 504: int prec;
  6264                           ;doprnt.c: 508: unsigned short flag;
  6265                           ;doprnt.c: 515: char d;
  6266                           ;doprnt.c: 516: double fval;
  6267                           ;doprnt.c: 517: int exp;
  6268                           ;doprnt.c: 523: union {
  6269                           ;doprnt.c: 524: unsigned long vd;
  6270                           ;doprnt.c: 525: double integ;
  6271                           ;doprnt.c: 526: } tmpval;
  6272                           ;doprnt.c: 528: unsigned long val;
  6273                           ;doprnt.c: 529: unsigned len;
  6274                           ;doprnt.c: 530: const char * cp;
  6275                           ;doprnt.c: 533: *ap = __va_start();
  6276                           
  6277                           ;incstack = 0
  6278  010B06  0EC5               	movlw	low (?_sprintf+4)
  6279  010B08  0101               	movlb	1	; () banked
  6280  010B0A  6F2D               	movwf	sprintf@ap& (0+255),b
  6281  010B0C  0E00               	movlw	high (?_sprintf+4)
  6282  010B0E  0101               	movlb	1	; () banked
  6283  010B10  6F2E               	movwf	(sprintf@ap+1)& (0+255),b
  6284                           
  6285                           ;doprnt.c: 536: while(c = *f++) {
  6286  010B12  EFB5  F089         	goto	l8526
  6287  010B16                     l8328:
  6288                           
  6289                           ; BSR set to: 1
  6290                           ;doprnt.c: 538: if(c != '%')
  6291  010B16  0E25               	movlw	37
  6292  010B18  0101               	movlb	1	; () banked
  6293  010B1A  1941               	xorwf	sprintf@c& (0+255),w,b
  6294  010B1C  B4D8               	btfsc	status,2,c
  6295  010B1E  D008               	goto	l8334
  6296                           
  6297                           ; BSR set to: 1
  6298                           ;doprnt.c: 540: {
  6299                           ;doprnt.c: 541: ((*sp++ = (c)));
  6300  010B20  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  6301  010B24  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  6302  010B28  C141  FFDF         	movff	sprintf@c,indf2
  6303  010B2C  EFB2  F089         	goto	l8524
  6304  010B30                     l8334:
  6305                           
  6306                           ;doprnt.c: 543: }
  6307                           ;doprnt.c: 548: flag = 0;
  6308  010B30  0E00               	movlw	0
  6309  010B32  0101               	movlb	1	; () banked
  6310  010B34  6F30               	movwf	(sprintf@flag+1)& (0+255),b
  6311  010B36  0E00               	movlw	0
  6312  010B38  6F2F               	movwf	sprintf@flag& (0+255),b
  6313                           
  6314                           ; BSR set to: 1
  6315                           ;doprnt.c: 611: if(*f == '.') {
  6316  010B3A  C0C3  FFF6         	movff	sprintf@f,tblptrl
  6317  010B3E  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  6318  010B42                     	if	0	;tblptru may be non-zero
  6319  010B42                     	endif
  6320  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6321  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  6322  010B44  6EF8               	movwf	tblptru,c
  6323  010B46                     	endif
  6324  010B46  0008               	tblrd		*
  6325  010B48  50F5               	movf	tablat,w,c
  6326  010B4A  0A2E               	xorlw	46
  6327  010B4C  A4D8               	btfss	status,2,c
  6328  010B4E  D03D               	goto	l8348
  6329                           
  6330                           ; BSR set to: 1
  6331                           ;doprnt.c: 612: flag |= 0x4000;
  6332  010B50  0101               	movlb	1	; () banked
  6333  010B52  8D30               	bsf	(sprintf@flag+1)& (0+255),6,b
  6334                           
  6335                           ;doprnt.c: 613: f++;
  6336  010B54  0100               	movlb	0	; () banked
  6337  010B56  4BC3               	infsnz	sprintf@f& (0+255),f,b
  6338  010B58  2BC4               	incf	(sprintf@f+1)& (0+255),f,b
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;doprnt.c: 620: {
  6342                           ;doprnt.c: 621: prec = 0;
  6343  010B5A  0E00               	movlw	0
  6344  010B5C  0101               	movlb	1	; () banked
  6345  010B5E  6F3C               	movwf	(sprintf@prec+1)& (0+255),b
  6346  010B60  0E00               	movlw	0
  6347  010B62  6F3B               	movwf	sprintf@prec& (0+255),b
  6348                           
  6349                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6350  010B64  D025               	goto	l8346
  6351  010B66                     l8342:
  6352                           
  6353                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6354  010B66  C13B  F06F         	movff	sprintf@prec,___wmul@multiplier
  6355  010B6A  C13C  F070         	movff	sprintf@prec+1,___wmul@multiplier+1
  6356  010B6E  0E00               	movlw	0
  6357  010B70  0100               	movlb	0	; () banked
  6358  010B72  6F72               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6359  010B74  0E0A               	movlw	10
  6360  010B76  6F71               	movwf	___wmul@multiplicand& (0+255),b
  6361  010B78  EC2B  F0AE         	call	___wmul	;wreg free
  6362  010B7C  C0C3  FFF6         	movff	sprintf@f,tblptrl
  6363  010B80  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  6364  010B84                     	if	0	;tblptru may be non-zero
  6365  010B84                     	endif
  6366  010B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6367  010B84  0E00               	movlw	low (__mediumconst shr (0+16))
  6368  010B86  6EF8               	movwf	tblptru,c
  6369  010B88                     	endif
  6370  010B88  0008               	tblrd		*
  6371  010B8A  50F5               	movf	tablat,w,c
  6372  010B8C  0100               	movlb	0	; () banked
  6373  010B8E  276F               	addwf	?___wmul& (0+255),f,b
  6374  010B90  0E00               	movlw	0
  6375  010B92  0100               	movlb	0	; () banked
  6376  010B94  2370               	addwfc	(?___wmul+1)& (0+255),f,b
  6377  010B96  0ED0               	movlw	208
  6378  010B98  0100               	movlb	0	; () banked
  6379  010B9A  256F               	addwf	?___wmul& (0+255),w,b
  6380  010B9C  0101               	movlb	1	; () banked
  6381  010B9E  6F3B               	movwf	sprintf@prec& (0+255),b
  6382  010BA0  0EFF               	movlw	255
  6383  010BA2  0100               	movlb	0	; () banked
  6384  010BA4  2170               	addwfc	(?___wmul+1)& (0+255),w,b
  6385  010BA6  0101               	movlb	1	; () banked
  6386  010BA8  6F3C               	movwf	(sprintf@prec+1)& (0+255),b
  6387                           
  6388                           ; BSR set to: 1
  6389  010BAA  0100               	movlb	0	; () banked
  6390  010BAC  4BC3               	infsnz	sprintf@f& (0+255),f,b
  6391  010BAE  2BC4               	incf	(sprintf@f+1)& (0+255),f,b
  6392  010BB0                     l8346:
  6393  010BB0  C0C3  FFF6         	movff	sprintf@f,tblptrl
  6394  010BB4  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  6395  010BB8                     	if	0	;tblptru may be non-zero
  6396  010BB8                     	endif
  6397  010BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6398  010BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  6399  010BBA  6EF8               	movwf	tblptru,c
  6400  010BBC                     	endif
  6401  010BBC  0008               	tblrd		*
  6402  010BBE  50F5               	movf	tablat,w,c
  6403  010BC0  EC92  F0AE         	call	_isdigit
  6404  010BC4  A0D8               	btfss	status,0,c
  6405  010BC6  D00C               	goto	l8356
  6406  010BC8  D7CE               	goto	l8342
  6407  010BCA                     l8348:
  6408                           
  6409                           ;doprnt.c: 626: prec = 0;
  6410  010BCA  0E00               	movlw	0
  6411  010BCC  0101               	movlb	1	; () banked
  6412  010BCE  6F3C               	movwf	(sprintf@prec+1)& (0+255),b
  6413  010BD0  0E00               	movlw	0
  6414  010BD2  6F3B               	movwf	sprintf@prec& (0+255),b
  6415                           
  6416                           ; BSR set to: 1
  6417                           ;doprnt.c: 628: flag |= 0x1000;
  6418  010BD4  0101               	movlb	1	; () banked
  6419  010BD6  8930               	bsf	(sprintf@flag+1)& (0+255),4,b
  6420                           
  6421                           ; BSR set to: 1
  6422                           ;doprnt.c: 630: }
  6423                           ;doprnt.c: 635: switch(c = *f++) {
  6424  010BD8  D003               	goto	l8356
  6425  010BDA                     l8352:
  6426                           
  6427                           ; BSR set to: 1
  6428                           ;doprnt.c: 663: flag |= 0x400;
  6429  010BDA  0101               	movlb	1	; () banked
  6430  010BDC  8530               	bsf	(sprintf@flag+1)& (0+255),2,b
  6431                           
  6432                           ;doprnt.c: 664: break;
  6433  010BDE  D015               	goto	l8358
  6434  010BE0                     l8356:
  6435  010BE0  C0C3  FFF6         	movff	sprintf@f,tblptrl
  6436  010BE4  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  6437  010BE8  0100               	movlb	0	; () banked
  6438  010BEA  4BC3               	infsnz	sprintf@f& (0+255),f,b
  6439  010BEC  2BC4               	incf	(sprintf@f+1)& (0+255),f,b
  6440  010BEE                     	if	0	;tblptru may be non-zero
  6441  010BEE                     	endif
  6442  010BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6443  010BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  6444  010BF0  6EF8               	movwf	tblptru,c
  6445  010BF2                     	endif
  6446  010BF2  0008               	tblrd		*
  6447  010BF4  CFF5 F141          	movff	tablat,sprintf@c
  6448  010BF8  0101               	movlb	1	; () banked
  6449  010BFA  5141               	movf	sprintf@c& (0+255),w,b
  6450                           
  6451                           ; Switch size 1, requested type "space"
  6452                           ; Number of cases is 2, Range of values is 0 to 102
  6453                           ; switch strategies available:
  6454                           ; Name         Instructions Cycles
  6455                           ; simple_byte            7     4 (average)
  6456                           ;	Chosen strategy is simple_byte
  6457  010BFC  0A00               	xorlw	0	; case 0
  6458  010BFE  B4D8               	btfsc	status,2,c
  6459  010C00  D3C5               	goto	l8528
  6460  010C02  0A66               	xorlw	102	; case 102
  6461  010C04  B4D8               	btfsc	status,2,c
  6462  010C06  D7E9               	goto	l8352
  6463  010C08  D3B0               	goto	l8526
  6464  010C0A                     l8358:
  6465                           
  6466                           ; BSR set to: 1
  6467                           ;doprnt.c: 825: if(flag & (0x700)) {
  6468  010C0A  0E07               	movlw	7
  6469  010C0C  0101               	movlb	1	; () banked
  6470  010C0E  1530               	andwf	(sprintf@flag+1)& (0+255),w,b
  6471  010C10  B4D8               	btfsc	status,2,c
  6472  010C12  D353               	goto	l8506
  6473                           
  6474                           ; BSR set to: 1
  6475                           ;doprnt.c: 827: if(flag & 0x1000)
  6476  010C14  0101               	movlb	1	; () banked
  6477  010C16  A930               	btfss	(sprintf@flag+1)& (0+255),4,b
  6478  010C18  D005               	goto	l8364
  6479                           
  6480                           ; BSR set to: 1
  6481                           ;doprnt.c: 829: prec = 6;
  6482  010C1A  0E00               	movlw	0
  6483  010C1C  0101               	movlb	1	; () banked
  6484  010C1E  6F3C               	movwf	(sprintf@prec+1)& (0+255),b
  6485  010C20  0E06               	movlw	6
  6486  010C22  6F3B               	movwf	sprintf@prec& (0+255),b
  6487  010C24                     l8364:
  6488                           
  6489                           ; BSR set to: 1
  6490                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6491  010C24  C12D  FFD9         	movff	sprintf@ap,fsr2l
  6492  010C28  C12E  FFDA         	movff	sprintf@ap+1,fsr2h
  6493  010C2C  CFDE F13D          	movff	postinc2,sprintf@fval
  6494  010C30  CFDE F13E          	movff	postinc2,sprintf@fval+1
  6495  010C34  CFDE F13F          	movff	postinc2,sprintf@fval+2
  6496  010C38  CFDE F140          	movff	postinc2,sprintf@fval+3
  6497                           
  6498                           ; BSR set to: 1
  6499  010C3C  0E04               	movlw	4
  6500  010C3E  0101               	movlb	1	; () banked
  6501  010C40  272D               	addwf	sprintf@ap& (0+255),f,b
  6502  010C42  0E00               	movlw	0
  6503  010C44  232E               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6504                           
  6505                           ; BSR set to: 1
  6506                           ;doprnt.c: 831: if(fval < 0.0) {
  6507  010C46  0101               	movlb	1	; () banked
  6508  010C48  AF40               	btfss	(sprintf@fval+3)& (0+255),7,b
  6509  010C4A  D015               	goto	l8374
  6510                           
  6511                           ; BSR set to: 1
  6512                           ;doprnt.c: 832: fval = -fval;
  6513  010C4C  C13D  F096         	movff	sprintf@fval,___flneg@f1
  6514  010C50  C13E  F097         	movff	sprintf@fval+1,___flneg@f1+1
  6515  010C54  C13F  F098         	movff	sprintf@fval+2,___flneg@f1+2
  6516  010C58  C140  F099         	movff	sprintf@fval+3,___flneg@f1+3
  6517  010C5C  EC0F  F0AE         	call	___flneg	;wreg free
  6518  010C60  C096  F13D         	movff	?___flneg,sprintf@fval
  6519  010C64  C097  F13E         	movff	?___flneg+1,sprintf@fval+1
  6520  010C68  C098  F13F         	movff	?___flneg+2,sprintf@fval+2
  6521  010C6C  C099  F140         	movff	?___flneg+3,sprintf@fval+3
  6522                           
  6523                           ;doprnt.c: 833: flag |= 0x03;
  6524  010C70  0E03               	movlw	3
  6525  010C72  0101               	movlb	1	; () banked
  6526  010C74  132F               	iorwf	sprintf@flag& (0+255),f,b
  6527  010C76                     l8374:
  6528                           
  6529                           ; BSR set to: 1
  6530                           ;doprnt.c: 834: }
  6531                           ;doprnt.c: 835: exp = 0;
  6532  010C76  0E00               	movlw	0
  6533  010C78  0101               	movlb	1	; () banked
  6534  010C7A  6F36               	movwf	(sprintf@exp+1)& (0+255),b
  6535  010C7C  0E00               	movlw	0
  6536  010C7E  6F35               	movwf	sprintf@exp& (0+255),b
  6537                           
  6538                           ; BSR set to: 1
  6539                           ;doprnt.c: 836: if( fval!=0) {
  6540  010C80  0101               	movlb	1	; () banked
  6541  010C82  513D               	movf	sprintf@fval& (0+255),w,b
  6542  010C84  0101               	movlb	1	; () banked
  6543  010C86  113E               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6544  010C88  0101               	movlb	1	; () banked
  6545  010C8A  113F               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6546  010C8C  0101               	movlb	1	; () banked
  6547  010C8E  1140               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6548  010C90  B4D8               	btfsc	status,2,c
  6549  010C92  D08E               	goto	l8402
  6550                           
  6551                           ; BSR set to: 1
  6552                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  6553  010C94  0101               	movlb	1	; () banked
  6554  010C96  353F               	rlcf	(sprintf@fval+2)& (0+255),w,b
  6555  010C98  3540               	rlcf	(sprintf@fval+3)& (0+255),w,b
  6556  010C9A  0F82               	addlw	130
  6557  010C9C  0101               	movlb	1	; () banked
  6558  010C9E  6F35               	movwf	sprintf@exp& (0+255),b
  6559  010CA0  0101               	movlb	1	; () banked
  6560  010CA2  6B36               	clrf	(sprintf@exp+1)& (0+255),b
  6561  010CA4  0EFF               	movlw	255
  6562  010CA6  2336               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6563                           
  6564                           ; BSR set to: 1
  6565                           ;doprnt.c: 838: exp--;
  6566  010CA8  0101               	movlb	1	; () banked
  6567  010CAA  0735               	decf	sprintf@exp& (0+255),f,b
  6568  010CAC  A0D8               	btfss	status,0,c
  6569  010CAE  0736               	decf	(sprintf@exp+1)& (0+255),f,b
  6570                           
  6571                           ; BSR set to: 1
  6572                           ;doprnt.c: 839: exp *= 3;
  6573  010CB0  C135  F06F         	movff	sprintf@exp,___wmul@multiplier
  6574  010CB4  C136  F070         	movff	sprintf@exp+1,___wmul@multiplier+1
  6575  010CB8  0E00               	movlw	0
  6576  010CBA  0100               	movlb	0	; () banked
  6577  010CBC  6F72               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6578  010CBE  0E03               	movlw	3
  6579  010CC0  6F71               	movwf	___wmul@multiplicand& (0+255),b
  6580  010CC2  EC2B  F0AE         	call	___wmul	;wreg free
  6581  010CC6  C06F  F135         	movff	?___wmul,sprintf@exp
  6582  010CCA  C070  F136         	movff	?___wmul+1,sprintf@exp+1
  6583                           
  6584                           ;doprnt.c: 840: exp /= 10;
  6585  010CCE  C135  F075         	movff	sprintf@exp,___awdiv@dividend
  6586  010CD2  C136  F076         	movff	sprintf@exp+1,___awdiv@dividend+1
  6587  010CD6  0E00               	movlw	0
  6588  010CD8  0100               	movlb	0	; () banked
  6589  010CDA  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  6590  010CDC  0E0A               	movlw	10
  6591  010CDE  6F77               	movwf	___awdiv@divisor& (0+255),b
  6592  010CE0  ECE7  F0AA         	call	___awdiv	;wreg free
  6593  010CE4  C075  F135         	movff	?___awdiv,sprintf@exp
  6594  010CE8  C076  F136         	movff	?___awdiv+1,sprintf@exp+1
  6595                           
  6596                           ;doprnt.c: 841: if(exp < 0)
  6597  010CEC  0101               	movlb	1	; () banked
  6598  010CEE  AF36               	btfss	(sprintf@exp+1)& (0+255),7,b
  6599  010CF0  D004               	goto	l8390
  6600                           
  6601                           ; BSR set to: 1
  6602                           ;doprnt.c: 842: exp--;
  6603  010CF2  0101               	movlb	1	; () banked
  6604  010CF4  0735               	decf	sprintf@exp& (0+255),f,b
  6605  010CF6  A0D8               	btfss	status,0,c
  6606  010CF8  0736               	decf	(sprintf@exp+1)& (0+255),f,b
  6607  010CFA                     l8390:
  6608                           
  6609                           ; BSR set to: 1
  6610                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6611  010CFA  0101               	movlb	1	; () banked
  6612  010CFC  5135               	movf	sprintf@exp& (0+255),w,b
  6613  010CFE  0800               	sublw	0
  6614  010D00  EC35  F094         	call	_scale
  6615  010D04  C096  F137         	movff	?_scale,sprintf@tmpval
  6616  010D08  C097  F138         	movff	?_scale+1,sprintf@tmpval+1
  6617  010D0C  C098  F139         	movff	?_scale+2,sprintf@tmpval+2
  6618  010D10  C099  F13A         	movff	?_scale+3,sprintf@tmpval+3
  6619                           
  6620                           ;doprnt.c: 847: tmpval.integ *= fval;
  6621  010D14  C137  F07D         	movff	sprintf@tmpval,___flmul@b
  6622  010D18  C138  F07E         	movff	sprintf@tmpval+1,___flmul@b+1
  6623  010D1C  C139  F07F         	movff	sprintf@tmpval+2,___flmul@b+2
  6624  010D20  C13A  F080         	movff	sprintf@tmpval+3,___flmul@b+3
  6625  010D24  C13D  F081         	movff	sprintf@fval,___flmul@a
  6626  010D28  C13E  F082         	movff	sprintf@fval+1,___flmul@a+1
  6627  010D2C  C13F  F083         	movff	sprintf@fval+2,___flmul@a+2
  6628  010D30  C140  F084         	movff	sprintf@fval+3,___flmul@a+3
  6629  010D34  EC9C  F09B         	call	___flmul	;wreg free
  6630  010D38  C07D  F137         	movff	?___flmul,sprintf@tmpval
  6631  010D3C  C07E  F138         	movff	?___flmul+1,sprintf@tmpval+1
  6632  010D40  C07F  F139         	movff	?___flmul+2,sprintf@tmpval+2
  6633  010D44  C080  F13A         	movff	?___flmul+3,sprintf@tmpval+3
  6634                           
  6635                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6636  010D48  C137  F06F         	movff	sprintf@tmpval,___flge@ff1
  6637  010D4C  C138  F070         	movff	sprintf@tmpval+1,___flge@ff1+1
  6638  010D50  C139  F071         	movff	sprintf@tmpval+2,___flge@ff1+2
  6639  010D54  C13A  F072         	movff	sprintf@tmpval+3,___flge@ff1+3
  6640  010D58  0E00               	movlw	0
  6641  010D5A  0100               	movlb	0	; () banked
  6642  010D5C  6F73               	movwf	___flge@ff2& (0+255),b
  6643  010D5E  0E00               	movlw	0
  6644  010D60  6F74               	movwf	(___flge@ff2+1)& (0+255),b
  6645  010D62  0E80               	movlw	128
  6646  010D64  6F75               	movwf	(___flge@ff2+2)& (0+255),b
  6647  010D66  0E3F               	movlw	63
  6648  010D68  6F76               	movwf	(___flge@ff2+3)& (0+255),b
  6649  010D6A  EC99  F0A6         	call	___flge	;wreg free
  6650  010D6E  0100               	movlb	0	; () banked
  6651  010D70  B0D8               	btfsc	status,0,c
  6652  010D72  D005               	goto	l8398
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;doprnt.c: 849: exp--;
  6656  010D74  0101               	movlb	1	; () banked
  6657  010D76  0735               	decf	sprintf@exp& (0+255),f,b
  6658  010D78  A0D8               	btfss	status,0,c
  6659  010D7A  0736               	decf	(sprintf@exp+1)& (0+255),f,b
  6660  010D7C  D019               	goto	l8402
  6661  010D7E                     l8398:
  6662                           
  6663                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6664  010D7E  C137  F06F         	movff	sprintf@tmpval,___flge@ff1
  6665  010D82  C138  F070         	movff	sprintf@tmpval+1,___flge@ff1+1
  6666  010D86  C139  F071         	movff	sprintf@tmpval+2,___flge@ff1+2
  6667  010D8A  C13A  F072         	movff	sprintf@tmpval+3,___flge@ff1+3
  6668  010D8E  0E00               	movlw	0
  6669  010D90  0100               	movlb	0	; () banked
  6670  010D92  6F73               	movwf	___flge@ff2& (0+255),b
  6671  010D94  0E00               	movlw	0
  6672  010D96  6F74               	movwf	(___flge@ff2+1)& (0+255),b
  6673  010D98  0E20               	movlw	32
  6674  010D9A  6F75               	movwf	(___flge@ff2+2)& (0+255),b
  6675  010D9C  0E41               	movlw	65
  6676  010D9E  6F76               	movwf	(___flge@ff2+3)& (0+255),b
  6677  010DA0  EC99  F0A6         	call	___flge	;wreg free
  6678  010DA4  0100               	movlb	0	; () banked
  6679  010DA6  A0D8               	btfss	status,0,c
  6680  010DA8  D003               	goto	l8402
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;doprnt.c: 851: exp++;
  6684  010DAA  0101               	movlb	1	; () banked
  6685  010DAC  4B35               	infsnz	sprintf@exp& (0+255),f,b
  6686  010DAE  2B36               	incf	(sprintf@exp+1)& (0+255),f,b
  6687  010DB0                     l8402:
  6688                           
  6689                           ;doprnt.c: 852: }
  6690                           ;doprnt.c: 1112: if(prec <= 12)
  6691  010DB0  0101               	movlb	1	; () banked
  6692  010DB2  BF3C               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6693  010DB4  D008               	goto	l8404
  6694  010DB6  0101               	movlb	1	; () banked
  6695  010DB8  513C               	movf	(sprintf@prec+1)& (0+255),w,b
  6696  010DBA  E123               	bnz	l8406
  6697  010DBC  0E0D               	movlw	13
  6698  010DBE  0101               	movlb	1	; () banked
  6699  010DC0  5D3B               	subwf	sprintf@prec& (0+255),w,b
  6700  010DC2  B0D8               	btfsc	status,0,c
  6701  010DC4  D01E               	goto	l8406
  6702  010DC6                     l8404:
  6703                           
  6704                           ; BSR set to: 1
  6705                           ;doprnt.c: 1113: fval += fround(prec);
  6706  010DC6  C13D  F0A3         	movff	sprintf@fval,___fladd@b
  6707  010DCA  C13E  F0A4         	movff	sprintf@fval+1,___fladd@b+1
  6708  010DCE  C13F  F0A5         	movff	sprintf@fval+2,___fladd@b+2
  6709  010DD2  C140  F0A6         	movff	sprintf@fval+3,___fladd@b+3
  6710  010DD6  0101               	movlb	1	; () banked
  6711  010DD8  513B               	movf	sprintf@prec& (0+255),w,b
  6712  010DDA  EC9E  F0A1         	call	_fround
  6713  010DDE  C096  F0A7         	movff	?_fround,___fladd@a
  6714  010DE2  C097  F0A8         	movff	?_fround+1,___fladd@a+1
  6715  010DE6  C098  F0A9         	movff	?_fround+2,___fladd@a+2
  6716  010DEA  C099  F0AA         	movff	?_fround+3,___fladd@a+3
  6717  010DEE  EC48  F099         	call	___fladd	;wreg free
  6718  010DF2  C0A3  F13D         	movff	?___fladd,sprintf@fval
  6719  010DF6  C0A4  F13E         	movff	?___fladd+1,sprintf@fval+1
  6720  010DFA  C0A5  F13F         	movff	?___fladd+2,sprintf@fval+2
  6721  010DFE  C0A6  F140         	movff	?___fladd+3,sprintf@fval+3
  6722  010E02                     l8406:
  6723                           
  6724                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6725  010E02  0101               	movlb	1	; () banked
  6726  010E04  BF36               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6727  010E06  D008               	goto	l8408
  6728  010E08  0101               	movlb	1	; () banked
  6729  010E0A  5136               	movf	(sprintf@exp+1)& (0+255),w,b
  6730  010E0C  E12E               	bnz	l8414
  6731  010E0E  0E0A               	movlw	10
  6732  010E10  0101               	movlb	1	; () banked
  6733  010E12  5D35               	subwf	sprintf@exp& (0+255),w,b
  6734  010E14  B0D8               	btfsc	status,0,c
  6735  010E16  D029               	goto	l8414
  6736  010E18                     l8408:
  6737                           
  6738                           ; BSR set to: 1
  6739  010E18  0101               	movlb	1	; () banked
  6740  010E1A  513D               	movf	sprintf@fval& (0+255),w,b
  6741  010E1C  0101               	movlb	1	; () banked
  6742  010E1E  113E               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6743  010E20  0101               	movlb	1	; () banked
  6744  010E22  113F               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6745  010E24  0101               	movlb	1	; () banked
  6746  010E26  1140               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6747  010E28  B4D8               	btfsc	status,2,c
  6748  010E2A  D06D               	goto	l8428
  6749                           
  6750                           ; BSR set to: 1
  6751  010E2C  C13D  F0B7         	movff	sprintf@fval,___fltol@f1
  6752  010E30  C13E  F0B8         	movff	sprintf@fval+1,___fltol@f1+1
  6753  010E34  C13F  F0B9         	movff	sprintf@fval+2,___fltol@f1+2
  6754  010E38  C140  F0BA         	movff	sprintf@fval+3,___fltol@f1+3
  6755  010E3C  EC8A  F0A9         	call	___fltol	;wreg free
  6756  010E40  0100               	movlb	0	; () banked
  6757  010E42  51B7               	movf	?___fltol& (0+255),w,b
  6758  010E44  0100               	movlb	0	; () banked
  6759  010E46  11B8               	iorwf	(?___fltol+1)& (0+255),w,b
  6760  010E48  0100               	movlb	0	; () banked
  6761  010E4A  11B9               	iorwf	(?___fltol+2)& (0+255),w,b
  6762  010E4C  0100               	movlb	0	; () banked
  6763  010E4E  11BA               	iorwf	(?___fltol+3)& (0+255),w,b
  6764  010E50  A4D8               	btfss	status,2,c
  6765  010E52  D059               	goto	l8428
  6766                           
  6767                           ; BSR set to: 0
  6768  010E54  0101               	movlb	1	; () banked
  6769  010E56  BF36               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6770  010E58  D056               	goto	l8428
  6771  010E5A  0101               	movlb	1	; () banked
  6772  010E5C  5136               	movf	(sprintf@exp+1)& (0+255),w,b
  6773  010E5E  E105               	bnz	l8414
  6774  010E60  0E02               	movlw	2
  6775  010E62  0101               	movlb	1	; () banked
  6776  010E64  5D35               	subwf	sprintf@exp& (0+255),w,b
  6777  010E66  A0D8               	btfss	status,0,c
  6778  010E68  D04E               	goto	l8428
  6779  010E6A                     l8414:
  6780                           
  6781                           ; BSR set to: 1
  6782                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6783  010E6A  C137  F06F         	movff	sprintf@tmpval,___flge@ff1
  6784  010E6E  C138  F070         	movff	sprintf@tmpval+1,___flge@ff1+1
  6785  010E72  C139  F071         	movff	sprintf@tmpval+2,___flge@ff1+2
  6786  010E76  C13A  F072         	movff	sprintf@tmpval+3,___flge@ff1+3
  6787  010E7A  0E5F               	movlw	95
  6788  010E7C  0100               	movlb	0	; () banked
  6789  010E7E  6F73               	movwf	___flge@ff2& (0+255),b
  6790  010E80  0E70               	movlw	112
  6791  010E82  6F74               	movwf	(___flge@ff2+1)& (0+255),b
  6792  010E84  0E89               	movlw	137
  6793  010E86  6F75               	movwf	(___flge@ff2+2)& (0+255),b
  6794  010E88  0E40               	movlw	64
  6795  010E8A  6F76               	movwf	(___flge@ff2+3)& (0+255),b
  6796  010E8C  EC99  F0A6         	call	___flge	;wreg free
  6797  010E90  0100               	movlb	0	; () banked
  6798  010E92  B0D8               	btfsc	status,0,c
  6799  010E94  D003               	goto	l8418
  6800                           
  6801                           ; BSR set to: 0
  6802                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6803  010E96  0101               	movlb	1	; () banked
  6804  010E98  0EF7               	movlw	247
  6805  010E9A  D002               	goto	L3
  6806  010E9C                     l8418:
  6807                           
  6808                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6809  010E9C  0101               	movlb	1	; () banked
  6810  010E9E  0EF8               	movlw	248
  6811  010EA0                     L3:
  6812  010EA0  2735               	addwf	sprintf@exp& (0+255),f,b
  6813  010EA2  0EFF               	movlw	255
  6814  010EA4  2336               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6815                           
  6816                           ; BSR set to: 1
  6817                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6818                           
  6819                           ; BSR set to: 1
  6820  010EA6  0101               	movlb	1	; () banked
  6821  010EA8  5135               	movf	sprintf@exp& (0+255),w,b
  6822  010EAA  EC35  F094         	call	_scale
  6823  010EAE  C096  F137         	movff	?_scale,sprintf@tmpval
  6824  010EB2  C097  F138         	movff	?_scale+1,sprintf@tmpval+1
  6825  010EB6  C098  F139         	movff	?_scale+2,sprintf@tmpval+2
  6826  010EBA  C099  F13A         	movff	?_scale+3,sprintf@tmpval+3
  6827  010EBE  C13D  F06F         	movff	sprintf@fval,__div_to_l_@f1
  6828  010EC2  C13E  F070         	movff	sprintf@fval+1,__div_to_l_@f1+1
  6829  010EC6  C13F  F071         	movff	sprintf@fval+2,__div_to_l_@f1+2
  6830  010ECA  C140  F072         	movff	sprintf@fval+3,__div_to_l_@f1+3
  6831  010ECE  C137  F073         	movff	sprintf@tmpval,__div_to_l_@f2
  6832  010ED2  C138  F074         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  6833  010ED6  C139  F075         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  6834  010EDA  C13A  F076         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  6835  010EDE  EC61  F0A7         	call	__div_to_l_	;wreg free
  6836  010EE2  C06F  F131         	movff	?__div_to_l_,sprintf@val
  6837  010EE6  C070  F132         	movff	?__div_to_l_+1,sprintf@val+1
  6838  010EEA  C071  F133         	movff	?__div_to_l_+2,sprintf@val+2
  6839  010EEE  C072  F134         	movff	?__div_to_l_+3,sprintf@val+3
  6840                           
  6841                           ;doprnt.c: 1129: fval = 0.0;
  6842  010EF2  0E00               	movlw	0
  6843  010EF4  0101               	movlb	1	; () banked
  6844  010EF6  6F3D               	movwf	sprintf@fval& (0+255),b
  6845  010EF8  0E00               	movlw	0
  6846  010EFA  6F3E               	movwf	(sprintf@fval+1)& (0+255),b
  6847  010EFC  0E00               	movlw	0
  6848  010EFE  6F3F               	movwf	(sprintf@fval+2)& (0+255),b
  6849  010F00  0E00               	movlw	0
  6850  010F02  6F40               	movwf	(sprintf@fval+3)& (0+255),b
  6851                           
  6852                           ;doprnt.c: 1130: } else {
  6853  010F04  D03C               	goto	l8432
  6854  010F06                     l8428:
  6855                           
  6856                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6857  010F06  C13D  F0B7         	movff	sprintf@fval,___fltol@f1
  6858  010F0A  C13E  F0B8         	movff	sprintf@fval+1,___fltol@f1+1
  6859  010F0E  C13F  F0B9         	movff	sprintf@fval+2,___fltol@f1+2
  6860  010F12  C140  F0BA         	movff	sprintf@fval+3,___fltol@f1+3
  6861  010F16  EC8A  F0A9         	call	___fltol	;wreg free
  6862  010F1A  C0B7  F131         	movff	?___fltol,sprintf@val
  6863  010F1E  C0B8  F132         	movff	?___fltol+1,sprintf@val+1
  6864  010F22  C0B9  F133         	movff	?___fltol+2,sprintf@val+2
  6865  010F26  C0BA  F134         	movff	?___fltol+3,sprintf@val+3
  6866                           
  6867                           ;doprnt.c: 1132: fval -= (double)val;
  6868  010F2A  C13D  F0B7         	movff	sprintf@fval,___flsub@b
  6869  010F2E  C13E  F0B8         	movff	sprintf@fval+1,___flsub@b+1
  6870  010F32  C13F  F0B9         	movff	sprintf@fval+2,___flsub@b+2
  6871  010F36  C140  F0BA         	movff	sprintf@fval+3,___flsub@b+3
  6872  010F3A  C131  F06F         	movff	sprintf@val,___xxtofl@val
  6873  010F3E  C132  F070         	movff	sprintf@val+1,___xxtofl@val+1
  6874  010F42  C133  F071         	movff	sprintf@val+2,___xxtofl@val+2
  6875  010F46  C134  F072         	movff	sprintf@val+3,___xxtofl@val+3
  6876  010F4A  0E00               	movlw	0
  6877  010F4C  EC00  F0A4         	call	___xxtofl
  6878  010F50  C06F  F0BB         	movff	?___xxtofl,___flsub@a
  6879  010F54  C070  F0BC         	movff	?___xxtofl+1,___flsub@a+1
  6880  010F58  C071  F0BD         	movff	?___xxtofl+2,___flsub@a+2
  6881  010F5C  C072  F0BE         	movff	?___xxtofl+3,___flsub@a+3
  6882  010F60  EC8F  F0AD         	call	___flsub	;wreg free
  6883  010F64  C0B7  F13D         	movff	?___flsub,sprintf@fval
  6884  010F68  C0B8  F13E         	movff	?___flsub+1,sprintf@fval+1
  6885  010F6C  C0B9  F13F         	movff	?___flsub+2,sprintf@fval+2
  6886  010F70  C0BA  F140         	movff	?___flsub+3,sprintf@fval+3
  6887                           
  6888                           ;doprnt.c: 1133: exp = 0;
  6889  010F74  0E00               	movlw	0
  6890  010F76  0101               	movlb	1	; () banked
  6891  010F78  6F36               	movwf	(sprintf@exp+1)& (0+255),b
  6892  010F7A  0E00               	movlw	0
  6893  010F7C  6F35               	movwf	sprintf@exp& (0+255),b
  6894  010F7E                     l8432:
  6895                           
  6896                           ; BSR set to: 1
  6897                           ;doprnt.c: 1134: }
  6898                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6899  010F7E  0E01               	movlw	1
  6900  010F80  0101               	movlb	1	; () banked
  6901  010F82  6F41               	movwf	sprintf@c& (0+255),b
  6902  010F84                     l8434:
  6903                           
  6904                           ; BSR set to: 1
  6905  010F84  0E0A               	movlw	10
  6906  010F86  0101               	movlb	1	; () banked
  6907  010F88  1941               	xorwf	sprintf@c& (0+255),w,b
  6908  010F8A  B4D8               	btfsc	status,2,c
  6909  010F8C  D021               	goto	l8446
  6910                           
  6911                           ; BSR set to: 1
  6912                           ;doprnt.c: 1137: if(val < dpowers[c])
  6913                           
  6914                           ; BSR set to: 1
  6915                           
  6916                           ; BSR set to: 1
  6917  010F8E  0101               	movlb	1	; () banked
  6918  010F90  5141               	movf	sprintf@c& (0+255),w,b
  6919  010F92  0D04               	mullw	4
  6920  010F94  0E37               	movlw	low _dpowers
  6921  010F96  24F3               	addwf	prodl,w,c
  6922  010F98  6EF6               	movwf	tblptrl,c
  6923  010F9A  0EFF               	movlw	high _dpowers
  6924  010F9C  20F4               	addwfc	prodh,w,c
  6925  010F9E  6EF7               	movwf	tblptrh,c
  6926  010FA0                     	if	1	;There are 3 active tblptr bytes
  6927  010FA0  6AF8               	clrf	tblptru,c
  6928  010FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  6929  010FA4  22F8               	addwfc	tblptru,f,c
  6930  010FA6                     	endif
  6931  010FA6  0009               	tblrd		*+
  6932  010FA8  50F5               	movf	tablat,w,c
  6933  010FAA  0101               	movlb	1	; () banked
  6934  010FAC  5D31               	subwf	sprintf@val& (0+255),w,b
  6935  010FAE  0009               	tblrd		*+
  6936  010FB0  50F5               	movf	tablat,w,c
  6937  010FB2  0101               	movlb	1	; () banked
  6938  010FB4  5932               	subwfb	(sprintf@val+1)& (0+255),w,b
  6939  010FB6  0009               	tblrd		*+
  6940  010FB8  50F5               	movf	tablat,w,c
  6941  010FBA  0101               	movlb	1	; () banked
  6942  010FBC  5933               	subwfb	(sprintf@val+2)& (0+255),w,b
  6943  010FBE  0009               	tblrd		*+
  6944  010FC0  50F5               	movf	tablat,w,c
  6945  010FC2  0101               	movlb	1	; () banked
  6946  010FC4  5934               	subwfb	(sprintf@val+3)& (0+255),w,b
  6947  010FC6  A0D8               	btfss	status,0,c
  6948  010FC8  D003               	goto	l8446
  6949                           
  6950                           ; BSR set to: 1
  6951                           
  6952                           ; BSR set to: 1
  6953                           
  6954                           ; BSR set to: 1
  6955                           ;doprnt.c: 1138: break;
  6956  010FCA  0101               	movlb	1	; () banked
  6957  010FCC  2B41               	incf	sprintf@c& (0+255),f,b
  6958  010FCE  D7DA               	goto	l8434
  6959  010FD0                     l8446:
  6960                           
  6961                           ; BSR set to: 1
  6962                           ;doprnt.c: 1175: {
  6963                           ;doprnt.c: 1188: if(flag & 0x03)
  6964  010FD0  0E03               	movlw	3
  6965  010FD2  0101               	movlb	1	; () banked
  6966  010FD4  152F               	andwf	sprintf@flag& (0+255),w,b
  6967  010FD6  0100               	movlb	0	; () banked
  6968  010FD8  6FC9               	movwf	??_sprintf& (0+255),b
  6969  010FDA  0E00               	movlw	0
  6970  010FDC  0101               	movlb	1	; () banked
  6971  010FDE  1530               	andwf	(sprintf@flag+1)& (0+255),w,b
  6972  010FE0  0100               	movlb	0	; () banked
  6973  010FE2  6FCA               	movwf	(??_sprintf+1)& (0+255),b
  6974  010FE4  0100               	movlb	0	; () banked
  6975  010FE6  51C9               	movf	??_sprintf& (0+255),w,b
  6976  010FE8  0100               	movlb	0	; () banked
  6977  010FEA  11CA               	iorwf	(??_sprintf+1)& (0+255),w,b
  6978  010FEC  B4D8               	btfsc	status,2,c
  6979  010FEE  D058               	goto	l8460
  6980                           
  6981                           ; BSR set to: 0
  6982                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  6983  010FF0  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  6984  010FF4  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  6985  010FF8  0E2D               	movlw	45
  6986  010FFA  D050               	goto	L4
  6987  010FFC                     l8450:
  6988                           
  6989                           ; BSR set to: 0
  6990  010FFC  0100               	movlb	0	; () banked
  6991  010FFE  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  6992  011000  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;doprnt.c: 1195: }
  6996                           ;doprnt.c: 1196: while(c--) {
  6997  011002  D04E               	goto	l8460
  6998  011004                     l8452:
  6999                           
  7000                           ;doprnt.c: 1200: {
  7001                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7002  011004  C131  F06F         	movff	sprintf@val,___lldiv@dividend
  7003  011008  C132  F070         	movff	sprintf@val+1,___lldiv@dividend+1
  7004  01100C  C133  F071         	movff	sprintf@val+2,___lldiv@dividend+2
  7005  011010  C134  F072         	movff	sprintf@val+3,___lldiv@dividend+3
  7006  011014  0101               	movlb	1	; () banked
  7007  011016  5141               	movf	sprintf@c& (0+255),w,b
  7008  011018  0D04               	mullw	4
  7009  01101A  0E37               	movlw	low _dpowers
  7010  01101C  24F3               	addwf	prodl,w,c
  7011  01101E  6EF6               	movwf	tblptrl,c
  7012  011020  0EFF               	movlw	high _dpowers
  7013  011022  20F4               	addwfc	prodh,w,c
  7014  011024  6EF7               	movwf	tblptrh,c
  7015  011026                     	if	1	;There are 3 active tblptr bytes
  7016  011026  6AF8               	clrf	tblptru,c
  7017  011028  0E00               	movlw	low (__mediumconst shr (0+16))
  7018  01102A  22F8               	addwfc	tblptru,f,c
  7019  01102C                     	endif
  7020  01102C  0009               	tblrd		*+
  7021  01102E  CFF5 F073          	movff	tablat,___lldiv@divisor
  7022  011032  0009               	tblrd		*+
  7023  011034  CFF5 F074          	movff	tablat,___lldiv@divisor+1
  7024  011038  0009               	tblrd		*+
  7025  01103A  CFF5 F075          	movff	tablat,___lldiv@divisor+2
  7026  01103E  000A               	tblrd		*-
  7027  011040  CFF5 F076          	movff	tablat,___lldiv@divisor+3
  7028  011044  EC46  F0AB         	call	___lldiv	;wreg free
  7029  011048  C06F  F137         	movff	?___lldiv,sprintf@tmpval
  7030  01104C  C070  F138         	movff	?___lldiv+1,sprintf@tmpval+1
  7031  011050  C071  F139         	movff	?___lldiv+2,sprintf@tmpval+2
  7032  011054  C072  F13A         	movff	?___lldiv+3,sprintf@tmpval+3
  7033                           
  7034                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7035  011058  C137  F06F         	movff	sprintf@tmpval,___llmod@dividend
  7036  01105C  C138  F070         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7037  011060  C139  F071         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7038  011064  C13A  F072         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7039  011068  0E0A               	movlw	10
  7040  01106A  0100               	movlb	0	; () banked
  7041  01106C  6F73               	movwf	___llmod@divisor& (0+255),b
  7042  01106E  0E00               	movlw	0
  7043  011070  6F74               	movwf	(___llmod@divisor+1)& (0+255),b
  7044  011072  0E00               	movlw	0
  7045  011074  6F75               	movwf	(___llmod@divisor+2)& (0+255),b
  7046  011076  0E00               	movlw	0
  7047  011078  6F76               	movwf	(___llmod@divisor+3)& (0+255),b
  7048  01107A  ECA7  F0AC         	call	___llmod	;wreg free
  7049  01107E  C06F  F137         	movff	?___llmod,sprintf@tmpval
  7050  011082  C070  F138         	movff	?___llmod+1,sprintf@tmpval+1
  7051  011086  C071  F139         	movff	?___llmod+2,sprintf@tmpval+2
  7052  01108A  C072  F13A         	movff	?___llmod+3,sprintf@tmpval+3
  7053                           
  7054                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7055  01108E  0101               	movlb	1	; () banked
  7056  011090  5137               	movf	sprintf@tmpval& (0+255),w,b
  7057  011092  0F30               	addlw	48
  7058  011094  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  7059  011098  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  7060  01109C                     L4:
  7061  01109C  6EDF               	movwf	indf2,c
  7062  01109E  D7AE               	goto	l8450
  7063  0110A0                     l8460:
  7064                           
  7065                           ; BSR set to: 0
  7066  0110A0  0101               	movlb	1	; () banked
  7067  0110A2  0741               	decf	sprintf@c& (0+255),f,b
  7068  0110A4  0101               	movlb	1	; () banked
  7069  0110A6  2941               	incf	sprintf@c& (0+255),w,b
  7070  0110A8  B4D8               	btfsc	status,2,c
  7071  0110AA  D00E               	goto	l8468
  7072  0110AC  D7AB               	goto	l8452
  7073  0110AE                     l8462:
  7074                           
  7075                           ; BSR set to: 1
  7076                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7077  0110AE  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  7078  0110B2  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  7079  0110B6  0E30               	movlw	48
  7080  0110B8  6EDF               	movwf	indf2,c
  7081                           
  7082                           ; BSR set to: 1
  7083  0110BA  0100               	movlb	0	; () banked
  7084  0110BC  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  7085  0110BE  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  7086                           
  7087                           ; BSR set to: 0
  7088                           ;doprnt.c: 1209: exp--;
  7089  0110C0  0101               	movlb	1	; () banked
  7090  0110C2  0735               	decf	sprintf@exp& (0+255),f,b
  7091  0110C4  A0D8               	btfss	status,0,c
  7092  0110C6  0736               	decf	(sprintf@exp+1)& (0+255),f,b
  7093  0110C8                     l8468:
  7094                           
  7095                           ; BSR set to: 1
  7096  0110C8  0101               	movlb	1	; () banked
  7097  0110CA  BF36               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7098  0110CC  D007               	goto	l8470
  7099  0110CE  0101               	movlb	1	; () banked
  7100  0110D0  5136               	movf	(sprintf@exp+1)& (0+255),w,b
  7101  0110D2  E1ED               	bnz	l8462
  7102  0110D4  0101               	movlb	1	; () banked
  7103  0110D6  0535               	decf	sprintf@exp& (0+255),w,b
  7104  0110D8  B0D8               	btfsc	status,0,c
  7105  0110DA  D7E9               	goto	l8462
  7106  0110DC                     l8470:
  7107                           
  7108                           ; BSR set to: 1
  7109                           ;doprnt.c: 1210: }
  7110                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7111  0110DC  0101               	movlb	1	; () banked
  7112  0110DE  BF3C               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7113  0110E0  D00C               	goto	l956
  7114  0110E2  0101               	movlb	1	; () banked
  7115  0110E4  513C               	movf	(sprintf@prec+1)& (0+255),w,b
  7116  0110E6  E105               	bnz	u11210
  7117  0110E8  0E09               	movlw	9
  7118  0110EA  0101               	movlb	1	; () banked
  7119  0110EC  5D3B               	subwf	sprintf@prec& (0+255),w,b
  7120  0110EE  A0D8               	btfss	status,0,c
  7121  0110F0  D004               	goto	l956
  7122  0110F2                     u11210:
  7123                           
  7124                           ; BSR set to: 1
  7125                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7126  0110F2  0E08               	movlw	8
  7127  0110F4  0101               	movlb	1	; () banked
  7128  0110F6  6F41               	movwf	sprintf@c& (0+255),b
  7129  0110F8  D002               	goto	l8474
  7130  0110FA                     l956:
  7131                           
  7132                           ; BSR set to: 1
  7133                           ;doprnt.c: 1213: else
  7134                           ;doprnt.c: 1214: c = prec;
  7135  0110FA  C13B  F141         	movff	sprintf@prec,sprintf@c
  7136  0110FE                     l8474:
  7137                           
  7138                           ; BSR set to: 1
  7139                           ;doprnt.c: 1215: prec -= c;
  7140  0110FE  0101               	movlb	1	; () banked
  7141  011100  5141               	movf	sprintf@c& (0+255),w,b
  7142  011102  0101               	movlb	1	; () banked
  7143  011104  5F3B               	subwf	sprintf@prec& (0+255),f,b
  7144  011106  0E00               	movlw	0
  7145  011108  0101               	movlb	1	; () banked
  7146  01110A  BF41               	btfsc	sprintf@c& (0+255),7,b
  7147  01110C  0EFF               	movlw	255
  7148  01110E  0101               	movlb	1	; () banked
  7149  011110  5B3C               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7150                           
  7151                           ; BSR set to: 1
  7152                           ;doprnt.c: 1219: if(c)
  7153  011112  0101               	movlb	1	; () banked
  7154  011114  5141               	movf	sprintf@c& (0+255),w,b
  7155  011116  0101               	movlb	1	; () banked
  7156  011118  B4D8               	btfsc	status,2,c
  7157  01111A  D009               	goto	l8482
  7158                           
  7159                           ; BSR set to: 1
  7160                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7161  01111C  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  7162  011120  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  7163  011124  0E2E               	movlw	46
  7164  011126  6EDF               	movwf	indf2,c
  7165                           
  7166                           ; BSR set to: 1
  7167  011128  0100               	movlb	0	; () banked
  7168  01112A  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  7169  01112C  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  7170  01112E                     l8482:
  7171                           
  7172                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7173  01112E  0101               	movlb	1	; () banked
  7174  011130  5141               	movf	sprintf@c& (0+255),w,b
  7175  011132  EC35  F094         	call	_scale
  7176  011136  C096  F129         	movff	?_scale,_sprintf$4222
  7177  01113A  C097  F12A         	movff	?_scale+1,_sprintf$4222+1
  7178  01113E  C098  F12B         	movff	?_scale+2,_sprintf$4222+2
  7179  011142  C099  F12C         	movff	?_scale+3,_sprintf$4222+3
  7180                           
  7181                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7182  011146  C13D  F081         	movff	sprintf@fval,___flmul@a
  7183  01114A  C13E  F082         	movff	sprintf@fval+1,___flmul@a+1
  7184  01114E  C13F  F083         	movff	sprintf@fval+2,___flmul@a+2
  7185  011152  C140  F084         	movff	sprintf@fval+3,___flmul@a+3
  7186  011156  C129  F07D         	movff	_sprintf$4222,___flmul@b
  7187  01115A  C12A  F07E         	movff	_sprintf$4222+1,___flmul@b+1
  7188  01115E  C12B  F07F         	movff	_sprintf$4222+2,___flmul@b+2
  7189  011162  C12C  F080         	movff	_sprintf$4222+3,___flmul@b+3
  7190  011166  EC9C  F09B         	call	___flmul	;wreg free
  7191  01116A  C07D  F0B7         	movff	?___flmul,___fltol@f1
  7192  01116E  C07E  F0B8         	movff	?___flmul+1,___fltol@f1+1
  7193  011172  C07F  F0B9         	movff	?___flmul+2,___fltol@f1+2
  7194  011176  C080  F0BA         	movff	?___flmul+3,___fltol@f1+3
  7195  01117A  EC8A  F0A9         	call	___fltol	;wreg free
  7196  01117E  C0B7  F131         	movff	?___fltol,sprintf@val
  7197  011182  C0B8  F132         	movff	?___fltol+1,sprintf@val+1
  7198  011186  C0B9  F133         	movff	?___fltol+2,sprintf@val+2
  7199  01118A  C0BA  F134         	movff	?___fltol+3,sprintf@val+3
  7200                           
  7201                           ;doprnt.c: 1228: while(c--) {
  7202  01118E  D07A               	goto	l8496
  7203  011190                     l8486:
  7204                           
  7205                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7206  011190  C131  F06F         	movff	sprintf@val,___lldiv@dividend
  7207  011194  C132  F070         	movff	sprintf@val+1,___lldiv@dividend+1
  7208  011198  C133  F071         	movff	sprintf@val+2,___lldiv@dividend+2
  7209  01119C  C134  F072         	movff	sprintf@val+3,___lldiv@dividend+3
  7210  0111A0  0101               	movlb	1	; () banked
  7211  0111A2  5141               	movf	sprintf@c& (0+255),w,b
  7212  0111A4  0D04               	mullw	4
  7213  0111A6  0E37               	movlw	low _dpowers
  7214  0111A8  24F3               	addwf	prodl,w,c
  7215  0111AA  6EF6               	movwf	tblptrl,c
  7216  0111AC  0EFF               	movlw	high _dpowers
  7217  0111AE  20F4               	addwfc	prodh,w,c
  7218  0111B0  6EF7               	movwf	tblptrh,c
  7219  0111B2                     	if	1	;There are 3 active tblptr bytes
  7220  0111B2  6AF8               	clrf	tblptru,c
  7221  0111B4  0E00               	movlw	low (__mediumconst shr (0+16))
  7222  0111B6  22F8               	addwfc	tblptru,f,c
  7223  0111B8                     	endif
  7224  0111B8  0009               	tblrd		*+
  7225  0111BA  CFF5 F073          	movff	tablat,___lldiv@divisor
  7226  0111BE  0009               	tblrd		*+
  7227  0111C0  CFF5 F074          	movff	tablat,___lldiv@divisor+1
  7228  0111C4  0009               	tblrd		*+
  7229  0111C6  CFF5 F075          	movff	tablat,___lldiv@divisor+2
  7230  0111CA  000A               	tblrd		*-
  7231  0111CC  CFF5 F076          	movff	tablat,___lldiv@divisor+3
  7232  0111D0  EC46  F0AB         	call	___lldiv	;wreg free
  7233  0111D4  C06F  F137         	movff	?___lldiv,sprintf@tmpval
  7234  0111D8  C070  F138         	movff	?___lldiv+1,sprintf@tmpval+1
  7235  0111DC  C071  F139         	movff	?___lldiv+2,sprintf@tmpval+2
  7236  0111E0  C072  F13A         	movff	?___lldiv+3,sprintf@tmpval+3
  7237                           
  7238                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7239  0111E4  C137  F06F         	movff	sprintf@tmpval,___llmod@dividend
  7240  0111E8  C138  F070         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7241  0111EC  C139  F071         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7242  0111F0  C13A  F072         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7243  0111F4  0E0A               	movlw	10
  7244  0111F6  0100               	movlb	0	; () banked
  7245  0111F8  6F73               	movwf	___llmod@divisor& (0+255),b
  7246  0111FA  0E00               	movlw	0
  7247  0111FC  6F74               	movwf	(___llmod@divisor+1)& (0+255),b
  7248  0111FE  0E00               	movlw	0
  7249  011200  6F75               	movwf	(___llmod@divisor+2)& (0+255),b
  7250  011202  0E00               	movlw	0
  7251  011204  6F76               	movwf	(___llmod@divisor+3)& (0+255),b
  7252  011206  ECA7  F0AC         	call	___llmod	;wreg free
  7253  01120A  C06F  F137         	movff	?___llmod,sprintf@tmpval
  7254  01120E  C070  F138         	movff	?___llmod+1,sprintf@tmpval+1
  7255  011212  C071  F139         	movff	?___llmod+2,sprintf@tmpval+2
  7256  011216  C072  F13A         	movff	?___llmod+3,sprintf@tmpval+3
  7257                           
  7258                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7259  01121A  0101               	movlb	1	; () banked
  7260  01121C  5137               	movf	sprintf@tmpval& (0+255),w,b
  7261  01121E  0F30               	addlw	48
  7262  011220  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  7263  011224  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  7264  011228  6EDF               	movwf	indf2,c
  7265                           
  7266                           ; BSR set to: 1
  7267  01122A  0100               	movlb	0	; () banked
  7268  01122C  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  7269  01122E  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;doprnt.c: 1232: val %= dpowers[c];
  7273  011230  C131  F06F         	movff	sprintf@val,___llmod@dividend
  7274  011234  C132  F070         	movff	sprintf@val+1,___llmod@dividend+1
  7275  011238  C133  F071         	movff	sprintf@val+2,___llmod@dividend+2
  7276  01123C  C134  F072         	movff	sprintf@val+3,___llmod@dividend+3
  7277  011240  0101               	movlb	1	; () banked
  7278  011242  5141               	movf	sprintf@c& (0+255),w,b
  7279  011244  0D04               	mullw	4
  7280  011246  0E37               	movlw	low _dpowers
  7281  011248  24F3               	addwf	prodl,w,c
  7282  01124A  6EF6               	movwf	tblptrl,c
  7283  01124C  0EFF               	movlw	high _dpowers
  7284  01124E  20F4               	addwfc	prodh,w,c
  7285  011250  6EF7               	movwf	tblptrh,c
  7286  011252                     	if	1	;There are 3 active tblptr bytes
  7287  011252  6AF8               	clrf	tblptru,c
  7288  011254  0E00               	movlw	low (__mediumconst shr (0+16))
  7289  011256  22F8               	addwfc	tblptru,f,c
  7290  011258                     	endif
  7291  011258  0009               	tblrd		*+
  7292  01125A  CFF5 F073          	movff	tablat,___llmod@divisor
  7293  01125E  0009               	tblrd		*+
  7294  011260  CFF5 F074          	movff	tablat,___llmod@divisor+1
  7295  011264  0009               	tblrd		*+
  7296  011266  CFF5 F075          	movff	tablat,___llmod@divisor+2
  7297  01126A  000A               	tblrd		*-
  7298  01126C  CFF5 F076          	movff	tablat,___llmod@divisor+3
  7299  011270  ECA7  F0AC         	call	___llmod	;wreg free
  7300  011274  C06F  F131         	movff	?___llmod,sprintf@val
  7301  011278  C070  F132         	movff	?___llmod+1,sprintf@val+1
  7302  01127C  C071  F133         	movff	?___llmod+2,sprintf@val+2
  7303  011280  C072  F134         	movff	?___llmod+3,sprintf@val+3
  7304  011284                     l8496:
  7305  011284  0101               	movlb	1	; () banked
  7306  011286  0741               	decf	sprintf@c& (0+255),f,b
  7307  011288  0101               	movlb	1	; () banked
  7308  01128A  2941               	incf	sprintf@c& (0+255),w,b
  7309  01128C  B4D8               	btfsc	status,2,c
  7310  01128E  D00E               	goto	l8504
  7311  011290  D77F               	goto	l8486
  7312  011292                     l8498:
  7313                           
  7314                           ; BSR set to: 1
  7315                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7316  011292  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  7317  011296  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  7318  01129A  0E30               	movlw	48
  7319  01129C  6EDF               	movwf	indf2,c
  7320                           
  7321                           ; BSR set to: 1
  7322  01129E  0100               	movlb	0	; () banked
  7323  0112A0  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  7324  0112A2  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  7325                           
  7326                           ; BSR set to: 0
  7327                           ;doprnt.c: 1237: prec--;
  7328  0112A4  0101               	movlb	1	; () banked
  7329  0112A6  073B               	decf	sprintf@prec& (0+255),f,b
  7330  0112A8  A0D8               	btfss	status,0,c
  7331  0112AA  073C               	decf	(sprintf@prec+1)& (0+255),f,b
  7332  0112AC                     l8504:
  7333                           
  7334                           ; BSR set to: 1
  7335  0112AC  0101               	movlb	1	; () banked
  7336  0112AE  513B               	movf	sprintf@prec& (0+255),w,b
  7337  0112B0  0101               	movlb	1	; () banked
  7338  0112B2  113C               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7339  0112B4  B4D8               	btfsc	status,2,c
  7340  0112B6  D059               	goto	l8526
  7341  0112B8  D7EC               	goto	l8498
  7342  0112BA                     l8506:
  7343                           
  7344                           ; BSR set to: 1
  7345                           ;doprnt.c: 1246: }
  7346                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7347  0112BA  0101               	movlb	1	; () banked
  7348  0112BC  513B               	movf	sprintf@prec& (0+255),w,b
  7349  0112BE  0101               	movlb	1	; () banked
  7350  0112C0  113C               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7351  0112C2  A4D8               	btfss	status,2,c
  7352  0112C4  D00D               	goto	l8512
  7353                           
  7354                           ; BSR set to: 1
  7355  0112C6  0101               	movlb	1	; () banked
  7356  0112C8  5131               	movf	sprintf@val& (0+255),w,b
  7357  0112CA  0101               	movlb	1	; () banked
  7358  0112CC  1132               	iorwf	(sprintf@val+1)& (0+255),w,b
  7359  0112CE  0101               	movlb	1	; () banked
  7360  0112D0  1133               	iorwf	(sprintf@val+2)& (0+255),w,b
  7361  0112D2  0101               	movlb	1	; () banked
  7362  0112D4  1134               	iorwf	(sprintf@val+3)& (0+255),w,b
  7363  0112D6  A4D8               	btfss	status,2,c
  7364  0112D8  D003               	goto	l8512
  7365                           
  7366                           ; BSR set to: 1
  7367                           ;doprnt.c: 1291: prec++;
  7368  0112DA  0101               	movlb	1	; () banked
  7369  0112DC  4B3B               	infsnz	sprintf@prec& (0+255),f,b
  7370  0112DE  2B3C               	incf	(sprintf@prec+1)& (0+255),f,b
  7371  0112E0                     l8512:
  7372                           
  7373                           ; BSR set to: 1
  7374                           ;doprnt.c: 1339: if(c < prec)
  7375  0112E0  0E80               	movlw	128
  7376  0112E2  0101               	movlb	1	; () banked
  7377  0112E4  BF41               	btfsc	sprintf@c& (0+255),7,b
  7378  0112E6  0E7F               	movlw	127
  7379  0112E8  0100               	movlb	0	; () banked
  7380  0112EA  6FC9               	movwf	??_sprintf& (0+255),b
  7381  0112EC  0101               	movlb	1	; () banked
  7382  0112EE  513B               	movf	sprintf@prec& (0+255),w,b
  7383  0112F0  0101               	movlb	1	; () banked
  7384  0112F2  5D41               	subwf	sprintf@c& (0+255),w,b
  7385  0112F4  0101               	movlb	1	; () banked
  7386  0112F6  513C               	movf	(sprintf@prec+1)& (0+255),w,b
  7387  0112F8  0A80               	xorlw	128
  7388  0112FA  0100               	movlb	0	; () banked
  7389  0112FC  59C9               	subwfb	??_sprintf& (0+255),w,b
  7390  0112FE  B0D8               	btfsc	status,0,c
  7391  011300  D003               	goto	l8516
  7392                           
  7393                           ; BSR set to: 0
  7394                           ;doprnt.c: 1340: c = prec;
  7395  011302  C13B  F141         	movff	sprintf@prec,sprintf@c
  7396  011306  D018               	goto	l8520
  7397  011308                     l8516:
  7398                           
  7399                           ; BSR set to: 0
  7400                           ;doprnt.c: 1341: else if(prec < c)
  7401  011308  0101               	movlb	1	; () banked
  7402  01130A  513C               	movf	(sprintf@prec+1)& (0+255),w,b
  7403  01130C  0A80               	xorlw	128
  7404  01130E  0100               	movlb	0	; () banked
  7405  011310  6FC9               	movwf	??_sprintf& (0+255),b
  7406  011312  0101               	movlb	1	; () banked
  7407  011314  5141               	movf	sprintf@c& (0+255),w,b
  7408  011316  0101               	movlb	1	; () banked
  7409  011318  5D3B               	subwf	sprintf@prec& (0+255),w,b
  7410  01131A  0E80               	movlw	128
  7411  01131C  0101               	movlb	1	; () banked
  7412  01131E  BF41               	btfsc	sprintf@c& (0+255),7,b
  7413  011320  0E7F               	movlw	127
  7414  011322  0100               	movlb	0	; () banked
  7415  011324  59C9               	subwfb	??_sprintf& (0+255),w,b
  7416  011326  B0D8               	btfsc	status,0,c
  7417  011328  D007               	goto	l8520
  7418                           
  7419                           ; BSR set to: 0
  7420                           ;doprnt.c: 1342: prec = c;
  7421  01132A  0101               	movlb	1	; () banked
  7422  01132C  5141               	movf	sprintf@c& (0+255),w,b
  7423  01132E  0101               	movlb	1	; () banked
  7424  011330  6F3B               	movwf	sprintf@prec& (0+255),b
  7425  011332  6B3C               	clrf	(sprintf@prec+1)& (0+255),b
  7426  011334  BF3B               	btfsc	sprintf@prec& (0+255),7,b
  7427  011336  073C               	decf	(sprintf@prec+1)& (0+255),f,b
  7428  011338                     l8520:
  7429                           
  7430                           ;doprnt.c: 1422: {
  7431                           ;doprnt.c: 1438: if(flag & 0x03)
  7432  011338  0E03               	movlw	3
  7433  01133A  0101               	movlb	1	; () banked
  7434  01133C  152F               	andwf	sprintf@flag& (0+255),w,b
  7435  01133E  0100               	movlb	0	; () banked
  7436  011340  6FC9               	movwf	??_sprintf& (0+255),b
  7437  011342  0E00               	movlw	0
  7438  011344  0101               	movlb	1	; () banked
  7439  011346  1530               	andwf	(sprintf@flag+1)& (0+255),w,b
  7440  011348  0100               	movlb	0	; () banked
  7441  01134A  6FCA               	movwf	(??_sprintf+1)& (0+255),b
  7442  01134C  0100               	movlb	0	; () banked
  7443  01134E  51C9               	movf	??_sprintf& (0+255),w,b
  7444  011350  0100               	movlb	0	; () banked
  7445  011352  11CA               	iorwf	(??_sprintf+1)& (0+255),w,b
  7446  011354  B4D8               	btfsc	status,2,c
  7447  011356  D009               	goto	l8526
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7451  011358  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  7452  01135C  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  7453  011360  0E2D               	movlw	45
  7454  011362  6EDF               	movwf	indf2,c
  7455  011364                     l8524:
  7456                           
  7457                           ; BSR set to: 0
  7458  011364  0100               	movlb	0	; () banked
  7459  011366  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  7460  011368  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  7461  01136A                     l8526:
  7462  01136A  C0C3  FFF6         	movff	sprintf@f,tblptrl
  7463  01136E  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  7464  011372  0100               	movlb	0	; () banked
  7465  011374  4BC3               	infsnz	sprintf@f& (0+255),f,b
  7466  011376  2BC4               	incf	(sprintf@f+1)& (0+255),f,b
  7467  011378                     	if	0	;tblptru may be non-zero
  7468  011378                     	endif
  7469  011378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7470  011378  0E00               	movlw	low (__mediumconst shr (0+16))
  7471  01137A  6EF8               	movwf	tblptru,c
  7472  01137C                     	endif
  7473  01137C  0008               	tblrd		*
  7474  01137E  CFF5 F141          	movff	tablat,sprintf@c
  7475  011382  0101               	movlb	1	; () banked
  7476  011384  5141               	movf	sprintf@c& (0+255),w,b
  7477  011386  A4D8               	btfss	status,2,c
  7478  011388  EF8B  F085         	goto	l8328
  7479  01138C                     l8528:
  7480                           
  7481                           ; BSR set to: 1
  7482                           ;doprnt.c: 1538: *sp = 0;
  7483  01138C  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  7484  011390  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  7485  011394  0E00               	movlw	0
  7486  011396  6EDF               	movwf	indf2,c
  7487  011398  0012               	return	
  7488  01139A                     __end_of_sprintf:
  7489                           	opt stack 0
  7490                           tblptru	equ	0xFF8
  7491                           tblptrh	equ	0xFF7
  7492                           tblptrl	equ	0xFF6
  7493                           tablat	equ	0xFF5
  7494                           prodh	equ	0xFF4
  7495                           prodl	equ	0xFF3
  7496                           intcon	equ	0xFF2
  7497                           postinc0	equ	0xFEE
  7498                           wreg	equ	0xFE8
  7499                           indf2	equ	0xFDF
  7500                           postinc2	equ	0xFDE
  7501                           fsr2h	equ	0xFDA
  7502                           fsr2l	equ	0xFD9
  7503                           status	equ	0xFD8
  7504                           
  7505 ;; *************** function _scale *****************
  7506 ;; Defined at:
  7507 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  7508 ;; Parameters:    Size  Location     Type
  7509 ;;  scl             1    wreg     char 
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;  scl             1   62[BANK0 ] char 
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  4   54[BANK0 ] char 
  7514 ;; Registers used:
  7515 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7521 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7522 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7524 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7525 ;;Total ram usage:        9 bytes
  7526 ;; Hardware stack levels used:    1
  7527 ;; Hardware stack levels required when called:    4
  7528 ;; This function calls:
  7529 ;;		___awdiv
  7530 ;;		___awmod
  7531 ;;		___flmul
  7532 ;; This function is called by:
  7533 ;;		_sprintf
  7534 ;; This function uses a non-reentrant model
  7535 ;;
  7536                           
  7537                           	psect	text9
  7538  01286A                     __ptext9:
  7539                           	opt stack 0
  7540  01286A                     _scale:
  7541                           	opt stack 24
  7542                           
  7543                           ; BSR set to: 1
  7544                           ;incstack = 0
  7545                           ;scale@scl stored from wreg
  7546  01286A  0100               	movlb	0	; () banked
  7547  01286C  6F9E               	movwf	scale@scl& (0+255),b
  7548                           
  7549                           ;doprnt.c: 428: if(scl < 0) {
  7550  01286E  0100               	movlb	0	; () banked
  7551  012870  AF9E               	btfss	scale@scl& (0+255),7,b
  7552  012872  D145               	goto	l7960
  7553                           
  7554                           ; BSR set to: 0
  7555                           ;doprnt.c: 429: scl = -scl;
  7556  012874  0100               	movlb	0	; () banked
  7557  012876  6D9E               	negf	scale@scl& (0+255),b
  7558                           
  7559                           ;doprnt.c: 430: if(scl>=110)
  7560  012878  0100               	movlb	0	; () banked
  7561  01287A  519E               	movf	scale@scl& (0+255),w,b
  7562  01287C  0A80               	xorlw	128
  7563  01287E  0F12               	addlw	-238
  7564  012880  A0D8               	btfss	status,0,c
  7565  012882  D0BB               	goto	l7950
  7566                           
  7567                           ; BSR set to: 0
  7568                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7569  012884  0E00               	movlw	0
  7570  012886  0100               	movlb	0	; () banked
  7571  012888  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7572  01288A  0E0A               	movlw	10
  7573  01288C  6F77               	movwf	___awdiv@divisor& (0+255),b
  7574  01288E  0E00               	movlw	0
  7575  012890  0100               	movlb	0	; () banked
  7576  012892  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  7577  012894  0E64               	movlw	100
  7578  012896  6F71               	movwf	___awmod@divisor& (0+255),b
  7579  012898  0100               	movlb	0	; () banked
  7580  01289A  519E               	movf	scale@scl& (0+255),w,b
  7581  01289C  0100               	movlb	0	; () banked
  7582  01289E  6F6F               	movwf	___awmod@dividend& (0+255),b
  7583  0128A0  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  7584  0128A2  BF6F               	btfsc	___awmod@dividend& (0+255),7,b
  7585  0128A4  0770               	decf	(___awmod@dividend+1)& (0+255),f,b
  7586  0128A6  EC56  F0AC         	call	___awmod	;wreg free
  7587  0128AA  C06F  F075         	movff	?___awmod,___awdiv@dividend
  7588  0128AE  C070  F076         	movff	?___awmod+1,___awdiv@dividend+1
  7589  0128B2  ECE7  F0AA         	call	___awdiv	;wreg free
  7590  0128B6  0100               	movlb	0	; () banked
  7591  0128B8  90D8               	bcf	status,0,c
  7592  0128BA  3775               	rlcf	?___awdiv& (0+255),f,b
  7593  0128BC  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7594  0128BE  0100               	movlb	0	; () banked
  7595  0128C0  90D8               	bcf	status,0,c
  7596  0128C2  3775               	rlcf	?___awdiv& (0+255),f,b
  7597  0128C4  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7598  0128C6  0E24               	movlw	36
  7599  0128C8  0100               	movlb	0	; () banked
  7600  0128CA  2775               	addwf	?___awdiv& (0+255),f,b
  7601  0128CC  0E00               	movlw	0
  7602  0128CE  0100               	movlb	0	; () banked
  7603  0128D0  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  7604  0128D2  0ECF               	movlw	low __npowers_
  7605  0128D4  0100               	movlb	0	; () banked
  7606  0128D6  2575               	addwf	?___awdiv& (0+255),w,b
  7607  0128D8  6EF6               	movwf	tblptrl,c
  7608  0128DA  0EFE               	movlw	high __npowers_
  7609  0128DC  0100               	movlb	0	; () banked
  7610  0128DE  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  7611  0128E0  6EF7               	movwf	tblptrh,c
  7612  0128E2                     	if	1	;There are 3 active tblptr bytes
  7613  0128E2  6AF8               	clrf	tblptru,c
  7614  0128E4  0E00               	movlw	low (__mediumconst shr (0+16))
  7615  0128E6  22F8               	addwfc	tblptru,f,c
  7616  0128E8                     	endif
  7617  0128E8  0009               	tblrd		*+
  7618  0128EA  CFF5 F081          	movff	tablat,___flmul@a
  7619  0128EE  0009               	tblrd		*+
  7620  0128F0  CFF5 F082          	movff	tablat,___flmul@a+1
  7621  0128F4  0009               	tblrd		*+
  7622  0128F6  CFF5 F083          	movff	tablat,___flmul@a+2
  7623  0128FA  000A               	tblrd		*-
  7624  0128FC  CFF5 F084          	movff	tablat,___flmul@a+3
  7625  012900  0E00               	movlw	0
  7626  012902  0100               	movlb	0	; () banked
  7627  012904  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7628  012906  0E64               	movlw	100
  7629  012908  6F77               	movwf	___awdiv@divisor& (0+255),b
  7630  01290A  0100               	movlb	0	; () banked
  7631  01290C  519E               	movf	scale@scl& (0+255),w,b
  7632  01290E  0100               	movlb	0	; () banked
  7633  012910  6F75               	movwf	___awdiv@dividend& (0+255),b
  7634  012912  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  7635  012914  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  7636  012916  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7637  012918  ECE7  F0AA         	call	___awdiv	;wreg free
  7638  01291C  0100               	movlb	0	; () banked
  7639  01291E  90D8               	bcf	status,0,c
  7640  012920  3775               	rlcf	?___awdiv& (0+255),f,b
  7641  012922  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7642  012924  0100               	movlb	0	; () banked
  7643  012926  90D8               	bcf	status,0,c
  7644  012928  3775               	rlcf	?___awdiv& (0+255),f,b
  7645  01292A  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7646  01292C  0E48               	movlw	72
  7647  01292E  0100               	movlb	0	; () banked
  7648  012930  2775               	addwf	?___awdiv& (0+255),f,b
  7649  012932  0E00               	movlw	0
  7650  012934  0100               	movlb	0	; () banked
  7651  012936  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  7652  012938  0ECF               	movlw	low __npowers_
  7653  01293A  0100               	movlb	0	; () banked
  7654  01293C  2575               	addwf	?___awdiv& (0+255),w,b
  7655  01293E  6EF6               	movwf	tblptrl,c
  7656  012940  0EFE               	movlw	high __npowers_
  7657  012942  0100               	movlb	0	; () banked
  7658  012944  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  7659  012946  6EF7               	movwf	tblptrh,c
  7660  012948                     	if	1	;There are 3 active tblptr bytes
  7661  012948  6AF8               	clrf	tblptru,c
  7662  01294A  0E00               	movlw	low (__mediumconst shr (0+16))
  7663  01294C  22F8               	addwfc	tblptru,f,c
  7664  01294E                     	endif
  7665  01294E  0009               	tblrd		*+
  7666  012950  CFF5 F07D          	movff	tablat,___flmul@b
  7667  012954  0009               	tblrd		*+
  7668  012956  CFF5 F07E          	movff	tablat,___flmul@b+1
  7669  01295A  0009               	tblrd		*+
  7670  01295C  CFF5 F07F          	movff	tablat,___flmul@b+2
  7671  012960  000A               	tblrd		*-
  7672  012962  CFF5 F080          	movff	tablat,___flmul@b+3
  7673  012966  EC9C  F09B         	call	___flmul	;wreg free
  7674  01296A  C07D  F09A         	movff	?___flmul,_scale$4221
  7675  01296E  C07E  F09B         	movff	?___flmul+1,_scale$4221+1
  7676  012972  C07F  F09C         	movff	?___flmul+2,_scale$4221+2
  7677  012976  C080  F09D         	movff	?___flmul+3,_scale$4221+3
  7678                           
  7679                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7680  01297A  C09A  F07D         	movff	_scale$4221,___flmul@b
  7681  01297E  C09B  F07E         	movff	_scale$4221+1,___flmul@b+1
  7682  012982  C09C  F07F         	movff	_scale$4221+2,___flmul@b+2
  7683  012986  C09D  F080         	movff	_scale$4221+3,___flmul@b+3
  7684  01298A  0E00               	movlw	0
  7685  01298C  0100               	movlb	0	; () banked
  7686  01298E  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  7687  012990  0E0A               	movlw	10
  7688  012992  6F71               	movwf	___awmod@divisor& (0+255),b
  7689  012994  0100               	movlb	0	; () banked
  7690  012996  519E               	movf	scale@scl& (0+255),w,b
  7691  012998  0100               	movlb	0	; () banked
  7692  01299A  6F6F               	movwf	___awmod@dividend& (0+255),b
  7693  01299C  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  7694  01299E  BF6F               	btfsc	___awmod@dividend& (0+255),7,b
  7695  0129A0  0770               	decf	(___awmod@dividend+1)& (0+255),f,b
  7696  0129A2  EC56  F0AC         	call	___awmod	;wreg free
  7697  0129A6  0100               	movlb	0	; () banked
  7698  0129A8  90D8               	bcf	status,0,c
  7699  0129AA  376F               	rlcf	?___awmod& (0+255),f,b
  7700  0129AC  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7701  0129AE  0100               	movlb	0	; () banked
  7702  0129B0  90D8               	bcf	status,0,c
  7703  0129B2  376F               	rlcf	?___awmod& (0+255),f,b
  7704  0129B4  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7705  0129B6  0ECF               	movlw	low __npowers_
  7706  0129B8  0100               	movlb	0	; () banked
  7707  0129BA  256F               	addwf	?___awmod& (0+255),w,b
  7708  0129BC  6EF6               	movwf	tblptrl,c
  7709  0129BE  0EFE               	movlw	high __npowers_
  7710  0129C0  0100               	movlb	0	; () banked
  7711  0129C2  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  7712  0129C4  6EF7               	movwf	tblptrh,c
  7713  0129C6                     	if	1	;There are 3 active tblptr bytes
  7714  0129C6  6AF8               	clrf	tblptru,c
  7715  0129C8  0E00               	movlw	low (__mediumconst shr (0+16))
  7716  0129CA  22F8               	addwfc	tblptru,f,c
  7717  0129CC                     	endif
  7718  0129CC  0009               	tblrd		*+
  7719  0129CE  CFF5 F081          	movff	tablat,___flmul@a
  7720  0129D2  0009               	tblrd		*+
  7721  0129D4  CFF5 F082          	movff	tablat,___flmul@a+1
  7722  0129D8  0009               	tblrd		*+
  7723  0129DA  CFF5 F083          	movff	tablat,___flmul@a+2
  7724  0129DE  000A               	tblrd		*-
  7725  0129E0  CFF5 F084          	movff	tablat,___flmul@a+3
  7726  0129E4  EC9C  F09B         	call	___flmul	;wreg free
  7727  0129E8  C07D  F096         	movff	?___flmul,?_scale
  7728  0129EC  C07E  F097         	movff	?___flmul+1,?_scale+1
  7729  0129F0  C07F  F098         	movff	?___flmul+2,?_scale+2
  7730  0129F4  C080  F099         	movff	?___flmul+3,?_scale+3
  7731  0129F8  0012               	return	
  7732  0129FA                     l7950:
  7733                           
  7734                           ;doprnt.c: 432: else if(scl > 10)
  7735  0129FA  0100               	movlb	0	; () banked
  7736  0129FC  519E               	movf	scale@scl& (0+255),w,b
  7737  0129FE  0A80               	xorlw	128
  7738  012A00  0F75               	addlw	-139
  7739  012A02  A0D8               	btfss	status,0,c
  7740  012A04  D063               	goto	l7956
  7741                           
  7742                           ; BSR set to: 0
  7743                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7744  012A06  0E00               	movlw	0
  7745  012A08  0100               	movlb	0	; () banked
  7746  012A0A  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7747  012A0C  0E0A               	movlw	10
  7748  012A0E  6F77               	movwf	___awdiv@divisor& (0+255),b
  7749  012A10  0100               	movlb	0	; () banked
  7750  012A12  519E               	movf	scale@scl& (0+255),w,b
  7751  012A14  0100               	movlb	0	; () banked
  7752  012A16  6F75               	movwf	___awdiv@dividend& (0+255),b
  7753  012A18  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  7754  012A1A  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  7755  012A1C  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7756  012A1E  ECE7  F0AA         	call	___awdiv	;wreg free
  7757  012A22  0100               	movlb	0	; () banked
  7758  012A24  90D8               	bcf	status,0,c
  7759  012A26  3775               	rlcf	?___awdiv& (0+255),f,b
  7760  012A28  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7761  012A2A  0100               	movlb	0	; () banked
  7762  012A2C  90D8               	bcf	status,0,c
  7763  012A2E  3775               	rlcf	?___awdiv& (0+255),f,b
  7764  012A30  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7765  012A32  0E24               	movlw	36
  7766  012A34  0100               	movlb	0	; () banked
  7767  012A36  2775               	addwf	?___awdiv& (0+255),f,b
  7768  012A38  0E00               	movlw	0
  7769  012A3A  0100               	movlb	0	; () banked
  7770  012A3C  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  7771  012A3E  0ECF               	movlw	low __npowers_
  7772  012A40  0100               	movlb	0	; () banked
  7773  012A42  2575               	addwf	?___awdiv& (0+255),w,b
  7774  012A44  6EF6               	movwf	tblptrl,c
  7775  012A46  0EFE               	movlw	high __npowers_
  7776  012A48  0100               	movlb	0	; () banked
  7777  012A4A  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  7778  012A4C  6EF7               	movwf	tblptrh,c
  7779  012A4E                     	if	1	;There are 3 active tblptr bytes
  7780  012A4E  6AF8               	clrf	tblptru,c
  7781  012A50  0E00               	movlw	low (__mediumconst shr (0+16))
  7782  012A52  22F8               	addwfc	tblptru,f,c
  7783  012A54                     	endif
  7784  012A54  0009               	tblrd		*+
  7785  012A56  CFF5 F07D          	movff	tablat,___flmul@b
  7786  012A5A  0009               	tblrd		*+
  7787  012A5C  CFF5 F07E          	movff	tablat,___flmul@b+1
  7788  012A60  0009               	tblrd		*+
  7789  012A62  CFF5 F07F          	movff	tablat,___flmul@b+2
  7790  012A66  000A               	tblrd		*-
  7791  012A68  CFF5 F080          	movff	tablat,___flmul@b+3
  7792  012A6C  0E00               	movlw	0
  7793  012A6E  0100               	movlb	0	; () banked
  7794  012A70  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  7795  012A72  0E0A               	movlw	10
  7796  012A74  6F71               	movwf	___awmod@divisor& (0+255),b
  7797  012A76  0100               	movlb	0	; () banked
  7798  012A78  519E               	movf	scale@scl& (0+255),w,b
  7799  012A7A  0100               	movlb	0	; () banked
  7800  012A7C  6F6F               	movwf	___awmod@dividend& (0+255),b
  7801  012A7E  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  7802  012A80  BF6F               	btfsc	___awmod@dividend& (0+255),7,b
  7803  012A82  0770               	decf	(___awmod@dividend+1)& (0+255),f,b
  7804  012A84  EC56  F0AC         	call	___awmod	;wreg free
  7805  012A88  0100               	movlb	0	; () banked
  7806  012A8A  90D8               	bcf	status,0,c
  7807  012A8C  376F               	rlcf	?___awmod& (0+255),f,b
  7808  012A8E  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7809  012A90  0100               	movlb	0	; () banked
  7810  012A92  90D8               	bcf	status,0,c
  7811  012A94  376F               	rlcf	?___awmod& (0+255),f,b
  7812  012A96  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  7813  012A98  0ECF               	movlw	low __npowers_
  7814  012A9A  0100               	movlb	0	; () banked
  7815  012A9C  256F               	addwf	?___awmod& (0+255),w,b
  7816  012A9E  6EF6               	movwf	tblptrl,c
  7817  012AA0  0EFE               	movlw	high __npowers_
  7818  012AA2  0100               	movlb	0	; () banked
  7819  012AA4  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  7820  012AA6  6EF7               	movwf	tblptrh,c
  7821  012AA8                     	if	1	;There are 3 active tblptr bytes
  7822  012AA8  6AF8               	clrf	tblptru,c
  7823  012AAA  0E00               	movlw	low (__mediumconst shr (0+16))
  7824  012AAC  22F8               	addwfc	tblptru,f,c
  7825  012AAE                     	endif
  7826  012AAE  0009               	tblrd		*+
  7827  012AB0  CFF5 F081          	movff	tablat,___flmul@a
  7828  012AB4  0009               	tblrd		*+
  7829  012AB6  CFF5 F082          	movff	tablat,___flmul@a+1
  7830  012ABA  0009               	tblrd		*+
  7831  012ABC  CFF5 F083          	movff	tablat,___flmul@a+2
  7832  012AC0  000A               	tblrd		*-
  7833  012AC2  CFF5 F084          	movff	tablat,___flmul@a+3
  7834  012AC6  EC9C  F09B         	call	___flmul	;wreg free
  7835  012ACA  D78E               	goto	L5
  7836  012ACC                     l7956:
  7837                           
  7838                           ;doprnt.c: 434: return _npowers_[scl];
  7839  012ACC  0100               	movlb	0	; () banked
  7840  012ACE  519E               	movf	scale@scl& (0+255),w,b
  7841  012AD0  0D04               	mullw	4
  7842  012AD2  0ECF               	movlw	low __npowers_
  7843  012AD4  24F3               	addwf	prodl,w,c
  7844  012AD6  6EF6               	movwf	tblptrl,c
  7845  012AD8  0EFE               	movlw	high __npowers_
  7846  012ADA  20F4               	addwfc	prodh,w,c
  7847  012ADC  6EF7               	movwf	tblptrh,c
  7848  012ADE                     	if	1	;There are 3 active tblptr bytes
  7849  012ADE  6AF8               	clrf	tblptru,c
  7850  012AE0  0E00               	movlw	low (__mediumconst shr (0+16))
  7851  012AE2  22F8               	addwfc	tblptru,f,c
  7852  012AE4                     	endif
  7853  012AE4  0009               	tblrd		*+
  7854  012AE6  CFF5 F096          	movff	tablat,?_scale
  7855  012AEA  0009               	tblrd		*+
  7856  012AEC  CFF5 F097          	movff	tablat,?_scale+1
  7857  012AF0  0009               	tblrd		*+
  7858  012AF2  CFF5 F098          	movff	tablat,?_scale+2
  7859  012AF6  000A               	tblrd		*-
  7860  012AF8  CFF5 F099          	movff	tablat,?_scale+3
  7861                           
  7862                           ; BSR set to: 0
  7863  012AFC  0012               	return	
  7864  012AFE                     l7960:
  7865                           
  7866                           ; BSR set to: 0
  7867                           ;doprnt.c: 435: }
  7868                           ;doprnt.c: 436: if(scl>=110)
  7869  012AFE  0100               	movlb	0	; () banked
  7870  012B00  519E               	movf	scale@scl& (0+255),w,b
  7871  012B02  0A80               	xorlw	128
  7872  012B04  0F12               	addlw	-238
  7873  012B06  A0D8               	btfss	status,0,c
  7874  012B08  D0BB               	goto	l7968
  7875                           
  7876                           ; BSR set to: 0
  7877                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7878  012B0A  0E00               	movlw	0
  7879  012B0C  0100               	movlb	0	; () banked
  7880  012B0E  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7881  012B10  0E0A               	movlw	10
  7882  012B12  6F77               	movwf	___awdiv@divisor& (0+255),b
  7883  012B14  0E00               	movlw	0
  7884  012B16  0100               	movlb	0	; () banked
  7885  012B18  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  7886  012B1A  0E64               	movlw	100
  7887  012B1C  6F71               	movwf	___awmod@divisor& (0+255),b
  7888  012B1E  0100               	movlb	0	; () banked
  7889  012B20  519E               	movf	scale@scl& (0+255),w,b
  7890  012B22  0100               	movlb	0	; () banked
  7891  012B24  6F6F               	movwf	___awmod@dividend& (0+255),b
  7892  012B26  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  7893  012B28  BF6F               	btfsc	___awmod@dividend& (0+255),7,b
  7894  012B2A  0770               	decf	(___awmod@dividend+1)& (0+255),f,b
  7895  012B2C  EC56  F0AC         	call	___awmod	;wreg free
  7896  012B30  C06F  F075         	movff	?___awmod,___awdiv@dividend
  7897  012B34  C070  F076         	movff	?___awmod+1,___awdiv@dividend+1
  7898  012B38  ECE7  F0AA         	call	___awdiv	;wreg free
  7899  012B3C  0100               	movlb	0	; () banked
  7900  012B3E  90D8               	bcf	status,0,c
  7901  012B40  3775               	rlcf	?___awdiv& (0+255),f,b
  7902  012B42  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7903  012B44  0100               	movlb	0	; () banked
  7904  012B46  90D8               	bcf	status,0,c
  7905  012B48  3775               	rlcf	?___awdiv& (0+255),f,b
  7906  012B4A  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7907  012B4C  0E24               	movlw	36
  7908  012B4E  0100               	movlb	0	; () banked
  7909  012B50  2775               	addwf	?___awdiv& (0+255),f,b
  7910  012B52  0E00               	movlw	0
  7911  012B54  0100               	movlb	0	; () banked
  7912  012B56  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  7913  012B58  0E03               	movlw	low __powers_
  7914  012B5A  0100               	movlb	0	; () banked
  7915  012B5C  2575               	addwf	?___awdiv& (0+255),w,b
  7916  012B5E  6EF6               	movwf	tblptrl,c
  7917  012B60  0EFF               	movlw	high __powers_
  7918  012B62  0100               	movlb	0	; () banked
  7919  012B64  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  7920  012B66  6EF7               	movwf	tblptrh,c
  7921  012B68                     	if	1	;There are 3 active tblptr bytes
  7922  012B68  6AF8               	clrf	tblptru,c
  7923  012B6A  0E00               	movlw	low (__mediumconst shr (0+16))
  7924  012B6C  22F8               	addwfc	tblptru,f,c
  7925  012B6E                     	endif
  7926  012B6E  0009               	tblrd		*+
  7927  012B70  CFF5 F081          	movff	tablat,___flmul@a
  7928  012B74  0009               	tblrd		*+
  7929  012B76  CFF5 F082          	movff	tablat,___flmul@a+1
  7930  012B7A  0009               	tblrd		*+
  7931  012B7C  CFF5 F083          	movff	tablat,___flmul@a+2
  7932  012B80  000A               	tblrd		*-
  7933  012B82  CFF5 F084          	movff	tablat,___flmul@a+3
  7934  012B86  0E00               	movlw	0
  7935  012B88  0100               	movlb	0	; () banked
  7936  012B8A  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  7937  012B8C  0E64               	movlw	100
  7938  012B8E  6F77               	movwf	___awdiv@divisor& (0+255),b
  7939  012B90  0100               	movlb	0	; () banked
  7940  012B92  519E               	movf	scale@scl& (0+255),w,b
  7941  012B94  0100               	movlb	0	; () banked
  7942  012B96  6F75               	movwf	___awdiv@dividend& (0+255),b
  7943  012B98  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  7944  012B9A  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  7945  012B9C  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7946  012B9E  ECE7  F0AA         	call	___awdiv	;wreg free
  7947  012BA2  0100               	movlb	0	; () banked
  7948  012BA4  90D8               	bcf	status,0,c
  7949  012BA6  3775               	rlcf	?___awdiv& (0+255),f,b
  7950  012BA8  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7951  012BAA  0100               	movlb	0	; () banked
  7952  012BAC  90D8               	bcf	status,0,c
  7953  012BAE  3775               	rlcf	?___awdiv& (0+255),f,b
  7954  012BB0  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  7955  012BB2  0E48               	movlw	72
  7956  012BB4  0100               	movlb	0	; () banked
  7957  012BB6  2775               	addwf	?___awdiv& (0+255),f,b
  7958  012BB8  0E00               	movlw	0
  7959  012BBA  0100               	movlb	0	; () banked
  7960  012BBC  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  7961  012BBE  0E03               	movlw	low __powers_
  7962  012BC0  0100               	movlb	0	; () banked
  7963  012BC2  2575               	addwf	?___awdiv& (0+255),w,b
  7964  012BC4  6EF6               	movwf	tblptrl,c
  7965  012BC6  0EFF               	movlw	high __powers_
  7966  012BC8  0100               	movlb	0	; () banked
  7967  012BCA  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  7968  012BCC  6EF7               	movwf	tblptrh,c
  7969  012BCE                     	if	1	;There are 3 active tblptr bytes
  7970  012BCE  6AF8               	clrf	tblptru,c
  7971  012BD0  0E00               	movlw	low (__mediumconst shr (0+16))
  7972  012BD2  22F8               	addwfc	tblptru,f,c
  7973  012BD4                     	endif
  7974  012BD4  0009               	tblrd		*+
  7975  012BD6  CFF5 F07D          	movff	tablat,___flmul@b
  7976  012BDA  0009               	tblrd		*+
  7977  012BDC  CFF5 F07E          	movff	tablat,___flmul@b+1
  7978  012BE0  0009               	tblrd		*+
  7979  012BE2  CFF5 F07F          	movff	tablat,___flmul@b+2
  7980  012BE6  000A               	tblrd		*-
  7981  012BE8  CFF5 F080          	movff	tablat,___flmul@b+3
  7982  012BEC  EC9C  F09B         	call	___flmul	;wreg free
  7983  012BF0  C07D  F09A         	movff	?___flmul,_scale$4221
  7984  012BF4  C07E  F09B         	movff	?___flmul+1,_scale$4221+1
  7985  012BF8  C07F  F09C         	movff	?___flmul+2,_scale$4221+2
  7986  012BFC  C080  F09D         	movff	?___flmul+3,_scale$4221+3
  7987                           
  7988                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7989  012C00  C09A  F07D         	movff	_scale$4221,___flmul@b
  7990  012C04  C09B  F07E         	movff	_scale$4221+1,___flmul@b+1
  7991  012C08  C09C  F07F         	movff	_scale$4221+2,___flmul@b+2
  7992  012C0C  C09D  F080         	movff	_scale$4221+3,___flmul@b+3
  7993  012C10  0E00               	movlw	0
  7994  012C12  0100               	movlb	0	; () banked
  7995  012C14  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  7996  012C16  0E0A               	movlw	10
  7997  012C18  6F71               	movwf	___awmod@divisor& (0+255),b
  7998  012C1A  0100               	movlb	0	; () banked
  7999  012C1C  519E               	movf	scale@scl& (0+255),w,b
  8000  012C1E  0100               	movlb	0	; () banked
  8001  012C20  6F6F               	movwf	___awmod@dividend& (0+255),b
  8002  012C22  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  8003  012C24  BF6F               	btfsc	___awmod@dividend& (0+255),7,b
  8004  012C26  0770               	decf	(___awmod@dividend+1)& (0+255),f,b
  8005  012C28  EC56  F0AC         	call	___awmod	;wreg free
  8006  012C2C  0100               	movlb	0	; () banked
  8007  012C2E  90D8               	bcf	status,0,c
  8008  012C30  376F               	rlcf	?___awmod& (0+255),f,b
  8009  012C32  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  8010  012C34  0100               	movlb	0	; () banked
  8011  012C36  90D8               	bcf	status,0,c
  8012  012C38  376F               	rlcf	?___awmod& (0+255),f,b
  8013  012C3A  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  8014  012C3C  0E03               	movlw	low __powers_
  8015  012C3E  0100               	movlb	0	; () banked
  8016  012C40  256F               	addwf	?___awmod& (0+255),w,b
  8017  012C42  6EF6               	movwf	tblptrl,c
  8018  012C44  0EFF               	movlw	high __powers_
  8019  012C46  0100               	movlb	0	; () banked
  8020  012C48  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  8021  012C4A  6EF7               	movwf	tblptrh,c
  8022  012C4C                     	if	1	;There are 3 active tblptr bytes
  8023  012C4C  6AF8               	clrf	tblptru,c
  8024  012C4E  0E00               	movlw	low (__mediumconst shr (0+16))
  8025  012C50  22F8               	addwfc	tblptru,f,c
  8026  012C52                     	endif
  8027  012C52  0009               	tblrd		*+
  8028  012C54  CFF5 F081          	movff	tablat,___flmul@a
  8029  012C58  0009               	tblrd		*+
  8030  012C5A  CFF5 F082          	movff	tablat,___flmul@a+1
  8031  012C5E  0009               	tblrd		*+
  8032  012C60  CFF5 F083          	movff	tablat,___flmul@a+2
  8033  012C64  000A               	tblrd		*-
  8034  012C66  CFF5 F084          	movff	tablat,___flmul@a+3
  8035  012C6A  EC9C  F09B         	call	___flmul	;wreg free
  8036  012C6E  C07D  F096         	movff	?___flmul,?_scale
  8037  012C72  C07E  F097         	movff	?___flmul+1,?_scale+1
  8038  012C76  C07F  F098         	movff	?___flmul+2,?_scale+2
  8039  012C7A  C080  F099         	movff	?___flmul+3,?_scale+3
  8040  012C7E  0012               	return	
  8041  012C80                     l7968:
  8042                           
  8043                           ;doprnt.c: 438: else if(scl > 10)
  8044  012C80  0100               	movlb	0	; () banked
  8045  012C82  519E               	movf	scale@scl& (0+255),w,b
  8046  012C84  0A80               	xorlw	128
  8047  012C86  0F75               	addlw	-139
  8048  012C88  A0D8               	btfss	status,0,c
  8049  012C8A  D063               	goto	l7974
  8050                           
  8051                           ; BSR set to: 0
  8052                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8053  012C8C  0E00               	movlw	0
  8054  012C8E  0100               	movlb	0	; () banked
  8055  012C90  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8056  012C92  0E0A               	movlw	10
  8057  012C94  6F77               	movwf	___awdiv@divisor& (0+255),b
  8058  012C96  0100               	movlb	0	; () banked
  8059  012C98  519E               	movf	scale@scl& (0+255),w,b
  8060  012C9A  0100               	movlb	0	; () banked
  8061  012C9C  6F75               	movwf	___awdiv@dividend& (0+255),b
  8062  012C9E  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8063  012CA0  BF75               	btfsc	___awdiv@dividend& (0+255),7,b
  8064  012CA2  0776               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8065  012CA4  ECE7  F0AA         	call	___awdiv	;wreg free
  8066  012CA8  0100               	movlb	0	; () banked
  8067  012CAA  90D8               	bcf	status,0,c
  8068  012CAC  3775               	rlcf	?___awdiv& (0+255),f,b
  8069  012CAE  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  8070  012CB0  0100               	movlb	0	; () banked
  8071  012CB2  90D8               	bcf	status,0,c
  8072  012CB4  3775               	rlcf	?___awdiv& (0+255),f,b
  8073  012CB6  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  8074  012CB8  0E24               	movlw	36
  8075  012CBA  0100               	movlb	0	; () banked
  8076  012CBC  2775               	addwf	?___awdiv& (0+255),f,b
  8077  012CBE  0E00               	movlw	0
  8078  012CC0  0100               	movlb	0	; () banked
  8079  012CC2  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  8080  012CC4  0E03               	movlw	low __powers_
  8081  012CC6  0100               	movlb	0	; () banked
  8082  012CC8  2575               	addwf	?___awdiv& (0+255),w,b
  8083  012CCA  6EF6               	movwf	tblptrl,c
  8084  012CCC  0EFF               	movlw	high __powers_
  8085  012CCE  0100               	movlb	0	; () banked
  8086  012CD0  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8087  012CD2  6EF7               	movwf	tblptrh,c
  8088  012CD4                     	if	1	;There are 3 active tblptr bytes
  8089  012CD4  6AF8               	clrf	tblptru,c
  8090  012CD6  0E00               	movlw	low (__mediumconst shr (0+16))
  8091  012CD8  22F8               	addwfc	tblptru,f,c
  8092  012CDA                     	endif
  8093  012CDA  0009               	tblrd		*+
  8094  012CDC  CFF5 F07D          	movff	tablat,___flmul@b
  8095  012CE0  0009               	tblrd		*+
  8096  012CE2  CFF5 F07E          	movff	tablat,___flmul@b+1
  8097  012CE6  0009               	tblrd		*+
  8098  012CE8  CFF5 F07F          	movff	tablat,___flmul@b+2
  8099  012CEC  000A               	tblrd		*-
  8100  012CEE  CFF5 F080          	movff	tablat,___flmul@b+3
  8101  012CF2  0E00               	movlw	0
  8102  012CF4  0100               	movlb	0	; () banked
  8103  012CF6  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  8104  012CF8  0E0A               	movlw	10
  8105  012CFA  6F71               	movwf	___awmod@divisor& (0+255),b
  8106  012CFC  0100               	movlb	0	; () banked
  8107  012CFE  519E               	movf	scale@scl& (0+255),w,b
  8108  012D00  0100               	movlb	0	; () banked
  8109  012D02  6F6F               	movwf	___awmod@dividend& (0+255),b
  8110  012D04  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  8111  012D06  BF6F               	btfsc	___awmod@dividend& (0+255),7,b
  8112  012D08  0770               	decf	(___awmod@dividend+1)& (0+255),f,b
  8113  012D0A  EC56  F0AC         	call	___awmod	;wreg free
  8114  012D0E  0100               	movlb	0	; () banked
  8115  012D10  90D8               	bcf	status,0,c
  8116  012D12  376F               	rlcf	?___awmod& (0+255),f,b
  8117  012D14  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  8118  012D16  0100               	movlb	0	; () banked
  8119  012D18  90D8               	bcf	status,0,c
  8120  012D1A  376F               	rlcf	?___awmod& (0+255),f,b
  8121  012D1C  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  8122  012D1E  0E03               	movlw	low __powers_
  8123  012D20  0100               	movlb	0	; () banked
  8124  012D22  256F               	addwf	?___awmod& (0+255),w,b
  8125  012D24  6EF6               	movwf	tblptrl,c
  8126  012D26  0EFF               	movlw	high __powers_
  8127  012D28  0100               	movlb	0	; () banked
  8128  012D2A  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  8129  012D2C  6EF7               	movwf	tblptrh,c
  8130  012D2E                     	if	1	;There are 3 active tblptr bytes
  8131  012D2E  6AF8               	clrf	tblptru,c
  8132  012D30  0E00               	movlw	low (__mediumconst shr (0+16))
  8133  012D32  22F8               	addwfc	tblptru,f,c
  8134  012D34                     	endif
  8135  012D34  0009               	tblrd		*+
  8136  012D36  CFF5 F081          	movff	tablat,___flmul@a
  8137  012D3A  0009               	tblrd		*+
  8138  012D3C  CFF5 F082          	movff	tablat,___flmul@a+1
  8139  012D40  0009               	tblrd		*+
  8140  012D42  CFF5 F083          	movff	tablat,___flmul@a+2
  8141  012D46  000A               	tblrd		*-
  8142  012D48  CFF5 F084          	movff	tablat,___flmul@a+3
  8143  012D4C  EC9C  F09B         	call	___flmul	;wreg free
  8144  012D50  D78E               	goto	L6
  8145  012D52                     l7974:
  8146                           
  8147                           ;doprnt.c: 440: return _powers_[scl];
  8148  012D52  0100               	movlb	0	; () banked
  8149  012D54  519E               	movf	scale@scl& (0+255),w,b
  8150  012D56  0D04               	mullw	4
  8151  012D58  0E03               	movlw	low __powers_
  8152  012D5A  24F3               	addwf	prodl,w,c
  8153  012D5C  6EF6               	movwf	tblptrl,c
  8154  012D5E  0EFF               	movlw	high __powers_
  8155  012D60  20F4               	addwfc	prodh,w,c
  8156  012D62  6EF7               	movwf	tblptrh,c
  8157  012D64                     	if	1	;There are 3 active tblptr bytes
  8158  012D64  6AF8               	clrf	tblptru,c
  8159  012D66  0E00               	movlw	low (__mediumconst shr (0+16))
  8160  012D68  22F8               	addwfc	tblptru,f,c
  8161  012D6A                     	endif
  8162  012D6A  0009               	tblrd		*+
  8163  012D6C  CFF5 F096          	movff	tablat,?_scale
  8164  012D70  0009               	tblrd		*+
  8165  012D72  CFF5 F097          	movff	tablat,?_scale+1
  8166  012D76  0009               	tblrd		*+
  8167  012D78  CFF5 F098          	movff	tablat,?_scale+2
  8168  012D7C  000A               	tblrd		*-
  8169  012D7E  CFF5 F099          	movff	tablat,?_scale+3
  8170  012D82  0012               	return	
  8171  012D84                     __end_of_scale:
  8172                           	opt stack 0
  8173                           tblptru	equ	0xFF8
  8174                           tblptrh	equ	0xFF7
  8175                           tblptrl	equ	0xFF6
  8176                           tablat	equ	0xFF5
  8177                           prodh	equ	0xFF4
  8178                           prodl	equ	0xFF3
  8179                           intcon	equ	0xFF2
  8180                           postinc0	equ	0xFEE
  8181                           wreg	equ	0xFE8
  8182                           indf2	equ	0xFDF
  8183                           postinc2	equ	0xFDE
  8184                           fsr2h	equ	0xFDA
  8185                           fsr2l	equ	0xFD9
  8186                           status	equ	0xFD8
  8187                           
  8188 ;; *************** function _isdigit *****************
  8189 ;; Defined at:
  8190 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  8191 ;; Parameters:    Size  Location     Type
  8192 ;;  c               1    wreg     unsigned char 
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;  c               1   17[BANK0 ] unsigned char 
  8195 ;; Return value:  Size  Location     Type
  8196 ;;		None               void
  8197 ;; Registers used:
  8198 ;;		wreg, status,2, status,0
  8199 ;; Tracked objects:
  8200 ;;		On entry : 0/0
  8201 ;;		On exit  : 0/0
  8202 ;;		Unchanged: 0/0
  8203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8205 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8206 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8207 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8208 ;;Total ram usage:        3 bytes
  8209 ;; Hardware stack levels used:    1
  8210 ;; Hardware stack levels required when called:    3
  8211 ;; This function calls:
  8212 ;;		Nothing
  8213 ;; This function is called by:
  8214 ;;		_sprintf
  8215 ;; This function uses a non-reentrant model
  8216 ;;
  8217                           
  8218                           	psect	text10
  8219  015D24                     __ptext10:
  8220                           	opt stack 0
  8221  015D24                     _isdigit:
  8222                           	opt stack 25
  8223                           
  8224                           ;incstack = 0
  8225                           ;isdigit@c stored from wreg
  8226  015D24  0100               	movlb	0	; () banked
  8227  015D26  6F71               	movwf	isdigit@c& (0+255),b
  8228  015D28  0E00               	movlw	0
  8229  015D2A  0100               	movlb	0	; () banked
  8230  015D2C  6F70               	movwf	_isdigit$3801& (0+255),b
  8231                           
  8232                           ; BSR set to: 0
  8233  015D2E  0E3A               	movlw	58
  8234  015D30  0100               	movlb	0	; () banked
  8235  015D32  6171               	cpfslt	isdigit@c& (0+255),b
  8236  015D34  D007               	goto	l7986
  8237                           
  8238                           ; BSR set to: 0
  8239  015D36  0E2F               	movlw	47
  8240  015D38  0100               	movlb	0	; () banked
  8241  015D3A  6571               	cpfsgt	isdigit@c& (0+255),b
  8242  015D3C  D003               	goto	l7986
  8243                           
  8244                           ; BSR set to: 0
  8245  015D3E  0E01               	movlw	1
  8246  015D40  0100               	movlb	0	; () banked
  8247  015D42  6F70               	movwf	_isdigit$3801& (0+255),b
  8248  015D44                     l7986:
  8249                           
  8250                           ; BSR set to: 0
  8251  015D44  C070  F06F         	movff	_isdigit$3801,??_isdigit
  8252  015D48  0100               	movlb	0	; () banked
  8253  015D4A  316F               	rrcf	??_isdigit& (0+255),w,b
  8254  015D4C  0012               	return	
  8255  015D4E                     __end_of_isdigit:
  8256                           	opt stack 0
  8257                           tblptru	equ	0xFF8
  8258                           tblptrh	equ	0xFF7
  8259                           tblptrl	equ	0xFF6
  8260                           tablat	equ	0xFF5
  8261                           prodh	equ	0xFF4
  8262                           prodl	equ	0xFF3
  8263                           intcon	equ	0xFF2
  8264                           postinc0	equ	0xFEE
  8265                           wreg	equ	0xFE8
  8266                           indf2	equ	0xFDF
  8267                           postinc2	equ	0xFDE
  8268                           fsr2h	equ	0xFDA
  8269                           fsr2l	equ	0xFD9
  8270                           status	equ	0xFD8
  8271                           
  8272 ;; *************** function _fround *****************
  8273 ;; Defined at:
  8274 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;  prec            1    wreg     unsigned char 
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;  prec            1   66[BANK0 ] unsigned char 
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  4   54[BANK0 ] unsigned char 
  8281 ;; Registers used:
  8282 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/0
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8288 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8289 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8291 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8292 ;;Total ram usage:       13 bytes
  8293 ;; Hardware stack levels used:    1
  8294 ;; Hardware stack levels required when called:    4
  8295 ;; This function calls:
  8296 ;;		___awdiv
  8297 ;;		___awmod
  8298 ;;		___flmul
  8299 ;; This function is called by:
  8300 ;;		_sprintf
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           	psect	text11
  8305  01433C                     __ptext11:
  8306                           	opt stack 0
  8307  01433C                     _fround:
  8308                           	opt stack 24
  8309                           
  8310                           ; BSR set to: 0
  8311                           ;incstack = 0
  8312                           ;fround@prec stored from wreg
  8313  01433C  0100               	movlb	0	; () banked
  8314  01433E  6FA2               	movwf	fround@prec& (0+255),b
  8315                           
  8316                           ;doprnt.c: 413: if(prec>=110)
  8317  014340  0E6D               	movlw	109
  8318  014342  0100               	movlb	0	; () banked
  8319  014344  65A2               	cpfsgt	fround@prec& (0+255),b
  8320  014346  D0CD               	goto	l7928
  8321                           
  8322                           ; BSR set to: 0
  8323                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8324  014348  0E00               	movlw	0
  8325  01434A  0100               	movlb	0	; () banked
  8326  01434C  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8327  01434E  0E0A               	movlw	10
  8328  014350  6F77               	movwf	___awdiv@divisor& (0+255),b
  8329  014352  0E00               	movlw	0
  8330  014354  0100               	movlb	0	; () banked
  8331  014356  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  8332  014358  0E64               	movlw	100
  8333  01435A  6F71               	movwf	___awmod@divisor& (0+255),b
  8334  01435C  C0A2  F06F         	movff	fround@prec,___awmod@dividend
  8335  014360  0100               	movlb	0	; () banked
  8336  014362  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  8337  014364  EC56  F0AC         	call	___awmod	;wreg free
  8338  014368  C06F  F075         	movff	?___awmod,___awdiv@dividend
  8339  01436C  C070  F076         	movff	?___awmod+1,___awdiv@dividend+1
  8340  014370  ECE7  F0AA         	call	___awdiv	;wreg free
  8341  014374  0100               	movlb	0	; () banked
  8342  014376  90D8               	bcf	status,0,c
  8343  014378  3775               	rlcf	?___awdiv& (0+255),f,b
  8344  01437A  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  8345  01437C  0100               	movlb	0	; () banked
  8346  01437E  90D8               	bcf	status,0,c
  8347  014380  3775               	rlcf	?___awdiv& (0+255),f,b
  8348  014382  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  8349  014384  0E24               	movlw	36
  8350  014386  0100               	movlb	0	; () banked
  8351  014388  2775               	addwf	?___awdiv& (0+255),f,b
  8352  01438A  0E00               	movlw	0
  8353  01438C  0100               	movlb	0	; () banked
  8354  01438E  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  8355  014390  0ECF               	movlw	low __npowers_
  8356  014392  0100               	movlb	0	; () banked
  8357  014394  2575               	addwf	?___awdiv& (0+255),w,b
  8358  014396  6EF6               	movwf	tblptrl,c
  8359  014398  0EFE               	movlw	high __npowers_
  8360  01439A  0100               	movlb	0	; () banked
  8361  01439C  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8362  01439E  6EF7               	movwf	tblptrh,c
  8363  0143A0                     	if	1	;There are 3 active tblptr bytes
  8364  0143A0  6AF8               	clrf	tblptru,c
  8365  0143A2  0E00               	movlw	low (__mediumconst shr (0+16))
  8366  0143A4  22F8               	addwfc	tblptru,f,c
  8367  0143A6                     	endif
  8368  0143A6  0009               	tblrd		*+
  8369  0143A8  CFF5 F081          	movff	tablat,___flmul@a
  8370  0143AC  0009               	tblrd		*+
  8371  0143AE  CFF5 F082          	movff	tablat,___flmul@a+1
  8372  0143B2  0009               	tblrd		*+
  8373  0143B4  CFF5 F083          	movff	tablat,___flmul@a+2
  8374  0143B8  000A               	tblrd		*-
  8375  0143BA  CFF5 F084          	movff	tablat,___flmul@a+3
  8376  0143BE  0E00               	movlw	0
  8377  0143C0  0100               	movlb	0	; () banked
  8378  0143C2  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8379  0143C4  0E64               	movlw	100
  8380  0143C6  6F77               	movwf	___awdiv@divisor& (0+255),b
  8381  0143C8  C0A2  F075         	movff	fround@prec,___awdiv@dividend
  8382  0143CC  0100               	movlb	0	; () banked
  8383  0143CE  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8384  0143D0  ECE7  F0AA         	call	___awdiv	;wreg free
  8385  0143D4  0100               	movlb	0	; () banked
  8386  0143D6  90D8               	bcf	status,0,c
  8387  0143D8  3775               	rlcf	?___awdiv& (0+255),f,b
  8388  0143DA  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  8389  0143DC  0100               	movlb	0	; () banked
  8390  0143DE  90D8               	bcf	status,0,c
  8391  0143E0  3775               	rlcf	?___awdiv& (0+255),f,b
  8392  0143E2  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  8393  0143E4  0E48               	movlw	72
  8394  0143E6  0100               	movlb	0	; () banked
  8395  0143E8  2775               	addwf	?___awdiv& (0+255),f,b
  8396  0143EA  0E00               	movlw	0
  8397  0143EC  0100               	movlb	0	; () banked
  8398  0143EE  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  8399  0143F0  0ECF               	movlw	low __npowers_
  8400  0143F2  0100               	movlb	0	; () banked
  8401  0143F4  2575               	addwf	?___awdiv& (0+255),w,b
  8402  0143F6  6EF6               	movwf	tblptrl,c
  8403  0143F8  0EFE               	movlw	high __npowers_
  8404  0143FA  0100               	movlb	0	; () banked
  8405  0143FC  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8406  0143FE  6EF7               	movwf	tblptrh,c
  8407  014400                     	if	1	;There are 3 active tblptr bytes
  8408  014400  6AF8               	clrf	tblptru,c
  8409  014402  0E00               	movlw	low (__mediumconst shr (0+16))
  8410  014404  22F8               	addwfc	tblptru,f,c
  8411  014406                     	endif
  8412  014406  0009               	tblrd		*+
  8413  014408  CFF5 F07D          	movff	tablat,___flmul@b
  8414  01440C  0009               	tblrd		*+
  8415  01440E  CFF5 F07E          	movff	tablat,___flmul@b+1
  8416  014412  0009               	tblrd		*+
  8417  014414  CFF5 F07F          	movff	tablat,___flmul@b+2
  8418  014418  000A               	tblrd		*-
  8419  01441A  CFF5 F080          	movff	tablat,___flmul@b+3
  8420  01441E  EC9C  F09B         	call	___flmul	;wreg free
  8421  014422  C07D  F09E         	movff	?___flmul,_fround$4219
  8422  014426  C07E  F09F         	movff	?___flmul+1,_fround$4219+1
  8423  01442A  C07F  F0A0         	movff	?___flmul+2,_fround$4219+2
  8424  01442E  C080  F0A1         	movff	?___flmul+3,_fround$4219+3
  8425                           
  8426                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8427  014432  0E00               	movlw	0
  8428  014434  0100               	movlb	0	; () banked
  8429  014436  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  8430  014438  0E0A               	movlw	10
  8431  01443A  6F71               	movwf	___awmod@divisor& (0+255),b
  8432  01443C  C0A2  F06F         	movff	fround@prec,___awmod@dividend
  8433  014440  0100               	movlb	0	; () banked
  8434  014442  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  8435  014444  EC56  F0AC         	call	___awmod	;wreg free
  8436  014448  0100               	movlb	0	; () banked
  8437  01444A  90D8               	bcf	status,0,c
  8438  01444C  376F               	rlcf	?___awmod& (0+255),f,b
  8439  01444E  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  8440  014450  0100               	movlb	0	; () banked
  8441  014452  90D8               	bcf	status,0,c
  8442  014454  376F               	rlcf	?___awmod& (0+255),f,b
  8443  014456  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  8444  014458  0ECF               	movlw	low __npowers_
  8445  01445A  0100               	movlb	0	; () banked
  8446  01445C  256F               	addwf	?___awmod& (0+255),w,b
  8447  01445E  6EF6               	movwf	tblptrl,c
  8448  014460  0EFE               	movlw	high __npowers_
  8449  014462  0100               	movlb	0	; () banked
  8450  014464  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  8451  014466  6EF7               	movwf	tblptrh,c
  8452  014468                     	if	1	;There are 3 active tblptr bytes
  8453  014468  6AF8               	clrf	tblptru,c
  8454  01446A  0E00               	movlw	low (__mediumconst shr (0+16))
  8455  01446C  22F8               	addwfc	tblptru,f,c
  8456  01446E                     	endif
  8457  01446E  0009               	tblrd		*+
  8458  014470  CFF5 F081          	movff	tablat,___flmul@a
  8459  014474  0009               	tblrd		*+
  8460  014476  CFF5 F082          	movff	tablat,___flmul@a+1
  8461  01447A  0009               	tblrd		*+
  8462  01447C  CFF5 F083          	movff	tablat,___flmul@a+2
  8463  014480  000A               	tblrd		*-
  8464  014482  CFF5 F084          	movff	tablat,___flmul@a+3
  8465  014486  C09E  F07D         	movff	_fround$4219,___flmul@b
  8466  01448A  C09F  F07E         	movff	_fround$4219+1,___flmul@b+1
  8467  01448E  C0A0  F07F         	movff	_fround$4219+2,___flmul@b+2
  8468  014492  C0A1  F080         	movff	_fround$4219+3,___flmul@b+3
  8469  014496  EC9C  F09B         	call	___flmul	;wreg free
  8470  01449A  C07D  F09A         	movff	?___flmul,_fround$4220
  8471  01449E  C07E  F09B         	movff	?___flmul+1,_fround$4220+1
  8472  0144A2  C07F  F09C         	movff	?___flmul+2,_fround$4220+2
  8473  0144A6  C080  F09D         	movff	?___flmul+3,_fround$4220+3
  8474                           
  8475                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8476  0144AA  C09A  F07D         	movff	_fround$4220,___flmul@b
  8477  0144AE  C09B  F07E         	movff	_fround$4220+1,___flmul@b+1
  8478  0144B2  C09C  F07F         	movff	_fround$4220+2,___flmul@b+2
  8479  0144B6  C09D  F080         	movff	_fround$4220+3,___flmul@b+3
  8480  0144BA  0E00               	movlw	0
  8481  0144BC  0100               	movlb	0	; () banked
  8482  0144BE  6F81               	movwf	___flmul@a& (0+255),b
  8483  0144C0  0E00               	movlw	0
  8484  0144C2  6F82               	movwf	(___flmul@a+1)& (0+255),b
  8485  0144C4  0E00               	movlw	0
  8486  0144C6  6F83               	movwf	(___flmul@a+2)& (0+255),b
  8487  0144C8  0E3F               	movlw	63
  8488  0144CA  6F84               	movwf	(___flmul@a+3)& (0+255),b
  8489  0144CC  EC9C  F09B         	call	___flmul	;wreg free
  8490  0144D0  C07D  F096         	movff	?___flmul,?_fround
  8491  0144D4  C07E  F097         	movff	?___flmul+1,?_fround+1
  8492  0144D8  C07F  F098         	movff	?___flmul+2,?_fround+2
  8493  0144DC  C080  F099         	movff	?___flmul+3,?_fround+3
  8494  0144E0  0012               	return	
  8495  0144E2                     l7928:
  8496                           
  8497                           ;doprnt.c: 415: else if(prec > 10)
  8498  0144E2  0E0A               	movlw	10
  8499  0144E4  0100               	movlb	0	; () banked
  8500  0144E6  65A2               	cpfsgt	fround@prec& (0+255),b
  8501  0144E8  D078               	goto	l7936
  8502                           
  8503                           ; BSR set to: 0
  8504                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8505  0144EA  0E00               	movlw	0
  8506  0144EC  0100               	movlb	0	; () banked
  8507  0144EE  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  8508  0144F0  0E0A               	movlw	10
  8509  0144F2  6F71               	movwf	___awmod@divisor& (0+255),b
  8510  0144F4  C0A2  F06F         	movff	fround@prec,___awmod@dividend
  8511  0144F8  0100               	movlb	0	; () banked
  8512  0144FA  6B70               	clrf	(___awmod@dividend+1)& (0+255),b
  8513  0144FC  EC56  F0AC         	call	___awmod	;wreg free
  8514  014500  0100               	movlb	0	; () banked
  8515  014502  90D8               	bcf	status,0,c
  8516  014504  376F               	rlcf	?___awmod& (0+255),f,b
  8517  014506  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  8518  014508  0100               	movlb	0	; () banked
  8519  01450A  90D8               	bcf	status,0,c
  8520  01450C  376F               	rlcf	?___awmod& (0+255),f,b
  8521  01450E  3770               	rlcf	(?___awmod+1)& (0+255),f,b
  8522  014510  0ECF               	movlw	low __npowers_
  8523  014512  0100               	movlb	0	; () banked
  8524  014514  256F               	addwf	?___awmod& (0+255),w,b
  8525  014516  6EF6               	movwf	tblptrl,c
  8526  014518  0EFE               	movlw	high __npowers_
  8527  01451A  0100               	movlb	0	; () banked
  8528  01451C  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  8529  01451E  6EF7               	movwf	tblptrh,c
  8530  014520                     	if	1	;There are 3 active tblptr bytes
  8531  014520  6AF8               	clrf	tblptru,c
  8532  014522  0E00               	movlw	low (__mediumconst shr (0+16))
  8533  014524  22F8               	addwfc	tblptru,f,c
  8534  014526                     	endif
  8535  014526  0009               	tblrd		*+
  8536  014528  CFF5 F081          	movff	tablat,___flmul@a
  8537  01452C  0009               	tblrd		*+
  8538  01452E  CFF5 F082          	movff	tablat,___flmul@a+1
  8539  014532  0009               	tblrd		*+
  8540  014534  CFF5 F083          	movff	tablat,___flmul@a+2
  8541  014538  000A               	tblrd		*-
  8542  01453A  CFF5 F084          	movff	tablat,___flmul@a+3
  8543  01453E  0E00               	movlw	0
  8544  014540  0100               	movlb	0	; () banked
  8545  014542  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
  8546  014544  0E0A               	movlw	10
  8547  014546  6F77               	movwf	___awdiv@divisor& (0+255),b
  8548  014548  C0A2  F075         	movff	fround@prec,___awdiv@dividend
  8549  01454C  0100               	movlb	0	; () banked
  8550  01454E  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
  8551  014550  ECE7  F0AA         	call	___awdiv	;wreg free
  8552  014554  0100               	movlb	0	; () banked
  8553  014556  90D8               	bcf	status,0,c
  8554  014558  3775               	rlcf	?___awdiv& (0+255),f,b
  8555  01455A  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  8556  01455C  0100               	movlb	0	; () banked
  8557  01455E  90D8               	bcf	status,0,c
  8558  014560  3775               	rlcf	?___awdiv& (0+255),f,b
  8559  014562  3776               	rlcf	(?___awdiv+1)& (0+255),f,b
  8560  014564  0E24               	movlw	36
  8561  014566  0100               	movlb	0	; () banked
  8562  014568  2775               	addwf	?___awdiv& (0+255),f,b
  8563  01456A  0E00               	movlw	0
  8564  01456C  0100               	movlb	0	; () banked
  8565  01456E  2376               	addwfc	(?___awdiv+1)& (0+255),f,b
  8566  014570  0ECF               	movlw	low __npowers_
  8567  014572  0100               	movlb	0	; () banked
  8568  014574  2575               	addwf	?___awdiv& (0+255),w,b
  8569  014576  6EF6               	movwf	tblptrl,c
  8570  014578  0EFE               	movlw	high __npowers_
  8571  01457A  0100               	movlb	0	; () banked
  8572  01457C  2176               	addwfc	(?___awdiv+1)& (0+255),w,b
  8573  01457E  6EF7               	movwf	tblptrh,c
  8574  014580                     	if	1	;There are 3 active tblptr bytes
  8575  014580  6AF8               	clrf	tblptru,c
  8576  014582  0E00               	movlw	low (__mediumconst shr (0+16))
  8577  014584  22F8               	addwfc	tblptru,f,c
  8578  014586                     	endif
  8579  014586  0009               	tblrd		*+
  8580  014588  CFF5 F07D          	movff	tablat,___flmul@b
  8581  01458C  0009               	tblrd		*+
  8582  01458E  CFF5 F07E          	movff	tablat,___flmul@b+1
  8583  014592  0009               	tblrd		*+
  8584  014594  CFF5 F07F          	movff	tablat,___flmul@b+2
  8585  014598  000A               	tblrd		*-
  8586  01459A  CFF5 F080          	movff	tablat,___flmul@b+3
  8587  01459E  EC9C  F09B         	call	___flmul	;wreg free
  8588  0145A2  C07D  F09E         	movff	?___flmul,_fround$4219
  8589  0145A6  C07E  F09F         	movff	?___flmul+1,_fround$4219+1
  8590  0145AA  C07F  F0A0         	movff	?___flmul+2,_fround$4219+2
  8591  0145AE  C080  F0A1         	movff	?___flmul+3,_fround$4219+3
  8592                           
  8593                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8594  0145B2  C09E  F07D         	movff	_fround$4219,___flmul@b
  8595  0145B6  C09F  F07E         	movff	_fround$4219+1,___flmul@b+1
  8596  0145BA  C0A0  F07F         	movff	_fround$4219+2,___flmul@b+2
  8597  0145BE  C0A1  F080         	movff	_fround$4219+3,___flmul@b+3
  8598  0145C2  0E00               	movlw	0
  8599  0145C4  0100               	movlb	0	; () banked
  8600  0145C6  6F81               	movwf	___flmul@a& (0+255),b
  8601  0145C8  0E00               	movlw	0
  8602  0145CA  6F82               	movwf	(___flmul@a+1)& (0+255),b
  8603  0145CC  0E00               	movlw	0
  8604  0145CE  6F83               	movwf	(___flmul@a+2)& (0+255),b
  8605  0145D0  0E3F               	movlw	63
  8606  0145D2  6F84               	movwf	(___flmul@a+3)& (0+255),b
  8607  0145D4  EC9C  F09B         	call	___flmul	;wreg free
  8608  0145D8  D77B               	goto	L7
  8609  0145DA                     l7936:
  8610                           
  8611                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8612  0145DA  0100               	movlb	0	; () banked
  8613  0145DC  51A2               	movf	fround@prec& (0+255),w,b
  8614  0145DE  0D04               	mullw	4
  8615  0145E0  0ECF               	movlw	low __npowers_
  8616  0145E2  24F3               	addwf	prodl,w,c
  8617  0145E4  6EF6               	movwf	tblptrl,c
  8618  0145E6  0EFE               	movlw	high __npowers_
  8619  0145E8  20F4               	addwfc	prodh,w,c
  8620  0145EA  6EF7               	movwf	tblptrh,c
  8621  0145EC                     	if	1	;There are 3 active tblptr bytes
  8622  0145EC  6AF8               	clrf	tblptru,c
  8623  0145EE  0E00               	movlw	low (__mediumconst shr (0+16))
  8624  0145F0  22F8               	addwfc	tblptru,f,c
  8625  0145F2                     	endif
  8626  0145F2  0009               	tblrd		*+
  8627  0145F4  CFF5 F07D          	movff	tablat,___flmul@b
  8628  0145F8  0009               	tblrd		*+
  8629  0145FA  CFF5 F07E          	movff	tablat,___flmul@b+1
  8630  0145FE  0009               	tblrd		*+
  8631  014600  CFF5 F07F          	movff	tablat,___flmul@b+2
  8632  014604  000A               	tblrd		*-
  8633  014606  CFF5 F080          	movff	tablat,___flmul@b+3
  8634  01460A  0E00               	movlw	0
  8635  01460C  0100               	movlb	0	; () banked
  8636  01460E  6F81               	movwf	___flmul@a& (0+255),b
  8637  014610  0E00               	movlw	0
  8638  014612  6F82               	movwf	(___flmul@a+1)& (0+255),b
  8639  014614  0E00               	movlw	0
  8640  014616  6F83               	movwf	(___flmul@a+2)& (0+255),b
  8641  014618  0E3F               	movlw	63
  8642  01461A  6F84               	movwf	(___flmul@a+3)& (0+255),b
  8643  01461C  EC9C  F09B         	call	___flmul	;wreg free
  8644  014620  C07D  F096         	movff	?___flmul,?_fround
  8645  014624  C07E  F097         	movff	?___flmul+1,?_fround+1
  8646  014628  C07F  F098         	movff	?___flmul+2,?_fround+2
  8647  01462C  C080  F099         	movff	?___flmul+3,?_fround+3
  8648  014630  0012               	return	
  8649  014632                     __end_of_fround:
  8650                           	opt stack 0
  8651                           tblptru	equ	0xFF8
  8652                           tblptrh	equ	0xFF7
  8653                           tblptrl	equ	0xFF6
  8654                           tablat	equ	0xFF5
  8655                           prodh	equ	0xFF4
  8656                           prodl	equ	0xFF3
  8657                           intcon	equ	0xFF2
  8658                           postinc0	equ	0xFEE
  8659                           wreg	equ	0xFE8
  8660                           indf2	equ	0xFDF
  8661                           postinc2	equ	0xFDE
  8662                           fsr2h	equ	0xFDA
  8663                           fsr2l	equ	0xFD9
  8664                           status	equ	0xFD8
  8665                           
  8666 ;; *************** function ___flmul *****************
  8667 ;; Defined at:
  8668 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8669 ;; Parameters:    Size  Location     Type
  8670 ;;  b               4   29[BANK0 ] unsigned char 
  8671 ;;  a               4   33[BANK0 ] unsigned char 
  8672 ;; Auto vars:     Size  Location     Type
  8673 ;;  prod            4   48[BANK0 ] struct .
  8674 ;;  grs             4   43[BANK0 ] unsigned long 
  8675 ;;  temp            2   52[BANK0 ] struct .
  8676 ;;  bexp            1   47[BANK0 ] unsigned char 
  8677 ;;  aexp            1   42[BANK0 ] unsigned char 
  8678 ;;  sign            1   41[BANK0 ] unsigned char 
  8679 ;; Return value:  Size  Location     Type
  8680 ;;                  4   29[BANK0 ] unsigned char 
  8681 ;; Registers used:
  8682 ;;		wreg, status,2, status,0, prodl, prodh
  8683 ;; Tracked objects:
  8684 ;;		On entry : 0/0
  8685 ;;		On exit  : 0/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8688 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8689 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8690 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8691 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8692 ;;Total ram usage:       25 bytes
  8693 ;; Hardware stack levels used:    1
  8694 ;; Hardware stack levels required when called:    3
  8695 ;; This function calls:
  8696 ;;		Nothing
  8697 ;; This function is called by:
  8698 ;;		_main
  8699 ;;		_fround
  8700 ;;		_scale
  8701 ;;		_sprintf
  8702 ;; This function uses a non-reentrant model
  8703 ;;
  8704                           
  8705                           	psect	text12
  8706  013738                     __ptext12:
  8707                           	opt stack 0
  8708  013738                     ___flmul:
  8709                           	opt stack 27
  8710                           
  8711                           ;incstack = 0
  8712  013738  0100               	movlb	0	; () banked
  8713  01373A  5180               	movf	(___flmul@b+3)& (0+255),w,b
  8714  01373C  0B80               	andlw	128
  8715  01373E  0100               	movlb	0	; () banked
  8716  013740  6F89               	movwf	___flmul@sign& (0+255),b
  8717  013742  0100               	movlb	0	; () banked
  8718  013744  5180               	movf	(___flmul@b+3)& (0+255),w,b
  8719  013746  2580               	addwf	(___flmul@b+3)& (0+255),w,b
  8720  013748  0100               	movlb	0	; () banked
  8721  01374A  6F8F               	movwf	___flmul@bexp& (0+255),b
  8722                           
  8723                           ; BSR set to: 0
  8724  01374C  0100               	movlb	0	; () banked
  8725  01374E  AF7F               	btfss	(___flmul@b+2)& (0+255),7,b
  8726  013750  D002               	goto	l7672
  8727                           
  8728                           ; BSR set to: 0
  8729  013752  0100               	movlb	0	; () banked
  8730  013754  818F               	bsf	___flmul@bexp& (0+255),0,b
  8731  013756                     l7672:
  8732                           
  8733                           ; BSR set to: 0
  8734  013756  0100               	movlb	0	; () banked
  8735  013758  518F               	movf	___flmul@bexp& (0+255),w,b
  8736  01375A  0100               	movlb	0	; () banked
  8737  01375C  B4D8               	btfsc	status,2,c
  8738  01375E  D010               	goto	l7680
  8739                           
  8740                           ; BSR set to: 0
  8741  013760  0100               	movlb	0	; () banked
  8742  013762  298F               	incf	___flmul@bexp& (0+255),w,b
  8743  013764  A4D8               	btfss	status,2,c
  8744  013766  D009               	goto	l7678
  8745                           
  8746                           ; BSR set to: 0
  8747  013768  0E00               	movlw	0
  8748  01376A  0100               	movlb	0	; () banked
  8749  01376C  6F7D               	movwf	___flmul@b& (0+255),b
  8750  01376E  0E00               	movlw	0
  8751  013770  6F7E               	movwf	(___flmul@b+1)& (0+255),b
  8752  013772  0E00               	movlw	0
  8753  013774  6F7F               	movwf	(___flmul@b+2)& (0+255),b
  8754  013776  0E00               	movlw	0
  8755  013778  6F80               	movwf	(___flmul@b+3)& (0+255),b
  8756  01377A                     l7678:
  8757                           
  8758                           ; BSR set to: 0
  8759  01377A  0100               	movlb	0	; () banked
  8760  01377C  8F7F               	bsf	(___flmul@b+2)& (0+255),7,b
  8761  01377E  D009               	goto	l7682
  8762  013780                     l7680:
  8763                           
  8764                           ; BSR set to: 0
  8765  013780  0E00               	movlw	0
  8766  013782  0100               	movlb	0	; () banked
  8767  013784  6F7D               	movwf	___flmul@b& (0+255),b
  8768  013786  0E00               	movlw	0
  8769  013788  6F7E               	movwf	(___flmul@b+1)& (0+255),b
  8770  01378A  0E00               	movlw	0
  8771  01378C  6F7F               	movwf	(___flmul@b+2)& (0+255),b
  8772  01378E  0E00               	movlw	0
  8773  013790  6F80               	movwf	(___flmul@b+3)& (0+255),b
  8774  013792                     l7682:
  8775                           
  8776                           ; BSR set to: 0
  8777  013792  0100               	movlb	0	; () banked
  8778  013794  5184               	movf	(___flmul@a+3)& (0+255),w,b
  8779  013796  0B80               	andlw	128
  8780  013798  0100               	movlb	0	; () banked
  8781  01379A  1B89               	xorwf	___flmul@sign& (0+255),f,b
  8782                           
  8783                           ; BSR set to: 0
  8784  01379C  0100               	movlb	0	; () banked
  8785  01379E  5184               	movf	(___flmul@a+3)& (0+255),w,b
  8786  0137A0  2584               	addwf	(___flmul@a+3)& (0+255),w,b
  8787  0137A2  0100               	movlb	0	; () banked
  8788  0137A4  6F8A               	movwf	___flmul@aexp& (0+255),b
  8789                           
  8790                           ; BSR set to: 0
  8791  0137A6  0100               	movlb	0	; () banked
  8792  0137A8  AF83               	btfss	(___flmul@a+2)& (0+255),7,b
  8793  0137AA  D002               	goto	l7690
  8794                           
  8795                           ; BSR set to: 0
  8796  0137AC  0100               	movlb	0	; () banked
  8797  0137AE  818A               	bsf	___flmul@aexp& (0+255),0,b
  8798  0137B0                     l7690:
  8799                           
  8800                           ; BSR set to: 0
  8801  0137B0  0100               	movlb	0	; () banked
  8802  0137B2  518A               	movf	___flmul@aexp& (0+255),w,b
  8803  0137B4  0100               	movlb	0	; () banked
  8804  0137B6  B4D8               	btfsc	status,2,c
  8805  0137B8  D010               	goto	l7698
  8806                           
  8807                           ; BSR set to: 0
  8808  0137BA  0100               	movlb	0	; () banked
  8809  0137BC  298A               	incf	___flmul@aexp& (0+255),w,b
  8810  0137BE  A4D8               	btfss	status,2,c
  8811  0137C0  D009               	goto	l7696
  8812                           
  8813                           ; BSR set to: 0
  8814  0137C2  0E00               	movlw	0
  8815  0137C4  0100               	movlb	0	; () banked
  8816  0137C6  6F81               	movwf	___flmul@a& (0+255),b
  8817  0137C8  0E00               	movlw	0
  8818  0137CA  6F82               	movwf	(___flmul@a+1)& (0+255),b
  8819  0137CC  0E00               	movlw	0
  8820  0137CE  6F83               	movwf	(___flmul@a+2)& (0+255),b
  8821  0137D0  0E00               	movlw	0
  8822  0137D2  6F84               	movwf	(___flmul@a+3)& (0+255),b
  8823  0137D4                     l7696:
  8824                           
  8825                           ; BSR set to: 0
  8826  0137D4  0100               	movlb	0	; () banked
  8827  0137D6  8F83               	bsf	(___flmul@a+2)& (0+255),7,b
  8828  0137D8  D009               	goto	l1554
  8829  0137DA                     l7698:
  8830                           
  8831                           ; BSR set to: 0
  8832  0137DA  0E00               	movlw	0
  8833  0137DC  0100               	movlb	0	; () banked
  8834  0137DE  6F81               	movwf	___flmul@a& (0+255),b
  8835  0137E0  0E00               	movlw	0
  8836  0137E2  6F82               	movwf	(___flmul@a+1)& (0+255),b
  8837  0137E4  0E00               	movlw	0
  8838  0137E6  6F83               	movwf	(___flmul@a+2)& (0+255),b
  8839  0137E8  0E00               	movlw	0
  8840  0137EA  6F84               	movwf	(___flmul@a+3)& (0+255),b
  8841  0137EC                     l1554:
  8842                           
  8843                           ; BSR set to: 0
  8844  0137EC  0100               	movlb	0	; () banked
  8845  0137EE  518A               	movf	___flmul@aexp& (0+255),w,b
  8846  0137F0  0100               	movlb	0	; () banked
  8847  0137F2  B4D8               	btfsc	status,2,c
  8848  0137F4  D005               	goto	l7702
  8849                           
  8850                           ; BSR set to: 0
  8851  0137F6  0100               	movlb	0	; () banked
  8852  0137F8  518F               	movf	___flmul@bexp& (0+255),w,b
  8853  0137FA  0100               	movlb	0	; () banked
  8854  0137FC  A4D8               	btfss	status,2,c
  8855  0137FE  D00A               	goto	l7706
  8856  013800                     l7702:
  8857                           
  8858                           ; BSR set to: 0
  8859  013800  0E00               	movlw	0
  8860  013802  0100               	movlb	0	; () banked
  8861  013804  6F7D               	movwf	?___flmul& (0+255),b
  8862  013806  0E00               	movlw	0
  8863  013808  6F7E               	movwf	(?___flmul+1)& (0+255),b
  8864  01380A  0E00               	movlw	0
  8865  01380C  6F7F               	movwf	(?___flmul+2)& (0+255),b
  8866  01380E  0E00               	movlw	0
  8867  013810  6F80               	movwf	(?___flmul+3)& (0+255),b
  8868                           
  8869                           ; BSR set to: 0
  8870  013812  0012               	return	
  8871  013814                     l7706:
  8872                           
  8873                           ; BSR set to: 0
  8874  013814  0100               	movlb	0	; () banked
  8875  013816  5183               	movf	(___flmul@a+2)& (0+255),w,b
  8876  013818  0100               	movlb	0	; () banked
  8877  01381A  037D               	mulwf	___flmul@b& (0+255),b
  8878  01381C  CFF3 F094          	movff	prodl,___flmul@temp
  8879  013820  CFF4 F095          	movff	prodh,___flmul@temp+1
  8880                           
  8881                           ; BSR set to: 0
  8882  013824  0100               	movlb	0	; () banked
  8883  013826  5194               	movf	___flmul@temp& (0+255),w,b
  8884  013828  0100               	movlb	0	; () banked
  8885  01382A  6F8B               	movwf	___flmul@grs& (0+255),b
  8886  01382C  6B8C               	clrf	(___flmul@grs+1)& (0+255),b
  8887  01382E  6B8D               	clrf	(___flmul@grs+2)& (0+255),b
  8888  013830  6B8E               	clrf	(___flmul@grs+3)& (0+255),b
  8889                           
  8890                           ; BSR set to: 0
  8891  013832  0100               	movlb	0	; () banked
  8892  013834  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8893  013836  0100               	movlb	0	; () banked
  8894  013838  6F90               	movwf	___flmul@prod& (0+255),b
  8895  01383A  6B91               	clrf	(___flmul@prod+1)& (0+255),b
  8896  01383C  6B92               	clrf	(___flmul@prod+2)& (0+255),b
  8897  01383E  6B93               	clrf	(___flmul@prod+3)& (0+255),b
  8898  013840  0100               	movlb	0	; () banked
  8899  013842  5182               	movf	(___flmul@a+1)& (0+255),w,b
  8900  013844  0100               	movlb	0	; () banked
  8901  013846  037E               	mulwf	(___flmul@b+1)& (0+255),b
  8902  013848  CFF3 F094          	movff	prodl,___flmul@temp
  8903  01384C  CFF4 F095          	movff	prodh,___flmul@temp+1
  8904                           
  8905                           ; BSR set to: 0
  8906  013850  0100               	movlb	0	; () banked
  8907  013852  5194               	movf	___flmul@temp& (0+255),w,b
  8908  013854  0100               	movlb	0	; () banked
  8909  013856  278B               	addwf	___flmul@grs& (0+255),f,b
  8910  013858  0E00               	movlw	0
  8911  01385A  238C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8912  01385C  238D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8913  01385E  238E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8914                           
  8915                           ; BSR set to: 0
  8916  013860  0100               	movlb	0	; () banked
  8917  013862  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8918  013864  0100               	movlb	0	; () banked
  8919  013866  2790               	addwf	___flmul@prod& (0+255),f,b
  8920  013868  0E00               	movlw	0
  8921  01386A  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8922  01386C  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8923  01386E  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8924  013870  0100               	movlb	0	; () banked
  8925  013872  5181               	movf	___flmul@a& (0+255),w,b
  8926  013874  0100               	movlb	0	; () banked
  8927  013876  037F               	mulwf	(___flmul@b+2)& (0+255),b
  8928  013878  CFF3 F094          	movff	prodl,___flmul@temp
  8929  01387C  CFF4 F095          	movff	prodh,___flmul@temp+1
  8930                           
  8931                           ; BSR set to: 0
  8932  013880  0100               	movlb	0	; () banked
  8933  013882  5194               	movf	___flmul@temp& (0+255),w,b
  8934  013884  0100               	movlb	0	; () banked
  8935  013886  278B               	addwf	___flmul@grs& (0+255),f,b
  8936  013888  0E00               	movlw	0
  8937  01388A  238C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8938  01388C  238D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8939  01388E  238E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8940                           
  8941                           ; BSR set to: 0
  8942  013890  0100               	movlb	0	; () banked
  8943  013892  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8944  013894  0100               	movlb	0	; () banked
  8945  013896  2790               	addwf	___flmul@prod& (0+255),f,b
  8946  013898  0E00               	movlw	0
  8947  01389A  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8948  01389C  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8949  01389E  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8950                           
  8951                           ; BSR set to: 0
  8952  0138A0  C08D  F08E         	movff	___flmul@grs+2,___flmul@grs+3
  8953  0138A4  C08C  F08D         	movff	___flmul@grs+1,___flmul@grs+2
  8954  0138A8  C08B  F08C         	movff	___flmul@grs,___flmul@grs+1
  8955  0138AC  0100               	movlb	0	; () banked
  8956  0138AE  6B8B               	clrf	___flmul@grs& (0+255),b
  8957                           
  8958                           ; BSR set to: 0
  8959  0138B0  0100               	movlb	0	; () banked
  8960  0138B2  5181               	movf	___flmul@a& (0+255),w,b
  8961  0138B4  0100               	movlb	0	; () banked
  8962  0138B6  037E               	mulwf	(___flmul@b+1)& (0+255),b
  8963  0138B8  CFF3 F094          	movff	prodl,___flmul@temp
  8964  0138BC  CFF4 F095          	movff	prodh,___flmul@temp+1
  8965                           
  8966                           ; BSR set to: 0
  8967  0138C0  0100               	movlb	0	; () banked
  8968  0138C2  5194               	movf	___flmul@temp& (0+255),w,b
  8969  0138C4  0100               	movlb	0	; () banked
  8970  0138C6  278B               	addwf	___flmul@grs& (0+255),f,b
  8971  0138C8  0100               	movlb	0	; () banked
  8972  0138CA  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8973  0138CC  0100               	movlb	0	; () banked
  8974  0138CE  238C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8975  0138D0  0E00               	movlw	0
  8976  0138D2  0100               	movlb	0	; () banked
  8977  0138D4  238D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8978  0138D6  0E00               	movlw	0
  8979  0138D8  0100               	movlb	0	; () banked
  8980  0138DA  238E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8981                           
  8982                           ; BSR set to: 0
  8983  0138DC  0100               	movlb	0	; () banked
  8984  0138DE  5182               	movf	(___flmul@a+1)& (0+255),w,b
  8985  0138E0  0100               	movlb	0	; () banked
  8986  0138E2  037D               	mulwf	___flmul@b& (0+255),b
  8987  0138E4  CFF3 F094          	movff	prodl,___flmul@temp
  8988  0138E8  CFF4 F095          	movff	prodh,___flmul@temp+1
  8989                           
  8990                           ; BSR set to: 0
  8991  0138EC  0100               	movlb	0	; () banked
  8992  0138EE  5194               	movf	___flmul@temp& (0+255),w,b
  8993  0138F0  0100               	movlb	0	; () banked
  8994  0138F2  278B               	addwf	___flmul@grs& (0+255),f,b
  8995  0138F4  0100               	movlb	0	; () banked
  8996  0138F6  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  8997  0138F8  0100               	movlb	0	; () banked
  8998  0138FA  238C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8999  0138FC  0E00               	movlw	0
  9000  0138FE  0100               	movlb	0	; () banked
  9001  013900  238D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9002  013902  0E00               	movlw	0
  9003  013904  0100               	movlb	0	; () banked
  9004  013906  238E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9005                           
  9006                           ; BSR set to: 0
  9007  013908  C08D  F08E         	movff	___flmul@grs+2,___flmul@grs+3
  9008  01390C  C08C  F08D         	movff	___flmul@grs+1,___flmul@grs+2
  9009  013910  C08B  F08C         	movff	___flmul@grs,___flmul@grs+1
  9010  013914  0100               	movlb	0	; () banked
  9011  013916  6B8B               	clrf	___flmul@grs& (0+255),b
  9012  013918  0100               	movlb	0	; () banked
  9013  01391A  5181               	movf	___flmul@a& (0+255),w,b
  9014  01391C  0100               	movlb	0	; () banked
  9015  01391E  037D               	mulwf	___flmul@b& (0+255),b
  9016  013920  CFF3 F094          	movff	prodl,___flmul@temp
  9017  013924  CFF4 F095          	movff	prodh,___flmul@temp+1
  9018                           
  9019                           ; BSR set to: 0
  9020  013928  0100               	movlb	0	; () banked
  9021  01392A  5194               	movf	___flmul@temp& (0+255),w,b
  9022  01392C  0100               	movlb	0	; () banked
  9023  01392E  278B               	addwf	___flmul@grs& (0+255),f,b
  9024  013930  0100               	movlb	0	; () banked
  9025  013932  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  9026  013934  0100               	movlb	0	; () banked
  9027  013936  238C               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9028  013938  0E00               	movlw	0
  9029  01393A  0100               	movlb	0	; () banked
  9030  01393C  238D               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9031  01393E  0E00               	movlw	0
  9032  013940  0100               	movlb	0	; () banked
  9033  013942  238E               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9034                           
  9035                           ; BSR set to: 0
  9036  013944  0100               	movlb	0	; () banked
  9037  013946  5183               	movf	(___flmul@a+2)& (0+255),w,b
  9038  013948  0100               	movlb	0	; () banked
  9039  01394A  037E               	mulwf	(___flmul@b+1)& (0+255),b
  9040  01394C  CFF3 F094          	movff	prodl,___flmul@temp
  9041  013950  CFF4 F095          	movff	prodh,___flmul@temp+1
  9042  013954  0100               	movlb	0	; () banked
  9043  013956  5194               	movf	___flmul@temp& (0+255),w,b
  9044  013958  0100               	movlb	0	; () banked
  9045  01395A  2790               	addwf	___flmul@prod& (0+255),f,b
  9046  01395C  0100               	movlb	0	; () banked
  9047  01395E  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  9048  013960  0100               	movlb	0	; () banked
  9049  013962  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9050  013964  0E00               	movlw	0
  9051  013966  0100               	movlb	0	; () banked
  9052  013968  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9053  01396A  0E00               	movlw	0
  9054  01396C  0100               	movlb	0	; () banked
  9055  01396E  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9056                           
  9057                           ; BSR set to: 0
  9058  013970  0100               	movlb	0	; () banked
  9059  013972  5182               	movf	(___flmul@a+1)& (0+255),w,b
  9060  013974  0100               	movlb	0	; () banked
  9061  013976  037F               	mulwf	(___flmul@b+2)& (0+255),b
  9062  013978  CFF3 F094          	movff	prodl,___flmul@temp
  9063  01397C  CFF4 F095          	movff	prodh,___flmul@temp+1
  9064                           
  9065                           ; BSR set to: 0
  9066  013980  0100               	movlb	0	; () banked
  9067  013982  5194               	movf	___flmul@temp& (0+255),w,b
  9068  013984  0100               	movlb	0	; () banked
  9069  013986  2790               	addwf	___flmul@prod& (0+255),f,b
  9070  013988  0100               	movlb	0	; () banked
  9071  01398A  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  9072  01398C  0100               	movlb	0	; () banked
  9073  01398E  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9074  013990  0E00               	movlw	0
  9075  013992  0100               	movlb	0	; () banked
  9076  013994  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9077  013996  0E00               	movlw	0
  9078  013998  0100               	movlb	0	; () banked
  9079  01399A  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9080  01399C  0100               	movlb	0	; () banked
  9081  01399E  5183               	movf	(___flmul@a+2)& (0+255),w,b
  9082  0139A0  0100               	movlb	0	; () banked
  9083  0139A2  037F               	mulwf	(___flmul@b+2)& (0+255),b
  9084  0139A4  CFF3 F094          	movff	prodl,___flmul@temp
  9085  0139A8  CFF4 F095          	movff	prodh,___flmul@temp+1
  9086                           
  9087                           ; BSR set to: 0
  9088  0139AC  0100               	movlb	0	; () banked
  9089  0139AE  5194               	movf	___flmul@temp& (0+255),w,b
  9090  0139B0  0100               	movlb	0	; () banked
  9091  0139B2  6F85               	movwf	??___flmul& (0+255),b
  9092  0139B4  0100               	movlb	0	; () banked
  9093  0139B6  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  9094  0139B8  0100               	movlb	0	; () banked
  9095  0139BA  6F86               	movwf	(??___flmul+1)& (0+255),b
  9096  0139BC  0100               	movlb	0	; () banked
  9097  0139BE  6B87               	clrf	(??___flmul+2)& (0+255),b
  9098  0139C0  0100               	movlb	0	; () banked
  9099  0139C2  6B88               	clrf	(??___flmul+3)& (0+255),b
  9100  0139C4  C087  F088         	movff	??___flmul+2,??___flmul+3
  9101  0139C8  C086  F087         	movff	??___flmul+1,??___flmul+2
  9102  0139CC  C085  F086         	movff	??___flmul,??___flmul+1
  9103  0139D0  0100               	movlb	0	; () banked
  9104  0139D2  6B85               	clrf	??___flmul& (0+255),b
  9105  0139D4  0100               	movlb	0	; () banked
  9106  0139D6  5185               	movf	??___flmul& (0+255),w,b
  9107  0139D8  0100               	movlb	0	; () banked
  9108  0139DA  2790               	addwf	___flmul@prod& (0+255),f,b
  9109  0139DC  0100               	movlb	0	; () banked
  9110  0139DE  5186               	movf	(??___flmul+1)& (0+255),w,b
  9111  0139E0  0100               	movlb	0	; () banked
  9112  0139E2  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9113  0139E4  0100               	movlb	0	; () banked
  9114  0139E6  5187               	movf	(??___flmul+2)& (0+255),w,b
  9115  0139E8  0100               	movlb	0	; () banked
  9116  0139EA  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9117  0139EC  0100               	movlb	0	; () banked
  9118  0139EE  5188               	movf	(??___flmul+3)& (0+255),w,b
  9119  0139F0  0100               	movlb	0	; () banked
  9120  0139F2  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9121                           
  9122                           ; BSR set to: 0
  9123  0139F4  C08B  F085         	movff	___flmul@grs,??___flmul
  9124  0139F8  C08C  F086         	movff	___flmul@grs+1,??___flmul+1
  9125  0139FC  C08D  F087         	movff	___flmul@grs+2,??___flmul+2
  9126  013A00  C08E  F088         	movff	___flmul@grs+3,??___flmul+3
  9127  013A04  0E19               	movlw	25
  9128  013A06  D006               	goto	u10190
  9129  013A08                     u10195:
  9130  013A08  0100               	movlb	0	; () banked
  9131  013A0A  90D8               	bcf	status,0,c
  9132  013A0C  3388               	rrcf	(??___flmul+3)& (0+255),f,b
  9133  013A0E  3387               	rrcf	(??___flmul+2)& (0+255),f,b
  9134  013A10  3386               	rrcf	(??___flmul+1)& (0+255),f,b
  9135  013A12  3385               	rrcf	??___flmul& (0+255),f,b
  9136  013A14                     u10190:
  9137  013A14  2EE8               	decfsz	wreg,f,c
  9138  013A16  D7F8               	goto	u10195
  9139  013A18  0100               	movlb	0	; () banked
  9140  013A1A  5185               	movf	??___flmul& (0+255),w,b
  9141  013A1C  0100               	movlb	0	; () banked
  9142  013A1E  2790               	addwf	___flmul@prod& (0+255),f,b
  9143  013A20  0100               	movlb	0	; () banked
  9144  013A22  5186               	movf	(??___flmul+1)& (0+255),w,b
  9145  013A24  0100               	movlb	0	; () banked
  9146  013A26  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9147  013A28  0100               	movlb	0	; () banked
  9148  013A2A  5187               	movf	(??___flmul+2)& (0+255),w,b
  9149  013A2C  0100               	movlb	0	; () banked
  9150  013A2E  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9151  013A30  0100               	movlb	0	; () banked
  9152  013A32  5188               	movf	(??___flmul+3)& (0+255),w,b
  9153  013A34  0100               	movlb	0	; () banked
  9154  013A36  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9155                           
  9156                           ; BSR set to: 0
  9157  013A38  C08D  F08E         	movff	___flmul@grs+2,___flmul@grs+3
  9158  013A3C  C08C  F08D         	movff	___flmul@grs+1,___flmul@grs+2
  9159  013A40  C08B  F08C         	movff	___flmul@grs,___flmul@grs+1
  9160  013A44  0100               	movlb	0	; () banked
  9161  013A46  6B8B               	clrf	___flmul@grs& (0+255),b
  9162                           
  9163                           ; BSR set to: 0
  9164  013A48  0100               	movlb	0	; () banked
  9165  013A4A  518A               	movf	___flmul@aexp& (0+255),w,b
  9166  013A4C  C08F  F085         	movff	___flmul@bexp,??___flmul
  9167  013A50  0100               	movlb	0	; () banked
  9168  013A52  6B86               	clrf	(??___flmul+1)& (0+255),b
  9169  013A54  0100               	movlb	0	; () banked
  9170  013A56  2785               	addwf	??___flmul& (0+255),f,b
  9171  013A58  0E00               	movlw	0
  9172  013A5A  2386               	addwfc	(??___flmul+1)& (0+255),f,b
  9173  013A5C  0E82               	movlw	130
  9174  013A5E  0100               	movlb	0	; () banked
  9175  013A60  2585               	addwf	??___flmul& (0+255),w,b
  9176  013A62  0100               	movlb	0	; () banked
  9177  013A64  6F94               	movwf	___flmul@temp& (0+255),b
  9178  013A66  0EFF               	movlw	255
  9179  013A68  0100               	movlb	0	; () banked
  9180  013A6A  2186               	addwfc	(??___flmul+1)& (0+255),w,b
  9181  013A6C  0100               	movlb	0	; () banked
  9182  013A6E  6F95               	movwf	(___flmul@temp+1)& (0+255),b
  9183  013A70  D015               	goto	l7754
  9184  013A72                     l7748:
  9185                           
  9186                           ; BSR set to: 0
  9187  013A72  0100               	movlb	0	; () banked
  9188  013A74  90D8               	bcf	status,0,c
  9189  013A76  3790               	rlcf	___flmul@prod& (0+255),f,b
  9190  013A78  3791               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9191  013A7A  3792               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9192  013A7C  3793               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9193                           
  9194                           ; BSR set to: 0
  9195  013A7E  0100               	movlb	0	; () banked
  9196  013A80  AF8E               	btfss	(___flmul@grs+3)& (0+255),7,b
  9197  013A82  D002               	goto	l1561
  9198                           
  9199                           ; BSR set to: 0
  9200  013A84  0100               	movlb	0	; () banked
  9201  013A86  8190               	bsf	___flmul@prod& (0+255),0,b
  9202  013A88                     l1561:
  9203                           
  9204                           ; BSR set to: 0
  9205  013A88  0100               	movlb	0	; () banked
  9206  013A8A  90D8               	bcf	status,0,c
  9207  013A8C  378B               	rlcf	___flmul@grs& (0+255),f,b
  9208  013A8E  378C               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9209  013A90  378D               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9210  013A92  378E               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9211  013A94  0100               	movlb	0	; () banked
  9212  013A96  0794               	decf	___flmul@temp& (0+255),f,b
  9213  013A98  A0D8               	btfss	status,0,c
  9214  013A9A  0795               	decf	(___flmul@temp+1)& (0+255),f,b
  9215  013A9C                     l7754:
  9216                           
  9217                           ; BSR set to: 0
  9218  013A9C  0100               	movlb	0	; () banked
  9219  013A9E  AF92               	btfss	(___flmul@prod+2)& (0+255),7,b
  9220  013AA0  D7E8               	goto	l7748
  9221                           
  9222                           ; BSR set to: 0
  9223                           
  9224                           ; BSR set to: 0
  9225  013AA2  0E00               	movlw	0
  9226  013AA4  0100               	movlb	0	; () banked
  9227  013AA6  6F8A               	movwf	___flmul@aexp& (0+255),b
  9228                           
  9229                           ; BSR set to: 0
  9230  013AA8  0100               	movlb	0	; () banked
  9231  013AAA  AF8E               	btfss	(___flmul@grs+3)& (0+255),7,b
  9232  013AAC  D024               	goto	l1563
  9233                           
  9234                           ; BSR set to: 0
  9235  013AAE  0EFF               	movlw	255
  9236  013AB0  0100               	movlb	0	; () banked
  9237  013AB2  158B               	andwf	___flmul@grs& (0+255),w,b
  9238  013AB4  0100               	movlb	0	; () banked
  9239  013AB6  6F85               	movwf	??___flmul& (0+255),b
  9240  013AB8  0EFF               	movlw	255
  9241  013ABA  0100               	movlb	0	; () banked
  9242  013ABC  158C               	andwf	(___flmul@grs+1)& (0+255),w,b
  9243  013ABE  0100               	movlb	0	; () banked
  9244  013AC0  6F86               	movwf	(??___flmul+1)& (0+255),b
  9245  013AC2  0EFF               	movlw	255
  9246  013AC4  0100               	movlb	0	; () banked
  9247  013AC6  158D               	andwf	(___flmul@grs+2)& (0+255),w,b
  9248  013AC8  0100               	movlb	0	; () banked
  9249  013ACA  6F87               	movwf	(??___flmul+2)& (0+255),b
  9250  013ACC  0E7F               	movlw	127
  9251  013ACE  0100               	movlb	0	; () banked
  9252  013AD0  158E               	andwf	(___flmul@grs+3)& (0+255),w,b
  9253  013AD2  0100               	movlb	0	; () banked
  9254  013AD4  6F88               	movwf	(??___flmul+3)& (0+255),b
  9255  013AD6  0100               	movlb	0	; () banked
  9256  013AD8  5185               	movf	??___flmul& (0+255),w,b
  9257  013ADA  0100               	movlb	0	; () banked
  9258  013ADC  1186               	iorwf	(??___flmul+1)& (0+255),w,b
  9259  013ADE  0100               	movlb	0	; () banked
  9260  013AE0  1187               	iorwf	(??___flmul+2)& (0+255),w,b
  9261  013AE2  0100               	movlb	0	; () banked
  9262  013AE4  1188               	iorwf	(??___flmul+3)& (0+255),w,b
  9263  013AE6  A4D8               	btfss	status,2,c
  9264  013AE8  D003               	goto	l7764
  9265                           
  9266                           ; BSR set to: 0
  9267                           
  9268                           ; BSR set to: 0
  9269  013AEA  0100               	movlb	0	; () banked
  9270  013AEC  A190               	btfss	___flmul@prod& (0+255),0,b
  9271  013AEE  D003               	goto	l1563
  9272  013AF0                     l7764:
  9273                           
  9274                           ; BSR set to: 0
  9275  013AF0  0E01               	movlw	1
  9276  013AF2  0100               	movlb	0	; () banked
  9277  013AF4  6F8A               	movwf	___flmul@aexp& (0+255),b
  9278  013AF6                     l1563:
  9279                           
  9280                           ; BSR set to: 0
  9281  013AF6  0100               	movlb	0	; () banked
  9282  013AF8  518A               	movf	___flmul@aexp& (0+255),w,b
  9283  013AFA  0100               	movlb	0	; () banked
  9284  013AFC  B4D8               	btfsc	status,2,c
  9285  013AFE  D023               	goto	l7774
  9286                           
  9287                           ; BSR set to: 0
  9288  013B00  0E01               	movlw	1
  9289  013B02  0100               	movlb	0	; () banked
  9290  013B04  2790               	addwf	___flmul@prod& (0+255),f,b
  9291  013B06  0E00               	movlw	0
  9292  013B08  2391               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9293  013B0A  2392               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9294  013B0C  2393               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9295                           
  9296                           ; BSR set to: 0
  9297  013B0E  0100               	movlb	0	; () banked
  9298  013B10  A193               	btfss	(___flmul@prod+3)& (0+255),0,b
  9299  013B12  D019               	goto	l7774
  9300                           
  9301                           ; BSR set to: 0
  9302  013B14  C090  F085         	movff	___flmul@prod,??___flmul
  9303  013B18  C091  F086         	movff	___flmul@prod+1,??___flmul+1
  9304  013B1C  C092  F087         	movff	___flmul@prod+2,??___flmul+2
  9305  013B20  C093  F088         	movff	___flmul@prod+3,??___flmul+3
  9306  013B24  0100               	movlb	0	; () banked
  9307  013B26  3588               	rlcf	(??___flmul+3)& (0+255),w,b
  9308  013B28  3388               	rrcf	(??___flmul+3)& (0+255),f,b
  9309  013B2A  3387               	rrcf	(??___flmul+2)& (0+255),f,b
  9310  013B2C  3386               	rrcf	(??___flmul+1)& (0+255),f,b
  9311  013B2E  3385               	rrcf	??___flmul& (0+255),f,b
  9312  013B30  C085  F090         	movff	??___flmul,___flmul@prod
  9313  013B34  C086  F091         	movff	??___flmul+1,___flmul@prod+1
  9314  013B38  C087  F092         	movff	??___flmul+2,___flmul@prod+2
  9315  013B3C  C088  F093         	movff	??___flmul+3,___flmul@prod+3
  9316                           
  9317                           ; BSR set to: 0
  9318  013B40  0100               	movlb	0	; () banked
  9319  013B42  4B94               	infsnz	___flmul@temp& (0+255),f,b
  9320  013B44  2B95               	incf	(___flmul@temp+1)& (0+255),f,b
  9321  013B46                     l7774:
  9322                           
  9323                           ; BSR set to: 0
  9324  013B46  0100               	movlb	0	; () banked
  9325  013B48  BF95               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9326  013B4A  D010               	goto	l7778
  9327  013B4C  0100               	movlb	0	; () banked
  9328  013B4E  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  9329  013B50  E104               	bnz	u10270
  9330  013B52  0100               	movlb	0	; () banked
  9331  013B54  2994               	incf	___flmul@temp& (0+255),w,b
  9332  013B56  A0D8               	btfss	status,0,c
  9333  013B58  D009               	goto	l7778
  9334  013B5A                     u10270:
  9335                           
  9336                           ; BSR set to: 0
  9337  013B5A  0E00               	movlw	0
  9338  013B5C  0100               	movlb	0	; () banked
  9339  013B5E  6F90               	movwf	___flmul@prod& (0+255),b
  9340  013B60  0E00               	movlw	0
  9341  013B62  6F91               	movwf	(___flmul@prod+1)& (0+255),b
  9342  013B64  0E80               	movlw	128
  9343  013B66  6F92               	movwf	(___flmul@prod+2)& (0+255),b
  9344  013B68  0E7F               	movlw	127
  9345  013B6A  D02B               	goto	L8
  9346  013B6C                     l7778:
  9347                           
  9348                           ; BSR set to: 0
  9349  013B6C  0100               	movlb	0	; () banked
  9350  013B6E  BF95               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9351  013B70  D007               	goto	l7780
  9352  013B72  0100               	movlb	0	; () banked
  9353  013B74  5195               	movf	(___flmul@temp+1)& (0+255),w,b
  9354  013B76  E111               	bnz	l1571
  9355  013B78  0100               	movlb	0	; () banked
  9356  013B7A  0594               	decf	___flmul@temp& (0+255),w,b
  9357  013B7C  B0D8               	btfsc	status,0,c
  9358  013B7E  D00D               	goto	l1571
  9359  013B80                     l7780:
  9360                           
  9361                           ; BSR set to: 0
  9362  013B80  0E00               	movlw	0
  9363  013B82  0100               	movlb	0	; () banked
  9364  013B84  6F90               	movwf	___flmul@prod& (0+255),b
  9365  013B86  0E00               	movlw	0
  9366  013B88  6F91               	movwf	(___flmul@prod+1)& (0+255),b
  9367  013B8A  0E00               	movlw	0
  9368  013B8C  6F92               	movwf	(___flmul@prod+2)& (0+255),b
  9369  013B8E  0E00               	movlw	0
  9370  013B90  6F93               	movwf	(___flmul@prod+3)& (0+255),b
  9371  013B92  0E00               	movlw	0
  9372  013B94  0100               	movlb	0	; () banked
  9373  013B96  6F89               	movwf	___flmul@sign& (0+255),b
  9374  013B98  D015               	goto	l7790
  9375  013B9A                     l1571:
  9376                           
  9377                           ; BSR set to: 0
  9378  013B9A  C094  F08F         	movff	___flmul@temp,___flmul@bexp
  9379                           
  9380                           ; BSR set to: 0
  9381  013B9E  0EFF               	movlw	255
  9382  013BA0  0100               	movlb	0	; () banked
  9383  013BA2  1790               	andwf	___flmul@prod& (0+255),f,b
  9384  013BA4  0EFF               	movlw	255
  9385  013BA6  1791               	andwf	(___flmul@prod+1)& (0+255),f,b
  9386  013BA8  0E7F               	movlw	127
  9387  013BAA  1792               	andwf	(___flmul@prod+2)& (0+255),f,b
  9388  013BAC  0E00               	movlw	0
  9389  013BAE  1793               	andwf	(___flmul@prod+3)& (0+255),f,b
  9390                           
  9391                           ; BSR set to: 0
  9392  013BB0  0100               	movlb	0	; () banked
  9393  013BB2  A18F               	btfss	___flmul@bexp& (0+255),0,b
  9394  013BB4  D002               	goto	l7788
  9395                           
  9396                           ; BSR set to: 0
  9397  013BB6  0100               	movlb	0	; () banked
  9398  013BB8  8F92               	bsf	(___flmul@prod+2)& (0+255),7,b
  9399  013BBA                     l7788:
  9400                           
  9401                           ; BSR set to: 0
  9402  013BBA  0100               	movlb	0	; () banked
  9403  013BBC  90D8               	bcf	status,0,c
  9404  013BBE  318F               	rrcf	___flmul@bexp& (0+255),w,b
  9405  013BC0  0100               	movlb	0	; () banked
  9406  013BC2                     L8:
  9407  013BC2  6F93               	movwf	(___flmul@prod+3)& (0+255),b
  9408  013BC4                     l7790:
  9409                           
  9410                           ; BSR set to: 0
  9411  013BC4  0100               	movlb	0	; () banked
  9412  013BC6  5189               	movf	___flmul@sign& (0+255),w,b
  9413  013BC8  0100               	movlb	0	; () banked
  9414  013BCA  1393               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9415                           
  9416                           ; BSR set to: 0
  9417  013BCC  C090  F07D         	movff	___flmul@prod,?___flmul
  9418  013BD0  C091  F07E         	movff	___flmul@prod+1,?___flmul+1
  9419  013BD4  C092  F07F         	movff	___flmul@prod+2,?___flmul+2
  9420  013BD8  C093  F080         	movff	___flmul@prod+3,?___flmul+3
  9421  013BDC  0012               	return	
  9422  013BDE                     __end_of___flmul:
  9423                           	opt stack 0
  9424                           tblptru	equ	0xFF8
  9425                           tblptrh	equ	0xFF7
  9426                           tblptrl	equ	0xFF6
  9427                           tablat	equ	0xFF5
  9428                           prodh	equ	0xFF4
  9429                           prodl	equ	0xFF3
  9430                           intcon	equ	0xFF2
  9431                           postinc0	equ	0xFEE
  9432                           wreg	equ	0xFE8
  9433                           indf2	equ	0xFDF
  9434                           postinc2	equ	0xFDE
  9435                           fsr2h	equ	0xFDA
  9436                           fsr2l	equ	0xFD9
  9437                           status	equ	0xFD8
  9438                           
  9439 ;; *************** function ___awmod *****************
  9440 ;; Defined at:
  9441 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  9442 ;; Parameters:    Size  Location     Type
  9443 ;;  dividend        2   15[BANK0 ] int 
  9444 ;;  divisor         2   17[BANK0 ] int 
  9445 ;; Auto vars:     Size  Location     Type
  9446 ;;  sign            1   20[BANK0 ] unsigned char 
  9447 ;;  counter         1   19[BANK0 ] unsigned char 
  9448 ;; Return value:  Size  Location     Type
  9449 ;;                  2   15[BANK0 ] int 
  9450 ;; Registers used:
  9451 ;;		wreg, status,2, status,0
  9452 ;; Tracked objects:
  9453 ;;		On entry : 0/0
  9454 ;;		On exit  : 0/0
  9455 ;;		Unchanged: 0/0
  9456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9457 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9458 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9461 ;;Total ram usage:        6 bytes
  9462 ;; Hardware stack levels used:    1
  9463 ;; Hardware stack levels required when called:    3
  9464 ;; This function calls:
  9465 ;;		Nothing
  9466 ;; This function is called by:
  9467 ;;		_fround
  9468 ;;		_scale
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           	psect	text13
  9473  0158AC                     __ptext13:
  9474                           	opt stack 0
  9475  0158AC                     ___awmod:
  9476                           	opt stack 24
  9477                           
  9478                           ; BSR set to: 0
  9479                           ;incstack = 0
  9480  0158AC  0E00               	movlw	0
  9481  0158AE  0100               	movlb	0	; () banked
  9482  0158B0  6F74               	movwf	___awmod@sign& (0+255),b
  9483                           
  9484                           ; BSR set to: 0
  9485  0158B2  0100               	movlb	0	; () banked
  9486  0158B4  AF70               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9487  0158B6  D008               	goto	l7848
  9488                           
  9489                           ; BSR set to: 0
  9490  0158B8  0100               	movlb	0	; () banked
  9491  0158BA  6D6F               	negf	___awmod@dividend& (0+255),b
  9492  0158BC  1F70               	comf	(___awmod@dividend+1)& (0+255),f,b
  9493  0158BE  B0D8               	btfsc	status,0,c
  9494  0158C0  2B70               	incf	(___awmod@dividend+1)& (0+255),f,b
  9495                           
  9496                           ; BSR set to: 0
  9497  0158C2  0E01               	movlw	1
  9498  0158C4  0100               	movlb	0	; () banked
  9499  0158C6  6F74               	movwf	___awmod@sign& (0+255),b
  9500  0158C8                     l7848:
  9501                           
  9502                           ; BSR set to: 0
  9503  0158C8  0100               	movlb	0	; () banked
  9504  0158CA  AF72               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9505  0158CC  D005               	goto	l7852
  9506                           
  9507                           ; BSR set to: 0
  9508  0158CE  0100               	movlb	0	; () banked
  9509  0158D0  6D71               	negf	___awmod@divisor& (0+255),b
  9510  0158D2  1F72               	comf	(___awmod@divisor+1)& (0+255),f,b
  9511  0158D4  B0D8               	btfsc	status,0,c
  9512  0158D6  2B72               	incf	(___awmod@divisor+1)& (0+255),f,b
  9513  0158D8                     l7852:
  9514                           
  9515                           ; BSR set to: 0
  9516  0158D8  0100               	movlb	0	; () banked
  9517  0158DA  5171               	movf	___awmod@divisor& (0+255),w,b
  9518  0158DC  0100               	movlb	0	; () banked
  9519  0158DE  1172               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9520  0158E0  B4D8               	btfsc	status,2,c
  9521  0158E2  D026               	goto	l7868
  9522                           
  9523                           ; BSR set to: 0
  9524  0158E4  0E01               	movlw	1
  9525  0158E6  0100               	movlb	0	; () banked
  9526  0158E8  6F73               	movwf	___awmod@counter& (0+255),b
  9527  0158EA  D006               	goto	l7858
  9528  0158EC                     l7856:
  9529                           
  9530                           ; BSR set to: 0
  9531  0158EC  0100               	movlb	0	; () banked
  9532  0158EE  90D8               	bcf	status,0,c
  9533  0158F0  3771               	rlcf	___awmod@divisor& (0+255),f,b
  9534  0158F2  3772               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9535  0158F4  0100               	movlb	0	; () banked
  9536  0158F6  2B73               	incf	___awmod@counter& (0+255),f,b
  9537  0158F8                     l7858:
  9538                           
  9539                           ; BSR set to: 0
  9540  0158F8  0100               	movlb	0	; () banked
  9541  0158FA  AF72               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9542  0158FC  D7F7               	goto	l7856
  9543  0158FE                     l7860:
  9544                           
  9545                           ; BSR set to: 0
  9546  0158FE  0100               	movlb	0	; () banked
  9547  015900  5171               	movf	___awmod@divisor& (0+255),w,b
  9548  015902  0100               	movlb	0	; () banked
  9549  015904  5D6F               	subwf	___awmod@dividend& (0+255),w,b
  9550  015906  0100               	movlb	0	; () banked
  9551  015908  5172               	movf	(___awmod@divisor+1)& (0+255),w,b
  9552  01590A  0100               	movlb	0	; () banked
  9553  01590C  5970               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9554  01590E  A0D8               	btfss	status,0,c
  9555  015910  D008               	goto	l7864
  9556                           
  9557                           ; BSR set to: 0
  9558  015912  0100               	movlb	0	; () banked
  9559  015914  5171               	movf	___awmod@divisor& (0+255),w,b
  9560  015916  0100               	movlb	0	; () banked
  9561  015918  5F6F               	subwf	___awmod@dividend& (0+255),f,b
  9562  01591A  0100               	movlb	0	; () banked
  9563  01591C  5172               	movf	(___awmod@divisor+1)& (0+255),w,b
  9564  01591E  0100               	movlb	0	; () banked
  9565  015920  5B70               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9566  015922                     l7864:
  9567                           
  9568                           ; BSR set to: 0
  9569  015922  0100               	movlb	0	; () banked
  9570  015924  90D8               	bcf	status,0,c
  9571  015926  3372               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9572  015928  3371               	rrcf	___awmod@divisor& (0+255),f,b
  9573                           
  9574                           ; BSR set to: 0
  9575  01592A  0100               	movlb	0	; () banked
  9576  01592C  2F73               	decfsz	___awmod@counter& (0+255),f,b
  9577  01592E  D7E7               	goto	l7860
  9578  015930                     l7868:
  9579                           
  9580                           ; BSR set to: 0
  9581  015930  0100               	movlb	0	; () banked
  9582  015932  5174               	movf	___awmod@sign& (0+255),w,b
  9583  015934  0100               	movlb	0	; () banked
  9584  015936  B4D8               	btfsc	status,2,c
  9585  015938  D005               	goto	l7872
  9586                           
  9587                           ; BSR set to: 0
  9588  01593A  0100               	movlb	0	; () banked
  9589  01593C  6D6F               	negf	___awmod@dividend& (0+255),b
  9590  01593E  1F70               	comf	(___awmod@dividend+1)& (0+255),f,b
  9591  015940  B0D8               	btfsc	status,0,c
  9592  015942  2B70               	incf	(___awmod@dividend+1)& (0+255),f,b
  9593  015944                     l7872:
  9594                           
  9595                           ; BSR set to: 0
  9596  015944  C06F  F06F         	movff	___awmod@dividend,?___awmod
  9597  015948  C070  F070         	movff	___awmod@dividend+1,?___awmod+1
  9598  01594C  0012               	return	
  9599  01594E                     __end_of___awmod:
  9600                           	opt stack 0
  9601                           tblptru	equ	0xFF8
  9602                           tblptrh	equ	0xFF7
  9603                           tblptrl	equ	0xFF6
  9604                           tablat	equ	0xFF5
  9605                           prodh	equ	0xFF4
  9606                           prodl	equ	0xFF3
  9607                           intcon	equ	0xFF2
  9608                           postinc0	equ	0xFEE
  9609                           wreg	equ	0xFE8
  9610                           indf2	equ	0xFDF
  9611                           postinc2	equ	0xFDE
  9612                           fsr2h	equ	0xFDA
  9613                           fsr2l	equ	0xFD9
  9614                           status	equ	0xFD8
  9615                           
  9616 ;; *************** function ___awdiv *****************
  9617 ;; Defined at:
  9618 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  9619 ;; Parameters:    Size  Location     Type
  9620 ;;  dividend        2   21[BANK0 ] int 
  9621 ;;  divisor         2   23[BANK0 ] int 
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;  quotient        2   27[BANK0 ] int 
  9624 ;;  sign            1   26[BANK0 ] unsigned char 
  9625 ;;  counter         1   25[BANK0 ] unsigned char 
  9626 ;; Return value:  Size  Location     Type
  9627 ;;                  2   21[BANK0 ] int 
  9628 ;; Registers used:
  9629 ;;		wreg, status,2, status,0
  9630 ;; Tracked objects:
  9631 ;;		On entry : 0/0
  9632 ;;		On exit  : 0/0
  9633 ;;		Unchanged: 0/0
  9634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9635 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9636 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9638 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9639 ;;Total ram usage:        8 bytes
  9640 ;; Hardware stack levels used:    1
  9641 ;; Hardware stack levels required when called:    3
  9642 ;; This function calls:
  9643 ;;		Nothing
  9644 ;; This function is called by:
  9645 ;;		_fround
  9646 ;;		_scale
  9647 ;;		_sprintf
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650                           
  9651                           	psect	text14
  9652  0155CE                     __ptext14:
  9653                           	opt stack 0
  9654  0155CE                     ___awdiv:
  9655                           	opt stack 24
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;incstack = 0
  9659  0155CE  0E00               	movlw	0
  9660  0155D0  0100               	movlb	0	; () banked
  9661  0155D2  6F7A               	movwf	___awdiv@sign& (0+255),b
  9662                           
  9663                           ; BSR set to: 0
  9664  0155D4  0100               	movlb	0	; () banked
  9665  0155D6  AF78               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9666  0155D8  D008               	goto	l7804
  9667                           
  9668                           ; BSR set to: 0
  9669  0155DA  0100               	movlb	0	; () banked
  9670  0155DC  6D77               	negf	___awdiv@divisor& (0+255),b
  9671  0155DE  1F78               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9672  0155E0  B0D8               	btfsc	status,0,c
  9673  0155E2  2B78               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9674                           
  9675                           ; BSR set to: 0
  9676  0155E4  0E01               	movlw	1
  9677  0155E6  0100               	movlb	0	; () banked
  9678  0155E8  6F7A               	movwf	___awdiv@sign& (0+255),b
  9679  0155EA                     l7804:
  9680                           
  9681                           ; BSR set to: 0
  9682  0155EA  0100               	movlb	0	; () banked
  9683  0155EC  AF76               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9684  0155EE  D008               	goto	l7810
  9685                           
  9686                           ; BSR set to: 0
  9687  0155F0  0100               	movlb	0	; () banked
  9688  0155F2  6D75               	negf	___awdiv@dividend& (0+255),b
  9689  0155F4  1F76               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9690  0155F6  B0D8               	btfsc	status,0,c
  9691  0155F8  2B76               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9692                           
  9693                           ; BSR set to: 0
  9694  0155FA  0E01               	movlw	1
  9695  0155FC  0100               	movlb	0	; () banked
  9696  0155FE  1B7A               	xorwf	___awdiv@sign& (0+255),f,b
  9697  015600                     l7810:
  9698                           
  9699                           ; BSR set to: 0
  9700  015600  0E00               	movlw	0
  9701  015602  0100               	movlb	0	; () banked
  9702  015604  6F7C               	movwf	(___awdiv@quotient+1)& (0+255),b
  9703  015606  0E00               	movlw	0
  9704  015608  6F7B               	movwf	___awdiv@quotient& (0+255),b
  9705                           
  9706                           ; BSR set to: 0
  9707  01560A  0100               	movlb	0	; () banked
  9708  01560C  5177               	movf	___awdiv@divisor& (0+255),w,b
  9709  01560E  0100               	movlb	0	; () banked
  9710  015610  1178               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9711  015612  B4D8               	btfsc	status,2,c
  9712  015614  D02C               	goto	l7832
  9713                           
  9714                           ; BSR set to: 0
  9715  015616  0E01               	movlw	1
  9716  015618  0100               	movlb	0	; () banked
  9717  01561A  6F79               	movwf	___awdiv@counter& (0+255),b
  9718  01561C  D006               	goto	l7818
  9719  01561E                     l7816:
  9720                           
  9721                           ; BSR set to: 0
  9722  01561E  0100               	movlb	0	; () banked
  9723  015620  90D8               	bcf	status,0,c
  9724  015622  3777               	rlcf	___awdiv@divisor& (0+255),f,b
  9725  015624  3778               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9726  015626  0100               	movlb	0	; () banked
  9727  015628  2B79               	incf	___awdiv@counter& (0+255),f,b
  9728  01562A                     l7818:
  9729                           
  9730                           ; BSR set to: 0
  9731  01562A  0100               	movlb	0	; () banked
  9732  01562C  AF78               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9733  01562E  D7F7               	goto	l7816
  9734  015630                     l7820:
  9735                           
  9736                           ; BSR set to: 0
  9737  015630  0100               	movlb	0	; () banked
  9738  015632  90D8               	bcf	status,0,c
  9739  015634  377B               	rlcf	___awdiv@quotient& (0+255),f,b
  9740  015636  377C               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9741                           
  9742                           ; BSR set to: 0
  9743  015638  0100               	movlb	0	; () banked
  9744  01563A  5177               	movf	___awdiv@divisor& (0+255),w,b
  9745  01563C  0100               	movlb	0	; () banked
  9746  01563E  5D75               	subwf	___awdiv@dividend& (0+255),w,b
  9747  015640  0100               	movlb	0	; () banked
  9748  015642  5178               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9749  015644  0100               	movlb	0	; () banked
  9750  015646  5976               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9751  015648  A0D8               	btfss	status,0,c
  9752  01564A  D00A               	goto	l7828
  9753                           
  9754                           ; BSR set to: 0
  9755  01564C  0100               	movlb	0	; () banked
  9756  01564E  5177               	movf	___awdiv@divisor& (0+255),w,b
  9757  015650  0100               	movlb	0	; () banked
  9758  015652  5F75               	subwf	___awdiv@dividend& (0+255),f,b
  9759  015654  0100               	movlb	0	; () banked
  9760  015656  5178               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9761  015658  0100               	movlb	0	; () banked
  9762  01565A  5B76               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9763                           
  9764                           ; BSR set to: 0
  9765  01565C  0100               	movlb	0	; () banked
  9766  01565E  817B               	bsf	___awdiv@quotient& (0+255),0,b
  9767  015660                     l7828:
  9768                           
  9769                           ; BSR set to: 0
  9770  015660  0100               	movlb	0	; () banked
  9771  015662  90D8               	bcf	status,0,c
  9772  015664  3378               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9773  015666  3377               	rrcf	___awdiv@divisor& (0+255),f,b
  9774                           
  9775                           ; BSR set to: 0
  9776  015668  0100               	movlb	0	; () banked
  9777  01566A  2F79               	decfsz	___awdiv@counter& (0+255),f,b
  9778  01566C  D7E1               	goto	l7820
  9779  01566E                     l7832:
  9780                           
  9781                           ; BSR set to: 0
  9782  01566E  0100               	movlb	0	; () banked
  9783  015670  517A               	movf	___awdiv@sign& (0+255),w,b
  9784  015672  0100               	movlb	0	; () banked
  9785  015674  B4D8               	btfsc	status,2,c
  9786  015676  D005               	goto	l7836
  9787                           
  9788                           ; BSR set to: 0
  9789  015678  0100               	movlb	0	; () banked
  9790  01567A  6D7B               	negf	___awdiv@quotient& (0+255),b
  9791  01567C  1F7C               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9792  01567E  B0D8               	btfsc	status,0,c
  9793  015680  2B7C               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9794  015682                     l7836:
  9795                           
  9796                           ; BSR set to: 0
  9797  015682  C07B  F075         	movff	___awdiv@quotient,?___awdiv
  9798  015686  C07C  F076         	movff	___awdiv@quotient+1,?___awdiv+1
  9799  01568A  0012               	return	
  9800  01568C                     __end_of___awdiv:
  9801                           	opt stack 0
  9802                           tblptru	equ	0xFF8
  9803                           tblptrh	equ	0xFF7
  9804                           tblptrl	equ	0xFF6
  9805                           tablat	equ	0xFF5
  9806                           prodh	equ	0xFF4
  9807                           prodl	equ	0xFF3
  9808                           intcon	equ	0xFF2
  9809                           postinc0	equ	0xFEE
  9810                           wreg	equ	0xFE8
  9811                           indf2	equ	0xFDF
  9812                           postinc2	equ	0xFDE
  9813                           fsr2h	equ	0xFDA
  9814                           fsr2l	equ	0xFD9
  9815                           status	equ	0xFD8
  9816                           
  9817 ;; *************** function __tdiv_to_l_ *****************
  9818 ;; Defined at:
  9819 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  9820 ;; Parameters:    Size  Location     Type
  9821 ;;  f1              4   15[BANK0 ] float 
  9822 ;;  f2              4   19[BANK0 ] float 
  9823 ;; Auto vars:     Size  Location     Type
  9824 ;;  quot            4   26[BANK0 ] unsigned long 
  9825 ;;  exp1            1   31[BANK0 ] unsigned char 
  9826 ;;  cntr            1   30[BANK0 ] unsigned char 
  9827 ;; Return value:  Size  Location     Type
  9828 ;;                  4   15[BANK0 ] unsigned long 
  9829 ;; Registers used:
  9830 ;;		wreg, status,2, status,0
  9831 ;; Tracked objects:
  9832 ;;		On entry : 0/0
  9833 ;;		On exit  : 0/0
  9834 ;;		Unchanged: 0/0
  9835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9836 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9837 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9838 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9839 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9840 ;;Total ram usage:       17 bytes
  9841 ;; Hardware stack levels used:    1
  9842 ;; Hardware stack levels required when called:    3
  9843 ;; This function calls:
  9844 ;;		Nothing
  9845 ;; This function is called by:
  9846 ;;		_sprintf
  9847 ;; This function uses a non-reentrant model
  9848 ;;
  9849                           
  9850                           	psect	text15
  9851  014B94                     __ptext15:
  9852                           	opt stack 0
  9853  014B94                     __tdiv_to_l_:
  9854                           	opt stack 25
  9855                           
  9856                           ; BSR set to: 0
  9857                           ;incstack = 0
  9858  014B94  C071  F077         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9859  014B98  0100               	movlb	0	; () banked
  9860  014B9A  6B78               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9861  014B9C  6B79               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9862  014B9E  0100               	movlb	0	; () banked
  9863  014BA0  3570               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9864  014BA2  0100               	movlb	0	; () banked
  9865  014BA4  3777               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9866  014BA6  E301               	bnc	u10521
  9867  014BA8  8178               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9868  014BAA                     u10521:
  9869  014BAA  0100               	movlb	0	; () banked
  9870  014BAC  5177               	movf	??__tdiv_to_l_& (0+255),w,b
  9871  014BAE  0100               	movlb	0	; () banked
  9872  014BB0  6F7F               	movwf	__tdiv_to_l_@exp1& (0+255),b
  9873  014BB2  0100               	movlb	0	; () banked
  9874  014BB4  517F               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9875  014BB6  A4D8               	btfss	status,2,c
  9876  014BB8  D00A               	goto	l7996
  9877                           
  9878                           ; BSR set to: 0
  9879  014BBA  0E00               	movlw	0
  9880  014BBC  0100               	movlb	0	; () banked
  9881  014BBE  6F6F               	movwf	?__tdiv_to_l_& (0+255),b
  9882  014BC0  0E00               	movlw	0
  9883  014BC2  6F70               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9884  014BC4  0E00               	movlw	0
  9885  014BC6  6F71               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9886  014BC8  0E00               	movlw	0
  9887  014BCA  6F72               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9888                           
  9889                           ; BSR set to: 0
  9890  014BCC  0012               	return	
  9891  014BCE                     l7996:
  9892                           
  9893                           ; BSR set to: 0
  9894  014BCE  C075  F077         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9895  014BD2  0100               	movlb	0	; () banked
  9896  014BD4  6B78               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9897  014BD6  6B79               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9898  014BD8  0100               	movlb	0	; () banked
  9899  014BDA  3574               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9900  014BDC  0100               	movlb	0	; () banked
  9901  014BDE  3777               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9902  014BE0  E301               	bnc	u10541
  9903  014BE2  8178               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9904  014BE4                     u10541:
  9905  014BE4  0100               	movlb	0	; () banked
  9906  014BE6  5177               	movf	??__tdiv_to_l_& (0+255),w,b
  9907  014BE8  0100               	movlb	0	; () banked
  9908  014BEA  6F7E               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9909  014BEC  0100               	movlb	0	; () banked
  9910  014BEE  517E               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9911  014BF0  A4D8               	btfss	status,2,c
  9912  014BF2  D00A               	goto	l8002
  9913                           
  9914                           ; BSR set to: 0
  9915  014BF4  0E00               	movlw	0
  9916  014BF6  0100               	movlb	0	; () banked
  9917  014BF8  6F6F               	movwf	?__tdiv_to_l_& (0+255),b
  9918  014BFA  0E00               	movlw	0
  9919  014BFC  6F70               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9920  014BFE  0E00               	movlw	0
  9921  014C00  6F71               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9922  014C02  0E00               	movlw	0
  9923  014C04  6F72               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9924                           
  9925                           ; BSR set to: 0
  9926  014C06  0012               	return	
  9927  014C08                     l8002:
  9928                           
  9929                           ; BSR set to: 0
  9930  014C08  0100               	movlb	0	; () banked
  9931  014C0A  8F70               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  9932                           
  9933                           ; BSR set to: 0
  9934  014C0C  0EFF               	movlw	255
  9935  014C0E  0100               	movlb	0	; () banked
  9936  014C10  176F               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  9937  014C12  0EFF               	movlw	255
  9938  014C14  0100               	movlb	0	; () banked
  9939  014C16  1770               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9940  014C18  0E00               	movlw	0
  9941  014C1A  0100               	movlb	0	; () banked
  9942  014C1C  1771               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9943  014C1E  0100               	movlb	0	; () banked
  9944  014C20  8F74               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  9945                           
  9946                           ; BSR set to: 0
  9947  014C22  0EFF               	movlw	255
  9948  014C24  0100               	movlb	0	; () banked
  9949  014C26  1773               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  9950  014C28  0EFF               	movlw	255
  9951  014C2A  0100               	movlb	0	; () banked
  9952  014C2C  1774               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  9953  014C2E  0E00               	movlw	0
  9954  014C30  0100               	movlb	0	; () banked
  9955  014C32  1775               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  9956                           
  9957                           ; BSR set to: 0
  9958  014C34  0E00               	movlw	0
  9959  014C36  0100               	movlb	0	; () banked
  9960  014C38  6F7A               	movwf	__tdiv_to_l_@quot& (0+255),b
  9961  014C3A  0E00               	movlw	0
  9962  014C3C  6F7B               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  9963  014C3E  0E00               	movlw	0
  9964  014C40  6F7C               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  9965  014C42  0E00               	movlw	0
  9966  014C44  6F7D               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  9967                           
  9968                           ; BSR set to: 0
  9969  014C46  0E7F               	movlw	127
  9970  014C48  0100               	movlb	0	; () banked
  9971  014C4A  5F7F               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9972                           
  9973                           ; BSR set to: 0
  9974  014C4C  0100               	movlb	0	; () banked
  9975  014C4E  517E               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9976  014C50  0F98               	addlw	152
  9977  014C52  0100               	movlb	0	; () banked
  9978  014C54  5F7F               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9979                           
  9980                           ; BSR set to: 0
  9981  014C56  0E18               	movlw	24
  9982  014C58  0100               	movlb	0	; () banked
  9983  014C5A  6F7E               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9984  014C5C                     l1278:
  9985                           
  9986                           ; BSR set to: 0
  9987  014C5C  0100               	movlb	0	; () banked
  9988  014C5E  90D8               	bcf	status,0,c
  9989  014C60  377A               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9990  014C62  377B               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9991  014C64  377C               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9992  014C66  377D               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9993                           
  9994                           ; BSR set to: 0
  9995  014C68  0100               	movlb	0	; () banked
  9996  014C6A  5173               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9997  014C6C  0100               	movlb	0	; () banked
  9998  014C6E  5D6F               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  9999  014C70  0100               	movlb	0	; () banked
 10000  014C72  5174               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10001  014C74  0100               	movlb	0	; () banked
 10002  014C76  5970               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10003  014C78  0100               	movlb	0	; () banked
 10004  014C7A  5175               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10005  014C7C  0100               	movlb	0	; () banked
 10006  014C7E  5971               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10007  014C80  A0D8               	btfss	status,0,c
 10008  014C82  D00E               	goto	l1279
 10009                           
 10010                           ; BSR set to: 0
 10011  014C84  0100               	movlb	0	; () banked
 10012  014C86  5173               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10013  014C88  0100               	movlb	0	; () banked
 10014  014C8A  5F6F               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10015  014C8C  0100               	movlb	0	; () banked
 10016  014C8E  5174               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10017  014C90  0100               	movlb	0	; () banked
 10018  014C92  5B70               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10019  014C94  0100               	movlb	0	; () banked
 10020  014C96  5175               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10021  014C98  0100               	movlb	0	; () banked
 10022  014C9A  5B71               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10023                           
 10024                           ; BSR set to: 0
 10025  014C9C  0100               	movlb	0	; () banked
 10026  014C9E  817A               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 10027  014CA0                     l1279:
 10028                           
 10029                           ; BSR set to: 0
 10030  014CA0  0100               	movlb	0	; () banked
 10031  014CA2  90D8               	bcf	status,0,c
 10032  014CA4  376F               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10033  014CA6  3770               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10034  014CA8  3771               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10035                           
 10036                           ; BSR set to: 0
 10037  014CAA  0100               	movlb	0	; () banked
 10038  014CAC  2F7E               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 10039  014CAE  D7D6               	goto	l1278
 10040                           
 10041                           ; BSR set to: 0
 10042                           
 10043                           ; BSR set to: 0
 10044  014CB0  0100               	movlb	0	; () banked
 10045  014CB2  AF7F               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 10046  014CB4  D01A               	goto	l8036
 10047                           
 10048                           ; BSR set to: 0
 10049  014CB6  0100               	movlb	0	; () banked
 10050  014CB8  517F               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10051  014CBA  0A80               	xorlw	128
 10052  014CBC  0F97               	addlw	151
 10053  014CBE  B0D8               	btfsc	status,0,c
 10054  014CC0  D00A               	goto	l8032
 10055                           
 10056                           ; BSR set to: 0
 10057  014CC2  0E00               	movlw	0
 10058  014CC4  0100               	movlb	0	; () banked
 10059  014CC6  6F6F               	movwf	?__tdiv_to_l_& (0+255),b
 10060  014CC8  0E00               	movlw	0
 10061  014CCA  6F70               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10062  014CCC  0E00               	movlw	0
 10063  014CCE  6F71               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10064  014CD0  0E00               	movlw	0
 10065  014CD2  6F72               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10066                           
 10067                           ; BSR set to: 0
 10068  014CD4  0012               	return	
 10069  014CD6                     l8032:
 10070                           
 10071                           ; BSR set to: 0
 10072  014CD6  0100               	movlb	0	; () banked
 10073  014CD8  90D8               	bcf	status,0,c
 10074  014CDA  337D               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10075  014CDC  337C               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10076  014CDE  337B               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10077  014CE0  337A               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 10078                           
 10079                           ; BSR set to: 0
 10080  014CE2  0100               	movlb	0	; () banked
 10081  014CE4  3F7F               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 10082  014CE6  D7F7               	goto	l8032
 10083                           
 10084                           ; BSR set to: 0
 10085  014CE8  D01B               	goto	l1285
 10086  014CEA                     l8036:
 10087                           
 10088                           ; BSR set to: 0
 10089  014CEA  0E17               	movlw	23
 10090  014CEC  0100               	movlb	0	; () banked
 10091  014CEE  657F               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 10092  014CF0  D012               	goto	l8044
 10093                           
 10094                           ; BSR set to: 0
 10095  014CF2  0E00               	movlw	0
 10096  014CF4  0100               	movlb	0	; () banked
 10097  014CF6  6F6F               	movwf	?__tdiv_to_l_& (0+255),b
 10098  014CF8  0E00               	movlw	0
 10099  014CFA  6F70               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10100  014CFC  0E00               	movlw	0
 10101  014CFE  6F71               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10102  014D00  0E00               	movlw	0
 10103  014D02  6F72               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10104                           
 10105                           ; BSR set to: 0
 10106  014D04  0012               	return	
 10107  014D06                     l8042:
 10108                           
 10109                           ; BSR set to: 0
 10110  014D06  0100               	movlb	0	; () banked
 10111  014D08  90D8               	bcf	status,0,c
 10112  014D0A  377A               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10113  014D0C  377B               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10114  014D0E  377C               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10115  014D10  377D               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10116  014D12  0100               	movlb	0	; () banked
 10117  014D14  077F               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 10118  014D16                     l8044:
 10119                           
 10120                           ; BSR set to: 0
 10121  014D16  0100               	movlb	0	; () banked
 10122  014D18  517F               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10123  014D1A  0100               	movlb	0	; () banked
 10124  014D1C  A4D8               	btfss	status,2,c
 10125  014D1E  D7F3               	goto	l8042
 10126  014D20                     l1285:
 10127                           
 10128                           ; BSR set to: 0
 10129  014D20  C07A  F06F         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10130  014D24  C07B  F070         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10131  014D28  C07C  F071         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10132  014D2C  C07D  F072         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10133                           
 10134                           ; BSR set to: 0
 10135  014D30  0012               	return		;funcret
 10136  014D32                     __end_of__tdiv_to_l_:
 10137                           	opt stack 0
 10138                           tblptru	equ	0xFF8
 10139                           tblptrh	equ	0xFF7
 10140                           tblptrl	equ	0xFF6
 10141                           tablat	equ	0xFF5
 10142                           prodh	equ	0xFF4
 10143                           prodl	equ	0xFF3
 10144                           intcon	equ	0xFF2
 10145                           postinc0	equ	0xFEE
 10146                           wreg	equ	0xFE8
 10147                           indf2	equ	0xFDF
 10148                           postinc2	equ	0xFDE
 10149                           fsr2h	equ	0xFDA
 10150                           fsr2l	equ	0xFD9
 10151                           status	equ	0xFD8
 10152                           
 10153 ;; *************** function __div_to_l_ *****************
 10154 ;; Defined at:
 10155 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
 10156 ;; Parameters:    Size  Location     Type
 10157 ;;  f1              4   15[BANK0 ] unsigned long 
 10158 ;;  f2              4   19[BANK0 ] unsigned long 
 10159 ;; Auto vars:     Size  Location     Type
 10160 ;;  quot            4   23[BANK0 ] unsigned long 
 10161 ;;  exp1            1   28[BANK0 ] unsigned char 
 10162 ;;  cntr            1   27[BANK0 ] unsigned char 
 10163 ;; Return value:  Size  Location     Type
 10164 ;;                  4   15[BANK0 ] unsigned long 
 10165 ;; Registers used:
 10166 ;;		wreg, status,2, status,0
 10167 ;; Tracked objects:
 10168 ;;		On entry : 0/0
 10169 ;;		On exit  : 0/0
 10170 ;;		Unchanged: 0/0
 10171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10172 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10173 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10175 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10176 ;;Total ram usage:       14 bytes
 10177 ;; Hardware stack levels used:    1
 10178 ;; Hardware stack levels required when called:    3
 10179 ;; This function calls:
 10180 ;;		Nothing
 10181 ;; This function is called by:
 10182 ;;		_sprintf
 10183 ;; This function uses a non-reentrant model
 10184 ;;
 10185                           
 10186                           	psect	text16
 10187  014EC2                     __ptext16:
 10188                           	opt stack 0
 10189  014EC2                     __div_to_l_:
 10190                           	opt stack 25
 10191                           
 10192                           ; BSR set to: 0
 10193                           ;incstack = 0
 10194  014EC2  0100               	movlb	0	; () banked
 10195  014EC4  3571               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10196  014EC6  3572               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10197  014EC8  0100               	movlb	0	; () banked
 10198  014ECA  6F7C               	movwf	__div_to_l_@exp1& (0+255),b
 10199  014ECC  0100               	movlb	0	; () banked
 10200  014ECE  517C               	movf	__div_to_l_@exp1& (0+255),w,b
 10201  014ED0  A4D8               	btfss	status,2,c
 10202  014ED2  D00A               	goto	l8052
 10203                           
 10204                           ; BSR set to: 0
 10205  014ED4  0E00               	movlw	0
 10206  014ED6  0100               	movlb	0	; () banked
 10207  014ED8  6F6F               	movwf	?__div_to_l_& (0+255),b
 10208  014EDA  0E00               	movlw	0
 10209  014EDC  6F70               	movwf	(?__div_to_l_+1)& (0+255),b
 10210  014EDE  0E00               	movlw	0
 10211  014EE0  6F71               	movwf	(?__div_to_l_+2)& (0+255),b
 10212  014EE2  0E00               	movlw	0
 10213  014EE4  6F72               	movwf	(?__div_to_l_+3)& (0+255),b
 10214                           
 10215                           ; BSR set to: 0
 10216  014EE6  0012               	return	
 10217  014EE8                     l8052:
 10218                           
 10219                           ; BSR set to: 0
 10220  014EE8  0100               	movlb	0	; () banked
 10221  014EEA  3575               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10222  014EEC  3576               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10223  014EEE  0100               	movlb	0	; () banked
 10224  014EF0  6F7B               	movwf	__div_to_l_@cntr& (0+255),b
 10225  014EF2  0100               	movlb	0	; () banked
 10226  014EF4  517B               	movf	__div_to_l_@cntr& (0+255),w,b
 10227  014EF6  A4D8               	btfss	status,2,c
 10228  014EF8  D00A               	goto	l8058
 10229                           
 10230                           ; BSR set to: 0
 10231  014EFA  0E00               	movlw	0
 10232  014EFC  0100               	movlb	0	; () banked
 10233  014EFE  6F6F               	movwf	?__div_to_l_& (0+255),b
 10234  014F00  0E00               	movlw	0
 10235  014F02  6F70               	movwf	(?__div_to_l_+1)& (0+255),b
 10236  014F04  0E00               	movlw	0
 10237  014F06  6F71               	movwf	(?__div_to_l_+2)& (0+255),b
 10238  014F08  0E00               	movlw	0
 10239  014F0A  6F72               	movwf	(?__div_to_l_+3)& (0+255),b
 10240                           
 10241                           ; BSR set to: 0
 10242  014F0C  0012               	return	
 10243  014F0E                     l8058:
 10244                           
 10245                           ; BSR set to: 0
 10246  014F0E  0100               	movlb	0	; () banked
 10247  014F10  8F71               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10248                           
 10249                           ; BSR set to: 0
 10250  014F12  0EFF               	movlw	255
 10251  014F14  0100               	movlb	0	; () banked
 10252  014F16  176F               	andwf	__div_to_l_@f1& (0+255),f,b
 10253  014F18  0EFF               	movlw	255
 10254  014F1A  1770               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10255  014F1C  0EFF               	movlw	255
 10256  014F1E  1771               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10257  014F20  0E00               	movlw	0
 10258  014F22  1772               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10259                           
 10260                           ; BSR set to: 0
 10261  014F24  0100               	movlb	0	; () banked
 10262  014F26  8F75               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10263  014F28  0EFF               	movlw	255
 10264  014F2A  0100               	movlb	0	; () banked
 10265  014F2C  1773               	andwf	__div_to_l_@f2& (0+255),f,b
 10266  014F2E  0EFF               	movlw	255
 10267  014F30  1774               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10268  014F32  0EFF               	movlw	255
 10269  014F34  1775               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10270  014F36  0E00               	movlw	0
 10271  014F38  1776               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10272                           
 10273                           ; BSR set to: 0
 10274  014F3A  0E00               	movlw	0
 10275  014F3C  0100               	movlb	0	; () banked
 10276  014F3E  6F77               	movwf	__div_to_l_@quot& (0+255),b
 10277  014F40  0E00               	movlw	0
 10278  014F42  6F78               	movwf	(__div_to_l_@quot+1)& (0+255),b
 10279  014F44  0E00               	movlw	0
 10280  014F46  6F79               	movwf	(__div_to_l_@quot+2)& (0+255),b
 10281  014F48  0E00               	movlw	0
 10282  014F4A  6F7A               	movwf	(__div_to_l_@quot+3)& (0+255),b
 10283                           
 10284                           ; BSR set to: 0
 10285  014F4C  0E7F               	movlw	127
 10286  014F4E  0100               	movlb	0	; () banked
 10287  014F50  5F7C               	subwf	__div_to_l_@exp1& (0+255),f,b
 10288                           
 10289                           ; BSR set to: 0
 10290  014F52  0100               	movlb	0	; () banked
 10291  014F54  517B               	movf	__div_to_l_@cntr& (0+255),w,b
 10292  014F56  0FA0               	addlw	160
 10293  014F58  0100               	movlb	0	; () banked
 10294  014F5A  5F7C               	subwf	__div_to_l_@exp1& (0+255),f,b
 10295                           
 10296                           ; BSR set to: 0
 10297  014F5C  0E20               	movlw	32
 10298  014F5E  0100               	movlb	0	; () banked
 10299  014F60  6F7B               	movwf	__div_to_l_@cntr& (0+255),b
 10300  014F62                     l8072:
 10301                           
 10302                           ; BSR set to: 0
 10303  014F62  0100               	movlb	0	; () banked
 10304  014F64  90D8               	bcf	status,0,c
 10305  014F66  3777               	rlcf	__div_to_l_@quot& (0+255),f,b
 10306  014F68  3778               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10307  014F6A  3779               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10308  014F6C  377A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10309                           
 10310                           ; BSR set to: 0
 10311  014F6E  0100               	movlb	0	; () banked
 10312  014F70  5173               	movf	__div_to_l_@f2& (0+255),w,b
 10313  014F72  0100               	movlb	0	; () banked
 10314  014F74  5D6F               	subwf	__div_to_l_@f1& (0+255),w,b
 10315  014F76  0100               	movlb	0	; () banked
 10316  014F78  5174               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10317  014F7A  0100               	movlb	0	; () banked
 10318  014F7C  5970               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10319  014F7E  0100               	movlb	0	; () banked
 10320  014F80  5175               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10321  014F82  0100               	movlb	0	; () banked
 10322  014F84  5971               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10323  014F86  0100               	movlb	0	; () banked
 10324  014F88  5176               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10325  014F8A  0100               	movlb	0	; () banked
 10326  014F8C  5972               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10327  014F8E  A0D8               	btfss	status,0,c
 10328  014F90  D012               	goto	l8080
 10329                           
 10330                           ; BSR set to: 0
 10331  014F92  0100               	movlb	0	; () banked
 10332  014F94  5173               	movf	__div_to_l_@f2& (0+255),w,b
 10333  014F96  0100               	movlb	0	; () banked
 10334  014F98  5F6F               	subwf	__div_to_l_@f1& (0+255),f,b
 10335  014F9A  0100               	movlb	0	; () banked
 10336  014F9C  5174               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10337  014F9E  0100               	movlb	0	; () banked
 10338  014FA0  5B70               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10339  014FA2  0100               	movlb	0	; () banked
 10340  014FA4  5175               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10341  014FA6  0100               	movlb	0	; () banked
 10342  014FA8  5B71               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10343  014FAA  0100               	movlb	0	; () banked
 10344  014FAC  5176               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10345  014FAE  0100               	movlb	0	; () banked
 10346  014FB0  5B72               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10347                           
 10348                           ; BSR set to: 0
 10349  014FB2  0100               	movlb	0	; () banked
 10350  014FB4  8177               	bsf	__div_to_l_@quot& (0+255),0,b
 10351  014FB6                     l8080:
 10352                           
 10353                           ; BSR set to: 0
 10354  014FB6  0100               	movlb	0	; () banked
 10355  014FB8  90D8               	bcf	status,0,c
 10356  014FBA  376F               	rlcf	__div_to_l_@f1& (0+255),f,b
 10357  014FBC  3770               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10358  014FBE  3771               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10359  014FC0  3772               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10360                           
 10361                           ; BSR set to: 0
 10362  014FC2  0100               	movlb	0	; () banked
 10363  014FC4  2F7B               	decfsz	__div_to_l_@cntr& (0+255),f,b
 10364  014FC6  D7CD               	goto	l8072
 10365                           
 10366                           ; BSR set to: 0
 10367                           
 10368                           ; BSR set to: 0
 10369  014FC8  0100               	movlb	0	; () banked
 10370  014FCA  AF7C               	btfss	__div_to_l_@exp1& (0+255),7,b
 10371  014FCC  D01A               	goto	l8096
 10372                           
 10373                           ; BSR set to: 0
 10374  014FCE  0100               	movlb	0	; () banked
 10375  014FD0  517C               	movf	__div_to_l_@exp1& (0+255),w,b
 10376  014FD2  0A80               	xorlw	128
 10377  014FD4  0F9F               	addlw	159
 10378  014FD6  B0D8               	btfsc	status,0,c
 10379  014FD8  D00A               	goto	l8092
 10380                           
 10381                           ; BSR set to: 0
 10382  014FDA  0E00               	movlw	0
 10383  014FDC  0100               	movlb	0	; () banked
 10384  014FDE  6F6F               	movwf	?__div_to_l_& (0+255),b
 10385  014FE0  0E00               	movlw	0
 10386  014FE2  6F70               	movwf	(?__div_to_l_+1)& (0+255),b
 10387  014FE4  0E00               	movlw	0
 10388  014FE6  6F71               	movwf	(?__div_to_l_+2)& (0+255),b
 10389  014FE8  0E00               	movlw	0
 10390  014FEA  6F72               	movwf	(?__div_to_l_+3)& (0+255),b
 10391                           
 10392                           ; BSR set to: 0
 10393  014FEC  0012               	return	
 10394  014FEE                     l8092:
 10395                           
 10396                           ; BSR set to: 0
 10397  014FEE  0100               	movlb	0	; () banked
 10398  014FF0  90D8               	bcf	status,0,c
 10399  014FF2  337A               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 10400  014FF4  3379               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 10401  014FF6  3378               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 10402  014FF8  3377               	rrcf	__div_to_l_@quot& (0+255),f,b
 10403                           
 10404                           ; BSR set to: 0
 10405  014FFA  0100               	movlb	0	; () banked
 10406  014FFC  3F7C               	incfsz	__div_to_l_@exp1& (0+255),f,b
 10407  014FFE  D7F7               	goto	l8092
 10408                           
 10409                           ; BSR set to: 0
 10410  015000  D01B               	goto	l1181
 10411  015002                     l8096:
 10412                           
 10413                           ; BSR set to: 0
 10414  015002  0E1F               	movlw	31
 10415  015004  0100               	movlb	0	; () banked
 10416  015006  657C               	cpfsgt	__div_to_l_@exp1& (0+255),b
 10417  015008  D012               	goto	l8104
 10418                           
 10419                           ; BSR set to: 0
 10420  01500A  0E00               	movlw	0
 10421  01500C  0100               	movlb	0	; () banked
 10422  01500E  6F6F               	movwf	?__div_to_l_& (0+255),b
 10423  015010  0E00               	movlw	0
 10424  015012  6F70               	movwf	(?__div_to_l_+1)& (0+255),b
 10425  015014  0E00               	movlw	0
 10426  015016  6F71               	movwf	(?__div_to_l_+2)& (0+255),b
 10427  015018  0E00               	movlw	0
 10428  01501A  6F72               	movwf	(?__div_to_l_+3)& (0+255),b
 10429                           
 10430                           ; BSR set to: 0
 10431  01501C  0012               	return	
 10432  01501E                     l8102:
 10433                           
 10434                           ; BSR set to: 0
 10435  01501E  0100               	movlb	0	; () banked
 10436  015020  90D8               	bcf	status,0,c
 10437  015022  3777               	rlcf	__div_to_l_@quot& (0+255),f,b
 10438  015024  3778               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10439  015026  3779               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10440  015028  377A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10441  01502A  0100               	movlb	0	; () banked
 10442  01502C  077C               	decf	__div_to_l_@exp1& (0+255),f,b
 10443  01502E                     l8104:
 10444                           
 10445                           ; BSR set to: 0
 10446  01502E  0100               	movlb	0	; () banked
 10447  015030  517C               	movf	__div_to_l_@exp1& (0+255),w,b
 10448  015032  0100               	movlb	0	; () banked
 10449  015034  A4D8               	btfss	status,2,c
 10450  015036  D7F3               	goto	l8102
 10451  015038                     l1181:
 10452                           
 10453                           ; BSR set to: 0
 10454  015038  C077  F06F         	movff	__div_to_l_@quot,?__div_to_l_
 10455  01503C  C078  F070         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10456  015040  C079  F071         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10457  015044  C07A  F072         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10458                           
 10459                           ; BSR set to: 0
 10460  015048  0012               	return		;funcret
 10461  01504A                     __end_of__div_to_l_:
 10462                           	opt stack 0
 10463                           tblptru	equ	0xFF8
 10464                           tblptrh	equ	0xFF7
 10465                           tblptrl	equ	0xFF6
 10466                           tablat	equ	0xFF5
 10467                           prodh	equ	0xFF4
 10468                           prodl	equ	0xFF3
 10469                           intcon	equ	0xFF2
 10470                           postinc0	equ	0xFEE
 10471                           wreg	equ	0xFE8
 10472                           indf2	equ	0xFDF
 10473                           postinc2	equ	0xFDE
 10474                           fsr2h	equ	0xFDA
 10475                           fsr2l	equ	0xFD9
 10476                           status	equ	0xFD8
 10477                           
 10478 ;; *************** function ___xxtofl *****************
 10479 ;; Defined at:
 10480 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
 10481 ;; Parameters:    Size  Location     Type
 10482 ;;  sign            1    wreg     unsigned char 
 10483 ;;  val             4   15[BANK0 ] long 
 10484 ;; Auto vars:     Size  Location     Type
 10485 ;;  sign            1   23[BANK0 ] unsigned char 
 10486 ;;  arg             4   25[BANK0 ] unsigned long 
 10487 ;;  exp             1   24[BANK0 ] unsigned char 
 10488 ;; Return value:  Size  Location     Type
 10489 ;;                  4   15[BANK0 ] unsigned char 
 10490 ;; Registers used:
 10491 ;;		wreg, status,2, status,0
 10492 ;; Tracked objects:
 10493 ;;		On entry : 0/0
 10494 ;;		On exit  : 0/0
 10495 ;;		Unchanged: 0/0
 10496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10497 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10498 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10499 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10500 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10501 ;;Total ram usage:       14 bytes
 10502 ;; Hardware stack levels used:    1
 10503 ;; Hardware stack levels required when called:    3
 10504 ;; This function calls:
 10505 ;;		Nothing
 10506 ;; This function is called by:
 10507 ;;		_main
 10508 ;;		_LCD_Handler
 10509 ;;		_sprintf
 10510 ;; This function uses a non-reentrant model
 10511 ;;
 10512                           
 10513                           	psect	text17
 10514  014800                     __ptext17:
 10515                           	opt stack 0
 10516  014800                     ___xxtofl:
 10517                           	opt stack 27
 10518                           
 10519                           ; BSR set to: 0
 10520                           ;incstack = 0
 10521                           ;___xxtofl@sign stored from wreg
 10522  014800  0100               	movlb	0	; () banked
 10523  014802  6F77               	movwf	___xxtofl@sign& (0+255),b
 10524  014804  0100               	movlb	0	; () banked
 10525  014806  5177               	movf	___xxtofl@sign& (0+255),w,b
 10526  014808  0100               	movlb	0	; () banked
 10527  01480A  B4D8               	btfsc	status,2,c
 10528  01480C  D01E               	goto	l1576
 10529                           
 10530                           ; BSR set to: 0
 10531  01480E  0100               	movlb	0	; () banked
 10532  014810  AF72               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10533  014812  D01B               	goto	l1576
 10534                           
 10535                           ; BSR set to: 0
 10536  014814  C06F  F073         	movff	___xxtofl@val,??___xxtofl
 10537  014818  C070  F074         	movff	___xxtofl@val+1,??___xxtofl+1
 10538  01481C  C071  F075         	movff	___xxtofl@val+2,??___xxtofl+2
 10539  014820  C072  F076         	movff	___xxtofl@val+3,??___xxtofl+3
 10540  014824  0100               	movlb	0	; () banked
 10541  014826  1F73               	comf	??___xxtofl& (0+255),f,b
 10542  014828  1F74               	comf	(??___xxtofl+1)& (0+255),f,b
 10543  01482A  1F75               	comf	(??___xxtofl+2)& (0+255),f,b
 10544  01482C  1F76               	comf	(??___xxtofl+3)& (0+255),f,b
 10545  01482E  2B73               	incf	??___xxtofl& (0+255),f,b
 10546  014830  0E00               	movlw	0
 10547  014832  2374               	addwfc	(??___xxtofl+1)& (0+255),f,b
 10548  014834  2375               	addwfc	(??___xxtofl+2)& (0+255),f,b
 10549  014836  2376               	addwfc	(??___xxtofl+3)& (0+255),f,b
 10550  014838  C073  F079         	movff	??___xxtofl,___xxtofl@arg
 10551  01483C  C074  F07A         	movff	??___xxtofl+1,___xxtofl@arg+1
 10552  014840  C075  F07B         	movff	??___xxtofl+2,___xxtofl@arg+2
 10553  014844  C076  F07C         	movff	??___xxtofl+3,___xxtofl@arg+3
 10554  014848  D008               	goto	l8230
 10555  01484A                     l1576:
 10556                           
 10557                           ; BSR set to: 0
 10558  01484A  C06F  F079         	movff	___xxtofl@val,___xxtofl@arg
 10559  01484E  C070  F07A         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10560  014852  C071  F07B         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10561  014856  C072  F07C         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10562  01485A                     l8230:
 10563                           
 10564                           ; BSR set to: 0
 10565  01485A  0100               	movlb	0	; () banked
 10566  01485C  516F               	movf	___xxtofl@val& (0+255),w,b
 10567  01485E  0100               	movlb	0	; () banked
 10568  014860  1170               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 10569  014862  0100               	movlb	0	; () banked
 10570  014864  1171               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 10571  014866  0100               	movlb	0	; () banked
 10572  014868  1172               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 10573  01486A  A4D8               	btfss	status,2,c
 10574  01486C  D00A               	goto	l8236
 10575                           
 10576                           ; BSR set to: 0
 10577  01486E  0E00               	movlw	0
 10578  014870  0100               	movlb	0	; () banked
 10579  014872  6F6F               	movwf	?___xxtofl& (0+255),b
 10580  014874  0E00               	movlw	0
 10581  014876  6F70               	movwf	(?___xxtofl+1)& (0+255),b
 10582  014878  0E00               	movlw	0
 10583  01487A  6F71               	movwf	(?___xxtofl+2)& (0+255),b
 10584  01487C  0E00               	movlw	0
 10585  01487E  6F72               	movwf	(?___xxtofl+3)& (0+255),b
 10586                           
 10587                           ; BSR set to: 0
 10588  014880  0012               	return	
 10589  014882                     l8236:
 10590                           
 10591                           ; BSR set to: 0
 10592  014882  0E96               	movlw	150
 10593  014884  0100               	movlb	0	; () banked
 10594  014886  6F78               	movwf	___xxtofl@exp& (0+255),b
 10595  014888  D008               	goto	l8240
 10596  01488A                     l8238:
 10597                           
 10598                           ; BSR set to: 0
 10599  01488A  0100               	movlb	0	; () banked
 10600  01488C  2B78               	incf	___xxtofl@exp& (0+255),f,b
 10601  01488E  0100               	movlb	0	; () banked
 10602  014890  90D8               	bcf	status,0,c
 10603  014892  337C               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10604  014894  337B               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10605  014896  337A               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10606  014898  3379               	rrcf	___xxtofl@arg& (0+255),f,b
 10607  01489A                     l8240:
 10608                           
 10609                           ; BSR set to: 0
 10610  01489A  0E00               	movlw	0
 10611  01489C  0100               	movlb	0	; () banked
 10612  01489E  1579               	andwf	___xxtofl@arg& (0+255),w,b
 10613  0148A0  0100               	movlb	0	; () banked
 10614  0148A2  6F73               	movwf	??___xxtofl& (0+255),b
 10615  0148A4  0E00               	movlw	0
 10616  0148A6  0100               	movlb	0	; () banked
 10617  0148A8  157A               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10618  0148AA  0100               	movlb	0	; () banked
 10619  0148AC  6F74               	movwf	(??___xxtofl+1)& (0+255),b
 10620  0148AE  0E00               	movlw	0
 10621  0148B0  0100               	movlb	0	; () banked
 10622  0148B2  157B               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10623  0148B4  0100               	movlb	0	; () banked
 10624  0148B6  6F75               	movwf	(??___xxtofl+2)& (0+255),b
 10625  0148B8  0EFE               	movlw	254
 10626  0148BA  0100               	movlb	0	; () banked
 10627  0148BC  157C               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10628  0148BE  0100               	movlb	0	; () banked
 10629  0148C0  6F76               	movwf	(??___xxtofl+3)& (0+255),b
 10630  0148C2  0100               	movlb	0	; () banked
 10631  0148C4  5173               	movf	??___xxtofl& (0+255),w,b
 10632  0148C6  0100               	movlb	0	; () banked
 10633  0148C8  1174               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10634  0148CA  0100               	movlb	0	; () banked
 10635  0148CC  1175               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10636  0148CE  0100               	movlb	0	; () banked
 10637  0148D0  1176               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10638  0148D2  B4D8               	btfsc	status,2,c
 10639  0148D4  D010               	goto	l1583
 10640  0148D6  D7D9               	goto	l8238
 10641  0148D8                     l8242:
 10642                           
 10643                           ; BSR set to: 0
 10644  0148D8  0100               	movlb	0	; () banked
 10645  0148DA  2B78               	incf	___xxtofl@exp& (0+255),f,b
 10646                           
 10647                           ; BSR set to: 0
 10648  0148DC  0E01               	movlw	1
 10649  0148DE  0100               	movlb	0	; () banked
 10650  0148E0  2779               	addwf	___xxtofl@arg& (0+255),f,b
 10651  0148E2  0E00               	movlw	0
 10652  0148E4  237A               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 10653  0148E6  237B               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 10654  0148E8  237C               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 10655                           
 10656                           ; BSR set to: 0
 10657  0148EA  0100               	movlb	0	; () banked
 10658  0148EC  90D8               	bcf	status,0,c
 10659  0148EE  337C               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10660  0148F0  337B               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10661  0148F2  337A               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10662  0148F4  3379               	rrcf	___xxtofl@arg& (0+255),f,b
 10663  0148F6                     l1583:
 10664                           
 10665                           ; BSR set to: 0
 10666  0148F6  0E00               	movlw	0
 10667  0148F8  0100               	movlb	0	; () banked
 10668  0148FA  1579               	andwf	___xxtofl@arg& (0+255),w,b
 10669  0148FC  0100               	movlb	0	; () banked
 10670  0148FE  6F73               	movwf	??___xxtofl& (0+255),b
 10671  014900  0E00               	movlw	0
 10672  014902  0100               	movlb	0	; () banked
 10673  014904  157A               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10674  014906  0100               	movlb	0	; () banked
 10675  014908  6F74               	movwf	(??___xxtofl+1)& (0+255),b
 10676  01490A  0E00               	movlw	0
 10677  01490C  0100               	movlb	0	; () banked
 10678  01490E  157B               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10679  014910  0100               	movlb	0	; () banked
 10680  014912  6F75               	movwf	(??___xxtofl+2)& (0+255),b
 10681  014914  0EFF               	movlw	255
 10682  014916  0100               	movlb	0	; () banked
 10683  014918  157C               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10684  01491A  0100               	movlb	0	; () banked
 10685  01491C  6F76               	movwf	(??___xxtofl+3)& (0+255),b
 10686  01491E  0100               	movlb	0	; () banked
 10687  014920  5173               	movf	??___xxtofl& (0+255),w,b
 10688  014922  0100               	movlb	0	; () banked
 10689  014924  1174               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10690  014926  0100               	movlb	0	; () banked
 10691  014928  1175               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10692  01492A  0100               	movlb	0	; () banked
 10693  01492C  1176               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10694  01492E  B4D8               	btfsc	status,2,c
 10695  014930  D009               	goto	l8250
 10696  014932  D7D2               	goto	l8242
 10697  014934                     l8248:
 10698                           
 10699                           ; BSR set to: 0
 10700  014934  0100               	movlb	0	; () banked
 10701  014936  0778               	decf	___xxtofl@exp& (0+255),f,b
 10702  014938  0100               	movlb	0	; () banked
 10703  01493A  90D8               	bcf	status,0,c
 10704  01493C  3779               	rlcf	___xxtofl@arg& (0+255),f,b
 10705  01493E  377A               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 10706  014940  377B               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 10707  014942  377C               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 10708  014944                     l8250:
 10709                           
 10710                           ; BSR set to: 0
 10711  014944  0100               	movlb	0	; () banked
 10712  014946  BF7B               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 10713  014948  D004               	goto	l1590
 10714                           
 10715                           ; BSR set to: 0
 10716  01494A  0E02               	movlw	2
 10717  01494C  0100               	movlb	0	; () banked
 10718  01494E  6178               	cpfslt	___xxtofl@exp& (0+255),b
 10719  014950  D7F1               	goto	l8248
 10720  014952                     l1590:
 10721                           
 10722                           ; BSR set to: 0
 10723  014952  0100               	movlb	0	; () banked
 10724  014954  B178               	btfsc	___xxtofl@exp& (0+255),0,b
 10725  014956  D009               	goto	l1591
 10726                           
 10727                           ; BSR set to: 0
 10728  014958  0EFF               	movlw	255
 10729  01495A  0100               	movlb	0	; () banked
 10730  01495C  1779               	andwf	___xxtofl@arg& (0+255),f,b
 10731  01495E  0EFF               	movlw	255
 10732  014960  177A               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 10733  014962  0E7F               	movlw	127
 10734  014964  177B               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 10735  014966  0EFF               	movlw	255
 10736  014968  177C               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 10737  01496A                     l1591:
 10738                           
 10739                           ; BSR set to: 0
 10740  01496A  0100               	movlb	0	; () banked
 10741  01496C  90D8               	bcf	status,0,c
 10742  01496E  3378               	rrcf	___xxtofl@exp& (0+255),f,b
 10743  014970  C078  F073         	movff	___xxtofl@exp,??___xxtofl
 10744  014974  0100               	movlb	0	; () banked
 10745  014976  6B74               	clrf	(??___xxtofl+1)& (0+255),b
 10746  014978  6B75               	clrf	(??___xxtofl+2)& (0+255),b
 10747  01497A  6B76               	clrf	(??___xxtofl+3)& (0+255),b
 10748  01497C  C073  F076         	movff	??___xxtofl,??___xxtofl+3
 10749  014980  0100               	movlb	0	; () banked
 10750  014982  6B75               	clrf	(??___xxtofl+2)& (0+255),b
 10751  014984  6B74               	clrf	(??___xxtofl+1)& (0+255),b
 10752  014986  6B73               	clrf	??___xxtofl& (0+255),b
 10753  014988  0100               	movlb	0	; () banked
 10754  01498A  5173               	movf	??___xxtofl& (0+255),w,b
 10755  01498C  0100               	movlb	0	; () banked
 10756  01498E  1379               	iorwf	___xxtofl@arg& (0+255),f,b
 10757  014990  0100               	movlb	0	; () banked
 10758  014992  5174               	movf	(??___xxtofl+1)& (0+255),w,b
 10759  014994  0100               	movlb	0	; () banked
 10760  014996  137A               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10761  014998  0100               	movlb	0	; () banked
 10762  01499A  5175               	movf	(??___xxtofl+2)& (0+255),w,b
 10763  01499C  0100               	movlb	0	; () banked
 10764  01499E  137B               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10765  0149A0  0100               	movlb	0	; () banked
 10766  0149A2  5176               	movf	(??___xxtofl+3)& (0+255),w,b
 10767  0149A4  0100               	movlb	0	; () banked
 10768  0149A6  137C               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10769                           
 10770                           ; BSR set to: 0
 10771  0149A8  0100               	movlb	0	; () banked
 10772  0149AA  5177               	movf	___xxtofl@sign& (0+255),w,b
 10773  0149AC  0100               	movlb	0	; () banked
 10774  0149AE  B4D8               	btfsc	status,2,c
 10775  0149B0  D005               	goto	l8262
 10776                           
 10777                           ; BSR set to: 0
 10778  0149B2  0100               	movlb	0	; () banked
 10779  0149B4  AF72               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10780  0149B6  D002               	goto	l8262
 10781                           
 10782                           ; BSR set to: 0
 10783  0149B8  0100               	movlb	0	; () banked
 10784  0149BA  8F7C               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10785  0149BC                     l8262:
 10786                           
 10787                           ; BSR set to: 0
 10788  0149BC  C079  F06F         	movff	___xxtofl@arg,?___xxtofl
 10789  0149C0  C07A  F070         	movff	___xxtofl@arg+1,?___xxtofl+1
 10790  0149C4  C07B  F071         	movff	___xxtofl@arg+2,?___xxtofl+2
 10791  0149C8  C07C  F072         	movff	___xxtofl@arg+3,?___xxtofl+3
 10792  0149CC  0012               	return	
 10793  0149CE                     __end_of___xxtofl:
 10794                           	opt stack 0
 10795                           tblptru	equ	0xFF8
 10796                           tblptrh	equ	0xFF7
 10797                           tblptrl	equ	0xFF6
 10798                           tablat	equ	0xFF5
 10799                           prodh	equ	0xFF4
 10800                           prodl	equ	0xFF3
 10801                           intcon	equ	0xFF2
 10802                           postinc0	equ	0xFEE
 10803                           wreg	equ	0xFE8
 10804                           indf2	equ	0xFDF
 10805                           postinc2	equ	0xFDE
 10806                           fsr2h	equ	0xFDA
 10807                           fsr2l	equ	0xFD9
 10808                           status	equ	0xFD8
 10809                           
 10810 ;; *************** function ___llmod *****************
 10811 ;; Defined at:
 10812 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 10813 ;; Parameters:    Size  Location     Type
 10814 ;;  dividend        4   15[BANK0 ] unsigned long 
 10815 ;;  divisor         4   19[BANK0 ] unsigned long 
 10816 ;; Auto vars:     Size  Location     Type
 10817 ;;  counter         1   23[BANK0 ] unsigned char 
 10818 ;; Return value:  Size  Location     Type
 10819 ;;                  4   15[BANK0 ] unsigned long 
 10820 ;; Registers used:
 10821 ;;		wreg, status,2, status,0
 10822 ;; Tracked objects:
 10823 ;;		On entry : 0/0
 10824 ;;		On exit  : 0/0
 10825 ;;		Unchanged: 0/0
 10826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10827 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10828 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10830 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10831 ;;Total ram usage:        9 bytes
 10832 ;; Hardware stack levels used:    1
 10833 ;; Hardware stack levels required when called:    3
 10834 ;; This function calls:
 10835 ;;		Nothing
 10836 ;; This function is called by:
 10837 ;;		_sprintf
 10838 ;; This function uses a non-reentrant model
 10839 ;;
 10840                           
 10841                           	psect	text18
 10842  01594E                     __ptext18:
 10843                           	opt stack 0
 10844  01594E                     ___llmod:
 10845                           	opt stack 25
 10846                           
 10847                           ; BSR set to: 0
 10848                           ;incstack = 0
 10849  01594E  0100               	movlb	0	; () banked
 10850  015950  5173               	movf	___llmod@divisor& (0+255),w,b
 10851  015952  0100               	movlb	0	; () banked
 10852  015954  1174               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10853  015956  0100               	movlb	0	; () banked
 10854  015958  1175               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10855  01595A  0100               	movlb	0	; () banked
 10856  01595C  1176               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10857  01595E  B4D8               	btfsc	status,2,c
 10858  015960  D03A               	goto	l1384
 10859                           
 10860                           ; BSR set to: 0
 10861  015962  0E01               	movlw	1
 10862  015964  0100               	movlb	0	; () banked
 10863  015966  6F77               	movwf	___llmod@counter& (0+255),b
 10864  015968  D008               	goto	l8214
 10865  01596A                     l8212:
 10866                           
 10867                           ; BSR set to: 0
 10868  01596A  0100               	movlb	0	; () banked
 10869  01596C  90D8               	bcf	status,0,c
 10870  01596E  3773               	rlcf	___llmod@divisor& (0+255),f,b
 10871  015970  3774               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10872  015972  3775               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10873  015974  3776               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10874  015976  0100               	movlb	0	; () banked
 10875  015978  2B77               	incf	___llmod@counter& (0+255),f,b
 10876  01597A                     l8214:
 10877                           
 10878                           ; BSR set to: 0
 10879  01597A  0100               	movlb	0	; () banked
 10880  01597C  AF76               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10881  01597E  D7F5               	goto	l8212
 10882  015980                     l8216:
 10883                           
 10884                           ; BSR set to: 0
 10885  015980  0100               	movlb	0	; () banked
 10886  015982  5173               	movf	___llmod@divisor& (0+255),w,b
 10887  015984  0100               	movlb	0	; () banked
 10888  015986  5D6F               	subwf	___llmod@dividend& (0+255),w,b
 10889  015988  0100               	movlb	0	; () banked
 10890  01598A  5174               	movf	(___llmod@divisor+1)& (0+255),w,b
 10891  01598C  0100               	movlb	0	; () banked
 10892  01598E  5970               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10893  015990  0100               	movlb	0	; () banked
 10894  015992  5175               	movf	(___llmod@divisor+2)& (0+255),w,b
 10895  015994  0100               	movlb	0	; () banked
 10896  015996  5971               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10897  015998  0100               	movlb	0	; () banked
 10898  01599A  5176               	movf	(___llmod@divisor+3)& (0+255),w,b
 10899  01599C  0100               	movlb	0	; () banked
 10900  01599E  5972               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10901  0159A0  A0D8               	btfss	status,0,c
 10902  0159A2  D010               	goto	l8220
 10903                           
 10904                           ; BSR set to: 0
 10905  0159A4  0100               	movlb	0	; () banked
 10906  0159A6  5173               	movf	___llmod@divisor& (0+255),w,b
 10907  0159A8  0100               	movlb	0	; () banked
 10908  0159AA  5F6F               	subwf	___llmod@dividend& (0+255),f,b
 10909  0159AC  0100               	movlb	0	; () banked
 10910  0159AE  5174               	movf	(___llmod@divisor+1)& (0+255),w,b
 10911  0159B0  0100               	movlb	0	; () banked
 10912  0159B2  5B70               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10913  0159B4  0100               	movlb	0	; () banked
 10914  0159B6  5175               	movf	(___llmod@divisor+2)& (0+255),w,b
 10915  0159B8  0100               	movlb	0	; () banked
 10916  0159BA  5B71               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10917  0159BC  0100               	movlb	0	; () banked
 10918  0159BE  5176               	movf	(___llmod@divisor+3)& (0+255),w,b
 10919  0159C0  0100               	movlb	0	; () banked
 10920  0159C2  5B72               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10921  0159C4                     l8220:
 10922                           
 10923                           ; BSR set to: 0
 10924  0159C4  0100               	movlb	0	; () banked
 10925  0159C6  90D8               	bcf	status,0,c
 10926  0159C8  3376               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10927  0159CA  3375               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10928  0159CC  3374               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10929  0159CE  3373               	rrcf	___llmod@divisor& (0+255),f,b
 10930                           
 10931                           ; BSR set to: 0
 10932  0159D0  0100               	movlb	0	; () banked
 10933  0159D2  2F77               	decfsz	___llmod@counter& (0+255),f,b
 10934  0159D4  D7D5               	goto	l8216
 10935  0159D6                     l1384:
 10936                           
 10937                           ; BSR set to: 0
 10938  0159D6  C06F  F06F         	movff	___llmod@dividend,?___llmod
 10939  0159DA  C070  F070         	movff	___llmod@dividend+1,?___llmod+1
 10940  0159DE  C071  F071         	movff	___llmod@dividend+2,?___llmod+2
 10941  0159E2  C072  F072         	movff	___llmod@dividend+3,?___llmod+3
 10942                           
 10943                           ; BSR set to: 0
 10944  0159E6  0012               	return		;funcret
 10945  0159E8                     __end_of___llmod:
 10946                           	opt stack 0
 10947                           tblptru	equ	0xFF8
 10948                           tblptrh	equ	0xFF7
 10949                           tblptrl	equ	0xFF6
 10950                           tablat	equ	0xFF5
 10951                           prodh	equ	0xFF4
 10952                           prodl	equ	0xFF3
 10953                           intcon	equ	0xFF2
 10954                           postinc0	equ	0xFEE
 10955                           wreg	equ	0xFE8
 10956                           indf2	equ	0xFDF
 10957                           postinc2	equ	0xFDE
 10958                           fsr2h	equ	0xFDA
 10959                           fsr2l	equ	0xFD9
 10960                           status	equ	0xFD8
 10961                           
 10962 ;; *************** function ___lldiv *****************
 10963 ;; Defined at:
 10964 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 10965 ;; Parameters:    Size  Location     Type
 10966 ;;  dividend        4   15[BANK0 ] unsigned long 
 10967 ;;  divisor         4   19[BANK0 ] unsigned long 
 10968 ;; Auto vars:     Size  Location     Type
 10969 ;;  quotient        4   23[BANK0 ] unsigned long 
 10970 ;;  counter         1   27[BANK0 ] unsigned char 
 10971 ;; Return value:  Size  Location     Type
 10972 ;;                  4   15[BANK0 ] unsigned long 
 10973 ;; Registers used:
 10974 ;;		wreg, status,2, status,0
 10975 ;; Tracked objects:
 10976 ;;		On entry : 0/0
 10977 ;;		On exit  : 0/0
 10978 ;;		Unchanged: 0/0
 10979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10980 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10981 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10983 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10984 ;;Total ram usage:       13 bytes
 10985 ;; Hardware stack levels used:    1
 10986 ;; Hardware stack levels required when called:    3
 10987 ;; This function calls:
 10988 ;;		Nothing
 10989 ;; This function is called by:
 10990 ;;		_sprintf
 10991 ;; This function uses a non-reentrant model
 10992 ;;
 10993                           
 10994                           	psect	text19
 10995  01568C                     __ptext19:
 10996                           	opt stack 0
 10997  01568C                     ___lldiv:
 10998                           	opt stack 25
 10999                           
 11000                           ; BSR set to: 0
 11001                           ;incstack = 0
 11002  01568C  0E00               	movlw	0
 11003  01568E  0100               	movlb	0	; () banked
 11004  015690  6F77               	movwf	___lldiv@quotient& (0+255),b
 11005  015692  0E00               	movlw	0
 11006  015694  6F78               	movwf	(___lldiv@quotient+1)& (0+255),b
 11007  015696  0E00               	movlw	0
 11008  015698  6F79               	movwf	(___lldiv@quotient+2)& (0+255),b
 11009  01569A  0E00               	movlw	0
 11010  01569C  6F7A               	movwf	(___lldiv@quotient+3)& (0+255),b
 11011                           
 11012                           ; BSR set to: 0
 11013  01569E  0100               	movlb	0	; () banked
 11014  0156A0  5173               	movf	___lldiv@divisor& (0+255),w,b
 11015  0156A2  0100               	movlb	0	; () banked
 11016  0156A4  1174               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11017  0156A6  0100               	movlb	0	; () banked
 11018  0156A8  1175               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11019  0156AA  0100               	movlb	0	; () banked
 11020  0156AC  1176               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11021  0156AE  B4D8               	btfsc	status,2,c
 11022  0156B0  D042               	goto	l1374
 11023                           
 11024                           ; BSR set to: 0
 11025  0156B2  0E01               	movlw	1
 11026  0156B4  0100               	movlb	0	; () banked
 11027  0156B6  6F7B               	movwf	___lldiv@counter& (0+255),b
 11028  0156B8  D008               	goto	l8194
 11029  0156BA                     l8192:
 11030                           
 11031                           ; BSR set to: 0
 11032  0156BA  0100               	movlb	0	; () banked
 11033  0156BC  90D8               	bcf	status,0,c
 11034  0156BE  3773               	rlcf	___lldiv@divisor& (0+255),f,b
 11035  0156C0  3774               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11036  0156C2  3775               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11037  0156C4  3776               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11038  0156C6  0100               	movlb	0	; () banked
 11039  0156C8  2B7B               	incf	___lldiv@counter& (0+255),f,b
 11040  0156CA                     l8194:
 11041                           
 11042                           ; BSR set to: 0
 11043  0156CA  0100               	movlb	0	; () banked
 11044  0156CC  AF76               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11045  0156CE  D7F5               	goto	l8192
 11046  0156D0                     l8196:
 11047                           
 11048                           ; BSR set to: 0
 11049  0156D0  0100               	movlb	0	; () banked
 11050  0156D2  90D8               	bcf	status,0,c
 11051  0156D4  3777               	rlcf	___lldiv@quotient& (0+255),f,b
 11052  0156D6  3778               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11053  0156D8  3779               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11054  0156DA  377A               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11055                           
 11056                           ; BSR set to: 0
 11057  0156DC  0100               	movlb	0	; () banked
 11058  0156DE  5173               	movf	___lldiv@divisor& (0+255),w,b
 11059  0156E0  0100               	movlb	0	; () banked
 11060  0156E2  5D6F               	subwf	___lldiv@dividend& (0+255),w,b
 11061  0156E4  0100               	movlb	0	; () banked
 11062  0156E6  5174               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11063  0156E8  0100               	movlb	0	; () banked
 11064  0156EA  5970               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11065  0156EC  0100               	movlb	0	; () banked
 11066  0156EE  5175               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11067  0156F0  0100               	movlb	0	; () banked
 11068  0156F2  5971               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11069  0156F4  0100               	movlb	0	; () banked
 11070  0156F6  5176               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11071  0156F8  0100               	movlb	0	; () banked
 11072  0156FA  5972               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11073  0156FC  A0D8               	btfss	status,0,c
 11074  0156FE  D012               	goto	l8204
 11075                           
 11076                           ; BSR set to: 0
 11077  015700  0100               	movlb	0	; () banked
 11078  015702  5173               	movf	___lldiv@divisor& (0+255),w,b
 11079  015704  0100               	movlb	0	; () banked
 11080  015706  5F6F               	subwf	___lldiv@dividend& (0+255),f,b
 11081  015708  0100               	movlb	0	; () banked
 11082  01570A  5174               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11083  01570C  0100               	movlb	0	; () banked
 11084  01570E  5B70               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11085  015710  0100               	movlb	0	; () banked
 11086  015712  5175               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11087  015714  0100               	movlb	0	; () banked
 11088  015716  5B71               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11089  015718  0100               	movlb	0	; () banked
 11090  01571A  5176               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11091  01571C  0100               	movlb	0	; () banked
 11092  01571E  5B72               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11093                           
 11094                           ; BSR set to: 0
 11095  015720  0100               	movlb	0	; () banked
 11096  015722  8177               	bsf	___lldiv@quotient& (0+255),0,b
 11097  015724                     l8204:
 11098                           
 11099                           ; BSR set to: 0
 11100  015724  0100               	movlb	0	; () banked
 11101  015726  90D8               	bcf	status,0,c
 11102  015728  3376               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11103  01572A  3375               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11104  01572C  3374               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11105  01572E  3373               	rrcf	___lldiv@divisor& (0+255),f,b
 11106                           
 11107                           ; BSR set to: 0
 11108  015730  0100               	movlb	0	; () banked
 11109  015732  2F7B               	decfsz	___lldiv@counter& (0+255),f,b
 11110  015734  D7CD               	goto	l8196
 11111  015736                     l1374:
 11112                           
 11113                           ; BSR set to: 0
 11114  015736  C077  F06F         	movff	___lldiv@quotient,?___lldiv
 11115  01573A  C078  F070         	movff	___lldiv@quotient+1,?___lldiv+1
 11116  01573E  C079  F071         	movff	___lldiv@quotient+2,?___lldiv+2
 11117  015742  C07A  F072         	movff	___lldiv@quotient+3,?___lldiv+3
 11118                           
 11119                           ; BSR set to: 0
 11120  015746  0012               	return		;funcret
 11121  015748                     __end_of___lldiv:
 11122                           	opt stack 0
 11123                           tblptru	equ	0xFF8
 11124                           tblptrh	equ	0xFF7
 11125                           tblptrl	equ	0xFF6
 11126                           tablat	equ	0xFF5
 11127                           prodh	equ	0xFF4
 11128                           prodl	equ	0xFF3
 11129                           intcon	equ	0xFF2
 11130                           postinc0	equ	0xFEE
 11131                           wreg	equ	0xFE8
 11132                           indf2	equ	0xFDF
 11133                           postinc2	equ	0xFDE
 11134                           fsr2h	equ	0xFDA
 11135                           fsr2l	equ	0xFD9
 11136                           status	equ	0xFD8
 11137                           
 11138 ;; *************** function ___fltol *****************
 11139 ;; Defined at:
 11140 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 11141 ;; Parameters:    Size  Location     Type
 11142 ;;  f1              4   87[BANK0 ] unsigned long 
 11143 ;; Auto vars:     Size  Location     Type
 11144 ;;  exp1            1   96[BANK0 ] unsigned char 
 11145 ;;  sign1           1   95[BANK0 ] unsigned char 
 11146 ;; Return value:  Size  Location     Type
 11147 ;;                  4   87[BANK0 ] long 
 11148 ;; Registers used:
 11149 ;;		wreg, status,2, status,0
 11150 ;; Tracked objects:
 11151 ;;		On entry : 0/0
 11152 ;;		On exit  : 0/0
 11153 ;;		Unchanged: 0/0
 11154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11155 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11156 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11157 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11158 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11159 ;;Total ram usage:       10 bytes
 11160 ;; Hardware stack levels used:    1
 11161 ;; Hardware stack levels required when called:    3
 11162 ;; This function calls:
 11163 ;;		Nothing
 11164 ;; This function is called by:
 11165 ;;		_main
 11166 ;;		_sprintf
 11167 ;; This function uses a non-reentrant model
 11168 ;;
 11169                           
 11170                           	psect	text20
 11171  015314                     __ptext20:
 11172                           	opt stack 0
 11173  015314                     ___fltol:
 11174                           	opt stack 27
 11175                           
 11176                           ; BSR set to: 0
 11177                           ;incstack = 0
 11178  015314  0100               	movlb	0	; () banked
 11179  015316  35B9               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11180  015318  35BA               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11181  01531A  0100               	movlb	0	; () banked
 11182  01531C  6FC0               	movwf	___fltol@exp1& (0+255),b
 11183  01531E  0100               	movlb	0	; () banked
 11184  015320  51C0               	movf	___fltol@exp1& (0+255),w,b
 11185  015322  A4D8               	btfss	status,2,c
 11186  015324  D00A               	goto	l8148
 11187                           
 11188                           ; BSR set to: 0
 11189  015326  0E00               	movlw	0
 11190  015328  0100               	movlb	0	; () banked
 11191  01532A  6FB7               	movwf	?___fltol& (0+255),b
 11192  01532C  0E00               	movlw	0
 11193  01532E  6FB8               	movwf	(?___fltol+1)& (0+255),b
 11194  015330  0E00               	movlw	0
 11195  015332  6FB9               	movwf	(?___fltol+2)& (0+255),b
 11196  015334  0E00               	movlw	0
 11197  015336  6FBA               	movwf	(?___fltol+3)& (0+255),b
 11198                           
 11199                           ; BSR set to: 0
 11200  015338  0012               	return	
 11201  01533A                     l8148:
 11202                           
 11203                           ; BSR set to: 0
 11204  01533A  C0B7  F0BB         	movff	___fltol@f1,??___fltol
 11205  01533E  C0B8  F0BC         	movff	___fltol@f1+1,??___fltol+1
 11206  015342  C0B9  F0BD         	movff	___fltol@f1+2,??___fltol+2
 11207  015346  C0BA  F0BE         	movff	___fltol@f1+3,??___fltol+3
 11208  01534A  0E20               	movlw	32
 11209  01534C  D006               	goto	u10750
 11210  01534E                     u10755:
 11211  01534E  0100               	movlb	0	; () banked
 11212  015350  90D8               	bcf	status,0,c
 11213  015352  33BE               	rrcf	(??___fltol+3)& (0+255),f,b
 11214  015354  33BD               	rrcf	(??___fltol+2)& (0+255),f,b
 11215  015356  33BC               	rrcf	(??___fltol+1)& (0+255),f,b
 11216  015358  33BB               	rrcf	??___fltol& (0+255),f,b
 11217  01535A                     u10750:
 11218  01535A  2EE8               	decfsz	wreg,f,c
 11219  01535C  D7F8               	goto	u10755
 11220  01535E  0100               	movlb	0	; () banked
 11221  015360  51BB               	movf	??___fltol& (0+255),w,b
 11222  015362  0100               	movlb	0	; () banked
 11223  015364  6FBF               	movwf	___fltol@sign1& (0+255),b
 11224                           
 11225                           ; BSR set to: 0
 11226  015366  0100               	movlb	0	; () banked
 11227  015368  8FB9               	bsf	(___fltol@f1+2)& (0+255),7,b
 11228                           
 11229                           ; BSR set to: 0
 11230  01536A  0EFF               	movlw	255
 11231  01536C  0100               	movlb	0	; () banked
 11232  01536E  17B7               	andwf	___fltol@f1& (0+255),f,b
 11233  015370  0EFF               	movlw	255
 11234  015372  17B8               	andwf	(___fltol@f1+1)& (0+255),f,b
 11235  015374  0EFF               	movlw	255
 11236  015376  17B9               	andwf	(___fltol@f1+2)& (0+255),f,b
 11237  015378  0E00               	movlw	0
 11238  01537A  17BA               	andwf	(___fltol@f1+3)& (0+255),f,b
 11239                           
 11240                           ; BSR set to: 0
 11241  01537C  0E96               	movlw	150
 11242  01537E  0100               	movlb	0	; () banked
 11243  015380  5FC0               	subwf	___fltol@exp1& (0+255),f,b
 11244                           
 11245                           ; BSR set to: 0
 11246  015382  0100               	movlb	0	; () banked
 11247  015384  AFC0               	btfss	___fltol@exp1& (0+255),7,b
 11248  015386  D01A               	goto	l8168
 11249                           
 11250                           ; BSR set to: 0
 11251  015388  0100               	movlb	0	; () banked
 11252  01538A  51C0               	movf	___fltol@exp1& (0+255),w,b
 11253  01538C  0A80               	xorlw	128
 11254  01538E  0F97               	addlw	151
 11255  015390  B0D8               	btfsc	status,0,c
 11256  015392  D00A               	goto	l8164
 11257                           
 11258                           ; BSR set to: 0
 11259  015394  0E00               	movlw	0
 11260  015396  0100               	movlb	0	; () banked
 11261  015398  6FB7               	movwf	?___fltol& (0+255),b
 11262  01539A  0E00               	movlw	0
 11263  01539C  6FB8               	movwf	(?___fltol+1)& (0+255),b
 11264  01539E  0E00               	movlw	0
 11265  0153A0  6FB9               	movwf	(?___fltol+2)& (0+255),b
 11266  0153A2  0E00               	movlw	0
 11267  0153A4  6FBA               	movwf	(?___fltol+3)& (0+255),b
 11268                           
 11269                           ; BSR set to: 0
 11270  0153A6  0012               	return	
 11271  0153A8                     l8164:
 11272                           
 11273                           ; BSR set to: 0
 11274  0153A8  0100               	movlb	0	; () banked
 11275  0153AA  90D8               	bcf	status,0,c
 11276  0153AC  33BA               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11277  0153AE  33B9               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11278  0153B0  33B8               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11279  0153B2  33B7               	rrcf	___fltol@f1& (0+255),f,b
 11280                           
 11281                           ; BSR set to: 0
 11282  0153B4  0100               	movlb	0	; () banked
 11283  0153B6  3FC0               	incfsz	___fltol@exp1& (0+255),f,b
 11284  0153B8  D7F7               	goto	l8164
 11285                           
 11286                           ; BSR set to: 0
 11287  0153BA  D01B               	goto	l8178
 11288  0153BC                     l8168:
 11289                           
 11290                           ; BSR set to: 0
 11291  0153BC  0E1F               	movlw	31
 11292  0153BE  0100               	movlb	0	; () banked
 11293  0153C0  65C0               	cpfsgt	___fltol@exp1& (0+255),b
 11294  0153C2  D012               	goto	l8176
 11295                           
 11296                           ; BSR set to: 0
 11297  0153C4  0E00               	movlw	0
 11298  0153C6  0100               	movlb	0	; () banked
 11299  0153C8  6FB7               	movwf	?___fltol& (0+255),b
 11300  0153CA  0E00               	movlw	0
 11301  0153CC  6FB8               	movwf	(?___fltol+1)& (0+255),b
 11302  0153CE  0E00               	movlw	0
 11303  0153D0  6FB9               	movwf	(?___fltol+2)& (0+255),b
 11304  0153D2  0E00               	movlw	0
 11305  0153D4  6FBA               	movwf	(?___fltol+3)& (0+255),b
 11306                           
 11307                           ; BSR set to: 0
 11308  0153D6  0012               	return	
 11309  0153D8                     l8174:
 11310                           
 11311                           ; BSR set to: 0
 11312  0153D8  0100               	movlb	0	; () banked
 11313  0153DA  90D8               	bcf	status,0,c
 11314  0153DC  37B7               	rlcf	___fltol@f1& (0+255),f,b
 11315  0153DE  37B8               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11316  0153E0  37B9               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11317  0153E2  37BA               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11318  0153E4  0100               	movlb	0	; () banked
 11319  0153E6  07C0               	decf	___fltol@exp1& (0+255),f,b
 11320  0153E8                     l8176:
 11321                           
 11322                           ; BSR set to: 0
 11323  0153E8  0100               	movlb	0	; () banked
 11324  0153EA  51C0               	movf	___fltol@exp1& (0+255),w,b
 11325  0153EC  0100               	movlb	0	; () banked
 11326  0153EE  A4D8               	btfss	status,2,c
 11327  0153F0  D7F3               	goto	l8174
 11328  0153F2                     l8178:
 11329                           
 11330                           ; BSR set to: 0
 11331  0153F2  0100               	movlb	0	; () banked
 11332  0153F4  51BF               	movf	___fltol@sign1& (0+255),w,b
 11333  0153F6  0100               	movlb	0	; () banked
 11334  0153F8  B4D8               	btfsc	status,2,c
 11335  0153FA  D009               	goto	l8182
 11336                           
 11337                           ; BSR set to: 0
 11338  0153FC  0100               	movlb	0	; () banked
 11339  0153FE  1FBA               	comf	(___fltol@f1+3)& (0+255),f,b
 11340  015400  1FB9               	comf	(___fltol@f1+2)& (0+255),f,b
 11341  015402  1FB8               	comf	(___fltol@f1+1)& (0+255),f,b
 11342  015404  6DB7               	negf	___fltol@f1& (0+255),b
 11343  015406  0E00               	movlw	0
 11344  015408  23B8               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11345  01540A  23B9               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11346  01540C  23BA               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11347  01540E                     l8182:
 11348                           
 11349                           ; BSR set to: 0
 11350  01540E  C0B7  F0B7         	movff	___fltol@f1,?___fltol
 11351  015412  C0B8  F0B8         	movff	___fltol@f1+1,?___fltol+1
 11352  015416  C0B9  F0B9         	movff	___fltol@f1+2,?___fltol+2
 11353  01541A  C0BA  F0BA         	movff	___fltol@f1+3,?___fltol+3
 11354  01541E  0012               	return	
 11355  015420                     __end_of___fltol:
 11356                           	opt stack 0
 11357                           tblptru	equ	0xFF8
 11358                           tblptrh	equ	0xFF7
 11359                           tblptrl	equ	0xFF6
 11360                           tablat	equ	0xFF5
 11361                           prodh	equ	0xFF4
 11362                           prodl	equ	0xFF3
 11363                           intcon	equ	0xFF2
 11364                           postinc0	equ	0xFEE
 11365                           wreg	equ	0xFE8
 11366                           indf2	equ	0xFDF
 11367                           postinc2	equ	0xFDE
 11368                           fsr2h	equ	0xFDA
 11369                           fsr2l	equ	0xFD9
 11370                           status	equ	0xFD8
 11371                           
 11372 ;; *************** function ___flsub *****************
 11373 ;; Defined at:
 11374 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 11375 ;; Parameters:    Size  Location     Type
 11376 ;;  b               4   87[BANK0 ] long 
 11377 ;;  a               4   91[BANK0 ] long 
 11378 ;; Auto vars:     Size  Location     Type
 11379 ;;		None
 11380 ;; Return value:  Size  Location     Type
 11381 ;;                  4   87[BANK0 ] long 
 11382 ;; Registers used:
 11383 ;;		wreg, status,2, status,0, cstack
 11384 ;; Tracked objects:
 11385 ;;		On entry : 0/0
 11386 ;;		On exit  : 0/0
 11387 ;;		Unchanged: 0/0
 11388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11389 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11392 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11393 ;;Total ram usage:        8 bytes
 11394 ;; Hardware stack levels used:    1
 11395 ;; Hardware stack levels required when called:    4
 11396 ;; This function calls:
 11397 ;;		___fladd
 11398 ;; This function is called by:
 11399 ;;		_sprintf
 11400 ;; This function uses a non-reentrant model
 11401 ;;
 11402                           
 11403                           	psect	text21
 11404  015B1E                     __ptext21:
 11405                           	opt stack 0
 11406  015B1E                     ___flsub:
 11407                           	opt stack 24
 11408                           
 11409                           ; BSR set to: 0
 11410                           ;incstack = 0
 11411  015B1E  0E00               	movlw	0
 11412  015B20  0100               	movlb	0	; () banked
 11413  015B22  1BBB               	xorwf	___flsub@a& (0+255),f,b
 11414  015B24  0E00               	movlw	0
 11415  015B26  1BBC               	xorwf	(___flsub@a+1)& (0+255),f,b
 11416  015B28  0E00               	movlw	0
 11417  015B2A  1BBD               	xorwf	(___flsub@a+2)& (0+255),f,b
 11418  015B2C  0E80               	movlw	128
 11419  015B2E  1BBE               	xorwf	(___flsub@a+3)& (0+255),f,b
 11420                           
 11421                           ; BSR set to: 0
 11422  015B30  C0B7  F0A3         	movff	___flsub@b,___fladd@b
 11423  015B34  C0B8  F0A4         	movff	___flsub@b+1,___fladd@b+1
 11424  015B38  C0B9  F0A5         	movff	___flsub@b+2,___fladd@b+2
 11425  015B3C  C0BA  F0A6         	movff	___flsub@b+3,___fladd@b+3
 11426  015B40  C0BB  F0A7         	movff	___flsub@a,___fladd@a
 11427  015B44  C0BC  F0A8         	movff	___flsub@a+1,___fladd@a+1
 11428  015B48  C0BD  F0A9         	movff	___flsub@a+2,___fladd@a+2
 11429  015B4C  C0BE  F0AA         	movff	___flsub@a+3,___fladd@a+3
 11430  015B50  EC48  F099         	call	___fladd	;wreg free
 11431  015B54  C0A3  F0B7         	movff	?___fladd,?___flsub
 11432  015B58  C0A4  F0B8         	movff	?___fladd+1,?___flsub+1
 11433  015B5C  C0A5  F0B9         	movff	?___fladd+2,?___flsub+2
 11434  015B60  C0A6  F0BA         	movff	?___fladd+3,?___flsub+3
 11435  015B64  0012               	return	
 11436  015B66                     __end_of___flsub:
 11437                           	opt stack 0
 11438                           tblptru	equ	0xFF8
 11439                           tblptrh	equ	0xFF7
 11440                           tblptrl	equ	0xFF6
 11441                           tablat	equ	0xFF5
 11442                           prodh	equ	0xFF4
 11443                           prodl	equ	0xFF3
 11444                           intcon	equ	0xFF2
 11445                           postinc0	equ	0xFEE
 11446                           wreg	equ	0xFE8
 11447                           indf2	equ	0xFDF
 11448                           postinc2	equ	0xFDE
 11449                           fsr2h	equ	0xFDA
 11450                           fsr2l	equ	0xFD9
 11451                           status	equ	0xFD8
 11452                           
 11453 ;; *************** function ___fladd *****************
 11454 ;; Defined at:
 11455 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 11456 ;; Parameters:    Size  Location     Type
 11457 ;;  b               4   67[BANK0 ] long 
 11458 ;;  a               4   71[BANK0 ] long 
 11459 ;; Auto vars:     Size  Location     Type
 11460 ;;  grs             1   86[BANK0 ] unsigned char 
 11461 ;;  bexp            1   85[BANK0 ] unsigned char 
 11462 ;;  aexp            1   84[BANK0 ] unsigned char 
 11463 ;;  signs           1   83[BANK0 ] unsigned char 
 11464 ;; Return value:  Size  Location     Type
 11465 ;;                  4   67[BANK0 ] unsigned char 
 11466 ;; Registers used:
 11467 ;;		wreg, status,2, status,0
 11468 ;; Tracked objects:
 11469 ;;		On entry : 0/0
 11470 ;;		On exit  : 0/0
 11471 ;;		Unchanged: 0/0
 11472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11473 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11474 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11475 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11476 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11477 ;;Total ram usage:       20 bytes
 11478 ;; Hardware stack levels used:    1
 11479 ;; Hardware stack levels required when called:    3
 11480 ;; This function calls:
 11481 ;;		Nothing
 11482 ;; This function is called by:
 11483 ;;		_main
 11484 ;;		_sprintf
 11485 ;;		___flsub
 11486 ;; This function uses a non-reentrant model
 11487 ;;
 11488                           
 11489                           	psect	text22
 11490  013290                     __ptext22:
 11491                           	opt stack 0
 11492  013290                     ___fladd:
 11493                           	opt stack 27
 11494                           
 11495                           ;incstack = 0
 11496  013290  0100               	movlb	0	; () banked
 11497  013292  51A6               	movf	(___fladd@b+3)& (0+255),w,b
 11498  013294  0B80               	andlw	128
 11499  013296  0100               	movlb	0	; () banked
 11500  013298  6FB3               	movwf	___fladd@signs& (0+255),b
 11501  01329A  0100               	movlb	0	; () banked
 11502  01329C  51A6               	movf	(___fladd@b+3)& (0+255),w,b
 11503  01329E  25A6               	addwf	(___fladd@b+3)& (0+255),w,b
 11504  0132A0  0100               	movlb	0	; () banked
 11505  0132A2  6FB5               	movwf	___fladd@bexp& (0+255),b
 11506                           
 11507                           ; BSR set to: 0
 11508  0132A4  0100               	movlb	0	; () banked
 11509  0132A6  AFA5               	btfss	(___fladd@b+2)& (0+255),7,b
 11510  0132A8  D002               	goto	l7470
 11511                           
 11512                           ; BSR set to: 0
 11513  0132AA  0100               	movlb	0	; () banked
 11514  0132AC  81B5               	bsf	___fladd@bexp& (0+255),0,b
 11515  0132AE                     l7470:
 11516                           
 11517                           ; BSR set to: 0
 11518  0132AE  0100               	movlb	0	; () banked
 11519  0132B0  51B5               	movf	___fladd@bexp& (0+255),w,b
 11520  0132B2  0100               	movlb	0	; () banked
 11521  0132B4  B4D8               	btfsc	status,2,c
 11522  0132B6  D012               	goto	l7480
 11523                           
 11524                           ; BSR set to: 0
 11525  0132B8  0100               	movlb	0	; () banked
 11526  0132BA  29B5               	incf	___fladd@bexp& (0+255),w,b
 11527  0132BC  A4D8               	btfss	status,2,c
 11528  0132BE  D009               	goto	l7476
 11529                           
 11530                           ; BSR set to: 0
 11531  0132C0  0E00               	movlw	0
 11532  0132C2  0100               	movlb	0	; () banked
 11533  0132C4  6FA3               	movwf	___fladd@b& (0+255),b
 11534  0132C6  0E00               	movlw	0
 11535  0132C8  6FA4               	movwf	(___fladd@b+1)& (0+255),b
 11536  0132CA  0E00               	movlw	0
 11537  0132CC  6FA5               	movwf	(___fladd@b+2)& (0+255),b
 11538  0132CE  0E00               	movlw	0
 11539  0132D0  6FA6               	movwf	(___fladd@b+3)& (0+255),b
 11540  0132D2                     l7476:
 11541                           
 11542                           ; BSR set to: 0
 11543  0132D2  0100               	movlb	0	; () banked
 11544  0132D4  8FA5               	bsf	(___fladd@b+2)& (0+255),7,b
 11545                           
 11546                           ; BSR set to: 0
 11547  0132D6  0E00               	movlw	0
 11548  0132D8  0100               	movlb	0	; () banked
 11549  0132DA  D008               	goto	L9
 11550  0132DC                     l7480:
 11551                           
 11552                           ; BSR set to: 0
 11553  0132DC  0E00               	movlw	0
 11554  0132DE  0100               	movlb	0	; () banked
 11555  0132E0  6FA3               	movwf	___fladd@b& (0+255),b
 11556  0132E2  0E00               	movlw	0
 11557  0132E4  6FA4               	movwf	(___fladd@b+1)& (0+255),b
 11558  0132E6  0E00               	movlw	0
 11559  0132E8  6FA5               	movwf	(___fladd@b+2)& (0+255),b
 11560  0132EA  0E00               	movlw	0
 11561  0132EC                     L9:
 11562  0132EC  6FA6               	movwf	(___fladd@b+3)& (0+255),b
 11563                           
 11564                           ; BSR set to: 0
 11565                           
 11566                           ; BSR set to: 0
 11567  0132EE  0100               	movlb	0	; () banked
 11568  0132F0  51AA               	movf	(___fladd@a+3)& (0+255),w,b
 11569  0132F2  0B80               	andlw	128
 11570  0132F4  0100               	movlb	0	; () banked
 11571  0132F6  6FB4               	movwf	___fladd@aexp& (0+255),b
 11572                           
 11573                           ; BSR set to: 0
 11574  0132F8  0100               	movlb	0	; () banked
 11575  0132FA  51B3               	movf	___fladd@signs& (0+255),w,b
 11576  0132FC  0100               	movlb	0	; () banked
 11577  0132FE  19B4               	xorwf	___fladd@aexp& (0+255),w,b
 11578  013300  B4D8               	btfsc	status,2,c
 11579  013302  D002               	goto	l7488
 11580                           
 11581                           ; BSR set to: 0
 11582  013304  0100               	movlb	0	; () banked
 11583  013306  8DB3               	bsf	___fladd@signs& (0+255),6,b
 11584  013308                     l7488:
 11585                           
 11586                           ; BSR set to: 0
 11587  013308  0100               	movlb	0	; () banked
 11588  01330A  51AA               	movf	(___fladd@a+3)& (0+255),w,b
 11589  01330C  25AA               	addwf	(___fladd@a+3)& (0+255),w,b
 11590  01330E  0100               	movlb	0	; () banked
 11591  013310  6FB4               	movwf	___fladd@aexp& (0+255),b
 11592                           
 11593                           ; BSR set to: 0
 11594  013312  0100               	movlb	0	; () banked
 11595  013314  AFA9               	btfss	(___fladd@a+2)& (0+255),7,b
 11596  013316  D002               	goto	l7494
 11597                           
 11598                           ; BSR set to: 0
 11599  013318  0100               	movlb	0	; () banked
 11600  01331A  81B4               	bsf	___fladd@aexp& (0+255),0,b
 11601  01331C                     l7494:
 11602                           
 11603                           ; BSR set to: 0
 11604  01331C  0100               	movlb	0	; () banked
 11605  01331E  51B4               	movf	___fladd@aexp& (0+255),w,b
 11606  013320  0100               	movlb	0	; () banked
 11607  013322  B4D8               	btfsc	status,2,c
 11608  013324  D012               	goto	l7504
 11609                           
 11610                           ; BSR set to: 0
 11611  013326  0100               	movlb	0	; () banked
 11612  013328  29B4               	incf	___fladd@aexp& (0+255),w,b
 11613  01332A  A4D8               	btfss	status,2,c
 11614  01332C  D009               	goto	l7500
 11615                           
 11616                           ; BSR set to: 0
 11617  01332E  0E00               	movlw	0
 11618  013330  0100               	movlb	0	; () banked
 11619  013332  6FA7               	movwf	___fladd@a& (0+255),b
 11620  013334  0E00               	movlw	0
 11621  013336  6FA8               	movwf	(___fladd@a+1)& (0+255),b
 11622  013338  0E00               	movlw	0
 11623  01333A  6FA9               	movwf	(___fladd@a+2)& (0+255),b
 11624  01333C  0E00               	movlw	0
 11625  01333E  6FAA               	movwf	(___fladd@a+3)& (0+255),b
 11626  013340                     l7500:
 11627                           
 11628                           ; BSR set to: 0
 11629  013340  0100               	movlb	0	; () banked
 11630  013342  8FA9               	bsf	(___fladd@a+2)& (0+255),7,b
 11631                           
 11632                           ; BSR set to: 0
 11633  013344  0E00               	movlw	0
 11634  013346  0100               	movlb	0	; () banked
 11635  013348  D008               	goto	L10
 11636  01334A                     l7504:
 11637                           
 11638                           ; BSR set to: 0
 11639  01334A  0E00               	movlw	0
 11640  01334C  0100               	movlb	0	; () banked
 11641  01334E  6FA7               	movwf	___fladd@a& (0+255),b
 11642  013350  0E00               	movlw	0
 11643  013352  6FA8               	movwf	(___fladd@a+1)& (0+255),b
 11644  013354  0E00               	movlw	0
 11645  013356  6FA9               	movwf	(___fladd@a+2)& (0+255),b
 11646  013358  0E00               	movlw	0
 11647  01335A                     L10:
 11648  01335A  6FAA               	movwf	(___fladd@a+3)& (0+255),b
 11649                           
 11650                           ; BSR set to: 0
 11651                           
 11652                           ; BSR set to: 0
 11653  01335C  0100               	movlb	0	; () banked
 11654  01335E  51B5               	movf	___fladd@bexp& (0+255),w,b
 11655  013360  0100               	movlb	0	; () banked
 11656  013362  5DB4               	subwf	___fladd@aexp& (0+255),w,b
 11657  013364  B0D8               	btfsc	status,0,c
 11658  013366  D024               	goto	l7542
 11659                           
 11660                           ; BSR set to: 0
 11661  013368  0100               	movlb	0	; () banked
 11662  01336A  ADB3               	btfss	___fladd@signs& (0+255),6,b
 11663  01336C  D003               	goto	l7512
 11664                           
 11665                           ; BSR set to: 0
 11666  01336E  0E80               	movlw	128
 11667  013370  0100               	movlb	0	; () banked
 11668  013372  1BB3               	xorwf	___fladd@signs& (0+255),f,b
 11669  013374                     l7512:
 11670                           
 11671                           ; BSR set to: 0
 11672  013374  C0B5  F0B6         	movff	___fladd@bexp,___fladd@grs
 11673                           
 11674                           ; BSR set to: 0
 11675  013378  C0B4  F0B5         	movff	___fladd@aexp,___fladd@bexp
 11676                           
 11677                           ; BSR set to: 0
 11678  01337C  C0B6  F0B4         	movff	___fladd@grs,___fladd@aexp
 11679                           
 11680                           ; BSR set to: 0
 11681  013380  C0A3  F0B6         	movff	___fladd@b,___fladd@grs
 11682                           
 11683                           ; BSR set to: 0
 11684  013384  C0A7  F0A3         	movff	___fladd@a,___fladd@b
 11685                           
 11686                           ; BSR set to: 0
 11687  013388  C0B6  F0A7         	movff	___fladd@grs,___fladd@a
 11688                           
 11689                           ; BSR set to: 0
 11690  01338C  C0A4  F0B6         	movff	___fladd@b+1,___fladd@grs
 11691                           
 11692                           ; BSR set to: 0
 11693  013390  C0A8  F0A4         	movff	___fladd@a+1,___fladd@b+1
 11694                           
 11695                           ; BSR set to: 0
 11696  013394  C0B6  F0A8         	movff	___fladd@grs,___fladd@a+1
 11697                           
 11698                           ; BSR set to: 0
 11699  013398  C0A5  F0B6         	movff	___fladd@b+2,___fladd@grs
 11700                           
 11701                           ; BSR set to: 0
 11702  01339C  C0A9  F0A5         	movff	___fladd@a+2,___fladd@b+2
 11703                           
 11704                           ; BSR set to: 0
 11705  0133A0  C0B6  F0A9         	movff	___fladd@grs,___fladd@a+2
 11706                           
 11707                           ; BSR set to: 0
 11708  0133A4  C0A6  F0B6         	movff	___fladd@b+3,___fladd@grs
 11709                           
 11710                           ; BSR set to: 0
 11711  0133A8  C0AA  F0A6         	movff	___fladd@a+3,___fladd@b+3
 11712                           
 11713                           ; BSR set to: 0
 11714  0133AC  C0B6  F0AA         	movff	___fladd@grs,___fladd@a+3
 11715  0133B0                     l7542:
 11716                           
 11717                           ; BSR set to: 0
 11718  0133B0  0E00               	movlw	0
 11719  0133B2  0100               	movlb	0	; () banked
 11720  0133B4  6FB6               	movwf	___fladd@grs& (0+255),b
 11721                           
 11722                           ; BSR set to: 0
 11723  0133B6  0100               	movlb	0	; () banked
 11724  0133B8  51B5               	movf	___fladd@bexp& (0+255),w,b
 11725  0133BA  0100               	movlb	0	; () banked
 11726  0133BC  6FAB               	movwf	??___fladd& (0+255),b
 11727  0133BE  6BAC               	clrf	(??___fladd+1)& (0+255),b
 11728  0133C0  0100               	movlb	0	; () banked
 11729  0133C2  1FAB               	comf	??___fladd& (0+255),f,b
 11730  0133C4  1FAC               	comf	(??___fladd+1)& (0+255),f,b
 11731  0133C6  4BAB               	infsnz	??___fladd& (0+255),f,b
 11732  0133C8  2BAC               	incf	(??___fladd+1)& (0+255),f,b
 11733  0133CA  0100               	movlb	0	; () banked
 11734  0133CC  51B4               	movf	___fladd@aexp& (0+255),w,b
 11735  0133CE  0100               	movlb	0	; () banked
 11736  0133D0  6FAD               	movwf	(??___fladd+2)& (0+255),b
 11737  0133D2  6BAE               	clrf	(??___fladd+3)& (0+255),b
 11738  0133D4  0100               	movlb	0	; () banked
 11739  0133D6  51AB               	movf	??___fladd& (0+255),w,b
 11740  0133D8  0100               	movlb	0	; () banked
 11741  0133DA  27AD               	addwf	(??___fladd+2)& (0+255),f,b
 11742  0133DC  0100               	movlb	0	; () banked
 11743  0133DE  51AC               	movf	(??___fladd+1)& (0+255),w,b
 11744  0133E0  0100               	movlb	0	; () banked
 11745  0133E2  23AE               	addwfc	(??___fladd+3)& (0+255),f,b
 11746  0133E4  0100               	movlb	0	; () banked
 11747  0133E6  BFAE               	btfsc	(??___fladd+3)& (0+255),7,b
 11748  0133E8  D03D               	goto	l1469
 11749  0133EA  0100               	movlb	0	; () banked
 11750  0133EC  51AE               	movf	(??___fladd+3)& (0+255),w,b
 11751  0133EE  E105               	bnz	u9810
 11752  0133F0  0E1A               	movlw	26
 11753  0133F2  0100               	movlb	0	; () banked
 11754  0133F4  5DAD               	subwf	(??___fladd+2)& (0+255),w,b
 11755  0133F6  A0D8               	btfss	status,0,c
 11756  0133F8  D035               	goto	l1469
 11757  0133FA                     u9810:
 11758                           
 11759                           ; BSR set to: 0
 11760  0133FA  0100               	movlb	0	; () banked
 11761  0133FC  51A3               	movf	___fladd@b& (0+255),w,b
 11762  0133FE  0100               	movlb	0	; () banked
 11763  013400  11A4               	iorwf	(___fladd@b+1)& (0+255),w,b
 11764  013402  0100               	movlb	0	; () banked
 11765  013404  11A5               	iorwf	(___fladd@b+2)& (0+255),w,b
 11766  013406  0100               	movlb	0	; () banked
 11767  013408  11A6               	iorwf	(___fladd@b+3)& (0+255),w,b
 11768  01340A  B4D8               	btfsc	status,2,c
 11769  01340C  D002               	goto	u9820
 11770  01340E  0E01               	movlw	1
 11771  013410  D001               	goto	u9830
 11772  013412                     u9820:
 11773  013412  0E00               	movlw	0
 11774  013414                     u9830:
 11775  013414  0100               	movlb	0	; () banked
 11776  013416  6FB6               	movwf	___fladd@grs& (0+255),b
 11777                           
 11778                           ; BSR set to: 0
 11779  013418  0E00               	movlw	0
 11780  01341A  0100               	movlb	0	; () banked
 11781  01341C  6FA3               	movwf	___fladd@b& (0+255),b
 11782  01341E  0E00               	movlw	0
 11783  013420  6FA4               	movwf	(___fladd@b+1)& (0+255),b
 11784  013422  0E00               	movlw	0
 11785  013424  6FA5               	movwf	(___fladd@b+2)& (0+255),b
 11786  013426  0E00               	movlw	0
 11787  013428  6FA6               	movwf	(___fladd@b+3)& (0+255),b
 11788                           
 11789                           ; BSR set to: 0
 11790  01342A  C0B4  F0B5         	movff	___fladd@aexp,___fladd@bexp
 11791  01342E  D020               	goto	l1468
 11792  013430                     l1470:
 11793                           
 11794                           ; BSR set to: 0
 11795  013430  0100               	movlb	0	; () banked
 11796  013432  A1B6               	btfss	___fladd@grs& (0+255),0,b
 11797  013434  D007               	goto	l7554
 11798                           
 11799                           ; BSR set to: 0
 11800  013436  0100               	movlb	0	; () banked
 11801  013438  90D8               	bcf	status,0,c
 11802  01343A  31B6               	rrcf	___fladd@grs& (0+255),w,b
 11803  01343C  0901               	iorlw	1
 11804  01343E  0100               	movlb	0	; () banked
 11805  013440  6FB6               	movwf	___fladd@grs& (0+255),b
 11806  013442  D003               	goto	l7556
 11807  013444                     l7554:
 11808                           
 11809                           ; BSR set to: 0
 11810  013444  0100               	movlb	0	; () banked
 11811  013446  90D8               	bcf	status,0,c
 11812  013448  33B6               	rrcf	___fladd@grs& (0+255),f,b
 11813  01344A                     l7556:
 11814                           
 11815                           ; BSR set to: 0
 11816  01344A  0100               	movlb	0	; () banked
 11817  01344C  A1A3               	btfss	___fladd@b& (0+255),0,b
 11818  01344E  D002               	goto	l7560
 11819                           
 11820                           ; BSR set to: 0
 11821  013450  0100               	movlb	0	; () banked
 11822  013452  8FB6               	bsf	___fladd@grs& (0+255),7,b
 11823  013454                     l7560:
 11824                           
 11825                           ; BSR set to: 0
 11826  013454  0100               	movlb	0	; () banked
 11827  013456  35A6               	rlcf	(___fladd@b+3)& (0+255),w,b
 11828  013458  33A6               	rrcf	(___fladd@b+3)& (0+255),f,b
 11829  01345A  33A5               	rrcf	(___fladd@b+2)& (0+255),f,b
 11830  01345C  33A4               	rrcf	(___fladd@b+1)& (0+255),f,b
 11831  01345E  33A3               	rrcf	___fladd@b& (0+255),f,b
 11832                           
 11833                           ; BSR set to: 0
 11834  013460  0100               	movlb	0	; () banked
 11835  013462  2BB5               	incf	___fladd@bexp& (0+255),f,b
 11836  013464                     l1469:
 11837                           
 11838                           ; BSR set to: 0
 11839  013464  0100               	movlb	0	; () banked
 11840  013466  51B4               	movf	___fladd@aexp& (0+255),w,b
 11841  013468  0100               	movlb	0	; () banked
 11842  01346A  5DB5               	subwf	___fladd@bexp& (0+255),w,b
 11843  01346C  A0D8               	btfss	status,0,c
 11844  01346E  D7E0               	goto	l1470
 11845  013470                     l1468:
 11846                           
 11847                           ; BSR set to: 0
 11848  013470  0100               	movlb	0	; () banked
 11849  013472  BDB3               	btfsc	___fladd@signs& (0+255),6,b
 11850  013474  D03F               	goto	l7588
 11851                           
 11852                           ; BSR set to: 0
 11853  013476  0100               	movlb	0	; () banked
 11854  013478  51B5               	movf	___fladd@bexp& (0+255),w,b
 11855  01347A  0100               	movlb	0	; () banked
 11856  01347C  A4D8               	btfss	status,2,c
 11857  01347E  D00A               	goto	l7570
 11858                           
 11859                           ; BSR set to: 0
 11860  013480  0E00               	movlw	0
 11861  013482  0100               	movlb	0	; () banked
 11862  013484  6FA3               	movwf	?___fladd& (0+255),b
 11863  013486  0E00               	movlw	0
 11864  013488  6FA4               	movwf	(?___fladd+1)& (0+255),b
 11865  01348A  0E00               	movlw	0
 11866  01348C  6FA5               	movwf	(?___fladd+2)& (0+255),b
 11867  01348E  0E00               	movlw	0
 11868  013490  6FA6               	movwf	(?___fladd+3)& (0+255),b
 11869                           
 11870                           ; BSR set to: 0
 11871  013492  0012               	return	
 11872  013494                     l7570:
 11873                           
 11874                           ; BSR set to: 0
 11875  013494  0100               	movlb	0	; () banked
 11876  013496  51A7               	movf	___fladd@a& (0+255),w,b
 11877  013498  0100               	movlb	0	; () banked
 11878  01349A  27A3               	addwf	___fladd@b& (0+255),f,b
 11879  01349C  0100               	movlb	0	; () banked
 11880  01349E  51A8               	movf	(___fladd@a+1)& (0+255),w,b
 11881  0134A0  0100               	movlb	0	; () banked
 11882  0134A2  23A4               	addwfc	(___fladd@b+1)& (0+255),f,b
 11883  0134A4  0100               	movlb	0	; () banked
 11884  0134A6  51A9               	movf	(___fladd@a+2)& (0+255),w,b
 11885  0134A8  0100               	movlb	0	; () banked
 11886  0134AA  23A5               	addwfc	(___fladd@b+2)& (0+255),f,b
 11887  0134AC  0100               	movlb	0	; () banked
 11888  0134AE  51AA               	movf	(___fladd@a+3)& (0+255),w,b
 11889  0134B0  0100               	movlb	0	; () banked
 11890  0134B2  23A6               	addwfc	(___fladd@b+3)& (0+255),f,b
 11891                           
 11892                           ; BSR set to: 0
 11893  0134B4  0100               	movlb	0	; () banked
 11894  0134B6  A1A6               	btfss	(___fladd@b+3)& (0+255),0,b
 11895  0134B8  D0CC               	goto	l7624
 11896                           
 11897                           ; BSR set to: 0
 11898  0134BA  0100               	movlb	0	; () banked
 11899  0134BC  A1B6               	btfss	___fladd@grs& (0+255),0,b
 11900  0134BE  D009               	goto	l7578
 11901                           
 11902                           ; BSR set to: 0
 11903  0134C0  0100               	movlb	0	; () banked
 11904  0134C2  90D8               	bcf	status,0,c
 11905  0134C4  33B6               	rrcf	___fladd@grs& (0+255),f,b
 11906  0134C6  0100               	movlb	0	; () banked
 11907  0134C8  51B6               	movf	___fladd@grs& (0+255),w,b
 11908  0134CA  0901               	iorlw	1
 11909  0134CC  0100               	movlb	0	; () banked
 11910  0134CE  6FB6               	movwf	___fladd@grs& (0+255),b
 11911  0134D0  D003               	goto	l7580
 11912  0134D2                     l7578:
 11913                           
 11914                           ; BSR set to: 0
 11915  0134D2  0100               	movlb	0	; () banked
 11916  0134D4  90D8               	bcf	status,0,c
 11917  0134D6  33B6               	rrcf	___fladd@grs& (0+255),f,b
 11918  0134D8                     l7580:
 11919                           
 11920                           ; BSR set to: 0
 11921  0134D8  0100               	movlb	0	; () banked
 11922  0134DA  A1A3               	btfss	___fladd@b& (0+255),0,b
 11923  0134DC  D002               	goto	l7584
 11924                           
 11925                           ; BSR set to: 0
 11926  0134DE  0100               	movlb	0	; () banked
 11927  0134E0  8FB6               	bsf	___fladd@grs& (0+255),7,b
 11928  0134E2                     l7584:
 11929                           
 11930                           ; BSR set to: 0
 11931  0134E2  0100               	movlb	0	; () banked
 11932  0134E4  35A6               	rlcf	(___fladd@b+3)& (0+255),w,b
 11933  0134E6  33A6               	rrcf	(___fladd@b+3)& (0+255),f,b
 11934  0134E8  33A5               	rrcf	(___fladd@b+2)& (0+255),f,b
 11935  0134EA  33A4               	rrcf	(___fladd@b+1)& (0+255),f,b
 11936  0134EC  33A3               	rrcf	___fladd@b& (0+255),f,b
 11937                           
 11938                           ; BSR set to: 0
 11939  0134EE  0100               	movlb	0	; () banked
 11940  0134F0  2BB5               	incf	___fladd@bexp& (0+255),f,b
 11941                           
 11942                           ; BSR set to: 0
 11943  0134F2  D0AF               	goto	l7624
 11944  0134F4                     l7588:
 11945                           
 11946                           ; BSR set to: 0
 11947  0134F4  0100               	movlb	0	; () banked
 11948  0134F6  51A7               	movf	___fladd@a& (0+255),w,b
 11949  0134F8  0100               	movlb	0	; () banked
 11950  0134FA  5DA3               	subwf	___fladd@b& (0+255),w,b
 11951  0134FC  0100               	movlb	0	; () banked
 11952  0134FE  51A8               	movf	(___fladd@a+1)& (0+255),w,b
 11953  013500  0100               	movlb	0	; () banked
 11954  013502  59A4               	subwfb	(___fladd@b+1)& (0+255),w,b
 11955  013504  0100               	movlb	0	; () banked
 11956  013506  51A9               	movf	(___fladd@a+2)& (0+255),w,b
 11957  013508  0100               	movlb	0	; () banked
 11958  01350A  59A5               	subwfb	(___fladd@b+2)& (0+255),w,b
 11959  01350C  0100               	movlb	0	; () banked
 11960  01350E  51A6               	movf	(___fladd@b+3)& (0+255),w,b
 11961  013510  0A80               	xorlw	128
 11962  013512  0100               	movlb	0	; () banked
 11963  013514  6FAB               	movwf	??___fladd& (0+255),b
 11964  013516  0100               	movlb	0	; () banked
 11965  013518  51AA               	movf	(___fladd@a+3)& (0+255),w,b
 11966  01351A  0A80               	xorlw	128
 11967  01351C  0100               	movlb	0	; () banked
 11968  01351E  59AB               	subwfb	??___fladd& (0+255),w,b
 11969  013520  B0D8               	btfsc	status,0,c
 11970  013522  D050               	goto	l7598
 11971                           
 11972                           ; BSR set to: 0
 11973  013524  C0A3  F0AB         	movff	___fladd@b,??___fladd
 11974  013528  C0A4  F0AC         	movff	___fladd@b+1,??___fladd+1
 11975  01352C  C0A5  F0AD         	movff	___fladd@b+2,??___fladd+2
 11976  013530  C0A6  F0AE         	movff	___fladd@b+3,??___fladd+3
 11977  013534  0100               	movlb	0	; () banked
 11978  013536  1FAB               	comf	??___fladd& (0+255),f,b
 11979  013538  1FAC               	comf	(??___fladd+1)& (0+255),f,b
 11980  01353A  1FAD               	comf	(??___fladd+2)& (0+255),f,b
 11981  01353C  1FAE               	comf	(??___fladd+3)& (0+255),f,b
 11982  01353E  2BAB               	incf	??___fladd& (0+255),f,b
 11983  013540  0E00               	movlw	0
 11984  013542  23AC               	addwfc	(??___fladd+1)& (0+255),f,b
 11985  013544  23AD               	addwfc	(??___fladd+2)& (0+255),f,b
 11986  013546  23AE               	addwfc	(??___fladd+3)& (0+255),f,b
 11987  013548  0100               	movlb	0	; () banked
 11988  01354A  51A7               	movf	___fladd@a& (0+255),w,b
 11989  01354C  0100               	movlb	0	; () banked
 11990  01354E  25AB               	addwf	??___fladd& (0+255),w,b
 11991  013550  0100               	movlb	0	; () banked
 11992  013552  6FAF               	movwf	(??___fladd+4)& (0+255),b
 11993  013554  0100               	movlb	0	; () banked
 11994  013556  51A8               	movf	(___fladd@a+1)& (0+255),w,b
 11995  013558  0100               	movlb	0	; () banked
 11996  01355A  21AC               	addwfc	(??___fladd+1)& (0+255),w,b
 11997  01355C  0100               	movlb	0	; () banked
 11998  01355E  6FB0               	movwf	(??___fladd+5)& (0+255),b
 11999  013560  0100               	movlb	0	; () banked
 12000  013562  51A9               	movf	(___fladd@a+2)& (0+255),w,b
 12001  013564  0100               	movlb	0	; () banked
 12002  013566  21AD               	addwfc	(??___fladd+2)& (0+255),w,b
 12003  013568  0100               	movlb	0	; () banked
 12004  01356A  6FB1               	movwf	(??___fladd+6)& (0+255),b
 12005  01356C  0100               	movlb	0	; () banked
 12006  01356E  51AA               	movf	(___fladd@a+3)& (0+255),w,b
 12007  013570  0100               	movlb	0	; () banked
 12008  013572  21AE               	addwfc	(??___fladd+3)& (0+255),w,b
 12009  013574  0100               	movlb	0	; () banked
 12010  013576  6FB2               	movwf	(??___fladd+7)& (0+255),b
 12011  013578  0EFF               	movlw	255
 12012  01357A  0100               	movlb	0	; () banked
 12013  01357C  25AF               	addwf	(??___fladd+4)& (0+255),w,b
 12014  01357E  0100               	movlb	0	; () banked
 12015  013580  6FA3               	movwf	___fladd@b& (0+255),b
 12016  013582  0EFF               	movlw	255
 12017  013584  0100               	movlb	0	; () banked
 12018  013586  21B0               	addwfc	(??___fladd+5)& (0+255),w,b
 12019  013588  0100               	movlb	0	; () banked
 12020  01358A  6FA4               	movwf	(___fladd@b+1)& (0+255),b
 12021  01358C  0EFF               	movlw	255
 12022  01358E  0100               	movlb	0	; () banked
 12023  013590  21B1               	addwfc	(??___fladd+6)& (0+255),w,b
 12024  013592  0100               	movlb	0	; () banked
 12025  013594  6FA5               	movwf	(___fladd@b+2)& (0+255),b
 12026  013596  0EFF               	movlw	255
 12027  013598  0100               	movlb	0	; () banked
 12028  01359A  21B2               	addwfc	(??___fladd+7)& (0+255),w,b
 12029  01359C  0100               	movlb	0	; () banked
 12030  01359E  6FA6               	movwf	(___fladd@b+3)& (0+255),b
 12031  0135A0  0E80               	movlw	128
 12032  0135A2  0100               	movlb	0	; () banked
 12033  0135A4  1BB3               	xorwf	___fladd@signs& (0+255),f,b
 12034                           
 12035                           ; BSR set to: 0
 12036  0135A6  0100               	movlb	0	; () banked
 12037  0135A8  6DB6               	negf	___fladd@grs& (0+255),b
 12038                           
 12039                           ; BSR set to: 0
 12040  0135AA  0100               	movlb	0	; () banked
 12041  0135AC  51B6               	movf	___fladd@grs& (0+255),w,b
 12042  0135AE  0100               	movlb	0	; () banked
 12043  0135B0  A4D8               	btfss	status,2,c
 12044  0135B2  D018               	goto	l1485
 12045                           
 12046                           ; BSR set to: 0
 12047  0135B4  0E01               	movlw	1
 12048  0135B6  0100               	movlb	0	; () banked
 12049  0135B8  27A3               	addwf	___fladd@b& (0+255),f,b
 12050  0135BA  0E00               	movlw	0
 12051  0135BC  23A4               	addwfc	(___fladd@b+1)& (0+255),f,b
 12052  0135BE  23A5               	addwfc	(___fladd@b+2)& (0+255),f,b
 12053  0135C0  23A6               	addwfc	(___fladd@b+3)& (0+255),f,b
 12054                           
 12055                           ; BSR set to: 0
 12056  0135C2  D010               	goto	l1485
 12057  0135C4                     l7598:
 12058                           
 12059                           ; BSR set to: 0
 12060  0135C4  0100               	movlb	0	; () banked
 12061  0135C6  51A7               	movf	___fladd@a& (0+255),w,b
 12062  0135C8  0100               	movlb	0	; () banked
 12063  0135CA  5FA3               	subwf	___fladd@b& (0+255),f,b
 12064  0135CC  0100               	movlb	0	; () banked
 12065  0135CE  51A8               	movf	(___fladd@a+1)& (0+255),w,b
 12066  0135D0  0100               	movlb	0	; () banked
 12067  0135D2  5BA4               	subwfb	(___fladd@b+1)& (0+255),f,b
 12068  0135D4  0100               	movlb	0	; () banked
 12069  0135D6  51A9               	movf	(___fladd@a+2)& (0+255),w,b
 12070  0135D8  0100               	movlb	0	; () banked
 12071  0135DA  5BA5               	subwfb	(___fladd@b+2)& (0+255),f,b
 12072  0135DC  0100               	movlb	0	; () banked
 12073  0135DE  51AA               	movf	(___fladd@a+3)& (0+255),w,b
 12074  0135E0  0100               	movlb	0	; () banked
 12075  0135E2  5BA6               	subwfb	(___fladd@b+3)& (0+255),f,b
 12076  0135E4                     l1485:
 12077                           
 12078                           ; BSR set to: 0
 12079  0135E4  0100               	movlb	0	; () banked
 12080  0135E6  51A3               	movf	___fladd@b& (0+255),w,b
 12081  0135E8  0100               	movlb	0	; () banked
 12082  0135EA  11A4               	iorwf	(___fladd@b+1)& (0+255),w,b
 12083  0135EC  0100               	movlb	0	; () banked
 12084  0135EE  11A5               	iorwf	(___fladd@b+2)& (0+255),w,b
 12085  0135F0  0100               	movlb	0	; () banked
 12086  0135F2  11A6               	iorwf	(___fladd@b+3)& (0+255),w,b
 12087  0135F4  A4D8               	btfss	status,2,c
 12088  0135F6  D02A               	goto	l7622
 12089                           
 12090                           ; BSR set to: 0
 12091  0135F8  0100               	movlb	0	; () banked
 12092  0135FA  51B6               	movf	___fladd@grs& (0+255),w,b
 12093  0135FC  0100               	movlb	0	; () banked
 12094  0135FE  A4D8               	btfss	status,2,c
 12095  013600  D025               	goto	l7622
 12096                           
 12097                           ; BSR set to: 0
 12098  013602  0E00               	movlw	0
 12099  013604  0100               	movlb	0	; () banked
 12100  013606  6FA3               	movwf	?___fladd& (0+255),b
 12101  013608  0E00               	movlw	0
 12102  01360A  6FA4               	movwf	(?___fladd+1)& (0+255),b
 12103  01360C  0E00               	movlw	0
 12104  01360E  6FA5               	movwf	(?___fladd+2)& (0+255),b
 12105  013610  0E00               	movlw	0
 12106  013612  6FA6               	movwf	(?___fladd+3)& (0+255),b
 12107                           
 12108                           ; BSR set to: 0
 12109  013614  0012               	return	
 12110  013616                     l7606:
 12111                           
 12112                           ; BSR set to: 0
 12113  013616  0100               	movlb	0	; () banked
 12114  013618  90D8               	bcf	status,0,c
 12115  01361A  37A3               	rlcf	___fladd@b& (0+255),f,b
 12116  01361C  37A4               	rlcf	(___fladd@b+1)& (0+255),f,b
 12117  01361E  37A5               	rlcf	(___fladd@b+2)& (0+255),f,b
 12118  013620  37A6               	rlcf	(___fladd@b+3)& (0+255),f,b
 12119                           
 12120                           ; BSR set to: 0
 12121  013622  0100               	movlb	0	; () banked
 12122  013624  AFB6               	btfss	___fladd@grs& (0+255),7,b
 12123  013626  D002               	goto	l7612
 12124                           
 12125                           ; BSR set to: 0
 12126  013628  0100               	movlb	0	; () banked
 12127  01362A  81A3               	bsf	___fladd@b& (0+255),0,b
 12128  01362C                     l7612:
 12129                           
 12130                           ; BSR set to: 0
 12131  01362C  0100               	movlb	0	; () banked
 12132  01362E  A1B6               	btfss	___fladd@grs& (0+255),0,b
 12133  013630  D003               	goto	l7616
 12134                           
 12135                           ; BSR set to: 0
 12136  013632  80D8               	bsf	status,0,c
 12137  013634  0100               	movlb	0	; () banked
 12138  013636  D002               	goto	L11
 12139  013638                     l7616:
 12140                           
 12141                           ; BSR set to: 0
 12142  013638  0100               	movlb	0	; () banked
 12143  01363A  90D8               	bcf	status,0,c
 12144  01363C                     L11:
 12145  01363C  37B6               	rlcf	___fladd@grs& (0+255),f,b
 12146                           
 12147                           ; BSR set to: 0
 12148                           
 12149                           ; BSR set to: 0
 12150  01363E  0100               	movlb	0	; () banked
 12151  013640  51B5               	movf	___fladd@bexp& (0+255),w,b
 12152  013642  0100               	movlb	0	; () banked
 12153  013644  B4D8               	btfsc	status,2,c
 12154  013646  D002               	goto	l7622
 12155                           
 12156                           ; BSR set to: 0
 12157  013648  0100               	movlb	0	; () banked
 12158  01364A  07B5               	decf	___fladd@bexp& (0+255),f,b
 12159  01364C                     l7622:
 12160                           
 12161                           ; BSR set to: 0
 12162  01364C  0100               	movlb	0	; () banked
 12163  01364E  AFA5               	btfss	(___fladd@b+2)& (0+255),7,b
 12164  013650  D7E2               	goto	l7606
 12165  013652                     l7624:
 12166                           
 12167                           ; BSR set to: 0
 12168  013652  0E00               	movlw	0
 12169  013654  0100               	movlb	0	; () banked
 12170  013656  6FB4               	movwf	___fladd@aexp& (0+255),b
 12171                           
 12172                           ; BSR set to: 0
 12173  013658  0100               	movlb	0	; () banked
 12174  01365A  AFB6               	btfss	___fladd@grs& (0+255),7,b
 12175  01365C  D00D               	goto	l1494
 12176                           
 12177                           ; BSR set to: 0
 12178  01365E  C0B6  F0AB         	movff	___fladd@grs,??___fladd
 12179  013662  0E7F               	movlw	127
 12180  013664  0100               	movlb	0	; () banked
 12181  013666  17AB               	andwf	??___fladd& (0+255),f,b
 12182  013668  A4D8               	btfss	status,2,c
 12183  01366A  D003               	goto	l7632
 12184                           
 12185                           ; BSR set to: 0
 12186                           
 12187                           ; BSR set to: 0
 12188  01366C  0100               	movlb	0	; () banked
 12189  01366E  A1A3               	btfss	___fladd@b& (0+255),0,b
 12190  013670  D003               	goto	l1494
 12191  013672                     l7632:
 12192                           
 12193                           ; BSR set to: 0
 12194  013672  0E01               	movlw	1
 12195  013674  0100               	movlb	0	; () banked
 12196  013676  6FB4               	movwf	___fladd@aexp& (0+255),b
 12197  013678                     l1494:
 12198                           
 12199                           ; BSR set to: 0
 12200  013678  0100               	movlb	0	; () banked
 12201  01367A  51B4               	movf	___fladd@aexp& (0+255),w,b
 12202  01367C  0100               	movlb	0	; () banked
 12203  01367E  B4D8               	btfsc	status,2,c
 12204  013680  D026               	goto	l7642
 12205                           
 12206                           ; BSR set to: 0
 12207  013682  0E01               	movlw	1
 12208  013684  0100               	movlb	0	; () banked
 12209  013686  27A3               	addwf	___fladd@b& (0+255),f,b
 12210  013688  0E00               	movlw	0
 12211  01368A  23A4               	addwfc	(___fladd@b+1)& (0+255),f,b
 12212  01368C  23A5               	addwfc	(___fladd@b+2)& (0+255),f,b
 12213  01368E  23A6               	addwfc	(___fladd@b+3)& (0+255),f,b
 12214                           
 12215                           ; BSR set to: 0
 12216  013690  0100               	movlb	0	; () banked
 12217  013692  A1A6               	btfss	(___fladd@b+3)& (0+255),0,b
 12218  013694  D01C               	goto	l7642
 12219                           
 12220                           ; BSR set to: 0
 12221  013696  C0A3  F0AB         	movff	___fladd@b,??___fladd
 12222  01369A  C0A4  F0AC         	movff	___fladd@b+1,??___fladd+1
 12223  01369E  C0A5  F0AD         	movff	___fladd@b+2,??___fladd+2
 12224  0136A2  C0A6  F0AE         	movff	___fladd@b+3,??___fladd+3
 12225  0136A6  0100               	movlb	0	; () banked
 12226  0136A8  35AE               	rlcf	(??___fladd+3)& (0+255),w,b
 12227  0136AA  33AE               	rrcf	(??___fladd+3)& (0+255),f,b
 12228  0136AC  33AD               	rrcf	(??___fladd+2)& (0+255),f,b
 12229  0136AE  33AC               	rrcf	(??___fladd+1)& (0+255),f,b
 12230  0136B0  33AB               	rrcf	??___fladd& (0+255),f,b
 12231  0136B2  C0AB  F0A3         	movff	??___fladd,___fladd@b
 12232  0136B6  C0AC  F0A4         	movff	??___fladd+1,___fladd@b+1
 12233  0136BA  C0AD  F0A5         	movff	??___fladd+2,___fladd@b+2
 12234  0136BE  C0AE  F0A6         	movff	??___fladd+3,___fladd@b+3
 12235  0136C2  0100               	movlb	0	; () banked
 12236  0136C4  29B5               	incf	___fladd@bexp& (0+255),w,b
 12237  0136C6  B4D8               	btfsc	status,2,c
 12238  0136C8  D002               	goto	l7642
 12239                           
 12240                           ; BSR set to: 0
 12241  0136CA  0100               	movlb	0	; () banked
 12242  0136CC  2BB5               	incf	___fladd@bexp& (0+255),f,b
 12243  0136CE                     l7642:
 12244                           
 12245                           ; BSR set to: 0
 12246  0136CE  0100               	movlb	0	; () banked
 12247  0136D0  29B5               	incf	___fladd@bexp& (0+255),w,b
 12248  0136D2  B4D8               	btfsc	status,2,c
 12249  0136D4  D005               	goto	l7646
 12250                           
 12251                           ; BSR set to: 0
 12252  0136D6  0100               	movlb	0	; () banked
 12253  0136D8  51B5               	movf	___fladd@bexp& (0+255),w,b
 12254  0136DA  0100               	movlb	0	; () banked
 12255  0136DC  A4D8               	btfss	status,2,c
 12256  0136DE  D011               	goto	l7650
 12257  0136E0                     l7646:
 12258                           
 12259                           ; BSR set to: 0
 12260  0136E0  0E00               	movlw	0
 12261  0136E2  0100               	movlb	0	; () banked
 12262  0136E4  6FA3               	movwf	___fladd@b& (0+255),b
 12263  0136E6  0E00               	movlw	0
 12264  0136E8  6FA4               	movwf	(___fladd@b+1)& (0+255),b
 12265  0136EA  0E00               	movlw	0
 12266  0136EC  6FA5               	movwf	(___fladd@b+2)& (0+255),b
 12267  0136EE  0E00               	movlw	0
 12268  0136F0  6FA6               	movwf	(___fladd@b+3)& (0+255),b
 12269  0136F2  0100               	movlb	0	; () banked
 12270  0136F4  51B5               	movf	___fladd@bexp& (0+255),w,b
 12271  0136F6  0100               	movlb	0	; () banked
 12272  0136F8  A4D8               	btfss	status,2,c
 12273  0136FA  D003               	goto	l7650
 12274                           
 12275                           ; BSR set to: 0
 12276  0136FC  0E00               	movlw	0
 12277  0136FE  0100               	movlb	0	; () banked
 12278  013700  6FB3               	movwf	___fladd@signs& (0+255),b
 12279  013702                     l7650:
 12280                           
 12281                           ; BSR set to: 0
 12282  013702  0100               	movlb	0	; () banked
 12283  013704  A1B5               	btfss	___fladd@bexp& (0+255),0,b
 12284  013706  D003               	goto	l7654
 12285                           
 12286                           ; BSR set to: 0
 12287  013708  0100               	movlb	0	; () banked
 12288  01370A  8FA5               	bsf	(___fladd@b+2)& (0+255),7,b
 12289  01370C  D002               	goto	l7656
 12290  01370E                     l7654:
 12291                           
 12292                           ; BSR set to: 0
 12293  01370E  0100               	movlb	0	; () banked
 12294  013710  9FA5               	bcf	(___fladd@b+2)& (0+255),7,b
 12295  013712                     l7656:
 12296                           
 12297                           ; BSR set to: 0
 12298  013712  0100               	movlb	0	; () banked
 12299  013714  90D8               	bcf	status,0,c
 12300  013716  31B5               	rrcf	___fladd@bexp& (0+255),w,b
 12301  013718  0100               	movlb	0	; () banked
 12302  01371A  6FA6               	movwf	(___fladd@b+3)& (0+255),b
 12303                           
 12304                           ; BSR set to: 0
 12305  01371C  0100               	movlb	0	; () banked
 12306  01371E  AFB3               	btfss	___fladd@signs& (0+255),7,b
 12307  013720  D002               	goto	l7662
 12308                           
 12309                           ; BSR set to: 0
 12310  013722  0100               	movlb	0	; () banked
 12311  013724  8FA6               	bsf	(___fladd@b+3)& (0+255),7,b
 12312  013726                     l7662:
 12313                           
 12314                           ; BSR set to: 0
 12315  013726  C0A3  F0A3         	movff	___fladd@b,?___fladd
 12316  01372A  C0A4  F0A4         	movff	___fladd@b+1,?___fladd+1
 12317  01372E  C0A5  F0A5         	movff	___fladd@b+2,?___fladd+2
 12318  013732  C0A6  F0A6         	movff	___fladd@b+3,?___fladd+3
 12319  013736  0012               	return	
 12320  013738                     __end_of___fladd:
 12321                           	opt stack 0
 12322                           tblptru	equ	0xFF8
 12323                           tblptrh	equ	0xFF7
 12324                           tblptrl	equ	0xFF6
 12325                           tablat	equ	0xFF5
 12326                           prodh	equ	0xFF4
 12327                           prodl	equ	0xFF3
 12328                           intcon	equ	0xFF2
 12329                           postinc0	equ	0xFEE
 12330                           wreg	equ	0xFE8
 12331                           indf2	equ	0xFDF
 12332                           postinc2	equ	0xFDE
 12333                           fsr2h	equ	0xFDA
 12334                           fsr2l	equ	0xFD9
 12335                           status	equ	0xFD8
 12336                           
 12337 ;; *************** function ___flneg *****************
 12338 ;; Defined at:
 12339 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
 12340 ;; Parameters:    Size  Location     Type
 12341 ;;  f1              4   54[BANK0 ] unsigned char 
 12342 ;; Auto vars:     Size  Location     Type
 12343 ;;		None
 12344 ;; Return value:  Size  Location     Type
 12345 ;;                  4   54[BANK0 ] unsigned char 
 12346 ;; Registers used:
 12347 ;;		wreg, status,2, status,0
 12348 ;; Tracked objects:
 12349 ;;		On entry : 0/0
 12350 ;;		On exit  : 0/0
 12351 ;;		Unchanged: 0/0
 12352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12353 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12356 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12357 ;;Total ram usage:        4 bytes
 12358 ;; Hardware stack levels used:    1
 12359 ;; Hardware stack levels required when called:    3
 12360 ;; This function calls:
 12361 ;;		Nothing
 12362 ;; This function is called by:
 12363 ;;		_main
 12364 ;;		_sprintf
 12365 ;; This function uses a non-reentrant model
 12366 ;;
 12367                           
 12368                           	psect	text23
 12369  015C1E                     __ptext23:
 12370                           	opt stack 0
 12371  015C1E                     ___flneg:
 12372                           	opt stack 27
 12373                           
 12374                           ; BSR set to: 0
 12375                           ;incstack = 0
 12376  015C1E  0100               	movlb	0	; () banked
 12377  015C20  5196               	movf	___flneg@f1& (0+255),w,b
 12378  015C22  0100               	movlb	0	; () banked
 12379  015C24  1197               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12380  015C26  0100               	movlb	0	; () banked
 12381  015C28  1198               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12382  015C2A  0100               	movlb	0	; () banked
 12383  015C2C  1199               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12384  015C2E  B4D8               	btfsc	status,2,c
 12385  015C30  D009               	goto	l8138
 12386                           
 12387                           ; BSR set to: 0
 12388  015C32  0E00               	movlw	0
 12389  015C34  0100               	movlb	0	; () banked
 12390  015C36  1B96               	xorwf	___flneg@f1& (0+255),f,b
 12391  015C38  0E00               	movlw	0
 12392  015C3A  1B97               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12393  015C3C  0E00               	movlw	0
 12394  015C3E  1B98               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12395  015C40  0E80               	movlw	128
 12396  015C42  1B99               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12397  015C44                     l8138:
 12398                           
 12399                           ; BSR set to: 0
 12400  015C44  C096  F096         	movff	___flneg@f1,?___flneg
 12401  015C48  C097  F097         	movff	___flneg@f1+1,?___flneg+1
 12402  015C4C  C098  F098         	movff	___flneg@f1+2,?___flneg+2
 12403  015C50  C099  F099         	movff	___flneg@f1+3,?___flneg+3
 12404  015C54  0012               	return	
 12405  015C56                     __end_of___flneg:
 12406                           	opt stack 0
 12407                           tblptru	equ	0xFF8
 12408                           tblptrh	equ	0xFF7
 12409                           tblptrl	equ	0xFF6
 12410                           tablat	equ	0xFF5
 12411                           prodh	equ	0xFF4
 12412                           prodl	equ	0xFF3
 12413                           intcon	equ	0xFF2
 12414                           postinc0	equ	0xFEE
 12415                           wreg	equ	0xFE8
 12416                           indf2	equ	0xFDF
 12417                           postinc2	equ	0xFDE
 12418                           fsr2h	equ	0xFDA
 12419                           fsr2l	equ	0xFD9
 12420                           status	equ	0xFD8
 12421                           
 12422 ;; *************** function ___flge *****************
 12423 ;; Defined at:
 12424 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
 12425 ;; Parameters:    Size  Location     Type
 12426 ;;  ff1             4   15[BANK0 ] unsigned char 
 12427 ;;  ff2             4   19[BANK0 ] unsigned char 
 12428 ;; Auto vars:     Size  Location     Type
 12429 ;;		None
 12430 ;; Return value:  Size  Location     Type
 12431 ;;		None               void
 12432 ;; Registers used:
 12433 ;;		wreg, status,2, status,0
 12434 ;; Tracked objects:
 12435 ;;		On entry : 0/0
 12436 ;;		On exit  : 0/0
 12437 ;;		Unchanged: 0/0
 12438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12439 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12441 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12442 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12443 ;;Total ram usage:       12 bytes
 12444 ;; Hardware stack levels used:    1
 12445 ;; Hardware stack levels required when called:    3
 12446 ;; This function calls:
 12447 ;;		Nothing
 12448 ;; This function is called by:
 12449 ;;		_sprintf
 12450 ;; This function uses a non-reentrant model
 12451 ;;
 12452                           
 12453                           	psect	text24
 12454  014D32                     __ptext24:
 12455                           	opt stack 0
 12456  014D32                     ___flge:
 12457                           	opt stack 25
 12458                           
 12459                           ; BSR set to: 0
 12460                           ;incstack = 0
 12461  014D32  0E00               	movlw	0
 12462  014D34  0100               	movlb	0	; () banked
 12463  014D36  156F               	andwf	___flge@ff1& (0+255),w,b
 12464  014D38  0100               	movlb	0	; () banked
 12465  014D3A  6F77               	movwf	??___flge& (0+255),b
 12466  014D3C  0E00               	movlw	0
 12467  014D3E  0100               	movlb	0	; () banked
 12468  014D40  1570               	andwf	(___flge@ff1+1)& (0+255),w,b
 12469  014D42  0100               	movlb	0	; () banked
 12470  014D44  6F78               	movwf	(??___flge+1)& (0+255),b
 12471  014D46  0E80               	movlw	128
 12472  014D48  0100               	movlb	0	; () banked
 12473  014D4A  1571               	andwf	(___flge@ff1+2)& (0+255),w,b
 12474  014D4C  0100               	movlb	0	; () banked
 12475  014D4E  6F79               	movwf	(??___flge+2)& (0+255),b
 12476  014D50  0E7F               	movlw	127
 12477  014D52  0100               	movlb	0	; () banked
 12478  014D54  1572               	andwf	(___flge@ff1+3)& (0+255),w,b
 12479  014D56  0100               	movlb	0	; () banked
 12480  014D58  6F7A               	movwf	(??___flge+3)& (0+255),b
 12481  014D5A  0100               	movlb	0	; () banked
 12482  014D5C  5177               	movf	??___flge& (0+255),w,b
 12483  014D5E  0100               	movlb	0	; () banked
 12484  014D60  1178               	iorwf	(??___flge+1)& (0+255),w,b
 12485  014D62  0100               	movlb	0	; () banked
 12486  014D64  1179               	iorwf	(??___flge+2)& (0+255),w,b
 12487  014D66  0100               	movlb	0	; () banked
 12488  014D68  117A               	iorwf	(??___flge+3)& (0+255),w,b
 12489  014D6A  A4D8               	btfss	status,2,c
 12490  014D6C  D009               	goto	l8116
 12491                           
 12492                           ; BSR set to: 0
 12493  014D6E  0E00               	movlw	0
 12494  014D70  0100               	movlb	0	; () banked
 12495  014D72  6F6F               	movwf	___flge@ff1& (0+255),b
 12496  014D74  0E00               	movlw	0
 12497  014D76  6F70               	movwf	(___flge@ff1+1)& (0+255),b
 12498  014D78  0E00               	movlw	0
 12499  014D7A  6F71               	movwf	(___flge@ff1+2)& (0+255),b
 12500  014D7C  0E00               	movlw	0
 12501  014D7E  6F72               	movwf	(___flge@ff1+3)& (0+255),b
 12502  014D80                     l8116:
 12503                           
 12504                           ; BSR set to: 0
 12505  014D80  0E00               	movlw	0
 12506  014D82  0100               	movlb	0	; () banked
 12507  014D84  1573               	andwf	___flge@ff2& (0+255),w,b
 12508  014D86  0100               	movlb	0	; () banked
 12509  014D88  6F77               	movwf	??___flge& (0+255),b
 12510  014D8A  0E00               	movlw	0
 12511  014D8C  0100               	movlb	0	; () banked
 12512  014D8E  1574               	andwf	(___flge@ff2+1)& (0+255),w,b
 12513  014D90  0100               	movlb	0	; () banked
 12514  014D92  6F78               	movwf	(??___flge+1)& (0+255),b
 12515  014D94  0E80               	movlw	128
 12516  014D96  0100               	movlb	0	; () banked
 12517  014D98  1575               	andwf	(___flge@ff2+2)& (0+255),w,b
 12518  014D9A  0100               	movlb	0	; () banked
 12519  014D9C  6F79               	movwf	(??___flge+2)& (0+255),b
 12520  014D9E  0E7F               	movlw	127
 12521  014DA0  0100               	movlb	0	; () banked
 12522  014DA2  1576               	andwf	(___flge@ff2+3)& (0+255),w,b
 12523  014DA4  0100               	movlb	0	; () banked
 12524  014DA6  6F7A               	movwf	(??___flge+3)& (0+255),b
 12525  014DA8  0100               	movlb	0	; () banked
 12526  014DAA  5177               	movf	??___flge& (0+255),w,b
 12527  014DAC  0100               	movlb	0	; () banked
 12528  014DAE  1178               	iorwf	(??___flge+1)& (0+255),w,b
 12529  014DB0  0100               	movlb	0	; () banked
 12530  014DB2  1179               	iorwf	(??___flge+2)& (0+255),w,b
 12531  014DB4  0100               	movlb	0	; () banked
 12532  014DB6  117A               	iorwf	(??___flge+3)& (0+255),w,b
 12533  014DB8  A4D8               	btfss	status,2,c
 12534  014DBA  D009               	goto	l8120
 12535                           
 12536                           ; BSR set to: 0
 12537  014DBC  0E00               	movlw	0
 12538  014DBE  0100               	movlb	0	; () banked
 12539  014DC0  6F73               	movwf	___flge@ff2& (0+255),b
 12540  014DC2  0E00               	movlw	0
 12541  014DC4  6F74               	movwf	(___flge@ff2+1)& (0+255),b
 12542  014DC6  0E00               	movlw	0
 12543  014DC8  6F75               	movwf	(___flge@ff2+2)& (0+255),b
 12544  014DCA  0E00               	movlw	0
 12545  014DCC  6F76               	movwf	(___flge@ff2+3)& (0+255),b
 12546  014DCE                     l8120:
 12547                           
 12548                           ; BSR set to: 0
 12549  014DCE  0100               	movlb	0	; () banked
 12550  014DD0  AF72               	btfss	(___flge@ff1+3)& (0+255),7,b
 12551  014DD2  D026               	goto	l8124
 12552                           
 12553                           ; BSR set to: 0
 12554  014DD4  C06F  F077         	movff	___flge@ff1,??___flge
 12555  014DD8  C070  F078         	movff	___flge@ff1+1,??___flge+1
 12556  014DDC  C071  F079         	movff	___flge@ff1+2,??___flge+2
 12557  014DE0  C072  F07A         	movff	___flge@ff1+3,??___flge+3
 12558  014DE4  0100               	movlb	0	; () banked
 12559  014DE6  1F77               	comf	??___flge& (0+255),f,b
 12560  014DE8  1F78               	comf	(??___flge+1)& (0+255),f,b
 12561  014DEA  1F79               	comf	(??___flge+2)& (0+255),f,b
 12562  014DEC  1F7A               	comf	(??___flge+3)& (0+255),f,b
 12563  014DEE  2B77               	incf	??___flge& (0+255),f,b
 12564  014DF0  0E00               	movlw	0
 12565  014DF2  2378               	addwfc	(??___flge+1)& (0+255),f,b
 12566  014DF4  2379               	addwfc	(??___flge+2)& (0+255),f,b
 12567  014DF6  237A               	addwfc	(??___flge+3)& (0+255),f,b
 12568  014DF8  0E00               	movlw	0
 12569  014DFA  0100               	movlb	0	; () banked
 12570  014DFC  2577               	addwf	??___flge& (0+255),w,b
 12571  014DFE  0100               	movlb	0	; () banked
 12572  014E00  6F6F               	movwf	___flge@ff1& (0+255),b
 12573  014E02  0E00               	movlw	0
 12574  014E04  0100               	movlb	0	; () banked
 12575  014E06  2178               	addwfc	(??___flge+1)& (0+255),w,b
 12576  014E08  0100               	movlb	0	; () banked
 12577  014E0A  6F70               	movwf	(___flge@ff1+1)& (0+255),b
 12578  014E0C  0E00               	movlw	0
 12579  014E0E  0100               	movlb	0	; () banked
 12580  014E10  2179               	addwfc	(??___flge+2)& (0+255),w,b
 12581  014E12  0100               	movlb	0	; () banked
 12582  014E14  6F71               	movwf	(___flge@ff1+2)& (0+255),b
 12583  014E16  0E80               	movlw	128
 12584  014E18  0100               	movlb	0	; () banked
 12585  014E1A  217A               	addwfc	(??___flge+3)& (0+255),w,b
 12586  014E1C  0100               	movlb	0	; () banked
 12587  014E1E  6F72               	movwf	(___flge@ff1+3)& (0+255),b
 12588  014E20                     l8124:
 12589                           
 12590                           ; BSR set to: 0
 12591  014E20  0100               	movlb	0	; () banked
 12592  014E22  AF76               	btfss	(___flge@ff2+3)& (0+255),7,b
 12593  014E24  D026               	goto	l1191
 12594                           
 12595                           ; BSR set to: 0
 12596  014E26  C073  F077         	movff	___flge@ff2,??___flge
 12597  014E2A  C074  F078         	movff	___flge@ff2+1,??___flge+1
 12598  014E2E  C075  F079         	movff	___flge@ff2+2,??___flge+2
 12599  014E32  C076  F07A         	movff	___flge@ff2+3,??___flge+3
 12600  014E36  0100               	movlb	0	; () banked
 12601  014E38  1F77               	comf	??___flge& (0+255),f,b
 12602  014E3A  1F78               	comf	(??___flge+1)& (0+255),f,b
 12603  014E3C  1F79               	comf	(??___flge+2)& (0+255),f,b
 12604  014E3E  1F7A               	comf	(??___flge+3)& (0+255),f,b
 12605  014E40  2B77               	incf	??___flge& (0+255),f,b
 12606  014E42  0E00               	movlw	0
 12607  014E44  2378               	addwfc	(??___flge+1)& (0+255),f,b
 12608  014E46  2379               	addwfc	(??___flge+2)& (0+255),f,b
 12609  014E48  237A               	addwfc	(??___flge+3)& (0+255),f,b
 12610  014E4A  0E00               	movlw	0
 12611  014E4C  0100               	movlb	0	; () banked
 12612  014E4E  2577               	addwf	??___flge& (0+255),w,b
 12613  014E50  0100               	movlb	0	; () banked
 12614  014E52  6F73               	movwf	___flge@ff2& (0+255),b
 12615  014E54  0E00               	movlw	0
 12616  014E56  0100               	movlb	0	; () banked
 12617  014E58  2178               	addwfc	(??___flge+1)& (0+255),w,b
 12618  014E5A  0100               	movlb	0	; () banked
 12619  014E5C  6F74               	movwf	(___flge@ff2+1)& (0+255),b
 12620  014E5E  0E00               	movlw	0
 12621  014E60  0100               	movlb	0	; () banked
 12622  014E62  2179               	addwfc	(??___flge+2)& (0+255),w,b
 12623  014E64  0100               	movlb	0	; () banked
 12624  014E66  6F75               	movwf	(___flge@ff2+2)& (0+255),b
 12625  014E68  0E80               	movlw	128
 12626  014E6A  0100               	movlb	0	; () banked
 12627  014E6C  217A               	addwfc	(??___flge+3)& (0+255),w,b
 12628  014E6E  0100               	movlb	0	; () banked
 12629  014E70  6F76               	movwf	(___flge@ff2+3)& (0+255),b
 12630  014E72                     l1191:
 12631                           
 12632                           ; BSR set to: 0
 12633  014E72  0E00               	movlw	0
 12634  014E74  0100               	movlb	0	; () banked
 12635  014E76  1B6F               	xorwf	___flge@ff1& (0+255),f,b
 12636  014E78  0E00               	movlw	0
 12637  014E7A  1B70               	xorwf	(___flge@ff1+1)& (0+255),f,b
 12638  014E7C  0E00               	movlw	0
 12639  014E7E  1B71               	xorwf	(___flge@ff1+2)& (0+255),f,b
 12640  014E80  0E80               	movlw	128
 12641  014E82  1B72               	xorwf	(___flge@ff1+3)& (0+255),f,b
 12642  014E84  0E00               	movlw	0
 12643  014E86  0100               	movlb	0	; () banked
 12644  014E88  1B73               	xorwf	___flge@ff2& (0+255),f,b
 12645  014E8A  0E00               	movlw	0
 12646  014E8C  1B74               	xorwf	(___flge@ff2+1)& (0+255),f,b
 12647  014E8E  0E00               	movlw	0
 12648  014E90  1B75               	xorwf	(___flge@ff2+2)& (0+255),f,b
 12649  014E92  0E80               	movlw	128
 12650  014E94  1B76               	xorwf	(___flge@ff2+3)& (0+255),f,b
 12651  014E96  0100               	movlb	0	; () banked
 12652  014E98  5173               	movf	___flge@ff2& (0+255),w,b
 12653  014E9A  0100               	movlb	0	; () banked
 12654  014E9C  5D6F               	subwf	___flge@ff1& (0+255),w,b
 12655  014E9E  0100               	movlb	0	; () banked
 12656  014EA0  5174               	movf	(___flge@ff2+1)& (0+255),w,b
 12657  014EA2  0100               	movlb	0	; () banked
 12658  014EA4  5970               	subwfb	(___flge@ff1+1)& (0+255),w,b
 12659  014EA6  0100               	movlb	0	; () banked
 12660  014EA8  5175               	movf	(___flge@ff2+2)& (0+255),w,b
 12661  014EAA  0100               	movlb	0	; () banked
 12662  014EAC  5971               	subwfb	(___flge@ff1+2)& (0+255),w,b
 12663  014EAE  0100               	movlb	0	; () banked
 12664  014EB0  5176               	movf	(___flge@ff2+3)& (0+255),w,b
 12665  014EB2  0100               	movlb	0	; () banked
 12666  014EB4  5972               	subwfb	(___flge@ff1+3)& (0+255),w,b
 12667  014EB6  B0D8               	btfsc	status,0,c
 12668  014EB8  D002               	goto	l8130
 12669                           
 12670                           ; BSR set to: 0
 12671  014EBA  90D8               	bcf	status,0,c
 12672  014EBC  0012               	return	
 12673  014EBE                     l8130:
 12674                           
 12675                           ; BSR set to: 0
 12676  014EBE  80D8               	bsf	status,0,c
 12677                           
 12678                           ; BSR set to: 0
 12679  014EC0  0012               	return	
 12680  014EC2                     __end_of___flge:
 12681                           	opt stack 0
 12682                           tblptru	equ	0xFF8
 12683                           tblptrh	equ	0xFF7
 12684                           tblptrl	equ	0xFF6
 12685                           tablat	equ	0xFF5
 12686                           prodh	equ	0xFF4
 12687                           prodl	equ	0xFF3
 12688                           intcon	equ	0xFF2
 12689                           postinc0	equ	0xFEE
 12690                           wreg	equ	0xFE8
 12691                           indf2	equ	0xFDF
 12692                           postinc2	equ	0xFDE
 12693                           fsr2h	equ	0xFDA
 12694                           fsr2l	equ	0xFD9
 12695                           status	equ	0xFD8
 12696                           
 12697 ;; *************** function ___fldiv *****************
 12698 ;; Defined at:
 12699 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 12700 ;; Parameters:    Size  Location     Type
 12701 ;;  b               4   29[BANK0 ] unsigned char 
 12702 ;;  a               4   33[BANK0 ] unsigned char 
 12703 ;; Auto vars:     Size  Location     Type
 12704 ;;  grs             4   48[BANK0 ] unsigned long 
 12705 ;;  rem             4   42[BANK0 ] unsigned long 
 12706 ;;  new_exp         2   46[BANK0 ] int 
 12707 ;;  aexp            1   53[BANK0 ] unsigned char 
 12708 ;;  bexp            1   52[BANK0 ] unsigned char 
 12709 ;;  sign            1   41[BANK0 ] unsigned char 
 12710 ;; Return value:  Size  Location     Type
 12711 ;;                  4   29[BANK0 ] unsigned char 
 12712 ;; Registers used:
 12713 ;;		wreg, status,2, status,0
 12714 ;; Tracked objects:
 12715 ;;		On entry : 0/0
 12716 ;;		On exit  : 0/0
 12717 ;;		Unchanged: 0/0
 12718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12719 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12720 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12721 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12722 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12723 ;;Total ram usage:       25 bytes
 12724 ;; Hardware stack levels used:    1
 12725 ;; Hardware stack levels required when called:    3
 12726 ;; This function calls:
 12727 ;;		Nothing
 12728 ;; This function is called by:
 12729 ;;		_LCD_Handler
 12730 ;; This function uses a non-reentrant model
 12731 ;;
 12732                           
 12733                           	psect	text25
 12734  013BDE                     __ptext25:
 12735                           	opt stack 0
 12736  013BDE                     ___fldiv:
 12737                           	opt stack 26
 12738                           
 12739                           ; BSR set to: 0
 12740                           ;incstack = 0
 12741  013BDE  0100               	movlb	0	; () banked
 12742  013BE0  5180               	movf	(___fldiv@b+3)& (0+255),w,b
 12743  013BE2  0B80               	andlw	128
 12744  013BE4  0100               	movlb	0	; () banked
 12745  013BE6  6F89               	movwf	___fldiv@sign& (0+255),b
 12746  013BE8  0100               	movlb	0	; () banked
 12747  013BEA  5180               	movf	(___fldiv@b+3)& (0+255),w,b
 12748  013BEC  2580               	addwf	(___fldiv@b+3)& (0+255),w,b
 12749  013BEE  0100               	movlb	0	; () banked
 12750  013BF0  6F94               	movwf	___fldiv@bexp& (0+255),b
 12751                           
 12752                           ; BSR set to: 0
 12753  013BF2  0100               	movlb	0	; () banked
 12754  013BF4  AF7F               	btfss	(___fldiv@b+2)& (0+255),7,b
 12755  013BF6  D002               	goto	l6334
 12756                           
 12757                           ; BSR set to: 0
 12758  013BF8  0100               	movlb	0	; () banked
 12759  013BFA  8194               	bsf	___fldiv@bexp& (0+255),0,b
 12760  013BFC                     l6334:
 12761                           
 12762                           ; BSR set to: 0
 12763  013BFC  0100               	movlb	0	; () banked
 12764  013BFE  5194               	movf	___fldiv@bexp& (0+255),w,b
 12765  013C00  0100               	movlb	0	; () banked
 12766  013C02  B4D8               	btfsc	status,2,c
 12767  013C04  D012               	goto	l6344
 12768                           
 12769                           ; BSR set to: 0
 12770  013C06  0100               	movlb	0	; () banked
 12771  013C08  2994               	incf	___fldiv@bexp& (0+255),w,b
 12772  013C0A  A4D8               	btfss	status,2,c
 12773  013C0C  D009               	goto	l6340
 12774                           
 12775                           ; BSR set to: 0
 12776  013C0E  0E00               	movlw	0
 12777  013C10  0100               	movlb	0	; () banked
 12778  013C12  6F7D               	movwf	___fldiv@b& (0+255),b
 12779  013C14  0E00               	movlw	0
 12780  013C16  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
 12781  013C18  0E00               	movlw	0
 12782  013C1A  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
 12783  013C1C  0E00               	movlw	0
 12784  013C1E  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 12785  013C20                     l6340:
 12786                           
 12787                           ; BSR set to: 0
 12788  013C20  0100               	movlb	0	; () banked
 12789  013C22  8F7F               	bsf	(___fldiv@b+2)& (0+255),7,b
 12790                           
 12791                           ; BSR set to: 0
 12792  013C24  0E00               	movlw	0
 12793  013C26  0100               	movlb	0	; () banked
 12794  013C28  D008               	goto	L12
 12795  013C2A                     l6344:
 12796                           
 12797                           ; BSR set to: 0
 12798  013C2A  0E00               	movlw	0
 12799  013C2C  0100               	movlb	0	; () banked
 12800  013C2E  6F7D               	movwf	___fldiv@b& (0+255),b
 12801  013C30  0E00               	movlw	0
 12802  013C32  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
 12803  013C34  0E00               	movlw	0
 12804  013C36  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
 12805  013C38  0E00               	movlw	0
 12806  013C3A                     L12:
 12807  013C3A  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 12808                           
 12809                           ; BSR set to: 0
 12810                           
 12811                           ; BSR set to: 0
 12812  013C3C  0100               	movlb	0	; () banked
 12813  013C3E  5184               	movf	(___fldiv@a+3)& (0+255),w,b
 12814  013C40  0B80               	andlw	128
 12815  013C42  0100               	movlb	0	; () banked
 12816  013C44  1B89               	xorwf	___fldiv@sign& (0+255),f,b
 12817                           
 12818                           ; BSR set to: 0
 12819  013C46  0100               	movlb	0	; () banked
 12820  013C48  5184               	movf	(___fldiv@a+3)& (0+255),w,b
 12821  013C4A  2584               	addwf	(___fldiv@a+3)& (0+255),w,b
 12822  013C4C  0100               	movlb	0	; () banked
 12823  013C4E  6F95               	movwf	___fldiv@aexp& (0+255),b
 12824                           
 12825                           ; BSR set to: 0
 12826  013C50  0100               	movlb	0	; () banked
 12827  013C52  AF83               	btfss	(___fldiv@a+2)& (0+255),7,b
 12828  013C54  D002               	goto	l6354
 12829                           
 12830                           ; BSR set to: 0
 12831  013C56  0100               	movlb	0	; () banked
 12832  013C58  8195               	bsf	___fldiv@aexp& (0+255),0,b
 12833  013C5A                     l6354:
 12834                           
 12835                           ; BSR set to: 0
 12836  013C5A  0100               	movlb	0	; () banked
 12837  013C5C  5195               	movf	___fldiv@aexp& (0+255),w,b
 12838  013C5E  0100               	movlb	0	; () banked
 12839  013C60  B4D8               	btfsc	status,2,c
 12840  013C62  D012               	goto	l6364
 12841                           
 12842                           ; BSR set to: 0
 12843  013C64  0100               	movlb	0	; () banked
 12844  013C66  2995               	incf	___fldiv@aexp& (0+255),w,b
 12845  013C68  A4D8               	btfss	status,2,c
 12846  013C6A  D009               	goto	l6360
 12847                           
 12848                           ; BSR set to: 0
 12849  013C6C  0E00               	movlw	0
 12850  013C6E  0100               	movlb	0	; () banked
 12851  013C70  6F81               	movwf	___fldiv@a& (0+255),b
 12852  013C72  0E00               	movlw	0
 12853  013C74  6F82               	movwf	(___fldiv@a+1)& (0+255),b
 12854  013C76  0E00               	movlw	0
 12855  013C78  6F83               	movwf	(___fldiv@a+2)& (0+255),b
 12856  013C7A  0E00               	movlw	0
 12857  013C7C  6F84               	movwf	(___fldiv@a+3)& (0+255),b
 12858  013C7E                     l6360:
 12859                           
 12860                           ; BSR set to: 0
 12861  013C7E  0100               	movlb	0	; () banked
 12862  013C80  8F83               	bsf	(___fldiv@a+2)& (0+255),7,b
 12863                           
 12864                           ; BSR set to: 0
 12865  013C82  0E00               	movlw	0
 12866  013C84  0100               	movlb	0	; () banked
 12867  013C86  D008               	goto	L13
 12868  013C88                     l6364:
 12869                           
 12870                           ; BSR set to: 0
 12871  013C88  0E00               	movlw	0
 12872  013C8A  0100               	movlb	0	; () banked
 12873  013C8C  6F81               	movwf	___fldiv@a& (0+255),b
 12874  013C8E  0E00               	movlw	0
 12875  013C90  6F82               	movwf	(___fldiv@a+1)& (0+255),b
 12876  013C92  0E00               	movlw	0
 12877  013C94  6F83               	movwf	(___fldiv@a+2)& (0+255),b
 12878  013C96  0E00               	movlw	0
 12879  013C98                     L13:
 12880  013C98  6F84               	movwf	(___fldiv@a+3)& (0+255),b
 12881                           
 12882                           ; BSR set to: 0
 12883                           
 12884                           ; BSR set to: 0
 12885  013C9A  0100               	movlb	0	; () banked
 12886  013C9C  5181               	movf	___fldiv@a& (0+255),w,b
 12887  013C9E  0100               	movlb	0	; () banked
 12888  013CA0  1182               	iorwf	(___fldiv@a+1)& (0+255),w,b
 12889  013CA2  0100               	movlb	0	; () banked
 12890  013CA4  1183               	iorwf	(___fldiv@a+2)& (0+255),w,b
 12891  013CA6  0100               	movlb	0	; () banked
 12892  013CA8  1184               	iorwf	(___fldiv@a+3)& (0+255),w,b
 12893  013CAA  A4D8               	btfss	status,2,c
 12894  013CAC  D017               	goto	l6376
 12895                           
 12896                           ; BSR set to: 0
 12897  013CAE  0E00               	movlw	0
 12898  013CB0  0100               	movlb	0	; () banked
 12899  013CB2  6F7D               	movwf	___fldiv@b& (0+255),b
 12900  013CB4  0E00               	movlw	0
 12901  013CB6  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
 12902  013CB8  0E00               	movlw	0
 12903  013CBA  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
 12904  013CBC  0E00               	movlw	0
 12905  013CBE  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 12906                           
 12907                           ; BSR set to: 0
 12908  013CC0  0100               	movlb	0	; () banked
 12909  013CC2  0E80               	movlw	128
 12910  013CC4  137F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 12911  013CC6  0E7F               	movlw	127
 12912  013CC8  1380               	iorwf	(___fldiv@b+3)& (0+255),f,b
 12913                           
 12914                           ; BSR set to: 0
 12915  013CCA  C07D  F07D         	movff	___fldiv@b,?___fldiv
 12916  013CCE  C07E  F07E         	movff	___fldiv@b+1,?___fldiv+1
 12917  013CD2  C07F  F07F         	movff	___fldiv@b+2,?___fldiv+2
 12918  013CD6  C080  F080         	movff	___fldiv@b+3,?___fldiv+3
 12919                           
 12920                           ; BSR set to: 0
 12921  013CDA  0012               	return	
 12922  013CDC                     l6376:
 12923                           
 12924                           ; BSR set to: 0
 12925  013CDC  0100               	movlb	0	; () banked
 12926  013CDE  5194               	movf	___fldiv@bexp& (0+255),w,b
 12927  013CE0  0100               	movlb	0	; () banked
 12928  013CE2  A4D8               	btfss	status,2,c
 12929  013CE4  D012               	goto	l6384
 12930                           
 12931                           ; BSR set to: 0
 12932  013CE6  0E00               	movlw	0
 12933  013CE8  0100               	movlb	0	; () banked
 12934  013CEA  6F7D               	movwf	___fldiv@b& (0+255),b
 12935  013CEC  0E00               	movlw	0
 12936  013CEE  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
 12937  013CF0  0E00               	movlw	0
 12938  013CF2  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
 12939  013CF4  0E00               	movlw	0
 12940  013CF6  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 12941                           
 12942                           ; BSR set to: 0
 12943  013CF8  C07D  F07D         	movff	___fldiv@b,?___fldiv
 12944  013CFC  C07E  F07E         	movff	___fldiv@b+1,?___fldiv+1
 12945  013D00  C07F  F07F         	movff	___fldiv@b+2,?___fldiv+2
 12946  013D04  C080  F080         	movff	___fldiv@b+3,?___fldiv+3
 12947                           
 12948                           ; BSR set to: 0
 12949  013D08  0012               	return	
 12950  013D0A                     l6384:
 12951                           
 12952                           ; BSR set to: 0
 12953  013D0A  0100               	movlb	0	; () banked
 12954  013D0C  5195               	movf	___fldiv@aexp& (0+255),w,b
 12955  013D0E  0100               	movlb	0	; () banked
 12956  013D10  6F85               	movwf	??___fldiv& (0+255),b
 12957  013D12  6B86               	clrf	(??___fldiv+1)& (0+255),b
 12958  013D14  0100               	movlb	0	; () banked
 12959  013D16  1F85               	comf	??___fldiv& (0+255),f,b
 12960  013D18  1F86               	comf	(??___fldiv+1)& (0+255),f,b
 12961  013D1A  4B85               	infsnz	??___fldiv& (0+255),f,b
 12962  013D1C  2B86               	incf	(??___fldiv+1)& (0+255),f,b
 12963  013D1E  0100               	movlb	0	; () banked
 12964  013D20  5194               	movf	___fldiv@bexp& (0+255),w,b
 12965  013D22  0100               	movlb	0	; () banked
 12966  013D24  6F87               	movwf	(??___fldiv+2)& (0+255),b
 12967  013D26  6B88               	clrf	(??___fldiv+3)& (0+255),b
 12968  013D28  0100               	movlb	0	; () banked
 12969  013D2A  5185               	movf	??___fldiv& (0+255),w,b
 12970  013D2C  0100               	movlb	0	; () banked
 12971  013D2E  2787               	addwf	(??___fldiv+2)& (0+255),f,b
 12972  013D30  0100               	movlb	0	; () banked
 12973  013D32  5186               	movf	(??___fldiv+1)& (0+255),w,b
 12974  013D34  0100               	movlb	0	; () banked
 12975  013D36  2388               	addwfc	(??___fldiv+3)& (0+255),f,b
 12976  013D38  0E7F               	movlw	127
 12977  013D3A  0100               	movlb	0	; () banked
 12978  013D3C  2587               	addwf	(??___fldiv+2)& (0+255),w,b
 12979  013D3E  0100               	movlb	0	; () banked
 12980  013D40  6F8E               	movwf	___fldiv@new_exp& (0+255),b
 12981  013D42  0E00               	movlw	0
 12982  013D44  0100               	movlb	0	; () banked
 12983  013D46  2188               	addwfc	(??___fldiv+3)& (0+255),w,b
 12984  013D48  0100               	movlb	0	; () banked
 12985  013D4A  6F8F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 12986                           
 12987                           ; BSR set to: 0
 12988  013D4C  C07D  F08A         	movff	___fldiv@b,___fldiv@rem
 12989  013D50  C07E  F08B         	movff	___fldiv@b+1,___fldiv@rem+1
 12990  013D54  C07F  F08C         	movff	___fldiv@b+2,___fldiv@rem+2
 12991  013D58  C080  F08D         	movff	___fldiv@b+3,___fldiv@rem+3
 12992                           
 12993                           ; BSR set to: 0
 12994  013D5C  0E00               	movlw	0
 12995  013D5E  0100               	movlb	0	; () banked
 12996  013D60  6F7D               	movwf	___fldiv@b& (0+255),b
 12997  013D62  0E00               	movlw	0
 12998  013D64  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
 12999  013D66  0E00               	movlw	0
 13000  013D68  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
 13001  013D6A  0E00               	movlw	0
 13002  013D6C  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 13003                           
 13004                           ; BSR set to: 0
 13005  013D6E  0E00               	movlw	0
 13006  013D70  0100               	movlb	0	; () banked
 13007  013D72  6F90               	movwf	___fldiv@grs& (0+255),b
 13008  013D74  0E00               	movlw	0
 13009  013D76  6F91               	movwf	(___fldiv@grs+1)& (0+255),b
 13010  013D78  0E00               	movlw	0
 13011  013D7A  6F92               	movwf	(___fldiv@grs+2)& (0+255),b
 13012  013D7C  0E00               	movlw	0
 13013  013D7E  6F93               	movwf	(___fldiv@grs+3)& (0+255),b
 13014                           
 13015                           ; BSR set to: 0
 13016  013D80  0E00               	movlw	0
 13017  013D82  0100               	movlb	0	; () banked
 13018  013D84  6F95               	movwf	___fldiv@aexp& (0+255),b
 13019  013D86  D042               	goto	l1524
 13020  013D88                     l6394:
 13021                           
 13022                           ; BSR set to: 0
 13023  013D88  0100               	movlb	0	; () banked
 13024  013D8A  5195               	movf	___fldiv@aexp& (0+255),w,b
 13025  013D8C  0100               	movlb	0	; () banked
 13026  013D8E  B4D8               	btfsc	status,2,c
 13027  013D90  D017               	goto	l6402
 13028                           
 13029                           ; BSR set to: 0
 13030  013D92  0100               	movlb	0	; () banked
 13031  013D94  90D8               	bcf	status,0,c
 13032  013D96  378A               	rlcf	___fldiv@rem& (0+255),f,b
 13033  013D98  378B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13034  013D9A  378C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13035  013D9C  378D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13036  013D9E  0100               	movlb	0	; () banked
 13037  013DA0  90D8               	bcf	status,0,c
 13038  013DA2  377D               	rlcf	___fldiv@b& (0+255),f,b
 13039  013DA4  377E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13040  013DA6  377F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13041  013DA8  3780               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13042                           
 13043                           ; BSR set to: 0
 13044  013DAA  0100               	movlb	0	; () banked
 13045  013DAC  AF93               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13046  013DAE  D002               	goto	l1527
 13047                           
 13048                           ; BSR set to: 0
 13049  013DB0  0100               	movlb	0	; () banked
 13050  013DB2  817D               	bsf	___fldiv@b& (0+255),0,b
 13051  013DB4                     l1527:
 13052                           
 13053                           ; BSR set to: 0
 13054  013DB4  0100               	movlb	0	; () banked
 13055  013DB6  90D8               	bcf	status,0,c
 13056  013DB8  3790               	rlcf	___fldiv@grs& (0+255),f,b
 13057  013DBA  3791               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13058  013DBC  3792               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13059  013DBE  3793               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13060  013DC0                     l6402:
 13061                           
 13062                           ; BSR set to: 0
 13063  013DC0  0100               	movlb	0	; () banked
 13064  013DC2  5181               	movf	___fldiv@a& (0+255),w,b
 13065  013DC4  0100               	movlb	0	; () banked
 13066  013DC6  5D8A               	subwf	___fldiv@rem& (0+255),w,b
 13067  013DC8  0100               	movlb	0	; () banked
 13068  013DCA  5182               	movf	(___fldiv@a+1)& (0+255),w,b
 13069  013DCC  0100               	movlb	0	; () banked
 13070  013DCE  598B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13071  013DD0  0100               	movlb	0	; () banked
 13072  013DD2  5183               	movf	(___fldiv@a+2)& (0+255),w,b
 13073  013DD4  0100               	movlb	0	; () banked
 13074  013DD6  598C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13075  013DD8  0100               	movlb	0	; () banked
 13076  013DDA  5184               	movf	(___fldiv@a+3)& (0+255),w,b
 13077  013DDC  0100               	movlb	0	; () banked
 13078  013DDE  598D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13079  013DE0  A0D8               	btfss	status,0,c
 13080  013DE2  D012               	goto	l6408
 13081                           
 13082                           ; BSR set to: 0
 13083  013DE4  0100               	movlb	0	; () banked
 13084  013DE6  8D93               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13085                           
 13086                           ; BSR set to: 0
 13087  013DE8  0100               	movlb	0	; () banked
 13088  013DEA  5181               	movf	___fldiv@a& (0+255),w,b
 13089  013DEC  0100               	movlb	0	; () banked
 13090  013DEE  5F8A               	subwf	___fldiv@rem& (0+255),f,b
 13091  013DF0  0100               	movlb	0	; () banked
 13092  013DF2  5182               	movf	(___fldiv@a+1)& (0+255),w,b
 13093  013DF4  0100               	movlb	0	; () banked
 13094  013DF6  5B8B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13095  013DF8  0100               	movlb	0	; () banked
 13096  013DFA  5183               	movf	(___fldiv@a+2)& (0+255),w,b
 13097  013DFC  0100               	movlb	0	; () banked
 13098  013DFE  5B8C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13099  013E00  0100               	movlb	0	; () banked
 13100  013E02  5184               	movf	(___fldiv@a+3)& (0+255),w,b
 13101  013E04  0100               	movlb	0	; () banked
 13102  013E06  5B8D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13103  013E08                     l6408:
 13104                           
 13105                           ; BSR set to: 0
 13106  013E08  0100               	movlb	0	; () banked
 13107  013E0A  2B95               	incf	___fldiv@aexp& (0+255),f,b
 13108  013E0C                     l1524:
 13109                           
 13110                           ; BSR set to: 0
 13111  013E0C  0E19               	movlw	25
 13112  013E0E  0100               	movlb	0	; () banked
 13113  013E10  6595               	cpfsgt	___fldiv@aexp& (0+255),b
 13114  013E12  D7BA               	goto	l6394
 13115                           
 13116                           ; BSR set to: 0
 13117                           
 13118                           ; BSR set to: 0
 13119  013E14  0100               	movlb	0	; () banked
 13120  013E16  518A               	movf	___fldiv@rem& (0+255),w,b
 13121  013E18  0100               	movlb	0	; () banked
 13122  013E1A  118B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13123  013E1C  0100               	movlb	0	; () banked
 13124  013E1E  118C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13125  013E20  0100               	movlb	0	; () banked
 13126  013E22  118D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13127  013E24  B4D8               	btfsc	status,2,c
 13128  013E26  D018               	goto	l6420
 13129                           
 13130                           ; BSR set to: 0
 13131  013E28  0100               	movlb	0	; () banked
 13132  013E2A  8190               	bsf	___fldiv@grs& (0+255),0,b
 13133                           
 13134                           ; BSR set to: 0
 13135  013E2C  D015               	goto	l6420
 13136  013E2E                     l6414:
 13137                           
 13138                           ; BSR set to: 0
 13139  013E2E  0100               	movlb	0	; () banked
 13140  013E30  90D8               	bcf	status,0,c
 13141  013E32  377D               	rlcf	___fldiv@b& (0+255),f,b
 13142  013E34  377E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13143  013E36  377F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13144  013E38  3780               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13145                           
 13146                           ; BSR set to: 0
 13147  013E3A  0100               	movlb	0	; () banked
 13148  013E3C  AF93               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13149  013E3E  D002               	goto	l1533
 13150                           
 13151                           ; BSR set to: 0
 13152  013E40  0100               	movlb	0	; () banked
 13153  013E42  817D               	bsf	___fldiv@b& (0+255),0,b
 13154  013E44                     l1533:
 13155                           
 13156                           ; BSR set to: 0
 13157  013E44  0100               	movlb	0	; () banked
 13158  013E46  90D8               	bcf	status,0,c
 13159  013E48  3790               	rlcf	___fldiv@grs& (0+255),f,b
 13160  013E4A  3791               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13161  013E4C  3792               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13162  013E4E  3793               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13163  013E50  0100               	movlb	0	; () banked
 13164  013E52  078E               	decf	___fldiv@new_exp& (0+255),f,b
 13165  013E54  A0D8               	btfss	status,0,c
 13166  013E56  078F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13167  013E58                     l6420:
 13168                           
 13169                           ; BSR set to: 0
 13170  013E58  0100               	movlb	0	; () banked
 13171  013E5A  AF7F               	btfss	(___fldiv@b+2)& (0+255),7,b
 13172  013E5C  D7E8               	goto	l6414
 13173                           
 13174                           ; BSR set to: 0
 13175                           
 13176                           ; BSR set to: 0
 13177  013E5E  0E00               	movlw	0
 13178  013E60  0100               	movlb	0	; () banked
 13179  013E62  6F95               	movwf	___fldiv@aexp& (0+255),b
 13180                           
 13181                           ; BSR set to: 0
 13182  013E64  0100               	movlb	0	; () banked
 13183  013E66  AF93               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13184  013E68  D024               	goto	l1535
 13185                           
 13186                           ; BSR set to: 0
 13187  013E6A  0EFF               	movlw	255
 13188  013E6C  0100               	movlb	0	; () banked
 13189  013E6E  1590               	andwf	___fldiv@grs& (0+255),w,b
 13190  013E70  0100               	movlb	0	; () banked
 13191  013E72  6F85               	movwf	??___fldiv& (0+255),b
 13192  013E74  0EFF               	movlw	255
 13193  013E76  0100               	movlb	0	; () banked
 13194  013E78  1591               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13195  013E7A  0100               	movlb	0	; () banked
 13196  013E7C  6F86               	movwf	(??___fldiv+1)& (0+255),b
 13197  013E7E  0EFF               	movlw	255
 13198  013E80  0100               	movlb	0	; () banked
 13199  013E82  1592               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13200  013E84  0100               	movlb	0	; () banked
 13201  013E86  6F87               	movwf	(??___fldiv+2)& (0+255),b
 13202  013E88  0E7F               	movlw	127
 13203  013E8A  0100               	movlb	0	; () banked
 13204  013E8C  1593               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13205  013E8E  0100               	movlb	0	; () banked
 13206  013E90  6F88               	movwf	(??___fldiv+3)& (0+255),b
 13207  013E92  0100               	movlb	0	; () banked
 13208  013E94  5185               	movf	??___fldiv& (0+255),w,b
 13209  013E96  0100               	movlb	0	; () banked
 13210  013E98  1186               	iorwf	(??___fldiv+1)& (0+255),w,b
 13211  013E9A  0100               	movlb	0	; () banked
 13212  013E9C  1187               	iorwf	(??___fldiv+2)& (0+255),w,b
 13213  013E9E  0100               	movlb	0	; () banked
 13214  013EA0  1188               	iorwf	(??___fldiv+3)& (0+255),w,b
 13215  013EA2  A4D8               	btfss	status,2,c
 13216  013EA4  D003               	goto	l6430
 13217                           
 13218                           ; BSR set to: 0
 13219                           
 13220                           ; BSR set to: 0
 13221  013EA6  0100               	movlb	0	; () banked
 13222  013EA8  A17D               	btfss	___fldiv@b& (0+255),0,b
 13223  013EAA  D003               	goto	l1535
 13224  013EAC                     l6430:
 13225                           
 13226                           ; BSR set to: 0
 13227  013EAC  0E01               	movlw	1
 13228  013EAE  0100               	movlb	0	; () banked
 13229  013EB0  6F95               	movwf	___fldiv@aexp& (0+255),b
 13230  013EB2                     l1535:
 13231                           
 13232                           ; BSR set to: 0
 13233  013EB2  0100               	movlb	0	; () banked
 13234  013EB4  5195               	movf	___fldiv@aexp& (0+255),w,b
 13235  013EB6  0100               	movlb	0	; () banked
 13236  013EB8  B4D8               	btfsc	status,2,c
 13237  013EBA  D023               	goto	l6440
 13238                           
 13239                           ; BSR set to: 0
 13240  013EBC  0E01               	movlw	1
 13241  013EBE  0100               	movlb	0	; () banked
 13242  013EC0  277D               	addwf	___fldiv@b& (0+255),f,b
 13243  013EC2  0E00               	movlw	0
 13244  013EC4  237E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 13245  013EC6  237F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 13246  013EC8  2380               	addwfc	(___fldiv@b+3)& (0+255),f,b
 13247                           
 13248                           ; BSR set to: 0
 13249  013ECA  0100               	movlb	0	; () banked
 13250  013ECC  A180               	btfss	(___fldiv@b+3)& (0+255),0,b
 13251  013ECE  D019               	goto	l6440
 13252                           
 13253                           ; BSR set to: 0
 13254  013ED0  C07D  F085         	movff	___fldiv@b,??___fldiv
 13255  013ED4  C07E  F086         	movff	___fldiv@b+1,??___fldiv+1
 13256  013ED8  C07F  F087         	movff	___fldiv@b+2,??___fldiv+2
 13257  013EDC  C080  F088         	movff	___fldiv@b+3,??___fldiv+3
 13258  013EE0  0100               	movlb	0	; () banked
 13259  013EE2  3588               	rlcf	(??___fldiv+3)& (0+255),w,b
 13260  013EE4  3388               	rrcf	(??___fldiv+3)& (0+255),f,b
 13261  013EE6  3387               	rrcf	(??___fldiv+2)& (0+255),f,b
 13262  013EE8  3386               	rrcf	(??___fldiv+1)& (0+255),f,b
 13263  013EEA  3385               	rrcf	??___fldiv& (0+255),f,b
 13264  013EEC  C085  F07D         	movff	??___fldiv,___fldiv@b
 13265  013EF0  C086  F07E         	movff	??___fldiv+1,___fldiv@b+1
 13266  013EF4  C087  F07F         	movff	??___fldiv+2,___fldiv@b+2
 13267  013EF8  C088  F080         	movff	??___fldiv+3,___fldiv@b+3
 13268                           
 13269                           ; BSR set to: 0
 13270  013EFC  0100               	movlb	0	; () banked
 13271  013EFE  4B8E               	infsnz	___fldiv@new_exp& (0+255),f,b
 13272  013F00  2B8F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13273  013F02                     l6440:
 13274                           
 13275                           ; BSR set to: 0
 13276  013F02  0100               	movlb	0	; () banked
 13277  013F04  BF8F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13278  013F06  D014               	goto	l6444
 13279  013F08  0100               	movlb	0	; () banked
 13280  013F0A  518F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13281  013F0C  E104               	bnz	u8070
 13282  013F0E  0100               	movlb	0	; () banked
 13283  013F10  298E               	incf	___fldiv@new_exp& (0+255),w,b
 13284  013F12  A0D8               	btfss	status,0,c
 13285  013F14  D00D               	goto	l6444
 13286  013F16                     u8070:
 13287                           
 13288                           ; BSR set to: 0
 13289  013F16  0E00               	movlw	0
 13290  013F18  0100               	movlb	0	; () banked
 13291  013F1A  6F8F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13292  013F1C  698E               	setf	___fldiv@new_exp& (0+255),b
 13293  013F1E  0E00               	movlw	0
 13294  013F20  0100               	movlb	0	; () banked
 13295  013F22  6F7D               	movwf	___fldiv@b& (0+255),b
 13296  013F24  0E00               	movlw	0
 13297  013F26  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
 13298  013F28  0E00               	movlw	0
 13299  013F2A  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
 13300  013F2C  0E00               	movlw	0
 13301  013F2E  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 13302  013F30                     l6444:
 13303                           
 13304                           ; BSR set to: 0
 13305  013F30  0100               	movlb	0	; () banked
 13306  013F32  BF8F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13307  013F34  D007               	goto	l6446
 13308  013F36  0100               	movlb	0	; () banked
 13309  013F38  518F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13310  013F3A  E115               	bnz	l6448
 13311  013F3C  0100               	movlb	0	; () banked
 13312  013F3E  058E               	decf	___fldiv@new_exp& (0+255),w,b
 13313  013F40  B0D8               	btfsc	status,0,c
 13314  013F42  D011               	goto	l6448
 13315  013F44                     l6446:
 13316                           
 13317                           ; BSR set to: 0
 13318  013F44  0E00               	movlw	0
 13319  013F46  0100               	movlb	0	; () banked
 13320  013F48  6F8F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13321  013F4A  0E00               	movlw	0
 13322  013F4C  6F8E               	movwf	___fldiv@new_exp& (0+255),b
 13323  013F4E  0E00               	movlw	0
 13324  013F50  0100               	movlb	0	; () banked
 13325  013F52  6F7D               	movwf	___fldiv@b& (0+255),b
 13326  013F54  0E00               	movlw	0
 13327  013F56  6F7E               	movwf	(___fldiv@b+1)& (0+255),b
 13328  013F58  0E00               	movlw	0
 13329  013F5A  6F7F               	movwf	(___fldiv@b+2)& (0+255),b
 13330  013F5C  0E00               	movlw	0
 13331  013F5E  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 13332  013F60  0E00               	movlw	0
 13333  013F62  0100               	movlb	0	; () banked
 13334  013F64  6F89               	movwf	___fldiv@sign& (0+255),b
 13335  013F66                     l6448:
 13336                           
 13337                           ; BSR set to: 0
 13338  013F66  C08E  F094         	movff	___fldiv@new_exp,___fldiv@bexp
 13339                           
 13340                           ; BSR set to: 0
 13341  013F6A  0100               	movlb	0	; () banked
 13342  013F6C  A194               	btfss	___fldiv@bexp& (0+255),0,b
 13343  013F6E  D003               	goto	l6454
 13344                           
 13345                           ; BSR set to: 0
 13346  013F70  0100               	movlb	0	; () banked
 13347  013F72  8F7F               	bsf	(___fldiv@b+2)& (0+255),7,b
 13348  013F74  D002               	goto	l6456
 13349  013F76                     l6454:
 13350                           
 13351                           ; BSR set to: 0
 13352  013F76  0100               	movlb	0	; () banked
 13353  013F78  9F7F               	bcf	(___fldiv@b+2)& (0+255),7,b
 13354  013F7A                     l6456:
 13355                           
 13356                           ; BSR set to: 0
 13357  013F7A  0100               	movlb	0	; () banked
 13358  013F7C  90D8               	bcf	status,0,c
 13359  013F7E  3194               	rrcf	___fldiv@bexp& (0+255),w,b
 13360  013F80  0100               	movlb	0	; () banked
 13361  013F82  6F80               	movwf	(___fldiv@b+3)& (0+255),b
 13362                           
 13363                           ; BSR set to: 0
 13364  013F84  0100               	movlb	0	; () banked
 13365  013F86  5189               	movf	___fldiv@sign& (0+255),w,b
 13366  013F88  0100               	movlb	0	; () banked
 13367  013F8A  1380               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13368                           
 13369                           ; BSR set to: 0
 13370  013F8C  C07D  F07D         	movff	___fldiv@b,?___fldiv
 13371  013F90  C07E  F07E         	movff	___fldiv@b+1,?___fldiv+1
 13372  013F94  C07F  F07F         	movff	___fldiv@b+2,?___fldiv+2
 13373  013F98  C080  F080         	movff	___fldiv@b+3,?___fldiv+3
 13374  013F9C  0012               	return	
 13375  013F9E                     __end_of___fldiv:
 13376                           	opt stack 0
 13377                           tblptru	equ	0xFF8
 13378                           tblptrh	equ	0xFF7
 13379                           tblptrl	equ	0xFF6
 13380                           tablat	equ	0xFF5
 13381                           prodh	equ	0xFF4
 13382                           prodl	equ	0xFF3
 13383                           intcon	equ	0xFF2
 13384                           postinc0	equ	0xFEE
 13385                           wreg	equ	0xFE8
 13386                           indf2	equ	0xFDF
 13387                           postinc2	equ	0xFDE
 13388                           fsr2h	equ	0xFDA
 13389                           fsr2l	equ	0xFD9
 13390                           status	equ	0xFD8
 13391                           
 13392 ;; *************** function _LCD_write_string *****************
 13393 ;; Defined at:
 13394 ;;		line 194 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 13395 ;; Parameters:    Size  Location     Type
 13396 ;;  buffer          2   32[BANK0 ] PTR unsigned char 
 13397 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 13398 ;; Auto vars:     Size  Location     Type
 13399 ;;		None
 13400 ;; Return value:  Size  Location     Type
 13401 ;;		None               void
 13402 ;; Registers used:
 13403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13404 ;; Tracked objects:
 13405 ;;		On entry : 0/0
 13406 ;;		On exit  : 0/0
 13407 ;;		Unchanged: 0/0
 13408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13409 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13412 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13413 ;;Total ram usage:        2 bytes
 13414 ;; Hardware stack levels used:    1
 13415 ;; Hardware stack levels required when called:    8
 13416 ;; This function calls:
 13417 ;;		_LCD_write_char
 13418 ;; This function is called by:
 13419 ;;		_LCD_Handler
 13420 ;;		_LCD_write_integer
 13421 ;; This function uses a non-reentrant model
 13422 ;;
 13423                           
 13424                           	psect	text26
 13425  015D4E                     __ptext26:
 13426                           	opt stack 0
 13427  015D4E                     _LCD_write_string:
 13428                           	opt stack 21
 13429                           
 13430                           ;src\LCD_44780.c: 197: while(*buffer){
 13431                           
 13432                           ; BSR set to: 0
 13433                           ;incstack = 0
 13434  015D4E  D00A               	goto	l8282
 13435  015D50                     l8278:
 13436                           
 13437                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 13438  015D50  C080  FFD9         	movff	LCD_write_string@buffer,fsr2l
 13439  015D54  C081  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 13440  015D58  50DF               	movf	indf2,w,c
 13441  015D5A  ECF4  F0AC         	call	_LCD_write_char
 13442                           
 13443                           ;src\LCD_44780.c: 202: buffer++;
 13444  015D5E  0100               	movlb	0	; () banked
 13445  015D60  4B80               	infsnz	LCD_write_string@buffer& (0+255),f,b
 13446  015D62  2B81               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 13447  015D64                     l8282:
 13448  015D64  C080  FFD9         	movff	LCD_write_string@buffer,fsr2l
 13449  015D68  C081  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 13450  015D6C  50DF               	movf	indf2,w,c
 13451  015D6E  B4D8               	btfsc	status,2,c
 13452  015D70  0012               	return	
 13453  015D72  D7EE               	goto	l8278
 13454  015D74                     __end_of_LCD_write_string:
 13455                           	opt stack 0
 13456                           tblptru	equ	0xFF8
 13457                           tblptrh	equ	0xFF7
 13458                           tblptrl	equ	0xFF6
 13459                           tablat	equ	0xFF5
 13460                           prodh	equ	0xFF4
 13461                           prodl	equ	0xFF3
 13462                           intcon	equ	0xFF2
 13463                           postinc0	equ	0xFEE
 13464                           wreg	equ	0xFE8
 13465                           indf2	equ	0xFDF
 13466                           postinc2	equ	0xFDE
 13467                           fsr2h	equ	0xFDA
 13468                           fsr2l	equ	0xFD9
 13469                           status	equ	0xFD8
 13470                           
 13471 ;; *************** function _LCD_write_message *****************
 13472 ;; Defined at:
 13473 ;;		line 178 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 13474 ;; Parameters:    Size  Location     Type
 13475 ;;  buffer          2   32[BANK0 ] PTR const unsigned char 
 13476 ;;		 -> STR_16(8), STR_15(6), STR_14(6), STR_13(6), 
 13477 ;;		 -> STR_12(5), STR_11(5), STR_10(5), STR_9(21), 
 13478 ;;		 -> STR_8(17), STR_7(12), STR_6(21), STR_4(21), 
 13479 ;;		 -> STR_3(21), STR_2(21), STR_1(21), 
 13480 ;; Auto vars:     Size  Location     Type
 13481 ;;		None
 13482 ;; Return value:  Size  Location     Type
 13483 ;;		None               void
 13484 ;; Registers used:
 13485 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13486 ;; Tracked objects:
 13487 ;;		On entry : 0/0
 13488 ;;		On exit  : 0/0
 13489 ;;		Unchanged: 0/0
 13490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13491 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13494 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13495 ;;Total ram usage:        2 bytes
 13496 ;; Hardware stack levels used:    1
 13497 ;; Hardware stack levels required when called:    8
 13498 ;; This function calls:
 13499 ;;		_LCD_write_char
 13500 ;; This function is called by:
 13501 ;;		_main
 13502 ;;		_LCD_Handler
 13503 ;;		_board_initialization
 13504 ;; This function uses a non-reentrant model
 13505 ;;
 13506                           
 13507                           	psect	text27
 13508  015C8C                     __ptext27:
 13509                           	opt stack 0
 13510  015C8C                     _LCD_write_message:
 13511                           	opt stack 21
 13512                           
 13513                           ;src\LCD_44780.c: 181: while(*buffer) {
 13514                           
 13515                           ;incstack = 0
 13516  015C8C  D00D               	goto	l8274
 13517  015C8E                     l8270:
 13518                           
 13519                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 13520  015C8E  C080  FFF6         	movff	LCD_write_message@buffer,tblptrl
 13521  015C92  C081  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 13522  015C96                     	if	0	;tblptru may be non-zero
 13523  015C96                     	endif
 13524  015C96                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13525  015C96  0E00               	movlw	low (__mediumconst shr (0+16))
 13526  015C98  6EF8               	movwf	tblptru,c
 13527  015C9A                     	endif
 13528  015C9A  0008               	tblrd		*
 13529  015C9C  50F5               	movf	tablat,w,c
 13530  015C9E  ECF4  F0AC         	call	_LCD_write_char
 13531                           
 13532                           ;src\LCD_44780.c: 186: buffer++;
 13533  015CA2  0100               	movlb	0	; () banked
 13534  015CA4  4B80               	infsnz	LCD_write_message@buffer& (0+255),f,b
 13535  015CA6  2B81               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 13536  015CA8                     l8274:
 13537  015CA8  C080  FFF6         	movff	LCD_write_message@buffer,tblptrl
 13538  015CAC  C081  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 13539  015CB0                     	if	0	;tblptru may be non-zero
 13540  015CB0                     	endif
 13541  015CB0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13542  015CB0  0E00               	movlw	low (__mediumconst shr (0+16))
 13543  015CB2  6EF8               	movwf	tblptru,c
 13544  015CB4                     	endif
 13545  015CB4  0008               	tblrd		*
 13546  015CB6  50F5               	movf	tablat,w,c
 13547  015CB8  0900               	iorlw	0
 13548  015CBA  B4D8               	btfsc	status,2,c
 13549  015CBC  0012               	return	
 13550  015CBE  D7E7               	goto	l8270
 13551  015CC0                     __end_of_LCD_write_message:
 13552                           	opt stack 0
 13553                           tblptru	equ	0xFF8
 13554                           tblptrh	equ	0xFF7
 13555                           tblptrl	equ	0xFF6
 13556                           tablat	equ	0xFF5
 13557                           prodh	equ	0xFF4
 13558                           prodl	equ	0xFF3
 13559                           intcon	equ	0xFF2
 13560                           postinc0	equ	0xFEE
 13561                           wreg	equ	0xFE8
 13562                           indf2	equ	0xFDF
 13563                           postinc2	equ	0xFDE
 13564                           fsr2h	equ	0xFDA
 13565                           fsr2l	equ	0xFD9
 13566                           status	equ	0xFD8
 13567                           
 13568 ;; *************** function _LCD_write_char *****************
 13569 ;; Defined at:
 13570 ;;		line 145 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 13571 ;; Parameters:    Size  Location     Type
 13572 ;;  value           1    wreg     unsigned char 
 13573 ;; Auto vars:     Size  Location     Type
 13574 ;;  value           1   31[BANK0 ] unsigned char 
 13575 ;;  D0              1   30[BANK0 ] unsigned char 
 13576 ;;  D1              1   29[BANK0 ] unsigned char 
 13577 ;;  D2              1   28[BANK0 ] unsigned char 
 13578 ;;  D3              1   27[BANK0 ] unsigned char 
 13579 ;; Return value:  Size  Location     Type
 13580 ;;		None               void
 13581 ;; Registers used:
 13582 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13583 ;; Tracked objects:
 13584 ;;		On entry : 0/0
 13585 ;;		On exit  : 0/0
 13586 ;;		Unchanged: 0/0
 13587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13589 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13591 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13592 ;;Total ram usage:        5 bytes
 13593 ;; Hardware stack levels used:    1
 13594 ;; Hardware stack levels required when called:    7
 13595 ;; This function calls:
 13596 ;;		_LCD_send_command
 13597 ;; This function is called by:
 13598 ;;		_LCD_write_message
 13599 ;;		_LCD_write_string
 13600 ;; This function uses a non-reentrant model
 13601 ;;
 13602                           
 13603                           	psect	text28
 13604  0159E8                     __ptext28:
 13605                           	opt stack 0
 13606  0159E8                     _LCD_write_char:
 13607                           	opt stack 21
 13608                           
 13609                           ;incstack = 0
 13610                           ;LCD_write_char@value stored from wreg
 13611  0159E8  0100               	movlb	0	; () banked
 13612  0159EA  6F7F               	movwf	LCD_write_char@value& (0+255),b
 13613                           
 13614                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 13615                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 13616  0159EC  848D               	bsf	3981,2,c	;volatile
 13617                           
 13618                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 13619  0159EE  0100               	movlb	0	; () banked
 13620  0159F0  457F               	rlncf	LCD_write_char@value& (0+255),w,b
 13621  0159F2  0B01               	andlw	1
 13622  0159F4  0100               	movlb	0	; () banked
 13623  0159F6  6F7B               	movwf	LCD_write_char@D3& (0+255),b
 13624                           
 13625                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 13626  0159F8  0100               	movlb	0	; () banked
 13627  0159FA  457F               	rlncf	LCD_write_char@value& (0+255),w,b
 13628  0159FC  46E8               	rlncf	wreg,f,c
 13629  0159FE  0B03               	andlw	3
 13630  015A00  0B01               	andlw	1
 13631  015A02  0100               	movlb	0	; () banked
 13632  015A04  6F7C               	movwf	LCD_write_char@D2& (0+255),b
 13633                           
 13634                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 13635  015A06  0100               	movlb	0	; () banked
 13636  015A08  397F               	swapf	LCD_write_char@value& (0+255),w,b
 13637  015A0A  42E8               	rrncf	wreg,f,c
 13638  015A0C  0B07               	andlw	7
 13639  015A0E  0B01               	andlw	1
 13640  015A10  0100               	movlb	0	; () banked
 13641  015A12  6F7D               	movwf	LCD_write_char@D1& (0+255),b
 13642                           
 13643                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 13644  015A14  0100               	movlb	0	; () banked
 13645  015A16  397F               	swapf	LCD_write_char@value& (0+255),w,b
 13646  015A18  0B0F               	andlw	15
 13647  015A1A  0B01               	andlw	1
 13648  015A1C  0100               	movlb	0	; () banked
 13649  015A1E  6F7E               	movwf	LCD_write_char@D0& (0+255),b
 13650                           
 13651                           ; BSR set to: 0
 13652                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 13653  015A20  C07C  F077         	movff	LCD_write_char@D2,LCD_send_command@D2
 13654  015A24  C07D  F078         	movff	LCD_write_char@D1,LCD_send_command@D1
 13655  015A28  C07E  F079         	movff	LCD_write_char@D0,LCD_send_command@D0
 13656  015A2C  0100               	movlb	0	; () banked
 13657  015A2E  517B               	movf	LCD_write_char@D3& (0+255),w,b
 13658  015A30  ECD5  F0AD         	call	_LCD_send_command
 13659                           
 13660                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 13661  015A34  0100               	movlb	0	; () banked
 13662  015A36  397F               	swapf	LCD_write_char@value& (0+255),w,b
 13663  015A38  46E8               	rlncf	wreg,f,c
 13664  015A3A  0B1F               	andlw	31
 13665  015A3C  0B01               	andlw	1
 13666  015A3E  0100               	movlb	0	; () banked
 13667  015A40  6F7B               	movwf	LCD_write_char@D3& (0+255),b
 13668                           
 13669                           ; BSR set to: 0
 13670                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 13671  015A42  0100               	movlb	0	; () banked
 13672  015A44  417F               	rrncf	LCD_write_char@value& (0+255),w,b
 13673  015A46  42E8               	rrncf	wreg,f,c
 13674  015A48  0B3F               	andlw	63
 13675  015A4A  0B01               	andlw	1
 13676  015A4C  0100               	movlb	0	; () banked
 13677  015A4E  6F7C               	movwf	LCD_write_char@D2& (0+255),b
 13678                           
 13679                           ; BSR set to: 0
 13680                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 13681  015A50  0100               	movlb	0	; () banked
 13682  015A52  90D8               	bcf	status,0,c
 13683  015A54  317F               	rrcf	LCD_write_char@value& (0+255),w,b
 13684  015A56  0B01               	andlw	1
 13685  015A58  0100               	movlb	0	; () banked
 13686  015A5A  6F7D               	movwf	LCD_write_char@D1& (0+255),b
 13687                           
 13688                           ; BSR set to: 0
 13689                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 13690  015A5C  0100               	movlb	0	; () banked
 13691  015A5E  517F               	movf	LCD_write_char@value& (0+255),w,b
 13692  015A60  0B01               	andlw	1
 13693  015A62  0100               	movlb	0	; () banked
 13694  015A64  6F7E               	movwf	LCD_write_char@D0& (0+255),b
 13695                           
 13696                           ; BSR set to: 0
 13697                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 13698  015A66  C07C  F077         	movff	LCD_write_char@D2,LCD_send_command@D2
 13699  015A6A  C07D  F078         	movff	LCD_write_char@D1,LCD_send_command@D1
 13700  015A6E  C07E  F079         	movff	LCD_write_char@D0,LCD_send_command@D0
 13701  015A72  0100               	movlb	0	; () banked
 13702  015A74  517B               	movf	LCD_write_char@D3& (0+255),w,b
 13703  015A76  ECD5  F0AD         	call	_LCD_send_command
 13704                           
 13705                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 13706  015A7A  948D               	bcf	3981,2,c	;volatile
 13707  015A7C  0012               	return		;funcret
 13708  015A7E                     __end_of_LCD_write_char:
 13709                           	opt stack 0
 13710                           tblptru	equ	0xFF8
 13711                           tblptrh	equ	0xFF7
 13712                           tblptrl	equ	0xFF6
 13713                           tablat	equ	0xFF5
 13714                           prodh	equ	0xFF4
 13715                           prodl	equ	0xFF3
 13716                           intcon	equ	0xFF2
 13717                           postinc0	equ	0xFEE
 13718                           wreg	equ	0xFE8
 13719                           indf2	equ	0xFDF
 13720                           postinc2	equ	0xFDE
 13721                           fsr2h	equ	0xFDA
 13722                           fsr2l	equ	0xFD9
 13723                           status	equ	0xFD8
 13724                           
 13725 ;; *************** function _LCD_initialize *****************
 13726 ;; Defined at:
 13727 ;;		line 283 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 13728 ;; Parameters:    Size  Location     Type
 13729 ;;  quartz_frequ    1    wreg     unsigned char 
 13730 ;; Auto vars:     Size  Location     Type
 13731 ;;  quartz_frequ    1   29[BANK0 ] unsigned char 
 13732 ;; Return value:  Size  Location     Type
 13733 ;;		None               void
 13734 ;; Registers used:
 13735 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13736 ;; Tracked objects:
 13737 ;;		On entry : 0/0
 13738 ;;		On exit  : 0/0
 13739 ;;		Unchanged: 0/0
 13740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13742 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13744 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13745 ;;Total ram usage:        1 bytes
 13746 ;; Hardware stack levels used:    1
 13747 ;; Hardware stack levels required when called:    8
 13748 ;; This function calls:
 13749 ;;		_LCD_clear
 13750 ;;		_LCD_cursor
 13751 ;;		_LCD_send_command
 13752 ;;		_delay_ms
 13753 ;;		_delay_set_quartz
 13754 ;; This function is called by:
 13755 ;;		_main
 13756 ;;		_LCD_Handler
 13757 ;;		_board_initialization
 13758 ;; This function uses a non-reentrant model
 13759 ;;
 13760                           
 13761                           	psect	text29
 13762  01504A                     __ptext29:
 13763                           	opt stack 0
 13764  01504A                     _LCD_initialize:
 13765                           	opt stack 21
 13766                           
 13767                           ;incstack = 0
 13768                           ;LCD_initialize@quartz_frequency stored from wreg
 13769  01504A  0100               	movlb	0	; () banked
 13770  01504C  6F7D               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 13771                           
 13772                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 13773  01504E  0100               	movlb	0	; () banked
 13774  015050  517D               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 13775  015052  EC3A  F0AF         	call	_delay_set_quartz
 13776                           
 13777                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 13778  015056  948D               	bcf	3981,2,c	;volatile
 13779                           
 13780                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 13781  015058  928B               	bcf	3979,1,c	;volatile
 13782                           
 13783                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 13784  01505A  908B               	bcf	3979,0,c	;volatile
 13785                           
 13786                           ;src\LCD_44780.c: 291: delay_ms (100);
 13787  01505C  0E00               	movlw	0
 13788  01505E  0100               	movlb	0	; () banked
 13789  015060  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13790  015062  0E64               	movlw	100
 13791  015064  6F75               	movwf	delay_ms@value_ms& (0+255),b
 13792  015066  ECF2  F0AD         	call	_delay_ms	;wreg free
 13793                           
 13794                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 13795  01506A  0E00               	movlw	0
 13796  01506C  0100               	movlb	0	; () banked
 13797  01506E  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13798  015070  0E01               	movlw	1
 13799  015072  0100               	movlb	0	; () banked
 13800  015074  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13801  015076  0E01               	movlw	1
 13802  015078  0100               	movlb	0	; () banked
 13803  01507A  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13804  01507C  0E00               	movlw	0
 13805  01507E  ECD5  F0AD         	call	_LCD_send_command
 13806                           
 13807                           ;src\LCD_44780.c: 293: delay_ms (100);
 13808  015082  0E00               	movlw	0
 13809  015084  0100               	movlb	0	; () banked
 13810  015086  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13811  015088  0E64               	movlw	100
 13812  01508A  6F75               	movwf	delay_ms@value_ms& (0+255),b
 13813  01508C  ECF2  F0AD         	call	_delay_ms	;wreg free
 13814                           
 13815                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 13816  015090  0E00               	movlw	0
 13817  015092  0100               	movlb	0	; () banked
 13818  015094  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13819  015096  0E01               	movlw	1
 13820  015098  0100               	movlb	0	; () banked
 13821  01509A  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13822  01509C  0E01               	movlw	1
 13823  01509E  0100               	movlb	0	; () banked
 13824  0150A0  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13825  0150A2  0E00               	movlw	0
 13826  0150A4  ECD5  F0AD         	call	_LCD_send_command
 13827                           
 13828                           ;src\LCD_44780.c: 295: delay_ms (10);
 13829  0150A8  0E00               	movlw	0
 13830  0150AA  0100               	movlb	0	; () banked
 13831  0150AC  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
 13832  0150AE  0E0A               	movlw	10
 13833  0150B0  6F75               	movwf	delay_ms@value_ms& (0+255),b
 13834  0150B2  ECF2  F0AD         	call	_delay_ms	;wreg free
 13835                           
 13836                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 13837  0150B6  0E00               	movlw	0
 13838  0150B8  0100               	movlb	0	; () banked
 13839  0150BA  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13840  0150BC  0E01               	movlw	1
 13841  0150BE  0100               	movlb	0	; () banked
 13842  0150C0  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13843  0150C2  0E01               	movlw	1
 13844  0150C4  0100               	movlb	0	; () banked
 13845  0150C6  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13846  0150C8  0E00               	movlw	0
 13847  0150CA  ECD5  F0AD         	call	_LCD_send_command
 13848                           
 13849                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 13850  0150CE  0E00               	movlw	0
 13851  0150D0  0100               	movlb	0	; () banked
 13852  0150D2  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13853  0150D4  0E01               	movlw	1
 13854  0150D6  0100               	movlb	0	; () banked
 13855  0150D8  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13856  0150DA  0E00               	movlw	0
 13857  0150DC  0100               	movlb	0	; () banked
 13858  0150DE  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13859  0150E0  0E00               	movlw	0
 13860  0150E2  ECD5  F0AD         	call	_LCD_send_command
 13861                           
 13862                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 13863  0150E6  0E00               	movlw	0
 13864  0150E8  0100               	movlb	0	; () banked
 13865  0150EA  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13866  0150EC  0E01               	movlw	1
 13867  0150EE  0100               	movlb	0	; () banked
 13868  0150F0  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13869  0150F2  0E00               	movlw	0
 13870  0150F4  0100               	movlb	0	; () banked
 13871  0150F6  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13872  0150F8  0E00               	movlw	0
 13873  0150FA  ECD5  F0AD         	call	_LCD_send_command
 13874                           
 13875                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 13876  0150FE  0E00               	movlw	0
 13877  015100  0100               	movlb	0	; () banked
 13878  015102  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13879  015104  0E00               	movlw	0
 13880  015106  0100               	movlb	0	; () banked
 13881  015108  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13882  01510A  0E00               	movlw	0
 13883  01510C  0100               	movlb	0	; () banked
 13884  01510E  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13885  015110  0E01               	movlw	1
 13886  015112  ECD5  F0AD         	call	_LCD_send_command
 13887                           
 13888                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 13889  015116  0E00               	movlw	0
 13890  015118  0100               	movlb	0	; () banked
 13891  01511A  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13892  01511C  0E00               	movlw	0
 13893  01511E  0100               	movlb	0	; () banked
 13894  015120  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13895  015122  0E00               	movlw	0
 13896  015124  0100               	movlb	0	; () banked
 13897  015126  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13898  015128  0E00               	movlw	0
 13899  01512A  ECD5  F0AD         	call	_LCD_send_command
 13900                           
 13901                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 13902  01512E  0E00               	movlw	0
 13903  015130  0100               	movlb	0	; () banked
 13904  015132  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13905  015134  0E00               	movlw	0
 13906  015136  0100               	movlb	0	; () banked
 13907  015138  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13908  01513A  0E00               	movlw	0
 13909  01513C  0100               	movlb	0	; () banked
 13910  01513E  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13911  015140  0E01               	movlw	1
 13912  015142  ECD5  F0AD         	call	_LCD_send_command
 13913                           
 13914                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 13915  015146  0E00               	movlw	0
 13916  015148  0100               	movlb	0	; () banked
 13917  01514A  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13918  01514C  0E00               	movlw	0
 13919  01514E  0100               	movlb	0	; () banked
 13920  015150  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13921  015152  0E00               	movlw	0
 13922  015154  0100               	movlb	0	; () banked
 13923  015156  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13924  015158  0E00               	movlw	0
 13925  01515A  ECD5  F0AD         	call	_LCD_send_command
 13926                           
 13927                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 13928  01515E  0E00               	movlw	0
 13929  015160  0100               	movlb	0	; () banked
 13930  015162  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13931  015164  0E00               	movlw	0
 13932  015166  0100               	movlb	0	; () banked
 13933  015168  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13934  01516A  0E01               	movlw	1
 13935  01516C  0100               	movlb	0	; () banked
 13936  01516E  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13937  015170  0E00               	movlw	0
 13938  015172  ECD5  F0AD         	call	_LCD_send_command
 13939                           
 13940                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 13941  015176  0E00               	movlw	0
 13942  015178  0100               	movlb	0	; () banked
 13943  01517A  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13944  01517C  0E00               	movlw	0
 13945  01517E  0100               	movlb	0	; () banked
 13946  015180  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13947  015182  0E00               	movlw	0
 13948  015184  0100               	movlb	0	; () banked
 13949  015186  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13950  015188  0E00               	movlw	0
 13951  01518A  ECD5  F0AD         	call	_LCD_send_command
 13952                           
 13953                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 13954  01518E  0E01               	movlw	1
 13955  015190  0100               	movlb	0	; () banked
 13956  015192  6F77               	movwf	LCD_send_command@D2& (0+255),b
 13957  015194  0E01               	movlw	1
 13958  015196  0100               	movlb	0	; () banked
 13959  015198  6F78               	movwf	LCD_send_command@D1& (0+255),b
 13960  01519A  0E00               	movlw	0
 13961  01519C  0100               	movlb	0	; () banked
 13962  01519E  6F79               	movwf	LCD_send_command@D0& (0+255),b
 13963  0151A0  0E00               	movlw	0
 13964  0151A2  ECD5  F0AD         	call	_LCD_send_command
 13965                           
 13966                           ;src\LCD_44780.c: 312: LCD_clear ();
 13967  0151A6  EC79  F0AE         	call	_LCD_clear	;wreg free
 13968                           
 13969                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 13970  0151AA  0E00               	movlw	0
 13971  0151AC  0100               	movlb	0	; () banked
 13972  0151AE  6F7B               	movwf	LCD_cursor@blinking& (0+255),b
 13973  0151B0  0E00               	movlw	0
 13974  0151B2  EC60  F0AE         	call	_LCD_cursor
 13975  0151B6  0012               	return		;funcret
 13976  0151B8                     __end_of_LCD_initialize:
 13977                           	opt stack 0
 13978                           tblptru	equ	0xFF8
 13979                           tblptrh	equ	0xFF7
 13980                           tblptrl	equ	0xFF6
 13981                           tablat	equ	0xFF5
 13982                           prodh	equ	0xFF4
 13983                           prodl	equ	0xFF3
 13984                           intcon	equ	0xFF2
 13985                           postinc0	equ	0xFEE
 13986                           wreg	equ	0xFE8
 13987                           indf2	equ	0xFDF
 13988                           postinc2	equ	0xFDE
 13989                           fsr2h	equ	0xFDA
 13990                           fsr2l	equ	0xFD9
 13991                           status	equ	0xFD8
 13992                           
 13993 ;; *************** function _delay_set_quartz *****************
 13994 ;; Defined at:
 13995 ;;		line 115 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 13996 ;; Parameters:    Size  Location     Type
 13997 ;;  frequency       1    wreg     unsigned char 
 13998 ;; Auto vars:     Size  Location     Type
 13999 ;;  frequency       1   15[BANK0 ] unsigned char 
 14000 ;; Return value:  Size  Location     Type
 14001 ;;		None               void
 14002 ;; Registers used:
 14003 ;;		wreg
 14004 ;; Tracked objects:
 14005 ;;		On entry : 0/0
 14006 ;;		On exit  : 0/0
 14007 ;;		Unchanged: 0/0
 14008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14010 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14012 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14013 ;;Total ram usage:        1 bytes
 14014 ;; Hardware stack levels used:    1
 14015 ;; Hardware stack levels required when called:    3
 14016 ;; This function calls:
 14017 ;;		Nothing
 14018 ;; This function is called by:
 14019 ;;		_LCD_initialize
 14020 ;; This function uses a non-reentrant model
 14021 ;;
 14022                           
 14023                           	psect	text30
 14024  015E74                     __ptext30:
 14025                           	opt stack 0
 14026  015E74                     _delay_set_quartz:
 14027                           	opt stack 25
 14028                           
 14029                           ;incstack = 0
 14030                           ;delay_set_quartz@frequency stored from wreg
 14031  015E74  0100               	movlb	0	; () banked
 14032  015E76  6F6F               	movwf	delay_set_quartz@frequency& (0+255),b
 14033                           
 14034                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 14035  015E78  C06F  F0EB         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 14036  015E7C  0012               	return		;funcret
 14037  015E7E                     __end_of_delay_set_quartz:
 14038                           	opt stack 0
 14039                           tblptru	equ	0xFF8
 14040                           tblptrh	equ	0xFF7
 14041                           tblptrl	equ	0xFF6
 14042                           tablat	equ	0xFF5
 14043                           prodh	equ	0xFF4
 14044                           prodl	equ	0xFF3
 14045                           intcon	equ	0xFF2
 14046                           postinc0	equ	0xFEE
 14047                           wreg	equ	0xFE8
 14048                           indf2	equ	0xFDF
 14049                           postinc2	equ	0xFDE
 14050                           fsr2h	equ	0xFDA
 14051                           fsr2l	equ	0xFD9
 14052                           status	equ	0xFD8
 14053                           
 14054 ;; *************** function _LCD_cursor *****************
 14055 ;; Defined at:
 14056 ;;		line 266 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14057 ;; Parameters:    Size  Location     Type
 14058 ;;  active          1    wreg     unsigned char 
 14059 ;;  blinking        1   27[BANK0 ] unsigned char 
 14060 ;; Auto vars:     Size  Location     Type
 14061 ;;  active          1   28[BANK0 ] unsigned char 
 14062 ;; Return value:  Size  Location     Type
 14063 ;;		None               void
 14064 ;; Registers used:
 14065 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14066 ;; Tracked objects:
 14067 ;;		On entry : 0/0
 14068 ;;		On exit  : 0/0
 14069 ;;		Unchanged: 0/0
 14070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14071 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14072 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14074 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14075 ;;Total ram usage:        2 bytes
 14076 ;; Hardware stack levels used:    1
 14077 ;; Hardware stack levels required when called:    7
 14078 ;; This function calls:
 14079 ;;		_LCD_send_command
 14080 ;; This function is called by:
 14081 ;;		_LCD_initialize
 14082 ;; This function uses a non-reentrant model
 14083 ;;
 14084                           
 14085                           	psect	text31
 14086  015CC0                     __ptext31:
 14087                           	opt stack 0
 14088  015CC0                     _LCD_cursor:
 14089                           	opt stack 21
 14090                           
 14091                           ;incstack = 0
 14092                           ;LCD_cursor@active stored from wreg
 14093  015CC0  0100               	movlb	0	; () banked
 14094  015CC2  6F7C               	movwf	LCD_cursor@active& (0+255),b
 14095                           
 14096                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 14097  015CC4  0E00               	movlw	0
 14098  015CC6  0100               	movlb	0	; () banked
 14099  015CC8  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14100  015CCA  0E00               	movlw	0
 14101  015CCC  0100               	movlb	0	; () banked
 14102  015CCE  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14103  015CD0  0E00               	movlw	0
 14104  015CD2  0100               	movlb	0	; () banked
 14105  015CD4  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14106  015CD6  0E00               	movlw	0
 14107  015CD8  ECD5  F0AD         	call	_LCD_send_command
 14108                           
 14109                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 14110  015CDC  0E01               	movlw	1
 14111  015CDE  0100               	movlb	0	; () banked
 14112  015CE0  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14113  015CE2  C07C  F078         	movff	LCD_cursor@active,LCD_send_command@D1
 14114  015CE6  C07B  F079         	movff	LCD_cursor@blinking,LCD_send_command@D0
 14115  015CEA  0E01               	movlw	1
 14116  015CEC  ECD5  F0AD         	call	_LCD_send_command
 14117  015CF0  0012               	return		;funcret
 14118  015CF2                     __end_of_LCD_cursor:
 14119                           	opt stack 0
 14120                           tblptru	equ	0xFF8
 14121                           tblptrh	equ	0xFF7
 14122                           tblptrl	equ	0xFF6
 14123                           tablat	equ	0xFF5
 14124                           prodh	equ	0xFF4
 14125                           prodl	equ	0xFF3
 14126                           intcon	equ	0xFF2
 14127                           postinc0	equ	0xFEE
 14128                           wreg	equ	0xFE8
 14129                           indf2	equ	0xFDF
 14130                           postinc2	equ	0xFDE
 14131                           fsr2h	equ	0xFDA
 14132                           fsr2l	equ	0xFD9
 14133                           status	equ	0xFD8
 14134                           
 14135 ;; *************** function _LCD_clear *****************
 14136 ;; Defined at:
 14137 ;;		line 257 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14138 ;; Parameters:    Size  Location     Type
 14139 ;;		None
 14140 ;; Auto vars:     Size  Location     Type
 14141 ;;		None
 14142 ;; Return value:  Size  Location     Type
 14143 ;;		None               void
 14144 ;; Registers used:
 14145 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14146 ;; Tracked objects:
 14147 ;;		On entry : 0/0
 14148 ;;		On exit  : 0/0
 14149 ;;		Unchanged: 0/0
 14150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14155 ;;Total ram usage:        0 bytes
 14156 ;; Hardware stack levels used:    1
 14157 ;; Hardware stack levels required when called:    7
 14158 ;; This function calls:
 14159 ;;		_LCD_send_command
 14160 ;; This function is called by:
 14161 ;;		_LCD_initialize
 14162 ;;		_LCD_Handler
 14163 ;;		_board_initialization
 14164 ;; This function uses a non-reentrant model
 14165 ;;
 14166                           
 14167                           	psect	text32
 14168  015CF2                     __ptext32:
 14169                           	opt stack 0
 14170  015CF2                     _LCD_clear:
 14171                           	opt stack 21
 14172                           
 14173                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 14174                           
 14175                           ;incstack = 0
 14176  015CF2  0E00               	movlw	0
 14177  015CF4  0100               	movlb	0	; () banked
 14178  015CF6  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14179  015CF8  0E00               	movlw	0
 14180  015CFA  0100               	movlb	0	; () banked
 14181  015CFC  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14182  015CFE  0E00               	movlw	0
 14183  015D00  0100               	movlb	0	; () banked
 14184  015D02  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14185  015D04  0E00               	movlw	0
 14186  015D06  ECD5  F0AD         	call	_LCD_send_command
 14187                           
 14188                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 14189  015D0A  0E00               	movlw	0
 14190  015D0C  0100               	movlb	0	; () banked
 14191  015D0E  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14192  015D10  0E00               	movlw	0
 14193  015D12  0100               	movlb	0	; () banked
 14194  015D14  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14195  015D16  0E01               	movlw	1
 14196  015D18  0100               	movlb	0	; () banked
 14197  015D1A  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14198  015D1C  0E00               	movlw	0
 14199  015D1E  ECD5  F0AD         	call	_LCD_send_command
 14200  015D22  0012               	return		;funcret
 14201  015D24                     __end_of_LCD_clear:
 14202                           	opt stack 0
 14203                           tblptru	equ	0xFF8
 14204                           tblptrh	equ	0xFF7
 14205                           tblptrl	equ	0xFF6
 14206                           tablat	equ	0xFF5
 14207                           prodh	equ	0xFF4
 14208                           prodl	equ	0xFF3
 14209                           intcon	equ	0xFF2
 14210                           postinc0	equ	0xFEE
 14211                           wreg	equ	0xFE8
 14212                           indf2	equ	0xFDF
 14213                           postinc2	equ	0xFDE
 14214                           fsr2h	equ	0xFDA
 14215                           fsr2l	equ	0xFD9
 14216                           status	equ	0xFD8
 14217                           
 14218 ;; *************** function _LCD_goto_xy *****************
 14219 ;; Defined at:
 14220 ;;		line 136 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14221 ;; Parameters:    Size  Location     Type
 14222 ;;  x               1    wreg     unsigned char 
 14223 ;;  y               1   30[BANK0 ] unsigned char 
 14224 ;; Auto vars:     Size  Location     Type
 14225 ;;  x               1   31[BANK0 ] unsigned char 
 14226 ;; Return value:  Size  Location     Type
 14227 ;;		None               void
 14228 ;; Registers used:
 14229 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14230 ;; Tracked objects:
 14231 ;;		On entry : 0/0
 14232 ;;		On exit  : 0/0
 14233 ;;		Unchanged: 0/0
 14234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14235 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14236 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14238 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14239 ;;Total ram usage:        2 bytes
 14240 ;; Hardware stack levels used:    1
 14241 ;; Hardware stack levels required when called:    8
 14242 ;; This function calls:
 14243 ;;		_LCD_goto_line
 14244 ;;		_LCD_shift_cursor
 14245 ;; This function is called by:
 14246 ;;		_LCD_Handler
 14247 ;; This function uses a non-reentrant model
 14248 ;;
 14249                           
 14250                           	psect	text33
 14251  015DF4                     __ptext33:
 14252                           	opt stack 0
 14253  015DF4                     _LCD_goto_xy:
 14254                           	opt stack 21
 14255                           
 14256                           ;incstack = 0
 14257                           ;LCD_goto_xy@x stored from wreg
 14258  015DF4  0100               	movlb	0	; () banked
 14259  015DF6  6F7F               	movwf	LCD_goto_xy@x& (0+255),b
 14260                           
 14261                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 14262  015DF8  0100               	movlb	0	; () banked
 14263  015DFA  517E               	movf	LCD_goto_xy@y& (0+255),w,b
 14264  015DFC  EC10  F0AA         	call	_LCD_goto_line
 14265                           
 14266                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 14267  015E00  0100               	movlb	0	; () banked
 14268  015E02  057F               	decf	LCD_goto_xy@x& (0+255),w,b
 14269  015E04  0100               	movlb	0	; () banked
 14270  015E06  6F7B               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 14271  015E08  0E01               	movlw	1
 14272  015E0A  EC69  F0AD         	call	_LCD_shift_cursor
 14273  015E0E  0012               	return		;funcret
 14274  015E10                     __end_of_LCD_goto_xy:
 14275                           	opt stack 0
 14276                           tblptru	equ	0xFF8
 14277                           tblptrh	equ	0xFF7
 14278                           tblptrl	equ	0xFF6
 14279                           tablat	equ	0xFF5
 14280                           prodh	equ	0xFF4
 14281                           prodl	equ	0xFF3
 14282                           intcon	equ	0xFF2
 14283                           postinc0	equ	0xFEE
 14284                           wreg	equ	0xFE8
 14285                           indf2	equ	0xFDF
 14286                           postinc2	equ	0xFDE
 14287                           fsr2h	equ	0xFDA
 14288                           fsr2l	equ	0xFD9
 14289                           status	equ	0xFD8
 14290                           
 14291 ;; *************** function _LCD_shift_cursor *****************
 14292 ;; Defined at:
 14293 ;;		line 98 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14294 ;; Parameters:    Size  Location     Type
 14295 ;;  shift           1    wreg     unsigned char 
 14296 ;;  number_of_sh    1   27[BANK0 ] unsigned char 
 14297 ;; Auto vars:     Size  Location     Type
 14298 ;;  shift           1   28[BANK0 ] unsigned char 
 14299 ;;  i               1   29[BANK0 ] unsigned char 
 14300 ;; Return value:  Size  Location     Type
 14301 ;;		None               void
 14302 ;; Registers used:
 14303 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14304 ;; Tracked objects:
 14305 ;;		On entry : 0/0
 14306 ;;		On exit  : 0/0
 14307 ;;		Unchanged: 0/0
 14308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14309 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14310 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14312 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14313 ;;Total ram usage:        3 bytes
 14314 ;; Hardware stack levels used:    1
 14315 ;; Hardware stack levels required when called:    7
 14316 ;; This function calls:
 14317 ;;		_LCD_send_command
 14318 ;; This function is called by:
 14319 ;;		_LCD_goto_xy
 14320 ;; This function uses a non-reentrant model
 14321 ;;
 14322                           
 14323                           	psect	text34
 14324  015AD2                     __ptext34:
 14325                           	opt stack 0
 14326  015AD2                     _LCD_shift_cursor:
 14327                           	opt stack 21
 14328                           
 14329                           ;incstack = 0
 14330                           ;LCD_shift_cursor@shift stored from wreg
 14331  015AD2  0100               	movlb	0	; () banked
 14332  015AD4  6F7C               	movwf	LCD_shift_cursor@shift& (0+255),b
 14333                           
 14334                           ;src\LCD_44780.c: 100: unsigned char i;
 14335                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 14336  015AD6  0E00               	movlw	0
 14337  015AD8  0100               	movlb	0	; () banked
 14338  015ADA  6F7D               	movwf	LCD_shift_cursor@i& (0+255),b
 14339  015ADC  D019               	goto	l7882
 14340  015ADE                     l7878:
 14341                           
 14342                           ; BSR set to: 0
 14343                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 14344  015ADE  0E00               	movlw	0
 14345  015AE0  0100               	movlb	0	; () banked
 14346  015AE2  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14347  015AE4  0E00               	movlw	0
 14348  015AE6  0100               	movlb	0	; () banked
 14349  015AE8  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14350  015AEA  0E01               	movlw	1
 14351  015AEC  0100               	movlb	0	; () banked
 14352  015AEE  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14353  015AF0  0E00               	movlw	0
 14354  015AF2  ECD5  F0AD         	call	_LCD_send_command
 14355                           
 14356                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 14357  015AF6  C07C  F077         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 14358  015AFA  0E00               	movlw	0
 14359  015AFC  0100               	movlb	0	; () banked
 14360  015AFE  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14361  015B00  0E00               	movlw	0
 14362  015B02  0100               	movlb	0	; () banked
 14363  015B04  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14364  015B06  0E00               	movlw	0
 14365  015B08  ECD5  F0AD         	call	_LCD_send_command
 14366  015B0C  0100               	movlb	0	; () banked
 14367  015B0E  2B7D               	incf	LCD_shift_cursor@i& (0+255),f,b
 14368  015B10                     l7882:
 14369                           
 14370                           ; BSR set to: 0
 14371  015B10  0100               	movlb	0	; () banked
 14372  015B12  517B               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 14373  015B14  0100               	movlb	0	; () banked
 14374  015B16  5D7D               	subwf	LCD_shift_cursor@i& (0+255),w,b
 14375  015B18  B0D8               	btfsc	status,0,c
 14376  015B1A  0012               	return	
 14377  015B1C  D7E0               	goto	l7878
 14378  015B1E                     __end_of_LCD_shift_cursor:
 14379                           	opt stack 0
 14380                           tblptru	equ	0xFF8
 14381                           tblptrh	equ	0xFF7
 14382                           tblptrl	equ	0xFF6
 14383                           tablat	equ	0xFF5
 14384                           prodh	equ	0xFF4
 14385                           prodl	equ	0xFF3
 14386                           intcon	equ	0xFF2
 14387                           postinc0	equ	0xFEE
 14388                           wreg	equ	0xFE8
 14389                           indf2	equ	0xFDF
 14390                           postinc2	equ	0xFDE
 14391                           fsr2h	equ	0xFDA
 14392                           fsr2l	equ	0xFD9
 14393                           status	equ	0xFD8
 14394                           
 14395 ;; *************** function _LCD_goto_line *****************
 14396 ;; Defined at:
 14397 ;;		line 111 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14398 ;; Parameters:    Size  Location     Type
 14399 ;;  line            1    wreg     unsigned char 
 14400 ;; Auto vars:     Size  Location     Type
 14401 ;;  line            1   27[BANK0 ] unsigned char 
 14402 ;; Return value:  Size  Location     Type
 14403 ;;		None               void
 14404 ;; Registers used:
 14405 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14406 ;; Tracked objects:
 14407 ;;		On entry : 0/0
 14408 ;;		On exit  : 0/0
 14409 ;;		Unchanged: 0/0
 14410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14412 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14414 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14415 ;;Total ram usage:        1 bytes
 14416 ;; Hardware stack levels used:    1
 14417 ;; Hardware stack levels required when called:    7
 14418 ;; This function calls:
 14419 ;;		_LCD_send_command
 14420 ;; This function is called by:
 14421 ;;		_LCD_goto_xy
 14422 ;;		_main
 14423 ;;		_LCD_Handler
 14424 ;;		_board_initialization
 14425 ;; This function uses a non-reentrant model
 14426 ;;
 14427                           
 14428                           	psect	text35
 14429  015420                     __ptext35:
 14430                           	opt stack 0
 14431  015420                     _LCD_goto_line:
 14432                           	opt stack 22
 14433                           
 14434                           ; BSR set to: 0
 14435                           ;incstack = 0
 14436                           ;LCD_goto_line@line stored from wreg
 14437  015420  0100               	movlb	0	; () banked
 14438  015422  6F7B               	movwf	LCD_goto_line@line& (0+255),b
 14439                           
 14440                           ;src\LCD_44780.c: 113: switch(line) {
 14441  015424  D064               	goto	l7894
 14442  015426                     l7886:
 14443  015426  0E00               	movlw	0
 14444  015428  0100               	movlb	0	; () banked
 14445  01542A  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14446  01542C  0E00               	movlw	0
 14447  01542E  0100               	movlb	0	; () banked
 14448  015430  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14449  015432  0E00               	movlw	0
 14450  015434  0100               	movlb	0	; () banked
 14451  015436  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14452  015438  0E01               	movlw	1
 14453  01543A  ECD5  F0AD         	call	_LCD_send_command
 14454                           
 14455                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 14456  01543E  0E00               	movlw	0
 14457  015440  0100               	movlb	0	; () banked
 14458  015442  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14459  015444  0E00               	movlw	0
 14460  015446  0100               	movlb	0	; () banked
 14461  015448  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14462  01544A  0E00               	movlw	0
 14463  01544C  0100               	movlb	0	; () banked
 14464  01544E  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14465  015450  0E00               	movlw	0
 14466  015452  ECD5  F0AD         	call	_LCD_send_command
 14467                           
 14468                           ;src\LCD_44780.c: 117: break;
 14469  015456  0012               	return	
 14470  015458                     l7888:
 14471  015458  0E01               	movlw	1
 14472  01545A  0100               	movlb	0	; () banked
 14473  01545C  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14474  01545E  0E00               	movlw	0
 14475  015460  0100               	movlb	0	; () banked
 14476  015462  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14477  015464  0E00               	movlw	0
 14478  015466  0100               	movlb	0	; () banked
 14479  015468  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14480  01546A  0E01               	movlw	1
 14481  01546C  ECD5  F0AD         	call	_LCD_send_command
 14482                           
 14483                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 14484  015470  0E00               	movlw	0
 14485  015472  0100               	movlb	0	; () banked
 14486  015474  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14487  015476  0E00               	movlw	0
 14488  015478  0100               	movlb	0	; () banked
 14489  01547A  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14490  01547C  0E00               	movlw	0
 14491  01547E  0100               	movlb	0	; () banked
 14492  015480  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14493  015482  0E00               	movlw	0
 14494  015484  ECD5  F0AD         	call	_LCD_send_command
 14495                           
 14496                           ;src\LCD_44780.c: 121: break;
 14497  015488  0012               	return	
 14498  01548A                     l7890:
 14499  01548A  0E00               	movlw	0
 14500  01548C  0100               	movlb	0	; () banked
 14501  01548E  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14502  015490  0E00               	movlw	0
 14503  015492  0100               	movlb	0	; () banked
 14504  015494  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14505  015496  0E01               	movlw	1
 14506  015498  0100               	movlb	0	; () banked
 14507  01549A  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14508  01549C  0E01               	movlw	1
 14509  01549E  ECD5  F0AD         	call	_LCD_send_command
 14510                           
 14511                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 14512  0154A2  0E01               	movlw	1
 14513  0154A4  0100               	movlb	0	; () banked
 14514  0154A6  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14515  0154A8  0E00               	movlw	0
 14516  0154AA  0100               	movlb	0	; () banked
 14517  0154AC  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14518  0154AE  0E00               	movlw	0
 14519  0154B0  0100               	movlb	0	; () banked
 14520  0154B2  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14521  0154B4  0E00               	movlw	0
 14522  0154B6  ECD5  F0AD         	call	_LCD_send_command
 14523                           
 14524                           ;src\LCD_44780.c: 125: break;
 14525  0154BA  0012               	return	
 14526  0154BC                     l7892:
 14527  0154BC  0E01               	movlw	1
 14528  0154BE  0100               	movlb	0	; () banked
 14529  0154C0  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14530  0154C2  0E00               	movlw	0
 14531  0154C4  0100               	movlb	0	; () banked
 14532  0154C6  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14533  0154C8  0E01               	movlw	1
 14534  0154CA  0100               	movlb	0	; () banked
 14535  0154CC  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14536  0154CE  0E01               	movlw	1
 14537  0154D0  ECD5  F0AD         	call	_LCD_send_command
 14538                           
 14539                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 14540  0154D4  0E01               	movlw	1
 14541  0154D6  0100               	movlb	0	; () banked
 14542  0154D8  6F77               	movwf	LCD_send_command@D2& (0+255),b
 14543  0154DA  0E00               	movlw	0
 14544  0154DC  0100               	movlb	0	; () banked
 14545  0154DE  6F78               	movwf	LCD_send_command@D1& (0+255),b
 14546  0154E0  0E00               	movlw	0
 14547  0154E2  0100               	movlb	0	; () banked
 14548  0154E4  6F79               	movwf	LCD_send_command@D0& (0+255),b
 14549  0154E6  0E00               	movlw	0
 14550  0154E8  ECD5  F0AD         	call	_LCD_send_command
 14551                           
 14552                           ;src\LCD_44780.c: 129: }
 14553  0154EC  0012               	return	
 14554  0154EE                     l7894:
 14555  0154EE  0100               	movlb	0	; () banked
 14556  0154F0  517B               	movf	LCD_goto_line@line& (0+255),w,b
 14557                           
 14558                           ; Switch size 1, requested type "space"
 14559                           ; Number of cases is 4, Range of values is 1 to 4
 14560                           ; switch strategies available:
 14561                           ; Name         Instructions Cycles
 14562                           ; simple_byte           13     7 (average)
 14563                           ;	Chosen strategy is simple_byte
 14564  0154F2  0A01               	xorlw	1	; case 1
 14565  0154F4  B4D8               	btfsc	status,2,c
 14566  0154F6  D797               	goto	l7886
 14567  0154F8  0A03               	xorlw	3	; case 2
 14568  0154FA  B4D8               	btfsc	status,2,c
 14569  0154FC  D7AD               	goto	l7888
 14570  0154FE  0A01               	xorlw	1	; case 3
 14571  015500  B4D8               	btfsc	status,2,c
 14572  015502  D7C3               	goto	l7890
 14573  015504  0A07               	xorlw	7	; case 4
 14574  015506  A4D8               	btfss	status,2,c
 14575  015508  0012               	return	
 14576  01550A  D7D8               	goto	l7892
 14577  01550C                     __end_of_LCD_goto_line:
 14578                           	opt stack 0
 14579                           tblptru	equ	0xFF8
 14580                           tblptrh	equ	0xFF7
 14581                           tblptrl	equ	0xFF6
 14582                           tablat	equ	0xFF5
 14583                           prodh	equ	0xFF4
 14584                           prodl	equ	0xFF3
 14585                           intcon	equ	0xFF2
 14586                           postinc0	equ	0xFEE
 14587                           wreg	equ	0xFE8
 14588                           indf2	equ	0xFDF
 14589                           postinc2	equ	0xFDE
 14590                           fsr2h	equ	0xFDA
 14591                           fsr2l	equ	0xFD9
 14592                           status	equ	0xFD8
 14593                           
 14594 ;; *************** function _LCD_send_command *****************
 14595 ;; Defined at:
 14596 ;;		line 61 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14597 ;; Parameters:    Size  Location     Type
 14598 ;;  D3              1    wreg     unsigned char 
 14599 ;;  D2              1   23[BANK0 ] unsigned char 
 14600 ;;  D1              1   24[BANK0 ] unsigned char 
 14601 ;;  D0              1   25[BANK0 ] unsigned char 
 14602 ;; Auto vars:     Size  Location     Type
 14603 ;;  D3              1   26[BANK0 ] unsigned char 
 14604 ;; Return value:  Size  Location     Type
 14605 ;;		None               void
 14606 ;; Registers used:
 14607 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14608 ;; Tracked objects:
 14609 ;;		On entry : 0/0
 14610 ;;		On exit  : 0/0
 14611 ;;		Unchanged: 0/0
 14612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14613 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14614 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14616 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14617 ;;Total ram usage:        4 bytes
 14618 ;; Hardware stack levels used:    1
 14619 ;; Hardware stack levels required when called:    6
 14620 ;; This function calls:
 14621 ;;		_LCD_enable_pulse
 14622 ;; This function is called by:
 14623 ;;		_LCD_shift_cursor
 14624 ;;		_LCD_goto_line
 14625 ;;		_LCD_write_char
 14626 ;;		_LCD_clear
 14627 ;;		_LCD_cursor
 14628 ;;		_LCD_initialize
 14629 ;;		_LCD_home
 14630 ;;		_LCD_shift
 14631 ;; This function uses a non-reentrant model
 14632 ;;
 14633                           
 14634                           	psect	text36
 14635  015BAA                     __ptext36:
 14636                           	opt stack 0
 14637  015BAA                     _LCD_send_command:
 14638                           	opt stack 21
 14639                           
 14640                           ;incstack = 0
 14641                           ;LCD_send_command@D3 stored from wreg
 14642  015BAA  0100               	movlb	0	; () banked
 14643  015BAC  6F7A               	movwf	LCD_send_command@D3& (0+255),b
 14644                           
 14645                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 14646  015BAE  0100               	movlb	0	; () banked
 14647  015BB0  B179               	btfsc	LCD_send_command@D0& (0+255),0,b
 14648  015BB2  D002               	bra	u9685
 14649  015BB4  948B               	bcf	3979,2,c	;volatile
 14650  015BB6  D001               	bra	u9686
 14651  015BB8                     u9685:
 14652  015BB8  848B               	bsf	3979,2,c	;volatile
 14653  015BBA                     u9686:
 14654                           
 14655                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 14656  015BBA  0100               	movlb	0	; () banked
 14657  015BBC  B178               	btfsc	LCD_send_command@D1& (0+255),0,b
 14658  015BBE  D002               	bra	u9695
 14659  015BC0  968B               	bcf	3979,3,c	;volatile
 14660  015BC2  D001               	bra	u9696
 14661  015BC4                     u9695:
 14662  015BC4  868B               	bsf	3979,3,c	;volatile
 14663  015BC6                     u9696:
 14664                           
 14665                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 14666  015BC6  0100               	movlb	0	; () banked
 14667  015BC8  B177               	btfsc	LCD_send_command@D2& (0+255),0,b
 14668  015BCA  D002               	bra	u9705
 14669  015BCC  908C               	bcf	3980,0,c	;volatile
 14670  015BCE  D001               	bra	u9706
 14671  015BD0                     u9705:
 14672  015BD0  808C               	bsf	3980,0,c	;volatile
 14673  015BD2                     u9706:
 14674                           
 14675                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 14676  015BD2  0100               	movlb	0	; () banked
 14677  015BD4  B17A               	btfsc	LCD_send_command@D3& (0+255),0,b
 14678  015BD6  D002               	bra	u9715
 14679  015BD8  928C               	bcf	3980,1,c	;volatile
 14680  015BDA  D001               	bra	u9716
 14681  015BDC                     u9715:
 14682  015BDC  828C               	bsf	3980,1,c	;volatile
 14683  015BDE                     u9716:
 14684                           
 14685                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 14686  015BDE  ECCC  F0AE         	call	_LCD_enable_pulse	;wreg free
 14687  015BE2  0012               	return		;funcret
 14688  015BE4                     __end_of_LCD_send_command:
 14689                           	opt stack 0
 14690                           tblptru	equ	0xFF8
 14691                           tblptrh	equ	0xFF7
 14692                           tblptrl	equ	0xFF6
 14693                           tablat	equ	0xFF5
 14694                           prodh	equ	0xFF4
 14695                           prodl	equ	0xFF3
 14696                           intcon	equ	0xFF2
 14697                           postinc0	equ	0xFEE
 14698                           wreg	equ	0xFE8
 14699                           indf2	equ	0xFDF
 14700                           postinc2	equ	0xFDE
 14701                           fsr2h	equ	0xFDA
 14702                           fsr2l	equ	0xFD9
 14703                           status	equ	0xFD8
 14704                           
 14705 ;; *************** function _LCD_enable_pulse *****************
 14706 ;; Defined at:
 14707 ;;		line 49 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14708 ;; Parameters:    Size  Location     Type
 14709 ;;		None
 14710 ;; Auto vars:     Size  Location     Type
 14711 ;;		None
 14712 ;; Return value:  Size  Location     Type
 14713 ;;		None               void
 14714 ;; Registers used:
 14715 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14716 ;; Tracked objects:
 14717 ;;		On entry : 0/0
 14718 ;;		On exit  : 0/0
 14719 ;;		Unchanged: 0/0
 14720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14725 ;;Total ram usage:        0 bytes
 14726 ;; Hardware stack levels used:    1
 14727 ;; Hardware stack levels required when called:    5
 14728 ;; This function calls:
 14729 ;;		_delay_ms
 14730 ;; This function is called by:
 14731 ;;		_LCD_send_command
 14732 ;; This function uses a non-reentrant model
 14733 ;;
 14734                           
 14735                           	psect	text37
 14736  015D98                     __ptext37:
 14737                           	opt stack 0
 14738  015D98                     _LCD_enable_pulse:
 14739                           	opt stack 21
 14740                           
 14741                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 14742                           
 14743                           ;incstack = 0
 14744  015D98  828B               	bsf	3979,1,c	;volatile
 14745                           
 14746                           ;src\LCD_44780.c: 52: delay_ms (1);
 14747  015D9A  0E00               	movlw	0
 14748  015D9C  0100               	movlb	0	; () banked
 14749  015D9E  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14750  015DA0  0E01               	movlw	1
 14751  015DA2  6F75               	movwf	delay_ms@value_ms& (0+255),b
 14752  015DA4  ECF2  F0AD         	call	_delay_ms	;wreg free
 14753                           
 14754                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 14755  015DA8  928B               	bcf	3979,1,c	;volatile
 14756                           
 14757                           ;src\LCD_44780.c: 54: delay_ms (1);
 14758  015DAA  0E00               	movlw	0
 14759  015DAC  0100               	movlb	0	; () banked
 14760  015DAE  6F76               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14761  015DB0  0E01               	movlw	1
 14762  015DB2  6F75               	movwf	delay_ms@value_ms& (0+255),b
 14763  015DB4  ECF2  F0AD         	call	_delay_ms	;wreg free
 14764  015DB8  0012               	return		;funcret
 14765  015DBA                     __end_of_LCD_enable_pulse:
 14766                           	opt stack 0
 14767                           tblptru	equ	0xFF8
 14768                           tblptrh	equ	0xFF7
 14769                           tblptrl	equ	0xFF6
 14770                           tablat	equ	0xFF5
 14771                           prodh	equ	0xFF4
 14772                           prodl	equ	0xFF3
 14773                           intcon	equ	0xFF2
 14774                           postinc0	equ	0xFEE
 14775                           wreg	equ	0xFE8
 14776                           indf2	equ	0xFDF
 14777                           postinc2	equ	0xFDE
 14778                           fsr2h	equ	0xFDA
 14779                           fsr2l	equ	0xFD9
 14780                           status	equ	0xFD8
 14781                           
 14782 ;; *************** function _delay_ms *****************
 14783 ;; Defined at:
 14784 ;;		line 61 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 14785 ;; Parameters:    Size  Location     Type
 14786 ;;  value_ms        2   21[BANK0 ] unsigned int 
 14787 ;; Auto vars:     Size  Location     Type
 14788 ;;		None
 14789 ;; Return value:  Size  Location     Type
 14790 ;;		None               void
 14791 ;; Registers used:
 14792 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14793 ;; Tracked objects:
 14794 ;;		On entry : 0/0
 14795 ;;		On exit  : 0/0
 14796 ;;		Unchanged: 0/0
 14797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14798 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14801 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14802 ;;Total ram usage:        2 bytes
 14803 ;; Hardware stack levels used:    1
 14804 ;; Hardware stack levels required when called:    4
 14805 ;; This function calls:
 14806 ;;		___wmul
 14807 ;; This function is called by:
 14808 ;;		_LCD_enable_pulse
 14809 ;;		_LCD_initialize
 14810 ;;		_main
 14811 ;;		_board_initialization
 14812 ;;		_delay_s
 14813 ;; This function uses a non-reentrant model
 14814 ;;
 14815                           
 14816                           	psect	text38
 14817  015BE4                     __ptext38:
 14818                           	opt stack 0
 14819  015BE4                     _delay_ms:
 14820                           	opt stack 26
 14821                           
 14822                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 14823                           
 14824                           ;incstack = 0
 14825  015BE4  C0EB  F06F         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 14826  015BE8  0100               	movlb	0	; () banked
 14827  015BEA  6B70               	clrf	(___wmul@multiplier+1)& (0+255),b
 14828  015BEC  C075  F071         	movff	delay_ms@value_ms,___wmul@multiplicand
 14829  015BF0  C076  F072         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 14830  015BF4  EC2B  F0AE         	call	___wmul	;wreg free
 14831  015BF8  C06F  F0DF         	movff	?___wmul,_clock_counter_reference	;volatile
 14832  015BFC  C070  F0E0         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 14833                           
 14834                           ;src\delay.c: 75: while (clock_counter_reference) {
 14835  015C00  D007               	goto	l581
 14836  015C02                     l7448:
 14837                           
 14838                           ;src\delay.c: 85: _delay(240);
 14839  015C02  0E50               	movlw	80
 14840  015C04                     u12497:
 14841  015C04  2EE8               	decfsz	wreg,f,c
 14842  015C06  D7FE               	goto	u12497
 14843                           
 14844                           ;src\delay.c: 88: clock_counter_reference--;
 14845  015C08  0100               	movlb	0	; () banked
 14846  015C0A  07DF               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 14847  015C0C  A0D8               	btfss	status,0,c
 14848  015C0E  07E0               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 14849  015C10                     l581:
 14850  015C10  0100               	movlb	0	; () banked
 14851  015C12  51DF               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 14852  015C14  0100               	movlb	0	; () banked
 14853  015C16  11E0               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 14854  015C18  B4D8               	btfsc	status,2,c
 14855  015C1A  0012               	return	
 14856  015C1C  D7F2               	goto	l7448
 14857  015C1E                     __end_of_delay_ms:
 14858                           	opt stack 0
 14859                           tblptru	equ	0xFF8
 14860                           tblptrh	equ	0xFF7
 14861                           tblptrl	equ	0xFF6
 14862                           tablat	equ	0xFF5
 14863                           prodh	equ	0xFF4
 14864                           prodl	equ	0xFF3
 14865                           intcon	equ	0xFF2
 14866                           postinc0	equ	0xFEE
 14867                           wreg	equ	0xFE8
 14868                           indf2	equ	0xFDF
 14869                           postinc2	equ	0xFDE
 14870                           fsr2h	equ	0xFDA
 14871                           fsr2l	equ	0xFD9
 14872                           status	equ	0xFD8
 14873                           
 14874 ;; *************** function ___wmul *****************
 14875 ;; Defined at:
 14876 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 14877 ;; Parameters:    Size  Location     Type
 14878 ;;  multiplier      2   15[BANK0 ] unsigned int 
 14879 ;;  multiplicand    2   17[BANK0 ] unsigned int 
 14880 ;; Auto vars:     Size  Location     Type
 14881 ;;  product         2   19[BANK0 ] unsigned int 
 14882 ;; Return value:  Size  Location     Type
 14883 ;;                  2   15[BANK0 ] unsigned int 
 14884 ;; Registers used:
 14885 ;;		wreg, status,2, status,0, prodl, prodh
 14886 ;; Tracked objects:
 14887 ;;		On entry : 0/0
 14888 ;;		On exit  : 0/0
 14889 ;;		Unchanged: 0/0
 14890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14891 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14892 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14894 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14895 ;;Total ram usage:        6 bytes
 14896 ;; Hardware stack levels used:    1
 14897 ;; Hardware stack levels required when called:    3
 14898 ;; This function calls:
 14899 ;;		Nothing
 14900 ;; This function is called by:
 14901 ;;		_delay_ms
 14902 ;;		_sprintf
 14903 ;; This function uses a non-reentrant model
 14904 ;;
 14905                           
 14906                           	psect	text39
 14907  015C56                     __ptext39:
 14908                           	opt stack 0
 14909  015C56                     ___wmul:
 14910                           	opt stack 26
 14911                           
 14912                           ; BSR set to: 0
 14913                           ;incstack = 0
 14914  015C56  0100               	movlb	0	; () banked
 14915  015C58  516F               	movf	___wmul@multiplier& (0+255),w,b
 14916  015C5A  0100               	movlb	0	; () banked
 14917  015C5C  0371               	mulwf	___wmul@multiplicand& (0+255),b
 14918  015C5E  CFF3 F073          	movff	prodl,___wmul@product
 14919  015C62  CFF4 F074          	movff	prodh,___wmul@product+1
 14920  015C66  0100               	movlb	0	; () banked
 14921  015C68  516F               	movf	___wmul@multiplier& (0+255),w,b
 14922  015C6A  0100               	movlb	0	; () banked
 14923  015C6C  0372               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 14924  015C6E  50F3               	movf	prodl,w,c
 14925  015C70  0100               	movlb	0	; () banked
 14926  015C72  2774               	addwf	(___wmul@product+1)& (0+255),f,b
 14927  015C74  0100               	movlb	0	; () banked
 14928  015C76  5170               	movf	(___wmul@multiplier+1)& (0+255),w,b
 14929  015C78  0100               	movlb	0	; () banked
 14930  015C7A  0371               	mulwf	___wmul@multiplicand& (0+255),b
 14931  015C7C  50F3               	movf	prodl,w,c
 14932  015C7E  0100               	movlb	0	; () banked
 14933  015C80  2774               	addwf	(___wmul@product+1)& (0+255),f,b
 14934                           
 14935                           ; BSR set to: 0
 14936  015C82  C073  F06F         	movff	___wmul@product,?___wmul
 14937  015C86  C074  F070         	movff	___wmul@product+1,?___wmul+1
 14938  015C8A  0012               	return	
 14939  015C8C                     __end_of___wmul:
 14940                           	opt stack 0
 14941                           tblptru	equ	0xFF8
 14942                           tblptrh	equ	0xFF7
 14943                           tblptrl	equ	0xFF6
 14944                           tablat	equ	0xFF5
 14945                           prodh	equ	0xFF4
 14946                           prodl	equ	0xFF3
 14947                           intcon	equ	0xFF2
 14948                           postinc0	equ	0xFEE
 14949                           wreg	equ	0xFE8
 14950                           indf2	equ	0xFDF
 14951                           postinc2	equ	0xFDE
 14952                           fsr2h	equ	0xFDA
 14953                           fsr2l	equ	0xFD9
 14954                           status	equ	0xFD8
 14955                           
 14956 ;; *************** function _Joystick_Polling *****************
 14957 ;; Defined at:
 14958 ;;		line 422 in file "RemoteCan.c"
 14959 ;; Parameters:    Size  Location     Type
 14960 ;;		None
 14961 ;; Auto vars:     Size  Location     Type
 14962 ;;  i               1   16[BANK0 ] unsigned char 
 14963 ;; Return value:  Size  Location     Type
 14964 ;;		None               void
 14965 ;; Registers used:
 14966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14967 ;; Tracked objects:
 14968 ;;		On entry : 0/0
 14969 ;;		On exit  : 0/0
 14970 ;;		Unchanged: 0/0
 14971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14973 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14974 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14975 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14976 ;;Total ram usage:        2 bytes
 14977 ;; Hardware stack levels used:    1
 14978 ;; Hardware stack levels required when called:    3
 14979 ;; This function calls:
 14980 ;;		Nothing
 14981 ;; This function is called by:
 14982 ;;		_main
 14983 ;; This function uses a non-reentrant model
 14984 ;;
 14985                           
 14986                           	psect	text40
 14987  015A7E                     __ptext40:
 14988                           	opt stack 0
 14989  015A7E                     _Joystick_Polling:
 14990                           	opt stack 27
 14991                           
 14992                           ;RemoteCan.c: 423: for (unsigned char i = 0; i < 2; i++) {
 14993                           
 14994                           ; BSR set to: 0
 14995                           ;incstack = 0
 14996  015A7E  0E00               	movlw	0
 14997  015A80  0100               	movlb	0	; () banked
 14998  015A82  6F70               	movwf	Joystick_Polling@i& (0+255),b
 14999  015A84                     l6724:
 15000                           
 15001                           ; BSR set to: 0
 15002  015A84  0E01               	movlw	1
 15003  015A86  0100               	movlb	0	; () banked
 15004  015A88  6570               	cpfsgt	Joystick_Polling@i& (0+255),b
 15005  015A8A  D001               	goto	l870
 15006  015A8C  0012               	return	
 15007  015A8E                     l870:
 15008                           
 15009                           ; BSR set to: 0
 15010                           ;RemoteCan.c: 424: ADCON0bits.GO = 1;
 15011  015A8E  82C2               	bsf	4034,1,c	;volatile
 15012  015A90                     l872:
 15013  015A90  B2C2               	btfsc	4034,1,c	;volatile
 15014  015A92  D7FE               	goto	l872
 15015                           
 15016                           ;RemoteCan.c: 426: JoystickValues[i] = ADRESH;
 15017  015A94  0100               	movlb	0	; () banked
 15018  015A96  5170               	movf	Joystick_Polling@i& (0+255),w,b
 15019  015A98  0D01               	mullw	1
 15020  015A9A  0EDB               	movlw	low _JoystickValues
 15021  015A9C  24F3               	addwf	prodl,w,c
 15022  015A9E  6ED9               	movwf	fsr2l,c
 15023  015AA0  0E00               	movlw	high _JoystickValues
 15024  015AA2  20F4               	addwfc	prodh,w,c
 15025  015AA4  6EDA               	movwf	fsr2h,c
 15026  015AA6  CFC4 FFDF          	movff	4036,indf2	;volatile
 15027                           
 15028                           ; BSR set to: 0
 15029                           ;RemoteCan.c: 427: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 15030  015AAA  A4C2               	btfss	4034,2,c	;volatile
 15031  015AAC  D002               	goto	u8560
 15032  015AAE  0E01               	movlw	1
 15033  015AB0  D001               	goto	u8566
 15034  015AB2                     u8560:
 15035  015AB2  0E00               	movlw	0
 15036  015AB4                     u8566:
 15037  015AB4  0AFF               	xorlw	255
 15038  015AB6  0100               	movlb	0	; () banked
 15039  015AB8  6F6F               	movwf	??_Joystick_Polling& (0+255),b
 15040  015ABA  0100               	movlb	0	; () banked
 15041  015ABC  476F               	rlncf	??_Joystick_Polling& (0+255),f,b
 15042  015ABE  476F               	rlncf	??_Joystick_Polling& (0+255),f,b
 15043  015AC0  50C2               	movf	4034,w,c	;volatile
 15044  015AC2  0100               	movlb	0	; () banked
 15045  015AC4  196F               	xorwf	??_Joystick_Polling& (0+255),w,b
 15046  015AC6  0BFB               	andlw	-5
 15047  015AC8  196F               	xorwf	??_Joystick_Polling& (0+255),w,b
 15048  015ACA  6EC2               	movwf	4034,c	;volatile
 15049                           
 15050                           ; BSR set to: 0
 15051  015ACC  0100               	movlb	0	; () banked
 15052  015ACE  2B70               	incf	Joystick_Polling@i& (0+255),f,b
 15053  015AD0  D7D9               	goto	l6724
 15054  015AD2                     __end_of_Joystick_Polling:
 15055                           	opt stack 0
 15056                           tblptru	equ	0xFF8
 15057                           tblptrh	equ	0xFF7
 15058                           tblptrl	equ	0xFF6
 15059                           tablat	equ	0xFF5
 15060                           prodh	equ	0xFF4
 15061                           prodl	equ	0xFF3
 15062                           intcon	equ	0xFF2
 15063                           postinc0	equ	0xFEE
 15064                           wreg	equ	0xFE8
 15065                           indf2	equ	0xFDF
 15066                           postinc2	equ	0xFDE
 15067                           fsr2h	equ	0xFDA
 15068                           fsr2l	equ	0xFD9
 15069                           status	equ	0xFD8
 15070                           
 15071 ;; *************** function _F2_Button_Polling *****************
 15072 ;; Defined at:
 15073 ;;		line 412 in file "RemoteCan.c"
 15074 ;; Parameters:    Size  Location     Type
 15075 ;;		None
 15076 ;; Auto vars:     Size  Location     Type
 15077 ;;		None
 15078 ;; Return value:  Size  Location     Type
 15079 ;;		None               void
 15080 ;; Registers used:
 15081 ;;		None
 15082 ;; Tracked objects:
 15083 ;;		On entry : 0/0
 15084 ;;		On exit  : 0/0
 15085 ;;		Unchanged: 0/0
 15086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15091 ;;Total ram usage:        0 bytes
 15092 ;; Hardware stack levels used:    1
 15093 ;; Hardware stack levels required when called:    3
 15094 ;; This function calls:
 15095 ;;		Nothing
 15096 ;; This function is called by:
 15097 ;;		_main
 15098 ;; This function uses a non-reentrant model
 15099 ;;
 15100                           
 15101                           	psect	text41
 15102  015E10                     __ptext41:
 15103                           	opt stack 0
 15104  015E10                     _F2_Button_Polling:
 15105                           	opt stack 27
 15106                           
 15107                           ;RemoteCan.c: 413: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 15108                           
 15109                           ; BSR set to: 0
 15110                           ;incstack = 0
 15111  015E10  A281               	btfss	3969,1,c	;volatile
 15112  015E12  D002               	goto	l865
 15113  015E14  B64D               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 15114  015E16  0012               	return	
 15115  015E18                     l865:
 15116                           
 15117                           ;RemoteCan.c: 414: wait_low_3 = 0;
 15118  015E18  964D               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 15119                           
 15120                           ;RemoteCan.c: 415: if (PORTBbits.RB1 == 1) {
 15121  015E1A  A281               	btfss	3969,1,c	;volatile
 15122  015E1C  0012               	return	
 15123                           
 15124                           ;RemoteCan.c: 416: F2_switch = ~F2_switch;
 15125  015E1E  B44C               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 15126  015E20  D002               	goto	u8490
 15127  015E22  844C               	bsf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 15128  015E24  D001               	goto	u8505
 15129  015E26                     u8490:
 15130  015E26  944C               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 15131  015E28                     u8505:
 15132                           
 15133                           ;RemoteCan.c: 417: wait_low_3 = 1;
 15134  015E28  864D               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 15135  015E2A  0012               	return	
 15136  015E2C                     __end_of_F2_Button_Polling:
 15137                           	opt stack 0
 15138                           tblptru	equ	0xFF8
 15139                           tblptrh	equ	0xFF7
 15140                           tblptrl	equ	0xFF6
 15141                           tablat	equ	0xFF5
 15142                           prodh	equ	0xFF4
 15143                           prodl	equ	0xFF3
 15144                           intcon	equ	0xFF2
 15145                           postinc0	equ	0xFEE
 15146                           wreg	equ	0xFE8
 15147                           indf2	equ	0xFDF
 15148                           postinc2	equ	0xFDE
 15149                           fsr2h	equ	0xFDA
 15150                           fsr2l	equ	0xFD9
 15151                           status	equ	0xFD8
 15152                           
 15153 ;; *************** function _F1_Button_Polling *****************
 15154 ;; Defined at:
 15155 ;;		line 402 in file "RemoteCan.c"
 15156 ;; Parameters:    Size  Location     Type
 15157 ;;		None
 15158 ;; Auto vars:     Size  Location     Type
 15159 ;;		None
 15160 ;; Return value:  Size  Location     Type
 15161 ;;		None               void
 15162 ;; Registers used:
 15163 ;;		None
 15164 ;; Tracked objects:
 15165 ;;		On entry : 0/0
 15166 ;;		On exit  : 0/0
 15167 ;;		Unchanged: 0/0
 15168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15173 ;;Total ram usage:        0 bytes
 15174 ;; Hardware stack levels used:    1
 15175 ;; Hardware stack levels required when called:    3
 15176 ;; This function calls:
 15177 ;;		Nothing
 15178 ;; This function is called by:
 15179 ;;		_main
 15180 ;; This function uses a non-reentrant model
 15181 ;;
 15182                           
 15183                           	psect	text42
 15184  015E2C                     __ptext42:
 15185                           	opt stack 0
 15186  015E2C                     _F1_Button_Polling:
 15187                           	opt stack 27
 15188                           
 15189                           ;RemoteCan.c: 403: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 15190                           
 15191                           ;incstack = 0
 15192  015E2C  A881               	btfss	3969,4,c	;volatile
 15193  015E2E  D002               	goto	l858
 15194  015E30  B44D               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 15195  015E32  0012               	return	
 15196  015E34                     l858:
 15197                           
 15198                           ;RemoteCan.c: 404: wait_low_2 = 0;
 15199  015E34  944D               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 15200                           
 15201                           ;RemoteCan.c: 405: if (PORTBbits.RB4 == 1) {
 15202  015E36  A881               	btfss	3969,4,c	;volatile
 15203  015E38  0012               	return	
 15204                           
 15205                           ;RemoteCan.c: 406: F1_switch = ~F1_switch;
 15206  015E3A  B24C               	btfsc	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 15207  015E3C  D002               	goto	u8440
 15208  015E3E  824C               	bsf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 15209  015E40  D001               	goto	u8455
 15210  015E42                     u8440:
 15211  015E42  924C               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 15212  015E44                     u8455:
 15213                           
 15214                           ;RemoteCan.c: 407: wait_low_2 = 1;
 15215  015E44  844D               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 15216  015E46  0012               	return	
 15217  015E48                     __end_of_F1_Button_Polling:
 15218                           	opt stack 0
 15219                           tblptru	equ	0xFF8
 15220                           tblptrh	equ	0xFF7
 15221                           tblptrl	equ	0xFF6
 15222                           tablat	equ	0xFF5
 15223                           prodh	equ	0xFF4
 15224                           prodl	equ	0xFF3
 15225                           intcon	equ	0xFF2
 15226                           postinc0	equ	0xFEE
 15227                           wreg	equ	0xFE8
 15228                           indf2	equ	0xFDF
 15229                           postinc2	equ	0xFDE
 15230                           fsr2h	equ	0xFDA
 15231                           fsr2l	equ	0xFD9
 15232                           status	equ	0xFD8
 15233                           
 15234 ;; *************** function _CAN_interpreter *****************
 15235 ;; Defined at:
 15236 ;;		line 354 in file "RemoteCan.c"
 15237 ;; Parameters:    Size  Location     Type
 15238 ;;		None
 15239 ;; Auto vars:     Size  Location     Type
 15240 ;;		None
 15241 ;; Return value:  Size  Location     Type
 15242 ;;		None               void
 15243 ;; Registers used:
 15244 ;;		wreg, status,2, status,0
 15245 ;; Tracked objects:
 15246 ;;		On entry : 0/0
 15247 ;;		On exit  : 0/0
 15248 ;;		Unchanged: 0/0
 15249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15252 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15253 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15254 ;;Total ram usage:        4 bytes
 15255 ;; Hardware stack levels used:    1
 15256 ;; Hardware stack levels required when called:    3
 15257 ;; This function calls:
 15258 ;;		Nothing
 15259 ;; This function is called by:
 15260 ;;		_main
 15261 ;; This function uses a non-reentrant model
 15262 ;;
 15263                           
 15264                           	psect	text43
 15265  015802                     __ptext43:
 15266                           	opt stack 0
 15267  015802                     _CAN_interpreter:
 15268                           	opt stack 27
 15269                           
 15270                           ;RemoteCan.c: 355: if (id == 0b00000000010) {
 15271                           
 15272                           ;incstack = 0
 15273  015802  0E02               	movlw	2
 15274  015804  180C               	xorwf	_id,w,c	;volatile
 15275  015806  100D               	iorwf	_id+1,w,c	;volatile
 15276  015808  100E               	iorwf	_id+2,w,c	;volatile
 15277  01580A  100F               	iorwf	_id+3,w,c	;volatile
 15278  01580C  A4D8               	btfss	status,2,c
 15279  01580E  D015               	goto	l6752
 15280                           
 15281                           ;RemoteCan.c: 356: if (RTR_Flag == 1) {
 15282  015810  A84C               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 15283  015812  D00C               	goto	l6742
 15284                           
 15285                           ;RemoteCan.c: 357: pr_time_4 = time_counter;
 15286  015814  C020  F014         	movff	_time_counter,_pr_time_4	;volatile
 15287  015818  C021  F015         	movff	_time_counter+1,_pr_time_4+1	;volatile
 15288  01581C  C022  F016         	movff	_time_counter+2,_pr_time_4+2	;volatile
 15289  015820  C023  F017         	movff	_time_counter+3,_pr_time_4+3	;volatile
 15290                           
 15291                           ;RemoteCan.c: 361: MotoreFlag = 1;
 15292  015824  864C               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 15293                           
 15294                           ;RemoteCan.c: 362: AbsFlag = 0;
 15295  015826  904C               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 15296                           
 15297                           ;RemoteCan.c: 363: SterzoFlag = 0;
 15298  015828  9A4C               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 15299                           
 15300                           ;RemoteCan.c: 364: } else {
 15301  01582A  D007               	goto	l6752
 15302  01582C                     l6742:
 15303                           
 15304                           ;RemoteCan.c: 365: if (data[0] == 0x01) {
 15305  01582C  042A               	decf	_data,w,c
 15306  01582E  B4D8               	btfsc	status,2,c
 15307                           
 15308                           ;RemoteCan.c: 366: AbsFlag = 1;
 15309  015830  804C               	bsf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 15310                           
 15311                           ;RemoteCan.c: 368: }
 15312                           ;RemoteCan.c: 369: if (data[0] == 0x02) {
 15313  015832  0E02               	movlw	2
 15314  015834  182A               	xorwf	_data,w,c
 15315  015836  B4D8               	btfsc	status,2,c
 15316                           
 15317                           ;RemoteCan.c: 370: SterzoFlag = 1;
 15318  015838  8A4C               	bsf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 15319  01583A                     l6752:
 15320                           
 15321                           ;RemoteCan.c: 376: }
 15322                           ;RemoteCan.c: 377: }
 15323                           ;RemoteCan.c: 379: if ((id == 0b00000000110)&&(RTR_Flag == 0)) {
 15324  01583A  0E06               	movlw	6
 15325  01583C  180C               	xorwf	_id,w,c	;volatile
 15326  01583E  100D               	iorwf	_id+1,w,c	;volatile
 15327  015840  100E               	iorwf	_id+2,w,c	;volatile
 15328  015842  100F               	iorwf	_id+3,w,c	;volatile
 15329  015844  B4D8               	btfsc	status,2,c
 15330  015846  B84C               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 15331  015848  D027               	goto	l6764
 15332                           
 15333                           ;RemoteCan.c: 380: left_speed = data_speed_rx[1];
 15334  01584A  C002  F024         	movff	_data_speed_rx+1,_left_speed
 15335  01584E  6A25               	clrf	_left_speed+1,c
 15336                           
 15337                           ;RemoteCan.c: 381: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 15338  015850  5024               	movf	_left_speed,w,c
 15339  015852  0100               	movlb	0	; () banked
 15340  015854  6F6F               	movwf	??_CAN_interpreter& (0+255),b
 15341  015856  5001               	movf	_data_speed_rx,w,c
 15342  015858  6E24               	movwf	_left_speed,c
 15343  01585A  C06F  F025         	movff	??_CAN_interpreter,_left_speed+1
 15344                           
 15345                           ; BSR set to: 0
 15346                           ;RemoteCan.c: 382: right_speed = data_speed_rx[3];
 15347  01585E  C004  F026         	movff	_data_speed_rx+3,_right_speed
 15348  015862  6A27               	clrf	_right_speed+1,c
 15349                           
 15350                           ;RemoteCan.c: 383: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 15351  015864  5026               	movf	_right_speed,w,c
 15352  015866  0100               	movlb	0	; () banked
 15353  015868  6F6F               	movwf	??_CAN_interpreter& (0+255),b
 15354  01586A  5003               	movf	_data_speed_rx+2,w,c
 15355  01586C  6E26               	movwf	_right_speed,c
 15356  01586E  C06F  F027         	movff	??_CAN_interpreter,_right_speed+1
 15357                           
 15358                           ; BSR set to: 0
 15359                           ;RemoteCan.c: 384: actual_speed = (right_speed + left_speed) / 2;
 15360  015872  5024               	movf	_left_speed,w,c
 15361  015874  2426               	addwf	_right_speed,w,c
 15362  015876  0100               	movlb	0	; () banked
 15363  015878  6F6F               	movwf	??_CAN_interpreter& (0+255),b
 15364  01587A  5025               	movf	_left_speed+1,w,c
 15365  01587C  2027               	addwfc	_right_speed+1,w,c
 15366  01587E  0100               	movlb	0	; () banked
 15367  015880  6F70               	movwf	(??_CAN_interpreter+1)& (0+255),b
 15368  015882  90D8               	bcf	status,0,c
 15369  015884  0100               	movlb	0	; () banked
 15370  015886  3170               	rrcf	(??_CAN_interpreter+1)& (0+255),w,b
 15371  015888  0100               	movlb	0	; () banked
 15372  01588A  6F71               	movwf	(??_CAN_interpreter+2)& (0+255),b
 15373  01588C  0100               	movlb	0	; () banked
 15374  01588E  316F               	rrcf	??_CAN_interpreter& (0+255),w,b
 15375  015890  0100               	movlb	0	; () banked
 15376  015892  6FDD               	movwf	_actual_speed& (0+255),b
 15377  015894  C071  F0DE         	movff	??_CAN_interpreter+2,_actual_speed+1
 15378  015898                     l6764:
 15379                           
 15380                           ;RemoteCan.c: 385: }
 15381                           ;RemoteCan.c: 387: if (id == 0b00000001001) {
 15382  015898  0E09               	movlw	9
 15383  01589A  180C               	xorwf	_id,w,c	;volatile
 15384  01589C  100D               	iorwf	_id+1,w,c	;volatile
 15385  01589E  100E               	iorwf	_id+2,w,c	;volatile
 15386  0158A0  100F               	iorwf	_id+3,w,c	;volatile
 15387  0158A2  A4D8               	btfss	status,2,c
 15388  0158A4  0012               	return	
 15389                           
 15390                           ;RemoteCan.c: 388: battery = data[0];
 15391  0158A6  C02A  F028         	movff	_data,_battery	;volatile
 15392  0158AA  0012               	return	
 15393  0158AC                     __end_of_CAN_interpreter:
 15394                           	opt stack 0
 15395                           tblptru	equ	0xFF8
 15396                           tblptrh	equ	0xFF7
 15397                           tblptrl	equ	0xFF6
 15398                           tablat	equ	0xFF5
 15399                           prodh	equ	0xFF4
 15400                           prodl	equ	0xFF3
 15401                           intcon	equ	0xFF2
 15402                           postinc0	equ	0xFEE
 15403                           wreg	equ	0xFE8
 15404                           indf2	equ	0xFDF
 15405                           postinc2	equ	0xFDE
 15406                           fsr2h	equ	0xFDA
 15407                           fsr2l	equ	0xFD9
 15408                           status	equ	0xFD8
 15409                           
 15410 ;; *************** function _CAN_Send *****************
 15411 ;; Defined at:
 15412 ;;		line 285 in file "RemoteCan.c"
 15413 ;; Parameters:    Size  Location     Type
 15414 ;;		None
 15415 ;; Auto vars:     Size  Location     Type
 15416 ;;		None
 15417 ;; Return value:  Size  Location     Type
 15418 ;;		None               void
 15419 ;; Registers used:
 15420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15421 ;; Tracked objects:
 15422 ;;		On entry : 0/0
 15423 ;;		On exit  : 0/0
 15424 ;;		Unchanged: 0/0
 15425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15430 ;;Total ram usage:        0 bytes
 15431 ;; Hardware stack levels used:    1
 15432 ;; Hardware stack levels required when called:    4
 15433 ;; This function calls:
 15434 ;;		_CANisTxReady
 15435 ;;		_CANsendMessage
 15436 ;; This function is called by:
 15437 ;;		_main
 15438 ;; This function uses a non-reentrant model
 15439 ;;
 15440                           
 15441                           	psect	text44
 15442  015748                     __ptext44:
 15443                           	opt stack 0
 15444  015748                     _CAN_Send:
 15445                           	opt stack 26
 15446  015748                     l6704:
 15447  015748  ECBA  F0AE         	call	_CANisTxReady	;wreg free
 15448  01574C  06E8               	decf	wreg,f,c
 15449  01574E  A4D8               	btfss	status,2,c
 15450  015750  D7FB               	goto	l6704
 15451                           
 15452                           ;RemoteCan.c: 287: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 15453  015752  0E05               	movlw	5
 15454  015754  0100               	movlb	0	; () banked
 15455  015756  6F6F               	movwf	CANsendMessage@identifier& (0+255),b
 15456  015758  0E00               	movlw	0
 15457  01575A  6F70               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15458  01575C  0E00               	movlw	0
 15459  01575E  6F71               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15460  015760  0E00               	movlw	0
 15461  015762  6F72               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15462  015764  0EEA               	movlw	low _data_steering
 15463  015766  0100               	movlb	0	; () banked
 15464  015768  6F73               	movwf	CANsendMessage@data& (0+255),b
 15465  01576A  0E00               	movlw	high _data_steering
 15466  01576C  0100               	movlb	0	; () banked
 15467  01576E  6F74               	movwf	(CANsendMessage@data+1)& (0+255),b
 15468  015770  0E08               	movlw	8
 15469  015772  0100               	movlb	0	; () banked
 15470  015774  6F75               	movwf	CANsendMessage@dataLength& (0+255),b
 15471  015776  0EBC               	movlw	188
 15472  015778  0100               	movlb	0	; () banked
 15473  01577A  6F76               	movwf	CANsendMessage@flags& (0+255),b
 15474  01577C  ECCD  F089         	call	_CANsendMessage	;wreg free
 15475                           
 15476                           ;RemoteCan.c: 288: data_speed[0] = set_speed;
 15477  015780  C0E1  F0E9         	movff	_set_speed,_data_speed	;volatile
 15478                           
 15479                           ;RemoteCan.c: 289: data_speed[1] = (set_speed >> 8);
 15480  015784  0100               	movlb	0	; () banked
 15481  015786  51E2               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 15482  015788  0100               	movlb	0	; () banked
 15483  01578A  6FEA               	movwf	(_data_speed+1)& (0+255),b
 15484                           
 15485                           ; BSR set to: 0
 15486                           ;RemoteCan.c: 290: data_speed[2] = dir;
 15487  01578C  C0E3  F0EB         	movff	_dir,_data_speed+2	;volatile
 15488  015790                     l6714:
 15489  015790  ECBA  F0AE         	call	_CANisTxReady	;wreg free
 15490  015794  06E8               	decf	wreg,f,c
 15491  015796  A4D8               	btfss	status,2,c
 15492  015798  D7FB               	goto	l6714
 15493                           
 15494                           ;RemoteCan.c: 292: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 15495  01579A  0E03               	movlw	3
 15496  01579C  0100               	movlb	0	; () banked
 15497  01579E  6F6F               	movwf	CANsendMessage@identifier& (0+255),b
 15498  0157A0  0E00               	movlw	0
 15499  0157A2  6F70               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15500  0157A4  0E00               	movlw	0
 15501  0157A6  6F71               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15502  0157A8  0E00               	movlw	0
 15503  0157AA  6F72               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15504  0157AC  0EE9               	movlw	low _data_speed
 15505  0157AE  0100               	movlb	0	; () banked
 15506  0157B0  6F73               	movwf	CANsendMessage@data& (0+255),b
 15507  0157B2  0E00               	movlw	high _data_speed
 15508  0157B4  0100               	movlb	0	; () banked
 15509  0157B6  6F74               	movwf	(CANsendMessage@data+1)& (0+255),b
 15510  0157B8  0E08               	movlw	8
 15511  0157BA  0100               	movlb	0	; () banked
 15512  0157BC  6F75               	movwf	CANsendMessage@dataLength& (0+255),b
 15513  0157BE  0EBC               	movlw	188
 15514  0157C0  0100               	movlb	0	; () banked
 15515  0157C2  6F76               	movwf	CANsendMessage@flags& (0+255),b
 15516  0157C4  ECCD  F089         	call	_CANsendMessage	;wreg free
 15517  0157C8                     l6718:
 15518  0157C8  ECBA  F0AE         	call	_CANisTxReady	;wreg free
 15519  0157CC  06E8               	decf	wreg,f,c
 15520  0157CE  A4D8               	btfss	status,2,c
 15521  0157D0  D7FB               	goto	l6718
 15522                           
 15523                           ;RemoteCan.c: 294: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_1);
 15524  0157D2  0E04               	movlw	4
 15525  0157D4  0100               	movlb	0	; () banked
 15526  0157D6  6F6F               	movwf	CANsendMessage@identifier& (0+255),b
 15527  0157D8  0E00               	movlw	0
 15528  0157DA  6F70               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 15529  0157DC  0E00               	movlw	0
 15530  0157DE  6F71               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 15531  0157E0  0E00               	movlw	0
 15532  0157E2  6F72               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 15533  0157E4  0EE8               	movlw	low _data_brake
 15534  0157E6  0100               	movlb	0	; () banked
 15535  0157E8  6F73               	movwf	CANsendMessage@data& (0+255),b
 15536  0157EA  0E00               	movlw	high _data_brake
 15537  0157EC  0100               	movlb	0	; () banked
 15538  0157EE  6F74               	movwf	(CANsendMessage@data+1)& (0+255),b
 15539  0157F0  0E08               	movlw	8
 15540  0157F2  0100               	movlb	0	; () banked
 15541  0157F4  6F75               	movwf	CANsendMessage@dataLength& (0+255),b
 15542  0157F6  0EBD               	movlw	189
 15543  0157F8  0100               	movlb	0	; () banked
 15544  0157FA  6F76               	movwf	CANsendMessage@flags& (0+255),b
 15545  0157FC  ECCD  F089         	call	_CANsendMessage	;wreg free
 15546  015800  0012               	return		;funcret
 15547  015802                     __end_of_CAN_Send:
 15548                           	opt stack 0
 15549                           tblptru	equ	0xFF8
 15550                           tblptrh	equ	0xFF7
 15551                           tblptrl	equ	0xFF6
 15552                           tablat	equ	0xFF5
 15553                           prodh	equ	0xFF4
 15554                           prodl	equ	0xFF3
 15555                           intcon	equ	0xFF2
 15556                           postinc0	equ	0xFEE
 15557                           wreg	equ	0xFE8
 15558                           indf2	equ	0xFDF
 15559                           postinc2	equ	0xFDE
 15560                           fsr2h	equ	0xFDA
 15561                           fsr2l	equ	0xFD9
 15562                           status	equ	0xFD8
 15563                           
 15564 ;; *************** function _CANsendMessage *****************
 15565 ;; Defined at:
 15566 ;;		line 294 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 15567 ;; Parameters:    Size  Location     Type
 15568 ;;  identifier      4   15[BANK0 ] unsigned long 
 15569 ;;  data            2   19[BANK0 ] PTR unsigned char 
 15570 ;;		 -> data_speed(1), park_assist_state(8), data_brake(1), data_steering(1), 
 15571 ;;		 -> data(1), 
 15572 ;;  dataLength      1   21[BANK0 ] unsigned char 
 15573 ;;  flags           1   22[BANK0 ] enum E16909
 15574 ;; Auto vars:     Size  Location     Type
 15575 ;;  tamp            4   27[BANK0 ] unsigned long 
 15576 ;; Return value:  Size  Location     Type
 15577 ;;		None               void
 15578 ;; Registers used:
 15579 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15580 ;; Tracked objects:
 15581 ;;		On entry : 0/0
 15582 ;;		On exit  : 0/0
 15583 ;;		Unchanged: 0/0
 15584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15585 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15586 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15587 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15588 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15589 ;;Total ram usage:       16 bytes
 15590 ;; Hardware stack levels used:    1
 15591 ;; Hardware stack levels required when called:    3
 15592 ;; This function calls:
 15593 ;;		Nothing
 15594 ;; This function is called by:
 15595 ;;		_main
 15596 ;;		_CAN_Send
 15597 ;;		_LCD_Handler
 15598 ;; This function uses a non-reentrant model
 15599 ;;
 15600                           
 15601                           	psect	text45
 15602  01139A                     __ptext45:
 15603                           	opt stack 0
 15604  01139A                     _CANsendMessage:
 15605                           	opt stack 26
 15606                           
 15607                           ;inc\CANlib.h: 296: unsigned long tamp;
 15608                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 15609                           
 15610                           ;incstack = 0
 15611  01139A  010F               	movlb	15	; () banked
 15612  01139C  B740               	btfsc	64,3,b	;volatile
 15613  01139E  D13F               	goto	l375
 15614                           
 15615                           ; BSR set to: 15
 15616                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 15617  0113A0  C075  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 15618                           
 15619                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 15620  0113A4  0100               	movlb	0	; () banked
 15621  0113A6  AD76               	btfss	CANsendMessage@flags& (0+255),6,b
 15622  0113A8  D003               	goto	l376
 15623                           
 15624                           ; BSR set to: 0
 15625                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 15626  0113AA  010F               	movlb	15	; () banked
 15627  0113AC  8D45               	bsf	69,6,b	;volatile
 15628  0113AE  D002               	goto	l377
 15629  0113B0                     l376:
 15630                           
 15631                           ; BSR set to: 0
 15632                           ;inc\CANlib.h: 302: else
 15633                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 15634  0113B0  010F               	movlb	15	; () banked
 15635  0113B2  9D45               	bcf	69,6,b	;volatile
 15636  0113B4                     l377:
 15637                           
 15638                           ; BSR set to: 15
 15639                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 15640  0113B4  0100               	movlb	0	; () banked
 15641  0113B6  A776               	btfss	CANsendMessage@flags& (0+255),3,b
 15642  0113B8  D079               	goto	l378
 15643                           
 15644                           ; BSR set to: 0
 15645                           ;inc\CANlib.h: 306: {
 15646                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 15647  0113BA  0100               	movlb	0	; () banked
 15648  0113BC  516F               	movf	CANsendMessage@identifier& (0+255),w,b
 15649  0113BE  0100               	movlb	0	; () banked
 15650  0113C0  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 15651  0113C2  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15652  0113C4  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15653  0113C6  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15654                           
 15655                           ; BSR set to: 0
 15656                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 15657  0113C8  C07B  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 15658                           
 15659                           ; BSR set to: 0
 15660                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 15661  0113CC  0E00               	movlw	0
 15662  0113CE  0100               	movlb	0	; () banked
 15663  0113D0  156F               	andwf	CANsendMessage@identifier& (0+255),w,b
 15664  0113D2  0100               	movlb	0	; () banked
 15665  0113D4  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 15666  0113D6  0EFF               	movlw	255
 15667  0113D8  0100               	movlb	0	; () banked
 15668  0113DA  1570               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15669  0113DC  0100               	movlb	0	; () banked
 15670  0113DE  6F7C               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15671  0113E0  0E00               	movlw	0
 15672  0113E2  0100               	movlb	0	; () banked
 15673  0113E4  1571               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15674  0113E6  0100               	movlb	0	; () banked
 15675  0113E8  6F7D               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15676  0113EA  0E00               	movlw	0
 15677  0113EC  0100               	movlb	0	; () banked
 15678  0113EE  1572               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15679  0113F0  0100               	movlb	0	; () banked
 15680  0113F2  6F7E               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15681                           
 15682                           ; BSR set to: 0
 15683                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 15684  0113F4  C07B  F077         	movff	CANsendMessage@tamp,??_CANsendMessage
 15685  0113F8  C07C  F078         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15686  0113FC  C07D  F079         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15687  011400  C07E  F07A         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15688  011404  C078  F077         	movff	??_CANsendMessage+1,??_CANsendMessage
 15689  011408  C079  F078         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 15690  01140C  C07A  F079         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 15691  011410  0100               	movlb	0	; () banked
 15692  011412  6B7A               	clrf	(??_CANsendMessage+3)& (0+255),b
 15693  011414  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 15694  011418  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15695  01141C  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15696  011420  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15697                           
 15698                           ; BSR set to: 0
 15699                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 15700  011424  C07B  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 15701                           
 15702                           ; BSR set to: 0
 15703                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 15704  011428  0E00               	movlw	0
 15705  01142A  010F               	movlb	15	; () banked
 15706  01142C  6F42               	movwf	66,b	;volatile
 15707                           
 15708                           ; BSR set to: 15
 15709                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 15710  01142E  010F               	movlb	15	; () banked
 15711  011430  8742               	bsf	66,3,b	;volatile
 15712                           
 15713                           ; BSR set to: 15
 15714                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 15715  011432  0100               	movlb	0	; () banked
 15716  011434  A171               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 15717  011436  D002               	goto	l379
 15718                           
 15719                           ; BSR set to: 0
 15720                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 15721  011438  010F               	movlb	15	; () banked
 15722  01143A  8142               	bsf	66,0,b	;volatile
 15723  01143C                     l379:
 15724                           
 15725                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 15726  01143C  0100               	movlb	0	; () banked
 15727  01143E  A371               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 15728  011440  D002               	goto	l380
 15729                           
 15730                           ; BSR set to: 0
 15731                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 15732  011442  010F               	movlb	15	; () banked
 15733  011444  8342               	bsf	66,1,b	;volatile
 15734  011446                     l380:
 15735                           
 15736                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 15737  011446  0100               	movlb	0	; () banked
 15738  011448  A571               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 15739  01144A  D002               	goto	l381
 15740                           
 15741                           ; BSR set to: 0
 15742                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 15743  01144C  010F               	movlb	15	; () banked
 15744  01144E  8B42               	bsf	66,5,b	;volatile
 15745  011450                     l381:
 15746                           
 15747                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 15748  011450  0100               	movlb	0	; () banked
 15749  011452  A771               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 15750  011454  D002               	goto	l382
 15751                           
 15752                           ; BSR set to: 0
 15753                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 15754  011456  010F               	movlb	15	; () banked
 15755  011458  8D42               	bsf	66,6,b	;volatile
 15756  01145A                     l382:
 15757                           
 15758                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 15759  01145A  0100               	movlb	0	; () banked
 15760  01145C  A971               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 15761  01145E  D002               	goto	l5852
 15762                           
 15763                           ; BSR set to: 0
 15764                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 15765  011460  010F               	movlb	15	; () banked
 15766  011462  8F42               	bsf	66,7,b	;volatile
 15767  011464                     l5852:
 15768                           
 15769                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 15770  011464  C06F  F077         	movff	CANsendMessage@identifier,??_CANsendMessage
 15771  011468  C070  F078         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15772  01146C  C071  F079         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15773  011470  C072  F07A         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15774  011474  0E16               	movlw	22
 15775  011476  D006               	goto	u7190
 15776  011478                     u7195:
 15777  011478  0100               	movlb	0	; () banked
 15778  01147A  90D8               	bcf	status,0,c
 15779  01147C  337A               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15780  01147E  3379               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15781  011480  3378               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15782  011482  3377               	rrcf	??_CANsendMessage& (0+255),f,b
 15783  011484                     u7190:
 15784  011484  2EE8               	decfsz	wreg,f,c
 15785  011486  D7F8               	goto	u7195
 15786  011488  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 15787  01148C  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15788  011490  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15789  011494  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15790                           
 15791                           ; BSR set to: 0
 15792                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 15793  011498  0100               	movlb	0	; () banked
 15794  01149A  517B               	movf	CANsendMessage@tamp& (0+255),w,b
 15795  01149C  0100               	movlb	0	; () banked
 15796  01149E  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 15797  0114A0  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15798  0114A2  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15799  0114A4  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15800                           
 15801                           ; BSR set to: 0
 15802                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 15803  0114A6  C07B  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 15804                           
 15805                           ;inc\CANlib.h: 332: }
 15806  0114AA  D059               	goto	l5872
 15807  0114AC                     l378:
 15808                           
 15809                           ; BSR set to: 0
 15810                           ;inc\CANlib.h: 334: else
 15811                           ;inc\CANlib.h: 336: {
 15812                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 15813  0114AC  010F               	movlb	15	; () banked
 15814  0114AE  9742               	bcf	66,3,b	;volatile
 15815                           
 15816                           ; BSR set to: 15
 15817                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 15818  0114B0  C06F  F077         	movff	CANsendMessage@identifier,??_CANsendMessage
 15819  0114B4  C070  F078         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 15820  0114B8  C071  F079         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 15821  0114BC  C072  F07A         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 15822  0114C0  0E04               	movlw	4
 15823  0114C2  D006               	goto	u7200
 15824  0114C4                     u7205:
 15825  0114C4  0100               	movlb	0	; () banked
 15826  0114C6  90D8               	bcf	status,0,c
 15827  0114C8  337A               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 15828  0114CA  3379               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 15829  0114CC  3378               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 15830  0114CE  3377               	rrcf	??_CANsendMessage& (0+255),f,b
 15831  0114D0                     u7200:
 15832  0114D0  2EE8               	decfsz	wreg,f,c
 15833  0114D2  D7F8               	goto	u7205
 15834  0114D4  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 15835  0114D8  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15836  0114DC  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15837  0114E0  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15838                           
 15839                           ; BSR set to: 0
 15840                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 15841  0114E4  0100               	movlb	0	; () banked
 15842  0114E6  517B               	movf	CANsendMessage@tamp& (0+255),w,b
 15843  0114E8  0100               	movlb	0	; () banked
 15844  0114EA  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 15845  0114EC  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 15846  0114EE  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 15847  0114F0  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 15848                           
 15849                           ; BSR set to: 0
 15850                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 15851  0114F2  C07B  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 15852                           
 15853                           ; BSR set to: 0
 15854                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 15855  0114F6  0E07               	movlw	7
 15856  0114F8  0100               	movlb	0	; () banked
 15857  0114FA  156F               	andwf	CANsendMessage@identifier& (0+255),w,b
 15858  0114FC  0100               	movlb	0	; () banked
 15859  0114FE  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 15860  011500  0E00               	movlw	0
 15861  011502  0100               	movlb	0	; () banked
 15862  011504  1570               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 15863  011506  0100               	movlb	0	; () banked
 15864  011508  6F7C               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 15865  01150A  0E00               	movlw	0
 15866  01150C  0100               	movlb	0	; () banked
 15867  01150E  1571               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 15868  011510  0100               	movlb	0	; () banked
 15869  011512  6F7D               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 15870  011514  0E00               	movlw	0
 15871  011516  0100               	movlb	0	; () banked
 15872  011518  1572               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 15873  01151A  0100               	movlb	0	; () banked
 15874  01151C  6F7E               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 15875                           
 15876                           ; BSR set to: 0
 15877                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 15878  01151E  C07B  F077         	movff	CANsendMessage@tamp,??_CANsendMessage
 15879  011522  C07C  F078         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 15880  011526  C07D  F079         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 15881  01152A  C07E  F07A         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 15882  01152E  0E05               	movlw	5
 15883  011530                     u7215:
 15884  011530  90D8               	bcf	status,0,c
 15885  011532  0100               	movlb	0	; () banked
 15886  011534  3777               	rlcf	??_CANsendMessage& (0+255),f,b
 15887  011536  3778               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 15888  011538  3779               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 15889  01153A  377A               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 15890  01153C  2EE8               	decfsz	wreg,f,c
 15891  01153E  D7F8               	goto	u7215
 15892  011540  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 15893  011544  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 15894  011548  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 15895  01154C  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 15896                           
 15897                           ; BSR set to: 0
 15898                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 15899  011550  010F               	movlb	15	; () banked
 15900  011552  5142               	movf	66,w,b	;volatile
 15901  011554  0B1F               	andlw	31
 15902  011556  010F               	movlb	15	; () banked
 15903  011558  6F42               	movwf	66,b	;volatile
 15904                           
 15905                           ; BSR set to: 15
 15906                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 15907  01155A  C07B  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 15908  01155E                     l5872:
 15909                           
 15910                           ;inc\CANlib.h: 347: }
 15911                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 15912  01155E  0100               	movlb	0	; () banked
 15913  011560  A176               	btfss	CANsendMessage@flags& (0+255),0,b
 15914  011562  D003               	goto	l385
 15915                           
 15916                           ; BSR set to: 0
 15917                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 15918  011564  010F               	movlb	15	; () banked
 15919  011566  8140               	bsf	64,0,b	;volatile
 15920  011568  D002               	goto	l386
 15921  01156A                     l385:
 15922                           
 15923                           ; BSR set to: 0
 15924                           ;inc\CANlib.h: 351: else
 15925                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 15926  01156A  010F               	movlb	15	; () banked
 15927  01156C  9140               	bcf	64,0,b	;volatile
 15928  01156E                     l386:
 15929                           
 15930                           ; BSR set to: 15
 15931                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 15932  01156E  0100               	movlb	0	; () banked
 15933  011570  A376               	btfss	CANsendMessage@flags& (0+255),1,b
 15934  011572  D003               	goto	l387
 15935                           
 15936                           ; BSR set to: 0
 15937                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 15938  011574  010F               	movlb	15	; () banked
 15939  011576  8340               	bsf	64,1,b	;volatile
 15940  011578  D002               	goto	l5878
 15941  01157A                     l387:
 15942                           
 15943                           ; BSR set to: 0
 15944                           ;inc\CANlib.h: 355: else
 15945                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 15946  01157A  010F               	movlb	15	; () banked
 15947  01157C  9340               	bcf	64,1,b	;volatile
 15948  01157E                     l5878:
 15949                           
 15950                           ; BSR set to: 15
 15951                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 15952  01157E  C073  FFD9         	movff	CANsendMessage@data,fsr2l
 15953  011582  C074  FFDA         	movff	CANsendMessage@data+1,fsr2h
 15954  011586  50DF               	movf	indf2,w,c
 15955  011588  010F               	movlb	15	; () banked
 15956  01158A  6F46               	movwf	70,b	;volatile
 15957                           
 15958                           ; BSR set to: 15
 15959                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 15960  01158C  0100               	movlb	0	; () banked
 15961  01158E  EE20 F001          	lfsr	2,1
 15962  011592  5173               	movf	CANsendMessage@data& (0+255),w,b
 15963  011594  26D9               	addwf	fsr2l,f,c
 15964  011596  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15965  011598  22DA               	addwfc	fsr2h,f,c
 15966  01159A  50DF               	movf	indf2,w,c
 15967  01159C  010F               	movlb	15	; () banked
 15968  01159E  6F47               	movwf	71,b	;volatile
 15969                           
 15970                           ; BSR set to: 15
 15971                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 15972  0115A0  0100               	movlb	0	; () banked
 15973  0115A2  EE20 F002          	lfsr	2,2
 15974  0115A6  5173               	movf	CANsendMessage@data& (0+255),w,b
 15975  0115A8  26D9               	addwf	fsr2l,f,c
 15976  0115AA  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15977  0115AC  22DA               	addwfc	fsr2h,f,c
 15978  0115AE  50DF               	movf	indf2,w,c
 15979  0115B0  010F               	movlb	15	; () banked
 15980  0115B2  6F48               	movwf	72,b	;volatile
 15981                           
 15982                           ; BSR set to: 15
 15983                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 15984  0115B4  0100               	movlb	0	; () banked
 15985  0115B6  EE20 F003          	lfsr	2,3
 15986  0115BA  5173               	movf	CANsendMessage@data& (0+255),w,b
 15987  0115BC  26D9               	addwf	fsr2l,f,c
 15988  0115BE  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 15989  0115C0  22DA               	addwfc	fsr2h,f,c
 15990  0115C2  50DF               	movf	indf2,w,c
 15991  0115C4  010F               	movlb	15	; () banked
 15992  0115C6  6F49               	movwf	73,b	;volatile
 15993                           
 15994                           ; BSR set to: 15
 15995                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 15996  0115C8  0100               	movlb	0	; () banked
 15997  0115CA  EE20 F004          	lfsr	2,4
 15998  0115CE  5173               	movf	CANsendMessage@data& (0+255),w,b
 15999  0115D0  26D9               	addwf	fsr2l,f,c
 16000  0115D2  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16001  0115D4  22DA               	addwfc	fsr2h,f,c
 16002  0115D6  50DF               	movf	indf2,w,c
 16003  0115D8  010F               	movlb	15	; () banked
 16004  0115DA  6F4A               	movwf	74,b	;volatile
 16005                           
 16006                           ; BSR set to: 15
 16007                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 16008  0115DC  0100               	movlb	0	; () banked
 16009  0115DE  EE20 F005          	lfsr	2,5
 16010  0115E2  5173               	movf	CANsendMessage@data& (0+255),w,b
 16011  0115E4  26D9               	addwf	fsr2l,f,c
 16012  0115E6  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16013  0115E8  22DA               	addwfc	fsr2h,f,c
 16014  0115EA  50DF               	movf	indf2,w,c
 16015  0115EC  010F               	movlb	15	; () banked
 16016  0115EE  6F4B               	movwf	75,b	;volatile
 16017                           
 16018                           ; BSR set to: 15
 16019                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 16020  0115F0  0100               	movlb	0	; () banked
 16021  0115F2  EE20 F006          	lfsr	2,6
 16022  0115F6  5173               	movf	CANsendMessage@data& (0+255),w,b
 16023  0115F8  26D9               	addwf	fsr2l,f,c
 16024  0115FA  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16025  0115FC  22DA               	addwfc	fsr2h,f,c
 16026  0115FE  50DF               	movf	indf2,w,c
 16027  011600  010F               	movlb	15	; () banked
 16028  011602  6F4C               	movwf	76,b	;volatile
 16029                           
 16030                           ; BSR set to: 15
 16031                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 16032  011604  0100               	movlb	0	; () banked
 16033  011606  EE20 F007          	lfsr	2,7
 16034  01160A  5173               	movf	CANsendMessage@data& (0+255),w,b
 16035  01160C  26D9               	addwf	fsr2l,f,c
 16036  01160E  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16037  011610  22DA               	addwfc	fsr2h,f,c
 16038  011612  50DF               	movf	indf2,w,c
 16039  011614  010F               	movlb	15	; () banked
 16040  011616  6F4D               	movwf	77,b	;volatile
 16041                           
 16042                           ; BSR set to: 15
 16043                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 16044  011618  010F               	movlb	15	; () banked
 16045  01161A  8740               	bsf	64,3,b	;volatile
 16046                           
 16047                           ; BSR set to: 15
 16048                           ;inc\CANlib.h: 368: return;
 16049  01161C  0012               	return	
 16050  01161E                     l375:
 16051                           
 16052                           ; BSR set to: 15
 16053                           ;inc\CANlib.h: 369: }
 16054                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 16055  01161E  010F               	movlb	15	; () banked
 16056  011620  B730               	btfsc	48,3,b	;volatile
 16057  011622  D13F               	goto	l390
 16058                           
 16059                           ; BSR set to: 15
 16060                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 16061  011624  C075  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 16062                           
 16063                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 16064  011628  0100               	movlb	0	; () banked
 16065  01162A  AD76               	btfss	CANsendMessage@flags& (0+255),6,b
 16066  01162C  D003               	goto	l391
 16067                           
 16068                           ; BSR set to: 0
 16069                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 16070  01162E  010F               	movlb	15	; () banked
 16071  011630  8D35               	bsf	53,6,b	;volatile
 16072  011632  D002               	goto	l392
 16073  011634                     l391:
 16074                           
 16075                           ; BSR set to: 0
 16076                           ;inc\CANlib.h: 378: else
 16077                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 16078  011634  010F               	movlb	15	; () banked
 16079  011636  9D35               	bcf	53,6,b	;volatile
 16080  011638                     l392:
 16081                           
 16082                           ; BSR set to: 15
 16083                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 16084  011638  0100               	movlb	0	; () banked
 16085  01163A  A776               	btfss	CANsendMessage@flags& (0+255),3,b
 16086  01163C  D079               	goto	l393
 16087                           
 16088                           ; BSR set to: 0
 16089                           ;inc\CANlib.h: 382: {
 16090                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 16091  01163E  0100               	movlb	0	; () banked
 16092  011640  516F               	movf	CANsendMessage@identifier& (0+255),w,b
 16093  011642  0100               	movlb	0	; () banked
 16094  011644  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 16095  011646  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16096  011648  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16097  01164A  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16098                           
 16099                           ; BSR set to: 0
 16100                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 16101  01164C  C07B  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 16102                           
 16103                           ; BSR set to: 0
 16104                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 16105  011650  0E00               	movlw	0
 16106  011652  0100               	movlb	0	; () banked
 16107  011654  156F               	andwf	CANsendMessage@identifier& (0+255),w,b
 16108  011656  0100               	movlb	0	; () banked
 16109  011658  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 16110  01165A  0EFF               	movlw	255
 16111  01165C  0100               	movlb	0	; () banked
 16112  01165E  1570               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16113  011660  0100               	movlb	0	; () banked
 16114  011662  6F7C               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16115  011664  0E00               	movlw	0
 16116  011666  0100               	movlb	0	; () banked
 16117  011668  1571               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16118  01166A  0100               	movlb	0	; () banked
 16119  01166C  6F7D               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16120  01166E  0E00               	movlw	0
 16121  011670  0100               	movlb	0	; () banked
 16122  011672  1572               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16123  011674  0100               	movlb	0	; () banked
 16124  011676  6F7E               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16125                           
 16126                           ; BSR set to: 0
 16127                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 16128  011678  C07B  F077         	movff	CANsendMessage@tamp,??_CANsendMessage
 16129  01167C  C07C  F078         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16130  011680  C07D  F079         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16131  011684  C07E  F07A         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16132  011688  C078  F077         	movff	??_CANsendMessage+1,??_CANsendMessage
 16133  01168C  C079  F078         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 16134  011690  C07A  F079         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 16135  011694  0100               	movlb	0	; () banked
 16136  011696  6B7A               	clrf	(??_CANsendMessage+3)& (0+255),b
 16137  011698  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 16138  01169C  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16139  0116A0  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16140  0116A4  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16141                           
 16142                           ; BSR set to: 0
 16143                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 16144  0116A8  C07B  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 16145                           
 16146                           ; BSR set to: 0
 16147                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 16148  0116AC  0E00               	movlw	0
 16149  0116AE  010F               	movlb	15	; () banked
 16150  0116B0  6F32               	movwf	50,b	;volatile
 16151                           
 16152                           ; BSR set to: 15
 16153                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 16154  0116B2  010F               	movlb	15	; () banked
 16155  0116B4  8732               	bsf	50,3,b	;volatile
 16156                           
 16157                           ; BSR set to: 15
 16158                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 16159  0116B6  0100               	movlb	0	; () banked
 16160  0116B8  A171               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 16161  0116BA  D002               	goto	l394
 16162                           
 16163                           ; BSR set to: 0
 16164                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 16165  0116BC  010F               	movlb	15	; () banked
 16166  0116BE  8132               	bsf	50,0,b	;volatile
 16167  0116C0                     l394:
 16168                           
 16169                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 16170  0116C0  0100               	movlb	0	; () banked
 16171  0116C2  A371               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 16172  0116C4  D002               	goto	l395
 16173                           
 16174                           ; BSR set to: 0
 16175                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 16176  0116C6  010F               	movlb	15	; () banked
 16177  0116C8  8332               	bsf	50,1,b	;volatile
 16178  0116CA                     l395:
 16179                           
 16180                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 16181  0116CA  0100               	movlb	0	; () banked
 16182  0116CC  A571               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 16183  0116CE  D002               	goto	l396
 16184                           
 16185                           ; BSR set to: 0
 16186                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 16187  0116D0  010F               	movlb	15	; () banked
 16188  0116D2  8B32               	bsf	50,5,b	;volatile
 16189  0116D4                     l396:
 16190                           
 16191                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 16192  0116D4  0100               	movlb	0	; () banked
 16193  0116D6  A771               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 16194  0116D8  D002               	goto	l397
 16195                           
 16196                           ; BSR set to: 0
 16197                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 16198  0116DA  010F               	movlb	15	; () banked
 16199  0116DC  8D32               	bsf	50,6,b	;volatile
 16200  0116DE                     l397:
 16201                           
 16202                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 16203  0116DE  0100               	movlb	0	; () banked
 16204  0116E0  A971               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 16205  0116E2  D002               	goto	l5928
 16206                           
 16207                           ; BSR set to: 0
 16208                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 16209  0116E4  010F               	movlb	15	; () banked
 16210  0116E6  8F32               	bsf	50,7,b	;volatile
 16211  0116E8                     l5928:
 16212                           
 16213                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 16214  0116E8  C06F  F077         	movff	CANsendMessage@identifier,??_CANsendMessage
 16215  0116EC  C070  F078         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16216  0116F0  C071  F079         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16217  0116F4  C072  F07A         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16218  0116F8  0E16               	movlw	22
 16219  0116FA  D006               	goto	u7320
 16220  0116FC                     u7325:
 16221  0116FC  0100               	movlb	0	; () banked
 16222  0116FE  90D8               	bcf	status,0,c
 16223  011700  337A               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16224  011702  3379               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16225  011704  3378               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16226  011706  3377               	rrcf	??_CANsendMessage& (0+255),f,b
 16227  011708                     u7320:
 16228  011708  2EE8               	decfsz	wreg,f,c
 16229  01170A  D7F8               	goto	u7325
 16230  01170C  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 16231  011710  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16232  011714  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16233  011718  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16234                           
 16235                           ; BSR set to: 0
 16236                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 16237  01171C  0100               	movlb	0	; () banked
 16238  01171E  517B               	movf	CANsendMessage@tamp& (0+255),w,b
 16239  011720  0100               	movlb	0	; () banked
 16240  011722  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 16241  011724  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16242  011726  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16243  011728  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16244                           
 16245                           ; BSR set to: 0
 16246                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 16247  01172A  C07B  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 16248                           
 16249                           ;inc\CANlib.h: 407: }
 16250  01172E  D059               	goto	l5948
 16251  011730                     l393:
 16252                           
 16253                           ; BSR set to: 0
 16254                           ;inc\CANlib.h: 409: else
 16255                           ;inc\CANlib.h: 411: {
 16256                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 16257  011730  010F               	movlb	15	; () banked
 16258  011732  9732               	bcf	50,3,b	;volatile
 16259                           
 16260                           ; BSR set to: 15
 16261                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 16262  011734  C06F  F077         	movff	CANsendMessage@identifier,??_CANsendMessage
 16263  011738  C070  F078         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16264  01173C  C071  F079         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16265  011740  C072  F07A         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16266  011744  0E04               	movlw	4
 16267  011746  D006               	goto	u7330
 16268  011748                     u7335:
 16269  011748  0100               	movlb	0	; () banked
 16270  01174A  90D8               	bcf	status,0,c
 16271  01174C  337A               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16272  01174E  3379               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16273  011750  3378               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16274  011752  3377               	rrcf	??_CANsendMessage& (0+255),f,b
 16275  011754                     u7330:
 16276  011754  2EE8               	decfsz	wreg,f,c
 16277  011756  D7F8               	goto	u7335
 16278  011758  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 16279  01175C  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16280  011760  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16281  011764  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16282                           
 16283                           ; BSR set to: 0
 16284                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 16285  011768  0100               	movlb	0	; () banked
 16286  01176A  517B               	movf	CANsendMessage@tamp& (0+255),w,b
 16287  01176C  0100               	movlb	0	; () banked
 16288  01176E  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 16289  011770  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16290  011772  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16291  011774  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16292                           
 16293                           ; BSR set to: 0
 16294                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 16295  011776  C07B  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 16296                           
 16297                           ; BSR set to: 0
 16298                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 16299  01177A  0E07               	movlw	7
 16300  01177C  0100               	movlb	0	; () banked
 16301  01177E  156F               	andwf	CANsendMessage@identifier& (0+255),w,b
 16302  011780  0100               	movlb	0	; () banked
 16303  011782  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 16304  011784  0E00               	movlw	0
 16305  011786  0100               	movlb	0	; () banked
 16306  011788  1570               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16307  01178A  0100               	movlb	0	; () banked
 16308  01178C  6F7C               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16309  01178E  0E00               	movlw	0
 16310  011790  0100               	movlb	0	; () banked
 16311  011792  1571               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16312  011794  0100               	movlb	0	; () banked
 16313  011796  6F7D               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16314  011798  0E00               	movlw	0
 16315  01179A  0100               	movlb	0	; () banked
 16316  01179C  1572               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16317  01179E  0100               	movlb	0	; () banked
 16318  0117A0  6F7E               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16319                           
 16320                           ; BSR set to: 0
 16321                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 16322  0117A2  C07B  F077         	movff	CANsendMessage@tamp,??_CANsendMessage
 16323  0117A6  C07C  F078         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16324  0117AA  C07D  F079         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16325  0117AE  C07E  F07A         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16326  0117B2  0E05               	movlw	5
 16327  0117B4                     u7345:
 16328  0117B4  90D8               	bcf	status,0,c
 16329  0117B6  0100               	movlb	0	; () banked
 16330  0117B8  3777               	rlcf	??_CANsendMessage& (0+255),f,b
 16331  0117BA  3778               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 16332  0117BC  3779               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 16333  0117BE  377A               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 16334  0117C0  2EE8               	decfsz	wreg,f,c
 16335  0117C2  D7F8               	goto	u7345
 16336  0117C4  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 16337  0117C8  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16338  0117CC  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16339  0117D0  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16340                           
 16341                           ; BSR set to: 0
 16342                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 16343  0117D4  010F               	movlb	15	; () banked
 16344  0117D6  5132               	movf	50,w,b	;volatile
 16345  0117D8  0B1F               	andlw	31
 16346  0117DA  010F               	movlb	15	; () banked
 16347  0117DC  6F32               	movwf	50,b	;volatile
 16348                           
 16349                           ; BSR set to: 15
 16350                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 16351  0117DE  C07B  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 16352  0117E2                     l5948:
 16353                           
 16354                           ;inc\CANlib.h: 422: }
 16355                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 16356  0117E2  0100               	movlb	0	; () banked
 16357  0117E4  A176               	btfss	CANsendMessage@flags& (0+255),0,b
 16358  0117E6  D003               	goto	l400
 16359                           
 16360                           ; BSR set to: 0
 16361                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 16362  0117E8  010F               	movlb	15	; () banked
 16363  0117EA  8130               	bsf	48,0,b	;volatile
 16364  0117EC  D002               	goto	l401
 16365  0117EE                     l400:
 16366                           
 16367                           ; BSR set to: 0
 16368                           ;inc\CANlib.h: 426: else
 16369                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 16370  0117EE  010F               	movlb	15	; () banked
 16371  0117F0  9130               	bcf	48,0,b	;volatile
 16372  0117F2                     l401:
 16373                           
 16374                           ; BSR set to: 15
 16375                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 16376  0117F2  0100               	movlb	0	; () banked
 16377  0117F4  A376               	btfss	CANsendMessage@flags& (0+255),1,b
 16378  0117F6  D003               	goto	l402
 16379                           
 16380                           ; BSR set to: 0
 16381                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 16382  0117F8  010F               	movlb	15	; () banked
 16383  0117FA  8330               	bsf	48,1,b	;volatile
 16384  0117FC  D002               	goto	l5954
 16385  0117FE                     l402:
 16386                           
 16387                           ; BSR set to: 0
 16388                           ;inc\CANlib.h: 430: else
 16389                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 16390  0117FE  010F               	movlb	15	; () banked
 16391  011800  9330               	bcf	48,1,b	;volatile
 16392  011802                     l5954:
 16393                           
 16394                           ; BSR set to: 15
 16395                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 16396  011802  C073  FFD9         	movff	CANsendMessage@data,fsr2l
 16397  011806  C074  FFDA         	movff	CANsendMessage@data+1,fsr2h
 16398  01180A  50DF               	movf	indf2,w,c
 16399  01180C  010F               	movlb	15	; () banked
 16400  01180E  6F36               	movwf	54,b	;volatile
 16401                           
 16402                           ; BSR set to: 15
 16403                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 16404  011810  0100               	movlb	0	; () banked
 16405  011812  EE20 F001          	lfsr	2,1
 16406  011816  5173               	movf	CANsendMessage@data& (0+255),w,b
 16407  011818  26D9               	addwf	fsr2l,f,c
 16408  01181A  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16409  01181C  22DA               	addwfc	fsr2h,f,c
 16410  01181E  50DF               	movf	indf2,w,c
 16411  011820  010F               	movlb	15	; () banked
 16412  011822  6F37               	movwf	55,b	;volatile
 16413                           
 16414                           ; BSR set to: 15
 16415                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 16416  011824  0100               	movlb	0	; () banked
 16417  011826  EE20 F002          	lfsr	2,2
 16418  01182A  5173               	movf	CANsendMessage@data& (0+255),w,b
 16419  01182C  26D9               	addwf	fsr2l,f,c
 16420  01182E  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16421  011830  22DA               	addwfc	fsr2h,f,c
 16422  011832  50DF               	movf	indf2,w,c
 16423  011834  010F               	movlb	15	; () banked
 16424  011836  6F38               	movwf	56,b	;volatile
 16425                           
 16426                           ; BSR set to: 15
 16427                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 16428  011838  0100               	movlb	0	; () banked
 16429  01183A  EE20 F003          	lfsr	2,3
 16430  01183E  5173               	movf	CANsendMessage@data& (0+255),w,b
 16431  011840  26D9               	addwf	fsr2l,f,c
 16432  011842  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16433  011844  22DA               	addwfc	fsr2h,f,c
 16434  011846  50DF               	movf	indf2,w,c
 16435  011848  010F               	movlb	15	; () banked
 16436  01184A  6F39               	movwf	57,b	;volatile
 16437                           
 16438                           ; BSR set to: 15
 16439                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 16440  01184C  0100               	movlb	0	; () banked
 16441  01184E  EE20 F004          	lfsr	2,4
 16442  011852  5173               	movf	CANsendMessage@data& (0+255),w,b
 16443  011854  26D9               	addwf	fsr2l,f,c
 16444  011856  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16445  011858  22DA               	addwfc	fsr2h,f,c
 16446  01185A  50DF               	movf	indf2,w,c
 16447  01185C  010F               	movlb	15	; () banked
 16448  01185E  6F3A               	movwf	58,b	;volatile
 16449                           
 16450                           ; BSR set to: 15
 16451                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 16452  011860  0100               	movlb	0	; () banked
 16453  011862  EE20 F005          	lfsr	2,5
 16454  011866  5173               	movf	CANsendMessage@data& (0+255),w,b
 16455  011868  26D9               	addwf	fsr2l,f,c
 16456  01186A  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16457  01186C  22DA               	addwfc	fsr2h,f,c
 16458  01186E  50DF               	movf	indf2,w,c
 16459  011870  010F               	movlb	15	; () banked
 16460  011872  6F3B               	movwf	59,b	;volatile
 16461                           
 16462                           ; BSR set to: 15
 16463                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 16464  011874  0100               	movlb	0	; () banked
 16465  011876  EE20 F006          	lfsr	2,6
 16466  01187A  5173               	movf	CANsendMessage@data& (0+255),w,b
 16467  01187C  26D9               	addwf	fsr2l,f,c
 16468  01187E  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16469  011880  22DA               	addwfc	fsr2h,f,c
 16470  011882  50DF               	movf	indf2,w,c
 16471  011884  010F               	movlb	15	; () banked
 16472  011886  6F3C               	movwf	60,b	;volatile
 16473                           
 16474                           ; BSR set to: 15
 16475                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 16476  011888  0100               	movlb	0	; () banked
 16477  01188A  EE20 F007          	lfsr	2,7
 16478  01188E  5173               	movf	CANsendMessage@data& (0+255),w,b
 16479  011890  26D9               	addwf	fsr2l,f,c
 16480  011892  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16481  011894  22DA               	addwfc	fsr2h,f,c
 16482  011896  50DF               	movf	indf2,w,c
 16483  011898  010F               	movlb	15	; () banked
 16484  01189A  6F3D               	movwf	61,b	;volatile
 16485                           
 16486                           ; BSR set to: 15
 16487                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 16488  01189C  010F               	movlb	15	; () banked
 16489  01189E  8730               	bsf	48,3,b	;volatile
 16490                           
 16491                           ; BSR set to: 15
 16492                           ;inc\CANlib.h: 444: return;
 16493  0118A0  0012               	return	
 16494  0118A2                     l390:
 16495                           
 16496                           ; BSR set to: 15
 16497                           ;inc\CANlib.h: 445: }
 16498                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 16499  0118A2  010F               	movlb	15	; () banked
 16500  0118A4  B720               	btfsc	32,3,b	;volatile
 16501  0118A6  0012               	return	
 16502                           
 16503                           ; BSR set to: 15
 16504                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 16505  0118A8  C075  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 16506                           
 16507                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 16508  0118AC  0100               	movlb	0	; () banked
 16509  0118AE  AD76               	btfss	CANsendMessage@flags& (0+255),6,b
 16510  0118B0  D003               	goto	l405
 16511                           
 16512                           ; BSR set to: 0
 16513                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 16514  0118B2  010F               	movlb	15	; () banked
 16515  0118B4  8D25               	bsf	37,6,b	;volatile
 16516  0118B6  D002               	goto	l406
 16517  0118B8                     l405:
 16518                           
 16519                           ; BSR set to: 0
 16520                           ;inc\CANlib.h: 454: else
 16521                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 16522  0118B8  010F               	movlb	15	; () banked
 16523  0118BA  9D25               	bcf	37,6,b	;volatile
 16524  0118BC                     l406:
 16525                           
 16526                           ; BSR set to: 15
 16527                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 16528  0118BC  0100               	movlb	0	; () banked
 16529  0118BE  A776               	btfss	CANsendMessage@flags& (0+255),3,b
 16530  0118C0  D079               	goto	l407
 16531                           
 16532                           ; BSR set to: 0
 16533                           ;inc\CANlib.h: 458: {
 16534                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 16535  0118C2  0100               	movlb	0	; () banked
 16536  0118C4  516F               	movf	CANsendMessage@identifier& (0+255),w,b
 16537  0118C6  0100               	movlb	0	; () banked
 16538  0118C8  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 16539  0118CA  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16540  0118CC  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16541  0118CE  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16542                           
 16543                           ; BSR set to: 0
 16544                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 16545  0118D0  C07B  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 16546                           
 16547                           ; BSR set to: 0
 16548                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 16549  0118D4  0E00               	movlw	0
 16550  0118D6  0100               	movlb	0	; () banked
 16551  0118D8  156F               	andwf	CANsendMessage@identifier& (0+255),w,b
 16552  0118DA  0100               	movlb	0	; () banked
 16553  0118DC  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 16554  0118DE  0EFF               	movlw	255
 16555  0118E0  0100               	movlb	0	; () banked
 16556  0118E2  1570               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16557  0118E4  0100               	movlb	0	; () banked
 16558  0118E6  6F7C               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16559  0118E8  0E00               	movlw	0
 16560  0118EA  0100               	movlb	0	; () banked
 16561  0118EC  1571               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16562  0118EE  0100               	movlb	0	; () banked
 16563  0118F0  6F7D               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16564  0118F2  0E00               	movlw	0
 16565  0118F4  0100               	movlb	0	; () banked
 16566  0118F6  1572               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16567  0118F8  0100               	movlb	0	; () banked
 16568  0118FA  6F7E               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16569                           
 16570                           ; BSR set to: 0
 16571                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 16572  0118FC  C07B  F077         	movff	CANsendMessage@tamp,??_CANsendMessage
 16573  011900  C07C  F078         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16574  011904  C07D  F079         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16575  011908  C07E  F07A         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16576  01190C  C078  F077         	movff	??_CANsendMessage+1,??_CANsendMessage
 16577  011910  C079  F078         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 16578  011914  C07A  F079         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 16579  011918  0100               	movlb	0	; () banked
 16580  01191A  6B7A               	clrf	(??_CANsendMessage+3)& (0+255),b
 16581  01191C  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 16582  011920  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16583  011924  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16584  011928  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16585                           
 16586                           ; BSR set to: 0
 16587                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 16588  01192C  C07B  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 16589                           
 16590                           ; BSR set to: 0
 16591                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 16592  011930  0E00               	movlw	0
 16593  011932  010F               	movlb	15	; () banked
 16594  011934  6F22               	movwf	34,b	;volatile
 16595                           
 16596                           ; BSR set to: 15
 16597                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 16598  011936  010F               	movlb	15	; () banked
 16599  011938  8722               	bsf	34,3,b	;volatile
 16600                           
 16601                           ; BSR set to: 15
 16602                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 16603  01193A  0100               	movlb	0	; () banked
 16604  01193C  A171               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 16605  01193E  D002               	goto	l408
 16606                           
 16607                           ; BSR set to: 0
 16608                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 16609  011940  010F               	movlb	15	; () banked
 16610  011942  8122               	bsf	34,0,b	;volatile
 16611  011944                     l408:
 16612                           
 16613                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 16614  011944  0100               	movlb	0	; () banked
 16615  011946  A371               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 16616  011948  D002               	goto	l409
 16617                           
 16618                           ; BSR set to: 0
 16619                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 16620  01194A  010F               	movlb	15	; () banked
 16621  01194C  8322               	bsf	34,1,b	;volatile
 16622  01194E                     l409:
 16623                           
 16624                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 16625  01194E  0100               	movlb	0	; () banked
 16626  011950  A571               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 16627  011952  D002               	goto	l410
 16628                           
 16629                           ; BSR set to: 0
 16630                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 16631  011954  010F               	movlb	15	; () banked
 16632  011956  8B22               	bsf	34,5,b	;volatile
 16633  011958                     l410:
 16634                           
 16635                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 16636  011958  0100               	movlb	0	; () banked
 16637  01195A  A771               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 16638  01195C  D002               	goto	l411
 16639                           
 16640                           ; BSR set to: 0
 16641                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 16642  01195E  010F               	movlb	15	; () banked
 16643  011960  8D22               	bsf	34,6,b	;volatile
 16644  011962                     l411:
 16645                           
 16646                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 16647  011962  0100               	movlb	0	; () banked
 16648  011964  A971               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 16649  011966  D002               	goto	l6004
 16650                           
 16651                           ; BSR set to: 0
 16652                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 16653  011968  010F               	movlb	15	; () banked
 16654  01196A  8F22               	bsf	34,7,b	;volatile
 16655  01196C                     l6004:
 16656                           
 16657                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 16658  01196C  C06F  F077         	movff	CANsendMessage@identifier,??_CANsendMessage
 16659  011970  C070  F078         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16660  011974  C071  F079         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16661  011978  C072  F07A         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16662  01197C  0E16               	movlw	22
 16663  01197E  D006               	goto	u7450
 16664  011980                     u7455:
 16665  011980  0100               	movlb	0	; () banked
 16666  011982  90D8               	bcf	status,0,c
 16667  011984  337A               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16668  011986  3379               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16669  011988  3378               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16670  01198A  3377               	rrcf	??_CANsendMessage& (0+255),f,b
 16671  01198C                     u7450:
 16672  01198C  2EE8               	decfsz	wreg,f,c
 16673  01198E  D7F8               	goto	u7455
 16674  011990  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 16675  011994  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16676  011998  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16677  01199C  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16678                           
 16679                           ; BSR set to: 0
 16680                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 16681  0119A0  0100               	movlb	0	; () banked
 16682  0119A2  517B               	movf	CANsendMessage@tamp& (0+255),w,b
 16683  0119A4  0100               	movlb	0	; () banked
 16684  0119A6  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 16685  0119A8  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16686  0119AA  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16687  0119AC  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16688                           
 16689                           ; BSR set to: 0
 16690                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 16691  0119AE  C07B  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 16692                           
 16693                           ;inc\CANlib.h: 483: }
 16694  0119B2  D059               	goto	l6024
 16695  0119B4                     l407:
 16696                           
 16697                           ; BSR set to: 0
 16698                           ;inc\CANlib.h: 485: else
 16699                           ;inc\CANlib.h: 487: {
 16700                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 16701  0119B4  010F               	movlb	15	; () banked
 16702  0119B6  9722               	bcf	34,3,b	;volatile
 16703                           
 16704                           ; BSR set to: 15
 16705                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 16706  0119B8  C06F  F077         	movff	CANsendMessage@identifier,??_CANsendMessage
 16707  0119BC  C070  F078         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16708  0119C0  C071  F079         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16709  0119C4  C072  F07A         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16710  0119C8  0E04               	movlw	4
 16711  0119CA  D006               	goto	u7460
 16712  0119CC                     u7465:
 16713  0119CC  0100               	movlb	0	; () banked
 16714  0119CE  90D8               	bcf	status,0,c
 16715  0119D0  337A               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16716  0119D2  3379               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16717  0119D4  3378               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16718  0119D6  3377               	rrcf	??_CANsendMessage& (0+255),f,b
 16719  0119D8                     u7460:
 16720  0119D8  2EE8               	decfsz	wreg,f,c
 16721  0119DA  D7F8               	goto	u7465
 16722  0119DC  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 16723  0119E0  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16724  0119E4  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16725  0119E8  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16726                           
 16727                           ; BSR set to: 0
 16728                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 16729  0119EC  0100               	movlb	0	; () banked
 16730  0119EE  517B               	movf	CANsendMessage@tamp& (0+255),w,b
 16731  0119F0  0100               	movlb	0	; () banked
 16732  0119F2  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 16733  0119F4  6B7C               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16734  0119F6  6B7D               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16735  0119F8  6B7E               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16736                           
 16737                           ; BSR set to: 0
 16738                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 16739  0119FA  C07B  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 16740                           
 16741                           ; BSR set to: 0
 16742                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 16743  0119FE  0E07               	movlw	7
 16744  011A00  0100               	movlb	0	; () banked
 16745  011A02  156F               	andwf	CANsendMessage@identifier& (0+255),w,b
 16746  011A04  0100               	movlb	0	; () banked
 16747  011A06  6F7B               	movwf	CANsendMessage@tamp& (0+255),b
 16748  011A08  0E00               	movlw	0
 16749  011A0A  0100               	movlb	0	; () banked
 16750  011A0C  1570               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16751  011A0E  0100               	movlb	0	; () banked
 16752  011A10  6F7C               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16753  011A12  0E00               	movlw	0
 16754  011A14  0100               	movlb	0	; () banked
 16755  011A16  1571               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16756  011A18  0100               	movlb	0	; () banked
 16757  011A1A  6F7D               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16758  011A1C  0E00               	movlw	0
 16759  011A1E  0100               	movlb	0	; () banked
 16760  011A20  1572               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16761  011A22  0100               	movlb	0	; () banked
 16762  011A24  6F7E               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16763                           
 16764                           ; BSR set to: 0
 16765                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 16766  011A26  C07B  F077         	movff	CANsendMessage@tamp,??_CANsendMessage
 16767  011A2A  C07C  F078         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16768  011A2E  C07D  F079         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16769  011A32  C07E  F07A         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16770  011A36  0E05               	movlw	5
 16771  011A38                     u7475:
 16772  011A38  90D8               	bcf	status,0,c
 16773  011A3A  0100               	movlb	0	; () banked
 16774  011A3C  3777               	rlcf	??_CANsendMessage& (0+255),f,b
 16775  011A3E  3778               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 16776  011A40  3779               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 16777  011A42  377A               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 16778  011A44  2EE8               	decfsz	wreg,f,c
 16779  011A46  D7F8               	goto	u7475
 16780  011A48  C077  F07B         	movff	??_CANsendMessage,CANsendMessage@tamp
 16781  011A4C  C078  F07C         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16782  011A50  C079  F07D         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16783  011A54  C07A  F07E         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16784                           
 16785                           ; BSR set to: 0
 16786                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 16787  011A58  010F               	movlb	15	; () banked
 16788  011A5A  5122               	movf	34,w,b	;volatile
 16789  011A5C  0B1F               	andlw	31
 16790  011A5E  010F               	movlb	15	; () banked
 16791  011A60  6F22               	movwf	34,b	;volatile
 16792                           
 16793                           ; BSR set to: 15
 16794                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 16795  011A62  C07B  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 16796  011A66                     l6024:
 16797                           
 16798                           ;inc\CANlib.h: 498: }
 16799                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 16800  011A66  0100               	movlb	0	; () banked
 16801  011A68  A176               	btfss	CANsendMessage@flags& (0+255),0,b
 16802  011A6A  D003               	goto	l414
 16803                           
 16804                           ; BSR set to: 0
 16805                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 16806  011A6C  010F               	movlb	15	; () banked
 16807  011A6E  8120               	bsf	32,0,b	;volatile
 16808  011A70  D002               	goto	l415
 16809  011A72                     l414:
 16810                           
 16811                           ; BSR set to: 0
 16812                           ;inc\CANlib.h: 502: else
 16813                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 16814  011A72  010F               	movlb	15	; () banked
 16815  011A74  9120               	bcf	32,0,b	;volatile
 16816  011A76                     l415:
 16817                           
 16818                           ; BSR set to: 15
 16819                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 16820  011A76  0100               	movlb	0	; () banked
 16821  011A78  A376               	btfss	CANsendMessage@flags& (0+255),1,b
 16822  011A7A  D003               	goto	l416
 16823                           
 16824                           ; BSR set to: 0
 16825                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 16826  011A7C  010F               	movlb	15	; () banked
 16827  011A7E  8320               	bsf	32,1,b	;volatile
 16828  011A80  D002               	goto	l6030
 16829  011A82                     l416:
 16830                           
 16831                           ; BSR set to: 0
 16832                           ;inc\CANlib.h: 506: else
 16833                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 16834  011A82  010F               	movlb	15	; () banked
 16835  011A84  9320               	bcf	32,1,b	;volatile
 16836  011A86                     l6030:
 16837                           
 16838                           ; BSR set to: 15
 16839                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 16840  011A86  C073  FFD9         	movff	CANsendMessage@data,fsr2l
 16841  011A8A  C074  FFDA         	movff	CANsendMessage@data+1,fsr2h
 16842  011A8E  50DF               	movf	indf2,w,c
 16843  011A90  010F               	movlb	15	; () banked
 16844  011A92  6F26               	movwf	38,b	;volatile
 16845                           
 16846                           ; BSR set to: 15
 16847                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 16848  011A94  0100               	movlb	0	; () banked
 16849  011A96  EE20 F001          	lfsr	2,1
 16850  011A9A  5173               	movf	CANsendMessage@data& (0+255),w,b
 16851  011A9C  26D9               	addwf	fsr2l,f,c
 16852  011A9E  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16853  011AA0  22DA               	addwfc	fsr2h,f,c
 16854  011AA2  50DF               	movf	indf2,w,c
 16855  011AA4  010F               	movlb	15	; () banked
 16856  011AA6  6F27               	movwf	39,b	;volatile
 16857                           
 16858                           ; BSR set to: 15
 16859                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 16860  011AA8  0100               	movlb	0	; () banked
 16861  011AAA  EE20 F002          	lfsr	2,2
 16862  011AAE  5173               	movf	CANsendMessage@data& (0+255),w,b
 16863  011AB0  26D9               	addwf	fsr2l,f,c
 16864  011AB2  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16865  011AB4  22DA               	addwfc	fsr2h,f,c
 16866  011AB6  50DF               	movf	indf2,w,c
 16867  011AB8  010F               	movlb	15	; () banked
 16868  011ABA  6F28               	movwf	40,b	;volatile
 16869                           
 16870                           ; BSR set to: 15
 16871                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 16872  011ABC  0100               	movlb	0	; () banked
 16873  011ABE  EE20 F003          	lfsr	2,3
 16874  011AC2  5173               	movf	CANsendMessage@data& (0+255),w,b
 16875  011AC4  26D9               	addwf	fsr2l,f,c
 16876  011AC6  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16877  011AC8  22DA               	addwfc	fsr2h,f,c
 16878  011ACA  50DF               	movf	indf2,w,c
 16879  011ACC  010F               	movlb	15	; () banked
 16880  011ACE  6F29               	movwf	41,b	;volatile
 16881                           
 16882                           ; BSR set to: 15
 16883                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 16884  011AD0  0100               	movlb	0	; () banked
 16885  011AD2  EE20 F004          	lfsr	2,4
 16886  011AD6  5173               	movf	CANsendMessage@data& (0+255),w,b
 16887  011AD8  26D9               	addwf	fsr2l,f,c
 16888  011ADA  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16889  011ADC  22DA               	addwfc	fsr2h,f,c
 16890  011ADE  50DF               	movf	indf2,w,c
 16891  011AE0  010F               	movlb	15	; () banked
 16892  011AE2  6F2A               	movwf	42,b	;volatile
 16893                           
 16894                           ; BSR set to: 15
 16895                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 16896  011AE4  0100               	movlb	0	; () banked
 16897  011AE6  EE20 F005          	lfsr	2,5
 16898  011AEA  5173               	movf	CANsendMessage@data& (0+255),w,b
 16899  011AEC  26D9               	addwf	fsr2l,f,c
 16900  011AEE  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16901  011AF0  22DA               	addwfc	fsr2h,f,c
 16902  011AF2  50DF               	movf	indf2,w,c
 16903  011AF4  010F               	movlb	15	; () banked
 16904  011AF6  6F2B               	movwf	43,b	;volatile
 16905                           
 16906                           ; BSR set to: 15
 16907                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 16908  011AF8  0100               	movlb	0	; () banked
 16909  011AFA  EE20 F006          	lfsr	2,6
 16910  011AFE  5173               	movf	CANsendMessage@data& (0+255),w,b
 16911  011B00  26D9               	addwf	fsr2l,f,c
 16912  011B02  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16913  011B04  22DA               	addwfc	fsr2h,f,c
 16914  011B06  50DF               	movf	indf2,w,c
 16915  011B08  010F               	movlb	15	; () banked
 16916  011B0A  6F2C               	movwf	44,b	;volatile
 16917                           
 16918                           ; BSR set to: 15
 16919                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 16920  011B0C  0100               	movlb	0	; () banked
 16921  011B0E  EE20 F007          	lfsr	2,7
 16922  011B12  5173               	movf	CANsendMessage@data& (0+255),w,b
 16923  011B14  26D9               	addwf	fsr2l,f,c
 16924  011B16  5174               	movf	(CANsendMessage@data+1)& (0+255),w,b
 16925  011B18  22DA               	addwfc	fsr2h,f,c
 16926  011B1A  50DF               	movf	indf2,w,c
 16927  011B1C  010F               	movlb	15	; () banked
 16928  011B1E  6F2D               	movwf	45,b	;volatile
 16929                           
 16930                           ; BSR set to: 15
 16931                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 16932  011B20  010F               	movlb	15	; () banked
 16933  011B22  8720               	bsf	32,3,b	;volatile
 16934                           
 16935                           ; BSR set to: 15
 16936                           ;inc\CANlib.h: 520: return;
 16937  011B24  0012               	return	
 16938  011B26                     __end_of_CANsendMessage:
 16939                           	opt stack 0
 16940                           tblptru	equ	0xFF8
 16941                           tblptrh	equ	0xFF7
 16942                           tblptrl	equ	0xFF6
 16943                           tablat	equ	0xFF5
 16944                           prodh	equ	0xFF4
 16945                           prodl	equ	0xFF3
 16946                           intcon	equ	0xFF2
 16947                           postinc0	equ	0xFEE
 16948                           wreg	equ	0xFE8
 16949                           indf2	equ	0xFDF
 16950                           postinc2	equ	0xFDE
 16951                           fsr2h	equ	0xFDA
 16952                           fsr2l	equ	0xFD9
 16953                           status	equ	0xFD8
 16954                           
 16955 ;; *************** function _CANisTxReady *****************
 16956 ;; Defined at:
 16957 ;;		line 1154 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 16958 ;; Parameters:    Size  Location     Type
 16959 ;;		None
 16960 ;; Auto vars:     Size  Location     Type
 16961 ;;		None
 16962 ;; Return value:  Size  Location     Type
 16963 ;;                  1    wreg      unsigned char 
 16964 ;; Registers used:
 16965 ;;		wreg, status,2
 16966 ;; Tracked objects:
 16967 ;;		On entry : 0/0
 16968 ;;		On exit  : 0/0
 16969 ;;		Unchanged: 0/0
 16970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16972 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16974 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16975 ;;Total ram usage:        1 bytes
 16976 ;; Hardware stack levels used:    1
 16977 ;; Hardware stack levels required when called:    3
 16978 ;; This function calls:
 16979 ;;		Nothing
 16980 ;; This function is called by:
 16981 ;;		_main
 16982 ;;		_CAN_Send
 16983 ;;		_LCD_Handler
 16984 ;; This function uses a non-reentrant model
 16985 ;;
 16986                           
 16987                           	psect	text46
 16988  015D74                     __ptext46:
 16989                           	opt stack 0
 16990  015D74                     _CANisTxReady:
 16991                           	opt stack 26
 16992                           
 16993                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 16994                           
 16995                           ; BSR set to: 15
 16996                           ;incstack = 0
 16997  015D74  0E01               	movlw	1
 16998  015D76  0100               	movlb	0	; () banked
 16999  015D78  6F6F               	movwf	_CANisTxReady$3235& (0+255),b
 17000                           
 17001                           ; BSR set to: 0
 17002  015D7A  010F               	movlb	15	; () banked
 17003  015D7C  A740               	btfss	64,3,b	;volatile
 17004  015D7E  D009               	goto	l568
 17005                           
 17006                           ; BSR set to: 15
 17007  015D80  010F               	movlb	15	; () banked
 17008  015D82  A730               	btfss	48,3,b	;volatile
 17009  015D84  D006               	goto	l568
 17010                           
 17011                           ; BSR set to: 15
 17012  015D86  010F               	movlb	15	; () banked
 17013  015D88  A720               	btfss	32,3,b	;volatile
 17014  015D8A  D003               	goto	l568
 17015                           
 17016                           ; BSR set to: 15
 17017  015D8C  0E00               	movlw	0
 17018  015D8E  0100               	movlb	0	; () banked
 17019  015D90  6F6F               	movwf	_CANisTxReady$3235& (0+255),b
 17020  015D92                     l568:
 17021  015D92  0100               	movlb	0	; () banked
 17022  015D94  516F               	movf	_CANisTxReady$3235& (0+255),w,b
 17023  015D96  0012               	return	
 17024  015D98                     __end_of_CANisTxReady:
 17025                           	opt stack 0
 17026                           tblptru	equ	0xFF8
 17027                           tblptrh	equ	0xFF7
 17028                           tblptrl	equ	0xFF6
 17029                           tablat	equ	0xFF5
 17030                           prodh	equ	0xFF4
 17031                           prodl	equ	0xFF3
 17032                           intcon	equ	0xFF2
 17033                           postinc0	equ	0xFEE
 17034                           wreg	equ	0xFE8
 17035                           indf2	equ	0xFDF
 17036                           postinc2	equ	0xFDE
 17037                           fsr2h	equ	0xFDA
 17038                           fsr2l	equ	0xFD9
 17039                           status	equ	0xFD8
 17040                           
 17041 ;; *************** function _ISR_bassa *****************
 17042 ;; Defined at:
 17043 ;;		line 138 in file "RemoteCan.c"
 17044 ;; Parameters:    Size  Location     Type
 17045 ;;		None
 17046 ;; Auto vars:     Size  Location     Type
 17047 ;;		None
 17048 ;; Return value:  Size  Location     Type
 17049 ;;		None               void
 17050 ;; Registers used:
 17051 ;;		wreg, status,2, status,0
 17052 ;; Tracked objects:
 17053 ;;		On entry : 0/0
 17054 ;;		On exit  : 0/0
 17055 ;;		Unchanged: 0/0
 17056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17059 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17060 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17061 ;;Total ram usage:       17 bytes
 17062 ;; Hardware stack levels used:    1
 17063 ;; Hardware stack levels required when called:    2
 17064 ;; This function calls:
 17065 ;;		Nothing
 17066 ;; This function is called by:
 17067 ;;		Interrupt level 1
 17068 ;; This function uses a non-reentrant model
 17069 ;;
 17070                           
 17071                           	psect	intcodelo
 17072  000018                     __pintcodelo:
 17073                           	opt stack 0
 17074  000018                     _ISR_bassa:
 17075                           	opt stack 21
 17076                           
 17077                           ; BSR set to: 0
 17078                           ;incstack = 0
 17079  000018  804E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 17080  00001A  CFD8 F02B          	movff	status,??_ISR_bassa
 17081  00001E  CFE8 F02C          	movff	wreg,??_ISR_bassa+1
 17082  000022  CFE0 F02D          	movff	bsr,??_ISR_bassa+2
 17083  000026  CFFA F02E          	movff	pclath,??_ISR_bassa+3
 17084  00002A  CFFB F02F          	movff	pclatu,??_ISR_bassa+4
 17085  00002E  CFE9 F030          	movff	fsr0l,??_ISR_bassa+5
 17086  000032  CFEA F031          	movff	fsr0h,??_ISR_bassa+6
 17087  000036  CFE1 F032          	movff	fsr1l,??_ISR_bassa+7
 17088  00003A  CFE2 F033          	movff	fsr1h,??_ISR_bassa+8
 17089  00003E  CFD9 F034          	movff	fsr2l,??_ISR_bassa+9
 17090  000042  CFDA F035          	movff	fsr2h,??_ISR_bassa+10
 17091  000046  CFF3 F036          	movff	prodl,??_ISR_bassa+11
 17092  00004A  CFF4 F037          	movff	prodh,??_ISR_bassa+12
 17093  00004E  CFF6 F038          	movff	tblptrl,??_ISR_bassa+13
 17094  000052  CFF7 F039          	movff	tblptrh,??_ISR_bassa+14
 17095  000056  CFF8 F03A          	movff	tblptru,??_ISR_bassa+15
 17096  00005A  CFF5 F03B          	movff	tablat,??_ISR_bassa+16
 17097                           
 17098                           ;RemoteCan.c: 139: if (PIR2bits.TMR3IF == 1) {
 17099  00005E  A2A1               	btfss	4001,1,c	;volatile
 17100  000060  D00B               	goto	i1l771
 17101                           
 17102                           ;RemoteCan.c: 140: time_counter++;
 17103  000062  0E01               	movlw	1
 17104  000064  2620               	addwf	_time_counter,f,c	;volatile
 17105  000066  0E00               	movlw	0
 17106  000068  2221               	addwfc	_time_counter+1,f,c	;volatile
 17107  00006A  2222               	addwfc	_time_counter+2,f,c	;volatile
 17108  00006C  2223               	addwfc	_time_counter+3,f,c	;volatile
 17109                           
 17110                           ;RemoteCan.c: 141: TMR3H = 0x63;
 17111  00006E  0E63               	movlw	99
 17112  000070  6EB3               	movwf	4019,c	;volatile
 17113                           
 17114                           ;RemoteCan.c: 142: TMR3L = 0xC0;
 17115  000072  0EC0               	movlw	192
 17116  000074  6EB2               	movwf	4018,c	;volatile
 17117                           
 17118                           ;RemoteCan.c: 143: PIR2bits.TMR3IF = 0;
 17119  000076  92A1               	bcf	4001,1,c	;volatile
 17120  000078                     i1l771:
 17121  000078  C03B  FFF5         	movff	??_ISR_bassa+16,tablat
 17122  00007C  C03A  FFF8         	movff	??_ISR_bassa+15,tblptru
 17123  000080  C039  FFF7         	movff	??_ISR_bassa+14,tblptrh
 17124  000084  C038  FFF6         	movff	??_ISR_bassa+13,tblptrl
 17125  000088  C037  FFF4         	movff	??_ISR_bassa+12,prodh
 17126  00008C  C036  FFF3         	movff	??_ISR_bassa+11,prodl
 17127  000090  C035  FFDA         	movff	??_ISR_bassa+10,fsr2h
 17128  000094  C034  FFD9         	movff	??_ISR_bassa+9,fsr2l
 17129  000098  C033  FFE2         	movff	??_ISR_bassa+8,fsr1h
 17130  00009C  C032  FFE1         	movff	??_ISR_bassa+7,fsr1l
 17131  0000A0  C031  FFEA         	movff	??_ISR_bassa+6,fsr0h
 17132  0000A4  C030  FFE9         	movff	??_ISR_bassa+5,fsr0l
 17133  0000A8  C02F  FFFB         	movff	??_ISR_bassa+4,pclatu
 17134  0000AC  C02E  FFFA         	movff	??_ISR_bassa+3,pclath
 17135  0000B0  C02D  FFE0         	movff	??_ISR_bassa+2,bsr
 17136  0000B4  C02C  FFE8         	movff	??_ISR_bassa+1,wreg
 17137  0000B8  C02B  FFD8         	movff	??_ISR_bassa,status
 17138  0000BC  904E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 17139  0000BE  0010               	retfie	
 17140  0000C0                     __end_of_ISR_bassa:
 17141                           	opt stack 0
 17142                           pclatu	equ	0xFFB
 17143                           pclath	equ	0xFFA
 17144                           tblptru	equ	0xFF8
 17145                           tblptrh	equ	0xFF7
 17146                           tblptrl	equ	0xFF6
 17147                           tablat	equ	0xFF5
 17148                           prodh	equ	0xFF4
 17149                           prodl	equ	0xFF3
 17150                           intcon	equ	0xFF2
 17151                           postinc0	equ	0xFEE
 17152                           fsr0h	equ	0xFEA
 17153                           fsr0l	equ	0xFE9
 17154                           wreg	equ	0xFE8
 17155                           fsr1h	equ	0xFE2
 17156                           fsr1l	equ	0xFE1
 17157                           bsr	equ	0xFE0
 17158                           indf2	equ	0xFDF
 17159                           postinc2	equ	0xFDE
 17160                           fsr2h	equ	0xFDA
 17161                           fsr2l	equ	0xFD9
 17162                           status	equ	0xFD8
 17163                           
 17164 ;; *************** function _ISR_alta *****************
 17165 ;; Defined at:
 17166 ;;		line 103 in file "RemoteCan.c"
 17167 ;; Parameters:    Size  Location     Type
 17168 ;;		None
 17169 ;; Auto vars:     Size  Location     Type
 17170 ;;  i               1   14[BANK0 ] unsigned char 
 17171 ;; Return value:  Size  Location     Type
 17172 ;;		None               void
 17173 ;; Registers used:
 17174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17175 ;; Tracked objects:
 17176 ;;		On entry : 0/0
 17177 ;;		On exit  : 0/0
 17178 ;;		Unchanged: 0/0
 17179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17181 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17182 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17183 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17184 ;;Total ram usage:       15 bytes
 17185 ;; Hardware stack levels used:    1
 17186 ;; Hardware stack levels required when called:    1
 17187 ;; This function calls:
 17188 ;;		_CANisRxReady
 17189 ;;		_CANreceiveMessage
 17190 ;;		i2_CANisTxReady
 17191 ;;		i2_CANsendMessage
 17192 ;; This function is called by:
 17193 ;;		Interrupt level 2
 17194 ;; This function uses a non-reentrant model
 17195 ;;
 17196                           
 17197                           	psect	intcode
 17198  000008                     __pintcode:
 17199                           	opt stack 0
 17200  000008                     _ISR_alta:
 17201                           	opt stack 21
 17202                           
 17203                           ;incstack = 0
 17204  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17205  00000A  CFFA F060          	movff	pclath,??_ISR_alta
 17206  00000E  CFFB F061          	movff	pclatu,??_ISR_alta+1
 17207  000012  EFDC  F0A8         	goto	int_func
 17208                           pclatu	equ	0xFFB
 17209                           pclath	equ	0xFFA
 17210                           tblptru	equ	0xFF8
 17211                           tblptrh	equ	0xFF7
 17212                           tblptrl	equ	0xFF6
 17213                           tablat	equ	0xFF5
 17214                           prodh	equ	0xFF4
 17215                           prodl	equ	0xFF3
 17216                           intcon	equ	0xFF2
 17217                           postinc0	equ	0xFEE
 17218                           fsr0h	equ	0xFEA
 17219                           fsr0l	equ	0xFE9
 17220                           wreg	equ	0xFE8
 17221                           fsr1h	equ	0xFE2
 17222                           fsr1l	equ	0xFE1
 17223                           bsr	equ	0xFE0
 17224                           indf2	equ	0xFDF
 17225                           postinc2	equ	0xFDE
 17226                           fsr2h	equ	0xFDA
 17227                           fsr2l	equ	0xFD9
 17228                           status	equ	0xFD8
 17229                           
 17230                           	psect	intcode_body
 17231  0151B8                     __pintcode_body:
 17232                           	opt stack 21
 17233  0151B8                     int_func:
 17234                           	opt stack 21
 17235  0151B8  CFE9 F062          	movff	fsr0l,??_ISR_alta+2
 17236  0151BC  CFEA F063          	movff	fsr0h,??_ISR_alta+3
 17237  0151C0  CFE1 F064          	movff	fsr1l,??_ISR_alta+4
 17238  0151C4  CFE2 F065          	movff	fsr1h,??_ISR_alta+5
 17239  0151C8  CFD9 F066          	movff	fsr2l,??_ISR_alta+6
 17240  0151CC  CFDA F067          	movff	fsr2h,??_ISR_alta+7
 17241  0151D0  CFF3 F068          	movff	prodl,??_ISR_alta+8
 17242  0151D4  CFF4 F069          	movff	prodh,??_ISR_alta+9
 17243  0151D8  CFF6 F06A          	movff	tblptrl,??_ISR_alta+10
 17244  0151DC  CFF7 F06B          	movff	tblptrh,??_ISR_alta+11
 17245  0151E0  CFF8 F06C          	movff	tblptru,??_ISR_alta+12
 17246  0151E4  CFF5 F06D          	movff	tablat,??_ISR_alta+13
 17247                           
 17248                           ;RemoteCan.c: 104: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 17249  0151E8  A2A4               	btfss	4004,1,c	;volatile
 17250  0151EA  B0A4               	btfsc	4004,0,c	;volatile
 17251  0151EC  D001               	goto	i2l9102
 17252  0151EE  D074               	goto	i2l767
 17253  0151F0                     i2l9102:
 17254                           
 17255                           ;RemoteCan.c: 105: if (CANisRxReady()) {
 17256  0151F0  EC2F  F0AF         	call	_CANisRxReady	;wreg free
 17257  0151F4  0900               	iorlw	0
 17258  0151F6  B4D8               	btfsc	status,2,c
 17259  0151F8  D06B               	goto	i2l9146
 17260                           
 17261                           ;RemoteCan.c: 106: CANreceiveMessage(&msg);
 17262  0151FA  0E06               	movlw	low _msg
 17263  0151FC  6E3C               	movwf	CANreceiveMessage@msg,c
 17264  0151FE  0E01               	movlw	high _msg
 17265  015200  6E3D               	movwf	CANreceiveMessage@msg+1,c
 17266  015202  ECC2  F096         	call	_CANreceiveMessage	;wreg free
 17267                           
 17268                           ;RemoteCan.c: 107: RTR_Flag = msg.RTR;
 17269  015206  0101               	movlb	1	; () banked
 17270  015208  A114               	btfss	(_msg+14)& (0+255),0,b
 17271  01520A  D002               	goto	i2u1217_40
 17272  01520C  884C               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17273  01520E  D001               	goto	i2l9108
 17274  015210                     i2u1217_40:
 17275  015210  984C               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17276  015212                     i2l9108:
 17277                           
 17278                           ;RemoteCan.c: 108: id = msg.identifier;
 17279  015212  C106  F00C         	movff	_msg,_id	;volatile
 17280  015216  C107  F00D         	movff	_msg+1,_id+1	;volatile
 17281  01521A  C108  F00E         	movff	_msg+2,_id+2	;volatile
 17282  01521E  C109  F00F         	movff	_msg+3,_id+3	;volatile
 17283                           
 17284                           ;RemoteCan.c: 109: newMessageCan = 1;
 17285  015222  8E4C               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 17286                           
 17287                           ;RemoteCan.c: 110: if (id == 0b00000000110) {
 17288  015224  0E06               	movlw	6
 17289  015226  180C               	xorwf	_id,w,c	;volatile
 17290  015228  100D               	iorwf	_id+1,w,c	;volatile
 17291  01522A  100E               	iorwf	_id+2,w,c	;volatile
 17292  01522C  100F               	iorwf	_id+3,w,c	;volatile
 17293  01522E  A4D8               	btfss	status,2,c
 17294  015230  D01F               	goto	i2l9126
 17295                           
 17296                           ;RemoteCan.c: 111: for (unsigned char i = 0; i < 8; i++) {
 17297  015232  0E00               	movlw	0
 17298  015234  0100               	movlb	0	; () banked
 17299  015236  6F6E               	movwf	ISR_alta@i& (0+255),b
 17300  015238                     i2l9116:
 17301                           
 17302                           ; BSR set to: 0
 17303  015238  0E07               	movlw	7
 17304  01523A  0100               	movlb	0	; () banked
 17305  01523C  656E               	cpfsgt	ISR_alta@i& (0+255),b
 17306  01523E  D001               	goto	i2l9120
 17307  015240  D017               	goto	i2l9126
 17308  015242                     i2l9120:
 17309                           
 17310                           ; BSR set to: 0
 17311                           ;RemoteCan.c: 112: data_speed_rx[i] = msg.data[i];
 17312  015242  0100               	movlb	0	; () banked
 17313  015244  516E               	movf	ISR_alta@i& (0+255),w,b
 17314  015246  0D01               	mullw	1
 17315  015248  0E0A               	movlw	low (_msg+4)
 17316  01524A  24F3               	addwf	prodl,w,c
 17317  01524C  6ED9               	movwf	fsr2l,c
 17318  01524E  0E01               	movlw	high (_msg+4)
 17319  015250  20F4               	addwfc	prodh,w,c
 17320  015252  6EDA               	movwf	fsr2h,c
 17321  015254  0100               	movlb	0	; () banked
 17322  015256  516E               	movf	ISR_alta@i& (0+255),w,b
 17323  015258  0D01               	mullw	1
 17324  01525A  0E01               	movlw	low _data_speed_rx
 17325  01525C  24F3               	addwf	prodl,w,c
 17326  01525E  6EE1               	movwf	fsr1l,c
 17327  015260  0E00               	movlw	high _data_speed_rx
 17328  015262  20F4               	addwfc	prodh,w,c
 17329  015264  6EE2               	movwf	fsr1h,c
 17330  015266  CFDF FFE7          	movff	indf2,indf1
 17331                           
 17332                           ; BSR set to: 0
 17333  01526A  0100               	movlb	0	; () banked
 17334  01526C  2B6E               	incf	ISR_alta@i& (0+255),f,b
 17335  01526E  D7E4               	goto	i2l9116
 17336  015270                     i2l9126:
 17337                           
 17338                           ;RemoteCan.c: 113: }
 17339                           ;RemoteCan.c: 114: }
 17340                           ;RemoteCan.c: 115: if (id == 0b00000000010) {
 17341  015270  0E02               	movlw	2
 17342  015272  180C               	xorwf	_id,w,c	;volatile
 17343  015274  100D               	iorwf	_id+1,w,c	;volatile
 17344  015276  100E               	iorwf	_id+2,w,c	;volatile
 17345  015278  100F               	iorwf	_id+3,w,c	;volatile
 17346  01527A  B4D8               	btfsc	status,2,c
 17347                           
 17348                           ;RemoteCan.c: 116: if (RTR_Flag == 1) {
 17349  01527C  A84C               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 17350  01527E  D028               	goto	i2l9146
 17351                           
 17352                           ;RemoteCan.c: 117: pr_time_4 = time_counter;
 17353  015280  C020  F014         	movff	_time_counter,_pr_time_4	;volatile
 17354  015284  C021  F015         	movff	_time_counter+1,_pr_time_4+1	;volatile
 17355  015288  C022  F016         	movff	_time_counter+2,_pr_time_4+2	;volatile
 17356  01528C  C023  F017         	movff	_time_counter+3,_pr_time_4+3	;volatile
 17357                           
 17358                           ;RemoteCan.c: 118: data[0] = 0x03;
 17359  015290  0E03               	movlw	3
 17360  015292  6E2A               	movwf	_data,c
 17361                           
 17362                           ;RemoteCan.c: 119: _delay((unsigned long)((10)*(16000000/4000000.0)));
 17363  015294  0E0D               	movlw	13
 17364  015296                     i2u1250_47:
 17365  015296  2EE8               	decfsz	wreg,f,c
 17366  015298  D7FE               	goto	i2u1250_47
 17367  01529A  F000               	nop	
 17368  01529C                     i2l9136:
 17369  01529C  ECDD  F0AE         	call	i2_CANisTxReady	;wreg free
 17370  0152A0  06E8               	decf	wreg,f,c
 17371  0152A2  A4D8               	btfss	status,2,c
 17372  0152A4  D7FB               	goto	i2l9136
 17373                           
 17374                           ;RemoteCan.c: 121: CANsendMessage(0b00000000010, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 17375  0152A6  0E02               	movlw	2
 17376  0152A8  6E3C               	movwf	i2CANsendMessage@identifier,c
 17377  0152AA  0E00               	movlw	0
 17378  0152AC  6E3D               	movwf	i2CANsendMessage@identifier+1,c
 17379  0152AE  0E00               	movlw	0
 17380  0152B0  6E3E               	movwf	i2CANsendMessage@identifier+2,c
 17381  0152B2  0E00               	movlw	0
 17382  0152B4  6E3F               	movwf	i2CANsendMessage@identifier+3,c
 17383  0152B6  0E2A               	movlw	low _data
 17384  0152B8  6E40               	movwf	i2CANsendMessage@data,c
 17385  0152BA  0E00               	movlw	high _data
 17386  0152BC  6E41               	movwf	i2CANsendMessage@data+1,c
 17387  0152BE  0E08               	movlw	8
 17388  0152C0  6E42               	movwf	i2CANsendMessage@dataLength,c
 17389  0152C2  0EBC               	movlw	188
 17390  0152C4  6E43               	movwf	i2CANsendMessage@flags,c
 17391  0152C6  ECED  F090         	call	i2_CANsendMessage	;wreg free
 17392                           
 17393                           ;RemoteCan.c: 124: MotoreFlag = 1;
 17394  0152CA  864C               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 17395                           
 17396                           ;RemoteCan.c: 125: AbsFlag = 0;
 17397  0152CC  904C               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 17398                           
 17399                           ;RemoteCan.c: 126: SterzoFlag = 0;
 17400  0152CE  9A4C               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 17401  0152D0                     i2l9146:
 17402                           
 17403                           ;RemoteCan.c: 127: }
 17404                           ;RemoteCan.c: 129: }
 17405                           ;RemoteCan.c: 130: }
 17406                           ;RemoteCan.c: 131: PIR3bits.RXB1IF = 0;
 17407  0152D0  92A4               	bcf	4004,1,c	;volatile
 17408                           
 17409                           ;RemoteCan.c: 132: PIR3bits.RXB0IF = 0;
 17410  0152D2  90A4               	bcf	4004,0,c	;volatile
 17411                           
 17412                           ;RemoteCan.c: 133: LATDbits.LATD2 = 1;
 17413  0152D4  848C               	bsf	3980,2,c	;volatile
 17414                           
 17415                           ;RemoteCan.c: 134: LATDbits.LATD3 = 1;
 17416  0152D6  868C               	bsf	3980,3,c	;volatile
 17417  0152D8                     i2l767:
 17418  0152D8  C06D  FFF5         	movff	??_ISR_alta+13,tablat
 17419  0152DC  C06C  FFF8         	movff	??_ISR_alta+12,tblptru
 17420  0152E0  C06B  FFF7         	movff	??_ISR_alta+11,tblptrh
 17421  0152E4  C06A  FFF6         	movff	??_ISR_alta+10,tblptrl
 17422  0152E8  C069  FFF4         	movff	??_ISR_alta+9,prodh
 17423  0152EC  C068  FFF3         	movff	??_ISR_alta+8,prodl
 17424  0152F0  C067  FFDA         	movff	??_ISR_alta+7,fsr2h
 17425  0152F4  C066  FFD9         	movff	??_ISR_alta+6,fsr2l
 17426  0152F8  C065  FFE2         	movff	??_ISR_alta+5,fsr1h
 17427  0152FC  C064  FFE1         	movff	??_ISR_alta+4,fsr1l
 17428  015300  C063  FFEA         	movff	??_ISR_alta+3,fsr0h
 17429  015304  C062  FFE9         	movff	??_ISR_alta+2,fsr0l
 17430  015308  C061  FFFB         	movff	??_ISR_alta+1,pclatu
 17431  01530C  C060  FFFA         	movff	??_ISR_alta,pclath
 17432  015310  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17433  015312  0011               	retfie		f
 17434  015314                     __end_of_ISR_alta:
 17435                           	opt stack 0
 17436                           pclatu	equ	0xFFB
 17437                           pclath	equ	0xFFA
 17438                           tblptru	equ	0xFF8
 17439                           tblptrh	equ	0xFF7
 17440                           tblptrl	equ	0xFF6
 17441                           tablat	equ	0xFF5
 17442                           prodh	equ	0xFF4
 17443                           prodl	equ	0xFF3
 17444                           intcon	equ	0xFF2
 17445                           postinc0	equ	0xFEE
 17446                           fsr0h	equ	0xFEA
 17447                           fsr0l	equ	0xFE9
 17448                           wreg	equ	0xFE8
 17449                           indf1	equ	0xFE7
 17450                           fsr1h	equ	0xFE2
 17451                           fsr1l	equ	0xFE1
 17452                           bsr	equ	0xFE0
 17453                           indf2	equ	0xFDF
 17454                           postinc2	equ	0xFDE
 17455                           fsr2h	equ	0xFDA
 17456                           fsr2l	equ	0xFD9
 17457                           status	equ	0xFD8
 17458                           
 17459 ;; *************** function i2_CANsendMessage *****************
 17460 ;; Defined at:
 17461 ;;		line 294 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 17462 ;; Parameters:    Size  Location     Type
 17463 ;;  identifier      4   17[COMRAM] unsigned long 
 17464 ;;  data            2   21[COMRAM] PTR unsigned char 
 17465 ;;		 -> data_speed(1), park_assist_state(8), data_brake(1), data_steering(1), 
 17466 ;;		 -> data(1), 
 17467 ;;  dataLength      1   23[COMRAM] unsigned char 
 17468 ;;  flags           1   24[COMRAM] enum E16909
 17469 ;; Auto vars:     Size  Location     Type
 17470 ;;  CANsendMessa    4   29[COMRAM] unsigned long 
 17471 ;; Return value:  Size  Location     Type
 17472 ;;		None               void
 17473 ;; Registers used:
 17474 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17475 ;; Tracked objects:
 17476 ;;		On entry : 0/0
 17477 ;;		On exit  : 0/0
 17478 ;;		Unchanged: 0/0
 17479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17480 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17481 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17482 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17483 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17484 ;;Total ram usage:       16 bytes
 17485 ;; Hardware stack levels used:    1
 17486 ;; This function calls:
 17487 ;;		Nothing
 17488 ;; This function is called by:
 17489 ;;		_ISR_alta
 17490 ;; This function uses a non-reentrant model
 17491 ;;
 17492                           
 17493                           	psect	text49
 17494  0121DA                     __ptext49:
 17495                           	opt stack 0
 17496  0121DA                     i2_CANsendMessage:
 17497                           	opt stack 21
 17498                           
 17499                           ;inc\CANlib.h: 296: unsigned long tamp;
 17500                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 17501                           
 17502                           ;incstack = 0
 17503  0121DA  010F               	movlb	15	; () banked
 17504  0121DC  B740               	btfsc	64,3,b	;volatile
 17505  0121DE  D115               	goto	i2l375
 17506                           
 17507                           ; BSR set to: 15
 17508                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 17509  0121E0  C042  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 17510                           
 17511                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 17512  0121E4  AC43               	btfss	i2CANsendMessage@flags,6,c
 17513  0121E6  D003               	goto	i2l376
 17514                           
 17515                           ; BSR set to: 15
 17516                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 17517  0121E8  010F               	movlb	15	; () banked
 17518  0121EA  8D45               	bsf	69,6,b	;volatile
 17519  0121EC  D002               	goto	i2l377
 17520  0121EE                     i2l376:
 17521                           
 17522                           ; BSR set to: 15
 17523                           ;inc\CANlib.h: 302: else
 17524                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 17525  0121EE  010F               	movlb	15	; () banked
 17526  0121F0  9D45               	bcf	69,6,b	;volatile
 17527  0121F2                     i2l377:
 17528                           
 17529                           ; BSR set to: 15
 17530                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 17531  0121F2  A643               	btfss	i2CANsendMessage@flags,3,c
 17532  0121F4  D066               	goto	i2l378
 17533                           
 17534                           ; BSR set to: 15
 17535                           ;inc\CANlib.h: 306: {
 17536                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 17537  0121F6  503C               	movf	i2CANsendMessage@identifier,w,c
 17538  0121F8  6E48               	movwf	i2CANsendMessage@tamp,c
 17539  0121FA  6A49               	clrf	i2CANsendMessage@tamp+1,c
 17540  0121FC  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 17541  0121FE  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 17542                           
 17543                           ; BSR set to: 15
 17544                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 17545  012200  C048  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 17546                           
 17547                           ; BSR set to: 15
 17548                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 17549  012204  0E00               	movlw	0
 17550  012206  143C               	andwf	i2CANsendMessage@identifier,w,c
 17551  012208  6E48               	movwf	i2CANsendMessage@tamp,c
 17552  01220A  0EFF               	movlw	255
 17553  01220C  143D               	andwf	i2CANsendMessage@identifier+1,w,c
 17554  01220E  6E49               	movwf	i2CANsendMessage@tamp+1,c
 17555  012210  0E00               	movlw	0
 17556  012212  143E               	andwf	i2CANsendMessage@identifier+2,w,c
 17557  012214  6E4A               	movwf	i2CANsendMessage@tamp+2,c
 17558  012216  0E00               	movlw	0
 17559  012218  143F               	andwf	i2CANsendMessage@identifier+3,w,c
 17560  01221A  6E4B               	movwf	i2CANsendMessage@tamp+3,c
 17561                           
 17562                           ; BSR set to: 15
 17563                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 17564  01221C  C048  F044         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17565  012220  C049  F045         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17566  012224  C04A  F046         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17567  012228  C04B  F047         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17568  01222C  C045  F044         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 17569  012230  C046  F045         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 17570  012234  C047  F046         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 17571  012238  6A47               	clrf	??i2_CANsendMessage+3,c
 17572  01223A  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17573  01223E  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17574  012242  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17575  012246  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17576                           
 17577                           ; BSR set to: 15
 17578                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 17579  01224A  C048  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 17580                           
 17581                           ; BSR set to: 15
 17582                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 17583  01224E  0E00               	movlw	0
 17584  012250  010F               	movlb	15	; () banked
 17585  012252  6F42               	movwf	66,b	;volatile
 17586                           
 17587                           ; BSR set to: 15
 17588                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 17589  012254  010F               	movlb	15	; () banked
 17590  012256  8742               	bsf	66,3,b	;volatile
 17591                           
 17592                           ; BSR set to: 15
 17593                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 17594  012258  A03E               	btfss	i2CANsendMessage@identifier+2,0,c
 17595  01225A  D002               	goto	i2l379
 17596                           
 17597                           ; BSR set to: 15
 17598                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 17599  01225C  010F               	movlb	15	; () banked
 17600  01225E  8142               	bsf	66,0,b	;volatile
 17601  012260                     i2l379:
 17602                           
 17603                           ; BSR set to: 15
 17604                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 17605  012260  A23E               	btfss	i2CANsendMessage@identifier+2,1,c
 17606  012262  D002               	goto	i2l380
 17607                           
 17608                           ; BSR set to: 15
 17609                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 17610  012264  010F               	movlb	15	; () banked
 17611  012266  8342               	bsf	66,1,b	;volatile
 17612  012268                     i2l380:
 17613                           
 17614                           ; BSR set to: 15
 17615                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 17616  012268  A43E               	btfss	i2CANsendMessage@identifier+2,2,c
 17617  01226A  D002               	goto	i2l381
 17618                           
 17619                           ; BSR set to: 15
 17620                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 17621  01226C  010F               	movlb	15	; () banked
 17622  01226E  8B42               	bsf	66,5,b	;volatile
 17623  012270                     i2l381:
 17624                           
 17625                           ; BSR set to: 15
 17626                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 17627  012270  A63E               	btfss	i2CANsendMessage@identifier+2,3,c
 17628  012272  D002               	goto	i2l382
 17629                           
 17630                           ; BSR set to: 15
 17631                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 17632  012274  010F               	movlb	15	; () banked
 17633  012276  8D42               	bsf	66,6,b	;volatile
 17634  012278                     i2l382:
 17635                           
 17636                           ; BSR set to: 15
 17637                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 17638  012278  A83E               	btfss	i2CANsendMessage@identifier+2,4,c
 17639  01227A  D002               	goto	i2l8838
 17640                           
 17641                           ; BSR set to: 15
 17642                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 17643  01227C  010F               	movlb	15	; () banked
 17644  01227E  8F42               	bsf	66,7,b	;volatile
 17645  012280                     i2l8838:
 17646                           
 17647                           ; BSR set to: 15
 17648                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 17649  012280  C03C  F044         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 17650  012284  C03D  F045         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 17651  012288  C03E  F046         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 17652  01228C  C03F  F047         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 17653  012290  0E16               	movlw	22
 17654  012292  D005               	goto	i2u1171_40
 17655  012294                     i2u1171_45:
 17656  012294  90D8               	bcf	status,0,c
 17657  012296  3247               	rrcf	??i2_CANsendMessage+3,f,c
 17658  012298  3246               	rrcf	??i2_CANsendMessage+2,f,c
 17659  01229A  3245               	rrcf	??i2_CANsendMessage+1,f,c
 17660  01229C  3244               	rrcf	??i2_CANsendMessage,f,c
 17661  01229E                     i2u1171_40:
 17662  01229E  2EE8               	decfsz	wreg,f,c
 17663  0122A0  D7F9               	goto	i2u1171_45
 17664  0122A2  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17665  0122A6  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17666  0122AA  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17667  0122AE  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17668                           
 17669                           ; BSR set to: 15
 17670                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 17671  0122B2  5048               	movf	i2CANsendMessage@tamp,w,c
 17672  0122B4  6E48               	movwf	i2CANsendMessage@tamp,c
 17673  0122B6  6A49               	clrf	i2CANsendMessage@tamp+1,c
 17674  0122B8  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 17675  0122BA  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 17676                           
 17677                           ; BSR set to: 15
 17678                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 17679  0122BC  C048  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 17680                           
 17681                           ;inc\CANlib.h: 332: }
 17682  0122C0  D04D               	goto	i2l8858
 17683  0122C2                     i2l378:
 17684                           
 17685                           ; BSR set to: 15
 17686                           ;inc\CANlib.h: 334: else
 17687                           ;inc\CANlib.h: 336: {
 17688                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 17689  0122C2  010F               	movlb	15	; () banked
 17690  0122C4  9742               	bcf	66,3,b	;volatile
 17691                           
 17692                           ; BSR set to: 15
 17693                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 17694  0122C6  C03C  F044         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 17695  0122CA  C03D  F045         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 17696  0122CE  C03E  F046         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 17697  0122D2  C03F  F047         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 17698  0122D6  0E04               	movlw	4
 17699  0122D8  D005               	goto	i2u1172_40
 17700  0122DA                     i2u1172_45:
 17701  0122DA  90D8               	bcf	status,0,c
 17702  0122DC  3247               	rrcf	??i2_CANsendMessage+3,f,c
 17703  0122DE  3246               	rrcf	??i2_CANsendMessage+2,f,c
 17704  0122E0  3245               	rrcf	??i2_CANsendMessage+1,f,c
 17705  0122E2  3244               	rrcf	??i2_CANsendMessage,f,c
 17706  0122E4                     i2u1172_40:
 17707  0122E4  2EE8               	decfsz	wreg,f,c
 17708  0122E6  D7F9               	goto	i2u1172_45
 17709  0122E8  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17710  0122EC  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17711  0122F0  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17712  0122F4  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17713                           
 17714                           ; BSR set to: 15
 17715                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 17716  0122F8  5048               	movf	i2CANsendMessage@tamp,w,c
 17717  0122FA  6E48               	movwf	i2CANsendMessage@tamp,c
 17718  0122FC  6A49               	clrf	i2CANsendMessage@tamp+1,c
 17719  0122FE  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 17720  012300  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 17721                           
 17722                           ; BSR set to: 15
 17723                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 17724  012302  C048  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 17725                           
 17726                           ; BSR set to: 15
 17727                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 17728  012306  0E07               	movlw	7
 17729  012308  143C               	andwf	i2CANsendMessage@identifier,w,c
 17730  01230A  6E48               	movwf	i2CANsendMessage@tamp,c
 17731  01230C  0E00               	movlw	0
 17732  01230E  143D               	andwf	i2CANsendMessage@identifier+1,w,c
 17733  012310  6E49               	movwf	i2CANsendMessage@tamp+1,c
 17734  012312  0E00               	movlw	0
 17735  012314  143E               	andwf	i2CANsendMessage@identifier+2,w,c
 17736  012316  6E4A               	movwf	i2CANsendMessage@tamp+2,c
 17737  012318  0E00               	movlw	0
 17738  01231A  143F               	andwf	i2CANsendMessage@identifier+3,w,c
 17739  01231C  6E4B               	movwf	i2CANsendMessage@tamp+3,c
 17740                           
 17741                           ; BSR set to: 15
 17742                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 17743  01231E  C048  F044         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17744  012322  C049  F045         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17745  012326  C04A  F046         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17746  01232A  C04B  F047         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17747  01232E  0E05               	movlw	5
 17748  012330                     i2u1173_45:
 17749  012330  90D8               	bcf	status,0,c
 17750  012332  3644               	rlcf	??i2_CANsendMessage,f,c
 17751  012334  3645               	rlcf	??i2_CANsendMessage+1,f,c
 17752  012336  3646               	rlcf	??i2_CANsendMessage+2,f,c
 17753  012338  3647               	rlcf	??i2_CANsendMessage+3,f,c
 17754  01233A  2EE8               	decfsz	wreg,f,c
 17755  01233C  D7F9               	goto	i2u1173_45
 17756  01233E  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17757  012342  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17758  012346  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17759  01234A  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17760                           
 17761                           ; BSR set to: 15
 17762                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 17763  01234E  010F               	movlb	15	; () banked
 17764  012350  5142               	movf	66,w,b	;volatile
 17765  012352  0B1F               	andlw	31
 17766  012354  010F               	movlb	15	; () banked
 17767  012356  6F42               	movwf	66,b	;volatile
 17768                           
 17769                           ; BSR set to: 15
 17770                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 17771  012358  C048  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 17772  01235C                     i2l8858:
 17773                           
 17774                           ; BSR set to: 15
 17775                           ;inc\CANlib.h: 347: }
 17776                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 17777  01235C  A043               	btfss	i2CANsendMessage@flags,0,c
 17778  01235E  D003               	goto	i2l385
 17779                           
 17780                           ; BSR set to: 15
 17781                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 17782  012360  010F               	movlb	15	; () banked
 17783  012362  8140               	bsf	64,0,b	;volatile
 17784  012364  D002               	goto	i2l386
 17785  012366                     i2l385:
 17786                           
 17787                           ; BSR set to: 15
 17788                           ;inc\CANlib.h: 351: else
 17789                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 17790  012366  010F               	movlb	15	; () banked
 17791  012368  9140               	bcf	64,0,b	;volatile
 17792  01236A                     i2l386:
 17793                           
 17794                           ; BSR set to: 15
 17795                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 17796  01236A  A243               	btfss	i2CANsendMessage@flags,1,c
 17797  01236C  D003               	goto	i2l387
 17798                           
 17799                           ; BSR set to: 15
 17800                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 17801  01236E  010F               	movlb	15	; () banked
 17802  012370  8340               	bsf	64,1,b	;volatile
 17803  012372  D002               	goto	i2l8864
 17804  012374                     i2l387:
 17805                           
 17806                           ; BSR set to: 15
 17807                           ;inc\CANlib.h: 355: else
 17808                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 17809  012374  010F               	movlb	15	; () banked
 17810  012376  9340               	bcf	64,1,b	;volatile
 17811  012378                     i2l8864:
 17812                           
 17813                           ; BSR set to: 15
 17814                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 17815  012378  C040  FFD9         	movff	i2CANsendMessage@data,fsr2l
 17816  01237C  C041  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 17817  012380  50DF               	movf	indf2,w,c
 17818  012382  010F               	movlb	15	; () banked
 17819  012384  6F46               	movwf	70,b	;volatile
 17820                           
 17821                           ; BSR set to: 15
 17822                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 17823  012386  EE20 F001          	lfsr	2,1
 17824  01238A  5040               	movf	i2CANsendMessage@data,w,c
 17825  01238C  26D9               	addwf	fsr2l,f,c
 17826  01238E  5041               	movf	i2CANsendMessage@data+1,w,c
 17827  012390  22DA               	addwfc	fsr2h,f,c
 17828  012392  50DF               	movf	indf2,w,c
 17829  012394  010F               	movlb	15	; () banked
 17830  012396  6F47               	movwf	71,b	;volatile
 17831                           
 17832                           ; BSR set to: 15
 17833                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 17834  012398  EE20 F002          	lfsr	2,2
 17835  01239C  5040               	movf	i2CANsendMessage@data,w,c
 17836  01239E  26D9               	addwf	fsr2l,f,c
 17837  0123A0  5041               	movf	i2CANsendMessage@data+1,w,c
 17838  0123A2  22DA               	addwfc	fsr2h,f,c
 17839  0123A4  50DF               	movf	indf2,w,c
 17840  0123A6  010F               	movlb	15	; () banked
 17841  0123A8  6F48               	movwf	72,b	;volatile
 17842                           
 17843                           ; BSR set to: 15
 17844                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 17845  0123AA  EE20 F003          	lfsr	2,3
 17846  0123AE  5040               	movf	i2CANsendMessage@data,w,c
 17847  0123B0  26D9               	addwf	fsr2l,f,c
 17848  0123B2  5041               	movf	i2CANsendMessage@data+1,w,c
 17849  0123B4  22DA               	addwfc	fsr2h,f,c
 17850  0123B6  50DF               	movf	indf2,w,c
 17851  0123B8  010F               	movlb	15	; () banked
 17852  0123BA  6F49               	movwf	73,b	;volatile
 17853                           
 17854                           ; BSR set to: 15
 17855                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 17856  0123BC  EE20 F004          	lfsr	2,4
 17857  0123C0  5040               	movf	i2CANsendMessage@data,w,c
 17858  0123C2  26D9               	addwf	fsr2l,f,c
 17859  0123C4  5041               	movf	i2CANsendMessage@data+1,w,c
 17860  0123C6  22DA               	addwfc	fsr2h,f,c
 17861  0123C8  50DF               	movf	indf2,w,c
 17862  0123CA  010F               	movlb	15	; () banked
 17863  0123CC  6F4A               	movwf	74,b	;volatile
 17864                           
 17865                           ; BSR set to: 15
 17866                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 17867  0123CE  EE20 F005          	lfsr	2,5
 17868  0123D2  5040               	movf	i2CANsendMessage@data,w,c
 17869  0123D4  26D9               	addwf	fsr2l,f,c
 17870  0123D6  5041               	movf	i2CANsendMessage@data+1,w,c
 17871  0123D8  22DA               	addwfc	fsr2h,f,c
 17872  0123DA  50DF               	movf	indf2,w,c
 17873  0123DC  010F               	movlb	15	; () banked
 17874  0123DE  6F4B               	movwf	75,b	;volatile
 17875                           
 17876                           ; BSR set to: 15
 17877                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 17878  0123E0  EE20 F006          	lfsr	2,6
 17879  0123E4  5040               	movf	i2CANsendMessage@data,w,c
 17880  0123E6  26D9               	addwf	fsr2l,f,c
 17881  0123E8  5041               	movf	i2CANsendMessage@data+1,w,c
 17882  0123EA  22DA               	addwfc	fsr2h,f,c
 17883  0123EC  50DF               	movf	indf2,w,c
 17884  0123EE  010F               	movlb	15	; () banked
 17885  0123F0  6F4C               	movwf	76,b	;volatile
 17886                           
 17887                           ; BSR set to: 15
 17888                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 17889  0123F2  EE20 F007          	lfsr	2,7
 17890  0123F6  5040               	movf	i2CANsendMessage@data,w,c
 17891  0123F8  26D9               	addwf	fsr2l,f,c
 17892  0123FA  5041               	movf	i2CANsendMessage@data+1,w,c
 17893  0123FC  22DA               	addwfc	fsr2h,f,c
 17894  0123FE  50DF               	movf	indf2,w,c
 17895  012400  010F               	movlb	15	; () banked
 17896  012402  6F4D               	movwf	77,b	;volatile
 17897                           
 17898                           ; BSR set to: 15
 17899                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 17900  012404  010F               	movlb	15	; () banked
 17901  012406  8740               	bsf	64,3,b	;volatile
 17902                           
 17903                           ; BSR set to: 15
 17904                           ;inc\CANlib.h: 368: return;
 17905  012408  0012               	return	
 17906  01240A                     i2l375:
 17907                           
 17908                           ; BSR set to: 15
 17909                           ;inc\CANlib.h: 369: }
 17910                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 17911  01240A  010F               	movlb	15	; () banked
 17912  01240C  B730               	btfsc	48,3,b	;volatile
 17913  01240E  D115               	goto	i2l390
 17914                           
 17915                           ; BSR set to: 15
 17916                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 17917  012410  C042  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 17918                           
 17919                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 17920  012414  AC43               	btfss	i2CANsendMessage@flags,6,c
 17921  012416  D003               	goto	i2l391
 17922                           
 17923                           ; BSR set to: 15
 17924                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 17925  012418  010F               	movlb	15	; () banked
 17926  01241A  8D35               	bsf	53,6,b	;volatile
 17927  01241C  D002               	goto	i2l392
 17928  01241E                     i2l391:
 17929                           
 17930                           ; BSR set to: 15
 17931                           ;inc\CANlib.h: 378: else
 17932                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 17933  01241E  010F               	movlb	15	; () banked
 17934  012420  9D35               	bcf	53,6,b	;volatile
 17935  012422                     i2l392:
 17936                           
 17937                           ; BSR set to: 15
 17938                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 17939  012422  A643               	btfss	i2CANsendMessage@flags,3,c
 17940  012424  D066               	goto	i2l393
 17941                           
 17942                           ; BSR set to: 15
 17943                           ;inc\CANlib.h: 382: {
 17944                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 17945  012426  503C               	movf	i2CANsendMessage@identifier,w,c
 17946  012428  6E48               	movwf	i2CANsendMessage@tamp,c
 17947  01242A  6A49               	clrf	i2CANsendMessage@tamp+1,c
 17948  01242C  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 17949  01242E  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 17950                           
 17951                           ; BSR set to: 15
 17952                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 17953  012430  C048  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 17954                           
 17955                           ; BSR set to: 15
 17956                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 17957  012434  0E00               	movlw	0
 17958  012436  143C               	andwf	i2CANsendMessage@identifier,w,c
 17959  012438  6E48               	movwf	i2CANsendMessage@tamp,c
 17960  01243A  0EFF               	movlw	255
 17961  01243C  143D               	andwf	i2CANsendMessage@identifier+1,w,c
 17962  01243E  6E49               	movwf	i2CANsendMessage@tamp+1,c
 17963  012440  0E00               	movlw	0
 17964  012442  143E               	andwf	i2CANsendMessage@identifier+2,w,c
 17965  012444  6E4A               	movwf	i2CANsendMessage@tamp+2,c
 17966  012446  0E00               	movlw	0
 17967  012448  143F               	andwf	i2CANsendMessage@identifier+3,w,c
 17968  01244A  6E4B               	movwf	i2CANsendMessage@tamp+3,c
 17969                           
 17970                           ; BSR set to: 15
 17971                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 17972  01244C  C048  F044         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 17973  012450  C049  F045         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 17974  012454  C04A  F046         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 17975  012458  C04B  F047         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 17976  01245C  C045  F044         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 17977  012460  C046  F045         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 17978  012464  C047  F046         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 17979  012468  6A47               	clrf	??i2_CANsendMessage+3,c
 17980  01246A  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 17981  01246E  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 17982  012472  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 17983  012476  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 17984                           
 17985                           ; BSR set to: 15
 17986                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 17987  01247A  C048  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 17988                           
 17989                           ; BSR set to: 15
 17990                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 17991  01247E  0E00               	movlw	0
 17992  012480  010F               	movlb	15	; () banked
 17993  012482  6F32               	movwf	50,b	;volatile
 17994                           
 17995                           ; BSR set to: 15
 17996                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 17997  012484  010F               	movlb	15	; () banked
 17998  012486  8732               	bsf	50,3,b	;volatile
 17999                           
 18000                           ; BSR set to: 15
 18001                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 18002  012488  A03E               	btfss	i2CANsendMessage@identifier+2,0,c
 18003  01248A  D002               	goto	i2l394
 18004                           
 18005                           ; BSR set to: 15
 18006                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 18007  01248C  010F               	movlb	15	; () banked
 18008  01248E  8132               	bsf	50,0,b	;volatile
 18009  012490                     i2l394:
 18010                           
 18011                           ; BSR set to: 15
 18012                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 18013  012490  A23E               	btfss	i2CANsendMessage@identifier+2,1,c
 18014  012492  D002               	goto	i2l395
 18015                           
 18016                           ; BSR set to: 15
 18017                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 18018  012494  010F               	movlb	15	; () banked
 18019  012496  8332               	bsf	50,1,b	;volatile
 18020  012498                     i2l395:
 18021                           
 18022                           ; BSR set to: 15
 18023                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 18024  012498  A43E               	btfss	i2CANsendMessage@identifier+2,2,c
 18025  01249A  D002               	goto	i2l396
 18026                           
 18027                           ; BSR set to: 15
 18028                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 18029  01249C  010F               	movlb	15	; () banked
 18030  01249E  8B32               	bsf	50,5,b	;volatile
 18031  0124A0                     i2l396:
 18032                           
 18033                           ; BSR set to: 15
 18034                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 18035  0124A0  A63E               	btfss	i2CANsendMessage@identifier+2,3,c
 18036  0124A2  D002               	goto	i2l397
 18037                           
 18038                           ; BSR set to: 15
 18039                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 18040  0124A4  010F               	movlb	15	; () banked
 18041  0124A6  8D32               	bsf	50,6,b	;volatile
 18042  0124A8                     i2l397:
 18043                           
 18044                           ; BSR set to: 15
 18045                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 18046  0124A8  A83E               	btfss	i2CANsendMessage@identifier+2,4,c
 18047  0124AA  D002               	goto	i2l8914
 18048                           
 18049                           ; BSR set to: 15
 18050                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 18051  0124AC  010F               	movlb	15	; () banked
 18052  0124AE  8F32               	bsf	50,7,b	;volatile
 18053  0124B0                     i2l8914:
 18054                           
 18055                           ; BSR set to: 15
 18056                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 18057  0124B0  C03C  F044         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18058  0124B4  C03D  F045         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18059  0124B8  C03E  F046         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18060  0124BC  C03F  F047         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18061  0124C0  0E16               	movlw	22
 18062  0124C2  D005               	goto	i2u1184_40
 18063  0124C4                     i2u1184_45:
 18064  0124C4  90D8               	bcf	status,0,c
 18065  0124C6  3247               	rrcf	??i2_CANsendMessage+3,f,c
 18066  0124C8  3246               	rrcf	??i2_CANsendMessage+2,f,c
 18067  0124CA  3245               	rrcf	??i2_CANsendMessage+1,f,c
 18068  0124CC  3244               	rrcf	??i2_CANsendMessage,f,c
 18069  0124CE                     i2u1184_40:
 18070  0124CE  2EE8               	decfsz	wreg,f,c
 18071  0124D0  D7F9               	goto	i2u1184_45
 18072  0124D2  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18073  0124D6  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18074  0124DA  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18075  0124DE  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18076                           
 18077                           ; BSR set to: 15
 18078                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 18079  0124E2  5048               	movf	i2CANsendMessage@tamp,w,c
 18080  0124E4  6E48               	movwf	i2CANsendMessage@tamp,c
 18081  0124E6  6A49               	clrf	i2CANsendMessage@tamp+1,c
 18082  0124E8  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 18083  0124EA  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 18084                           
 18085                           ; BSR set to: 15
 18086                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 18087  0124EC  C048  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 18088                           
 18089                           ;inc\CANlib.h: 407: }
 18090  0124F0  D04D               	goto	i2l8934
 18091  0124F2                     i2l393:
 18092                           
 18093                           ; BSR set to: 15
 18094                           ;inc\CANlib.h: 409: else
 18095                           ;inc\CANlib.h: 411: {
 18096                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 18097  0124F2  010F               	movlb	15	; () banked
 18098  0124F4  9732               	bcf	50,3,b	;volatile
 18099                           
 18100                           ; BSR set to: 15
 18101                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 18102  0124F6  C03C  F044         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18103  0124FA  C03D  F045         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18104  0124FE  C03E  F046         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18105  012502  C03F  F047         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18106  012506  0E04               	movlw	4
 18107  012508  D005               	goto	i2u1185_40
 18108  01250A                     i2u1185_45:
 18109  01250A  90D8               	bcf	status,0,c
 18110  01250C  3247               	rrcf	??i2_CANsendMessage+3,f,c
 18111  01250E  3246               	rrcf	??i2_CANsendMessage+2,f,c
 18112  012510  3245               	rrcf	??i2_CANsendMessage+1,f,c
 18113  012512  3244               	rrcf	??i2_CANsendMessage,f,c
 18114  012514                     i2u1185_40:
 18115  012514  2EE8               	decfsz	wreg,f,c
 18116  012516  D7F9               	goto	i2u1185_45
 18117  012518  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18118  01251C  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18119  012520  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18120  012524  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18121                           
 18122                           ; BSR set to: 15
 18123                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 18124  012528  5048               	movf	i2CANsendMessage@tamp,w,c
 18125  01252A  6E48               	movwf	i2CANsendMessage@tamp,c
 18126  01252C  6A49               	clrf	i2CANsendMessage@tamp+1,c
 18127  01252E  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 18128  012530  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 18129                           
 18130                           ; BSR set to: 15
 18131                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 18132  012532  C048  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 18133                           
 18134                           ; BSR set to: 15
 18135                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 18136  012536  0E07               	movlw	7
 18137  012538  143C               	andwf	i2CANsendMessage@identifier,w,c
 18138  01253A  6E48               	movwf	i2CANsendMessage@tamp,c
 18139  01253C  0E00               	movlw	0
 18140  01253E  143D               	andwf	i2CANsendMessage@identifier+1,w,c
 18141  012540  6E49               	movwf	i2CANsendMessage@tamp+1,c
 18142  012542  0E00               	movlw	0
 18143  012544  143E               	andwf	i2CANsendMessage@identifier+2,w,c
 18144  012546  6E4A               	movwf	i2CANsendMessage@tamp+2,c
 18145  012548  0E00               	movlw	0
 18146  01254A  143F               	andwf	i2CANsendMessage@identifier+3,w,c
 18147  01254C  6E4B               	movwf	i2CANsendMessage@tamp+3,c
 18148                           
 18149                           ; BSR set to: 15
 18150                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 18151  01254E  C048  F044         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18152  012552  C049  F045         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18153  012556  C04A  F046         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18154  01255A  C04B  F047         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18155  01255E  0E05               	movlw	5
 18156  012560                     i2u1186_45:
 18157  012560  90D8               	bcf	status,0,c
 18158  012562  3644               	rlcf	??i2_CANsendMessage,f,c
 18159  012564  3645               	rlcf	??i2_CANsendMessage+1,f,c
 18160  012566  3646               	rlcf	??i2_CANsendMessage+2,f,c
 18161  012568  3647               	rlcf	??i2_CANsendMessage+3,f,c
 18162  01256A  2EE8               	decfsz	wreg,f,c
 18163  01256C  D7F9               	goto	i2u1186_45
 18164  01256E  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18165  012572  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18166  012576  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18167  01257A  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18168                           
 18169                           ; BSR set to: 15
 18170                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 18171  01257E  010F               	movlb	15	; () banked
 18172  012580  5132               	movf	50,w,b	;volatile
 18173  012582  0B1F               	andlw	31
 18174  012584  010F               	movlb	15	; () banked
 18175  012586  6F32               	movwf	50,b	;volatile
 18176                           
 18177                           ; BSR set to: 15
 18178                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 18179  012588  C048  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 18180  01258C                     i2l8934:
 18181                           
 18182                           ; BSR set to: 15
 18183                           ;inc\CANlib.h: 422: }
 18184                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 18185  01258C  A043               	btfss	i2CANsendMessage@flags,0,c
 18186  01258E  D003               	goto	i2l400
 18187                           
 18188                           ; BSR set to: 15
 18189                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 18190  012590  010F               	movlb	15	; () banked
 18191  012592  8130               	bsf	48,0,b	;volatile
 18192  012594  D002               	goto	i2l401
 18193  012596                     i2l400:
 18194                           
 18195                           ; BSR set to: 15
 18196                           ;inc\CANlib.h: 426: else
 18197                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 18198  012596  010F               	movlb	15	; () banked
 18199  012598  9130               	bcf	48,0,b	;volatile
 18200  01259A                     i2l401:
 18201                           
 18202                           ; BSR set to: 15
 18203                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 18204  01259A  A243               	btfss	i2CANsendMessage@flags,1,c
 18205  01259C  D003               	goto	i2l402
 18206                           
 18207                           ; BSR set to: 15
 18208                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 18209  01259E  010F               	movlb	15	; () banked
 18210  0125A0  8330               	bsf	48,1,b	;volatile
 18211  0125A2  D002               	goto	i2l8940
 18212  0125A4                     i2l402:
 18213                           
 18214                           ; BSR set to: 15
 18215                           ;inc\CANlib.h: 430: else
 18216                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 18217  0125A4  010F               	movlb	15	; () banked
 18218  0125A6  9330               	bcf	48,1,b	;volatile
 18219  0125A8                     i2l8940:
 18220                           
 18221                           ; BSR set to: 15
 18222                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 18223  0125A8  C040  FFD9         	movff	i2CANsendMessage@data,fsr2l
 18224  0125AC  C041  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 18225  0125B0  50DF               	movf	indf2,w,c
 18226  0125B2  010F               	movlb	15	; () banked
 18227  0125B4  6F36               	movwf	54,b	;volatile
 18228                           
 18229                           ; BSR set to: 15
 18230                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 18231  0125B6  EE20 F001          	lfsr	2,1
 18232  0125BA  5040               	movf	i2CANsendMessage@data,w,c
 18233  0125BC  26D9               	addwf	fsr2l,f,c
 18234  0125BE  5041               	movf	i2CANsendMessage@data+1,w,c
 18235  0125C0  22DA               	addwfc	fsr2h,f,c
 18236  0125C2  50DF               	movf	indf2,w,c
 18237  0125C4  010F               	movlb	15	; () banked
 18238  0125C6  6F37               	movwf	55,b	;volatile
 18239                           
 18240                           ; BSR set to: 15
 18241                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 18242  0125C8  EE20 F002          	lfsr	2,2
 18243  0125CC  5040               	movf	i2CANsendMessage@data,w,c
 18244  0125CE  26D9               	addwf	fsr2l,f,c
 18245  0125D0  5041               	movf	i2CANsendMessage@data+1,w,c
 18246  0125D2  22DA               	addwfc	fsr2h,f,c
 18247  0125D4  50DF               	movf	indf2,w,c
 18248  0125D6  010F               	movlb	15	; () banked
 18249  0125D8  6F38               	movwf	56,b	;volatile
 18250                           
 18251                           ; BSR set to: 15
 18252                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 18253  0125DA  EE20 F003          	lfsr	2,3
 18254  0125DE  5040               	movf	i2CANsendMessage@data,w,c
 18255  0125E0  26D9               	addwf	fsr2l,f,c
 18256  0125E2  5041               	movf	i2CANsendMessage@data+1,w,c
 18257  0125E4  22DA               	addwfc	fsr2h,f,c
 18258  0125E6  50DF               	movf	indf2,w,c
 18259  0125E8  010F               	movlb	15	; () banked
 18260  0125EA  6F39               	movwf	57,b	;volatile
 18261                           
 18262                           ; BSR set to: 15
 18263                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 18264  0125EC  EE20 F004          	lfsr	2,4
 18265  0125F0  5040               	movf	i2CANsendMessage@data,w,c
 18266  0125F2  26D9               	addwf	fsr2l,f,c
 18267  0125F4  5041               	movf	i2CANsendMessage@data+1,w,c
 18268  0125F6  22DA               	addwfc	fsr2h,f,c
 18269  0125F8  50DF               	movf	indf2,w,c
 18270  0125FA  010F               	movlb	15	; () banked
 18271  0125FC  6F3A               	movwf	58,b	;volatile
 18272                           
 18273                           ; BSR set to: 15
 18274                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 18275  0125FE  EE20 F005          	lfsr	2,5
 18276  012602  5040               	movf	i2CANsendMessage@data,w,c
 18277  012604  26D9               	addwf	fsr2l,f,c
 18278  012606  5041               	movf	i2CANsendMessage@data+1,w,c
 18279  012608  22DA               	addwfc	fsr2h,f,c
 18280  01260A  50DF               	movf	indf2,w,c
 18281  01260C  010F               	movlb	15	; () banked
 18282  01260E  6F3B               	movwf	59,b	;volatile
 18283                           
 18284                           ; BSR set to: 15
 18285                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 18286  012610  EE20 F006          	lfsr	2,6
 18287  012614  5040               	movf	i2CANsendMessage@data,w,c
 18288  012616  26D9               	addwf	fsr2l,f,c
 18289  012618  5041               	movf	i2CANsendMessage@data+1,w,c
 18290  01261A  22DA               	addwfc	fsr2h,f,c
 18291  01261C  50DF               	movf	indf2,w,c
 18292  01261E  010F               	movlb	15	; () banked
 18293  012620  6F3C               	movwf	60,b	;volatile
 18294                           
 18295                           ; BSR set to: 15
 18296                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 18297  012622  EE20 F007          	lfsr	2,7
 18298  012626  5040               	movf	i2CANsendMessage@data,w,c
 18299  012628  26D9               	addwf	fsr2l,f,c
 18300  01262A  5041               	movf	i2CANsendMessage@data+1,w,c
 18301  01262C  22DA               	addwfc	fsr2h,f,c
 18302  01262E  50DF               	movf	indf2,w,c
 18303  012630  010F               	movlb	15	; () banked
 18304  012632  6F3D               	movwf	61,b	;volatile
 18305                           
 18306                           ; BSR set to: 15
 18307                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 18308  012634  010F               	movlb	15	; () banked
 18309  012636  8730               	bsf	48,3,b	;volatile
 18310                           
 18311                           ; BSR set to: 15
 18312                           ;inc\CANlib.h: 444: return;
 18313  012638  0012               	return	
 18314  01263A                     i2l390:
 18315                           
 18316                           ; BSR set to: 15
 18317                           ;inc\CANlib.h: 445: }
 18318                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 18319  01263A  010F               	movlb	15	; () banked
 18320  01263C  B720               	btfsc	32,3,b	;volatile
 18321  01263E  0012               	return	
 18322                           
 18323                           ; BSR set to: 15
 18324                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 18325  012640  C042  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 18326                           
 18327                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 18328  012644  AC43               	btfss	i2CANsendMessage@flags,6,c
 18329  012646  D003               	goto	i2l405
 18330                           
 18331                           ; BSR set to: 15
 18332                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 18333  012648  010F               	movlb	15	; () banked
 18334  01264A  8D25               	bsf	37,6,b	;volatile
 18335  01264C  D002               	goto	i2l406
 18336  01264E                     i2l405:
 18337                           
 18338                           ; BSR set to: 15
 18339                           ;inc\CANlib.h: 454: else
 18340                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 18341  01264E  010F               	movlb	15	; () banked
 18342  012650  9D25               	bcf	37,6,b	;volatile
 18343  012652                     i2l406:
 18344                           
 18345                           ; BSR set to: 15
 18346                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 18347  012652  A643               	btfss	i2CANsendMessage@flags,3,c
 18348  012654  D066               	goto	i2l407
 18349                           
 18350                           ; BSR set to: 15
 18351                           ;inc\CANlib.h: 458: {
 18352                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 18353  012656  503C               	movf	i2CANsendMessage@identifier,w,c
 18354  012658  6E48               	movwf	i2CANsendMessage@tamp,c
 18355  01265A  6A49               	clrf	i2CANsendMessage@tamp+1,c
 18356  01265C  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 18357  01265E  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 18358                           
 18359                           ; BSR set to: 15
 18360                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 18361  012660  C048  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 18362                           
 18363                           ; BSR set to: 15
 18364                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 18365  012664  0E00               	movlw	0
 18366  012666  143C               	andwf	i2CANsendMessage@identifier,w,c
 18367  012668  6E48               	movwf	i2CANsendMessage@tamp,c
 18368  01266A  0EFF               	movlw	255
 18369  01266C  143D               	andwf	i2CANsendMessage@identifier+1,w,c
 18370  01266E  6E49               	movwf	i2CANsendMessage@tamp+1,c
 18371  012670  0E00               	movlw	0
 18372  012672  143E               	andwf	i2CANsendMessage@identifier+2,w,c
 18373  012674  6E4A               	movwf	i2CANsendMessage@tamp+2,c
 18374  012676  0E00               	movlw	0
 18375  012678  143F               	andwf	i2CANsendMessage@identifier+3,w,c
 18376  01267A  6E4B               	movwf	i2CANsendMessage@tamp+3,c
 18377                           
 18378                           ; BSR set to: 15
 18379                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 18380  01267C  C048  F044         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18381  012680  C049  F045         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18382  012684  C04A  F046         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18383  012688  C04B  F047         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18384  01268C  C045  F044         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 18385  012690  C046  F045         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 18386  012694  C047  F046         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 18387  012698  6A47               	clrf	??i2_CANsendMessage+3,c
 18388  01269A  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18389  01269E  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18390  0126A2  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18391  0126A6  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18392                           
 18393                           ; BSR set to: 15
 18394                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 18395  0126AA  C048  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 18396                           
 18397                           ; BSR set to: 15
 18398                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 18399  0126AE  0E00               	movlw	0
 18400  0126B0  010F               	movlb	15	; () banked
 18401  0126B2  6F22               	movwf	34,b	;volatile
 18402                           
 18403                           ; BSR set to: 15
 18404                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 18405  0126B4  010F               	movlb	15	; () banked
 18406  0126B6  8722               	bsf	34,3,b	;volatile
 18407                           
 18408                           ; BSR set to: 15
 18409                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 18410  0126B8  A03E               	btfss	i2CANsendMessage@identifier+2,0,c
 18411  0126BA  D002               	goto	i2l408
 18412                           
 18413                           ; BSR set to: 15
 18414                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 18415  0126BC  010F               	movlb	15	; () banked
 18416  0126BE  8122               	bsf	34,0,b	;volatile
 18417  0126C0                     i2l408:
 18418                           
 18419                           ; BSR set to: 15
 18420                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 18421  0126C0  A23E               	btfss	i2CANsendMessage@identifier+2,1,c
 18422  0126C2  D002               	goto	i2l409
 18423                           
 18424                           ; BSR set to: 15
 18425                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 18426  0126C4  010F               	movlb	15	; () banked
 18427  0126C6  8322               	bsf	34,1,b	;volatile
 18428  0126C8                     i2l409:
 18429                           
 18430                           ; BSR set to: 15
 18431                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 18432  0126C8  A43E               	btfss	i2CANsendMessage@identifier+2,2,c
 18433  0126CA  D002               	goto	i2l410
 18434                           
 18435                           ; BSR set to: 15
 18436                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 18437  0126CC  010F               	movlb	15	; () banked
 18438  0126CE  8B22               	bsf	34,5,b	;volatile
 18439  0126D0                     i2l410:
 18440                           
 18441                           ; BSR set to: 15
 18442                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 18443  0126D0  A63E               	btfss	i2CANsendMessage@identifier+2,3,c
 18444  0126D2  D002               	goto	i2l411
 18445                           
 18446                           ; BSR set to: 15
 18447                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 18448  0126D4  010F               	movlb	15	; () banked
 18449  0126D6  8D22               	bsf	34,6,b	;volatile
 18450  0126D8                     i2l411:
 18451                           
 18452                           ; BSR set to: 15
 18453                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 18454  0126D8  A83E               	btfss	i2CANsendMessage@identifier+2,4,c
 18455  0126DA  D002               	goto	i2l8990
 18456                           
 18457                           ; BSR set to: 15
 18458                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 18459  0126DC  010F               	movlb	15	; () banked
 18460  0126DE  8F22               	bsf	34,7,b	;volatile
 18461  0126E0                     i2l8990:
 18462                           
 18463                           ; BSR set to: 15
 18464                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 18465  0126E0  C03C  F044         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18466  0126E4  C03D  F045         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18467  0126E8  C03E  F046         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18468  0126EC  C03F  F047         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18469  0126F0  0E16               	movlw	22
 18470  0126F2  D005               	goto	i2u1197_40
 18471  0126F4                     i2u1197_45:
 18472  0126F4  90D8               	bcf	status,0,c
 18473  0126F6  3247               	rrcf	??i2_CANsendMessage+3,f,c
 18474  0126F8  3246               	rrcf	??i2_CANsendMessage+2,f,c
 18475  0126FA  3245               	rrcf	??i2_CANsendMessage+1,f,c
 18476  0126FC  3244               	rrcf	??i2_CANsendMessage,f,c
 18477  0126FE                     i2u1197_40:
 18478  0126FE  2EE8               	decfsz	wreg,f,c
 18479  012700  D7F9               	goto	i2u1197_45
 18480  012702  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18481  012706  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18482  01270A  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18483  01270E  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18484                           
 18485                           ; BSR set to: 15
 18486                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 18487  012712  5048               	movf	i2CANsendMessage@tamp,w,c
 18488  012714  6E48               	movwf	i2CANsendMessage@tamp,c
 18489  012716  6A49               	clrf	i2CANsendMessage@tamp+1,c
 18490  012718  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 18491  01271A  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 18492                           
 18493                           ; BSR set to: 15
 18494                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 18495  01271C  C048  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 18496                           
 18497                           ;inc\CANlib.h: 483: }
 18498  012720  D04D               	goto	i2l9010
 18499  012722                     i2l407:
 18500                           
 18501                           ; BSR set to: 15
 18502                           ;inc\CANlib.h: 485: else
 18503                           ;inc\CANlib.h: 487: {
 18504                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 18505  012722  010F               	movlb	15	; () banked
 18506  012724  9722               	bcf	34,3,b	;volatile
 18507                           
 18508                           ; BSR set to: 15
 18509                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 18510  012726  C03C  F044         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18511  01272A  C03D  F045         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18512  01272E  C03E  F046         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18513  012732  C03F  F047         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18514  012736  0E04               	movlw	4
 18515  012738  D005               	goto	i2u1198_40
 18516  01273A                     i2u1198_45:
 18517  01273A  90D8               	bcf	status,0,c
 18518  01273C  3247               	rrcf	??i2_CANsendMessage+3,f,c
 18519  01273E  3246               	rrcf	??i2_CANsendMessage+2,f,c
 18520  012740  3245               	rrcf	??i2_CANsendMessage+1,f,c
 18521  012742  3244               	rrcf	??i2_CANsendMessage,f,c
 18522  012744                     i2u1198_40:
 18523  012744  2EE8               	decfsz	wreg,f,c
 18524  012746  D7F9               	goto	i2u1198_45
 18525  012748  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18526  01274C  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18527  012750  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18528  012754  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18529                           
 18530                           ; BSR set to: 15
 18531                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 18532  012758  5048               	movf	i2CANsendMessage@tamp,w,c
 18533  01275A  6E48               	movwf	i2CANsendMessage@tamp,c
 18534  01275C  6A49               	clrf	i2CANsendMessage@tamp+1,c
 18535  01275E  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 18536  012760  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 18537                           
 18538                           ; BSR set to: 15
 18539                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 18540  012762  C048  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 18541                           
 18542                           ; BSR set to: 15
 18543                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 18544  012766  0E07               	movlw	7
 18545  012768  143C               	andwf	i2CANsendMessage@identifier,w,c
 18546  01276A  6E48               	movwf	i2CANsendMessage@tamp,c
 18547  01276C  0E00               	movlw	0
 18548  01276E  143D               	andwf	i2CANsendMessage@identifier+1,w,c
 18549  012770  6E49               	movwf	i2CANsendMessage@tamp+1,c
 18550  012772  0E00               	movlw	0
 18551  012774  143E               	andwf	i2CANsendMessage@identifier+2,w,c
 18552  012776  6E4A               	movwf	i2CANsendMessage@tamp+2,c
 18553  012778  0E00               	movlw	0
 18554  01277A  143F               	andwf	i2CANsendMessage@identifier+3,w,c
 18555  01277C  6E4B               	movwf	i2CANsendMessage@tamp+3,c
 18556                           
 18557                           ; BSR set to: 15
 18558                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 18559  01277E  C048  F044         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18560  012782  C049  F045         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18561  012786  C04A  F046         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18562  01278A  C04B  F047         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18563  01278E  0E05               	movlw	5
 18564  012790                     i2u1199_45:
 18565  012790  90D8               	bcf	status,0,c
 18566  012792  3644               	rlcf	??i2_CANsendMessage,f,c
 18567  012794  3645               	rlcf	??i2_CANsendMessage+1,f,c
 18568  012796  3646               	rlcf	??i2_CANsendMessage+2,f,c
 18569  012798  3647               	rlcf	??i2_CANsendMessage+3,f,c
 18570  01279A  2EE8               	decfsz	wreg,f,c
 18571  01279C  D7F9               	goto	i2u1199_45
 18572  01279E  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18573  0127A2  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18574  0127A6  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18575  0127AA  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18576                           
 18577                           ; BSR set to: 15
 18578                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 18579  0127AE  010F               	movlb	15	; () banked
 18580  0127B0  5122               	movf	34,w,b	;volatile
 18581  0127B2  0B1F               	andlw	31
 18582  0127B4  010F               	movlb	15	; () banked
 18583  0127B6  6F22               	movwf	34,b	;volatile
 18584                           
 18585                           ; BSR set to: 15
 18586                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 18587  0127B8  C048  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 18588  0127BC                     i2l9010:
 18589                           
 18590                           ; BSR set to: 15
 18591                           ;inc\CANlib.h: 498: }
 18592                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 18593  0127BC  A043               	btfss	i2CANsendMessage@flags,0,c
 18594  0127BE  D003               	goto	i2l414
 18595                           
 18596                           ; BSR set to: 15
 18597                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 18598  0127C0  010F               	movlb	15	; () banked
 18599  0127C2  8120               	bsf	32,0,b	;volatile
 18600  0127C4  D002               	goto	i2l415
 18601  0127C6                     i2l414:
 18602                           
 18603                           ; BSR set to: 15
 18604                           ;inc\CANlib.h: 502: else
 18605                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 18606  0127C6  010F               	movlb	15	; () banked
 18607  0127C8  9120               	bcf	32,0,b	;volatile
 18608  0127CA                     i2l415:
 18609                           
 18610                           ; BSR set to: 15
 18611                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 18612  0127CA  A243               	btfss	i2CANsendMessage@flags,1,c
 18613  0127CC  D003               	goto	i2l416
 18614                           
 18615                           ; BSR set to: 15
 18616                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 18617  0127CE  010F               	movlb	15	; () banked
 18618  0127D0  8320               	bsf	32,1,b	;volatile
 18619  0127D2  D002               	goto	i2l9016
 18620  0127D4                     i2l416:
 18621                           
 18622                           ; BSR set to: 15
 18623                           ;inc\CANlib.h: 506: else
 18624                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 18625  0127D4  010F               	movlb	15	; () banked
 18626  0127D6  9320               	bcf	32,1,b	;volatile
 18627  0127D8                     i2l9016:
 18628                           
 18629                           ; BSR set to: 15
 18630                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 18631  0127D8  C040  FFD9         	movff	i2CANsendMessage@data,fsr2l
 18632  0127DC  C041  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 18633  0127E0  50DF               	movf	indf2,w,c
 18634  0127E2  010F               	movlb	15	; () banked
 18635  0127E4  6F26               	movwf	38,b	;volatile
 18636                           
 18637                           ; BSR set to: 15
 18638                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 18639  0127E6  EE20 F001          	lfsr	2,1
 18640  0127EA  5040               	movf	i2CANsendMessage@data,w,c
 18641  0127EC  26D9               	addwf	fsr2l,f,c
 18642  0127EE  5041               	movf	i2CANsendMessage@data+1,w,c
 18643  0127F0  22DA               	addwfc	fsr2h,f,c
 18644  0127F2  50DF               	movf	indf2,w,c
 18645  0127F4  010F               	movlb	15	; () banked
 18646  0127F6  6F27               	movwf	39,b	;volatile
 18647                           
 18648                           ; BSR set to: 15
 18649                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 18650  0127F8  EE20 F002          	lfsr	2,2
 18651  0127FC  5040               	movf	i2CANsendMessage@data,w,c
 18652  0127FE  26D9               	addwf	fsr2l,f,c
 18653  012800  5041               	movf	i2CANsendMessage@data+1,w,c
 18654  012802  22DA               	addwfc	fsr2h,f,c
 18655  012804  50DF               	movf	indf2,w,c
 18656  012806  010F               	movlb	15	; () banked
 18657  012808  6F28               	movwf	40,b	;volatile
 18658                           
 18659                           ; BSR set to: 15
 18660                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 18661  01280A  EE20 F003          	lfsr	2,3
 18662  01280E  5040               	movf	i2CANsendMessage@data,w,c
 18663  012810  26D9               	addwf	fsr2l,f,c
 18664  012812  5041               	movf	i2CANsendMessage@data+1,w,c
 18665  012814  22DA               	addwfc	fsr2h,f,c
 18666  012816  50DF               	movf	indf2,w,c
 18667  012818  010F               	movlb	15	; () banked
 18668  01281A  6F29               	movwf	41,b	;volatile
 18669                           
 18670                           ; BSR set to: 15
 18671                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 18672  01281C  EE20 F004          	lfsr	2,4
 18673  012820  5040               	movf	i2CANsendMessage@data,w,c
 18674  012822  26D9               	addwf	fsr2l,f,c
 18675  012824  5041               	movf	i2CANsendMessage@data+1,w,c
 18676  012826  22DA               	addwfc	fsr2h,f,c
 18677  012828  50DF               	movf	indf2,w,c
 18678  01282A  010F               	movlb	15	; () banked
 18679  01282C  6F2A               	movwf	42,b	;volatile
 18680                           
 18681                           ; BSR set to: 15
 18682                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 18683  01282E  EE20 F005          	lfsr	2,5
 18684  012832  5040               	movf	i2CANsendMessage@data,w,c
 18685  012834  26D9               	addwf	fsr2l,f,c
 18686  012836  5041               	movf	i2CANsendMessage@data+1,w,c
 18687  012838  22DA               	addwfc	fsr2h,f,c
 18688  01283A  50DF               	movf	indf2,w,c
 18689  01283C  010F               	movlb	15	; () banked
 18690  01283E  6F2B               	movwf	43,b	;volatile
 18691                           
 18692                           ; BSR set to: 15
 18693                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 18694  012840  EE20 F006          	lfsr	2,6
 18695  012844  5040               	movf	i2CANsendMessage@data,w,c
 18696  012846  26D9               	addwf	fsr2l,f,c
 18697  012848  5041               	movf	i2CANsendMessage@data+1,w,c
 18698  01284A  22DA               	addwfc	fsr2h,f,c
 18699  01284C  50DF               	movf	indf2,w,c
 18700  01284E  010F               	movlb	15	; () banked
 18701  012850  6F2C               	movwf	44,b	;volatile
 18702                           
 18703                           ; BSR set to: 15
 18704                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 18705  012852  EE20 F007          	lfsr	2,7
 18706  012856  5040               	movf	i2CANsendMessage@data,w,c
 18707  012858  26D9               	addwf	fsr2l,f,c
 18708  01285A  5041               	movf	i2CANsendMessage@data+1,w,c
 18709  01285C  22DA               	addwfc	fsr2h,f,c
 18710  01285E  50DF               	movf	indf2,w,c
 18711  012860  010F               	movlb	15	; () banked
 18712  012862  6F2D               	movwf	45,b	;volatile
 18713                           
 18714                           ; BSR set to: 15
 18715                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 18716  012864  010F               	movlb	15	; () banked
 18717  012866  8720               	bsf	32,3,b	;volatile
 18718                           
 18719                           ; BSR set to: 15
 18720                           ;inc\CANlib.h: 520: return;
 18721  012868  0012               	return	
 18722  01286A                     __end_ofi2_CANsendMessage:
 18723                           	opt stack 0
 18724                           pclatu	equ	0xFFB
 18725                           pclath	equ	0xFFA
 18726                           tblptru	equ	0xFF8
 18727                           tblptrh	equ	0xFF7
 18728                           tblptrl	equ	0xFF6
 18729                           tablat	equ	0xFF5
 18730                           prodh	equ	0xFF4
 18731                           prodl	equ	0xFF3
 18732                           intcon	equ	0xFF2
 18733                           postinc0	equ	0xFEE
 18734                           fsr0h	equ	0xFEA
 18735                           fsr0l	equ	0xFE9
 18736                           wreg	equ	0xFE8
 18737                           indf1	equ	0xFE7
 18738                           fsr1h	equ	0xFE2
 18739                           fsr1l	equ	0xFE1
 18740                           bsr	equ	0xFE0
 18741                           indf2	equ	0xFDF
 18742                           postinc2	equ	0xFDE
 18743                           fsr2h	equ	0xFDA
 18744                           fsr2l	equ	0xFD9
 18745                           status	equ	0xFD8
 18746                           
 18747 ;; *************** function i2_CANisTxReady *****************
 18748 ;; Defined at:
 18749 ;;		line 1154 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 18750 ;; Parameters:    Size  Location     Type
 18751 ;;		None
 18752 ;; Auto vars:     Size  Location     Type
 18753 ;;		None
 18754 ;; Return value:  Size  Location     Type
 18755 ;;                  1    wreg      unsigned char 
 18756 ;; Registers used:
 18757 ;;		wreg, status,2
 18758 ;; Tracked objects:
 18759 ;;		On entry : 0/0
 18760 ;;		On exit  : 0/0
 18761 ;;		Unchanged: 0/0
 18762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18766 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18767 ;;Total ram usage:        1 bytes
 18768 ;; Hardware stack levels used:    1
 18769 ;; This function calls:
 18770 ;;		Nothing
 18771 ;; This function is called by:
 18772 ;;		_ISR_alta
 18773 ;; This function uses a non-reentrant model
 18774 ;;
 18775                           
 18776                           	psect	text50
 18777  015DBA                     __ptext50:
 18778                           	opt stack 0
 18779  015DBA                     i2_CANisTxReady:
 18780                           	opt stack 21
 18781                           
 18782                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 18783                           
 18784                           ; BSR set to: 15
 18785                           ;incstack = 0
 18786  015DBA  0E01               	movlw	1
 18787  015DBC  6E3C               	movwf	i2_CANisTxReady$3235,c
 18788  015DBE  010F               	movlb	15	; () banked
 18789  015DC0  A740               	btfss	64,3,b	;volatile
 18790  015DC2  D008               	goto	i2l568
 18791                           
 18792                           ; BSR set to: 15
 18793  015DC4  010F               	movlb	15	; () banked
 18794  015DC6  A730               	btfss	48,3,b	;volatile
 18795  015DC8  D005               	goto	i2l568
 18796                           
 18797                           ; BSR set to: 15
 18798  015DCA  010F               	movlb	15	; () banked
 18799  015DCC  A720               	btfss	32,3,b	;volatile
 18800  015DCE  D002               	goto	i2l568
 18801                           
 18802                           ; BSR set to: 15
 18803  015DD0  0E00               	movlw	0
 18804  015DD2  6E3C               	movwf	i2_CANisTxReady$3235,c
 18805  015DD4                     i2l568:
 18806                           
 18807                           ; BSR set to: 15
 18808  015DD4  503C               	movf	i2_CANisTxReady$3235,w,c
 18809  015DD6  0012               	return	
 18810  015DD8                     __end_ofi2_CANisTxReady:
 18811                           	opt stack 0
 18812                           pclatu	equ	0xFFB
 18813                           pclath	equ	0xFFA
 18814                           tblptru	equ	0xFF8
 18815                           tblptrh	equ	0xFF7
 18816                           tblptrl	equ	0xFF6
 18817                           tablat	equ	0xFF5
 18818                           prodh	equ	0xFF4
 18819                           prodl	equ	0xFF3
 18820                           intcon	equ	0xFF2
 18821                           postinc0	equ	0xFEE
 18822                           fsr0h	equ	0xFEA
 18823                           fsr0l	equ	0xFE9
 18824                           wreg	equ	0xFE8
 18825                           indf1	equ	0xFE7
 18826                           fsr1h	equ	0xFE2
 18827                           fsr1l	equ	0xFE1
 18828                           bsr	equ	0xFE0
 18829                           indf2	equ	0xFDF
 18830                           postinc2	equ	0xFDE
 18831                           fsr2h	equ	0xFDA
 18832                           fsr2l	equ	0xFD9
 18833                           status	equ	0xFD8
 18834                           
 18835 ;; *************** function _CANreceiveMessage *****************
 18836 ;; Defined at:
 18837 ;;		line 528 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 18838 ;; Parameters:    Size  Location     Type
 18839 ;;  msg             2   17[COMRAM] PTR struct .
 18840 ;;		 -> msg(15), 
 18841 ;; Auto vars:     Size  Location     Type
 18842 ;;  tamp            1   28[COMRAM] unsigned char 
 18843 ;;  error           1   27[COMRAM] unsigned char 
 18844 ;; Return value:  Size  Location     Type
 18845 ;;                  1    wreg      unsigned char 
 18846 ;; Registers used:
 18847 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18848 ;; Tracked objects:
 18849 ;;		On entry : 0/0
 18850 ;;		On exit  : 0/0
 18851 ;;		Unchanged: 0/0
 18852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18853 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18854 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18855 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18856 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18857 ;;Total ram usage:       12 bytes
 18858 ;; Hardware stack levels used:    1
 18859 ;; This function calls:
 18860 ;;		Nothing
 18861 ;; This function is called by:
 18862 ;;		_ISR_alta
 18863 ;; This function uses a non-reentrant model
 18864 ;;
 18865                           
 18866                           	psect	text51
 18867  012D84                     __ptext51:
 18868                           	opt stack 0
 18869  012D84                     _CANreceiveMessage:
 18870                           	opt stack 21
 18871                           
 18872                           ;inc\CANlib.h: 530: BYTE tamp;
 18873                           ;inc\CANlib.h: 531: BYTE error = 0;
 18874                           
 18875                           ; BSR set to: 15
 18876                           ;incstack = 0
 18877  012D84  0E00               	movlw	0
 18878  012D86  6E46               	movwf	CANreceiveMessage@error,c
 18879                           
 18880                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 18881  012D88  BE74               	btfsc	3956,7,c	;volatile
 18882                           
 18883                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 18884  012D8A  8046               	bsf	CANreceiveMessage@error,0,c
 18885                           
 18886                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 18887  012D8C  BC74               	btfsc	3956,6,c	;volatile
 18888                           
 18889                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 18890  012D8E  8246               	bsf	CANreceiveMessage@error,1,c
 18891                           
 18892                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 18893  012D90  010F               	movlb	15	; () banked
 18894  012D92  AF50               	btfss	80,7,b	;volatile
 18895  012D94  D143               	goto	i2l422
 18896                           
 18897                           ; BSR set to: 15
 18898                           ;inc\CANlib.h: 541: {
 18899                           ;inc\CANlib.h: 542: msg->identifier = 0;
 18900  012D96  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 18901  012D9A  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 18902  012D9E  6ADE               	clrf	postinc2,c
 18903  012DA0  6ADE               	clrf	postinc2,c
 18904  012DA2  6ADE               	clrf	postinc2,c
 18905  012DA4  6ADD               	clrf	postdec2,c
 18906                           
 18907                           ; BSR set to: 15
 18908                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 18909  012DA6  EE20 F004          	lfsr	2,4
 18910  012DAA  503C               	movf	CANreceiveMessage@msg,w,c
 18911  012DAC  26D9               	addwf	fsr2l,f,c
 18912  012DAE  503D               	movf	CANreceiveMessage@msg+1,w,c
 18913  012DB0  22DA               	addwfc	fsr2h,f,c
 18914  012DB2  CF56 FFDF          	movff	3926,indf2	;volatile
 18915                           
 18916                           ; BSR set to: 15
 18917                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 18918  012DB6  EE20 F005          	lfsr	2,5
 18919  012DBA  503C               	movf	CANreceiveMessage@msg,w,c
 18920  012DBC  26D9               	addwf	fsr2l,f,c
 18921  012DBE  503D               	movf	CANreceiveMessage@msg+1,w,c
 18922  012DC0  22DA               	addwfc	fsr2h,f,c
 18923  012DC2  CF57 FFDF          	movff	3927,indf2	;volatile
 18924                           
 18925                           ; BSR set to: 15
 18926                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 18927  012DC6  EE20 F006          	lfsr	2,6
 18928  012DCA  503C               	movf	CANreceiveMessage@msg,w,c
 18929  012DCC  26D9               	addwf	fsr2l,f,c
 18930  012DCE  503D               	movf	CANreceiveMessage@msg+1,w,c
 18931  012DD0  22DA               	addwfc	fsr2h,f,c
 18932  012DD2  CF58 FFDF          	movff	3928,indf2	;volatile
 18933                           
 18934                           ; BSR set to: 15
 18935                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 18936  012DD6  EE20 F007          	lfsr	2,7
 18937  012DDA  503C               	movf	CANreceiveMessage@msg,w,c
 18938  012DDC  26D9               	addwf	fsr2l,f,c
 18939  012DDE  503D               	movf	CANreceiveMessage@msg+1,w,c
 18940  012DE0  22DA               	addwfc	fsr2h,f,c
 18941  012DE2  CF59 FFDF          	movff	3929,indf2	;volatile
 18942                           
 18943                           ; BSR set to: 15
 18944                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 18945  012DE6  EE20 F008          	lfsr	2,8
 18946  012DEA  503C               	movf	CANreceiveMessage@msg,w,c
 18947  012DEC  26D9               	addwf	fsr2l,f,c
 18948  012DEE  503D               	movf	CANreceiveMessage@msg+1,w,c
 18949  012DF0  22DA               	addwfc	fsr2h,f,c
 18950  012DF2  CF5A FFDF          	movff	3930,indf2	;volatile
 18951                           
 18952                           ; BSR set to: 15
 18953                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 18954  012DF6  EE20 F009          	lfsr	2,9
 18955  012DFA  503C               	movf	CANreceiveMessage@msg,w,c
 18956  012DFC  26D9               	addwf	fsr2l,f,c
 18957  012DFE  503D               	movf	CANreceiveMessage@msg+1,w,c
 18958  012E00  22DA               	addwfc	fsr2h,f,c
 18959  012E02  CF5B FFDF          	movff	3931,indf2	;volatile
 18960                           
 18961                           ; BSR set to: 15
 18962                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 18963  012E06  EE20 F00A          	lfsr	2,10
 18964  012E0A  503C               	movf	CANreceiveMessage@msg,w,c
 18965  012E0C  26D9               	addwf	fsr2l,f,c
 18966  012E0E  503D               	movf	CANreceiveMessage@msg+1,w,c
 18967  012E10  22DA               	addwfc	fsr2h,f,c
 18968  012E12  CF5C FFDF          	movff	3932,indf2	;volatile
 18969                           
 18970                           ; BSR set to: 15
 18971                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 18972  012E16  EE20 F00B          	lfsr	2,11
 18973  012E1A  503C               	movf	CANreceiveMessage@msg,w,c
 18974  012E1C  26D9               	addwf	fsr2l,f,c
 18975  012E1E  503D               	movf	CANreceiveMessage@msg+1,w,c
 18976  012E20  22DA               	addwfc	fsr2h,f,c
 18977  012E22  CF5D FFDF          	movff	3933,indf2	;volatile
 18978                           
 18979                           ; BSR set to: 15
 18980                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 18981  012E26  EE20 F00E          	lfsr	2,14
 18982  012E2A  503C               	movf	CANreceiveMessage@msg,w,c
 18983  012E2C  26D9               	addwf	fsr2l,f,c
 18984  012E2E  503D               	movf	CANreceiveMessage@msg+1,w,c
 18985  012E30  22DA               	addwfc	fsr2h,f,c
 18986  012E32  010F               	movlb	15	; () banked
 18987  012E34  AD55               	btfss	85,6,b	;volatile
 18988  012E36  D002               	goto	i2u1134_40
 18989  012E38  0E01               	movlw	1
 18990  012E3A  D001               	goto	i2u1134_46
 18991  012E3C                     i2u1134_40:
 18992  012E3C  0E00               	movlw	0
 18993  012E3E                     i2u1134_46:
 18994  012E3E  6EDF               	movwf	indf2,c
 18995                           
 18996                           ; BSR set to: 15
 18997                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 18998  012E40  EE20 F00D          	lfsr	2,13
 18999  012E44  503C               	movf	CANreceiveMessage@msg,w,c
 19000  012E46  26D9               	addwf	fsr2l,f,c
 19001  012E48  503D               	movf	CANreceiveMessage@msg+1,w,c
 19002  012E4A  22DA               	addwfc	fsr2h,f,c
 19003  012E4C  010F               	movlb	15	; () banked
 19004  012E4E  5155               	movf	85,w,b	;volatile
 19005  012E50  0B0F               	andlw	15
 19006  012E52  6EDF               	movwf	indf2,c
 19007                           
 19008                           ; BSR set to: 15
 19009                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 19010  012E54  EE20 F00C          	lfsr	2,12
 19011  012E58  503C               	movf	CANreceiveMessage@msg,w,c
 19012  012E5A  26D9               	addwf	fsr2l,f,c
 19013  012E5C  503D               	movf	CANreceiveMessage@msg+1,w,c
 19014  012E5E  22DA               	addwfc	fsr2h,f,c
 19015  012E60  010F               	movlb	15	; () banked
 19016  012E62  A752               	btfss	82,3,b	;volatile
 19017  012E64  D002               	goto	i2u1135_40
 19018  012E66  0E01               	movlw	1
 19019  012E68  D001               	goto	i2u1135_46
 19020  012E6A                     i2u1135_40:
 19021  012E6A  0E00               	movlw	0
 19022  012E6C                     i2u1135_46:
 19023  012E6C  6EDF               	movwf	indf2,c
 19024                           
 19025                           ; BSR set to: 15
 19026                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 19027  012E6E  010F               	movlb	15	; () banked
 19028  012E70  B752               	btfsc	82,3,b	;volatile
 19029  012E72  D044               	goto	i2l8576
 19030                           
 19031                           ; BSR set to: 15
 19032                           ;inc\CANlib.h: 559: {
 19033                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 19034  012E74  CF51 F03E          	movff	3921,??_CANreceiveMessage	;volatile
 19035  012E78  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19036  012E7A  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19037  012E7C  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19038  012E7E  0E03               	movlw	3
 19039  012E80                     i2u1137_45:
 19040  012E80  90D8               	bcf	status,0,c
 19041  012E82  363E               	rlcf	??_CANreceiveMessage,f,c
 19042  012E84  363F               	rlcf	??_CANreceiveMessage+1,f,c
 19043  012E86  3640               	rlcf	??_CANreceiveMessage+2,f,c
 19044  012E88  3641               	rlcf	??_CANreceiveMessage+3,f,c
 19045  012E8A  2EE8               	decfsz	wreg,f,c
 19046  012E8C  D7F9               	goto	i2u1137_45
 19047  012E8E  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19048  012E92  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19049  012E96  C03E  FFDE         	movff	??_CANreceiveMessage,postinc2
 19050  012E9A  C03F  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19051  012E9E  C040  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19052  012EA2  C041  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19053                           
 19054                           ; BSR set to: 15
 19055                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 19056  012EA6  010F               	movlb	15	; () banked
 19057  012EA8  3952               	swapf	82,w,b	;volatile
 19058  012EAA  42E8               	rrncf	wreg,f,c
 19059  012EAC  0B07               	andlw	7
 19060  012EAE  0B07               	andlw	7
 19061  012EB0  6E47               	movwf	CANreceiveMessage@tamp,c
 19062                           
 19063                           ; BSR set to: 15
 19064                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 19065  012EB2  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19066  012EB6  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19067  012EBA  CFDE F03E          	movff	postinc2,??_CANreceiveMessage
 19068  012EBE  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+1
 19069  012EC2  CFDE F040          	movff	postinc2,??_CANreceiveMessage+2
 19070  012EC6  CFDE F041          	movff	postinc2,??_CANreceiveMessage+3
 19071  012ECA  5047               	movf	CANreceiveMessage@tamp,w,c
 19072  012ECC  243E               	addwf	??_CANreceiveMessage,w,c
 19073  012ECE  6E42               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 19074  012ED0  0E00               	movlw	0
 19075  012ED2  203F               	addwfc	??_CANreceiveMessage+1,w,c
 19076  012ED4  6E43               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 19077  012ED6  0E00               	movlw	0
 19078  012ED8  2040               	addwfc	??_CANreceiveMessage+2,w,c
 19079  012EDA  6E44               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 19080  012EDC  0E00               	movlw	0
 19081  012EDE  2041               	addwfc	??_CANreceiveMessage+3,w,c
 19082  012EE0  6E45               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 19083  012EE2  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19084  012EE6  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19085  012EEA  C042  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 19086  012EEE  C043  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 19087  012EF2  C044  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 19088  012EF6  C045  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 19089                           
 19090                           ;inc\CANlib.h: 563: }
 19091  012EFA  D08D               	goto	i2l8602
 19092  012EFC                     i2l8576:
 19093                           
 19094                           ; BSR set to: 15
 19095                           ;inc\CANlib.h: 564: else
 19096                           ;inc\CANlib.h: 565: {
 19097                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 19098  012EFC  CF54 F03E          	movff	3924,??_CANreceiveMessage	;volatile
 19099  012F00  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19100  012F02  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19101  012F04  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19102  012F06  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19103  012F0A  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19104  012F0E  C03E  FFDE         	movff	??_CANreceiveMessage,postinc2
 19105  012F12  C03F  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19106  012F16  C040  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19107  012F1A  C041  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19108                           
 19109                           ; BSR set to: 15
 19110                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 19111  012F1E  CF53 F03E          	movff	3923,??_CANreceiveMessage	;volatile
 19112  012F22  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19113  012F24  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19114  012F26  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19115  012F28  C040  F041         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 19116  012F2C  C03F  F040         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 19117  012F30  C03E  F03F         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 19118  012F34  6A3E               	clrf	??_CANreceiveMessage,c
 19119  012F36  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19120  012F3A  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19121  012F3E  503E               	movf	??_CANreceiveMessage,w,c
 19122  012F40  26DE               	addwf	postinc2,f,c
 19123  012F42  503F               	movf	??_CANreceiveMessage+1,w,c
 19124  012F44  22DE               	addwfc	postinc2,f,c
 19125  012F46  5040               	movf	??_CANreceiveMessage+2,w,c
 19126  012F48  22DE               	addwfc	postinc2,f,c
 19127  012F4A  5041               	movf	??_CANreceiveMessage+3,w,c
 19128  012F4C  22DE               	addwfc	postinc2,f,c
 19129                           
 19130                           ; BSR set to: 15
 19131                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 19132  012F4E  010F               	movlb	15	; () banked
 19133  012F50  A152               	btfss	82,0,b	;volatile
 19134  012F52  D00C               	goto	i2l8584
 19135                           
 19136                           ; BSR set to: 15
 19137                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 19138  012F54  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19139  012F58  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19140  012F5C  0E00               	movlw	0
 19141  012F5E  12DE               	iorwf	postinc2,f,c
 19142  012F60  0E00               	movlw	0
 19143  012F62  12DE               	iorwf	postinc2,f,c
 19144  012F64  0E01               	movlw	1
 19145  012F66  12DE               	iorwf	postinc2,f,c
 19146  012F68  0E00               	movlw	0
 19147  012F6A  12DE               	iorwf	postinc2,f,c
 19148  012F6C                     i2l8584:
 19149                           
 19150                           ; BSR set to: 15
 19151                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 19152  012F6C  010F               	movlb	15	; () banked
 19153  012F6E  A352               	btfss	82,1,b	;volatile
 19154  012F70  D00C               	goto	i2l8588
 19155                           
 19156                           ; BSR set to: 15
 19157                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 19158  012F72  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19159  012F76  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19160  012F7A  0E00               	movlw	0
 19161  012F7C  12DE               	iorwf	postinc2,f,c
 19162  012F7E  0E00               	movlw	0
 19163  012F80  12DE               	iorwf	postinc2,f,c
 19164  012F82  0E02               	movlw	2
 19165  012F84  12DE               	iorwf	postinc2,f,c
 19166  012F86  0E00               	movlw	0
 19167  012F88  12DE               	iorwf	postinc2,f,c
 19168  012F8A                     i2l8588:
 19169                           
 19170                           ; BSR set to: 15
 19171                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 19172  012F8A  010F               	movlb	15	; () banked
 19173  012F8C  AB52               	btfss	82,5,b	;volatile
 19174  012F8E  D00C               	goto	i2l8592
 19175                           
 19176                           ; BSR set to: 15
 19177                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 19178  012F90  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19179  012F94  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19180  012F98  0E00               	movlw	0
 19181  012F9A  12DE               	iorwf	postinc2,f,c
 19182  012F9C  0E00               	movlw	0
 19183  012F9E  12DE               	iorwf	postinc2,f,c
 19184  012FA0  0E04               	movlw	4
 19185  012FA2  12DE               	iorwf	postinc2,f,c
 19186  012FA4  0E00               	movlw	0
 19187  012FA6  12DE               	iorwf	postinc2,f,c
 19188  012FA8                     i2l8592:
 19189                           
 19190                           ; BSR set to: 15
 19191                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 19192  012FA8  010F               	movlb	15	; () banked
 19193  012FAA  AD52               	btfss	82,6,b	;volatile
 19194  012FAC  D00C               	goto	i2l8596
 19195                           
 19196                           ; BSR set to: 15
 19197                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 19198  012FAE  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19199  012FB2  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19200  012FB6  0E00               	movlw	0
 19201  012FB8  12DE               	iorwf	postinc2,f,c
 19202  012FBA  0E00               	movlw	0
 19203  012FBC  12DE               	iorwf	postinc2,f,c
 19204  012FBE  0E08               	movlw	8
 19205  012FC0  12DE               	iorwf	postinc2,f,c
 19206  012FC2  0E00               	movlw	0
 19207  012FC4  12DE               	iorwf	postinc2,f,c
 19208  012FC6                     i2l8596:
 19209                           
 19210                           ; BSR set to: 15
 19211                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 19212  012FC6  010F               	movlb	15	; () banked
 19213  012FC8  AF52               	btfss	82,7,b	;volatile
 19214  012FCA  D00C               	goto	i2l8600
 19215                           
 19216                           ; BSR set to: 15
 19217                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 19218  012FCC  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19219  012FD0  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19220  012FD4  0E00               	movlw	0
 19221  012FD6  12DE               	iorwf	postinc2,f,c
 19222  012FD8  0E00               	movlw	0
 19223  012FDA  12DE               	iorwf	postinc2,f,c
 19224  012FDC  0E10               	movlw	16
 19225  012FDE  12DE               	iorwf	postinc2,f,c
 19226  012FE0  0E00               	movlw	0
 19227  012FE2  12DE               	iorwf	postinc2,f,c
 19228  012FE4                     i2l8600:
 19229                           
 19230                           ; BSR set to: 15
 19231                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 19232  012FE4  CF51 F03E          	movff	3921,??_CANreceiveMessage	;volatile
 19233  012FE8  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19234  012FEA  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19235  012FEC  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19236  012FEE  0E15               	movlw	21
 19237  012FF0                     i2u1143_45:
 19238  012FF0  90D8               	bcf	status,0,c
 19239  012FF2  363E               	rlcf	??_CANreceiveMessage,f,c
 19240  012FF4  363F               	rlcf	??_CANreceiveMessage+1,f,c
 19241  012FF6  3640               	rlcf	??_CANreceiveMessage+2,f,c
 19242  012FF8  3641               	rlcf	??_CANreceiveMessage+3,f,c
 19243  012FFA  2EE8               	decfsz	wreg,f,c
 19244  012FFC  D7F9               	goto	i2u1143_45
 19245  012FFE  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19246  013002  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19247  013006  503E               	movf	??_CANreceiveMessage,w,c
 19248  013008  12DE               	iorwf	postinc2,f,c
 19249  01300A  503F               	movf	??_CANreceiveMessage+1,w,c
 19250  01300C  12DE               	iorwf	postinc2,f,c
 19251  01300E  5040               	movf	??_CANreceiveMessage+2,w,c
 19252  013010  12DE               	iorwf	postinc2,f,c
 19253  013012  5041               	movf	??_CANreceiveMessage+3,w,c
 19254  013014  12DE               	iorwf	postinc2,f,c
 19255  013016                     i2l8602:
 19256                           
 19257                           ; BSR set to: 15
 19258                           ;inc\CANlib.h: 581: }
 19259                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 19260  013016  010F               	movlb	15	; () banked
 19261  013018  9F50               	bcf	80,7,b	;volatile
 19262                           
 19263                           ; BSR set to: 15
 19264                           ;inc\CANlib.h: 584: return (error);
 19265                           ;	Return value of _CANreceiveMessage is never used
 19266  01301A  0012               	return	
 19267  01301C                     i2l422:
 19268                           
 19269                           ; BSR set to: 15
 19270                           ;inc\CANlib.h: 585: }
 19271                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 19272  01301C  AE60               	btfss	3936,7,c	;volatile
 19273  01301E  0012               	return	
 19274                           
 19275                           ; BSR set to: 15
 19276                           ;inc\CANlib.h: 588: {
 19277                           ;inc\CANlib.h: 589: msg->identifier = 0;
 19278  013020  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19279  013024  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19280  013028  6ADE               	clrf	postinc2,c
 19281  01302A  6ADE               	clrf	postinc2,c
 19282  01302C  6ADE               	clrf	postinc2,c
 19283  01302E  6ADD               	clrf	postdec2,c
 19284                           
 19285                           ; BSR set to: 15
 19286                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 19287  013030  EE20 F004          	lfsr	2,4
 19288  013034  503C               	movf	CANreceiveMessage@msg,w,c
 19289  013036  26D9               	addwf	fsr2l,f,c
 19290  013038  503D               	movf	CANreceiveMessage@msg+1,w,c
 19291  01303A  22DA               	addwfc	fsr2h,f,c
 19292  01303C  CF66 FFDF          	movff	3942,indf2	;volatile
 19293                           
 19294                           ; BSR set to: 15
 19295                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 19296  013040  EE20 F005          	lfsr	2,5
 19297  013044  503C               	movf	CANreceiveMessage@msg,w,c
 19298  013046  26D9               	addwf	fsr2l,f,c
 19299  013048  503D               	movf	CANreceiveMessage@msg+1,w,c
 19300  01304A  22DA               	addwfc	fsr2h,f,c
 19301  01304C  CF67 FFDF          	movff	3943,indf2	;volatile
 19302                           
 19303                           ; BSR set to: 15
 19304                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 19305  013050  EE20 F006          	lfsr	2,6
 19306  013054  503C               	movf	CANreceiveMessage@msg,w,c
 19307  013056  26D9               	addwf	fsr2l,f,c
 19308  013058  503D               	movf	CANreceiveMessage@msg+1,w,c
 19309  01305A  22DA               	addwfc	fsr2h,f,c
 19310  01305C  CF68 FFDF          	movff	3944,indf2	;volatile
 19311                           
 19312                           ; BSR set to: 15
 19313                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 19314  013060  EE20 F007          	lfsr	2,7
 19315  013064  503C               	movf	CANreceiveMessage@msg,w,c
 19316  013066  26D9               	addwf	fsr2l,f,c
 19317  013068  503D               	movf	CANreceiveMessage@msg+1,w,c
 19318  01306A  22DA               	addwfc	fsr2h,f,c
 19319  01306C  CF69 FFDF          	movff	3945,indf2	;volatile
 19320                           
 19321                           ; BSR set to: 15
 19322                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 19323  013070  EE20 F008          	lfsr	2,8
 19324  013074  503C               	movf	CANreceiveMessage@msg,w,c
 19325  013076  26D9               	addwf	fsr2l,f,c
 19326  013078  503D               	movf	CANreceiveMessage@msg+1,w,c
 19327  01307A  22DA               	addwfc	fsr2h,f,c
 19328  01307C  CF6A FFDF          	movff	3946,indf2	;volatile
 19329                           
 19330                           ; BSR set to: 15
 19331                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 19332  013080  EE20 F009          	lfsr	2,9
 19333  013084  503C               	movf	CANreceiveMessage@msg,w,c
 19334  013086  26D9               	addwf	fsr2l,f,c
 19335  013088  503D               	movf	CANreceiveMessage@msg+1,w,c
 19336  01308A  22DA               	addwfc	fsr2h,f,c
 19337  01308C  CF6B FFDF          	movff	3947,indf2	;volatile
 19338                           
 19339                           ; BSR set to: 15
 19340                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 19341  013090  EE20 F00A          	lfsr	2,10
 19342  013094  503C               	movf	CANreceiveMessage@msg,w,c
 19343  013096  26D9               	addwf	fsr2l,f,c
 19344  013098  503D               	movf	CANreceiveMessage@msg+1,w,c
 19345  01309A  22DA               	addwfc	fsr2h,f,c
 19346  01309C  CF6C FFDF          	movff	3948,indf2	;volatile
 19347                           
 19348                           ; BSR set to: 15
 19349                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 19350  0130A0  EE20 F00B          	lfsr	2,11
 19351  0130A4  503C               	movf	CANreceiveMessage@msg,w,c
 19352  0130A6  26D9               	addwf	fsr2l,f,c
 19353  0130A8  503D               	movf	CANreceiveMessage@msg+1,w,c
 19354  0130AA  22DA               	addwfc	fsr2h,f,c
 19355  0130AC  CF6D FFDF          	movff	3949,indf2	;volatile
 19356                           
 19357                           ; BSR set to: 15
 19358                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 19359  0130B0  EE20 F00E          	lfsr	2,14
 19360  0130B4  503C               	movf	CANreceiveMessage@msg,w,c
 19361  0130B6  26D9               	addwf	fsr2l,f,c
 19362  0130B8  503D               	movf	CANreceiveMessage@msg+1,w,c
 19363  0130BA  22DA               	addwfc	fsr2h,f,c
 19364  0130BC  AC65               	btfss	3941,6,c	;volatile
 19365  0130BE  D002               	goto	i2u1145_40
 19366  0130C0  0E01               	movlw	1
 19367  0130C2  D001               	goto	i2u1145_46
 19368  0130C4                     i2u1145_40:
 19369  0130C4  0E00               	movlw	0
 19370  0130C6                     i2u1145_46:
 19371  0130C6  6EDF               	movwf	indf2,c
 19372                           
 19373                           ; BSR set to: 15
 19374                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 19375  0130C8  EE20 F00D          	lfsr	2,13
 19376  0130CC  503C               	movf	CANreceiveMessage@msg,w,c
 19377  0130CE  26D9               	addwf	fsr2l,f,c
 19378  0130D0  503D               	movf	CANreceiveMessage@msg+1,w,c
 19379  0130D2  22DA               	addwfc	fsr2h,f,c
 19380  0130D4  5065               	movf	3941,w,c	;volatile
 19381  0130D6  0B0F               	andlw	15
 19382  0130D8  6EDF               	movwf	indf2,c
 19383                           
 19384                           ; BSR set to: 15
 19385                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 19386  0130DA  EE20 F00C          	lfsr	2,12
 19387  0130DE  503C               	movf	CANreceiveMessage@msg,w,c
 19388  0130E0  26D9               	addwf	fsr2l,f,c
 19389  0130E2  503D               	movf	CANreceiveMessage@msg+1,w,c
 19390  0130E4  22DA               	addwfc	fsr2h,f,c
 19391  0130E6  A662               	btfss	3938,3,c	;volatile
 19392  0130E8  D002               	goto	i2u1146_40
 19393  0130EA  0E01               	movlw	1
 19394  0130EC  D001               	goto	i2u1146_46
 19395  0130EE                     i2u1146_40:
 19396  0130EE  0E00               	movlw	0
 19397  0130F0                     i2u1146_46:
 19398  0130F0  6EDF               	movwf	indf2,c
 19399                           
 19400                           ; BSR set to: 15
 19401                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 19402  0130F2  B662               	btfsc	3938,3,c	;volatile
 19403  0130F4  D043               	goto	i2l8638
 19404                           
 19405                           ; BSR set to: 15
 19406                           ;inc\CANlib.h: 606: {
 19407                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 19408  0130F6  CF61 F03E          	movff	3937,??_CANreceiveMessage	;volatile
 19409  0130FA  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19410  0130FC  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19411  0130FE  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19412  013100  0E03               	movlw	3
 19413  013102                     i2u1148_45:
 19414  013102  90D8               	bcf	status,0,c
 19415  013104  363E               	rlcf	??_CANreceiveMessage,f,c
 19416  013106  363F               	rlcf	??_CANreceiveMessage+1,f,c
 19417  013108  3640               	rlcf	??_CANreceiveMessage+2,f,c
 19418  01310A  3641               	rlcf	??_CANreceiveMessage+3,f,c
 19419  01310C  2EE8               	decfsz	wreg,f,c
 19420  01310E  D7F9               	goto	i2u1148_45
 19421  013110  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19422  013114  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19423  013118  C03E  FFDE         	movff	??_CANreceiveMessage,postinc2
 19424  01311C  C03F  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19425  013120  C040  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19426  013124  C041  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19427                           
 19428                           ; BSR set to: 15
 19429                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 19430  013128  3862               	swapf	3938,w,c	;volatile
 19431  01312A  42E8               	rrncf	wreg,f,c
 19432  01312C  0B07               	andlw	7
 19433  01312E  0B07               	andlw	7
 19434  013130  6E47               	movwf	CANreceiveMessage@tamp,c
 19435                           
 19436                           ; BSR set to: 15
 19437                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 19438  013132  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19439  013136  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19440  01313A  CFDE F03E          	movff	postinc2,??_CANreceiveMessage
 19441  01313E  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+1
 19442  013142  CFDE F040          	movff	postinc2,??_CANreceiveMessage+2
 19443  013146  CFDE F041          	movff	postinc2,??_CANreceiveMessage+3
 19444  01314A  5047               	movf	CANreceiveMessage@tamp,w,c
 19445  01314C  243E               	addwf	??_CANreceiveMessage,w,c
 19446  01314E  6E42               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 19447  013150  0E00               	movlw	0
 19448  013152  203F               	addwfc	??_CANreceiveMessage+1,w,c
 19449  013154  6E43               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 19450  013156  0E00               	movlw	0
 19451  013158  2040               	addwfc	??_CANreceiveMessage+2,w,c
 19452  01315A  6E44               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 19453  01315C  0E00               	movlw	0
 19454  01315E  2041               	addwfc	??_CANreceiveMessage+3,w,c
 19455  013160  6E45               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 19456  013162  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19457  013166  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19458  01316A  C042  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 19459  01316E  C043  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 19460  013172  C044  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 19461  013176  C045  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 19462                           
 19463                           ;inc\CANlib.h: 610: }
 19464  01317A  D088               	goto	i2l8664
 19465  01317C                     i2l8638:
 19466                           
 19467                           ; BSR set to: 15
 19468                           ;inc\CANlib.h: 611: else
 19469                           ;inc\CANlib.h: 612: {
 19470                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 19471  01317C  CF64 F03E          	movff	3940,??_CANreceiveMessage	;volatile
 19472  013180  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19473  013182  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19474  013184  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19475  013186  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19476  01318A  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19477  01318E  C03E  FFDE         	movff	??_CANreceiveMessage,postinc2
 19478  013192  C03F  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 19479  013196  C040  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 19480  01319A  C041  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 19481                           
 19482                           ; BSR set to: 15
 19483                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 19484  01319E  CF63 F03E          	movff	3939,??_CANreceiveMessage	;volatile
 19485  0131A2  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19486  0131A4  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19487  0131A6  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19488  0131A8  C040  F041         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 19489  0131AC  C03F  F040         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 19490  0131B0  C03E  F03F         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 19491  0131B4  6A3E               	clrf	??_CANreceiveMessage,c
 19492  0131B6  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19493  0131BA  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19494  0131BE  503E               	movf	??_CANreceiveMessage,w,c
 19495  0131C0  26DE               	addwf	postinc2,f,c
 19496  0131C2  503F               	movf	??_CANreceiveMessage+1,w,c
 19497  0131C4  22DE               	addwfc	postinc2,f,c
 19498  0131C6  5040               	movf	??_CANreceiveMessage+2,w,c
 19499  0131C8  22DE               	addwfc	postinc2,f,c
 19500  0131CA  5041               	movf	??_CANreceiveMessage+3,w,c
 19501  0131CC  22DE               	addwfc	postinc2,f,c
 19502                           
 19503                           ; BSR set to: 15
 19504                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 19505  0131CE  A062               	btfss	3938,0,c	;volatile
 19506  0131D0  D00C               	goto	i2l8646
 19507                           
 19508                           ; BSR set to: 15
 19509                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 19510  0131D2  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19511  0131D6  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19512  0131DA  0E00               	movlw	0
 19513  0131DC  12DE               	iorwf	postinc2,f,c
 19514  0131DE  0E00               	movlw	0
 19515  0131E0  12DE               	iorwf	postinc2,f,c
 19516  0131E2  0E01               	movlw	1
 19517  0131E4  12DE               	iorwf	postinc2,f,c
 19518  0131E6  0E00               	movlw	0
 19519  0131E8  12DE               	iorwf	postinc2,f,c
 19520  0131EA                     i2l8646:
 19521                           
 19522                           ; BSR set to: 15
 19523                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 19524  0131EA  A262               	btfss	3938,1,c	;volatile
 19525  0131EC  D00C               	goto	i2l8650
 19526                           
 19527                           ; BSR set to: 15
 19528                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 19529  0131EE  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19530  0131F2  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19531  0131F6  0E00               	movlw	0
 19532  0131F8  12DE               	iorwf	postinc2,f,c
 19533  0131FA  0E00               	movlw	0
 19534  0131FC  12DE               	iorwf	postinc2,f,c
 19535  0131FE  0E02               	movlw	2
 19536  013200  12DE               	iorwf	postinc2,f,c
 19537  013202  0E00               	movlw	0
 19538  013204  12DE               	iorwf	postinc2,f,c
 19539  013206                     i2l8650:
 19540                           
 19541                           ; BSR set to: 15
 19542                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 19543  013206  AA62               	btfss	3938,5,c	;volatile
 19544  013208  D00C               	goto	i2l8654
 19545                           
 19546                           ; BSR set to: 15
 19547                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 19548  01320A  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19549  01320E  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19550  013212  0E00               	movlw	0
 19551  013214  12DE               	iorwf	postinc2,f,c
 19552  013216  0E00               	movlw	0
 19553  013218  12DE               	iorwf	postinc2,f,c
 19554  01321A  0E04               	movlw	4
 19555  01321C  12DE               	iorwf	postinc2,f,c
 19556  01321E  0E00               	movlw	0
 19557  013220  12DE               	iorwf	postinc2,f,c
 19558  013222                     i2l8654:
 19559                           
 19560                           ; BSR set to: 15
 19561                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 19562  013222  AC62               	btfss	3938,6,c	;volatile
 19563  013224  D00C               	goto	i2l8658
 19564                           
 19565                           ; BSR set to: 15
 19566                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 19567  013226  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19568  01322A  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19569  01322E  0E00               	movlw	0
 19570  013230  12DE               	iorwf	postinc2,f,c
 19571  013232  0E00               	movlw	0
 19572  013234  12DE               	iorwf	postinc2,f,c
 19573  013236  0E08               	movlw	8
 19574  013238  12DE               	iorwf	postinc2,f,c
 19575  01323A  0E00               	movlw	0
 19576  01323C  12DE               	iorwf	postinc2,f,c
 19577  01323E                     i2l8658:
 19578                           
 19579                           ; BSR set to: 15
 19580                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 19581  01323E  AE62               	btfss	3938,7,c	;volatile
 19582  013240  D00C               	goto	i2l8662
 19583                           
 19584                           ; BSR set to: 15
 19585                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 19586  013242  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19587  013246  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19588  01324A  0E00               	movlw	0
 19589  01324C  12DE               	iorwf	postinc2,f,c
 19590  01324E  0E00               	movlw	0
 19591  013250  12DE               	iorwf	postinc2,f,c
 19592  013252  0E10               	movlw	16
 19593  013254  12DE               	iorwf	postinc2,f,c
 19594  013256  0E00               	movlw	0
 19595  013258  12DE               	iorwf	postinc2,f,c
 19596  01325A                     i2l8662:
 19597                           
 19598                           ; BSR set to: 15
 19599                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 19600  01325A  CF61 F03E          	movff	3937,??_CANreceiveMessage	;volatile
 19601  01325E  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 19602  013260  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 19603  013262  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 19604  013264  0E15               	movlw	21
 19605  013266                     i2u1154_45:
 19606  013266  90D8               	bcf	status,0,c
 19607  013268  363E               	rlcf	??_CANreceiveMessage,f,c
 19608  01326A  363F               	rlcf	??_CANreceiveMessage+1,f,c
 19609  01326C  3640               	rlcf	??_CANreceiveMessage+2,f,c
 19610  01326E  3641               	rlcf	??_CANreceiveMessage+3,f,c
 19611  013270  2EE8               	decfsz	wreg,f,c
 19612  013272  D7F9               	goto	i2u1154_45
 19613  013274  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 19614  013278  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 19615  01327C  503E               	movf	??_CANreceiveMessage,w,c
 19616  01327E  12DE               	iorwf	postinc2,f,c
 19617  013280  503F               	movf	??_CANreceiveMessage+1,w,c
 19618  013282  12DE               	iorwf	postinc2,f,c
 19619  013284  5040               	movf	??_CANreceiveMessage+2,w,c
 19620  013286  12DE               	iorwf	postinc2,f,c
 19621  013288  5041               	movf	??_CANreceiveMessage+3,w,c
 19622  01328A  12DE               	iorwf	postinc2,f,c
 19623  01328C                     i2l8664:
 19624                           
 19625                           ; BSR set to: 15
 19626                           ;inc\CANlib.h: 629: }
 19627                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 19628  01328C  9E60               	bcf	3936,7,c	;volatile
 19629                           
 19630                           ; BSR set to: 15
 19631                           ;inc\CANlib.h: 632: return (error);
 19632                           ;	Return value of _CANreceiveMessage is never used
 19633  01328E  0012               	return	
 19634  013290                     __end_of_CANreceiveMessage:
 19635                           	opt stack 0
 19636                           pclatu	equ	0xFFB
 19637                           pclath	equ	0xFFA
 19638                           tblptru	equ	0xFF8
 19639                           tblptrh	equ	0xFF7
 19640                           tblptrl	equ	0xFF6
 19641                           tablat	equ	0xFF5
 19642                           prodh	equ	0xFF4
 19643                           prodl	equ	0xFF3
 19644                           intcon	equ	0xFF2
 19645                           postinc0	equ	0xFEE
 19646                           fsr0h	equ	0xFEA
 19647                           fsr0l	equ	0xFE9
 19648                           wreg	equ	0xFE8
 19649                           indf1	equ	0xFE7
 19650                           fsr1h	equ	0xFE2
 19651                           fsr1l	equ	0xFE1
 19652                           bsr	equ	0xFE0
 19653                           indf2	equ	0xFDF
 19654                           postinc2	equ	0xFDE
 19655                           postdec2	equ	0xFDD
 19656                           fsr2h	equ	0xFDA
 19657                           fsr2l	equ	0xFD9
 19658                           status	equ	0xFD8
 19659                           
 19660 ;; *************** function _CANisRxReady *****************
 19661 ;; Defined at:
 19662 ;;		line 1163 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 19663 ;; Parameters:    Size  Location     Type
 19664 ;;		None
 19665 ;; Auto vars:     Size  Location     Type
 19666 ;;		None
 19667 ;; Return value:  Size  Location     Type
 19668 ;;                  1    wreg      unsigned char 
 19669 ;; Registers used:
 19670 ;;		wreg, status,2
 19671 ;; Tracked objects:
 19672 ;;		On entry : 0/0
 19673 ;;		On exit  : 0/0
 19674 ;;		Unchanged: 0/0
 19675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19677 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19679 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19680 ;;Total ram usage:        1 bytes
 19681 ;; Hardware stack levels used:    1
 19682 ;; This function calls:
 19683 ;;		Nothing
 19684 ;; This function is called by:
 19685 ;;		_ISR_alta
 19686 ;; This function uses a non-reentrant model
 19687 ;;
 19688                           
 19689                           	psect	text52
 19690  015E5E                     __ptext52:
 19691                           	opt stack 0
 19692  015E5E                     _CANisRxReady:
 19693                           	opt stack 21
 19694                           
 19695                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 19696                           
 19697                           ; BSR set to: 15
 19698                           ;incstack = 0
 19699  015E5E  0E01               	movlw	1
 19700  015E60  6E3C               	movwf	_CANisRxReady$3237,c
 19701  015E62  BE60               	btfsc	3936,7,c	;volatile
 19702  015E64  D005               	goto	i2l573
 19703  015E66  010F               	movlb	15	; () banked
 19704  015E68  BF50               	btfsc	80,7,b	;volatile
 19705  015E6A  D002               	goto	i2l573
 19706                           
 19707                           ; BSR set to: 15
 19708  015E6C  0E00               	movlw	0
 19709  015E6E  6E3C               	movwf	_CANisRxReady$3237,c
 19710  015E70                     i2l573:
 19711  015E70  503C               	movf	_CANisRxReady$3237,w,c
 19712  015E72  0012               	return	
 19713  015E74                     __end_of_CANisRxReady:
 19714                           	opt stack 0
 19715                           pclatu	equ	0xFFB
 19716                           pclath	equ	0xFFA
 19717                           tblptru	equ	0xFF8
 19718                           tblptrh	equ	0xFF7
 19719                           tblptrl	equ	0xFF6
 19720                           tablat	equ	0xFF5
 19721                           prodh	equ	0xFF4
 19722                           prodl	equ	0xFF3
 19723                           intcon	equ	0xFF2
 19724                           postinc0	equ	0xFEE
 19725                           fsr0h	equ	0xFEA
 19726                           fsr0l	equ	0xFE9
 19727                           wreg	equ	0xFE8
 19728                           indf1	equ	0xFE7
 19729                           fsr1h	equ	0xFE2
 19730                           fsr1l	equ	0xFE1
 19731                           bsr	equ	0xFE0
 19732                           indf2	equ	0xFDF
 19733                           postinc2	equ	0xFDE
 19734                           postdec2	equ	0xFDD
 19735                           fsr2h	equ	0xFDA
 19736                           fsr2l	equ	0xFD9
 19737                           status	equ	0xFD8
 19738                           pclatu	equ	0xFFB
 19739                           pclath	equ	0xFFA
 19740                           tblptru	equ	0xFF8
 19741                           tblptrh	equ	0xFF7
 19742                           tblptrl	equ	0xFF6
 19743                           tablat	equ	0xFF5
 19744                           prodh	equ	0xFF4
 19745                           prodl	equ	0xFF3
 19746                           intcon	equ	0xFF2
 19747                           postinc0	equ	0xFEE
 19748                           fsr0h	equ	0xFEA
 19749                           fsr0l	equ	0xFE9
 19750                           wreg	equ	0xFE8
 19751                           indf1	equ	0xFE7
 19752                           fsr1h	equ	0xFE2
 19753                           fsr1l	equ	0xFE1
 19754                           bsr	equ	0xFE0
 19755                           indf2	equ	0xFDF
 19756                           postinc2	equ	0xFDE
 19757                           postdec2	equ	0xFDD
 19758                           fsr2h	equ	0xFDA
 19759                           fsr2l	equ	0xFD9
 19760                           status	equ	0xFD8
 19761                           
 19762                           	psect	rparam
 19763  0000                     pclatu	equ	0xFFB
 19764                           pclath	equ	0xFFA
 19765                           tblptru	equ	0xFF8
 19766                           tblptrh	equ	0xFF7
 19767                           tblptrl	equ	0xFF6
 19768                           tablat	equ	0xFF5
 19769                           prodh	equ	0xFF4
 19770                           prodl	equ	0xFF3
 19771                           intcon	equ	0xFF2
 19772                           postinc0	equ	0xFEE
 19773                           fsr0h	equ	0xFEA
 19774                           fsr0l	equ	0xFE9
 19775                           wreg	equ	0xFE8
 19776                           indf1	equ	0xFE7
 19777                           fsr1h	equ	0xFE2
 19778                           fsr1l	equ	0xFE1
 19779                           bsr	equ	0xFE0
 19780                           indf2	equ	0xFDF
 19781                           postinc2	equ	0xFDE
 19782                           postdec2	equ	0xFDD
 19783                           fsr2h	equ	0xFDA
 19784                           fsr2l	equ	0xFD9
 19785                           status	equ	0xFD8
 19786                           
 19787                           	psect	temp
 19788  00004E                     btemp:
 19789                           	opt stack 0
 19790  00004E                     	ds	1
 19791  0000                     int$flags	set	btemp
 19792                           pclatu	equ	0xFFB
 19793                           pclath	equ	0xFFA
 19794                           tblptru	equ	0xFF8
 19795                           tblptrh	equ	0xFF7
 19796                           tblptrl	equ	0xFF6
 19797                           tablat	equ	0xFF5
 19798                           prodh	equ	0xFF4
 19799                           prodl	equ	0xFF3
 19800                           intcon	equ	0xFF2
 19801                           postinc0	equ	0xFEE
 19802                           fsr0h	equ	0xFEA
 19803                           fsr0l	equ	0xFE9
 19804                           wreg	equ	0xFE8
 19805                           indf1	equ	0xFE7
 19806                           fsr1h	equ	0xFE2
 19807                           fsr1l	equ	0xFE1
 19808                           bsr	equ	0xFE0
 19809                           indf2	equ	0xFDF
 19810                           postinc2	equ	0xFDE
 19811                           postdec2	equ	0xFDD
 19812                           fsr2h	equ	0xFDA
 19813                           fsr2l	equ	0xFD9
 19814                           status	equ	0xFD8


Data Sizes:
    Strings     159
    Constant    144
    Data        1
    BSS         115
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      77
    BANK0           160    107     140
    BANK1           256     33      74
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_16(CODE[8]), STR_15(CODE[6]), STR_14(CODE[6]), STR_13(CODE[6]), 
		 -> STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[21]), 
		 -> STR_8(CODE[17]), STR_7(CODE[12]), STR_6(CODE[21]), STR_4(CODE[21]), 
		 -> STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK0[1]), park_assist_state(BANK1[8]), data_brake(BANK0[1]), data_steering(BANK0[1]), 
		 -> data(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___fldiv->___xxtofl
    _LCD_write_string->_LCD_write_char
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Send->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  265256
                                             25 BANK1      8     8      0
                           _CAN_Send
                    _CAN_interpreter
                       _CANisTxReady
                     _CANsendMessage
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                        _LCD_Handler
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   64337
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             29 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             15 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             15 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  132846
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41624
                                             97 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9426
                                             54 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             15 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9147
                                             54 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4925
                                             29 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             15 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             21 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             15 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             15 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     861
                                             15 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             15 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             15 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     799
                                             87 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             87 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    3518
                                             67 BANK0     20    12      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             54 BANK0      4     0      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             15 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             29 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9673
                                             32 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2   10674
                                             32 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    9454
                                             27 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   28412
                                             29 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    9073
                                             27 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8934
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18291
                                             30 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    9110
                                             27 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8965
                                             27 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    8934
                                             23 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1418
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1418
                                             21 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             15 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      68
                                             15 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_interpreter                                      4     4      0       0
                                             15 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Send                                             0     0      0    4107
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4083
                                             15 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_alta                                            15    15      0    4995
                                              0 BANK0     15    15      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (10) i2_CANsendMessage                                   16     8      8    3197
                                             17 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (10) i2_CANisTxReady                                      1     1      0      37
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _CANreceiveMessage                                  12    10      2    1594
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (10) _CANisRxReady                                        1     1      0      37
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Send
     _CANisTxReady
     _CANsendMessage
   _CAN_interpreter
   _CANisTxReady
   _CANsendMessage
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     21      4A       7       28.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6B      8C       5       87.5%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     21      4D       1       81.9%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     123      20        0.0%
DATA                 0      0     123       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Apr 14 17:26:39 2016

                   ___fldiv@aexp 0095                     ___fldiv@bexp 0094  
                              _x 00E6                                _y 026C  
                              _z 00E7        __size_of_delay_set_quartz 000A  
           __end_of_CANSetFilter 0B06                     ?_LCD_Handler 002B  
                   ___fldiv@sign 0089                     ___awdiv@sign 007A  
                             _id 000C                               bsr 000FE0  
            ___wmul@multiplicand 0071                      __CFG_BORV$3 000000  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                    __CFG_OSC$HS 000000                     __CFG_CP4$OFF 000000  
                   __CFG_CP5$OFF 000000                              l400 17EE  
                            l401 17F2                              l410 1958  
                            l402 17FE                              l411 1962  
                            l500 073A                              l405 18B8  
                            l501 0746                              l414 1A72  
                            l406 18BC                              l510 0852  
                            l502 074A                              l415 1A76  
                            l407 19B4                              l511 0856  
                            l503 0756                              l416 1A82  
                            l408 1944                              l520 0962  
                            l512 0862                              l504 075A  
                            l409 194E                              l521 096E  
                            l513 0866                              l505 0766  
                            l530 0A7A                              l522 0972  
                            l514 0872                              l450 41C8  
                            l370 4A8A                              l531 0A7E  
                            l523 097E                              l515 0876  
                            l451 41CC                              l371 4A94  
                            l380 1446                              l532 0A8A  
                            l524 0982                              l516 0882  
                            l508 0842                              l460 42D4  
                            l452 41D8                              l444 4198  
                            l381 1450                              l533 0A8E  
                            l525 098E                              l509 0846  
                            l461 42E0                              l445 419C  
                            l390 18A2                              l382 145A  
                            l534 0A9A                              l526 0992  
                            l462 42E4                              l446 41A8  
                            l391 1634                              l375 161E  
                            l535 0A9E                              l527 099E  
                            l519 095E                              l463 42F0  
                            l455 42B0                              l447 41AC  
                            l392 1638                              l376 13B0  
                            l536 0AAA                              l480 0514  
                            l456 42B4                              l448 41B8  
                            l393 1730                              l385 156A  
                            l377 13B4                              l537 0AAE  
                            l481 0520                              l457 42C0  
                            l449 41BC                              l394 16C0  
                            l386 156E                              l378 14AC  
                            l538 0ABA                              l490 062A  
                            l482 0524                              l458 42C4  
                            l395 16CA                              l387 157A  
                            l379 143C                              l491 062E  
                            l483 0530                              l475 04F0  
                            l459 42D0                              l396 16D4  
                            l492 063A                              l476 04F4  
                            l397 16DE                              l581 5C10  
                            l493 063E                              l477 0500  
                            l494 064A                              l486 060A  
                            l478 0504                              l487 060E  
                            l479 0510                              l568 5D92  
                            l488 061A                              l497 0726  
                            l489 061E                              l498 072A  
                            l851 5DE0                              l499 0736  
                            l780 1CBC                              l870 5A8E  
                            l791 1E74                              l872 5A90  
                            l865 5E18                              l785 1D74  
                            l858 5E34                              l956 10FA  
           ??_PWR_Button_Polling 006F                     __CFG_CPB$OFF 000000  
                   __CFG_CPD$OFF 000000                      ?_LCD_cursor 007B  
                            _dir 00E3                              _msg 0106  
                            _str 0115                     ___awmod@sign 0074  
                            prod 000FF3                              wreg 000FE8  
                   ___flmul@aexp 008A                     ___flmul@bexp 008F  
                   ___flmul@sign 0089                     ___flmul@temp 0094  
                   ___flmul@prod 0090                     __CFG_LVP$OFF 000000  
         __size_of_LCD_goto_line 00EC                     ___fltol@exp1 00C0  
                   __CFG_WDT$OFF 000000                             l1181 5038  
                           l1191 4E72                             l1524 3E0C  
                           l1533 3E44                             l1285 4D20  
                           l1470 3430                             l1374 5736  
                           l1278 4C5C                             l1535 3EB2  
                           l1527 3DB4                             l1279 4CA0  
                           l1384 59D6                             l5000 410C  
                           l1561 3A88                             l1554 37EC  
                           l1571 3B9A                             l1563 3AF6  
                           l1468 3470                             l5100 0176  
                           l1485 35E4                             l1469 3464  
                           l1494 3678                             l1590 4952  
                           l1591 496A                             l1583 48F6  
                           l1576 484A                             l5200 0534  
                           l5032 4222                             l5026 41DC  
                           l6004 196C                             l6030 1A86  
                           l5302 0886                             l5206 057A  
                           l5118 0230                             l6024 1A66  
                           l5240 0694                             l5136 02EA  
                           l5234 064E                             l5154 03A4  
                           l5082 00BE                             l5058 42F4  
                           l5308 08CC                             l5172 045E  
                           l5342 09E8                             l5336 09A2  
                           l6402 3DC0                             l8002 4C08  
                           l5370 0ABE                             l5274 07B0  
                           l6420 3E58                             l6340 3C20  
                           l5268 076A                             l6430 3EAC  
                           l6414 3E2E                             l6334 3BFC  
                           l8102 501E                             l6440 3F02  
                           l6408 3E08                             l6360 3C7E  
                           l6344 3C2A                             l8120 4DCE  
                           l8104 502E                             l8032 4CD6  
                           l6354 3C5A                             l8130 4EBE  
                           l8042 4D06                             l6444 3F30  
                           l6364 3C88                             l8124 4E20  
                           l8116 4D80                             l7500 3340  
                           l8204 5724                             l8220 59C4  
                           l8212 596A                             l8052 4EE8  
                           l8044 4D16                             l8036 4CEA  
                           l5812 4AA0                             l6454 3F76  
                           l6446 3F44                             l8214 597A  
                           l8230 485A                             l5814 4AE4  
                           l5806 4A82                             l6704 5748  
                           l6456 3F7A                             l6448 3F66  
                           l6384 3D0A                             l6376 3CDC  
                           l7512 3374                             l7504 334A  
                           l8216 5980                             l8240 489A  
                           l8080 4FB6                             l8072 4F62  
                           l5808 4A98                             l6714 5790  
                           l6394 3D88                             l8138 5C44  
                           l8250 4944                             l8242 48D8  
                           l8058 4F0E                             l8402 0DB0  
                           l9202 1BFC                             l5852 1464  
                           l6724 5A84                             l7612 362C  
                           l8164 53A8                             l8148 533A  
                           l8236 4882                             l8092 4FEE  
                           l8404 0DC6                             l9212 1CA4  
                           l6718 57C8                             l6742 582C  
                           l8270 5C8E                             l7606 3616  
                           l7622 364C                             l7542 33B0  
                           l7470 32AE                             l8182 540E  
                           l8174 53D8                             l8262 49BC  
                           l8238 488A                             l7702 3800  
                           l8414 0E6A                             l8406 0E02  
                           l8342 0B66                             l8334 0B30  
                           l4966 5E50                             l9302 20DE  
                           l9222 1CCA                             l9214 1CAC  
                           l5928 16E8                             l5872 155E  
                           l6752 583A                             l7448 5C02  
                           l7632 3672                             l7616 3638  
                           l7624 3652                             l7560 3454  
                           l7480 32DC                             l8176 53E8  
                           l8168 53BC                             l8192 56BA  
                           l8248 4934                             l8096 5002  
                           l8520 1338                             l8512 12E0  
                           l8504 12AC                             l8432 0F7E  
                           l8408 0E18                             l8352 0BDA  
                           l8328 0B16                             l4984 4056  
                           l9224 1CD6                             l9208 1C92  
                           l5954 1802                             l8274 5CA8  
                           l8282 5D64                             l7650 3702  
                           l7642 36CE                             l7570 3494  
                           l7554 3444                             l8178 53F2  
                           l8194 56CA                             l7810 5600  
                           l7706 3814                             l8450 0FFC  
                           l8434 0F84                             l8418 0E9C  
                           l8506 12BA                             l8346 0BB0  
                           l9314 2160                             l5948 17E2  
                           l6764 5898                             l7580 34D8  
                           l7556 344A                             l7476 32D2  
                           l8196 56D0                             l7820 5630  
                           l7804 55EA                             l8524 1364  
                           l8516 1308                             l8452 1004  
                           l8460 10A0                             l8428 0F06  
                           l8364 0C24                             l8356 0BE0  
                           l8348 0BCA                             l9308 20E8  
                           l9172 1B66                             l5878 157E  
                           l8278 5D50                             l7662 3726  
                           l7654 370E                             l7646 36E0  
                           l7494 331C                             l8470 10DC  
                           l8462 10AE                             l8446 0FD0  
                           l8390 0CFA                             l8374 0C76  
                           l8358 0C0A                             l8526 136A  
                           l9238 1D98                             l9246 1DDA  
                           l7656 3712                             l7584 34E2  
                           l7488 3308                             l7816 561E  
                           l7832 566E                             l7680 3780  
                           l7672 3756                             l8528 138C  
                           l9256 1E82                             l9264 1EC6  
                           l7578 34D2                             l7818 562A  
                           l7754 3A9C                             l7690 37B0  
                           l7682 3792                             l8482 112E  
                           l8474 10FE                             l8802 47E2  
                           l7588 34F4                             l7836 5682  
                           l7828 5660                             l7860 58FE  
                           l7852 58D8                             l7780 3B80  
                           l7764 3AF0                             l7748 3A72  
                           l8468 10C8                             l9276 1EF4  
                           l9284 1F34                             l7598 35C4  
                           l7790 3BC4                             l7774 3B46  
                           l7678 377A                             l7950 29FA  
                           l8486 1190                             l8398 0D7E  
                           l7872 5944                             l7864 5922  
                           l7856 58EC                             l7848 58C8  
                           l7696 37D4                             l7936 45DA  
                           l7928 44E2                             l7960 2AFE  
                           l8496 1284                             l9288 1F38  
                           l7890 548A                             l7882 5B10  
                           l7858 58F8                             l7778 3B6C  
                           l7698 37DA                             l8498 1292  
                           l8754 4632                             l9298 205A  
                           l7892 54BC                             l7868 5930  
                           l7788 3BBA                             l7956 2ACC  
                           l8780 474E                             l7886 5426  
                           l7894 54EE                             l7878 5ADE  
                           l7974 2D52                             l8790 478E  
                           l7888 5458                             l7968 2C80  
                           l8792 479E                             l7986 5D44  
                           l7996 4BCE                             l8796 47B8  
                           l8788 477C                             l8798 47C8  
                           STR_1 FF9E                             STR_2 FF74  
                           STR_3 FF5F                             STR_4 FF9E  
                           STR_5 FFF9                             STR_6 FF89  
                           STR_7 FFC4                             STR_8 FFB3  
                           STR_9 FF9E                             _LATA 000F89  
                           _LATB 000F8A                             _LATC 000F8B  
                           _LATD 000F8C                             _LATE 000F8D  
                           u6020 03DA                             u6110 0554  
                           u6025 03CE                             u6115 0548  
                           u6035 043A                             u7200 14D0  
                           u5620 4088                             u7205 14C4  
                           u6510 0ADE                             u6430 09C2  
                           u6350 08A6                             u6270 078A  
                           u6190 066E                             u5710 41FC  
                           u7215 1530                             u7320 1708  
                           u5625 407C                             u7330 1754  
                           u6515 0AD2                             u6435 09B6  
                           u6355 089A                             u6275 077E  
                           u6195 0662                             u5715 41F0  
                           u5635 40E8                             u5900 01AC  
                           u5820 003A                             u5580 3FD2  
              _F2_Button_Polling 5E10                             u7325 16FC  
                           u7190 1484                             u8070 3F16  
                           u7335 1748                             u7345 17B4  
                           u5905 01A0                             u5825 002E  
                           u5585 3FC6                             u7450 198C  
                           u7195 1478                             u5915 020C  
                           u5835 009A                             u5595 4032  
                           u7460 19D8                             u5940 0266  
                           u5860 00F2                             u8405 5DF0  
                           u5790 4314                             u7455 1980  
                           u8440 5E42                             u7465 19CC  
                           u8505 5E28                             u5945 025A  
                           u5865 00E6                             u7475 1A38  
                           u5955 02C6                             u5875 0152  
                           u5795 4308                             u5980 0320  
                           u8390 5DEE                             u8455 5E44  
                           u8560 5AB2                             u5985 0314  
                           u8490 5E26                             u5995 0380  
                           u8566 5AB4                             u9705 5BD0  
                           u9706 5BD2                             u9810 33FA  
                           u9715 5BDC                             u9716 5BDE  
                           u9820 3412                             u9830 3414  
                           u9685 5BB8                             u9686 5BBA  
                           u9695 5BC4                             u9696 5BC6  
            __size_of_CANSetMask 039E                     ?_LCD_goto_xy 007E  
                           _data 002A                             _main 1B26  
             ?_F2_Button_Polling 002B        __size_of_LCD_send_command 003A  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           btemp 004E                             pclat 000FFA  
                           prodh 000FF4                             prodl 000FF3  
                           start 00C0                    __CFG_IESO$OFF 000000  
                ___fldiv@new_exp 008E               __size_of_LCD_clear 0032  
               __end_of_CAN_Send 5802                     _sprintf$4222 0129  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000010  
            ??_F2_Button_Polling 006F         __end_of_LCD_enable_pulse 5DBA  
               _CANOperationMode 5E48          __size_of_LCD_initialize 016E  
     __size_of_CANreceiveMessage 050C                    ___fltol@sign1 00BF  
                __end_of___fladd 3738                            ?_main 002B  
                __end_of___fldiv 3F9E                  __end_of___awdiv 568C  
                __end_of___flneg 5C56                            STR_10 FFEF  
                          STR_11 FFF4                            STR_12 FFEA  
                          STR_13 FFDE                            STR_14 FFD8  
                          STR_15 FFE4                            STR_16 FFD0  
                __end_of___awmod 594E                  __end_of___flmul 3BDE  
                __end_of___flsub 5B66                  __end_of___fltol 5420  
                __end_of___lldiv 5748                            u11210 10F2  
                          u10270 3B5A                            u10190 3A14  
                          u10521 4BAA                            u10195 3A08  
                ___awdiv@divisor 0077                            u10541 4BE4  
                          u12320 1D40                  __end_of___llmod 59E8  
                          u12330 1D58                            u12260 1C60  
                          u10750 535A                            u12270 1C78  
                          u12336 1D5A                            u10755 534E  
                          u12380 1E42                            u12276 1C7A  
                          u12470 214C                            u12390 1E5A  
                          u12480 21C4                            _T3CON 000FB1  
                          u12396 1E5C                            u12497 5C04  
                          i2l400 2596                            i2l401 259A  
                          i2l410 26D0                            i2l402 25A4  
                          i2l411 26D8                            i2l405 264E  
                          i2l422 301C                            i2l414 27C6  
                          i2l406 2652                            i2l415 27CA  
                          i2l407 2722                            i2l416 27D4  
                          i2l408 26C0                            i2l409 26C8  
                          i1l771 0078                            i2l380 2268  
                          i2l381 2270                            i2l390 263A  
                          i2l382 2278                            i2l391 241E  
                          i2l375 240A                            i2l392 2422  
                          i2l376 21EE                            i2l393 24F2  
                          i2l385 2366                            i2l377 21F2  
                          i2l394 2490                            i2l386 236A  
                          i2l378 22C2                            i2l395 2498  
                          i2l387 2374                            i2l379 2260  
                          i2l396 24A0                            i2l573 5E70  
                          i2l397 24A8                            i2l568 5DD4  
                          i2l767 52D8                  ___awdiv@counter 0079  
                          _TMR3H 000FB3                            _TMR3L 000FB2  
              _CANisRxReady$3237 003C                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                  __CFG_PWRT$OFF 000000                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000                    __CFG_WRT4$OFF 000000  
             __size_of_ISR_bassa 00A8                    __CFG_WRT5$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000               CANInitialize@flags 0081  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                 __CFG_EBTR4$OFF 000000                 __end_of_ISR_alta 5314  
                 __CFG_EBTR5$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000        __end_of_F2_Button_Polling 5E2C  
                __end_of_dpowers FF5F                            _scale 286A  
                __end_of_isdigit 5D4E        __size_of_LCD_shift_cursor 004C  
                 __pbitbssCOMRAM 0260             __end_of_CANisRxReady 5E74  
                          tablat 000FF5             __end_of_CANisTxReady 5D98  
                          status 000FD8                  __end_of_sprintf 139A  
            __size_of_LCD_cursor 0032                  __initialization 5B66  
                   __end_of_main 21DA    __size_of_board_initialization 00C2  
                  _LCD_goto_line 5420                ?_Joystick_Polling 002B  
             ??_Joystick_Polling 006F                ?_LCD_write_string 0080  
                         ??_main 0142        __size_ofi2_CANsendMessage 0690  
                  __activetblptr 000003                   _JoystickValues 00DB  
             ??_LCD_write_string 0082             __size_of__tdiv_to_l_ 019E  
              _CANisTxReady$3235 006F         __size_of_CAN_interpreter 00AA  
              __end_of_LCD_clear 5D24            i2CANsendMessage@flags 0043  
         LCD_write_string@buffer 0080                           _ADCON1 000FC1  
                         _CANCON 000F6F                 ___llmod@dividend 006F  
                         ?_scale 0096                           _ADRESH 000FC4  
               ___awdiv@dividend 0075                  __CFG_BBSIZ$1024 000000  
                         i2l9010 27BC                           i2l9102 51F0  
                         i2l9016 27D8                           i2l9120 5242  
                         i2l9116 5238                           i2l9108 5212  
                         i2l9126 5270                           i2l8600 2FE4  
                         i2l9136 529C                           i2l8602 3016  
                         i2l9146 52D0                           i2l8650 3206  
                         i2l8662 325A                           i2l8654 3222  
                         i2l8646 31EA                           i2l8638 317C  
                         i2l8664 328C                           i2l8592 2FA8  
                         i2l8584 2F6C                           i2l8576 2EFC  
                         i2l8658 323E                           i2l8914 24B0  
                         i2l8596 2FC6                           i2l8588 2F8A  
                         i2l8940 25A8                           i2l8934 258C  
                         i2l8838 2280                           i2l8864 2378  
                         i2l8858 235C                           i2l8990 26E0  
                         _RXB0D0 000F66                           _RXB0D1 000F67  
                         _RXB0D2 000F68                           _RXB0D3 000F69  
                         _RXB0D4 000F6A                           _RXB1D0 000F56  
                         _RXB0D5 000F6B                           _RXB1D1 000F57  
                         _RXB0D6 000F6C                           _RXB1D2 000F58  
                         _RXB0D7 000F6D                           _RXB1D3 000F59  
                         _RXB1D4 000F5A                           _RXB1D5 000F5B  
                         _RXB1D6 000F5C                           _RXB1D7 000F5D  
                         _TXB0D0 000F46                           _TXB0D1 000F47  
                         _TXB0D2 000F48                           _TXB0D3 000F49  
                         _TXB1D0 000F36                           _TXB0D4 000F4A  
                         _TXB1D1 000F37                           _TXB0D5 000F4B  
                         _TXB1D2 000F38                           _TXB0D6 000F4C  
                         _TXB1D3 000F39                           _TXB0D7 000F4D  
                         _TXB2D0 000F26                           _TXB1D4 000F3A  
                         _TXB2D1 000F27                           _TXB1D5 000F3B  
                         _TXB2D2 000F28                           _TXB1D6 000F3C  
                         _TXB2D3 000F29                           _TXB1D7 000F3D  
                         _TXB2D4 000F2A                           _TXB2D5 000F2B  
                         _TXB2D6 000F2C                           _TXB2D7 000F2D  
             CANsendMessage@data 0073               CANsendMessage@tamp 007B  
               __end_of___xxtofl 49CE                  _switch_position 00E5  
               __end_of_delay_ms 5C1E            __size_of_CANSetFilter 0B06  
                 __CFG_XINST$OFF 000000                __end_of_ISR_bassa 00C0  
               __end_of__powers_ FF37                       _MotoreFlag 0263  
                 ?_LCD_goto_line 002B                           ___flge 4D32  
                      ??___fladd 00AB                 _delay_set_quartz 5E74  
                         ___wmul 5C56                        ??___fldiv 0085  
                      ??___awdiv 0079                        ??___flneg 009A  
                 __CFG_STVREN$ON 000000                        ??___awmod 0073  
                      ??___flmul 0085                        ??___flsub 00BF  
                      ??___fltol 00BB                        ??___lldiv 0077  
                      ??___llmod 0077                     ??_CANSetMask 0074  
        __size_of_LCD_write_char 0096                           _fround 433C  
 LCD_initialize@quartz_frequency 007D                           clear_0 5B6C  
                         clear_1 5B78                           clear_2 5B88  
               ___awdiv@quotient 007B                  ___awmod@divisor 0071  
           __size_of_LCD_Handler 01CE                  ___awmod@counter 0073  
                __CFG_BOREN$BOHW 000000                _JoystickConstants 00CB  
                      ??_isdigit 006F                     __mediumconst FECE  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                        ?_CAN_Send 002B  
     __size_of_F2_Button_Polling 001C                        ??_sprintf 00C9  
                   _CANSetFilter 0000                       ___flge@ff1 006F  
                     ___flge@ff2 0073                     ___xxtofl@arg 0079  
                   ___xxtofl@exp 0078                     ___xxtofl@val 006F  
                     __accesstop 0060          __end_of__initialization 5BA0  
             __end_of_CANSetMask 433C                  __CFG_PBADEN$OFF 000000  
                     _SterzoFlag 0265                       ___flneg@f1 0096  
               _LCD_send_command 5BAA                    ___rparam_used 000001  
                     ___fltol@f1 00B7             __size_of_LCD_goto_xy 001C  
                 __pcstackCOMRAM 002B                     __pidataBANK0 5E7E  
                      ?_ISR_alta 002B                     LCD_goto_xy@x 007F  
                   LCD_goto_xy@y 007E                    __end_of_scale 2D84  
                 _LCD_initialize 504A                _LCD_write_message 5C8C  
          CANSetFilter@numBuffer 0078               ?_LCD_write_message 0080  
                     __div_to_l_ 4EC2                     ??_LCD_cursor 007C  
                  _newMessageCan 0267                     _actual_speed 00DD  
          __size_of_CANisRxReady 0016            __size_of_CANisTxReady 0024  
                     ??_CAN_Send 007F                  __div_to_l_@exp1 007C  
            ??_LCD_write_message 0082                  __div_to_l_@cntr 007B  
                        ??_scale 009A                 _LCD_shift_cursor 5AD2  
                __div_to_l_@quot 0077         __end_of_CANOperationMode 5E5E  
                     __pbssBANK0 00CB                       __pbssBANK1 0100  
              ??_CAN_interpreter 006F                       _data_brake 00E8  
        __size_of_CANsendMessage 078C                       _data_speed 00E9  
                  __div_to_l_@f1 006F                    __div_to_l_@f2 0073  
                ??_LCD_goto_line 007B               __end_of_LCD_cursor 5CF2  
         __end_of_LCD_initialize 51B8                          ?___flge 006F  
                        ?___wmul 006F                       ??_ISR_alta 0060  
      __end_of_LCD_write_message 5CC0                ?_LCD_enable_pulse 002B  
                        ?_fround 0096                     _CANisRxReady 5E5E  
                        _CANSTAT 000F6E               ??_LCD_enable_pulse 0077  
                   _CANisTxReady 5D74                        ISR_alta@i 006E  
                        _BRGCON1 000F70                          _BRGCON2 000F71  
                        _BRGCON3 000F72                 i2_CANsendMessage 21DA  
    __size_of_PWR_Button_Polling 001C                        ?___xxtofl 006F  
        __size_ofi2_CANisTxReady 001E           __size_of_CANInitialize 01C6  
               LCD_cursor@active 007C                        ?_delay_ms 0075  
                        _RXB0DLC 000F65                          _RXB1DLC 000F55  
                        _RXB0CON 000F60                          _RXB1CON 000F50  
                        _TXB0DLC 000F45                          _TXB1DLC 000F35  
                        _TXB2DLC 000F25              CANsendMessage@flags 0076  
                        _AbsFlag 0260                __end_of__npowers_ FF03  
                        __Hparam 0000                       _left_speed 0024  
                     _scale$4221 009A                          __Lparam 0000  
               delay_ms@value_ms 0075                  ?_LCD_initialize 002B  
                __size_of___flge 0190                          ___fladd 3290  
                        ___fldiv 3BDE                          ___awdiv 55CE  
                        ___flneg 5C1E                          ___awmod 58AC  
                        ___flmul 3738                          ___flsub 5B1E  
                        ___fltol 5314                          ___lldiv 568C  
                __size_of___wmul 0036                   _LCD_write_char 59E8  
                        ___llmod 594E             CANInitialize@propSeg 0086  
                        __pcinit 5B66                          _battery 0028  
                __size_of_fround 02F6                          __ramtop 0D00  
            LCD_write_char@value 007F                          __ptext0 1B26  
                        __ptext1 550C                          __ptext2 49CE  
                        __ptext3 3F9E                          __ptext4 0000  
                        __ptext5 5E48                          __ptext6 5DD8  
                        __ptext7 4632                          __ptext8 0B06  
                        __ptext9 286A                      ?__div_to_l_ 006F  
               LCD_write_char@D0 007E                 LCD_write_char@D1 007D  
               LCD_write_char@D2 007C                 LCD_write_char@D3 007B  
                      _F1_switch 0261                          _dpowers FF37  
                      _F2_switch 0262                          _isdigit 5D24  
                     ??___xxtofl 0073                 ___awmod@dividend 006F  
                     ??_delay_ms 0077           CANreceiveMessage@error 0046  
   __end_of_board_initialization 55CE        __size_of_Joystick_Polling 0054  
       __end_of_delay_set_quartz 5E7E                          _sprintf 0B06  
                 __pintcode_body 51B8                        _LCD_clear 5CF2  
           end_of_initialization 5BA0        __size_of_LCD_write_string 0026  
                        int_func 51B8                        i2u1134_40 2E3C  
                      i2u1134_46 2E3E                        i2u1135_40 2E6A  
                      i2u1143_45 2FF0                        i2u1135_46 2E6C  
                      i2u1145_40 30C4                        i2u1217_40 5210  
                      i2u1137_45 2E80                        i2u1145_46 30C6  
                      i2u1146_40 30EE                        i2u1154_45 3266  
                      i2u1146_46 30F0                        i2u1250_47 5296  
                      i2u1171_40 229E                        i2u1171_45 2294  
                      i2u1172_40 22E4                        i2u1148_45 3102  
                      i2u1172_45 22DA                        i2u1173_45 2330  
                      i2u1184_40 24CE                        i2u1184_45 24C4  
                      i2u1185_40 2514                        i2u1185_45 250A  
                      i2u1186_45 2560                        i2u1197_40 26FE  
                      i2u1197_45 26F4                        i2u1198_40 2744  
                      i2u1198_45 273A                        i2u1199_45 2790  
                  _CANInitialize 49CE                  ___lldiv@divisor 0073  
             LCD_cursor@blinking 007B                    _parking_state 00E4  
                ___lldiv@counter 007B           __end_of_LCD_write_char 5A7E  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE       __size_of_LCD_write_message 0034  
                 __tdiv_to_l_@f1 006F                   __tdiv_to_l_@f2 0073  
                     _wait_low_1 0269                       _wait_low_2 026A  
                     _wait_low_3 026B                        _ISR_bassa 0018  
                  ??__tdiv_to_l_ 0077                        _PORTAbits 000F80  
                      _PORTBbits 000F81                   CANSetMask@mask 006F  
                      _PORTDbits 000F83                   CANSetMask@tamp 0079  
       __end_of_LCD_send_command 5BE4                   CANSetMask@type 0073  
                    ___fladd@grs 00B6                    ___xxtofl@sign 0077  
                    ___fldiv@grs 0090                      ___fldiv@rem 008A  
              _F1_Button_Polling 5E2C                       ?_LCD_clear 002B  
             ?_F1_Button_Polling 002B                __size_of_CAN_Send 00BA  
        _clock_counter_reference 00DF                      ___flmul@grs 008B  
                 _CANsendMessage 139A                 CANInitialize@BRP 0080  
               CANInitialize@SJW 007F                   ?_CANInitialize 007D  
            ??_F1_Button_Polling 006F              __size_of__div_to_l_ 0188  
        LCD_write_integer@F17272 0100                  ?_LCD_write_char 002B  
                  ??_LCD_Handler 00CB         __end_of_LCD_shift_cursor 5B1E  
                 __end_of___flge 4EC2                       ?_ISR_bassa 002B  
                 __end_of___wmul 5C8C                __size_of_ISR_alta 530C  
              LCD_shift_cursor@i 007D                   __end_of_fround 4632  
                _CAN_interpreter 5802                   i2_CANisTxReady 5DBA  
      __end_of_F1_Button_Polling 5E48              start_initialization 5B66  
            __end_of__tdiv_to_l_ 4D32              CANSetMask@numBuffer 0078  
                  _data_speed_rx 0001           __end_of_CANsendMessage 1B26  
              ?_CANOperationMode 002B                    _data_steering 00EA  
                  ??_LCD_goto_xy 007F       i2CANsendMessage@dataLength 0042  
           i2CANsendMessage@data 0040               ??_CANOperationMode 006F  
           i2CANsendMessage@tamp 0048                  ___llmod@divisor 0073  
       __end_ofi2_CANsendMessage 286A       CANInitialize@FilterConfig1 0087  
     CANInitialize@FilterConfig2 0088                  ___llmod@counter 0077  
                       ??___flge 0077             _board_initialization 550C  
                       ??___wmul 0073                      __pdataBANK0 00EB  
               __CFG_LPT1OSC$OFF 000000                         ??_fround 009A  
         __end_ofi2_CANisTxReady 5DD8                    sprintf@tmpval 0137  
                      ___fladd@a 00A7                        ___fladd@b 00A3  
         CANInitialize@phaseSeg1 007D           CANInitialize@phaseSeg2 007E  
                     fround@prec 00A2              __end_of_LCD_Handler 4800  
                      ___fldiv@a 0081                        ___fldiv@b 007D  
                      ___flmul@a 0081                        ___flmul@b 007D  
                    __pbssCOMRAM 0001                        ___flsub@a 00BB  
                      ___flsub@b 00B7                    __pcstackBANK0 0060  
                  __pcstackBANK1 0129                      _BRGCON2bits 000F71  
                    _BRGCON3bits 000F72                 _Joystick_Polling 5A7E  
              __size_of___xxtofl 01CE        __size_of_LCD_enable_pulse 0022  
                   _isdigit$3801 0070       i2CANsendMessage@identifier 003C  
              _park_assist_state 0121                __size_of_delay_ms 003A  
                    ??_LCD_clear 007B                  ?_CANsendMessage 006F  
        LCD_write_message@buffer 0080                 _LCD_write_string 5D4E  
                ??_CANInitialize 0082                      sprintf@flag 012F  
                    sprintf@fval 013D                      sprintf@prec 013B  
               ??_LCD_initialize 007D               CANSetFilter@filter 006F  
      delay_set_quartz@frequency 006F               LCD_send_command@D0 0079  
             LCD_send_command@D1 0078               LCD_send_command@D2 0077  
             LCD_send_command@D3 007A              __end_of_LCD_goto_xy 5E10  
          __end_of_LCD_goto_line 550C            ?_board_initialization 002B  
                      __pintcode 0008                    __pmediumconst FECE  
                       ?___fladd 00A3                         ?___fldiv 007D  
                       ?___awdiv 0075                         ?___flneg 0096  
                       ?___awmod 006F                         ?___flmul 007D  
        __end_of_CAN_interpreter 58AC                         ?___flsub 00B7  
                       ?___fltol 00B7                         ?___lldiv 006F  
                       ?___llmod 006F                        __npowers_ FECF  
                    ??_ISR_bassa 002B                      __pintcodelo 0018  
     __end_of_PWR_Button_Polling 5DF4                  ?i2_CANisTxReady 002B  
                    __tdiv_to_l_ 4B94                     ??__div_to_l_ 0077  
                    _COMSTATbits 000F74                         ?_isdigit 002B  
     __size_of_F1_Button_Polling 001C                         _CAN_Send 5748  
                       ?_sprintf 00C1                   __size_of_scale 051A  
              ?_delay_set_quartz 002B            CANreceiveMessage@tamp 0047  
             ??_delay_set_quartz 006F                   ___wmul@product 0073  
                       _LATCbits 000F8B                         _LATDbits 000F8C  
                       _LATEbits 000F8D                         _IPR2bits 000FA2  
   _delay_quartz_frequency_value 00EB                         _IPR3bits 000FA5  
                       _PIE2bits 000FA0                         _PIE3bits 000FA3  
             __end_of__div_to_l_ 504A                         _PIR2bits 000FA1  
                       _PIR3bits 000FA4                         _RXB0EIDH 000F63  
                       _RXB0EIDL 000F64                         _RXB1EIDH 000F53  
                      _pr_time_1 00D3                        _pr_time_2 00D7  
                       _RXB1EIDL 000F54                        _pr_time_3 0010  
                      _pr_time_4 0014                        _pr_time_5 0018  
                      _pr_time_6 001C                        _set_speed 00E1  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                       _RXB0SIDH 000F61                         _RXB0SIDL 000F62  
                       _RXF0EIDH 000F02                         _RXB1SIDH 000F51  
                       _RXF0EIDL 000F03                         _RXB1SIDL 000F52  
                       _RXF1EIDH 000F06                         _RXF1EIDL 000F07  
                       _RXF2EIDH 000F0A                         _RXF2EIDL 000F0B  
                       _RXF3EIDH 000F0E                         _RXF3EIDL 000F0F  
                       _RXF4EIDH 000F12                         _RXF4EIDL 000F13  
                       _RXF5EIDH 000F16                         _RXF5EIDL 000F17  
                       _RXF0SIDH 000F00                         _RXF0SIDL 000F01  
                       _TXB0EIDH 000F43                         _RXF1SIDH 000F04  
                       _TXB0EIDL 000F44                         _RXF1SIDL 000F05  
                       _TXB1EIDH 000F33                         _RXF2SIDH 000F08  
                       _TXB1EIDL 000F34                         _RXF2SIDL 000F09  
                       _ISR_alta 0008                         _TXB2EIDH 000F23  
                       _RXF3SIDH 000F0C                         _TXB2EIDL 000F24  
                       _RXF3SIDL 000F0D                         _RXF4SIDH 000F10  
                       _RXF4SIDL 000F11                         _RXF5SIDH 000F14  
                       _RXF5SIDL 000F15                         _RXM0EIDH 000F1A  
                       _RXM0EIDL 000F1B                         _TXB0SIDH 000F41  
                       _RXM1EIDH 000F1E                         _TXB0SIDL 000F42  
                       _RXM1EIDL 000F1F                         _TXB1SIDH 000F31  
                       _TXB1SIDL 000F32                         _TXB2SIDH 000F21  
                       _TXB2SIDL 000F22                      _LCD_Handler 4632  
                       _RXM0SIDH 000F18                         _RXM0SIDL 000F19  
                       _RXM1SIDH 000F1C                         _RXM1SIDL 000F1D  
                       _RXERRCNT 000F75                         _TXERRCNT 000F76  
                     _ADCON0bits 000FC2                       _ADCON2bits 000FC0  
              ___wmul@multiplier 006F                         _RTR_Flag 0264  
              ?_LCD_send_command 0077                 _actual_speed_kmh 0008  
             ??_LCD_send_command 007A                    ?_CANSetFilter 006F  
                     _CANCONbits 000F6F                      _LCD_goto_xy 5DF4  
               ??_LCD_write_char 007B                LCD_goto_line@line 007B  
                       __Hrparam 0000                     _RXB0SIDLbits 000F62  
         ??_board_initialization 0089                         __Lrparam 0000  
                   _RXB1SIDLbits 000F52                 ?_CAN_interpreter 002B  
               __size_of___fladd 04A8                       _CANSetMask 3F9E  
               __size_of___fldiv 03C0                 __size_of___awdiv 00BE  
               __size_of___flneg 0038                 __size_of___awmod 00A2  
               __size_of___flmul 04A6                ?_LCD_shift_cursor 007B  
               __size_of___flsub 0048                 __size_of___fltol 010C  
               __size_of___lldiv 00BC                 __size_of___llmod 009A  
                    _fround$4220 009A                      _fround$4219 009E  
             ??_LCD_shift_cursor 007C                       sprintf@exp 0135  
                     sprintf@val 0131                         ___xxtofl 4800  
                   _RXF0SIDLbits 000F01                 __size_of_isdigit 002A  
                       _delay_ms 5BE4                     _RXF1SIDLbits 000F05  
                 ??_CANSetFilter 0074                 _LCD_enable_pulse 5D98  
                       __ptext10 5D24                         __ptext11 433C  
                       __ptext20 5314                         __ptext12 3738  
                       __ptext21 5B1E                         __ptext13 58AC  
                       __ptext30 5E74                         __ptext22 3290  
                       __ptext14 55CE                         __ptext31 5CC0  
                       __ptext23 5C1E                         __ptext15 4B94  
                       __ptext40 5A7E                         __ptext32 5CF2  
                       __ptext24 4D32                         __ptext16 4EC2  
                       __ptext41 5E10                         __ptext33 5DF4  
                       __ptext25 3BDE                         __ptext17 4800  
                       __ptext50 5DBA                         __ptext42 5E2C  
                       __ptext34 5AD2                         __ptext26 5D4E  
                       __ptext18 594E                         __ptext51 2D84  
                       __ptext43 5802                         __ptext35 5420  
                       __ptext27 5C8C                         __ptext19 568C  
                       __ptext52 5E5E                         __ptext44 5748  
                       __ptext36 5BAA                         __ptext28 59E8  
                       __ptext45 139A                         __ptext37 5D98  
                       __ptext29 504A                         __ptext46 5D74  
                       __ptext38 5BE4                         __ptext39 5C56  
                       __ptext49 21DA                     _RXF2SIDLbits 000F09  
                       __powers_ FF03                     _RXF3SIDLbits 000F0D  
               __size_of_sprintf 0894                     _RXF4SIDLbits 000F11  
                   _RXF5SIDLbits 000F15         CANsendMessage@dataLength 0075  
                  __size_of_main 06B4                ?i2_CANsendMessage 003C  
           CANreceiveMessage@msg 003C            LCD_shift_cursor@shift 007C  
            i2_CANisTxReady$3235 003C                     _TXB0SIDLbits 000F42  
              Joystick_Polling@i 0070               ??i2_CANsendMessage 0044  
                   _TXB1SIDLbits 000F32         __end_of_Joystick_Polling 5AD2  
                   _TXB2SIDLbits 000F22                         int$flags 004E  
      __size_of_CANOperationMode 0016                    ?_CANisRxReady 002B  
                  ?_CANisTxReady 002B         __end_of_LCD_write_string 5D74  
                    _RXB0DLCbits 000F65                      _RXB1DLCbits 000F55  
                   _RXM0SIDLbits 000F19                      _RXB0CONbits 000F60  
                     _LCD_cursor 5CC0                      _RXB1CONbits 000F50  
              _CANreceiveMessage 2D84                     _RXM1SIDLbits 000F1D  
                     _INTCONbits 000FF2                     _set_steering 0029  
               ??_CANsendMessage 0077               ?_CANreceiveMessage 003C  
                       isdigit@c 0071                         scale@scl 009E  
       CANsendMessage@identifier 006F                     _time_counter 0020  
                       intlevel1 0000                         intlevel2 0000  
                      sprintf@ap 012D                 __tdiv_to_l_@exp1 007F  
                      sprintf@sp 00C1                 __tdiv_to_l_@cntr 007E  
               CANSetFilter@tamp 0079                 __tdiv_to_l_@quot 007A  
               CANSetFilter@type 0073              ??_CANreceiveMessage 003E  
               ___lldiv@dividend 006F                      _TXB0DLCbits 000F45  
                    _right_speed 0026                      _TXB1DLCbits 000F35  
                    _TXB0CONbits 000F40                      _TXB2DLCbits 000F25  
                    _TXB1CONbits 000F30                      _TXB2CONbits 000F20  
                _display_refresh 0266                 ??i2_CANisTxReady 003C  
           CANOperationMode@mode 006F                   ??_CANisRxReady 003C  
                    ?_CANSetMask 006F                   ??_CANisTxReady 006F  
                   ?__tdiv_to_l_ 006F        __end_of_CANreceiveMessage 3290  
                       sprintf@c 0141                         sprintf@f 00C3  
               ___lldiv@quotient 0077  LCD_shift_cursor@number_of_shift 007B  
                  ___fladd@signs 00B3               _PWR_Button_Polling 5DD8  
                   ___fladd@aexp 00B4                     ___fladd@bexp 00B5  
          __end_of_CANInitialize 4B94              ?_PWR_Button_Polling 002B  
                   _power_switch 0268  
