

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Apr 24 17:36:04 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78  0000                     
    79                           	psect	idataBANK0
    80  016288                     __pidataBANK0:
    81                           	opt stack 0
    82                           
    83                           ;initializer for _delay_quartz_frequency_value
    84  016288  10                 	db	16
    85                           
    86                           	psect	mediumconst
    87  00FEB4                     __pmediumconst:
    88                           	opt stack 0
    89  00FEB4  00                 	db	0
    90  00FEB5                     __npowers_:
    91                           	opt stack 0
    92  00FEB5  0000               	dw	0
    93  00FEB7  3F80               	dw	16256
    94  00FEB9  CCCD               	dw	52429
    95  00FEBB  3DCC               	dw	15820
    96  00FEBD  D70A               	dw	55050
    97  00FEBF  3C23               	dw	15395
    98  00FEC1  126F               	dw	4719
    99  00FEC3  3A83               	dw	14979
   100  00FEC5  B717               	dw	46871
   101  00FEC7  38D1               	dw	14545
   102  00FEC9  C5AC               	dw	50604
   103  00FECB  3727               	dw	14119
   104  00FECD  37BD               	dw	14269
   105  00FECF  3586               	dw	13702
   106  00FED1  BF95               	dw	49045
   107  00FED3  33D6               	dw	13270
   108  00FED5  CC77               	dw	52343
   109  00FED7  322B               	dw	12843
   110  00FED9  705F               	dw	28767
   111  00FEDB  3089               	dw	12425
   112  00FEDD  E6FF               	dw	59135
   113  00FEDF  2EDB               	dw	11995
   114  00FEE1  E508               	dw	58632
   115  00FEE3  1E3C               	dw	7740
   116  00FEE5  4260               	dw	16992
   117  00FEE7  0DA2               	dw	3490
   118  00FEE9                     __end_of__npowers_:
   119                           	opt stack 0
   120  00FEE9                     __powers_:
   121                           	opt stack 0
   122  00FEE9  0000               	dw	0
   123  00FEEB  3F80               	dw	16256
   124  00FEED  0000               	dw	0
   125  00FEEF  4120               	dw	16672
   126  00FEF1  0000               	dw	0
   127  00FEF3  42C8               	dw	17096
   128  00FEF5  0000               	dw	0
   129  00FEF7  447A               	dw	17530
   130  00FEF9  4000               	dw	16384
   131  00FEFB  461C               	dw	17948
   132  00FEFD  5000               	dw	20480
   133  00FEFF  47C3               	dw	18371
   134  00FF01  2400               	dw	9216
   135  00FF03  4974               	dw	18804
   136  00FF05  9680               	dw	38528
   137  00FF07  4B18               	dw	19224
   138  00FF09  BC20               	dw	48160
   139  00FF0B  4CBE               	dw	19646
   140  00FF0D  6B28               	dw	27432
   141  00FF0F  4E6E               	dw	20078
   142  00FF11  02F9               	dw	761
   143  00FF13  5015               	dw	20501
   144  00FF15  78EC               	dw	30956
   145  00FF17  60AD               	dw	24749
   146  00FF19  F2CA               	dw	62154
   147  00FF1B  7149               	dw	29001
   148  00FF1D                     __end_of__powers_:
   149                           	opt stack 0
   150  00FF1D                     _dpowers:
   151                           	opt stack 0
   152  00FF1D  0001               	dw	1
   153  00FF1F  0000               	dw	0
   154  00FF21  000A               	dw	10
   155  00FF23  0000               	dw	0
   156  00FF25  0064               	dw	100
   157  00FF27  0000               	dw	0
   158  00FF29  03E8               	dw	1000
   159  00FF2B  0000               	dw	0
   160  00FF2D  2710               	dw	10000
   161  00FF2F  0000               	dw	0
   162  00FF31  86A0               	dw	34464
   163  00FF33  0001               	dw	1
   164  00FF35  4240               	dw	16960
   165  00FF37  000F               	dw	15
   166  00FF39  9680               	dw	38528
   167  00FF3B  0098               	dw	152
   168  00FF3D  E100               	dw	57600
   169  00FF3F  05F5               	dw	1525
   170  00FF41  CA00               	dw	51712
   171  00FF43  3B9A               	dw	15258
   172  00FF45                     __end_of_dpowers:
   173                           	opt stack 0
   174  0000                     _RXB1CON	set	3920
   175  0000                     _RXB1CONbits	set	3920
   176  0000                     _RXB1D0	set	3926
   177  0000                     _RXB1D1	set	3927
   178  0000                     _RXB1D2	set	3928
   179  0000                     _RXB1D3	set	3929
   180  0000                     _RXB1D4	set	3930
   181  0000                     _RXB1D5	set	3931
   182  0000                     _RXB1D6	set	3932
   183  0000                     _RXB1D7	set	3933
   184  0000                     _RXB1DLC	set	3925
   185  0000                     _RXB1DLCbits	set	3925
   186  0000                     _RXB1EIDH	set	3923
   187  0000                     _RXB1EIDL	set	3924
   188  0000                     _RXB1SIDH	set	3921
   189  0000                     _RXB1SIDL	set	3922
   190  0000                     _RXB1SIDLbits	set	3922
   191  0000                     _RXF0EIDH	set	3842
   192  0000                     _RXF0EIDL	set	3843
   193  0000                     _RXF0SIDH	set	3840
   194  0000                     _RXF0SIDL	set	3841
   195  0000                     _RXF0SIDLbits	set	3841
   196  0000                     _RXF1EIDH	set	3846
   197  0000                     _RXF1EIDL	set	3847
   198  0000                     _RXF1SIDH	set	3844
   199  0000                     _RXF1SIDL	set	3845
   200  0000                     _RXF1SIDLbits	set	3845
   201  0000                     _RXF2EIDH	set	3850
   202  0000                     _RXF2EIDL	set	3851
   203  0000                     _RXF2SIDH	set	3848
   204  0000                     _RXF2SIDL	set	3849
   205  0000                     _RXF2SIDLbits	set	3849
   206  0000                     _RXF3EIDH	set	3854
   207  0000                     _RXF3EIDL	set	3855
   208  0000                     _RXF3SIDH	set	3852
   209  0000                     _RXF3SIDL	set	3853
   210  0000                     _RXF3SIDLbits	set	3853
   211  0000                     _RXF4EIDH	set	3858
   212  0000                     _RXF4EIDL	set	3859
   213  0000                     _RXF4SIDH	set	3856
   214  0000                     _RXF4SIDL	set	3857
   215  0000                     _RXF4SIDLbits	set	3857
   216  0000                     _RXF5EIDH	set	3862
   217  0000                     _RXF5EIDL	set	3863
   218  0000                     _RXF5SIDH	set	3860
   219  0000                     _RXF5SIDL	set	3861
   220  0000                     _RXF5SIDLbits	set	3861
   221  0000                     _RXM0EIDH	set	3866
   222  0000                     _RXM0EIDL	set	3867
   223  0000                     _RXM0SIDH	set	3864
   224  0000                     _RXM0SIDL	set	3865
   225  0000                     _RXM0SIDLbits	set	3865
   226  0000                     _RXM1EIDH	set	3870
   227  0000                     _RXM1EIDL	set	3871
   228  0000                     _RXM1SIDH	set	3868
   229  0000                     _RXM1SIDL	set	3869
   230  0000                     _RXM1SIDLbits	set	3869
   231  0000                     _TXB0CONbits	set	3904
   232  0000                     _TXB0D0	set	3910
   233  0000                     _TXB0D1	set	3911
   234  0000                     _TXB0D2	set	3912
   235  0000                     _TXB0D3	set	3913
   236  0000                     _TXB0D4	set	3914
   237  0000                     _TXB0D5	set	3915
   238  0000                     _TXB0D6	set	3916
   239  0000                     _TXB0D7	set	3917
   240  0000                     _TXB0DLC	set	3909
   241  0000                     _TXB0DLCbits	set	3909
   242  0000                     _TXB0EIDH	set	3907
   243  0000                     _TXB0EIDL	set	3908
   244  0000                     _TXB0SIDH	set	3905
   245  0000                     _TXB0SIDL	set	3906
   246  0000                     _TXB0SIDLbits	set	3906
   247  0000                     _TXB1CONbits	set	3888
   248  0000                     _TXB1D0	set	3894
   249  0000                     _TXB1D1	set	3895
   250  0000                     _TXB1D2	set	3896
   251  0000                     _TXB1D3	set	3897
   252  0000                     _TXB1D4	set	3898
   253  0000                     _TXB1D5	set	3899
   254  0000                     _TXB1D6	set	3900
   255  0000                     _TXB1D7	set	3901
   256  0000                     _TXB1DLC	set	3893
   257  0000                     _TXB1DLCbits	set	3893
   258  0000                     _TXB1EIDH	set	3891
   259  0000                     _TXB1EIDL	set	3892
   260  0000                     _TXB1SIDH	set	3889
   261  0000                     _TXB1SIDL	set	3890
   262  0000                     _TXB1SIDLbits	set	3890
   263  0000                     _TXB2CONbits	set	3872
   264  0000                     _TXB2D0	set	3878
   265  0000                     _TXB2D1	set	3879
   266  0000                     _TXB2D2	set	3880
   267  0000                     _TXB2D3	set	3881
   268  0000                     _TXB2D4	set	3882
   269  0000                     _TXB2D5	set	3883
   270  0000                     _TXB2D6	set	3884
   271  0000                     _TXB2D7	set	3885
   272  0000                     _TXB2DLC	set	3877
   273  0000                     _TXB2DLCbits	set	3877
   274  0000                     _TXB2EIDH	set	3875
   275  0000                     _TXB2EIDL	set	3876
   276  0000                     _TXB2SIDH	set	3873
   277  0000                     _TXB2SIDL	set	3874
   278  0000                     _TXB2SIDLbits	set	3874
   279  0000                     _ADCON0bits	set	4034
   280  0000                     _ADCON1	set	4033
   281  0000                     _ADCON2bits	set	4032
   282  0000                     _ADRESH	set	4036
   283  0000                     _BRGCON1	set	3952
   284  0000                     _BRGCON2	set	3953
   285  0000                     _BRGCON2bits	set	3953
   286  0000                     _BRGCON3	set	3954
   287  0000                     _BRGCON3bits	set	3954
   288  0000                     _CANCON	set	3951
   289  0000                     _CANCONbits	set	3951
   290  0000                     _CANSTAT	set	3950
   291  0000                     _COMSTATbits	set	3956
   292  0000                     _INTCONbits	set	4082
   293  0000                     _IPR2bits	set	4002
   294  0000                     _IPR3bits	set	4005
   295  0000                     _LATA	set	3977
   296  0000                     _LATB	set	3978
   297  0000                     _LATC	set	3979
   298  0000                     _LATCbits	set	3979
   299  0000                     _LATD	set	3980
   300  0000                     _LATDbits	set	3980
   301  0000                     _LATE	set	3981
   302  0000                     _LATEbits	set	3981
   303  0000                     _PIE2bits	set	4000
   304  0000                     _PIE3bits	set	4003
   305  0000                     _PIR2bits	set	4001
   306  0000                     _PIR3bits	set	4004
   307  0000                     _PORTAbits	set	3968
   308  0000                     _PORTBbits	set	3969
   309  0000                     _PORTDbits	set	3971
   310  0000                     _RCONbits	set	4048
   311  0000                     _RXB0CON	set	3936
   312  0000                     _RXB0CONbits	set	3936
   313  0000                     _RXB0D0	set	3942
   314  0000                     _RXB0D1	set	3943
   315  0000                     _RXB0D2	set	3944
   316  0000                     _RXB0D3	set	3945
   317  0000                     _RXB0D4	set	3946
   318  0000                     _RXB0D5	set	3947
   319  0000                     _RXB0D6	set	3948
   320  0000                     _RXB0D7	set	3949
   321  0000                     _RXB0DLC	set	3941
   322  0000                     _RXB0DLCbits	set	3941
   323  0000                     _RXB0EIDH	set	3939
   324  0000                     _RXB0EIDL	set	3940
   325  0000                     _RXB0SIDH	set	3937
   326  0000                     _RXB0SIDL	set	3938
   327  0000                     _RXB0SIDLbits	set	3938
   328  0000                     _RXERRCNT	set	3957
   329  0000                     _T3CON	set	4017
   330  0000                     _TMR3H	set	4019
   331  0000                     _TMR3L	set	4018
   332  0000                     _TRISA	set	3986
   333  0000                     _TRISB	set	3987
   334  0000                     _TRISC	set	3988
   335  0000                     _TRISD	set	3989
   336  0000                     _TRISE	set	3990
   337  0000                     _TXERRCNT	set	3958
   338  00FF45                     STR_3:
   339  00FF45  20                 	db	32
   340  00FF46  20                 	db	32
   341  00FF47  50                 	db	80	;'P'
   342  00FF48  72                 	db	114	;'r'
   343  00FF49  65                 	db	101	;'e'
   344  00FF4A  73                 	db	115	;'s'
   345  00FF4B  73                 	db	115	;'s'
   346  00FF4C  20                 	db	32
   347  00FF4D  74                 	db	116	;'t'
   348  00FF4E  68                 	db	104	;'h'
   349  00FF4F  65                 	db	101	;'e'
   350  00FF50  20                 	db	32
   351  00FF51  62                 	db	98	;'b'
   352  00FF52  75                 	db	117	;'u'
   353  00FF53  74                 	db	116	;'t'
   354  00FF54  74                 	db	116	;'t'
   355  00FF55  6F                 	db	111	;'o'
   356  00FF56  6E                 	db	110	;'n'
   357  00FF57  20                 	db	32
   358  00FF58  20                 	db	32
   359  00FF59  00                 	db	0
   360  00FF5A                     STR_2:
   361  00FF5A  3D                 	db	61	;'='
   362  00FF5B  3D                 	db	61	;'='
   363  00FF5C  3E                 	db	62	;'>'
   364  00FF5D  20                 	db	32
   365  00FF5E  56                 	db	86	;'V'
   366  00FF5F  45                 	db	69	;'E'
   367  00FF60  48                 	db	72	;'H'
   368  00FF61  49                 	db	73	;'I'
   369  00FF62  43                 	db	67	;'C'
   370  00FF63  4C                 	db	76	;'L'
   371  00FF64  45                 	db	69	;'E'
   372  00FF65  20                 	db	32
   373  00FF66  20                 	db	32
   374  00FF67  4F                 	db	79	;'O'
   375  00FF68  46                 	db	70	;'F'
   376  00FF69  46                 	db	70	;'F'
   377  00FF6A  20                 	db	32
   378  00FF6B  3C                 	db	60	;'<'
   379  00FF6C  3D                 	db	61	;'='
   380  00FF6D  3D                 	db	61	;'='
   381  00FF6E  00                 	db	0
   382  00FF6F                     STR_6:
   383  00FF6F  3D                 	db	61	;'='
   384  00FF70  3D                 	db	61	;'='
   385  00FF71  3D                 	db	61	;'='
   386  00FF72  20                 	db	32
   387  00FF73  56                 	db	86	;'V'
   388  00FF74  45                 	db	69	;'E'
   389  00FF75  48                 	db	72	;'H'
   390  00FF76  49                 	db	73	;'I'
   391  00FF77  43                 	db	67	;'C'
   392  00FF78  4C                 	db	76	;'L'
   393  00FF79  45                 	db	69	;'E'
   394  00FF7A  20                 	db	32
   395  00FF7B  44                 	db	68	;'D'
   396  00FF7C  41                 	db	65	;'A'
   397  00FF7D  54                 	db	84	;'T'
   398  00FF7E  41                 	db	65	;'A'
   399  00FF7F  20                 	db	32
   400  00FF80  3D                 	db	61	;'='
   401  00FF81  3D                 	db	61	;'='
   402  00FF82  3D                 	db	61	;'='
   403  00FF83  00                 	db	0
   404  00FF84                     STR_1:
   405  00FF84  3D                 	db	61	;'='
   406  00FF85  3D                 	db	61	;'='
   407  00FF86  3D                 	db	61	;'='
   408  00FF87  3D                 	db	61	;'='
   409  00FF88  3D                 	db	61	;'='
   410  00FF89  3D                 	db	61	;'='
   411  00FF8A  3D                 	db	61	;'='
   412  00FF8B  3D                 	db	61	;'='
   413  00FF8C  3D                 	db	61	;'='
   414  00FF8D  3D                 	db	61	;'='
   415  00FF8E  3D                 	db	61	;'='
   416  00FF8F  3D                 	db	61	;'='
   417  00FF90  3D                 	db	61	;'='
   418  00FF91  3D                 	db	61	;'='
   419  00FF92  3D                 	db	61	;'='
   420  00FF93  3D                 	db	61	;'='
   421  00FF94  3D                 	db	61	;'='
   422  00FF95  3D                 	db	61	;'='
   423  00FF96  3D                 	db	61	;'='
   424  00FF97  3D                 	db	61	;'='
   425  00FF98  00                 	db	0
   426  00FF99                     STR_8:
   427  00FF99  53                 	db	83	;'S'
   428  00FF9A  70                 	db	112	;'p'
   429  00FF9B  65                 	db	101	;'e'
   430  00FF9C  65                 	db	101	;'e'
   431  00FF9D  64                 	db	100	;'d'
   432  00FF9E  3A                 	db	58	;':'
   433  00FF9F  20                 	db	32
   434  00FFA0  30                 	db	48	;'0'
   435  00FFA1  2E                 	db	46
   436  00FFA2  30                 	db	48	;'0'
   437  00FFA3  30                 	db	48	;'0'
   438  00FFA4  20                 	db	32
   439  00FFA5  4B                 	db	75	;'K'
   440  00FFA6  6D                 	db	109	;'m'
   441  00FFA7  2F                 	db	47
   442  00FFA8  68                 	db	104	;'h'
   443  00FFA9  00                 	db	0
   444  00FFAA                     STR_9:
   445  00FFAA  50                 	db	80	;'P'
   446  00FFAB  61                 	db	97	;'a'
   447  00FFAC  72                 	db	114	;'r'
   448  00FFAD  6B                 	db	107	;'k'
   449  00FFAE  20                 	db	32
   450  00FFAF  61                 	db	97	;'a'
   451  00FFB0  73                 	db	115	;'s'
   452  00FFB1  73                 	db	115	;'s'
   453  00FFB2  69                 	db	105	;'i'
   454  00FFB3  73                 	db	115	;'s'
   455  00FFB4  74                 	db	116	;'t'
   456  00FFB5  3A                 	db	58	;':'
   457  00FFB6  20                 	db	32
   458  00FFB7  00                 	db	0
   459  00FFB8                     STR_7:
   460  00FFB8  44                 	db	68	;'D'
   461  00FFB9  69                 	db	105	;'i'
   462  00FFBA  72                 	db	114	;'r'
   463  00FFBB  65                 	db	101	;'e'
   464  00FFBC  63                 	db	99	;'c'
   465  00FFBD  74                 	db	116	;'t'
   466  00FFBE  69                 	db	105	;'i'
   467  00FFBF  6F                 	db	111	;'o'
   468  00FFC0  6E                 	db	110	;'n'
   469  00FFC1  3A                 	db	58	;':'
   470  00FFC2  20                 	db	32
   471  00FFC3  00                 	db	0
   472  00FFC4                     STR_14:
   473  00FFC4  4F                 	db	79	;'O'
   474  00FFC5  46                 	db	70	;'F'
   475  00FFC6  46                 	db	70	;'F'
   476  00FFC7  20                 	db	32
   477  00FFC8  20                 	db	32
   478  00FFC9  20                 	db	32
   479  00FFCA  20                 	db	32
   480  00FFCB  00                 	db	0
   481  00FFCC                     STR_16:
   482  00FFCC  46                 	db	70	;'F'
   483  00FFCD  4F                 	db	79	;'O'
   484  00FFCE  55                 	db	85	;'U'
   485  00FFCF  4E                 	db	78	;'N'
   486  00FFD0  44                 	db	68	;'D'
   487  00FFD1  21                 	db	33
   488  00FFD2  20                 	db	32
   489  00FFD3  00                 	db	0
   490  00FFD4                     STR_15:
   491  00FFD4  53                 	db	83	;'S'
   492  00FFD5  45                 	db	69	;'E'
   493  00FFD6  41                 	db	65	;'A'
   494  00FFD7  52                 	db	82	;'R'
   495  00FFD8  43                 	db	67	;'C'
   496  00FFD9  48                 	db	72	;'H'
   497  00FFDA  20                 	db	32
   498  00FFDB  00                 	db	0
   499  00FFDC                     STR_17:
   500  00FFDC  50                 	db	80	;'P'
   501  00FFDD  41                 	db	65	;'A'
   502  00FFDE  52                 	db	82	;'R'
   503  00FFDF  4B                 	db	75	;'K'
   504  00FFE0  49                 	db	73	;'I'
   505  00FFE1  4E                 	db	78	;'N'
   506  00FFE2  47                 	db	71	;'G'
   507  00FFE3  00                 	db	0
   508  00FFE4                     STR_10:
   509  00FFE4  44                 	db	68	;'D'
   510  00FFE5  61                 	db	97	;'a'
   511  00FFE6  74                 	db	116	;'t'
   512  00FFE7  61                 	db	97	;'a'
   513  00FFE8  3A                 	db	58	;':'
   514  00FFE9  20                 	db	32
   515  00FFEA  00                 	db	0
   516  00FFEB                     STR_13:
   517  00FFEB  50                 	db	80	;'P'
   518  00FFEC  20                 	db	32
   519  00FFED  20                 	db	32
   520  00FFEE  20                 	db	32
   521  00FFEF  00                 	db	0
   522  00FFF0                     STR_11:
   523  00FFF0  46                 	db	70	;'F'
   524  00FFF1  57                 	db	87	;'W'
   525  00FFF2  44                 	db	68	;'D'
   526  00FFF3  20                 	db	32
   527  00FFF4  00                 	db	0
   528  00FFF5                     STR_12:
   529  00FFF5  42                 	db	66	;'B'
   530  00FFF6  4B                 	db	75	;'K'
   531  00FFF7  57                 	db	87	;'W'
   532  00FFF8  44                 	db	68	;'D'
   533  00FFF9  00                 	db	0
   534  00FFFA                     STR_5:
   535  00FFFA  25                 	db	37
   536  00FFFB  2E                 	db	46
   537  00FFFC  32                 	db	50	;'2'
   538  00FFFD  66                 	db	102	;'f'
   539  00FFFE  00                 	db	0
   540  0000                     
   541                           ; #config settings
   542  00FFFF  00                 	db	0	; dummy byte at the end
   543  0000                     
   544                           	psect	cinit
   545  015F70                     __pcinit:
   546                           	opt stack 0
   547  015F70                     start_initialization:
   548                           	opt stack 0
   549  015F70                     __initialization:
   550                           	opt stack 0
   551                           
   552                           ; Clear objects allocated to BANK1 (48 bytes)
   553  015F70  EE01  F000         	lfsr	0,__pbssBANK1
   554  015F74  0E30               	movlw	48
   555  015F76                     clear_0:
   556  015F76  6AEE               	clrf	postinc0,c
   557  015F78  06E8               	decf	wreg,f,c
   558  015F7A  E1FD               	bnz	clear_0
   559                           
   560                           ; Clear objects allocated to BANK0 (31 bytes)
   561  015F7C  EE00  F0D2         	lfsr	0,__pbssBANK0
   562  015F80  0E1F               	movlw	31
   563  015F82                     clear_1:
   564  015F82  6AEE               	clrf	postinc0,c
   565  015F84  06E8               	decf	wreg,f,c
   566  015F86  E1FD               	bnz	clear_1
   567                           
   568                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   569  015F88  6A4B               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   570  015F8A  6A4A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   571                           
   572                           ; Clear objects allocated to COMRAM (39 bytes)
   573  015F8C  EE00  F001         	lfsr	0,__pbssCOMRAM
   574  015F90  0E27               	movlw	39
   575  015F92                     clear_2:
   576  015F92  6AEE               	clrf	postinc0,c
   577  015F94  06E8               	decf	wreg,f,c
   578  015F96  E1FD               	bnz	clear_2
   579                           
   580                           ; Initialize objects allocated to BANK0 (1 bytes)
   581                           ; load TBLPTR registers with __pidataBANK0
   582  015F98  0E88               	movlw	low __pidataBANK0
   583  015F9A  6EF6               	movwf	tblptrl,c
   584  015F9C  0E62               	movlw	high __pidataBANK0
   585  015F9E  6EF7               	movwf	tblptrh,c
   586  015FA0  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   587  015FA2  6EF8               	movwf	tblptru,c
   588  015FA4  0009               	tblrd		*+	;fetch initializer
   589  015FA6  CFF5 F0F1          	movff	tablat,__pdataBANK0
   590  015FAA                     end_of_initialization:
   591                           	opt stack 0
   592  015FAA                     __end_of__initialization:
   593                           	opt stack 0
   594  015FAA  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   595  015FAC  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   596  015FAE  0100               	movlb	0
   597  015FB0  EF93  F08D         	goto	_main	;jump to C main() function
   598                           tblptru	equ	0xFF8
   599                           tblptrh	equ	0xFF7
   600                           tblptrl	equ	0xFF6
   601                           tablat	equ	0xFF5
   602                           postinc0	equ	0xFEE
   603                           wreg	equ	0xFE8
   604                           
   605                           	psect	bitbssCOMRAM
   606  000250                     __pbitbssCOMRAM:
   607                           	opt stack 0
   608  000250                     _AbsFlag:
   609                           	opt stack 0
   610  000250                     	ds	1
   611  000251                     _F1_switch:
   612                           	opt stack 0
   613  000251                     	ds	1
   614  000252                     _F2_switch:
   615                           	opt stack 0
   616  000252                     	ds	1
   617  000253                     _MotoreFlag:
   618                           	opt stack 0
   619  000253                     	ds	1
   620  000254                     _RTR_Flag:
   621                           	opt stack 0
   622  000254                     	ds	1
   623  000255                     _SterzoFlag:
   624                           	opt stack 0
   625  000255                     	ds	1
   626  000256                     _display_refresh:
   627                           	opt stack 0
   628  000256                     	ds	1
   629  000257                     _newMessageCan:
   630                           	opt stack 0
   631  000257                     	ds	1
   632  000258                     _power_switch:
   633                           	opt stack 0
   634  000258                     	ds	1
   635  000259                     _space_available:
   636                           	opt stack 0
   637  000259                     	ds	1
   638  00025A                     _steering_correction_dir:
   639                           	opt stack 0
   640  00025A                     	ds	1
   641  00025B                     _wait_low_1:
   642                           	opt stack 0
   643  00025B                     	ds	1
   644  00025C                     _wait_low_2:
   645                           	opt stack 0
   646  00025C                     	ds	1
   647  00025D                     _wait_low_3:
   648                           	opt stack 0
   649  00025D                     	ds	1
   650  00025E                     _y:
   651                           	opt stack 0
   652  00025E                     	ds	1
   653                           tblptru	equ	0xFF8
   654                           tblptrh	equ	0xFF7
   655                           tblptrl	equ	0xFF6
   656                           tablat	equ	0xFF5
   657                           postinc0	equ	0xFEE
   658                           wreg	equ	0xFE8
   659                           
   660                           	psect	bssCOMRAM
   661  000001                     __pbssCOMRAM:
   662                           	opt stack 0
   663  000001                     _actual_speed_kmh:
   664                           	opt stack 0
   665  000001                     	ds	4
   666  000005                     _id:
   667                           	opt stack 0
   668  000005                     	ds	4
   669  000009                     _pr_time_1:
   670                           	opt stack 0
   671  000009                     	ds	4
   672  00000D                     _pr_time_2:
   673                           	opt stack 0
   674  00000D                     	ds	4
   675  000011                     _pr_time_3:
   676                           	opt stack 0
   677  000011                     	ds	4
   678  000015                     _pr_time_4:
   679                           	opt stack 0
   680  000015                     	ds	4
   681  000019                     _pr_time_5:
   682                           	opt stack 0
   683  000019                     	ds	4
   684  00001D                     _time_counter:
   685                           	opt stack 0
   686  00001D                     	ds	4
   687  000021                     _left_speed:
   688                           	opt stack 0
   689  000021                     	ds	2
   690  000023                     _right_speed:
   691                           	opt stack 0
   692  000023                     	ds	2
   693  000025                     _battery:
   694                           	opt stack 0
   695  000025                     	ds	1
   696  000026                     _set_steering:
   697                           	opt stack 0
   698  000026                     	ds	1
   699  000027                     _data:
   700                           	opt stack 0
   701  000027                     	ds	1
   702                           tblptru	equ	0xFF8
   703                           tblptrh	equ	0xFF7
   704                           tblptrl	equ	0xFF6
   705                           tablat	equ	0xFF5
   706                           postinc0	equ	0xFEE
   707                           wreg	equ	0xFE8
   708                           
   709                           	psect	bssBANK0
   710  0000D2                     __pbssBANK0:
   711                           	opt stack 0
   712  0000D2                     _JoystickConstants:
   713                           	opt stack 0
   714  0000D2                     	ds	8
   715  0000DA                     _check:
   716                           	opt stack 0
   717  0000DA                     	ds	4
   718  0000DE                     _JoystickValues:
   719                           	opt stack 0
   720  0000DE                     	ds	2
   721  0000E0                     _actual_speed:
   722                           	opt stack 0
   723  0000E0                     	ds	2
   724  0000E2                     _clock_counter_reference:
   725                           	opt stack 0
   726  0000E2                     	ds	2
   727  0000E4                     _set_speed:
   728                           	opt stack 0
   729  0000E4                     	ds	2
   730  0000E6                     _user_data:
   731                           	opt stack 0
   732  0000E6                     	ds	2
   733  0000E8                     _dir:
   734                           	opt stack 0
   735  0000E8                     	ds	1
   736  0000E9                     _parking_state:
   737                           	opt stack 0
   738  0000E9                     	ds	1
   739  0000EA                     _steering_correction:
   740                           	opt stack 0
   741  0000EA                     	ds	1
   742  0000EB                     _switch_position:
   743                           	opt stack 0
   744  0000EB                     	ds	1
   745  0000EC                     _x:
   746                           	opt stack 0
   747  0000EC                     	ds	1
   748  0000ED                     _z:
   749                           	opt stack 0
   750  0000ED                     	ds	1
   751  0000EE                     _data_brake:
   752                           	opt stack 0
   753  0000EE                     	ds	1
   754  0000EF                     _data_speed:
   755                           	opt stack 0
   756  0000EF                     	ds	1
   757  0000F0                     _data_steering:
   758                           	opt stack 0
   759  0000F0                     	ds	1
   760                           tblptru	equ	0xFF8
   761                           tblptrh	equ	0xFF7
   762                           tblptrl	equ	0xFF6
   763                           tablat	equ	0xFF5
   764                           postinc0	equ	0xFEE
   765                           wreg	equ	0xFE8
   766                           
   767                           	psect	dataBANK0
   768  0000F1                     __pdataBANK0:
   769                           	opt stack 0
   770  0000F1                     _delay_quartz_frequency_value:
   771                           	opt stack 0
   772  0000F1                     	ds	1
   773                           tblptru	equ	0xFF8
   774                           tblptrh	equ	0xFF7
   775                           tblptrl	equ	0xFF6
   776                           tablat	equ	0xFF5
   777                           postinc0	equ	0xFEE
   778                           wreg	equ	0xFE8
   779                           
   780                           	psect	bssBANK1
   781  000100                     __pbssBANK1:
   782                           	opt stack 0
   783  000100                     _data_speed_rx:
   784                           	opt stack 0
   785  000100                     	ds	7
   786  000107                     LCD_write_integer@F17272:
   787                           	opt stack 0
   788  000107                     	ds	6
   789  00010D                     _msg:
   790                           	opt stack 0
   791  00010D                     	ds	15
   792  00011C                     _str:
   793                           	opt stack 0
   794  00011C                     	ds	12
   795  000128                     _park_assist_state:
   796                           	opt stack 0
   797  000128                     	ds	8
   798                           tblptru	equ	0xFF8
   799                           tblptrh	equ	0xFF7
   800                           tblptrl	equ	0xFF6
   801                           tablat	equ	0xFF5
   802                           postinc0	equ	0xFEE
   803                           wreg	equ	0xFE8
   804                           
   805                           	psect	cstackBANK1
   806  000130                     __pcstackBANK1:
   807                           	opt stack 0
   808  000130                     _sprintf$4218:
   809                           	opt stack 0
   810                           
   811                           ; 4 bytes @ 0x0
   812  000130                     	ds	4
   813  000134                     sprintf@ap:
   814                           	opt stack 0
   815                           
   816                           ; 2 bytes @ 0x4
   817  000134                     	ds	2
   818  000136                     sprintf@flag:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x6
   822  000136                     	ds	2
   823  000138                     sprintf@val:
   824                           	opt stack 0
   825                           
   826                           ; 4 bytes @ 0x8
   827  000138                     	ds	4
   828  00013C                     sprintf@exp:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0xC
   832  00013C                     	ds	2
   833  00013E                     sprintf@tmpval:
   834                           	opt stack 0
   835                           
   836                           ; 4 bytes @ 0xE
   837  00013E                     	ds	4
   838  000142                     sprintf@prec:
   839                           	opt stack 0
   840                           
   841                           ; 2 bytes @ 0x12
   842  000142                     	ds	2
   843  000144                     sprintf@fval:
   844                           	opt stack 0
   845                           
   846                           ; 4 bytes @ 0x14
   847  000144                     	ds	4
   848  000148                     sprintf@c:
   849                           	opt stack 0
   850                           
   851                           ; 1 bytes @ 0x18
   852  000148                     	ds	1
   853                           tblptru	equ	0xFF8
   854                           tblptrh	equ	0xFF7
   855                           tblptrl	equ	0xFF6
   856                           tablat	equ	0xFF5
   857                           postinc0	equ	0xFEE
   858                           wreg	equ	0xFE8
   859                           
   860                           	psect	cstackBANK0
   861  000060                     __pcstackBANK0:
   862                           	opt stack 0
   863  000060                     ??_ISR_alta:
   864                           
   865                           ; 0 bytes @ 0x0
   866  000060                     	ds	14
   867  00006E                     ??_Joystick_Polling:
   868  00006E                     ??_CAN_interpreter:
   869  00006E                     ??_isdigit:
   870  00006E                     ?___wmul:
   871                           	opt stack 0
   872  00006E                     ?___awmod:
   873                           	opt stack 0
   874  00006E                     ?___lwdiv:
   875                           	opt stack 0
   876  00006E                     ?___lwmod:
   877                           	opt stack 0
   878  00006E                     ?__tdiv_to_l_:
   879                           	opt stack 0
   880  00006E                     ?__div_to_l_:
   881                           	opt stack 0
   882  00006E                     ?___lldiv:
   883                           	opt stack 0
   884  00006E                     ?___llmod:
   885                           	opt stack 0
   886  00006E                     ?___xxtofl:
   887                           	opt stack 0
   888  00006E                     CANOperationMode@mode:
   889                           	opt stack 0
   890  00006E                     _CANisTxReady$3235:
   891                           	opt stack 0
   892  00006E                     delay_set_quartz@frequency:
   893                           	opt stack 0
   894  00006E                     ___wmul@multiplier:
   895                           	opt stack 0
   896  00006E                     ___awmod@dividend:
   897                           	opt stack 0
   898  00006E                     ___lwdiv@dividend:
   899                           	opt stack 0
   900  00006E                     ___lwmod@dividend:
   901                           	opt stack 0
   902  00006E                     CANsendMessage@identifier:
   903                           	opt stack 0
   904  00006E                     CANSetMask@mask:
   905                           	opt stack 0
   906  00006E                     CANSetFilter@filter:
   907                           	opt stack 0
   908  00006E                     __div_to_l_@f1:
   909                           	opt stack 0
   910  00006E                     ___flge@ff1:
   911                           	opt stack 0
   912  00006E                     __tdiv_to_l_@f1:
   913                           	opt stack 0
   914  00006E                     ___lldiv@dividend:
   915                           	opt stack 0
   916  00006E                     ___llmod@dividend:
   917                           	opt stack 0
   918  00006E                     ___xxtofl@val:
   919                           	opt stack 0
   920                           
   921                           ; 4 bytes @ 0xE
   922  00006E                     	ds	1
   923  00006F                     Joystick_Polling@i:
   924                           	opt stack 0
   925  00006F                     _isdigit$3801:
   926                           	opt stack 0
   927                           
   928                           ; 1 bytes @ 0xF
   929  00006F                     	ds	1
   930  000070                     isdigit@c:
   931                           	opt stack 0
   932  000070                     ___wmul@multiplicand:
   933                           	opt stack 0
   934  000070                     ___awmod@divisor:
   935                           	opt stack 0
   936  000070                     ___lwdiv@divisor:
   937                           	opt stack 0
   938  000070                     ___lwmod@divisor:
   939                           	opt stack 0
   940                           
   941                           ; 2 bytes @ 0x10
   942  000070                     	ds	2
   943  000072                     ??___xxtofl:
   944  000072                     CANSetMask@type:
   945                           	opt stack 0
   946  000072                     CANSetFilter@type:
   947                           	opt stack 0
   948  000072                     ___awmod@counter:
   949                           	opt stack 0
   950  000072                     ___lwmod@counter:
   951                           	opt stack 0
   952  000072                     CANsendMessage@data:
   953                           	opt stack 0
   954  000072                     ___wmul@product:
   955                           	opt stack 0
   956  000072                     ___lwdiv@quotient:
   957                           	opt stack 0
   958  000072                     __div_to_l_@f2:
   959                           	opt stack 0
   960  000072                     ___flge@ff2:
   961                           	opt stack 0
   962  000072                     __tdiv_to_l_@f2:
   963                           	opt stack 0
   964  000072                     ___lldiv@divisor:
   965                           	opt stack 0
   966  000072                     ___llmod@divisor:
   967                           	opt stack 0
   968                           
   969                           ; 4 bytes @ 0x12
   970  000072                     	ds	1
   971  000073                     ??_CANSetMask:
   972  000073                     ??_CANSetFilter:
   973  000073                     ___awmod@sign:
   974                           	opt stack 0
   975                           
   976                           ; 1 bytes @ 0x13
   977  000073                     	ds	1
   978  000074                     ?___awdiv:
   979                           	opt stack 0
   980  000074                     CANsendMessage@dataLength:
   981                           	opt stack 0
   982  000074                     ___lwdiv@counter:
   983                           	opt stack 0
   984  000074                     delay_ms@value_ms:
   985                           	opt stack 0
   986  000074                     ___awdiv@dividend:
   987                           	opt stack 0
   988                           
   989                           ; 2 bytes @ 0x14
   990  000074                     	ds	1
   991  000075                     CANsendMessage@flags:
   992                           	opt stack 0
   993  000075                     utoa@buf:
   994                           	opt stack 0
   995                           
   996                           ; 2 bytes @ 0x15
   997  000075                     	ds	1
   998  000076                     ??__tdiv_to_l_:
   999  000076                     ??_CANsendMessage:
  1000  000076                     ??___flge:
  1001  000076                     LCD_send_command@D2:
  1002                           	opt stack 0
  1003  000076                     ___llmod@counter:
  1004                           	opt stack 0
  1005  000076                     ___xxtofl@sign:
  1006                           	opt stack 0
  1007  000076                     ___awdiv@divisor:
  1008                           	opt stack 0
  1009  000076                     __div_to_l_@quot:
  1010                           	opt stack 0
  1011  000076                     ___lldiv@quotient:
  1012                           	opt stack 0
  1013                           
  1014                           ; 4 bytes @ 0x16
  1015  000076                     	ds	1
  1016  000077                     CANSetMask@numBuffer:
  1017                           	opt stack 0
  1018  000077                     CANSetFilter@numBuffer:
  1019                           	opt stack 0
  1020  000077                     LCD_send_command@D1:
  1021                           	opt stack 0
  1022  000077                     ___xxtofl@exp:
  1023                           	opt stack 0
  1024  000077                     utoa@val:
  1025                           	opt stack 0
  1026                           
  1027                           ; 2 bytes @ 0x17
  1028  000077                     	ds	1
  1029  000078                     LCD_send_command@D0:
  1030                           	opt stack 0
  1031  000078                     ___awdiv@counter:
  1032                           	opt stack 0
  1033  000078                     CANSetMask@tamp:
  1034                           	opt stack 0
  1035  000078                     CANSetFilter@tamp:
  1036                           	opt stack 0
  1037  000078                     ___xxtofl@arg:
  1038                           	opt stack 0
  1039                           
  1040                           ; 4 bytes @ 0x18
  1041  000078                     	ds	1
  1042  000079                     LCD_send_command@D3:
  1043                           	opt stack 0
  1044  000079                     ___awdiv@sign:
  1045                           	opt stack 0
  1046  000079                     utoa@base:
  1047                           	opt stack 0
  1048  000079                     __tdiv_to_l_@quot:
  1049                           	opt stack 0
  1050                           
  1051                           ; 4 bytes @ 0x19
  1052  000079                     	ds	1
  1053  00007A                     LCD_shift_cursor@number_of_shift:
  1054                           	opt stack 0
  1055  00007A                     LCD_goto_line@line:
  1056                           	opt stack 0
  1057  00007A                     LCD_write_char@D3:
  1058                           	opt stack 0
  1059  00007A                     LCD_cursor@blinking:
  1060                           	opt stack 0
  1061  00007A                     __div_to_l_@cntr:
  1062                           	opt stack 0
  1063  00007A                     ___lldiv@counter:
  1064                           	opt stack 0
  1065  00007A                     ___awdiv@quotient:
  1066                           	opt stack 0
  1067  00007A                     CANsendMessage@tamp:
  1068                           	opt stack 0
  1069                           
  1070                           ; 4 bytes @ 0x1A
  1071  00007A                     	ds	1
  1072  00007B                     LCD_shift_cursor@shift:
  1073                           	opt stack 0
  1074  00007B                     LCD_write_char@D2:
  1075                           	opt stack 0
  1076  00007B                     LCD_cursor@active:
  1077                           	opt stack 0
  1078  00007B                     __div_to_l_@exp1:
  1079                           	opt stack 0
  1080  00007B                     utoa@v:
  1081                           	opt stack 0
  1082                           
  1083                           ; 2 bytes @ 0x1B
  1084  00007B                     	ds	1
  1085  00007C                     ?___fldiv:
  1086                           	opt stack 0
  1087  00007C                     ?___flmul:
  1088                           	opt stack 0
  1089  00007C                     CANInitialize@phaseSeg1:
  1090                           	opt stack 0
  1091  00007C                     LCD_shift_cursor@i:
  1092                           	opt stack 0
  1093  00007C                     LCD_write_char@D1:
  1094                           	opt stack 0
  1095  00007C                     LCD_initialize@quartz_frequency:
  1096                           	opt stack 0
  1097  00007C                     ___fldiv@b:
  1098                           	opt stack 0
  1099  00007C                     ___flmul@b:
  1100                           	opt stack 0
  1101                           
  1102                           ; 4 bytes @ 0x1C
  1103  00007C                     	ds	1
  1104  00007D                     CANInitialize@phaseSeg2:
  1105                           	opt stack 0
  1106  00007D                     LCD_goto_xy@y:
  1107                           	opt stack 0
  1108  00007D                     LCD_write_char@D0:
  1109                           	opt stack 0
  1110  00007D                     __tdiv_to_l_@cntr:
  1111                           	opt stack 0
  1112  00007D                     utoa@c:
  1113                           	opt stack 0
  1114                           
  1115                           ; 1 bytes @ 0x1D
  1116  00007D                     	ds	1
  1117  00007E                     CANInitialize@SJW:
  1118                           	opt stack 0
  1119  00007E                     LCD_goto_xy@x:
  1120                           	opt stack 0
  1121  00007E                     LCD_write_char@value:
  1122                           	opt stack 0
  1123  00007E                     __tdiv_to_l_@exp1:
  1124                           	opt stack 0
  1125  00007E                     itoa@buf:
  1126                           	opt stack 0
  1127                           
  1128                           ; 2 bytes @ 0x1E
  1129  00007E                     	ds	1
  1130  00007F                     CANInitialize@BRP:
  1131                           	opt stack 0
  1132  00007F                     LCD_write_message@buffer:
  1133                           	opt stack 0
  1134  00007F                     LCD_write_string@buffer:
  1135                           	opt stack 0
  1136                           
  1137                           ; 2 bytes @ 0x1F
  1138  00007F                     	ds	1
  1139  000080                     CANInitialize@flags:
  1140                           	opt stack 0
  1141  000080                     itoa@val:
  1142                           	opt stack 0
  1143  000080                     ___fldiv@a:
  1144                           	opt stack 0
  1145  000080                     ___flmul@a:
  1146                           	opt stack 0
  1147                           
  1148                           ; 4 bytes @ 0x20
  1149  000080                     	ds	1
  1150  000081                     ??_CANInitialize:
  1151  000081                     
  1152                           ; 0 bytes @ 0x21
  1153  000081                     	ds	1
  1154  000082                     itoa@base:
  1155                           	opt stack 0
  1156                           
  1157                           ; 2 bytes @ 0x22
  1158  000082                     	ds	2
  1159  000084                     ??___fldiv:
  1160  000084                     ??___flmul:
  1161  000084                     itoa@cp:
  1162                           	opt stack 0
  1163                           
  1164                           ; 2 bytes @ 0x24
  1165  000084                     	ds	1
  1166  000085                     CANInitialize@propSeg:
  1167                           	opt stack 0
  1168                           
  1169                           ; 1 bytes @ 0x25
  1170  000085                     	ds	1
  1171  000086                     CANInitialize@FilterConfig1:
  1172                           	opt stack 0
  1173  000086                     LCD_write_integer@value:
  1174                           	opt stack 0
  1175                           
  1176                           ; 2 bytes @ 0x26
  1177  000086                     	ds	1
  1178  000087                     CANInitialize@FilterConfig2:
  1179                           	opt stack 0
  1180                           
  1181                           ; 1 bytes @ 0x27
  1182  000087                     	ds	1
  1183  000088                     LCD_write_integer@number_of_digits:
  1184                           	opt stack 0
  1185  000088                     ___fldiv@sign:
  1186                           	opt stack 0
  1187  000088                     ___flmul@sign:
  1188                           	opt stack 0
  1189                           
  1190                           ; 1 bytes @ 0x28
  1191  000088                     	ds	1
  1192  000089                     LCD_write_integer@zero_cleaning:
  1193                           	opt stack 0
  1194  000089                     ___flmul@aexp:
  1195                           	opt stack 0
  1196  000089                     ___fldiv@rem:
  1197                           	opt stack 0
  1198                           
  1199                           ; 4 bytes @ 0x29
  1200  000089                     	ds	1
  1201  00008A                     ??_LCD_write_integer:
  1202  00008A                     ___flmul@grs:
  1203                           	opt stack 0
  1204                           
  1205                           ; 4 bytes @ 0x2A
  1206  00008A                     	ds	3
  1207  00008D                     ___fldiv@new_exp:
  1208                           	opt stack 0
  1209                           
  1210                           ; 2 bytes @ 0x2D
  1211  00008D                     	ds	1
  1212  00008E                     ___flmul@bexp:
  1213                           	opt stack 0
  1214                           
  1215                           ; 1 bytes @ 0x2E
  1216  00008E                     	ds	1
  1217  00008F                     ___fldiv@grs:
  1218                           	opt stack 0
  1219  00008F                     ___flmul@prod:
  1220                           	opt stack 0
  1221  00008F                     LCD_write_integer@convertedInt:
  1222                           	opt stack 0
  1223                           
  1224                           ; 6 bytes @ 0x2F
  1225  00008F                     	ds	4
  1226  000093                     ___fldiv@bexp:
  1227                           	opt stack 0
  1228  000093                     ___flmul@temp:
  1229                           	opt stack 0
  1230                           
  1231                           ; 2 bytes @ 0x33
  1232  000093                     	ds	1
  1233  000094                     ___fldiv@aexp:
  1234                           	opt stack 0
  1235                           
  1236                           ; 1 bytes @ 0x34
  1237  000094                     	ds	1
  1238  000095                     ?_fround:
  1239                           	opt stack 0
  1240  000095                     ?_scale:
  1241                           	opt stack 0
  1242  000095                     ?___flneg:
  1243                           	opt stack 0
  1244  000095                     LCD_write_integer@index:
  1245                           	opt stack 0
  1246  000095                     ___flneg@f1:
  1247                           	opt stack 0
  1248                           
  1249                           ; 4 bytes @ 0x35
  1250  000095                     	ds	4
  1251  000099                     _fround$4216:
  1252                           	opt stack 0
  1253  000099                     _scale$4217:
  1254                           	opt stack 0
  1255                           
  1256                           ; 4 bytes @ 0x39
  1257  000099                     	ds	4
  1258  00009D                     scale@scl:
  1259                           	opt stack 0
  1260  00009D                     _fround$4215:
  1261                           	opt stack 0
  1262                           
  1263                           ; 4 bytes @ 0x3D
  1264  00009D                     	ds	4
  1265  0000A1                     fround@prec:
  1266                           	opt stack 0
  1267                           
  1268                           ; 1 bytes @ 0x41
  1269  0000A1                     	ds	1
  1270  0000A2                     ?___fladd:
  1271                           	opt stack 0
  1272  0000A2                     ___fladd@b:
  1273                           	opt stack 0
  1274                           
  1275                           ; 4 bytes @ 0x42
  1276  0000A2                     	ds	4
  1277  0000A6                     ___fladd@a:
  1278                           	opt stack 0
  1279                           
  1280                           ; 4 bytes @ 0x46
  1281  0000A6                     	ds	4
  1282  0000AA                     ??___fladd:
  1283                           
  1284                           ; 0 bytes @ 0x4A
  1285  0000AA                     	ds	8
  1286  0000B2                     ___fladd@signs:
  1287                           	opt stack 0
  1288                           
  1289                           ; 1 bytes @ 0x52
  1290  0000B2                     	ds	1
  1291  0000B3                     ___fladd@aexp:
  1292                           	opt stack 0
  1293                           
  1294                           ; 1 bytes @ 0x53
  1295  0000B3                     	ds	1
  1296  0000B4                     ___fladd@bexp:
  1297                           	opt stack 0
  1298                           
  1299                           ; 1 bytes @ 0x54
  1300  0000B4                     	ds	1
  1301  0000B5                     ___fladd@grs:
  1302                           	opt stack 0
  1303                           
  1304                           ; 1 bytes @ 0x55
  1305  0000B5                     	ds	1
  1306  0000B6                     ?___flsub:
  1307                           	opt stack 0
  1308  0000B6                     ?___fltol:
  1309                           	opt stack 0
  1310  0000B6                     ___fltol@f1:
  1311                           	opt stack 0
  1312  0000B6                     ___flsub@b:
  1313                           	opt stack 0
  1314                           
  1315                           ; 4 bytes @ 0x56
  1316  0000B6                     	ds	4
  1317  0000BA                     ??___fltol:
  1318  0000BA                     ___flsub@a:
  1319                           	opt stack 0
  1320                           
  1321                           ; 4 bytes @ 0x5A
  1322  0000BA                     	ds	4
  1323  0000BE                     ___fltol@sign1:
  1324                           	opt stack 0
  1325                           
  1326                           ; 1 bytes @ 0x5E
  1327  0000BE                     	ds	1
  1328  0000BF                     ___fltol@exp1:
  1329                           	opt stack 0
  1330                           
  1331                           ; 1 bytes @ 0x5F
  1332  0000BF                     	ds	1
  1333  0000C0                     ?_sprintf:
  1334                           	opt stack 0
  1335  0000C0                     sprintf@sp:
  1336                           	opt stack 0
  1337                           
  1338                           ; 2 bytes @ 0x60
  1339  0000C0                     	ds	2
  1340  0000C2                     sprintf@f:
  1341                           	opt stack 0
  1342                           
  1343                           ; 2 bytes @ 0x62
  1344  0000C2                     	ds	6
  1345  0000C8                     ??_sprintf:
  1346                           
  1347                           ; 0 bytes @ 0x68
  1348  0000C8                     	ds	2
  1349  0000CA                     ??_main:
  1350                           
  1351                           ; 0 bytes @ 0x6A
  1352  0000CA                     	ds	8
  1353                           tblptru	equ	0xFF8
  1354                           tblptrh	equ	0xFF7
  1355                           tblptrl	equ	0xFF6
  1356                           tablat	equ	0xFF5
  1357                           postinc0	equ	0xFEE
  1358                           wreg	equ	0xFE8
  1359                           
  1360                           	psect	cstackCOMRAM
  1361  000028                     __pcstackCOMRAM:
  1362                           	opt stack 0
  1363  000028                     ??_ISR_bassa:
  1364  000028                     
  1365                           ; 1 bytes @ 0x0
  1366  000028                     	ds	17
  1367  000039                     _CANisRxReady$3237:
  1368                           	opt stack 0
  1369  000039                     i2_CANisTxReady$3235:
  1370                           	opt stack 0
  1371  000039                     CANreceiveMessage@msg:
  1372                           	opt stack 0
  1373  000039                     i2CANsendMessage@identifier:
  1374                           	opt stack 0
  1375                           
  1376                           ; 4 bytes @ 0x11
  1377  000039                     	ds	2
  1378  00003B                     ??_CANreceiveMessage:
  1379                           
  1380                           ; 0 bytes @ 0x13
  1381  00003B                     	ds	2
  1382  00003D                     i2CANsendMessage@data:
  1383                           	opt stack 0
  1384                           
  1385                           ; 2 bytes @ 0x15
  1386  00003D                     	ds	2
  1387  00003F                     i2CANsendMessage@dataLength:
  1388                           	opt stack 0
  1389                           
  1390                           ; 1 bytes @ 0x17
  1391  00003F                     	ds	1
  1392  000040                     i2CANsendMessage@flags:
  1393                           	opt stack 0
  1394                           
  1395                           ; 1 bytes @ 0x18
  1396  000040                     	ds	1
  1397  000041                     ??i2_CANsendMessage:
  1398                           
  1399                           ; 0 bytes @ 0x19
  1400  000041                     	ds	2
  1401  000043                     CANreceiveMessage@error:
  1402                           	opt stack 0
  1403                           
  1404                           ; 1 bytes @ 0x1B
  1405  000043                     	ds	1
  1406  000044                     CANreceiveMessage@tamp:
  1407                           	opt stack 0
  1408                           
  1409                           ; 1 bytes @ 0x1C
  1410  000044                     	ds	1
  1411  000045                     i2CANsendMessage@tamp:
  1412                           	opt stack 0
  1413                           
  1414                           ; 4 bytes @ 0x1D
  1415  000045                     	ds	4
  1416  000049                     ISR_alta@i:
  1417                           	opt stack 0
  1418                           
  1419                           ; 1 bytes @ 0x21
  1420  000049                     	ds	1
  1421                           tblptru	equ	0xFF8
  1422                           tblptrh	equ	0xFF7
  1423                           tblptrl	equ	0xFF6
  1424                           tablat	equ	0xFF5
  1425                           postinc0	equ	0xFEE
  1426                           wreg	equ	0xFE8
  1427                           
  1428 ;;
  1429 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1430 ;;
  1431 ;; *************** function _main *****************
  1432 ;; Defined at:
  1433 ;;		line 170 in file "RemoteCan.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;		None               void
  1440 ;; Registers used:
  1441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1449 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1450 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1451 ;;Total ram usage:        8 bytes
  1452 ;; Hardware stack levels required when called:   11
  1453 ;; This function calls:
  1454 ;;		_CAN_Send
  1455 ;;		_CAN_interpreter
  1456 ;;		_CANisTxReady
  1457 ;;		_CANsendMessage
  1458 ;;		_F1_Button_Polling
  1459 ;;		_F2_Button_Polling
  1460 ;;		_Joystick_Polling
  1461 ;;		_LCD_Handler
  1462 ;;		_LCD_goto_line
  1463 ;;		_LCD_initialize
  1464 ;;		_LCD_write_message
  1465 ;;		_PWR_Button_Polling
  1466 ;;		___fladd
  1467 ;;		___flmul
  1468 ;;		___flneg
  1469 ;;		___fltol
  1470 ;;		___xxtofl
  1471 ;;		_board_initialization
  1472 ;;		_delay_ms
  1473 ;; This function is called by:
  1474 ;;		Startup code after reset
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           	psect	text0
  1479  011B26                     __ptext0:
  1480                           	opt stack 0
  1481  011B26                     _main:
  1482                           	opt stack 20
  1483                           
  1484                           ;RemoteCan.c: 171: board_initialization();
  1485                           
  1486                           ;incstack = 0
  1487  011B26  EC78  F0AD         	call	_board_initialization	;wreg free
  1488                           
  1489                           ;RemoteCan.c: 179: JoystickConstants[0] = 0.703;
  1490  011B2A  0ECF               	movlw	207
  1491  011B2C  0100               	movlb	0	; () banked
  1492  011B2E  6FD2               	movwf	_JoystickConstants& (0+255),b	;volatile
  1493  011B30  0EF7               	movlw	247
  1494  011B32  6FD3               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1495  011B34  0E33               	movlw	51
  1496  011B36  6FD4               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1497  011B38  0E3F               	movlw	63
  1498  011B3A  6FD5               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;RemoteCan.c: 180: JoystickConstants[1] = 10;
  1502  011B3C  0E00               	movlw	0
  1503  011B3E  0100               	movlb	0	; () banked
  1504  011B40  6FD6               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1505  011B42  0E00               	movlw	0
  1506  011B44  6FD7               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1507  011B46  0E20               	movlw	32
  1508  011B48  6FD8               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1509  011B4A  0E41               	movlw	65
  1510  011B4C  6FD9               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1511                           
  1512                           ; BSR set to: 0
  1513                           ;RemoteCan.c: 182: display_refresh = 1;
  1514  011B4E  8C4A               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  1515  011B50                     l8972:
  1516                           
  1517                           ;RemoteCan.c: 186: PWR_Button_Polling();
  1518  011B50  ECF1  F0B0         	call	_PWR_Button_Polling	;wreg free
  1519                           
  1520                           ;RemoteCan.c: 187: F1_Button_Polling();
  1521  011B54  EC1B  F0B1         	call	_F1_Button_Polling	;wreg free
  1522                           
  1523                           ;RemoteCan.c: 188: F2_Button_Polling();
  1524  011B58  EC0D  F0B1         	call	_F2_Button_Polling	;wreg free
  1525                           
  1526                           ;RemoteCan.c: 191: if (power_switch == 0) {
  1527  011B5C  B04B               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1528  011B5E  D09D               	goto	l9018
  1529                           
  1530                           ;RemoteCan.c: 192: dir = 1;
  1531  011B60  0E01               	movlw	1
  1532  011B62  0100               	movlb	0	; () banked
  1533  011B64  6FE8               	movwf	_dir& (0+255),b	;volatile
  1534                           
  1535                           ;RemoteCan.c: 193: set_speed = 0;
  1536  011B66  0E00               	movlw	0
  1537  011B68  0100               	movlb	0	; () banked
  1538  011B6A  6FE5               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1539  011B6C  0E00               	movlw	0
  1540  011B6E  6FE4               	movwf	_set_speed& (0+255),b	;volatile
  1541                           
  1542                           ;RemoteCan.c: 194: data_steering [0] = 90;
  1543  011B70  0E5A               	movlw	90
  1544  011B72  0100               	movlb	0	; () banked
  1545  011B74  6FF0               	movwf	_data_steering& (0+255),b
  1546                           
  1547                           ;RemoteCan.c: 195: data_brake [0] = 0;
  1548  011B76  0E00               	movlw	0
  1549  011B78  0100               	movlb	0	; () banked
  1550  011B7A  6FEE               	movwf	_data_brake& (0+255),b
  1551                           
  1552                           ;RemoteCan.c: 196: data_brake [1] = 1;
  1553  011B7C  0E01               	movlw	1
  1554  011B7E  0100               	movlb	0	; () banked
  1555  011B80  6FEF               	movwf	(_data_brake+1)& (0+255),b
  1556                           
  1557                           ; BSR set to: 0
  1558                           ;RemoteCan.c: 197: CAN_Send();
  1559  011B82  ECC4  F0AC         	call	_CAN_Send	;wreg free
  1560                           
  1561                           ;RemoteCan.c: 198: LCD_initialize(16);
  1562  011B86  0E10               	movlw	16
  1563  011B88  ECF5  F0A9         	call	_LCD_initialize
  1564                           
  1565                           ;RemoteCan.c: 199: PORTDbits.RD6 = 0;
  1566  011B8C  9C83               	bcf	3971,6,c	;volatile
  1567                           
  1568                           ;RemoteCan.c: 200: PORTDbits.RD5 = 0;
  1569  011B8E  9A83               	bcf	3971,5,c	;volatile
  1570                           
  1571                           ;RemoteCan.c: 201: LCD_goto_line(1);
  1572  011B90  0E01               	movlw	1
  1573  011B92  EC32  F0AB         	call	_LCD_goto_line
  1574                           
  1575                           ;RemoteCan.c: 202: LCD_write_message("====================");
  1576  011B96  0E84               	movlw	low STR_1
  1577  011B98  0100               	movlb	0	; () banked
  1578  011B9A  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  1579  011B9C  0EFF               	movlw	high STR_1
  1580  011B9E  0100               	movlb	0	; () banked
  1581  011BA0  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1582  011BA2  EC4B  F0B0         	call	_LCD_write_message	;wreg free
  1583                           
  1584                           ;RemoteCan.c: 203: LCD_goto_line(2);
  1585  011BA6  0E02               	movlw	2
  1586  011BA8  EC32  F0AB         	call	_LCD_goto_line
  1587                           
  1588                           ;RemoteCan.c: 204: LCD_write_message("==> VEHICLE  OFF <==");
  1589  011BAC  0E5A               	movlw	low STR_2
  1590  011BAE  0100               	movlb	0	; () banked
  1591  011BB0  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  1592  011BB2  0EFF               	movlw	high STR_2
  1593  011BB4  0100               	movlb	0	; () banked
  1594  011BB6  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1595  011BB8  EC4B  F0B0         	call	_LCD_write_message	;wreg free
  1596                           
  1597                           ;RemoteCan.c: 205: LCD_goto_line(3);
  1598  011BBC  0E03               	movlw	3
  1599  011BBE  EC32  F0AB         	call	_LCD_goto_line
  1600                           
  1601                           ;RemoteCan.c: 206: LCD_write_message("  Press the button  ");
  1602  011BC2  0E45               	movlw	low STR_3
  1603  011BC4  0100               	movlb	0	; () banked
  1604  011BC6  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  1605  011BC8  0EFF               	movlw	high STR_3
  1606  011BCA  0100               	movlb	0	; () banked
  1607  011BCC  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1608  011BCE  EC4B  F0B0         	call	_LCD_write_message	;wreg free
  1609                           
  1610                           ;RemoteCan.c: 207: LCD_goto_line(4);
  1611  011BD2  0E04               	movlw	4
  1612  011BD4  EC32  F0AB         	call	_LCD_goto_line
  1613                           
  1614                           ;RemoteCan.c: 208: LCD_write_message("====================");
  1615  011BD8  0E84               	movlw	low STR_1
  1616  011BDA  0100               	movlb	0	; () banked
  1617  011BDC  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  1618  011BDE  0EFF               	movlw	high STR_1
  1619  011BE0  0100               	movlb	0	; () banked
  1620  011BE2  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1621  011BE4  EC4B  F0B0         	call	_LCD_write_message	;wreg free
  1622                           
  1623                           ;RemoteCan.c: 209: while (power_switch == 0) {
  1624  011BE8  D054               	goto	l9016
  1625  011BEA                     l9006:
  1626                           
  1627                           ;RemoteCan.c: 210: if ((time_counter - pr_time_1) >= 30) {
  1628  011BEA  C009  F0CA         	movff	_pr_time_1,??_main	;volatile
  1629  011BEE  C00A  F0CB         	movff	_pr_time_1+1,??_main+1	;volatile
  1630  011BF2  C00B  F0CC         	movff	_pr_time_1+2,??_main+2	;volatile
  1631  011BF6  C00C  F0CD         	movff	_pr_time_1+3,??_main+3	;volatile
  1632  011BFA  0100               	movlb	0	; () banked
  1633  011BFC  1FCA               	comf	??_main& (0+255),f,b
  1634  011BFE  1FCB               	comf	(??_main+1)& (0+255),f,b
  1635  011C00  1FCC               	comf	(??_main+2)& (0+255),f,b
  1636  011C02  1FCD               	comf	(??_main+3)& (0+255),f,b
  1637  011C04  2BCA               	incf	??_main& (0+255),f,b
  1638  011C06  0E00               	movlw	0
  1639  011C08  23CB               	addwfc	(??_main+1)& (0+255),f,b
  1640  011C0A  23CC               	addwfc	(??_main+2)& (0+255),f,b
  1641  011C0C  23CD               	addwfc	(??_main+3)& (0+255),f,b
  1642  011C0E  501D               	movf	_time_counter,w,c	;volatile
  1643  011C10  0100               	movlb	0	; () banked
  1644  011C12  25CA               	addwf	??_main& (0+255),w,b
  1645  011C14  0100               	movlb	0	; () banked
  1646  011C16  6FCE               	movwf	(??_main+4)& (0+255),b
  1647  011C18  501E               	movf	_time_counter+1,w,c	;volatile
  1648  011C1A  0100               	movlb	0	; () banked
  1649  011C1C  21CB               	addwfc	(??_main+1)& (0+255),w,b
  1650  011C1E  0100               	movlb	0	; () banked
  1651  011C20  6FCF               	movwf	(??_main+5)& (0+255),b
  1652  011C22  501F               	movf	_time_counter+2,w,c	;volatile
  1653  011C24  0100               	movlb	0	; () banked
  1654  011C26  21CC               	addwfc	(??_main+2)& (0+255),w,b
  1655  011C28  0100               	movlb	0	; () banked
  1656  011C2A  6FD0               	movwf	(??_main+6)& (0+255),b
  1657  011C2C  5020               	movf	_time_counter+3,w,c	;volatile
  1658  011C2E  0100               	movlb	0	; () banked
  1659  011C30  21CD               	addwfc	(??_main+3)& (0+255),w,b
  1660  011C32  0100               	movlb	0	; () banked
  1661  011C34  6FD1               	movwf	(??_main+7)& (0+255),b
  1662  011C36  0100               	movlb	0	; () banked
  1663  011C38  51D1               	movf	(??_main+7)& (0+255),w,b
  1664  011C3A  0100               	movlb	0	; () banked
  1665  011C3C  11D0               	iorwf	(??_main+6)& (0+255),w,b
  1666  011C3E  0100               	movlb	0	; () banked
  1667  011C40  11CF               	iorwf	(??_main+5)& (0+255),w,b
  1668  011C42  E105               	bnz	u12040
  1669  011C44  0E1E               	movlw	30
  1670  011C46  0100               	movlb	0	; () banked
  1671  011C48  5DCE               	subwf	(??_main+4)& (0+255),w,b
  1672  011C4A  A0D8               	btfss	status,0,c
  1673  011C4C  D019               	goto	l9012
  1674  011C4E                     u12040:
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;RemoteCan.c: 211: pr_time_1 = time_counter;
  1678  011C4E  C01D  F009         	movff	_time_counter,_pr_time_1	;volatile
  1679  011C52  C01E  F00A         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1680  011C56  C01F  F00B         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1681  011C5A  C020  F00C         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;RemoteCan.c: 212: PORTDbits.RD7 = ~PORTDbits.RD7;
  1685  011C5E  AE83               	btfss	3971,7,c	;volatile
  1686  011C60  D002               	goto	u12050
  1687  011C62  0E01               	movlw	1
  1688  011C64  D001               	goto	u12056
  1689  011C66                     u12050:
  1690  011C66  0E00               	movlw	0
  1691  011C68                     u12056:
  1692  011C68  0AFF               	xorlw	255
  1693  011C6A  0100               	movlb	0	; () banked
  1694  011C6C  6FCA               	movwf	??_main& (0+255),b
  1695  011C6E  0100               	movlb	0	; () banked
  1696  011C70  33CA               	rrcf	??_main& (0+255),f,b
  1697  011C72  33CA               	rrcf	??_main& (0+255),f,b
  1698  011C74  5083               	movf	3971,w,c	;volatile
  1699  011C76  0100               	movlb	0	; () banked
  1700  011C78  19CA               	xorwf	??_main& (0+255),w,b
  1701  011C7A  0B7F               	andlw	-129
  1702  011C7C  19CA               	xorwf	??_main& (0+255),w,b
  1703  011C7E  6E83               	movwf	3971,c	;volatile
  1704  011C80                     l9012:
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;RemoteCan.c: 213: }
  1708                           ;RemoteCan.c: 214: PWR_Button_Polling();
  1709  011C80  ECF1  F0B0         	call	_PWR_Button_Polling	;wreg free
  1710                           
  1711                           ;RemoteCan.c: 215: delay_ms(10);
  1712  011C84  0E00               	movlw	0
  1713  011C86  0100               	movlb	0	; () banked
  1714  011C88  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1715  011C8A  0E0A               	movlw	10
  1716  011C8C  6F74               	movwf	delay_ms@value_ms& (0+255),b
  1717  011C8E  ECF7  F0AF         	call	_delay_ms	;wreg free
  1718  011C92                     l9016:
  1719  011C92  A04B               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1720  011C94  D7AA               	goto	l9006
  1721                           
  1722                           ;RemoteCan.c: 216: }
  1723                           ;RemoteCan.c: 217: PORTDbits.RD7 = 0;
  1724  011C96  9E83               	bcf	3971,7,c	;volatile
  1725                           
  1726                           ;RemoteCan.c: 218: display_refresh = 1;
  1727  011C98  8C4A               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  1728  011C9A                     l9018:
  1729                           
  1730                           ;RemoteCan.c: 219: }
  1731                           ;RemoteCan.c: 221: Joystick_Polling();
  1732  011C9A  EC20  F0AF         	call	_Joystick_Polling	;wreg free
  1733                           
  1734                           ;RemoteCan.c: 224: if (PORTAbits.RA2 == 1) {
  1735  011C9E  A480               	btfss	3968,2,c	;volatile
  1736  011CA0  D004               	goto	l789
  1737                           
  1738                           ;RemoteCan.c: 225: switch_position = 0;
  1739  011CA2  0E00               	movlw	0
  1740  011CA4  0100               	movlb	0	; () banked
  1741  011CA6  6FEB               	movwf	_switch_position& (0+255),b	;volatile
  1742                           
  1743                           ;RemoteCan.c: 226: } else {
  1744  011CA8  D00D               	goto	l9028
  1745  011CAA                     l789:
  1746                           
  1747                           ;RemoteCan.c: 227: if (PORTAbits.RA3 == 0) {
  1748  011CAA  B680               	btfsc	3968,3,c	;volatile
  1749  011CAC  D005               	goto	l9026
  1750                           
  1751                           ;RemoteCan.c: 228: switch_position = 1;
  1752  011CAE  0E01               	movlw	1
  1753  011CB0  0100               	movlb	0	; () banked
  1754  011CB2  6FEB               	movwf	_switch_position& (0+255),b	;volatile
  1755                           
  1756                           ;RemoteCan.c: 229: dir = 1;
  1757  011CB4  0E01               	movlw	1
  1758  011CB6  D004               	goto	L1
  1759  011CB8                     l9026:
  1760                           
  1761                           ;RemoteCan.c: 231: switch_position = 2;
  1762  011CB8  0E02               	movlw	2
  1763  011CBA  0100               	movlb	0	; () banked
  1764  011CBC  6FEB               	movwf	_switch_position& (0+255),b	;volatile
  1765                           
  1766                           ;RemoteCan.c: 232: dir = 0;
  1767  011CBE  0E00               	movlw	0
  1768  011CC0                     L1:
  1769  011CC0  0100               	movlb	0	; () banked
  1770  011CC2  6FE8               	movwf	_dir& (0+255),b	;volatile
  1771  011CC4                     l9028:
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;RemoteCan.c: 233: }
  1775                           ;RemoteCan.c: 234: }
  1776                           ;RemoteCan.c: 237: if (F1_switch == 1) {
  1777  011CC4  A24A               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  1778  011CC6  D0C9               	goto	l9076
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;RemoteCan.c: 238: y = 0;
  1782  011CC8  9C4B               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;RemoteCan.c: 239: if ((x < 1)&&(F2_switch == 0)) {
  1786  011CCA  0100               	movlb	0	; () banked
  1787  011CCC  51EC               	movf	_x& (0+255),w,b	;volatile
  1788  011CCE  B4D8               	btfsc	status,2,c
  1789                           
  1790                           ; BSR set to: 0
  1791  011CD0  B44A               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1792  011CD2  D02E               	goto	l9048
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;RemoteCan.c: 240: space_available = 0;
  1796  011CD4  924B               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;RemoteCan.c: 241: parking_state = 1;
  1800  011CD6  0E01               	movlw	1
  1801  011CD8  0100               	movlb	0	; () banked
  1802  011CDA  6FE9               	movwf	_parking_state& (0+255),b	;volatile
  1803                           
  1804                           ;RemoteCan.c: 242: JoystickConstants[1] = 1;
  1805  011CDC  0E00               	movlw	0
  1806  011CDE  0100               	movlb	0	; () banked
  1807  011CE0  6FD6               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1808  011CE2  0E00               	movlw	0
  1809  011CE4  6FD7               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1810  011CE6  0E80               	movlw	128
  1811  011CE8  6FD8               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1812  011CEA  0E3F               	movlw	63
  1813  011CEC  6FD9               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1814  011CEE                     l9040:
  1815  011CEE  ECBF  F0B0         	call	_CANisTxReady	;wreg free
  1816  011CF2  0900               	iorlw	0
  1817  011CF4  B4D8               	btfsc	status,2,c
  1818  011CF6  D7FB               	goto	l9040
  1819                           
  1820                           ;RemoteCan.c: 244: park_assist_state[0] = 0b00000001;
  1821  011CF8  0E01               	movlw	1
  1822  011CFA  0101               	movlb	1	; () banked
  1823  011CFC  6F28               	movwf	_park_assist_state& (0+255),b
  1824                           
  1825                           ; BSR set to: 1
  1826                           ;RemoteCan.c: 245: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1827  011CFE  0E0A               	movlw	10
  1828  011D00  0100               	movlb	0	; () banked
  1829  011D02  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
  1830  011D04  0E00               	movlw	0
  1831  011D06  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1832  011D08  0E00               	movlw	0
  1833  011D0A  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1834  011D0C  0E00               	movlw	0
  1835  011D0E  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1836  011D10  0E28               	movlw	low _park_assist_state
  1837  011D12  0100               	movlb	0	; () banked
  1838  011D14  6F72               	movwf	CANsendMessage@data& (0+255),b
  1839  011D16  0E01               	movlw	high _park_assist_state
  1840  011D18  0100               	movlb	0	; () banked
  1841  011D1A  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
  1842  011D1C  0E08               	movlw	8
  1843  011D1E  0100               	movlb	0	; () banked
  1844  011D20  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
  1845  011D22  0EBC               	movlw	188
  1846  011D24  0100               	movlb	0	; () banked
  1847  011D26  6F75               	movwf	CANsendMessage@flags& (0+255),b
  1848  011D28  ECCD  F089         	call	_CANsendMessage	;wreg free
  1849                           
  1850                           ;RemoteCan.c: 246: x++;
  1851  011D2C  0100               	movlb	0	; () banked
  1852  011D2E  2BEC               	incf	_x& (0+255),f,b	;volatile
  1853  011D30                     l9048:
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;RemoteCan.c: 247: }
  1857                           ;RemoteCan.c: 249: if ((F2_switch == 1)&&(space_available == 1)) {
  1858  011D30  B44A               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1859                           
  1860                           ; BSR set to: 0
  1861  011D32  A24B               	btfss	_space_available/(0+8),_space_available& (0+7),c	;volatile
  1862  011D34  D029               	goto	l9064
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;RemoteCan.c: 250: if (z < 1) {
  1866  011D36  0100               	movlb	0	; () banked
  1867  011D38  51ED               	movf	_z& (0+255),w,b	;volatile
  1868  011D3A  A4D8               	btfss	status,2,c
  1869  011D3C  D028               	goto	l9066
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;RemoteCan.c: 251: parking_state = 2;
  1873  011D3E  0E02               	movlw	2
  1874  011D40  0100               	movlb	0	; () banked
  1875  011D42  6FE9               	movwf	_parking_state& (0+255),b	;volatile
  1876  011D44                     l9056:
  1877  011D44  ECBF  F0B0         	call	_CANisTxReady	;wreg free
  1878  011D48  0900               	iorlw	0
  1879  011D4A  B4D8               	btfsc	status,2,c
  1880  011D4C  D7FB               	goto	l9056
  1881                           
  1882                           ;RemoteCan.c: 253: CANsendMessage(0b00000001100, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  1883  011D4E  0E0C               	movlw	12
  1884  011D50  0100               	movlb	0	; () banked
  1885  011D52  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
  1886  011D54  0E00               	movlw	0
  1887  011D56  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1888  011D58  0E00               	movlw	0
  1889  011D5A  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1890  011D5C  0E00               	movlw	0
  1891  011D5E  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1892  011D60  0E27               	movlw	low _data
  1893  011D62  0100               	movlb	0	; () banked
  1894  011D64  6F72               	movwf	CANsendMessage@data& (0+255),b
  1895  011D66  0E00               	movlw	high _data
  1896  011D68  0100               	movlb	0	; () banked
  1897  011D6A  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
  1898  011D6C  0E08               	movlw	8
  1899  011D6E  0100               	movlb	0	; () banked
  1900  011D70  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
  1901  011D72  0EBC               	movlw	188
  1902  011D74  0100               	movlb	0	; () banked
  1903  011D76  6F75               	movwf	CANsendMessage@flags& (0+255),b
  1904  011D78  ECCD  F089         	call	_CANsendMessage	;wreg free
  1905                           
  1906                           ;RemoteCan.c: 254: x = 0;
  1907  011D7C  0E00               	movlw	0
  1908  011D7E  0100               	movlb	0	; () banked
  1909  011D80  6FEC               	movwf	_x& (0+255),b	;volatile
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;RemoteCan.c: 255: z++;
  1913  011D82  0100               	movlb	0	; () banked
  1914  011D84  2BED               	incf	_z& (0+255),f,b	;volatile
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;RemoteCan.c: 256: }
  1918                           ;RemoteCan.c: 257: } else {
  1919  011D86  D003               	goto	l9066
  1920  011D88                     l9064:
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;RemoteCan.c: 258: z = 0;
  1924  011D88  0E00               	movlw	0
  1925  011D8A  0100               	movlb	0	; () banked
  1926  011D8C  6FED               	movwf	_z& (0+255),b	;volatile
  1927  011D8E                     l9066:
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;RemoteCan.c: 259: }
  1931                           ;RemoteCan.c: 261: if ((time_counter - pr_time_5) >= 30) {
  1932  011D8E  C019  F0CA         	movff	_pr_time_5,??_main	;volatile
  1933  011D92  C01A  F0CB         	movff	_pr_time_5+1,??_main+1	;volatile
  1934  011D96  C01B  F0CC         	movff	_pr_time_5+2,??_main+2	;volatile
  1935  011D9A  C01C  F0CD         	movff	_pr_time_5+3,??_main+3	;volatile
  1936  011D9E  0100               	movlb	0	; () banked
  1937  011DA0  1FCA               	comf	??_main& (0+255),f,b
  1938  011DA2  1FCB               	comf	(??_main+1)& (0+255),f,b
  1939  011DA4  1FCC               	comf	(??_main+2)& (0+255),f,b
  1940  011DA6  1FCD               	comf	(??_main+3)& (0+255),f,b
  1941  011DA8  2BCA               	incf	??_main& (0+255),f,b
  1942  011DAA  0E00               	movlw	0
  1943  011DAC  23CB               	addwfc	(??_main+1)& (0+255),f,b
  1944  011DAE  23CC               	addwfc	(??_main+2)& (0+255),f,b
  1945  011DB0  23CD               	addwfc	(??_main+3)& (0+255),f,b
  1946  011DB2  501D               	movf	_time_counter,w,c	;volatile
  1947  011DB4  0100               	movlb	0	; () banked
  1948  011DB6  25CA               	addwf	??_main& (0+255),w,b
  1949  011DB8  0100               	movlb	0	; () banked
  1950  011DBA  6FCE               	movwf	(??_main+4)& (0+255),b
  1951  011DBC  501E               	movf	_time_counter+1,w,c	;volatile
  1952  011DBE  0100               	movlb	0	; () banked
  1953  011DC0  21CB               	addwfc	(??_main+1)& (0+255),w,b
  1954  011DC2  0100               	movlb	0	; () banked
  1955  011DC4  6FCF               	movwf	(??_main+5)& (0+255),b
  1956  011DC6  501F               	movf	_time_counter+2,w,c	;volatile
  1957  011DC8  0100               	movlb	0	; () banked
  1958  011DCA  21CC               	addwfc	(??_main+2)& (0+255),w,b
  1959  011DCC  0100               	movlb	0	; () banked
  1960  011DCE  6FD0               	movwf	(??_main+6)& (0+255),b
  1961  011DD0  5020               	movf	_time_counter+3,w,c	;volatile
  1962  011DD2  0100               	movlb	0	; () banked
  1963  011DD4  21CD               	addwfc	(??_main+3)& (0+255),w,b
  1964  011DD6  0100               	movlb	0	; () banked
  1965  011DD8  6FD1               	movwf	(??_main+7)& (0+255),b
  1966  011DDA  0100               	movlb	0	; () banked
  1967  011DDC  51D1               	movf	(??_main+7)& (0+255),w,b
  1968  011DDE  0100               	movlb	0	; () banked
  1969  011DE0  11D0               	iorwf	(??_main+6)& (0+255),w,b
  1970  011DE2  0100               	movlb	0	; () banked
  1971  011DE4  11CF               	iorwf	(??_main+5)& (0+255),w,b
  1972  011DE6  E105               	bnz	u12170
  1973  011DE8  0E1E               	movlw	30
  1974  011DEA  0100               	movlb	0	; () banked
  1975  011DEC  5DCE               	subwf	(??_main+4)& (0+255),w,b
  1976  011DEE  A0D8               	btfss	status,0,c
  1977  011DF0  D06D               	goto	l9100
  1978  011DF2                     u12170:
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;RemoteCan.c: 262: pr_time_5 = time_counter;
  1982  011DF2  C01D  F019         	movff	_time_counter,_pr_time_5	;volatile
  1983  011DF6  C01E  F01A         	movff	_time_counter+1,_pr_time_5+1	;volatile
  1984  011DFA  C01F  F01B         	movff	_time_counter+2,_pr_time_5+2	;volatile
  1985  011DFE  C020  F01C         	movff	_time_counter+3,_pr_time_5+3	;volatile
  1986                           
  1987                           ;RemoteCan.c: 263: if (space_available == 0) {
  1988  011E02  B24B               	btfsc	_space_available/(0+8),_space_available& (0+7),c	;volatile
  1989  011E04  D013               	goto	l805
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;RemoteCan.c: 264: PORTDbits.RD6 = ~PORTDbits.RD6;
  1993  011E06  AC83               	btfss	3971,6,c	;volatile
  1994  011E08  D002               	goto	u12190
  1995  011E0A  0E01               	movlw	1
  1996  011E0C  D001               	goto	u12196
  1997  011E0E                     u12190:
  1998  011E0E  0E00               	movlw	0
  1999  011E10                     u12196:
  2000  011E10  0AFF               	xorlw	255
  2001  011E12  0100               	movlb	0	; () banked
  2002  011E14  6FCA               	movwf	??_main& (0+255),b
  2003  011E16  0100               	movlb	0	; () banked
  2004  011E18  3BCA               	swapf	??_main& (0+255),f,b
  2005  011E1A  47CA               	rlncf	??_main& (0+255),f,b
  2006  011E1C  47CA               	rlncf	??_main& (0+255),f,b
  2007  011E1E  5083               	movf	3971,w,c	;volatile
  2008  011E20  0100               	movlb	0	; () banked
  2009  011E22  19CA               	xorwf	??_main& (0+255),w,b
  2010  011E24  0BBF               	andlw	-65
  2011  011E26  19CA               	xorwf	??_main& (0+255),w,b
  2012  011E28  6E83               	movwf	3971,c	;volatile
  2013  011E2A  D04F               	goto	l9098
  2014  011E2C                     l805:
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;RemoteCan.c: 267: PORTDbits.RD6 = 1;
  2018  011E2C  8C83               	bsf	3971,6,c	;volatile
  2019                           
  2020                           ;RemoteCan.c: 268: if (F2_switch == 0) {
  2021  011E2E  B44A               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2022  011E30  D012               	goto	l807
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;RemoteCan.c: 269: PORTDbits.RD5 = ~PORTDbits.RD5;
  2026  011E32  AA83               	btfss	3971,5,c	;volatile
  2027  011E34  D002               	goto	u12210
  2028  011E36  0E01               	movlw	1
  2029  011E38  D001               	goto	u12216
  2030  011E3A                     u12210:
  2031  011E3A  0E00               	movlw	0
  2032  011E3C                     u12216:
  2033  011E3C  0AFF               	xorlw	255
  2034  011E3E  0100               	movlb	0	; () banked
  2035  011E40  6FCA               	movwf	??_main& (0+255),b
  2036  011E42  0100               	movlb	0	; () banked
  2037  011E44  3BCA               	swapf	??_main& (0+255),f,b
  2038  011E46  47CA               	rlncf	??_main& (0+255),f,b
  2039  011E48  5083               	movf	3971,w,c	;volatile
  2040  011E4A  0100               	movlb	0	; () banked
  2041  011E4C  19CA               	xorwf	??_main& (0+255),w,b
  2042  011E4E  0BDF               	andlw	-33
  2043  011E50  19CA               	xorwf	??_main& (0+255),w,b
  2044  011E52  6E83               	movwf	3971,c	;volatile
  2045                           
  2046                           ;RemoteCan.c: 270: } else {
  2047  011E54  D03B               	goto	l9100
  2048  011E56                     l807:
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;RemoteCan.c: 271: PORTDbits.RD5 = 1;
  2052  011E56  8A83               	bsf	3971,5,c	;volatile
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;RemoteCan.c: 273: }
  2056                           ;RemoteCan.c: 274: }
  2057                           ;RemoteCan.c: 275: }
  2058                           ;RemoteCan.c: 276: } else {
  2059                           
  2060                           ; BSR set to: 0
  2061                           
  2062                           ; BSR set to: 0
  2063  011E58  D039               	goto	l9100
  2064  011E5A                     l9076:
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;RemoteCan.c: 277: x = 0;
  2068  011E5A  0E00               	movlw	0
  2069  011E5C  0100               	movlb	0	; () banked
  2070  011E5E  6FEC               	movwf	_x& (0+255),b	;volatile
  2071                           
  2072                           ;RemoteCan.c: 278: z = 0;
  2073  011E60  0E00               	movlw	0
  2074  011E62  0100               	movlb	0	; () banked
  2075  011E64  6FED               	movwf	_z& (0+255),b	;volatile
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;RemoteCan.c: 279: F2_switch = 0;
  2079  011E66  944A               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;RemoteCan.c: 280: PORTDbits.RD5 = 0;
  2083  011E68  9A83               	bcf	3971,5,c	;volatile
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;RemoteCan.c: 281: PORTDbits.RD6 = 0;
  2087  011E6A  9C83               	bcf	3971,6,c	;volatile
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;RemoteCan.c: 282: if (y == 0) {
  2091  011E6C  BC4B               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  2092  011E6E  D02C               	goto	l9096
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;RemoteCan.c: 283: parking_state = 0;
  2096  011E70  0E00               	movlw	0
  2097  011E72  0100               	movlb	0	; () banked
  2098  011E74  6FE9               	movwf	_parking_state& (0+255),b	;volatile
  2099                           
  2100                           ;RemoteCan.c: 284: JoystickConstants[1] = 15;
  2101  011E76  0E00               	movlw	0
  2102  011E78  0100               	movlb	0	; () banked
  2103  011E7A  6FD6               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2104  011E7C  0E00               	movlw	0
  2105  011E7E  6FD7               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2106  011E80  0E70               	movlw	112
  2107  011E82  6FD8               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2108  011E84  0E41               	movlw	65
  2109  011E86  6FD9               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2110  011E88                     l9088:
  2111  011E88  ECBF  F0B0         	call	_CANisTxReady	;wreg free
  2112  011E8C  0900               	iorlw	0
  2113  011E8E  B4D8               	btfsc	status,2,c
  2114  011E90  D7FB               	goto	l9088
  2115                           
  2116                           ;RemoteCan.c: 286: park_assist_state[0] = 0b00000000;
  2117  011E92  0E00               	movlw	0
  2118  011E94  0101               	movlb	1	; () banked
  2119  011E96  6F28               	movwf	_park_assist_state& (0+255),b
  2120                           
  2121                           ; BSR set to: 1
  2122                           ;RemoteCan.c: 287: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2123  011E98  0E0A               	movlw	10
  2124  011E9A  0100               	movlb	0	; () banked
  2125  011E9C  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
  2126  011E9E  0E00               	movlw	0
  2127  011EA0  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2128  011EA2  0E00               	movlw	0
  2129  011EA4  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2130  011EA6  0E00               	movlw	0
  2131  011EA8  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2132  011EAA  0E28               	movlw	low _park_assist_state
  2133  011EAC  0100               	movlb	0	; () banked
  2134  011EAE  6F72               	movwf	CANsendMessage@data& (0+255),b
  2135  011EB0  0E01               	movlw	high _park_assist_state
  2136  011EB2  0100               	movlb	0	; () banked
  2137  011EB4  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
  2138  011EB6  0E08               	movlw	8
  2139  011EB8  0100               	movlb	0	; () banked
  2140  011EBA  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
  2141  011EBC  0EBC               	movlw	188
  2142  011EBE  0100               	movlb	0	; () banked
  2143  011EC0  6F75               	movwf	CANsendMessage@flags& (0+255),b
  2144  011EC2  ECCD  F089         	call	_CANsendMessage	;wreg free
  2145                           
  2146                           ;RemoteCan.c: 288: y = 1;
  2147  011EC6  8C4B               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2148  011EC8                     l9096:
  2149                           
  2150                           ;RemoteCan.c: 289: }
  2151                           ;RemoteCan.c: 290: PORTDbits.RD6 = 0;
  2152  011EC8  9C83               	bcf	3971,6,c	;volatile
  2153  011ECA                     l9098:
  2154                           
  2155                           ;RemoteCan.c: 291: PORTDbits.RD5 = 0;
  2156  011ECA  9A83               	bcf	3971,5,c	;volatile
  2157  011ECC                     l9100:
  2158                           
  2159                           ;RemoteCan.c: 292: }
  2160                           ;RemoteCan.c: 295: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2161  011ECC  0E00               	movlw	0
  2162  011ECE  0100               	movlb	0	; () banked
  2163  011ED0  6FA6               	movwf	___fladd@a& (0+255),b
  2164  011ED2  0E00               	movlw	0
  2165  011ED4  6FA7               	movwf	(___fladd@a+1)& (0+255),b
  2166  011ED6  0E34               	movlw	52
  2167  011ED8  6FA8               	movwf	(___fladd@a+2)& (0+255),b
  2168  011EDA  0E43               	movlw	67
  2169  011EDC  6FA9               	movwf	(___fladd@a+3)& (0+255),b
  2170  011EDE  C0D2  F080         	movff	_JoystickConstants,___flmul@a	;volatile
  2171  011EE2  C0D3  F081         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  2172  011EE6  C0D4  F082         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  2173  011EEA  C0D5  F083         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  2174  011EEE  0100               	movlb	0	; () banked
  2175  011EF0  51DE               	movf	_JoystickValues& (0+255),w,b	;volatile
  2176  011EF2  0100               	movlb	0	; () banked
  2177  011EF4  6F6E               	movwf	___xxtofl@val& (0+255),b
  2178  011EF6  6B6F               	clrf	(___xxtofl@val+1)& (0+255),b
  2179  011EF8  6B70               	clrf	(___xxtofl@val+2)& (0+255),b
  2180  011EFA  6B71               	clrf	(___xxtofl@val+3)& (0+255),b
  2181  011EFC  0E00               	movlw	0
  2182  011EFE  EC4C  F0A3         	call	___xxtofl
  2183  011F02  C06E  F07C         	movff	?___xxtofl,___flmul@b
  2184  011F06  C06F  F07D         	movff	?___xxtofl+1,___flmul@b+1
  2185  011F0A  C070  F07E         	movff	?___xxtofl+2,___flmul@b+2
  2186  011F0E  C071  F07F         	movff	?___xxtofl+3,___flmul@b+3
  2187  011F12  ECCF  F09B         	call	___flmul	;wreg free
  2188  011F16  C07C  F095         	movff	?___flmul,___flneg@f1
  2189  011F1A  C07D  F096         	movff	?___flmul+1,___flneg@f1+1
  2190  011F1E  C07E  F097         	movff	?___flmul+2,___flneg@f1+2
  2191  011F22  C07F  F098         	movff	?___flmul+3,___flneg@f1+3
  2192  011F26  EC14  F0B0         	call	___flneg	;wreg free
  2193  011F2A  C095  F0A2         	movff	?___flneg,___fladd@b
  2194  011F2E  C096  F0A3         	movff	?___flneg+1,___fladd@b+1
  2195  011F32  C097  F0A4         	movff	?___flneg+2,___fladd@b+2
  2196  011F36  C098  F0A5         	movff	?___flneg+3,___fladd@b+3
  2197  011F3A  EC7B  F099         	call	___fladd	;wreg free
  2198  011F3E  C0A2  F0B6         	movff	?___fladd,___fltol@f1
  2199  011F42  C0A3  F0B7         	movff	?___fladd+1,___fltol@f1+1
  2200  011F46  C0A4  F0B8         	movff	?___fladd+2,___fltol@f1+2
  2201  011F4A  C0A5  F0B9         	movff	?___fladd+3,___fltol@f1+3
  2202  011F4E  ECAC  F0AA         	call	___fltol	;wreg free
  2203  011F52  0100               	movlb	0	; () banked
  2204  011F54  51B6               	movf	?___fltol& (0+255),w,b
  2205  011F56  0100               	movlb	0	; () banked
  2206  011F58  6FF0               	movwf	_data_steering& (0+255),b
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;RemoteCan.c: 296: if (parking_state == 1) {
  2210  011F5A  0100               	movlb	0	; () banked
  2211  011F5C  05E9               	decf	_parking_state& (0+255),w,b	;volatile
  2212  011F5E  A4D8               	btfss	status,2,c
  2213  011F60  D05C               	goto	l814
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;RemoteCan.c: 297: if (steering_correction_dir == 1) {
  2217  011F62  A44B               	btfss	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2218  011F64  D00F               	goto	l9108
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;RemoteCan.c: 298: check = data_steering[0] + steering_correction;
  2222  011F66  0100               	movlb	0	; () banked
  2223  011F68  51EA               	movf	_steering_correction& (0+255),w,b	;volatile
  2224  011F6A  C0F0  F0CA         	movff	_data_steering,??_main
  2225  011F6E  0100               	movlb	0	; () banked
  2226  011F70  6BCB               	clrf	(??_main+1)& (0+255),b
  2227  011F72  0100               	movlb	0	; () banked
  2228  011F74  27CA               	addwf	??_main& (0+255),f,b
  2229  011F76  0E00               	movlw	0
  2230  011F78  23CB               	addwfc	(??_main+1)& (0+255),f,b
  2231  011F7A  C0CA  F0DA         	movff	??_main,_check	;volatile
  2232  011F7E  C0CB  F0DB         	movff	??_main+1,_check+1	;volatile
  2233  011F82  D01B               	goto	L2
  2234  011F84                     l9108:
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;RemoteCan.c: 300: check = data_steering[0] - steering_correction;
  2238  011F84  0100               	movlb	0	; () banked
  2239  011F86  51EA               	movf	_steering_correction& (0+255),w,b	;volatile
  2240  011F88  0100               	movlb	0	; () banked
  2241  011F8A  6FCA               	movwf	??_main& (0+255),b
  2242  011F8C  6BCB               	clrf	(??_main+1)& (0+255),b
  2243  011F8E  0100               	movlb	0	; () banked
  2244  011F90  1FCA               	comf	??_main& (0+255),f,b
  2245  011F92  1FCB               	comf	(??_main+1)& (0+255),f,b
  2246  011F94  4BCA               	infsnz	??_main& (0+255),f,b
  2247  011F96  2BCB               	incf	(??_main+1)& (0+255),f,b
  2248  011F98  0100               	movlb	0	; () banked
  2249  011F9A  51F0               	movf	_data_steering& (0+255),w,b
  2250  011F9C  0100               	movlb	0	; () banked
  2251  011F9E  6FCC               	movwf	(??_main+2)& (0+255),b
  2252  011FA0  6BCD               	clrf	(??_main+3)& (0+255),b
  2253  011FA2  0100               	movlb	0	; () banked
  2254  011FA4  51CA               	movf	??_main& (0+255),w,b
  2255  011FA6  0100               	movlb	0	; () banked
  2256  011FA8  27CC               	addwf	(??_main+2)& (0+255),f,b
  2257  011FAA  0100               	movlb	0	; () banked
  2258  011FAC  51CB               	movf	(??_main+1)& (0+255),w,b
  2259  011FAE  0100               	movlb	0	; () banked
  2260  011FB0  23CD               	addwfc	(??_main+3)& (0+255),f,b
  2261  011FB2  C0CC  F0DA         	movff	??_main+2,_check	;volatile
  2262  011FB6  C0CD  F0DB         	movff	??_main+3,_check+1	;volatile
  2263  011FBA                     L2:
  2264  011FBA  0100               	movlb	0	; () banked
  2265  011FBC  0E00               	movlw	0
  2266  011FBE  BFDB               	btfsc	(_check+1)& (0+255),7,b	;volatile
  2267  011FC0  0EFF               	movlw	-1
  2268  011FC2  6FDC               	movwf	(_check+2)& (0+255),b	;volatile
  2269  011FC4  6FDD               	movwf	(_check+3)& (0+255),b	;volatile
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;RemoteCan.c: 301: }
  2273                           ;RemoteCan.c: 302: if ((check >= 0)&&(check <= 180)) {
  2274  011FC6  0100               	movlb	0	; () banked
  2275  011FC8  BFDD               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2276  011FCA  D012               	goto	l9114
  2277                           
  2278                           ; BSR set to: 0
  2279  011FCC  0100               	movlb	0	; () banked
  2280  011FCE  BFDD               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2281  011FD0  D00C               	goto	l9112
  2282  011FD2  0100               	movlb	0	; () banked
  2283  011FD4  51DD               	movf	(_check+3)& (0+255),w,b	;volatile
  2284  011FD6  0100               	movlb	0	; () banked
  2285  011FD8  11DC               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2286  011FDA  0100               	movlb	0	; () banked
  2287  011FDC  11DB               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2288  011FDE  E108               	bnz	l9114
  2289  011FE0  0EB5               	movlw	181
  2290  011FE2  0100               	movlb	0	; () banked
  2291  011FE4  5DDA               	subwf	_check& (0+255),w,b	;volatile
  2292  011FE6  B0D8               	btfsc	status,0,c
  2293  011FE8  D003               	goto	l9114
  2294  011FEA                     l9112:
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;RemoteCan.c: 303: data_steering[0] = check;
  2298  011FEA  C0DA  F0F0         	movff	_check,_data_steering	;volatile
  2299                           
  2300                           ;RemoteCan.c: 304: } else {
  2301  011FEE  D019               	goto	l821
  2302  011FF0                     l9114:
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;RemoteCan.c: 305: if (check > 180) {
  2306  011FF0  0100               	movlb	0	; () banked
  2307  011FF2  BFDD               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2308  011FF4  D00E               	goto	l9118
  2309  011FF6  0100               	movlb	0	; () banked
  2310  011FF8  51DD               	movf	(_check+3)& (0+255),w,b	;volatile
  2311  011FFA  0100               	movlb	0	; () banked
  2312  011FFC  11DC               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2313  011FFE  0100               	movlb	0	; () banked
  2314  012000  11DB               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2315  012002  E105               	bnz	u12280
  2316  012004  0EB5               	movlw	181
  2317  012006  0100               	movlb	0	; () banked
  2318  012008  5DDA               	subwf	_check& (0+255),w,b	;volatile
  2319  01200A  A0D8               	btfss	status,0,c
  2320  01200C  D002               	goto	l9118
  2321  01200E                     u12280:
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;RemoteCan.c: 306: data_steering[0] = 180;
  2325  01200E  0EB4               	movlw	180
  2326  012010  D001               	goto	L3
  2327  012012                     l9118:
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;RemoteCan.c: 308: data_steering[0] = 0;
  2331  012012  0E00               	movlw	0
  2332  012014                     L3:
  2333  012014  0100               	movlb	0	; () banked
  2334  012016  6FF0               	movwf	_data_steering& (0+255),b
  2335                           
  2336                           ; BSR set to: 0
  2337                           ;RemoteCan.c: 309: }
  2338                           ;RemoteCan.c: 310: }
  2339                           ;RemoteCan.c: 311: } else {
  2340                           
  2341                           ; BSR set to: 0
  2342  012018  D004               	goto	l821
  2343  01201A                     l814:
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;RemoteCan.c: 312: steering_correction_dir = 0;
  2347  01201A  944B               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;RemoteCan.c: 313: steering_correction = 0;
  2351  01201C  0E00               	movlw	0
  2352  01201E  0100               	movlb	0	; () banked
  2353  012020  6FEA               	movwf	_steering_correction& (0+255),b	;volatile
  2354  012022                     l821:
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;RemoteCan.c: 314: }
  2358                           ;RemoteCan.c: 317: if (switch_position != 0) {
  2359  012022  0100               	movlb	0	; () banked
  2360  012024  51EB               	movf	_switch_position& (0+255),w,b	;volatile
  2361  012026  B4D8               	btfsc	status,2,c
  2362  012028  D088               	goto	l9132
  2363                           
  2364                           ; BSR set to: 0
  2365                           ;RemoteCan.c: 318: if (JoystickValues[1] > 132) {
  2366  01202A  0E84               	movlw	132
  2367  01202C  0100               	movlb	0	; () banked
  2368  01202E  65DF               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  2369  012030  D042               	goto	l9128
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;RemoteCan.c: 319: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  2373  012032  C0D6  F080         	movff	_JoystickConstants+4,___flmul@a	;volatile
  2374  012036  C0D7  F081         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  2375  01203A  C0D8  F082         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  2376  01203E  C0D9  F083         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  2377  012042  0E7E               	movlw	126
  2378  012044  0100               	movlb	0	; () banked
  2379  012046  6FCA               	movwf	??_main& (0+255),b
  2380  012048  0EFF               	movlw	255
  2381  01204A  0100               	movlb	0	; () banked
  2382  01204C  6FCB               	movwf	(??_main+1)& (0+255),b
  2383  01204E  0100               	movlb	0	; () banked
  2384  012050  51DF               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2385  012052  0100               	movlb	0	; () banked
  2386  012054  6FCC               	movwf	(??_main+2)& (0+255),b
  2387  012056  6BCD               	clrf	(??_main+3)& (0+255),b
  2388  012058  0100               	movlb	0	; () banked
  2389  01205A  51CA               	movf	??_main& (0+255),w,b
  2390  01205C  0100               	movlb	0	; () banked
  2391  01205E  27CC               	addwf	(??_main+2)& (0+255),f,b
  2392  012060  0100               	movlb	0	; () banked
  2393  012062  51CB               	movf	(??_main+1)& (0+255),w,b
  2394  012064  0100               	movlb	0	; () banked
  2395  012066  23CD               	addwfc	(??_main+3)& (0+255),f,b
  2396  012068  C0CC  F06E         	movff	??_main+2,___xxtofl@val
  2397  01206C  C0CD  F06F         	movff	??_main+3,___xxtofl@val+1
  2398  012070  0100               	movlb	0	; () banked
  2399  012072  0E00               	movlw	0
  2400  012074  BF6F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2401  012076  0EFF               	movlw	-1
  2402  012078  6F70               	movwf	(___xxtofl@val+2)& (0+255),b
  2403  01207A  6F71               	movwf	(___xxtofl@val+3)& (0+255),b
  2404  01207C  0E01               	movlw	1
  2405  01207E  EC4C  F0A3         	call	___xxtofl
  2406  012082  C06E  F07C         	movff	?___xxtofl,___flmul@b
  2407  012086  C06F  F07D         	movff	?___xxtofl+1,___flmul@b+1
  2408  01208A  C070  F07E         	movff	?___xxtofl+2,___flmul@b+2
  2409  01208E  C071  F07F         	movff	?___xxtofl+3,___flmul@b+3
  2410  012092  ECCF  F09B         	call	___flmul	;wreg free
  2411  012096  C07C  F0B6         	movff	?___flmul,___fltol@f1
  2412  01209A  C07D  F0B7         	movff	?___flmul+1,___fltol@f1+1
  2413  01209E  C07E  F0B8         	movff	?___flmul+2,___fltol@f1+2
  2414  0120A2  C07F  F0B9         	movff	?___flmul+3,___fltol@f1+3
  2415  0120A6  ECAC  F0AA         	call	___fltol	;wreg free
  2416  0120AA  C0B6  F0E4         	movff	?___fltol,_set_speed	;volatile
  2417  0120AE  C0B7  F0E5         	movff	?___fltol+1,_set_speed+1	;volatile
  2418                           
  2419                           ;RemoteCan.c: 320: data_brake [0] = 0;
  2420  0120B2  0E00               	movlw	0
  2421  0120B4  D040               	goto	L4
  2422  0120B6                     l9128:
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;RemoteCan.c: 322: set_speed = 0;
  2426  0120B6  0E00               	movlw	0
  2427  0120B8  0100               	movlb	0	; () banked
  2428  0120BA  6FE5               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2429  0120BC  0E00               	movlw	0
  2430  0120BE  6FE4               	movwf	_set_speed& (0+255),b	;volatile
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;RemoteCan.c: 323: data_brake [0] = ((130 - JoystickValues[1]))*(1.9);
  2434  0120C0  0E33               	movlw	51
  2435  0120C2  0100               	movlb	0	; () banked
  2436  0120C4  6F80               	movwf	___flmul@a& (0+255),b
  2437  0120C6  0E33               	movlw	51
  2438  0120C8  6F81               	movwf	(___flmul@a+1)& (0+255),b
  2439  0120CA  0EF3               	movlw	243
  2440  0120CC  6F82               	movwf	(___flmul@a+2)& (0+255),b
  2441  0120CE  0E3F               	movlw	63
  2442  0120D0  6F83               	movwf	(___flmul@a+3)& (0+255),b
  2443  0120D2  0100               	movlb	0	; () banked
  2444  0120D4  51DF               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2445  0120D6  0100               	movlb	0	; () banked
  2446  0120D8  6FCA               	movwf	??_main& (0+255),b
  2447  0120DA  6BCB               	clrf	(??_main+1)& (0+255),b
  2448  0120DC  0100               	movlb	0	; () banked
  2449  0120DE  1FCA               	comf	??_main& (0+255),f,b
  2450  0120E0  1FCB               	comf	(??_main+1)& (0+255),f,b
  2451  0120E2  4BCA               	infsnz	??_main& (0+255),f,b
  2452  0120E4  2BCB               	incf	(??_main+1)& (0+255),f,b
  2453  0120E6  0E82               	movlw	130
  2454  0120E8  0100               	movlb	0	; () banked
  2455  0120EA  27CA               	addwf	??_main& (0+255),f,b
  2456  0120EC  0E00               	movlw	0
  2457  0120EE  23CB               	addwfc	(??_main+1)& (0+255),f,b
  2458  0120F0  C0CA  F06E         	movff	??_main,___xxtofl@val
  2459  0120F4  C0CB  F06F         	movff	??_main+1,___xxtofl@val+1
  2460  0120F8  0100               	movlb	0	; () banked
  2461  0120FA  0E00               	movlw	0
  2462  0120FC  BF6F               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2463  0120FE  0EFF               	movlw	-1
  2464  012100  6F70               	movwf	(___xxtofl@val+2)& (0+255),b
  2465  012102  6F71               	movwf	(___xxtofl@val+3)& (0+255),b
  2466  012104  0E01               	movlw	1
  2467  012106  EC4C  F0A3         	call	___xxtofl
  2468  01210A  C06E  F07C         	movff	?___xxtofl,___flmul@b
  2469  01210E  C06F  F07D         	movff	?___xxtofl+1,___flmul@b+1
  2470  012112  C070  F07E         	movff	?___xxtofl+2,___flmul@b+2
  2471  012116  C071  F07F         	movff	?___xxtofl+3,___flmul@b+3
  2472  01211A  ECCF  F09B         	call	___flmul	;wreg free
  2473  01211E  C07C  F0B6         	movff	?___flmul,___fltol@f1
  2474  012122  C07D  F0B7         	movff	?___flmul+1,___fltol@f1+1
  2475  012126  C07E  F0B8         	movff	?___flmul+2,___fltol@f1+2
  2476  01212A  C07F  F0B9         	movff	?___flmul+3,___fltol@f1+3
  2477  01212E  ECAC  F0AA         	call	___fltol	;wreg free
  2478  012132  0100               	movlb	0	; () banked
  2479  012134  51B6               	movf	?___fltol& (0+255),w,b
  2480  012136                     L4:
  2481  012136  0100               	movlb	0	; () banked
  2482  012138  6FEE               	movwf	_data_brake& (0+255),b
  2483  01213A                     l9132:
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;RemoteCan.c: 324: }
  2487                           ;RemoteCan.c: 325: }
  2488                           ;RemoteCan.c: 327: if (newMessageCan == 1) {
  2489  01213A  AE4A               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2490  01213C  D003               	goto	l9138
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;RemoteCan.c: 328: CAN_interpreter();
  2494  01213E  EC21  F0AD         	call	_CAN_interpreter	;wreg free
  2495                           
  2496                           ;RemoteCan.c: 329: newMessageCan = 0;
  2497  012142  9E4A               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2498  012144                     l9138:
  2499                           
  2500                           ;RemoteCan.c: 330: }
  2501                           ;RemoteCan.c: 332: if (((time_counter - pr_time_2) >= 2) && (parking_state != 2)) {
  2502  012144  C00D  F0CA         	movff	_pr_time_2,??_main	;volatile
  2503  012148  C00E  F0CB         	movff	_pr_time_2+1,??_main+1	;volatile
  2504  01214C  C00F  F0CC         	movff	_pr_time_2+2,??_main+2	;volatile
  2505  012150  C010  F0CD         	movff	_pr_time_2+3,??_main+3	;volatile
  2506  012154  0100               	movlb	0	; () banked
  2507  012156  1FCA               	comf	??_main& (0+255),f,b
  2508  012158  1FCB               	comf	(??_main+1)& (0+255),f,b
  2509  01215A  1FCC               	comf	(??_main+2)& (0+255),f,b
  2510  01215C  1FCD               	comf	(??_main+3)& (0+255),f,b
  2511  01215E  2BCA               	incf	??_main& (0+255),f,b
  2512  012160  0E00               	movlw	0
  2513  012162  23CB               	addwfc	(??_main+1)& (0+255),f,b
  2514  012164  23CC               	addwfc	(??_main+2)& (0+255),f,b
  2515  012166  23CD               	addwfc	(??_main+3)& (0+255),f,b
  2516  012168  501D               	movf	_time_counter,w,c	;volatile
  2517  01216A  0100               	movlb	0	; () banked
  2518  01216C  25CA               	addwf	??_main& (0+255),w,b
  2519  01216E  0100               	movlb	0	; () banked
  2520  012170  6FCE               	movwf	(??_main+4)& (0+255),b
  2521  012172  501E               	movf	_time_counter+1,w,c	;volatile
  2522  012174  0100               	movlb	0	; () banked
  2523  012176  21CB               	addwfc	(??_main+1)& (0+255),w,b
  2524  012178  0100               	movlb	0	; () banked
  2525  01217A  6FCF               	movwf	(??_main+5)& (0+255),b
  2526  01217C  501F               	movf	_time_counter+2,w,c	;volatile
  2527  01217E  0100               	movlb	0	; () banked
  2528  012180  21CC               	addwfc	(??_main+2)& (0+255),w,b
  2529  012182  0100               	movlb	0	; () banked
  2530  012184  6FD0               	movwf	(??_main+6)& (0+255),b
  2531  012186  5020               	movf	_time_counter+3,w,c	;volatile
  2532  012188  0100               	movlb	0	; () banked
  2533  01218A  21CD               	addwfc	(??_main+3)& (0+255),w,b
  2534  01218C  0100               	movlb	0	; () banked
  2535  01218E  6FD1               	movwf	(??_main+7)& (0+255),b
  2536  012190  0100               	movlb	0	; () banked
  2537  012192  51D1               	movf	(??_main+7)& (0+255),w,b
  2538  012194  0100               	movlb	0	; () banked
  2539  012196  11D0               	iorwf	(??_main+6)& (0+255),w,b
  2540  012198  0100               	movlb	0	; () banked
  2541  01219A  11CF               	iorwf	(??_main+5)& (0+255),w,b
  2542  01219C  E105               	bnz	u12320
  2543  01219E  0E02               	movlw	2
  2544  0121A0  0100               	movlb	0	; () banked
  2545  0121A2  5DCE               	subwf	(??_main+4)& (0+255),w,b
  2546  0121A4  A0D8               	btfss	status,0,c
  2547  0121A6  D00F               	goto	l9146
  2548  0121A8                     u12320:
  2549                           
  2550                           ; BSR set to: 0
  2551  0121A8  0E02               	movlw	2
  2552  0121AA  0100               	movlb	0	; () banked
  2553  0121AC  19E9               	xorwf	_parking_state& (0+255),w,b	;volatile
  2554  0121AE  B4D8               	btfsc	status,2,c
  2555  0121B0  D00A               	goto	l9146
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;RemoteCan.c: 333: pr_time_2 = time_counter;
  2559  0121B2  C01D  F00D         	movff	_time_counter,_pr_time_2	;volatile
  2560  0121B6  C01E  F00E         	movff	_time_counter+1,_pr_time_2+1	;volatile
  2561  0121BA  C01F  F00F         	movff	_time_counter+2,_pr_time_2+2	;volatile
  2562  0121BE  C020  F010         	movff	_time_counter+3,_pr_time_2+3	;volatile
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;RemoteCan.c: 334: CAN_Send();
  2566  0121C2  ECC4  F0AC         	call	_CAN_Send	;wreg free
  2567  0121C6                     l9146:
  2568                           
  2569                           ;RemoteCan.c: 335: }
  2570                           ;RemoteCan.c: 337: if ((time_counter - pr_time_3) >= (100 / 10)) {
  2571  0121C6  C011  F0CA         	movff	_pr_time_3,??_main	;volatile
  2572  0121CA  C012  F0CB         	movff	_pr_time_3+1,??_main+1	;volatile
  2573  0121CE  C013  F0CC         	movff	_pr_time_3+2,??_main+2	;volatile
  2574  0121D2  C014  F0CD         	movff	_pr_time_3+3,??_main+3	;volatile
  2575  0121D6  0100               	movlb	0	; () banked
  2576  0121D8  1FCA               	comf	??_main& (0+255),f,b
  2577  0121DA  1FCB               	comf	(??_main+1)& (0+255),f,b
  2578  0121DC  1FCC               	comf	(??_main+2)& (0+255),f,b
  2579  0121DE  1FCD               	comf	(??_main+3)& (0+255),f,b
  2580  0121E0  2BCA               	incf	??_main& (0+255),f,b
  2581  0121E2  0E00               	movlw	0
  2582  0121E4  23CB               	addwfc	(??_main+1)& (0+255),f,b
  2583  0121E6  23CC               	addwfc	(??_main+2)& (0+255),f,b
  2584  0121E8  23CD               	addwfc	(??_main+3)& (0+255),f,b
  2585  0121EA  501D               	movf	_time_counter,w,c	;volatile
  2586  0121EC  0100               	movlb	0	; () banked
  2587  0121EE  25CA               	addwf	??_main& (0+255),w,b
  2588  0121F0  0100               	movlb	0	; () banked
  2589  0121F2  6FCE               	movwf	(??_main+4)& (0+255),b
  2590  0121F4  501E               	movf	_time_counter+1,w,c	;volatile
  2591  0121F6  0100               	movlb	0	; () banked
  2592  0121F8  21CB               	addwfc	(??_main+1)& (0+255),w,b
  2593  0121FA  0100               	movlb	0	; () banked
  2594  0121FC  6FCF               	movwf	(??_main+5)& (0+255),b
  2595  0121FE  501F               	movf	_time_counter+2,w,c	;volatile
  2596  012200  0100               	movlb	0	; () banked
  2597  012202  21CC               	addwfc	(??_main+2)& (0+255),w,b
  2598  012204  0100               	movlb	0	; () banked
  2599  012206  6FD0               	movwf	(??_main+6)& (0+255),b
  2600  012208  5020               	movf	_time_counter+3,w,c	;volatile
  2601  01220A  0100               	movlb	0	; () banked
  2602  01220C  21CD               	addwfc	(??_main+3)& (0+255),w,b
  2603  01220E  0100               	movlb	0	; () banked
  2604  012210  6FD1               	movwf	(??_main+7)& (0+255),b
  2605  012212  0100               	movlb	0	; () banked
  2606  012214  51D1               	movf	(??_main+7)& (0+255),w,b
  2607  012216  0100               	movlb	0	; () banked
  2608  012218  11D0               	iorwf	(??_main+6)& (0+255),w,b
  2609  01221A  0100               	movlb	0	; () banked
  2610  01221C  11CF               	iorwf	(??_main+5)& (0+255),w,b
  2611  01221E  E105               	bnz	u12340
  2612  012220  0E0A               	movlw	10
  2613  012222  0100               	movlb	0	; () banked
  2614  012224  5DCE               	subwf	(??_main+4)& (0+255),w,b
  2615  012226  A0D8               	btfss	status,0,c
  2616  012228  D493               	goto	l8972
  2617  01222A                     u12340:
  2618                           
  2619                           ; BSR set to: 0
  2620                           ;RemoteCan.c: 338: pr_time_3 = time_counter;
  2621  01222A  C01D  F011         	movff	_time_counter,_pr_time_3	;volatile
  2622  01222E  C01E  F012         	movff	_time_counter+1,_pr_time_3+1	;volatile
  2623  012232  C01F  F013         	movff	_time_counter+2,_pr_time_3+2	;volatile
  2624  012236  C020  F014         	movff	_time_counter+3,_pr_time_3+3	;volatile
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;RemoteCan.c: 339: LCD_Handler();
  2628  01223A  ECF6  F0A5         	call	_LCD_Handler	;wreg free
  2629  01223E  D488               	goto	l8972
  2630  012240                     __end_of_main:
  2631                           	opt stack 0
  2632                           tblptru	equ	0xFF8
  2633                           tblptrh	equ	0xFF7
  2634                           tblptrl	equ	0xFF6
  2635                           tablat	equ	0xFF5
  2636                           postinc0	equ	0xFEE
  2637                           wreg	equ	0xFE8
  2638                           status	equ	0xFD8
  2639                           
  2640 ;; *************** function _board_initialization *****************
  2641 ;; Defined at:
  2642 ;;		line 501 in file "RemoteCan.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;		None               void
  2649 ;; Registers used:
  2650 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2660 ;;Total ram usage:        0 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; Hardware stack levels required when called:    9
  2663 ;; This function calls:
  2664 ;;		_CANInitialize
  2665 ;;		_LCD_clear
  2666 ;;		_LCD_goto_line
  2667 ;;		_LCD_initialize
  2668 ;; This function is called by:
  2669 ;;		_main
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text1
  2674  015AF0                     __ptext1:
  2675                           	opt stack 0
  2676  015AF0                     _board_initialization:
  2677                           	opt stack 21
  2678                           
  2679                           ;RemoteCan.c: 503: LATA = 0x00;
  2680                           
  2681                           ;incstack = 0
  2682  015AF0  0E00               	movlw	0
  2683  015AF2  6E89               	movwf	3977,c	;volatile
  2684                           
  2685                           ;RemoteCan.c: 504: TRISA = 0b00011111;
  2686  015AF4  0E1F               	movlw	31
  2687  015AF6  6E92               	movwf	3986,c	;volatile
  2688                           
  2689                           ;RemoteCan.c: 505: LATB = 0x00;
  2690  015AF8  0E00               	movlw	0
  2691  015AFA  6E8A               	movwf	3978,c	;volatile
  2692                           
  2693                           ;RemoteCan.c: 506: TRISB = 0b11111011;
  2694  015AFC  0EFB               	movlw	251
  2695  015AFE  6E93               	movwf	3987,c	;volatile
  2696                           
  2697                           ;RemoteCan.c: 507: LATC = 0x00;
  2698  015B00  0E00               	movlw	0
  2699  015B02  6E8B               	movwf	3979,c	;volatile
  2700                           
  2701                           ;RemoteCan.c: 508: TRISC = 0b11110000;
  2702  015B04  0EF0               	movlw	240
  2703  015B06  6E94               	movwf	3988,c	;volatile
  2704                           
  2705                           ;RemoteCan.c: 509: LATD = 0x00;
  2706  015B08  0E00               	movlw	0
  2707  015B0A  6E8C               	movwf	3980,c	;volatile
  2708                           
  2709                           ;RemoteCan.c: 510: TRISD = 0x00;
  2710  015B0C  0E00               	movlw	0
  2711  015B0E  6E95               	movwf	3989,c	;volatile
  2712                           
  2713                           ;RemoteCan.c: 511: LATE = 0x00;
  2714  015B10  0E00               	movlw	0
  2715  015B12  6E8D               	movwf	3981,c	;volatile
  2716                           
  2717                           ;RemoteCan.c: 512: TRISE = 0x00;
  2718  015B14  0E00               	movlw	0
  2719  015B16  6E96               	movwf	3990,c	;volatile
  2720                           
  2721                           ;RemoteCan.c: 514: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2722  015B18  0E06               	movlw	6
  2723  015B1A  0100               	movlb	0	; () banked
  2724  015B1C  6F7C               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2725  015B1E  0E05               	movlw	5
  2726  015B20  0100               	movlb	0	; () banked
  2727  015B22  6F7D               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2728  015B24  0E01               	movlw	1
  2729  015B26  0100               	movlb	0	; () banked
  2730  015B28  6F7E               	movwf	CANInitialize@SJW& (0+255),b
  2731  015B2A  0E03               	movlw	3
  2732  015B2C  0100               	movlb	0	; () banked
  2733  015B2E  6F7F               	movwf	CANInitialize@BRP& (0+255),b
  2734  015B30  0E9D               	movlw	157
  2735  015B32  0100               	movlb	0	; () banked
  2736  015B34  6F80               	movwf	CANInitialize@flags& (0+255),b
  2737  015B36  0E04               	movlw	4
  2738  015B38  EC33  F0A4         	call	_CANInitialize
  2739                           
  2740                           ;RemoteCan.c: 518: PIR2bits.TMR3IF = 0;
  2741  015B3C  92A1               	bcf	4001,1,c	;volatile
  2742                           
  2743                           ;RemoteCan.c: 519: PIR3bits.RXB1IF = 0;
  2744  015B3E  92A4               	bcf	4004,1,c	;volatile
  2745                           
  2746                           ;RemoteCan.c: 520: PIR3bits.RXB0IF = 0;
  2747  015B40  90A4               	bcf	4004,0,c	;volatile
  2748                           
  2749                           ;RemoteCan.c: 523: RCONbits.IPEN = 1;
  2750  015B42  8ED0               	bsf	4048,7,c	;volatile
  2751                           
  2752                           ;RemoteCan.c: 524: IPR3bits.RXB1IP = 1;
  2753  015B44  82A5               	bsf	4005,1,c	;volatile
  2754                           
  2755                           ;RemoteCan.c: 525: IPR3bits.RXB0IP = 1;
  2756  015B46  80A5               	bsf	4005,0,c	;volatile
  2757                           
  2758                           ;RemoteCan.c: 526: IPR2bits.TMR3IP = 0;
  2759  015B48  92A2               	bcf	4002,1,c	;volatile
  2760                           
  2761                           ;RemoteCan.c: 529: ADCON1 = 0b00001101;
  2762  015B4A  0E0D               	movlw	13
  2763  015B4C  6EC1               	movwf	4033,c	;volatile
  2764                           
  2765                           ;RemoteCan.c: 530: ADCON0bits.CHS2 = 0;
  2766  015B4E  98C2               	bcf	4034,4,c	;volatile
  2767                           
  2768                           ;RemoteCan.c: 531: ADCON0bits.CHS1 = 0;
  2769  015B50  96C2               	bcf	4034,3,c	;volatile
  2770                           
  2771                           ;RemoteCan.c: 532: ADCON0bits.CHS0 = 0;
  2772  015B52  94C2               	bcf	4034,2,c	;volatile
  2773                           
  2774                           ;RemoteCan.c: 533: ADCON2bits.ACQT2 = 1;
  2775  015B54  8AC0               	bsf	4032,5,c	;volatile
  2776                           
  2777                           ;RemoteCan.c: 534: ADCON2bits.ACQT1 = 1;
  2778  015B56  88C0               	bsf	4032,4,c	;volatile
  2779                           
  2780                           ;RemoteCan.c: 535: ADCON2bits.ACQT0 = 0;
  2781  015B58  96C0               	bcf	4032,3,c	;volatile
  2782                           
  2783                           ;RemoteCan.c: 536: ADCON2bits.ADCS2 = 1;
  2784  015B5A  84C0               	bsf	4032,2,c	;volatile
  2785                           
  2786                           ;RemoteCan.c: 537: ADCON2bits.ADCS1 = 0;
  2787  015B5C  92C0               	bcf	4032,1,c	;volatile
  2788                           
  2789                           ;RemoteCan.c: 538: ADCON2bits.ADCS0 = 1;
  2790  015B5E  80C0               	bsf	4032,0,c	;volatile
  2791                           
  2792                           ;RemoteCan.c: 539: ADCON2bits.ADFM = 0;
  2793  015B60  9EC0               	bcf	4032,7,c	;volatile
  2794                           
  2795                           ;RemoteCan.c: 540: ADCON0bits.ADON = 1;
  2796  015B62  80C2               	bsf	4034,0,c	;volatile
  2797                           
  2798                           ;RemoteCan.c: 543: LCD_initialize(16);
  2799  015B64  0E10               	movlw	16
  2800  015B66  ECF5  F0A9         	call	_LCD_initialize
  2801                           
  2802                           ;RemoteCan.c: 545: LCD_clear();
  2803  015B6A  EC7E  F0B0         	call	_LCD_clear	;wreg free
  2804                           
  2805                           ;RemoteCan.c: 546: LCD_goto_line(1);
  2806  015B6E  0E01               	movlw	1
  2807  015B70  EC32  F0AB         	call	_LCD_goto_line
  2808                           
  2809                           ;RemoteCan.c: 550: PORTDbits.RD2 = 0;
  2810  015B74  9483               	bcf	3971,2,c	;volatile
  2811                           
  2812                           ;RemoteCan.c: 551: PORTDbits.RD3 = 0;
  2813  015B76  9683               	bcf	3971,3,c	;volatile
  2814                           
  2815                           ;RemoteCan.c: 554: TMR3H = 0x63;
  2816  015B78  0E63               	movlw	99
  2817  015B7A  6EB3               	movwf	4019,c	;volatile
  2818                           
  2819                           ;RemoteCan.c: 555: TMR3L = 0xC0;
  2820  015B7C  0EC0               	movlw	192
  2821  015B7E  6EB2               	movwf	4018,c	;volatile
  2822                           
  2823                           ;RemoteCan.c: 558: PIE3bits.RXB1IE = 1;
  2824  015B80  82A3               	bsf	4003,1,c	;volatile
  2825                           
  2826                           ;RemoteCan.c: 559: PIE3bits.RXB0IE = 1;
  2827  015B82  80A3               	bsf	4003,0,c	;volatile
  2828                           
  2829                           ;RemoteCan.c: 560: PIE2bits.TMR3IE = 1;
  2830  015B84  82A0               	bsf	4000,1,c	;volatile
  2831                           
  2832                           ;RemoteCan.c: 563: T3CON = 0x01;
  2833  015B86  0E01               	movlw	1
  2834  015B88  6EB1               	movwf	4017,c	;volatile
  2835                           
  2836                           ;RemoteCan.c: 564: LCD_clear();
  2837  015B8A  EC7E  F0B0         	call	_LCD_clear	;wreg free
  2838                           
  2839                           ;RemoteCan.c: 565: INTCONbits.GIEH = 1;
  2840  015B8E  8EF2               	bsf	intcon,7,c	;volatile
  2841                           
  2842                           ;RemoteCan.c: 566: INTCONbits.GIEL = 1;
  2843  015B90  8CF2               	bsf	intcon,6,c	;volatile
  2844  015B92  0012               	return		;funcret
  2845  015B94                     __end_of_board_initialization:
  2846                           	opt stack 0
  2847                           tblptru	equ	0xFF8
  2848                           tblptrh	equ	0xFF7
  2849                           tblptrl	equ	0xFF6
  2850                           tablat	equ	0xFF5
  2851                           intcon	equ	0xFF2
  2852                           postinc0	equ	0xFEE
  2853                           wreg	equ	0xFE8
  2854                           status	equ	0xFD8
  2855                           
  2856 ;; *************** function _CANInitialize *****************
  2857 ;; Defined at:
  2858 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  propSeg         1    wreg     unsigned char 
  2861 ;;  phaseSeg1       1   28[BANK0 ] unsigned char 
  2862 ;;  phaseSeg2       1   29[BANK0 ] unsigned char 
  2863 ;;  SJW             1   30[BANK0 ] unsigned char 
  2864 ;;  BRP             1   31[BANK0 ] unsigned char 
  2865 ;;  flags           1   32[BANK0 ] enum E16887
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;  propSeg         1   37[BANK0 ] unsigned char 
  2868 ;;  FilterConfig    1   39[BANK0 ] unsigned char 
  2869 ;;  FilterConfig    1   38[BANK0 ] unsigned char 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;		None               void
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2879 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2880 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2881 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2882 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2883 ;;Total ram usage:       12 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    4
  2886 ;; This function calls:
  2887 ;;		_CANOperationMode
  2888 ;;		_CANSetFilter
  2889 ;;		_CANSetMask
  2890 ;; This function is called by:
  2891 ;;		_board_initialization
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           	psect	text2
  2896  014866                     __ptext2:
  2897                           	opt stack 0
  2898  014866                     _CANInitialize:
  2899                           	opt stack 25
  2900                           
  2901                           ;incstack = 0
  2902                           ;CANInitialize@propSeg stored from wreg
  2903  014866  0100               	movlb	0	; () banked
  2904  014868  6F85               	movwf	CANInitialize@propSeg& (0+255),b
  2905                           
  2906                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  2907                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  2908                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2909  01486A  0E80               	movlw	128
  2910  01486C  EC29  F0B1         	call	_CANOperationMode
  2911                           
  2912                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  2913  014870  0E00               	movlw	0
  2914  014872  6E70               	movwf	3952,c	;volatile
  2915                           
  2916                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  2917  014874  0E00               	movlw	0
  2918  014876  6E71               	movwf	3953,c	;volatile
  2919                           
  2920                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  2921  014878  0E00               	movlw	0
  2922  01487A  6E72               	movwf	3954,c	;volatile
  2923                           
  2924                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  2925  01487C  0100               	movlb	0	; () banked
  2926  01487E  417E               	rrncf	CANInitialize@SJW& (0+255),w,b
  2927  014880  42E8               	rrncf	wreg,f,c
  2928  014882  0BC0               	andlw	192
  2929  014884  0100               	movlb	0	; () banked
  2930  014886  6F7E               	movwf	CANInitialize@SJW& (0+255),b
  2931                           
  2932                           ; BSR set to: 0
  2933                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  2934  014888  0100               	movlb	0	; () banked
  2935  01488A  517E               	movf	CANInitialize@SJW& (0+255),w,b
  2936  01488C  1270               	iorwf	3952,f,c	;volatile
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  2940  01488E  0100               	movlb	0	; () banked
  2941  014890  517F               	movf	CANInitialize@BRP& (0+255),w,b
  2942  014892  1270               	iorwf	3952,f,c	;volatile
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  2946  014894  0100               	movlb	0	; () banked
  2947  014896  5185               	movf	CANInitialize@propSeg& (0+255),w,b
  2948  014898  1271               	iorwf	3953,f,c	;volatile
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2952  01489A  0100               	movlb	0	; () banked
  2953  01489C  397C               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2954  01489E  42E8               	rrncf	wreg,f,c
  2955  0148A0  0BF8               	andlw	248
  2956  0148A2  0100               	movlb	0	; () banked
  2957  0148A4  6F7C               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2961  0148A6  0100               	movlb	0	; () banked
  2962  0148A8  517C               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2963  0148AA  1271               	iorwf	3953,f,c	;volatile
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2967  0148AC  0100               	movlb	0	; () banked
  2968  0148AE  A580               	btfss	CANInitialize@flags& (0+255),2,b
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  2972  0148B0  8C71               	bsf	3953,6,c	;volatile
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2976  0148B2  0100               	movlb	0	; () banked
  2977  0148B4  B180               	btfsc	CANInitialize@flags& (0+255),0,b
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2981  0148B6  8E71               	bsf	3953,7,c	;volatile
  2982                           
  2983                           ; BSR set to: 0
  2984                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2985                           
  2986                           ; BSR set to: 0
  2987  0148B8  0100               	movlb	0	; () banked
  2988  0148BA  517D               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2989  0148BC  1272               	iorwf	3954,f,c	;volatile
  2990                           
  2991                           ; BSR set to: 0
  2992                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2993  0148BE  0100               	movlb	0	; () banked
  2994  0148C0  B380               	btfsc	CANInitialize@flags& (0+255),1,b
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2998  0148C2  8C72               	bsf	3954,6,c	;volatile
  2999                           
  3000                           ; BSR set to: 0
  3001                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3002                           
  3003                           ; BSR set to: 0
  3004  0148C4  0100               	movlb	0	; () banked
  3005  0148C6  5180               	movf	CANInitialize@flags& (0+255),w,b
  3006  0148C8  0B60               	andlw	96
  3007  0148CA  6E60               	movwf	3936,c	;volatile
  3008                           
  3009                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3010  0148CC  0100               	movlb	0	; () banked
  3011  0148CE  5180               	movf	CANInitialize@flags& (0+255),w,b
  3012  0148D0  0B10               	andlw	16
  3013  0148D2  0AFF               	xorlw	255
  3014  0148D4  B4D8               	btfsc	status,2,c
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3018  0148D6  8460               	bsf	3936,2,c	;volatile
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3022  0148D8  CF60 FF50          	movff	3936,3920	;volatile
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3026  0148DC  0E00               	movlw	0
  3027  0148DE  0100               	movlb	0	; () banked
  3028  0148E0  6F6E               	movwf	CANSetMask@mask& (0+255),b
  3029  0148E2  0E00               	movlw	0
  3030  0148E4  6F6F               	movwf	(CANSetMask@mask+1)& (0+255),b
  3031  0148E6  0E00               	movlw	0
  3032  0148E8  6F70               	movwf	(CANSetMask@mask+2)& (0+255),b
  3033  0148EA  0E00               	movlw	0
  3034  0148EC  6F71               	movwf	(CANSetMask@mask+3)& (0+255),b
  3035  0148EE  0EF7               	movlw	247
  3036  0148F0  0100               	movlb	0	; () banked
  3037  0148F2  6F72               	movwf	CANSetMask@type& (0+255),b
  3038  0148F4  0E01               	movlw	1
  3039  0148F6  EC02  F0A0         	call	_CANSetMask
  3040                           
  3041                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3042  0148FA  0E00               	movlw	0
  3043  0148FC  0100               	movlb	0	; () banked
  3044  0148FE  6F6E               	movwf	CANSetMask@mask& (0+255),b
  3045  014900  0E00               	movlw	0
  3046  014902  6F6F               	movwf	(CANSetMask@mask+1)& (0+255),b
  3047  014904  0E00               	movlw	0
  3048  014906  6F70               	movwf	(CANSetMask@mask+2)& (0+255),b
  3049  014908  0E00               	movlw	0
  3050  01490A  6F71               	movwf	(CANSetMask@mask+3)& (0+255),b
  3051  01490C  0EF7               	movlw	247
  3052  01490E  0100               	movlb	0	; () banked
  3053  014910  6F72               	movwf	CANSetMask@type& (0+255),b
  3054  014912  0E02               	movlw	2
  3055  014914  EC02  F0A0         	call	_CANSetMask
  3056                           
  3057                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3058  014918  D00F               	goto	l6044
  3059  01491A                     l6038:
  3060                           
  3061                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3062  01491A  0EF7               	movlw	247
  3063  01491C  0100               	movlb	0	; () banked
  3064  01491E  6F86               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3065  014920  D007               	goto	l6040
  3066  014922                     l370:
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3070  014922  0100               	movlb	0	; () banked
  3071  014924  6986               	setf	CANInitialize@FilterConfig1& (0+255),b
  3072                           
  3073                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3074  014926  0100               	movlb	0	; () banked
  3075  014928  6987               	setf	CANInitialize@FilterConfig2& (0+255),b
  3076                           
  3077                           ;inc\CANlib.h: 273: break;
  3078  01492A  D028               	goto	l6046
  3079  01492C                     l371:
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3083  01492C  0100               	movlb	0	; () banked
  3084  01492E  6986               	setf	CANInitialize@FilterConfig1& (0+255),b
  3085  014930                     l6040:
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3089  014930  0EF7               	movlw	247
  3090  014932  0100               	movlb	0	; () banked
  3091  014934  6F87               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;inc\CANlib.h: 278: }
  3095                           
  3096                           ;inc\CANlib.h: 277: break;
  3097  014936  D022               	goto	l6046
  3098  014938                     l6044:
  3099  014938  0E9F               	movlw	159
  3100  01493A  0100               	movlb	0	; () banked
  3101  01493C  6F81               	movwf	??_CANInitialize& (0+255),b
  3102  01493E  0EFF               	movlw	255
  3103  014940  0100               	movlb	0	; () banked
  3104  014942  6F82               	movwf	(??_CANInitialize+1)& (0+255),b
  3105  014944  0100               	movlb	0	; () banked
  3106  014946  5180               	movf	CANInitialize@flags& (0+255),w,b
  3107  014948  0B60               	andlw	96
  3108  01494A  0100               	movlb	0	; () banked
  3109  01494C  6F83               	movwf	(??_CANInitialize+2)& (0+255),b
  3110  01494E  6B84               	clrf	(??_CANInitialize+3)& (0+255),b
  3111  014950  0100               	movlb	0	; () banked
  3112  014952  5181               	movf	??_CANInitialize& (0+255),w,b
  3113  014954  0100               	movlb	0	; () banked
  3114  014956  1383               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3115  014958  0100               	movlb	0	; () banked
  3116  01495A  5182               	movf	(??_CANInitialize+1)& (0+255),w,b
  3117  01495C  0100               	movlb	0	; () banked
  3118  01495E  1384               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3119                           
  3120                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3121                           ; Switch size 1, requested type "space"
  3122                           ; Number of cases is 1, Range of values is 0 to 0
  3123                           ; switch strategies available:
  3124                           ; Name         Instructions Cycles
  3125                           ; simple_byte            4     3 (average)
  3126                           ;	Chosen strategy is simple_byte
  3127  014960  0100               	movlb	0	; () banked
  3128  014962  5184               	movf	(??_CANInitialize+3)& (0+255),w,b
  3129  014964  0A00               	xorlw	0	; case 0
  3130  014966  A4D8               	btfss	status,2,c
  3131  014968  D7E1               	goto	l371
  3132                           
  3133                           ; BSR set to: 0
  3134                           ; Switch size 1, requested type "space"
  3135                           ; Number of cases is 2, Range of values is 191 to 223
  3136                           ; switch strategies available:
  3137                           ; Name         Instructions Cycles
  3138                           ; simple_byte            7     4 (average)
  3139                           ;	Chosen strategy is simple_byte
  3140  01496A  0100               	movlb	0	; () banked
  3141  01496C  5183               	movf	(??_CANInitialize+2)& (0+255),w,b
  3142  01496E  0ABF               	xorlw	191	; case 191
  3143  014970  B4D8               	btfsc	status,2,c
  3144  014972  D7D7               	goto	l370
  3145  014974  0A60               	xorlw	96	; case 223
  3146  014976  B4D8               	btfsc	status,2,c
  3147  014978  D7D0               	goto	l6038
  3148  01497A  D7D8               	goto	l371
  3149  01497C                     l6046:
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3153  01497C  0E00               	movlw	0
  3154  01497E  0100               	movlb	0	; () banked
  3155  014980  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  3156  014982  0E00               	movlw	0
  3157  014984  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3158  014986  0E00               	movlw	0
  3159  014988  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3160  01498A  0E00               	movlw	0
  3161  01498C  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3162  01498E  C086  F072         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3163  014992  0E00               	movlw	0
  3164  014994  EC00  F080         	call	_CANSetFilter
  3165                           
  3166                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3167  014998  0E00               	movlw	0
  3168  01499A  0100               	movlb	0	; () banked
  3169  01499C  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  3170  01499E  0E00               	movlw	0
  3171  0149A0  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3172  0149A2  0E00               	movlw	0
  3173  0149A4  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3174  0149A6  0E00               	movlw	0
  3175  0149A8  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3176  0149AA  C086  F072         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3177  0149AE  0E01               	movlw	1
  3178  0149B0  EC00  F080         	call	_CANSetFilter
  3179                           
  3180                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3181  0149B4  0E00               	movlw	0
  3182  0149B6  0100               	movlb	0	; () banked
  3183  0149B8  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  3184  0149BA  0E00               	movlw	0
  3185  0149BC  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3186  0149BE  0E00               	movlw	0
  3187  0149C0  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3188  0149C2  0E00               	movlw	0
  3189  0149C4  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3190  0149C6  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3191  0149CA  0E02               	movlw	2
  3192  0149CC  EC00  F080         	call	_CANSetFilter
  3193                           
  3194                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3195  0149D0  0E00               	movlw	0
  3196  0149D2  0100               	movlb	0	; () banked
  3197  0149D4  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  3198  0149D6  0E00               	movlw	0
  3199  0149D8  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3200  0149DA  0E00               	movlw	0
  3201  0149DC  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3202  0149DE  0E00               	movlw	0
  3203  0149E0  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3204  0149E2  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3205  0149E6  0E03               	movlw	3
  3206  0149E8  EC00  F080         	call	_CANSetFilter
  3207                           
  3208                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3209  0149EC  0E00               	movlw	0
  3210  0149EE  0100               	movlb	0	; () banked
  3211  0149F0  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  3212  0149F2  0E00               	movlw	0
  3213  0149F4  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3214  0149F6  0E00               	movlw	0
  3215  0149F8  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3216  0149FA  0E00               	movlw	0
  3217  0149FC  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3218  0149FE  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3219  014A02  0E04               	movlw	4
  3220  014A04  EC00  F080         	call	_CANSetFilter
  3221                           
  3222                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3223  014A08  0E00               	movlw	0
  3224  014A0A  0100               	movlb	0	; () banked
  3225  014A0C  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  3226  014A0E  0E00               	movlw	0
  3227  014A10  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3228  014A12  0E00               	movlw	0
  3229  014A14  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3230  014A16  0E00               	movlw	0
  3231  014A18  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3232  014A1A  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3233  014A1E  0E05               	movlw	5
  3234  014A20  EC00  F080         	call	_CANSetFilter
  3235                           
  3236                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3237  014A24  0E00               	movlw	0
  3238  014A26  EC29  F0B1         	call	_CANOperationMode
  3239  014A2A  0012               	return		;funcret
  3240  014A2C                     __end_of_CANInitialize:
  3241                           	opt stack 0
  3242                           tblptru	equ	0xFF8
  3243                           tblptrh	equ	0xFF7
  3244                           tblptrl	equ	0xFF6
  3245                           tablat	equ	0xFF5
  3246                           intcon	equ	0xFF2
  3247                           postinc0	equ	0xFEE
  3248                           wreg	equ	0xFE8
  3249                           status	equ	0xFD8
  3250                           
  3251 ;; *************** function _CANSetMask *****************
  3252 ;; Defined at:
  3253 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  numBuffer       1    wreg     enum E16921
  3256 ;;  mask            4   14[BANK0 ] unsigned long 
  3257 ;;  type            1   18[BANK0 ] enum E16887
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;  numBuffer       1   23[BANK0 ] enum E16921
  3260 ;;  tamp            4   24[BANK0 ] unsigned long 
  3261 ;; Return value:  Size  Location     Type
  3262 ;;		None               void
  3263 ;; Registers used:
  3264 ;;		wreg, status,2, status,0
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3270 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3271 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3272 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3273 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3274 ;;Total ram usage:       14 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:    3
  3277 ;; This function calls:
  3278 ;;		Nothing
  3279 ;; This function is called by:
  3280 ;;		_CANInitialize
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           	psect	text3
  3285  014004                     __ptext3:
  3286                           	opt stack 0
  3287  014004                     _CANSetMask:
  3288                           	opt stack 25
  3289                           
  3290                           ;incstack = 0
  3291                           ;CANSetMask@numBuffer stored from wreg
  3292  014004  0100               	movlb	0	; () banked
  3293  014006  6F77               	movwf	CANSetMask@numBuffer& (0+255),b
  3294                           
  3295                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3296  014008  0100               	movlb	0	; () banked
  3297  01400A  0577               	decf	CANSetMask@numBuffer& (0+255),w,b
  3298  01400C  A4D8               	btfss	status,2,c
  3299  01400E  D056               	goto	l5214
  3300                           
  3301                           ; BSR set to: 0
  3302  014010  0100               	movlb	0	; () banked
  3303  014012  2972               	incf	CANSetMask@type& (0+255),w,b
  3304  014014  A4D8               	btfss	status,2,c
  3305  014016  D052               	goto	l5214
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;inc\CANlib.h: 644: {
  3309                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3310  014018  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  3311  01401C  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3312  014020  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3313  014024  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3314  014028  0E04               	movlw	4
  3315  01402A  D006               	goto	u5910
  3316  01402C                     u5915:
  3317  01402C  0100               	movlb	0	; () banked
  3318  01402E  90D8               	bcf	status,0,c
  3319  014030  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3320  014032  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3321  014034  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3322  014036  3373               	rrcf	??_CANSetMask& (0+255),f,b
  3323  014038                     u5910:
  3324  014038  2EE8               	decfsz	wreg,f,c
  3325  01403A  D7F8               	goto	u5915
  3326  01403C  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3327  014040  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3328  014044  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3329  014048  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3333  01404C  0100               	movlb	0	; () banked
  3334  01404E  5178               	movf	CANSetMask@tamp& (0+255),w,b
  3335  014050  0100               	movlb	0	; () banked
  3336  014052  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3337  014054  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3338  014056  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3339  014058  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3343  01405A  C078  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3347  01405E  0E07               	movlw	7
  3348  014060  0100               	movlb	0	; () banked
  3349  014062  156E               	andwf	CANSetMask@mask& (0+255),w,b
  3350  014064  0100               	movlb	0	; () banked
  3351  014066  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3352  014068  0E00               	movlw	0
  3353  01406A  0100               	movlb	0	; () banked
  3354  01406C  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3355  01406E  0100               	movlb	0	; () banked
  3356  014070  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3357  014072  0E00               	movlw	0
  3358  014074  0100               	movlb	0	; () banked
  3359  014076  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3360  014078  0100               	movlb	0	; () banked
  3361  01407A  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3362  01407C  0E00               	movlw	0
  3363  01407E  0100               	movlb	0	; () banked
  3364  014080  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3365  014082  0100               	movlb	0	; () banked
  3366  014084  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3370  014086  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  3371  01408A  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3372  01408E  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3373  014092  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3374  014096  0E05               	movlw	5
  3375  014098                     u5925:
  3376  014098  90D8               	bcf	status,0,c
  3377  01409A  0100               	movlb	0	; () banked
  3378  01409C  3773               	rlcf	??_CANSetMask& (0+255),f,b
  3379  01409E  3774               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3380  0140A0  3775               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3381  0140A2  3776               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3382  0140A4  2EE8               	decfsz	wreg,f,c
  3383  0140A6  D7F8               	goto	u5925
  3384  0140A8  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3385  0140AC  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3386  0140B0  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3387  0140B4  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3391  0140B8  C078  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3392  0140BC                     l5214:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;inc\CANlib.h: 652: }
  3396                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3397  0140BC  0E02               	movlw	2
  3398  0140BE  0100               	movlb	0	; () banked
  3399  0140C0  1977               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3400  0140C2  A4D8               	btfss	status,2,c
  3401  0140C4  D056               	goto	l5230
  3402                           
  3403                           ; BSR set to: 0
  3404  0140C6  0100               	movlb	0	; () banked
  3405  0140C8  2972               	incf	CANSetMask@type& (0+255),w,b
  3406  0140CA  A4D8               	btfss	status,2,c
  3407  0140CC  D052               	goto	l5230
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;inc\CANlib.h: 655: {
  3411                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3412  0140CE  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  3413  0140D2  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3414  0140D6  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3415  0140DA  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3416  0140DE  0E04               	movlw	4
  3417  0140E0  D006               	goto	u5950
  3418  0140E2                     u5955:
  3419  0140E2  0100               	movlb	0	; () banked
  3420  0140E4  90D8               	bcf	status,0,c
  3421  0140E6  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3422  0140E8  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3423  0140EA  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3424  0140EC  3373               	rrcf	??_CANSetMask& (0+255),f,b
  3425  0140EE                     u5950:
  3426  0140EE  2EE8               	decfsz	wreg,f,c
  3427  0140F0  D7F8               	goto	u5955
  3428  0140F2  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3429  0140F6  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3430  0140FA  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3431  0140FE  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3432                           
  3433                           ; BSR set to: 0
  3434                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3435  014102  0100               	movlb	0	; () banked
  3436  014104  5178               	movf	CANSetMask@tamp& (0+255),w,b
  3437  014106  0100               	movlb	0	; () banked
  3438  014108  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3439  01410A  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3440  01410C  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3441  01410E  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3445  014110  C078  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3449  014114  0E07               	movlw	7
  3450  014116  0100               	movlb	0	; () banked
  3451  014118  156E               	andwf	CANSetMask@mask& (0+255),w,b
  3452  01411A  0100               	movlb	0	; () banked
  3453  01411C  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3454  01411E  0E00               	movlw	0
  3455  014120  0100               	movlb	0	; () banked
  3456  014122  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3457  014124  0100               	movlb	0	; () banked
  3458  014126  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3459  014128  0E00               	movlw	0
  3460  01412A  0100               	movlb	0	; () banked
  3461  01412C  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3462  01412E  0100               	movlb	0	; () banked
  3463  014130  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3464  014132  0E00               	movlw	0
  3465  014134  0100               	movlb	0	; () banked
  3466  014136  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3467  014138  0100               	movlb	0	; () banked
  3468  01413A  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3472  01413C  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  3473  014140  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3474  014144  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3475  014148  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3476  01414C  0E05               	movlw	5
  3477  01414E                     u5965:
  3478  01414E  90D8               	bcf	status,0,c
  3479  014150  0100               	movlb	0	; () banked
  3480  014152  3773               	rlcf	??_CANSetMask& (0+255),f,b
  3481  014154  3774               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3482  014156  3775               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3483  014158  3776               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3484  01415A  2EE8               	decfsz	wreg,f,c
  3485  01415C  D7F8               	goto	u5965
  3486  01415E  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3487  014162  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3488  014166  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3489  01416A  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3490                           
  3491                           ; BSR set to: 0
  3492                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3493  01416E  C078  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3494  014172                     l5230:
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;inc\CANlib.h: 663: }
  3498                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3499  014172  0100               	movlb	0	; () banked
  3500  014174  0577               	decf	CANSetMask@numBuffer& (0+255),w,b
  3501  014176  A4D8               	btfss	status,2,c
  3502  014178  D087               	goto	l5262
  3503                           
  3504                           ; BSR set to: 0
  3505  01417A  0EF7               	movlw	247
  3506  01417C  0100               	movlb	0	; () banked
  3507  01417E  1972               	xorwf	CANSetMask@type& (0+255),w,b
  3508  014180  A4D8               	btfss	status,2,c
  3509  014182  D082               	goto	l5262
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;inc\CANlib.h: 666: {
  3513                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3514  014184  0100               	movlb	0	; () banked
  3515  014186  516E               	movf	CANSetMask@mask& (0+255),w,b
  3516  014188  0100               	movlb	0	; () banked
  3517  01418A  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3518  01418C  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3519  01418E  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3520  014190  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3524  014192  C078  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3528  014196  0E00               	movlw	0
  3529  014198  0100               	movlb	0	; () banked
  3530  01419A  156E               	andwf	CANSetMask@mask& (0+255),w,b
  3531  01419C  0100               	movlb	0	; () banked
  3532  01419E  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3533  0141A0  0EFF               	movlw	255
  3534  0141A2  0100               	movlb	0	; () banked
  3535  0141A4  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3536  0141A6  0100               	movlb	0	; () banked
  3537  0141A8  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3538  0141AA  0E00               	movlw	0
  3539  0141AC  0100               	movlb	0	; () banked
  3540  0141AE  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3541  0141B0  0100               	movlb	0	; () banked
  3542  0141B2  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3543  0141B4  0E00               	movlw	0
  3544  0141B6  0100               	movlb	0	; () banked
  3545  0141B8  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3546  0141BA  0100               	movlb	0	; () banked
  3547  0141BC  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3551  0141BE  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  3552  0141C2  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3553  0141C6  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3554  0141CA  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3555  0141CE  C074  F073         	movff	??_CANSetMask+1,??_CANSetMask
  3556  0141D2  C075  F074         	movff	??_CANSetMask+2,??_CANSetMask+1
  3557  0141D6  C076  F075         	movff	??_CANSetMask+3,??_CANSetMask+2
  3558  0141DA  0100               	movlb	0	; () banked
  3559  0141DC  6B76               	clrf	(??_CANSetMask+3)& (0+255),b
  3560  0141DE  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3561  0141E2  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3562  0141E6  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3563  0141EA  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3567  0141EE  C078  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3571  0141F2  0100               	movlb	0	; () banked
  3572  0141F4  A170               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3573  0141F6  D003               	goto	l444
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3577  0141F8  010F               	movlb	15	; () banked
  3578  0141FA  8119               	bsf	25,0,b	;volatile
  3579  0141FC  D002               	goto	l445
  3580  0141FE                     l444:
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;inc\CANlib.h: 676: else
  3584                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3585  0141FE  010F               	movlb	15	; () banked
  3586  014200  9119               	bcf	25,0,b	;volatile
  3587  014202                     l445:
  3588                           
  3589                           ; BSR set to: 15
  3590                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3591  014202  0100               	movlb	0	; () banked
  3592  014204  A370               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3593  014206  D003               	goto	l446
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3597  014208  010F               	movlb	15	; () banked
  3598  01420A  8319               	bsf	25,1,b	;volatile
  3599  01420C  D002               	goto	l447
  3600  01420E                     l446:
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;inc\CANlib.h: 681: else
  3604                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3605  01420E  010F               	movlb	15	; () banked
  3606  014210  9319               	bcf	25,1,b	;volatile
  3607  014212                     l447:
  3608                           
  3609                           ; BSR set to: 15
  3610                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3611  014212  0100               	movlb	0	; () banked
  3612  014214  A570               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3613  014216  D003               	goto	l448
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3617  014218  010F               	movlb	15	; () banked
  3618  01421A  8B19               	bsf	25,5,b	;volatile
  3619  01421C  D002               	goto	l449
  3620  01421E                     l448:
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;inc\CANlib.h: 686: else
  3624                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3625  01421E  010F               	movlb	15	; () banked
  3626  014220  9B19               	bcf	25,5,b	;volatile
  3627  014222                     l449:
  3628                           
  3629                           ; BSR set to: 15
  3630                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3631  014222  0100               	movlb	0	; () banked
  3632  014224  A770               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3633  014226  D003               	goto	l450
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3637  014228  010F               	movlb	15	; () banked
  3638  01422A  8D19               	bsf	25,6,b	;volatile
  3639  01422C  D002               	goto	l451
  3640  01422E                     l450:
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;inc\CANlib.h: 691: else
  3644                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3645  01422E  010F               	movlb	15	; () banked
  3646  014230  9D19               	bcf	25,6,b	;volatile
  3647  014232                     l451:
  3648                           
  3649                           ; BSR set to: 15
  3650                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3651  014232  0100               	movlb	0	; () banked
  3652  014234  A970               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3653  014236  D003               	goto	l452
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3657  014238  010F               	movlb	15	; () banked
  3658  01423A  8F19               	bsf	25,7,b	;volatile
  3659  01423C  D002               	goto	l5256
  3660  01423E                     l452:
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;inc\CANlib.h: 696: else
  3664                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3665  01423E  010F               	movlb	15	; () banked
  3666  014240  9F19               	bcf	25,7,b	;volatile
  3667  014242                     l5256:
  3668                           
  3669                           ; BSR set to: 15
  3670                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  3671  014242  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  3672  014246  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3673  01424A  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3674  01424E  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3675  014252  0E16               	movlw	22
  3676  014254  D006               	goto	u6040
  3677  014256                     u6045:
  3678  014256  0100               	movlb	0	; () banked
  3679  014258  90D8               	bcf	status,0,c
  3680  01425A  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3681  01425C  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3682  01425E  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3683  014260  3373               	rrcf	??_CANSetMask& (0+255),f,b
  3684  014262                     u6040:
  3685  014262  2EE8               	decfsz	wreg,f,c
  3686  014264  D7F8               	goto	u6045
  3687  014266  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3688  01426A  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3689  01426E  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3690  014272  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3691                           
  3692                           ; BSR set to: 0
  3693                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3694  014276  0100               	movlb	0	; () banked
  3695  014278  5178               	movf	CANSetMask@tamp& (0+255),w,b
  3696  01427A  0100               	movlb	0	; () banked
  3697  01427C  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3698  01427E  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3699  014280  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3700  014282  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3704  014284  C078  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3705  014288                     l5262:
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;inc\CANlib.h: 702: }
  3709                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3710  014288  0E02               	movlw	2
  3711  01428A  0100               	movlb	0	; () banked
  3712  01428C  1977               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3713  01428E  A4D8               	btfss	status,2,c
  3714  014290  0012               	return	
  3715                           
  3716                           ; BSR set to: 0
  3717  014292  0EF7               	movlw	247
  3718  014294  0100               	movlb	0	; () banked
  3719  014296  1972               	xorwf	CANSetMask@type& (0+255),w,b
  3720  014298  A4D8               	btfss	status,2,c
  3721  01429A  0012               	return	
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;inc\CANlib.h: 705: {
  3725                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  3726  01429C  0100               	movlb	0	; () banked
  3727  01429E  516E               	movf	CANSetMask@mask& (0+255),w,b
  3728  0142A0  0100               	movlb	0	; () banked
  3729  0142A2  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3730  0142A4  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3731  0142A6  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3732  0142A8  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3736  0142AA  C078  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3740  0142AE  0E00               	movlw	0
  3741  0142B0  0100               	movlb	0	; () banked
  3742  0142B2  156E               	andwf	CANSetMask@mask& (0+255),w,b
  3743  0142B4  0100               	movlb	0	; () banked
  3744  0142B6  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3745  0142B8  0EFF               	movlw	255
  3746  0142BA  0100               	movlb	0	; () banked
  3747  0142BC  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3748  0142BE  0100               	movlb	0	; () banked
  3749  0142C0  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3750  0142C2  0E00               	movlw	0
  3751  0142C4  0100               	movlb	0	; () banked
  3752  0142C6  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3753  0142C8  0100               	movlb	0	; () banked
  3754  0142CA  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3755  0142CC  0E00               	movlw	0
  3756  0142CE  0100               	movlb	0	; () banked
  3757  0142D0  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3758  0142D2  0100               	movlb	0	; () banked
  3759  0142D4  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  3763  0142D6  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  3764  0142DA  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3765  0142DE  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3766  0142E2  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3767  0142E6  C074  F073         	movff	??_CANSetMask+1,??_CANSetMask
  3768  0142EA  C075  F074         	movff	??_CANSetMask+2,??_CANSetMask+1
  3769  0142EE  C076  F075         	movff	??_CANSetMask+3,??_CANSetMask+2
  3770  0142F2  0100               	movlb	0	; () banked
  3771  0142F4  6B76               	clrf	(??_CANSetMask+3)& (0+255),b
  3772  0142F6  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3773  0142FA  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3774  0142FE  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3775  014302  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3779  014306  C078  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  3783  01430A  0100               	movlb	0	; () banked
  3784  01430C  A170               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3785  01430E  D003               	goto	l455
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3789  014310  010F               	movlb	15	; () banked
  3790  014312  811D               	bsf	29,0,b	;volatile
  3791  014314  D002               	goto	l456
  3792  014316                     l455:
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;inc\CANlib.h: 715: else
  3796                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3797  014316  010F               	movlb	15	; () banked
  3798  014318  911D               	bcf	29,0,b	;volatile
  3799  01431A                     l456:
  3800                           
  3801                           ; BSR set to: 15
  3802                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  3803  01431A  0100               	movlb	0	; () banked
  3804  01431C  A370               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3805  01431E  D003               	goto	l457
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3809  014320  010F               	movlb	15	; () banked
  3810  014322  831D               	bsf	29,1,b	;volatile
  3811  014324  D002               	goto	l458
  3812  014326                     l457:
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;inc\CANlib.h: 720: else
  3816                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3817  014326  010F               	movlb	15	; () banked
  3818  014328  931D               	bcf	29,1,b	;volatile
  3819  01432A                     l458:
  3820                           
  3821                           ; BSR set to: 15
  3822                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  3823  01432A  0100               	movlb	0	; () banked
  3824  01432C  A570               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3825  01432E  D003               	goto	l459
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3829  014330  010F               	movlb	15	; () banked
  3830  014332  8B1D               	bsf	29,5,b	;volatile
  3831  014334  D002               	goto	l460
  3832  014336                     l459:
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;inc\CANlib.h: 725: else
  3836                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3837  014336  010F               	movlb	15	; () banked
  3838  014338  9B1D               	bcf	29,5,b	;volatile
  3839  01433A                     l460:
  3840                           
  3841                           ; BSR set to: 15
  3842                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  3843  01433A  0100               	movlb	0	; () banked
  3844  01433C  A770               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3845  01433E  D003               	goto	l461
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3849  014340  010F               	movlb	15	; () banked
  3850  014342  8D1D               	bsf	29,6,b	;volatile
  3851  014344  D002               	goto	l462
  3852  014346                     l461:
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;inc\CANlib.h: 730: else
  3856                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3857  014346  010F               	movlb	15	; () banked
  3858  014348  9D1D               	bcf	29,6,b	;volatile
  3859  01434A                     l462:
  3860                           
  3861                           ; BSR set to: 15
  3862                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  3863  01434A  0100               	movlb	0	; () banked
  3864  01434C  A970               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3865  01434E  D003               	goto	l463
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3869  014350  010F               	movlb	15	; () banked
  3870  014352  8F1D               	bsf	29,7,b	;volatile
  3871  014354  D002               	goto	l5288
  3872  014356                     l463:
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;inc\CANlib.h: 735: else
  3876                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3877  014356  010F               	movlb	15	; () banked
  3878  014358  9F1D               	bcf	29,7,b	;volatile
  3879  01435A                     l5288:
  3880                           
  3881                           ; BSR set to: 15
  3882                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  3883  01435A  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  3884  01435E  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3885  014362  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3886  014366  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3887  01436A  0E16               	movlw	22
  3888  01436C  D006               	goto	u6120
  3889  01436E                     u6125:
  3890  01436E  0100               	movlb	0	; () banked
  3891  014370  90D8               	bcf	status,0,c
  3892  014372  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3893  014374  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3894  014376  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3895  014378  3373               	rrcf	??_CANSetMask& (0+255),f,b
  3896  01437A                     u6120:
  3897  01437A  2EE8               	decfsz	wreg,f,c
  3898  01437C  D7F8               	goto	u6125
  3899  01437E  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  3900  014382  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3901  014386  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3902  01438A  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  3906  01438E  0100               	movlb	0	; () banked
  3907  014390  5178               	movf	CANSetMask@tamp& (0+255),w,b
  3908  014392  0100               	movlb	0	; () banked
  3909  014394  6F78               	movwf	CANSetMask@tamp& (0+255),b
  3910  014396  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3911  014398  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3912  01439A  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3916  01439C  C078  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3917  0143A0  0012               	return	
  3918  0143A2                     __end_of_CANSetMask:
  3919                           	opt stack 0
  3920                           tblptru	equ	0xFF8
  3921                           tblptrh	equ	0xFF7
  3922                           tblptrl	equ	0xFF6
  3923                           tablat	equ	0xFF5
  3924                           intcon	equ	0xFF2
  3925                           postinc0	equ	0xFEE
  3926                           wreg	equ	0xFE8
  3927                           status	equ	0xFD8
  3928                           
  3929 ;; *************** function _CANSetFilter *****************
  3930 ;; Defined at:
  3931 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;  numBuffer       1    wreg     enum E16924
  3934 ;;  filter          4   14[BANK0 ] unsigned long 
  3935 ;;  type            1   18[BANK0 ] enum E16887
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;  numBuffer       1   23[BANK0 ] enum E16924
  3938 ;;  tamp            4   24[BANK0 ] unsigned long 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;		None               void
  3941 ;; Registers used:
  3942 ;;		wreg, status,2, status,0
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3948 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3949 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3950 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3951 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3952 ;;Total ram usage:       14 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    3
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_CANInitialize
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text4
  3963  010000                     __ptext4:
  3964                           	opt stack 0
  3965  010000                     _CANSetFilter:
  3966                           	opt stack 25
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;incstack = 0
  3970                           ;CANSetFilter@numBuffer stored from wreg
  3971  010000  0100               	movlb	0	; () banked
  3972  010002  6F77               	movwf	CANSetFilter@numBuffer& (0+255),b
  3973                           
  3974                           ;inc\CANlib.h: 750: unsigned long tamp;
  3975                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3976  010004  0100               	movlb	0	; () banked
  3977  010006  5177               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3978  010008  0100               	movlb	0	; () banked
  3979  01000A  A4D8               	btfss	status,2,c
  3980  01000C  D058               	goto	l5312
  3981                           
  3982                           ; BSR set to: 0
  3983  01000E  0100               	movlb	0	; () banked
  3984  010010  2972               	incf	CANSetFilter@type& (0+255),w,b
  3985  010012  A4D8               	btfss	status,2,c
  3986  010014  D054               	goto	l5312
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;inc\CANlib.h: 753: {
  3990                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3991  010016  010F               	movlb	15	; () banked
  3992  010018  9701               	bcf	1,3,b	;volatile
  3993                           
  3994                           ; BSR set to: 15
  3995                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  3996  01001A  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3997  01001E  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3998  010022  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3999  010026  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4000  01002A  0E04               	movlw	4
  4001  01002C  D006               	goto	u6150
  4002  01002E                     u6155:
  4003  01002E  0100               	movlb	0	; () banked
  4004  010030  90D8               	bcf	status,0,c
  4005  010032  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4006  010034  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4007  010036  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4008  010038  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4009  01003A                     u6150:
  4010  01003A  2EE8               	decfsz	wreg,f,c
  4011  01003C  D7F8               	goto	u6155
  4012  01003E  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4013  010042  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4014  010046  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4015  01004A  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4019  01004E  0100               	movlb	0	; () banked
  4020  010050  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4021  010052  0100               	movlb	0	; () banked
  4022  010054  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4023  010056  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4024  010058  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4025  01005A  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4029  01005C  C078  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4033  010060  0E07               	movlw	7
  4034  010062  0100               	movlb	0	; () banked
  4035  010064  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4036  010066  0100               	movlb	0	; () banked
  4037  010068  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4038  01006A  0E00               	movlw	0
  4039  01006C  0100               	movlb	0	; () banked
  4040  01006E  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4041  010070  0100               	movlb	0	; () banked
  4042  010072  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4043  010074  0E00               	movlw	0
  4044  010076  0100               	movlb	0	; () banked
  4045  010078  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4046  01007A  0100               	movlb	0	; () banked
  4047  01007C  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4048  01007E  0E00               	movlw	0
  4049  010080  0100               	movlb	0	; () banked
  4050  010082  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4051  010084  0100               	movlb	0	; () banked
  4052  010086  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4056  010088  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4057  01008C  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4058  010090  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4059  010094  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4060  010098  0E05               	movlw	5
  4061  01009A                     u6165:
  4062  01009A  90D8               	bcf	status,0,c
  4063  01009C  0100               	movlb	0	; () banked
  4064  01009E  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  4065  0100A0  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4066  0100A2  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4067  0100A4  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4068  0100A6  2EE8               	decfsz	wreg,f,c
  4069  0100A8  D7F8               	goto	u6165
  4070  0100AA  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4071  0100AE  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4072  0100B2  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4073  0100B6  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4077  0100BA  C078  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4078  0100BE                     l5312:
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;inc\CANlib.h: 763: }
  4082                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4083  0100BE  0100               	movlb	0	; () banked
  4084  0100C0  0577               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4085  0100C2  A4D8               	btfss	status,2,c
  4086  0100C4  D058               	goto	l5330
  4087                           
  4088                           ; BSR set to: 0
  4089  0100C6  0100               	movlb	0	; () banked
  4090  0100C8  2972               	incf	CANSetFilter@type& (0+255),w,b
  4091  0100CA  A4D8               	btfss	status,2,c
  4092  0100CC  D054               	goto	l5330
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;inc\CANlib.h: 766: {
  4096                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4097  0100CE  010F               	movlb	15	; () banked
  4098  0100D0  9705               	bcf	5,3,b	;volatile
  4099                           
  4100                           ; BSR set to: 15
  4101                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4102  0100D2  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4103  0100D6  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4104  0100DA  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4105  0100DE  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4106  0100E2  0E04               	movlw	4
  4107  0100E4  D006               	goto	u6190
  4108  0100E6                     u6195:
  4109  0100E6  0100               	movlb	0	; () banked
  4110  0100E8  90D8               	bcf	status,0,c
  4111  0100EA  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4112  0100EC  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4113  0100EE  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4114  0100F0  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4115  0100F2                     u6190:
  4116  0100F2  2EE8               	decfsz	wreg,f,c
  4117  0100F4  D7F8               	goto	u6195
  4118  0100F6  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4119  0100FA  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4120  0100FE  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4121  010102  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4125  010106  0100               	movlb	0	; () banked
  4126  010108  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4127  01010A  0100               	movlb	0	; () banked
  4128  01010C  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4129  01010E  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4130  010110  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4131  010112  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4135  010114  C078  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4139  010118  0E07               	movlw	7
  4140  01011A  0100               	movlb	0	; () banked
  4141  01011C  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4142  01011E  0100               	movlb	0	; () banked
  4143  010120  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4144  010122  0E00               	movlw	0
  4145  010124  0100               	movlb	0	; () banked
  4146  010126  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4147  010128  0100               	movlb	0	; () banked
  4148  01012A  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4149  01012C  0E00               	movlw	0
  4150  01012E  0100               	movlb	0	; () banked
  4151  010130  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4152  010132  0100               	movlb	0	; () banked
  4153  010134  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4154  010136  0E00               	movlw	0
  4155  010138  0100               	movlb	0	; () banked
  4156  01013A  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4157  01013C  0100               	movlb	0	; () banked
  4158  01013E  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4162  010140  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4163  010144  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4164  010148  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4165  01014C  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4166  010150  0E05               	movlw	5
  4167  010152                     u6205:
  4168  010152  90D8               	bcf	status,0,c
  4169  010154  0100               	movlb	0	; () banked
  4170  010156  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  4171  010158  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4172  01015A  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4173  01015C  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4174  01015E  2EE8               	decfsz	wreg,f,c
  4175  010160  D7F8               	goto	u6205
  4176  010162  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4177  010166  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4178  01016A  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4179  01016E  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4183  010172  C078  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4184  010176                     l5330:
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;inc\CANlib.h: 776: }
  4188                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4189  010176  0E02               	movlw	2
  4190  010178  0100               	movlb	0	; () banked
  4191  01017A  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4192  01017C  A4D8               	btfss	status,2,c
  4193  01017E  D058               	goto	l5348
  4194                           
  4195                           ; BSR set to: 0
  4196  010180  0100               	movlb	0	; () banked
  4197  010182  2972               	incf	CANSetFilter@type& (0+255),w,b
  4198  010184  A4D8               	btfss	status,2,c
  4199  010186  D054               	goto	l5348
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;inc\CANlib.h: 779: {
  4203                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4204  010188  010F               	movlb	15	; () banked
  4205  01018A  9709               	bcf	9,3,b	;volatile
  4206                           
  4207                           ; BSR set to: 15
  4208                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4209  01018C  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4210  010190  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4211  010194  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4212  010198  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4213  01019C  0E04               	movlw	4
  4214  01019E  D006               	goto	u6230
  4215  0101A0                     u6235:
  4216  0101A0  0100               	movlb	0	; () banked
  4217  0101A2  90D8               	bcf	status,0,c
  4218  0101A4  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4219  0101A6  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4220  0101A8  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4221  0101AA  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4222  0101AC                     u6230:
  4223  0101AC  2EE8               	decfsz	wreg,f,c
  4224  0101AE  D7F8               	goto	u6235
  4225  0101B0  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4226  0101B4  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4227  0101B8  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4228  0101BC  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4232  0101C0  0100               	movlb	0	; () banked
  4233  0101C2  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4234  0101C4  0100               	movlb	0	; () banked
  4235  0101C6  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4236  0101C8  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4237  0101CA  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4238  0101CC  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4242  0101CE  C078  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4243                           
  4244                           ; BSR set to: 0
  4245                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4246  0101D2  0E07               	movlw	7
  4247  0101D4  0100               	movlb	0	; () banked
  4248  0101D6  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4249  0101D8  0100               	movlb	0	; () banked
  4250  0101DA  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4251  0101DC  0E00               	movlw	0
  4252  0101DE  0100               	movlb	0	; () banked
  4253  0101E0  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4254  0101E2  0100               	movlb	0	; () banked
  4255  0101E4  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4256  0101E6  0E00               	movlw	0
  4257  0101E8  0100               	movlb	0	; () banked
  4258  0101EA  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4259  0101EC  0100               	movlb	0	; () banked
  4260  0101EE  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4261  0101F0  0E00               	movlw	0
  4262  0101F2  0100               	movlb	0	; () banked
  4263  0101F4  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4264  0101F6  0100               	movlb	0	; () banked
  4265  0101F8  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4269  0101FA  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4270  0101FE  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4271  010202  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4272  010206  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4273  01020A  0E05               	movlw	5
  4274  01020C                     u6245:
  4275  01020C  90D8               	bcf	status,0,c
  4276  01020E  0100               	movlb	0	; () banked
  4277  010210  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  4278  010212  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4279  010214  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4280  010216  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4281  010218  2EE8               	decfsz	wreg,f,c
  4282  01021A  D7F8               	goto	u6245
  4283  01021C  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4284  010220  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4285  010224  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4286  010228  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4290  01022C  C078  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4291  010230                     l5348:
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;inc\CANlib.h: 789: }
  4295                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4296  010230  0E03               	movlw	3
  4297  010232  0100               	movlb	0	; () banked
  4298  010234  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4299  010236  A4D8               	btfss	status,2,c
  4300  010238  D058               	goto	l5366
  4301                           
  4302                           ; BSR set to: 0
  4303  01023A  0100               	movlb	0	; () banked
  4304  01023C  2972               	incf	CANSetFilter@type& (0+255),w,b
  4305  01023E  A4D8               	btfss	status,2,c
  4306  010240  D054               	goto	l5366
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;inc\CANlib.h: 792: {
  4310                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4311  010242  010F               	movlb	15	; () banked
  4312  010244  970D               	bcf	13,3,b	;volatile
  4313                           
  4314                           ; BSR set to: 15
  4315                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4316  010246  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4317  01024A  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4318  01024E  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4319  010252  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4320  010256  0E04               	movlw	4
  4321  010258  D006               	goto	u6270
  4322  01025A                     u6275:
  4323  01025A  0100               	movlb	0	; () banked
  4324  01025C  90D8               	bcf	status,0,c
  4325  01025E  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4326  010260  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4327  010262  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4328  010264  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4329  010266                     u6270:
  4330  010266  2EE8               	decfsz	wreg,f,c
  4331  010268  D7F8               	goto	u6275
  4332  01026A  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4333  01026E  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4334  010272  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4335  010276  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4339  01027A  0100               	movlb	0	; () banked
  4340  01027C  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4341  01027E  0100               	movlb	0	; () banked
  4342  010280  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4343  010282  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4344  010284  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4345  010286  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4349  010288  C078  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4353  01028C  0E07               	movlw	7
  4354  01028E  0100               	movlb	0	; () banked
  4355  010290  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4356  010292  0100               	movlb	0	; () banked
  4357  010294  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4358  010296  0E00               	movlw	0
  4359  010298  0100               	movlb	0	; () banked
  4360  01029A  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4361  01029C  0100               	movlb	0	; () banked
  4362  01029E  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4363  0102A0  0E00               	movlw	0
  4364  0102A2  0100               	movlb	0	; () banked
  4365  0102A4  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4366  0102A6  0100               	movlb	0	; () banked
  4367  0102A8  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4368  0102AA  0E00               	movlw	0
  4369  0102AC  0100               	movlb	0	; () banked
  4370  0102AE  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4371  0102B0  0100               	movlb	0	; () banked
  4372  0102B2  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4376  0102B4  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4377  0102B8  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4378  0102BC  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4379  0102C0  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4380  0102C4  0E05               	movlw	5
  4381  0102C6                     u6285:
  4382  0102C6  90D8               	bcf	status,0,c
  4383  0102C8  0100               	movlb	0	; () banked
  4384  0102CA  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  4385  0102CC  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4386  0102CE  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4387  0102D0  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4388  0102D2  2EE8               	decfsz	wreg,f,c
  4389  0102D4  D7F8               	goto	u6285
  4390  0102D6  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4391  0102DA  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4392  0102DE  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4393  0102E2  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4397  0102E6  C078  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4398  0102EA                     l5366:
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;inc\CANlib.h: 802: }
  4402                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4403  0102EA  0E04               	movlw	4
  4404  0102EC  0100               	movlb	0	; () banked
  4405  0102EE  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4406  0102F0  A4D8               	btfss	status,2,c
  4407  0102F2  D058               	goto	l5384
  4408                           
  4409                           ; BSR set to: 0
  4410  0102F4  0100               	movlb	0	; () banked
  4411  0102F6  2972               	incf	CANSetFilter@type& (0+255),w,b
  4412  0102F8  A4D8               	btfss	status,2,c
  4413  0102FA  D054               	goto	l5384
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;inc\CANlib.h: 805: {
  4417                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4418  0102FC  010F               	movlb	15	; () banked
  4419  0102FE  9711               	bcf	17,3,b	;volatile
  4420                           
  4421                           ; BSR set to: 15
  4422                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4423  010300  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4424  010304  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4425  010308  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4426  01030C  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4427  010310  0E04               	movlw	4
  4428  010312  D006               	goto	u6310
  4429  010314                     u6315:
  4430  010314  0100               	movlb	0	; () banked
  4431  010316  90D8               	bcf	status,0,c
  4432  010318  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4433  01031A  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4434  01031C  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4435  01031E  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4436  010320                     u6310:
  4437  010320  2EE8               	decfsz	wreg,f,c
  4438  010322  D7F8               	goto	u6315
  4439  010324  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4440  010328  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4441  01032C  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4442  010330  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4446  010334  0100               	movlb	0	; () banked
  4447  010336  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4448  010338  0100               	movlb	0	; () banked
  4449  01033A  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4450  01033C  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4451  01033E  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4452  010340  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4456  010342  C078  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4460  010346  0E07               	movlw	7
  4461  010348  0100               	movlb	0	; () banked
  4462  01034A  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4463  01034C  0100               	movlb	0	; () banked
  4464  01034E  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4465  010350  0E00               	movlw	0
  4466  010352  0100               	movlb	0	; () banked
  4467  010354  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4468  010356  0100               	movlb	0	; () banked
  4469  010358  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4470  01035A  0E00               	movlw	0
  4471  01035C  0100               	movlb	0	; () banked
  4472  01035E  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4473  010360  0100               	movlb	0	; () banked
  4474  010362  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4475  010364  0E00               	movlw	0
  4476  010366  0100               	movlb	0	; () banked
  4477  010368  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4478  01036A  0100               	movlb	0	; () banked
  4479  01036C  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4483  01036E  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4484  010372  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4485  010376  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4486  01037A  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4487  01037E  0E05               	movlw	5
  4488  010380                     u6325:
  4489  010380  90D8               	bcf	status,0,c
  4490  010382  0100               	movlb	0	; () banked
  4491  010384  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  4492  010386  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4493  010388  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4494  01038A  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4495  01038C  2EE8               	decfsz	wreg,f,c
  4496  01038E  D7F8               	goto	u6325
  4497  010390  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4498  010394  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4499  010398  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4500  01039C  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4504  0103A0  C078  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4505  0103A4                     l5384:
  4506                           
  4507                           ; BSR set to: 0
  4508                           ;inc\CANlib.h: 815: }
  4509                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4510  0103A4  0E05               	movlw	5
  4511  0103A6  0100               	movlb	0	; () banked
  4512  0103A8  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4513  0103AA  A4D8               	btfss	status,2,c
  4514  0103AC  D058               	goto	l5402
  4515                           
  4516                           ; BSR set to: 0
  4517  0103AE  0100               	movlb	0	; () banked
  4518  0103B0  2972               	incf	CANSetFilter@type& (0+255),w,b
  4519  0103B2  A4D8               	btfss	status,2,c
  4520  0103B4  D054               	goto	l5402
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;inc\CANlib.h: 818: {
  4524                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4525  0103B6  010F               	movlb	15	; () banked
  4526  0103B8  9715               	bcf	21,3,b	;volatile
  4527                           
  4528                           ; BSR set to: 15
  4529                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4530  0103BA  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4531  0103BE  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4532  0103C2  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4533  0103C6  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4534  0103CA  0E04               	movlw	4
  4535  0103CC  D006               	goto	u6350
  4536  0103CE                     u6355:
  4537  0103CE  0100               	movlb	0	; () banked
  4538  0103D0  90D8               	bcf	status,0,c
  4539  0103D2  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4540  0103D4  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4541  0103D6  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4542  0103D8  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4543  0103DA                     u6350:
  4544  0103DA  2EE8               	decfsz	wreg,f,c
  4545  0103DC  D7F8               	goto	u6355
  4546  0103DE  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4547  0103E2  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4548  0103E6  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4549  0103EA  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4553  0103EE  0100               	movlb	0	; () banked
  4554  0103F0  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4555  0103F2  0100               	movlb	0	; () banked
  4556  0103F4  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4557  0103F6  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4558  0103F8  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4559  0103FA  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4563  0103FC  C078  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4567  010400  0E07               	movlw	7
  4568  010402  0100               	movlb	0	; () banked
  4569  010404  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4570  010406  0100               	movlb	0	; () banked
  4571  010408  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4572  01040A  0E00               	movlw	0
  4573  01040C  0100               	movlb	0	; () banked
  4574  01040E  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4575  010410  0100               	movlb	0	; () banked
  4576  010412  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4577  010414  0E00               	movlw	0
  4578  010416  0100               	movlb	0	; () banked
  4579  010418  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4580  01041A  0100               	movlb	0	; () banked
  4581  01041C  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4582  01041E  0E00               	movlw	0
  4583  010420  0100               	movlb	0	; () banked
  4584  010422  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4585  010424  0100               	movlb	0	; () banked
  4586  010426  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4590  010428  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4591  01042C  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4592  010430  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4593  010434  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4594  010438  0E05               	movlw	5
  4595  01043A                     u6365:
  4596  01043A  90D8               	bcf	status,0,c
  4597  01043C  0100               	movlb	0	; () banked
  4598  01043E  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  4599  010440  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4600  010442  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4601  010444  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4602  010446  2EE8               	decfsz	wreg,f,c
  4603  010448  D7F8               	goto	u6365
  4604  01044A  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4605  01044E  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4606  010452  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4607  010456  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4611  01045A  C078  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4612  01045E                     l5402:
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;inc\CANlib.h: 828: }
  4616                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4617  01045E  0100               	movlb	0	; () banked
  4618  010460  5177               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4619  010462  0100               	movlb	0	; () banked
  4620  010464  A4D8               	btfss	status,2,c
  4621  010466  D089               	goto	l5436
  4622                           
  4623                           ; BSR set to: 0
  4624  010468  0EF7               	movlw	247
  4625  01046A  0100               	movlb	0	; () banked
  4626  01046C  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4627  01046E  A4D8               	btfss	status,2,c
  4628  010470  D084               	goto	l5436
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;inc\CANlib.h: 832: {
  4632                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4633  010472  010F               	movlb	15	; () banked
  4634  010474  8701               	bsf	1,3,b	;volatile
  4635                           
  4636                           ; BSR set to: 15
  4637                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4638  010476  0100               	movlb	0	; () banked
  4639  010478  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4640  01047A  0100               	movlb	0	; () banked
  4641  01047C  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4642  01047E  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4643  010480  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4644  010482  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4645                           
  4646                           ; BSR set to: 0
  4647                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4648  010484  C078  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  4652  010488  0E00               	movlw	0
  4653  01048A  0100               	movlb	0	; () banked
  4654  01048C  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4655  01048E  0100               	movlb	0	; () banked
  4656  010490  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4657  010492  0EFF               	movlw	255
  4658  010494  0100               	movlb	0	; () banked
  4659  010496  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4660  010498  0100               	movlb	0	; () banked
  4661  01049A  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4662  01049C  0E00               	movlw	0
  4663  01049E  0100               	movlb	0	; () banked
  4664  0104A0  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4665  0104A2  0100               	movlb	0	; () banked
  4666  0104A4  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4667  0104A6  0E00               	movlw	0
  4668  0104A8  0100               	movlb	0	; () banked
  4669  0104AA  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4670  0104AC  0100               	movlb	0	; () banked
  4671  0104AE  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  4675  0104B0  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4676  0104B4  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4677  0104B8  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4678  0104BC  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4679  0104C0  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4680  0104C4  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4681  0104C8  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4682  0104CC  0100               	movlb	0	; () banked
  4683  0104CE  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4684  0104D0  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4685  0104D4  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4686  0104D8  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4687  0104DC  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4691  0104E0  C078  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  4695  0104E4  0100               	movlb	0	; () banked
  4696  0104E6  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4697  0104E8  D003               	goto	l475
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4701  0104EA  010F               	movlb	15	; () banked
  4702  0104EC  8101               	bsf	1,0,b	;volatile
  4703  0104EE  D002               	goto	l476
  4704  0104F0                     l475:
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;inc\CANlib.h: 844: else
  4708                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4709  0104F0  010F               	movlb	15	; () banked
  4710  0104F2  9101               	bcf	1,0,b	;volatile
  4711  0104F4                     l476:
  4712                           
  4713                           ; BSR set to: 15
  4714                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  4715  0104F4  0100               	movlb	0	; () banked
  4716  0104F6  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4717  0104F8  D003               	goto	l477
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4721  0104FA  010F               	movlb	15	; () banked
  4722  0104FC  8301               	bsf	1,1,b	;volatile
  4723  0104FE  D002               	goto	l478
  4724  010500                     l477:
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;inc\CANlib.h: 849: else
  4728                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4729  010500  010F               	movlb	15	; () banked
  4730  010502  9301               	bcf	1,1,b	;volatile
  4731  010504                     l478:
  4732                           
  4733                           ; BSR set to: 15
  4734                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  4735  010504  0100               	movlb	0	; () banked
  4736  010506  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4737  010508  D003               	goto	l479
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4741  01050A  010F               	movlb	15	; () banked
  4742  01050C  8B01               	bsf	1,5,b	;volatile
  4743  01050E  D002               	goto	l480
  4744  010510                     l479:
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;inc\CANlib.h: 854: else
  4748                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4749  010510  010F               	movlb	15	; () banked
  4750  010512  9B01               	bcf	1,5,b	;volatile
  4751  010514                     l480:
  4752                           
  4753                           ; BSR set to: 15
  4754                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  4755  010514  0100               	movlb	0	; () banked
  4756  010516  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4757  010518  D003               	goto	l481
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4761  01051A  010F               	movlb	15	; () banked
  4762  01051C  8D01               	bsf	1,6,b	;volatile
  4763  01051E  D002               	goto	l482
  4764  010520                     l481:
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;inc\CANlib.h: 859: else
  4768                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4769  010520  010F               	movlb	15	; () banked
  4770  010522  9D01               	bcf	1,6,b	;volatile
  4771  010524                     l482:
  4772                           
  4773                           ; BSR set to: 15
  4774                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  4775  010524  0100               	movlb	0	; () banked
  4776  010526  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4777  010528  D003               	goto	l483
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4781  01052A  010F               	movlb	15	; () banked
  4782  01052C  8F01               	bsf	1,7,b	;volatile
  4783  01052E  D002               	goto	l5430
  4784  010530                     l483:
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;inc\CANlib.h: 864: else
  4788                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4789  010530  010F               	movlb	15	; () banked
  4790  010532  9F01               	bcf	1,7,b	;volatile
  4791  010534                     l5430:
  4792                           
  4793                           ; BSR set to: 15
  4794                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  4795  010534  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4796  010538  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4797  01053C  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4798  010540  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4799  010544  0E16               	movlw	22
  4800  010546  D006               	goto	u6440
  4801  010548                     u6445:
  4802  010548  0100               	movlb	0	; () banked
  4803  01054A  90D8               	bcf	status,0,c
  4804  01054C  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4805  01054E  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4806  010550  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4807  010552  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4808  010554                     u6440:
  4809  010554  2EE8               	decfsz	wreg,f,c
  4810  010556  D7F8               	goto	u6445
  4811  010558  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4812  01055C  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4813  010560  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4814  010564  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  4818  010568  0100               	movlb	0	; () banked
  4819  01056A  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4820  01056C  0100               	movlb	0	; () banked
  4821  01056E  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4822  010570  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4823  010572  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4824  010574  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4828  010576  C078  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4829  01057A                     l5436:
  4830                           
  4831                           ; BSR set to: 0
  4832                           ;inc\CANlib.h: 870: }
  4833                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4834  01057A  0100               	movlb	0	; () banked
  4835  01057C  0577               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4836  01057E  A4D8               	btfss	status,2,c
  4837  010580  D089               	goto	l5470
  4838                           
  4839                           ; BSR set to: 0
  4840  010582  0EF7               	movlw	247
  4841  010584  0100               	movlb	0	; () banked
  4842  010586  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4843  010588  A4D8               	btfss	status,2,c
  4844  01058A  D084               	goto	l5470
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;inc\CANlib.h: 873: {
  4848                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4849  01058C  010F               	movlb	15	; () banked
  4850  01058E  8705               	bsf	5,3,b	;volatile
  4851                           
  4852                           ; BSR set to: 15
  4853                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  4854  010590  0100               	movlb	0	; () banked
  4855  010592  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4856  010594  0100               	movlb	0	; () banked
  4857  010596  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4858  010598  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4859  01059A  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4860  01059C  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4864  01059E  C078  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  4868  0105A2  0E00               	movlw	0
  4869  0105A4  0100               	movlb	0	; () banked
  4870  0105A6  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4871  0105A8  0100               	movlb	0	; () banked
  4872  0105AA  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4873  0105AC  0EFF               	movlw	255
  4874  0105AE  0100               	movlb	0	; () banked
  4875  0105B0  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4876  0105B2  0100               	movlb	0	; () banked
  4877  0105B4  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4878  0105B6  0E00               	movlw	0
  4879  0105B8  0100               	movlb	0	; () banked
  4880  0105BA  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4881  0105BC  0100               	movlb	0	; () banked
  4882  0105BE  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4883  0105C0  0E00               	movlw	0
  4884  0105C2  0100               	movlb	0	; () banked
  4885  0105C4  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4886  0105C6  0100               	movlb	0	; () banked
  4887  0105C8  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  4891  0105CA  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4892  0105CE  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4893  0105D2  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4894  0105D6  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4895  0105DA  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4896  0105DE  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4897  0105E2  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4898  0105E6  0100               	movlb	0	; () banked
  4899  0105E8  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4900  0105EA  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4901  0105EE  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4902  0105F2  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4903  0105F6  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4907  0105FA  C078  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4908                           
  4909                           ; BSR set to: 0
  4910                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  4911  0105FE  0100               	movlb	0	; () banked
  4912  010600  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4913  010602  D003               	goto	l486
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4917  010604  010F               	movlb	15	; () banked
  4918  010606  8105               	bsf	5,0,b	;volatile
  4919  010608  D002               	goto	l487
  4920  01060A                     l486:
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;inc\CANlib.h: 885: else
  4924                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4925  01060A  010F               	movlb	15	; () banked
  4926  01060C  9105               	bcf	5,0,b	;volatile
  4927  01060E                     l487:
  4928                           
  4929                           ; BSR set to: 15
  4930                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  4931  01060E  0100               	movlb	0	; () banked
  4932  010610  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4933  010612  D003               	goto	l488
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4937  010614  010F               	movlb	15	; () banked
  4938  010616  8305               	bsf	5,1,b	;volatile
  4939  010618  D002               	goto	l489
  4940  01061A                     l488:
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;inc\CANlib.h: 890: else
  4944                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4945  01061A  010F               	movlb	15	; () banked
  4946  01061C  9305               	bcf	5,1,b	;volatile
  4947  01061E                     l489:
  4948                           
  4949                           ; BSR set to: 15
  4950                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  4951  01061E  0100               	movlb	0	; () banked
  4952  010620  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4953  010622  D003               	goto	l490
  4954                           
  4955                           ; BSR set to: 0
  4956                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4957  010624  010F               	movlb	15	; () banked
  4958  010626  8B05               	bsf	5,5,b	;volatile
  4959  010628  D002               	goto	l491
  4960  01062A                     l490:
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;inc\CANlib.h: 895: else
  4964                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4965  01062A  010F               	movlb	15	; () banked
  4966  01062C  9B05               	bcf	5,5,b	;volatile
  4967  01062E                     l491:
  4968                           
  4969                           ; BSR set to: 15
  4970                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  4971  01062E  0100               	movlb	0	; () banked
  4972  010630  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4973  010632  D003               	goto	l492
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4977  010634  010F               	movlb	15	; () banked
  4978  010636  8D05               	bsf	5,6,b	;volatile
  4979  010638  D002               	goto	l493
  4980  01063A                     l492:
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;inc\CANlib.h: 900: else
  4984                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4985  01063A  010F               	movlb	15	; () banked
  4986  01063C  9D05               	bcf	5,6,b	;volatile
  4987  01063E                     l493:
  4988                           
  4989                           ; BSR set to: 15
  4990                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  4991  01063E  0100               	movlb	0	; () banked
  4992  010640  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4993  010642  D003               	goto	l494
  4994                           
  4995                           ; BSR set to: 0
  4996                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4997  010644  010F               	movlb	15	; () banked
  4998  010646  8F05               	bsf	5,7,b	;volatile
  4999  010648  D002               	goto	l5464
  5000  01064A                     l494:
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;inc\CANlib.h: 905: else
  5004                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5005  01064A  010F               	movlb	15	; () banked
  5006  01064C  9F05               	bcf	5,7,b	;volatile
  5007  01064E                     l5464:
  5008                           
  5009                           ; BSR set to: 15
  5010                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5011  01064E  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  5012  010652  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5013  010656  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5014  01065A  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5015  01065E  0E16               	movlw	22
  5016  010660  D006               	goto	u6520
  5017  010662                     u6525:
  5018  010662  0100               	movlb	0	; () banked
  5019  010664  90D8               	bcf	status,0,c
  5020  010666  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5021  010668  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5022  01066A  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5023  01066C  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  5024  01066E                     u6520:
  5025  01066E  2EE8               	decfsz	wreg,f,c
  5026  010670  D7F8               	goto	u6525
  5027  010672  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5028  010676  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5029  01067A  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5030  01067E  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5034  010682  0100               	movlb	0	; () banked
  5035  010684  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  5036  010686  0100               	movlb	0	; () banked
  5037  010688  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5038  01068A  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5039  01068C  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5040  01068E  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5044  010690  C078  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5045  010694                     l5470:
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;inc\CANlib.h: 911: }
  5049                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5050  010694  0E02               	movlw	2
  5051  010696  0100               	movlb	0	; () banked
  5052  010698  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5053  01069A  A4D8               	btfss	status,2,c
  5054  01069C  D089               	goto	l5504
  5055                           
  5056                           ; BSR set to: 0
  5057  01069E  0EF7               	movlw	247
  5058  0106A0  0100               	movlb	0	; () banked
  5059  0106A2  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  5060  0106A4  A4D8               	btfss	status,2,c
  5061  0106A6  D084               	goto	l5504
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;inc\CANlib.h: 915: {
  5065                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5066  0106A8  010F               	movlb	15	; () banked
  5067  0106AA  8709               	bsf	9,3,b	;volatile
  5068                           
  5069                           ; BSR set to: 15
  5070                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5071  0106AC  0100               	movlb	0	; () banked
  5072  0106AE  516E               	movf	CANSetFilter@filter& (0+255),w,b
  5073  0106B0  0100               	movlb	0	; () banked
  5074  0106B2  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5075  0106B4  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5076  0106B6  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5077  0106B8  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5078                           
  5079                           ; BSR set to: 0
  5080                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5081  0106BA  C078  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5085  0106BE  0E00               	movlw	0
  5086  0106C0  0100               	movlb	0	; () banked
  5087  0106C2  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  5088  0106C4  0100               	movlb	0	; () banked
  5089  0106C6  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5090  0106C8  0EFF               	movlw	255
  5091  0106CA  0100               	movlb	0	; () banked
  5092  0106CC  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5093  0106CE  0100               	movlb	0	; () banked
  5094  0106D0  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5095  0106D2  0E00               	movlw	0
  5096  0106D4  0100               	movlb	0	; () banked
  5097  0106D6  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5098  0106D8  0100               	movlb	0	; () banked
  5099  0106DA  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5100  0106DC  0E00               	movlw	0
  5101  0106DE  0100               	movlb	0	; () banked
  5102  0106E0  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5103  0106E2  0100               	movlb	0	; () banked
  5104  0106E4  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5108  0106E6  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  5109  0106EA  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5110  0106EE  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5111  0106F2  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5112  0106F6  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  5113  0106FA  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5114  0106FE  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5115  010702  0100               	movlb	0	; () banked
  5116  010704  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  5117  010706  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5118  01070A  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5119  01070E  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5120  010712  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5124  010716  C078  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5128  01071A  0100               	movlb	0	; () banked
  5129  01071C  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5130  01071E  D003               	goto	l497
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5134  010720  010F               	movlb	15	; () banked
  5135  010722  8109               	bsf	9,0,b	;volatile
  5136  010724  D002               	goto	l498
  5137  010726                     l497:
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;inc\CANlib.h: 927: else
  5141                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5142  010726  010F               	movlb	15	; () banked
  5143  010728  9109               	bcf	9,0,b	;volatile
  5144  01072A                     l498:
  5145                           
  5146                           ; BSR set to: 15
  5147                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5148  01072A  0100               	movlb	0	; () banked
  5149  01072C  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5150  01072E  D003               	goto	l499
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5154  010730  010F               	movlb	15	; () banked
  5155  010732  8309               	bsf	9,1,b	;volatile
  5156  010734  D002               	goto	l500
  5157  010736                     l499:
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;inc\CANlib.h: 932: else
  5161                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5162  010736  010F               	movlb	15	; () banked
  5163  010738  9309               	bcf	9,1,b	;volatile
  5164  01073A                     l500:
  5165                           
  5166                           ; BSR set to: 15
  5167                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5168  01073A  0100               	movlb	0	; () banked
  5169  01073C  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5170  01073E  D003               	goto	l501
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5174  010740  010F               	movlb	15	; () banked
  5175  010742  8B09               	bsf	9,5,b	;volatile
  5176  010744  D002               	goto	l502
  5177  010746                     l501:
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;inc\CANlib.h: 937: else
  5181                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5182  010746  010F               	movlb	15	; () banked
  5183  010748  9B09               	bcf	9,5,b	;volatile
  5184  01074A                     l502:
  5185                           
  5186                           ; BSR set to: 15
  5187                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5188  01074A  0100               	movlb	0	; () banked
  5189  01074C  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5190  01074E  D003               	goto	l503
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5194  010750  010F               	movlb	15	; () banked
  5195  010752  8D09               	bsf	9,6,b	;volatile
  5196  010754  D002               	goto	l504
  5197  010756                     l503:
  5198                           
  5199                           ; BSR set to: 0
  5200                           ;inc\CANlib.h: 942: else
  5201                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5202  010756  010F               	movlb	15	; () banked
  5203  010758  9D09               	bcf	9,6,b	;volatile
  5204  01075A                     l504:
  5205                           
  5206                           ; BSR set to: 15
  5207                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5208  01075A  0100               	movlb	0	; () banked
  5209  01075C  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5210  01075E  D003               	goto	l505
  5211                           
  5212                           ; BSR set to: 0
  5213                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5214  010760  010F               	movlb	15	; () banked
  5215  010762  8F09               	bsf	9,7,b	;volatile
  5216  010764  D002               	goto	l5498
  5217  010766                     l505:
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;inc\CANlib.h: 947: else
  5221                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5222  010766  010F               	movlb	15	; () banked
  5223  010768  9F09               	bcf	9,7,b	;volatile
  5224  01076A                     l5498:
  5225                           
  5226                           ; BSR set to: 15
  5227                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5228  01076A  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  5229  01076E  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5230  010772  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5231  010776  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5232  01077A  0E16               	movlw	22
  5233  01077C  D006               	goto	u6600
  5234  01077E                     u6605:
  5235  01077E  0100               	movlb	0	; () banked
  5236  010780  90D8               	bcf	status,0,c
  5237  010782  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5238  010784  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5239  010786  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5240  010788  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  5241  01078A                     u6600:
  5242  01078A  2EE8               	decfsz	wreg,f,c
  5243  01078C  D7F8               	goto	u6605
  5244  01078E  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5245  010792  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5246  010796  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5247  01079A  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5251  01079E  0100               	movlb	0	; () banked
  5252  0107A0  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  5253  0107A2  0100               	movlb	0	; () banked
  5254  0107A4  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5255  0107A6  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5256  0107A8  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5257  0107AA  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5261  0107AC  C078  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5262  0107B0                     l5504:
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;inc\CANlib.h: 953: }
  5266                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5267  0107B0  0E03               	movlw	3
  5268  0107B2  0100               	movlb	0	; () banked
  5269  0107B4  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5270  0107B6  A4D8               	btfss	status,2,c
  5271  0107B8  D089               	goto	l5538
  5272                           
  5273                           ; BSR set to: 0
  5274  0107BA  0EF7               	movlw	247
  5275  0107BC  0100               	movlb	0	; () banked
  5276  0107BE  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  5277  0107C0  A4D8               	btfss	status,2,c
  5278  0107C2  D084               	goto	l5538
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;inc\CANlib.h: 956: {
  5282                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5283  0107C4  010F               	movlb	15	; () banked
  5284  0107C6  870D               	bsf	13,3,b	;volatile
  5285                           
  5286                           ; BSR set to: 15
  5287                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5288  0107C8  0100               	movlb	0	; () banked
  5289  0107CA  516E               	movf	CANSetFilter@filter& (0+255),w,b
  5290  0107CC  0100               	movlb	0	; () banked
  5291  0107CE  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5292  0107D0  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5293  0107D2  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5294  0107D4  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5298  0107D6  C078  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5302  0107DA  0E00               	movlw	0
  5303  0107DC  0100               	movlb	0	; () banked
  5304  0107DE  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  5305  0107E0  0100               	movlb	0	; () banked
  5306  0107E2  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5307  0107E4  0EFF               	movlw	255
  5308  0107E6  0100               	movlb	0	; () banked
  5309  0107E8  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5310  0107EA  0100               	movlb	0	; () banked
  5311  0107EC  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5312  0107EE  0E00               	movlw	0
  5313  0107F0  0100               	movlb	0	; () banked
  5314  0107F2  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5315  0107F4  0100               	movlb	0	; () banked
  5316  0107F6  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5317  0107F8  0E00               	movlw	0
  5318  0107FA  0100               	movlb	0	; () banked
  5319  0107FC  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5320  0107FE  0100               	movlb	0	; () banked
  5321  010800  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5325  010802  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  5326  010806  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5327  01080A  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5328  01080E  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5329  010812  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  5330  010816  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5331  01081A  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5332  01081E  0100               	movlb	0	; () banked
  5333  010820  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  5334  010822  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5335  010826  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5336  01082A  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5337  01082E  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5338                           
  5339                           ; BSR set to: 0
  5340                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5341  010832  C078  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5345  010836  0100               	movlb	0	; () banked
  5346  010838  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5347  01083A  D003               	goto	l508
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5351  01083C  010F               	movlb	15	; () banked
  5352  01083E  810D               	bsf	13,0,b	;volatile
  5353  010840  D002               	goto	l509
  5354  010842                     l508:
  5355                           
  5356                           ; BSR set to: 0
  5357                           ;inc\CANlib.h: 968: else
  5358                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5359  010842  010F               	movlb	15	; () banked
  5360  010844  910D               	bcf	13,0,b	;volatile
  5361  010846                     l509:
  5362                           
  5363                           ; BSR set to: 15
  5364                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5365  010846  0100               	movlb	0	; () banked
  5366  010848  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5367  01084A  D003               	goto	l510
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5371  01084C  010F               	movlb	15	; () banked
  5372  01084E  830D               	bsf	13,1,b	;volatile
  5373  010850  D002               	goto	l511
  5374  010852                     l510:
  5375                           
  5376                           ; BSR set to: 0
  5377                           ;inc\CANlib.h: 973: else
  5378                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5379  010852  010F               	movlb	15	; () banked
  5380  010854  930D               	bcf	13,1,b	;volatile
  5381  010856                     l511:
  5382                           
  5383                           ; BSR set to: 15
  5384                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5385  010856  0100               	movlb	0	; () banked
  5386  010858  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5387  01085A  D003               	goto	l512
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5391  01085C  010F               	movlb	15	; () banked
  5392  01085E  8B0D               	bsf	13,5,b	;volatile
  5393  010860  D002               	goto	l513
  5394  010862                     l512:
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;inc\CANlib.h: 978: else
  5398                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5399  010862  010F               	movlb	15	; () banked
  5400  010864  9B0D               	bcf	13,5,b	;volatile
  5401  010866                     l513:
  5402                           
  5403                           ; BSR set to: 15
  5404                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5405  010866  0100               	movlb	0	; () banked
  5406  010868  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5407  01086A  D003               	goto	l514
  5408                           
  5409                           ; BSR set to: 0
  5410                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5411  01086C  010F               	movlb	15	; () banked
  5412  01086E  8D0D               	bsf	13,6,b	;volatile
  5413  010870  D002               	goto	l515
  5414  010872                     l514:
  5415                           
  5416                           ; BSR set to: 0
  5417                           ;inc\CANlib.h: 983: else
  5418                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5419  010872  010F               	movlb	15	; () banked
  5420  010874  9D0D               	bcf	13,6,b	;volatile
  5421  010876                     l515:
  5422                           
  5423                           ; BSR set to: 15
  5424                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5425  010876  0100               	movlb	0	; () banked
  5426  010878  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5427  01087A  D003               	goto	l516
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5431  01087C  010F               	movlb	15	; () banked
  5432  01087E  8F0D               	bsf	13,7,b	;volatile
  5433  010880  D002               	goto	l5532
  5434  010882                     l516:
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;inc\CANlib.h: 988: else
  5438                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5439  010882  010F               	movlb	15	; () banked
  5440  010884  9F0D               	bcf	13,7,b	;volatile
  5441  010886                     l5532:
  5442                           
  5443                           ; BSR set to: 15
  5444                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5445  010886  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  5446  01088A  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5447  01088E  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5448  010892  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5449  010896  0E16               	movlw	22
  5450  010898  D006               	goto	u6680
  5451  01089A                     u6685:
  5452  01089A  0100               	movlb	0	; () banked
  5453  01089C  90D8               	bcf	status,0,c
  5454  01089E  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5455  0108A0  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5456  0108A2  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5457  0108A4  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  5458  0108A6                     u6680:
  5459  0108A6  2EE8               	decfsz	wreg,f,c
  5460  0108A8  D7F8               	goto	u6685
  5461  0108AA  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5462  0108AE  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5463  0108B2  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5464  0108B6  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5468  0108BA  0100               	movlb	0	; () banked
  5469  0108BC  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  5470  0108BE  0100               	movlb	0	; () banked
  5471  0108C0  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5472  0108C2  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5473  0108C4  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5474  0108C6  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5478  0108C8  C078  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5479  0108CC                     l5538:
  5480                           
  5481                           ; BSR set to: 0
  5482                           ;inc\CANlib.h: 994: }
  5483                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5484  0108CC  0E04               	movlw	4
  5485  0108CE  0100               	movlb	0	; () banked
  5486  0108D0  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5487  0108D2  A4D8               	btfss	status,2,c
  5488  0108D4  D089               	goto	l5572
  5489                           
  5490                           ; BSR set to: 0
  5491  0108D6  0EF7               	movlw	247
  5492  0108D8  0100               	movlb	0	; () banked
  5493  0108DA  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  5494  0108DC  A4D8               	btfss	status,2,c
  5495  0108DE  D084               	goto	l5572
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;inc\CANlib.h: 997: {
  5499                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5500  0108E0  010F               	movlb	15	; () banked
  5501  0108E2  8711               	bsf	17,3,b	;volatile
  5502                           
  5503                           ; BSR set to: 15
  5504                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5505  0108E4  0100               	movlb	0	; () banked
  5506  0108E6  516E               	movf	CANSetFilter@filter& (0+255),w,b
  5507  0108E8  0100               	movlb	0	; () banked
  5508  0108EA  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5509  0108EC  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5510  0108EE  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5511  0108F0  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5515  0108F2  C078  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5519  0108F6  0E00               	movlw	0
  5520  0108F8  0100               	movlb	0	; () banked
  5521  0108FA  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  5522  0108FC  0100               	movlb	0	; () banked
  5523  0108FE  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5524  010900  0EFF               	movlw	255
  5525  010902  0100               	movlb	0	; () banked
  5526  010904  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5527  010906  0100               	movlb	0	; () banked
  5528  010908  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5529  01090A  0E00               	movlw	0
  5530  01090C  0100               	movlb	0	; () banked
  5531  01090E  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5532  010910  0100               	movlb	0	; () banked
  5533  010912  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5534  010914  0E00               	movlw	0
  5535  010916  0100               	movlb	0	; () banked
  5536  010918  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5537  01091A  0100               	movlb	0	; () banked
  5538  01091C  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5542  01091E  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  5543  010922  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5544  010926  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5545  01092A  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5546  01092E  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  5547  010932  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5548  010936  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5549  01093A  0100               	movlb	0	; () banked
  5550  01093C  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  5551  01093E  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5552  010942  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5553  010946  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5554  01094A  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5558  01094E  C078  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5562  010952  0100               	movlb	0	; () banked
  5563  010954  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5564  010956  D003               	goto	l519
  5565                           
  5566                           ; BSR set to: 0
  5567                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5568  010958  010F               	movlb	15	; () banked
  5569  01095A  8111               	bsf	17,0,b	;volatile
  5570  01095C  D002               	goto	l520
  5571  01095E                     l519:
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;inc\CANlib.h: 1009: else
  5575                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5576  01095E  010F               	movlb	15	; () banked
  5577  010960  9111               	bcf	17,0,b	;volatile
  5578  010962                     l520:
  5579                           
  5580                           ; BSR set to: 15
  5581                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5582  010962  0100               	movlb	0	; () banked
  5583  010964  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5584  010966  D003               	goto	l521
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5588  010968  010F               	movlb	15	; () banked
  5589  01096A  8311               	bsf	17,1,b	;volatile
  5590  01096C  D002               	goto	l522
  5591  01096E                     l521:
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;inc\CANlib.h: 1014: else
  5595                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5596  01096E  010F               	movlb	15	; () banked
  5597  010970  9311               	bcf	17,1,b	;volatile
  5598  010972                     l522:
  5599                           
  5600                           ; BSR set to: 15
  5601                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5602  010972  0100               	movlb	0	; () banked
  5603  010974  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5604  010976  D003               	goto	l523
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5608  010978  010F               	movlb	15	; () banked
  5609  01097A  8B11               	bsf	17,5,b	;volatile
  5610  01097C  D002               	goto	l524
  5611  01097E                     l523:
  5612                           
  5613                           ; BSR set to: 0
  5614                           ;inc\CANlib.h: 1019: else
  5615                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5616  01097E  010F               	movlb	15	; () banked
  5617  010980  9B11               	bcf	17,5,b	;volatile
  5618  010982                     l524:
  5619                           
  5620                           ; BSR set to: 15
  5621                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5622  010982  0100               	movlb	0	; () banked
  5623  010984  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5624  010986  D003               	goto	l525
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5628  010988  010F               	movlb	15	; () banked
  5629  01098A  8D11               	bsf	17,6,b	;volatile
  5630  01098C  D002               	goto	l526
  5631  01098E                     l525:
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;inc\CANlib.h: 1024: else
  5635                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5636  01098E  010F               	movlb	15	; () banked
  5637  010990  9D11               	bcf	17,6,b	;volatile
  5638  010992                     l526:
  5639                           
  5640                           ; BSR set to: 15
  5641                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5642  010992  0100               	movlb	0	; () banked
  5643  010994  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5644  010996  D003               	goto	l527
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5648  010998  010F               	movlb	15	; () banked
  5649  01099A  8F11               	bsf	17,7,b	;volatile
  5650  01099C  D002               	goto	l5566
  5651  01099E                     l527:
  5652                           
  5653                           ; BSR set to: 0
  5654                           ;inc\CANlib.h: 1029: else
  5655                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5656  01099E  010F               	movlb	15	; () banked
  5657  0109A0  9F11               	bcf	17,7,b	;volatile
  5658  0109A2                     l5566:
  5659                           
  5660                           ; BSR set to: 15
  5661                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  5662  0109A2  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  5663  0109A6  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5664  0109AA  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5665  0109AE  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5666  0109B2  0E16               	movlw	22
  5667  0109B4  D006               	goto	u6760
  5668  0109B6                     u6765:
  5669  0109B6  0100               	movlb	0	; () banked
  5670  0109B8  90D8               	bcf	status,0,c
  5671  0109BA  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5672  0109BC  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5673  0109BE  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5674  0109C0  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  5675  0109C2                     u6760:
  5676  0109C2  2EE8               	decfsz	wreg,f,c
  5677  0109C4  D7F8               	goto	u6765
  5678  0109C6  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5679  0109CA  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5680  0109CE  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5681  0109D2  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5682                           
  5683                           ; BSR set to: 0
  5684                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5685  0109D6  0100               	movlb	0	; () banked
  5686  0109D8  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  5687  0109DA  0100               	movlb	0	; () banked
  5688  0109DC  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5689  0109DE  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5690  0109E0  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5691  0109E2  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5695  0109E4  C078  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5696  0109E8                     l5572:
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;inc\CANlib.h: 1035: }
  5700                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5701  0109E8  0E05               	movlw	5
  5702  0109EA  0100               	movlb	0	; () banked
  5703  0109EC  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5704  0109EE  A4D8               	btfss	status,2,c
  5705  0109F0  0012               	return	
  5706                           
  5707                           ; BSR set to: 0
  5708  0109F2  0EF7               	movlw	247
  5709  0109F4  0100               	movlb	0	; () banked
  5710  0109F6  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  5711  0109F8  A4D8               	btfss	status,2,c
  5712  0109FA  0012               	return	
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;inc\CANlib.h: 1038: {
  5716                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5717  0109FC  010F               	movlb	15	; () banked
  5718  0109FE  8715               	bsf	21,3,b	;volatile
  5719                           
  5720                           ; BSR set to: 15
  5721                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5722  010A00  0100               	movlb	0	; () banked
  5723  010A02  516E               	movf	CANSetFilter@filter& (0+255),w,b
  5724  010A04  0100               	movlb	0	; () banked
  5725  010A06  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5726  010A08  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5727  010A0A  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5728  010A0C  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5732  010A0E  C078  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5736  010A12  0E00               	movlw	0
  5737  010A14  0100               	movlb	0	; () banked
  5738  010A16  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  5739  010A18  0100               	movlb	0	; () banked
  5740  010A1A  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5741  010A1C  0EFF               	movlw	255
  5742  010A1E  0100               	movlb	0	; () banked
  5743  010A20  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5744  010A22  0100               	movlb	0	; () banked
  5745  010A24  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5746  010A26  0E00               	movlw	0
  5747  010A28  0100               	movlb	0	; () banked
  5748  010A2A  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5749  010A2C  0100               	movlb	0	; () banked
  5750  010A2E  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5751  010A30  0E00               	movlw	0
  5752  010A32  0100               	movlb	0	; () banked
  5753  010A34  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5754  010A36  0100               	movlb	0	; () banked
  5755  010A38  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  5759  010A3A  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  5760  010A3E  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5761  010A42  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5762  010A46  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5763  010A4A  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  5764  010A4E  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5765  010A52  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5766  010A56  0100               	movlb	0	; () banked
  5767  010A58  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  5768  010A5A  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5769  010A5E  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5770  010A62  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5771  010A66  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5775  010A6A  C078  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5776                           
  5777                           ; BSR set to: 0
  5778                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  5779  010A6E  0100               	movlb	0	; () banked
  5780  010A70  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5781  010A72  D003               	goto	l530
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5785  010A74  010F               	movlb	15	; () banked
  5786  010A76  8115               	bsf	21,0,b	;volatile
  5787  010A78  D002               	goto	l531
  5788  010A7A                     l530:
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;inc\CANlib.h: 1050: else
  5792                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5793  010A7A  010F               	movlb	15	; () banked
  5794  010A7C  9115               	bcf	21,0,b	;volatile
  5795  010A7E                     l531:
  5796                           
  5797                           ; BSR set to: 15
  5798                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  5799  010A7E  0100               	movlb	0	; () banked
  5800  010A80  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5801  010A82  D003               	goto	l532
  5802                           
  5803                           ; BSR set to: 0
  5804                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5805  010A84  010F               	movlb	15	; () banked
  5806  010A86  8315               	bsf	21,1,b	;volatile
  5807  010A88  D002               	goto	l533
  5808  010A8A                     l532:
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;inc\CANlib.h: 1055: else
  5812                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5813  010A8A  010F               	movlb	15	; () banked
  5814  010A8C  9315               	bcf	21,1,b	;volatile
  5815  010A8E                     l533:
  5816                           
  5817                           ; BSR set to: 15
  5818                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  5819  010A8E  0100               	movlb	0	; () banked
  5820  010A90  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5821  010A92  D003               	goto	l534
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5825  010A94  010F               	movlb	15	; () banked
  5826  010A96  8B15               	bsf	21,5,b	;volatile
  5827  010A98  D002               	goto	l535
  5828  010A9A                     l534:
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;inc\CANlib.h: 1060: else
  5832                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5833  010A9A  010F               	movlb	15	; () banked
  5834  010A9C  9B15               	bcf	21,5,b	;volatile
  5835  010A9E                     l535:
  5836                           
  5837                           ; BSR set to: 15
  5838                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  5839  010A9E  0100               	movlb	0	; () banked
  5840  010AA0  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5841  010AA2  D003               	goto	l536
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5845  010AA4  010F               	movlb	15	; () banked
  5846  010AA6  8D15               	bsf	21,6,b	;volatile
  5847  010AA8  D002               	goto	l537
  5848  010AAA                     l536:
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;inc\CANlib.h: 1065: else
  5852                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5853  010AAA  010F               	movlb	15	; () banked
  5854  010AAC  9D15               	bcf	21,6,b	;volatile
  5855  010AAE                     l537:
  5856                           
  5857                           ; BSR set to: 15
  5858                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  5859  010AAE  0100               	movlb	0	; () banked
  5860  010AB0  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5861  010AB2  D003               	goto	l538
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5865  010AB4  010F               	movlb	15	; () banked
  5866  010AB6  8F15               	bsf	21,7,b	;volatile
  5867  010AB8  D002               	goto	l5600
  5868  010ABA                     l538:
  5869                           
  5870                           ; BSR set to: 0
  5871                           ;inc\CANlib.h: 1070: else
  5872                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5873  010ABA  010F               	movlb	15	; () banked
  5874  010ABC  9F15               	bcf	21,7,b	;volatile
  5875  010ABE                     l5600:
  5876                           
  5877                           ; BSR set to: 15
  5878                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  5879  010ABE  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  5880  010AC2  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5881  010AC6  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5882  010ACA  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5883  010ACE  0E16               	movlw	22
  5884  010AD0  D006               	goto	u6840
  5885  010AD2                     u6845:
  5886  010AD2  0100               	movlb	0	; () banked
  5887  010AD4  90D8               	bcf	status,0,c
  5888  010AD6  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5889  010AD8  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5890  010ADA  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5891  010ADC  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  5892  010ADE                     u6840:
  5893  010ADE  2EE8               	decfsz	wreg,f,c
  5894  010AE0  D7F8               	goto	u6845
  5895  010AE2  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  5896  010AE6  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5897  010AEA  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5898  010AEE  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5899                           
  5900                           ; BSR set to: 0
  5901                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5902  010AF2  0100               	movlb	0	; () banked
  5903  010AF4  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  5904  010AF6  0100               	movlb	0	; () banked
  5905  010AF8  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  5906  010AFA  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5907  010AFC  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5908  010AFE  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5909                           
  5910                           ; BSR set to: 0
  5911                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5912  010B00  C078  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5913  010B04  0012               	return	
  5914  010B06                     __end_of_CANSetFilter:
  5915                           	opt stack 0
  5916                           tblptru	equ	0xFF8
  5917                           tblptrh	equ	0xFF7
  5918                           tblptrl	equ	0xFF6
  5919                           tablat	equ	0xFF5
  5920                           intcon	equ	0xFF2
  5921                           postinc0	equ	0xFEE
  5922                           wreg	equ	0xFE8
  5923                           status	equ	0xFD8
  5924                           
  5925 ;; *************** function _CANOperationMode *****************
  5926 ;; Defined at:
  5927 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;  mode            1    wreg     enum E16881
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;  mode            1   14[BANK0 ] enum E16881
  5932 ;; Return value:  Size  Location     Type
  5933 ;;		None               void
  5934 ;; Registers used:
  5935 ;;		wreg, status,2, status,0
  5936 ;; Tracked objects:
  5937 ;;		On entry : 0/0
  5938 ;;		On exit  : 0/0
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5942 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5944 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5945 ;;Total ram usage:        1 bytes
  5946 ;; Hardware stack levels used:    1
  5947 ;; Hardware stack levels required when called:    3
  5948 ;; This function calls:
  5949 ;;		Nothing
  5950 ;; This function is called by:
  5951 ;;		_CANInitialize
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           	psect	text5
  5956  016252                     __ptext5:
  5957                           	opt stack 0
  5958  016252                     _CANOperationMode:
  5959                           	opt stack 25
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;incstack = 0
  5963                           ;CANOperationMode@mode stored from wreg
  5964  016252  0100               	movlb	0	; () banked
  5965  016254  6F6E               	movwf	CANOperationMode@mode& (0+255),b
  5966                           
  5967                           ;inc\CANlib.h: 208: CANCON = mode;
  5968  016256  C06E  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5969  01625A                     l5196:
  5970  01625A  506E               	movf	3950,w,c	;volatile
  5971  01625C  0BE0               	andlw	224
  5972  01625E  0100               	movlb	0	; () banked
  5973  016260  196E               	xorwf	CANOperationMode@mode& (0+255),w,b
  5974  016262  B4D8               	btfsc	status,2,c
  5975  016264  0012               	return	
  5976  016266  D7F9               	goto	l5196
  5977  016268                     __end_of_CANOperationMode:
  5978                           	opt stack 0
  5979                           tblptru	equ	0xFF8
  5980                           tblptrh	equ	0xFF7
  5981                           tblptrl	equ	0xFF6
  5982                           tablat	equ	0xFF5
  5983                           intcon	equ	0xFF2
  5984                           postinc0	equ	0xFEE
  5985                           wreg	equ	0xFE8
  5986                           status	equ	0xFD8
  5987                           
  5988 ;; *************** function _PWR_Button_Polling *****************
  5989 ;; Defined at:
  5990 ;;		line 410 in file "RemoteCan.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;		None
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;		None
  5995 ;; Return value:  Size  Location     Type
  5996 ;;		None               void
  5997 ;; Registers used:
  5998 ;;		None
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6008 ;;Total ram usage:        0 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; Hardware stack levels required when called:    3
  6011 ;; This function calls:
  6012 ;;		Nothing
  6013 ;; This function is called by:
  6014 ;;		_main
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           	psect	text6
  6019  0161E2                     __ptext6:
  6020                           	opt stack 0
  6021  0161E2                     _PWR_Button_Polling:
  6022                           	opt stack 27
  6023                           
  6024                           ;RemoteCan.c: 411: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;incstack = 0
  6028  0161E2  AA81               	btfss	3969,5,c	;volatile
  6029  0161E4  D002               	goto	l856
  6030  0161E6  B64B               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6031  0161E8  0012               	return	
  6032  0161EA                     l856:
  6033                           
  6034                           ;RemoteCan.c: 412: wait_low_1 = 0;
  6035  0161EA  964B               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6036                           
  6037                           ;RemoteCan.c: 413: if (PORTBbits.RB5 == 1) {
  6038  0161EC  AA81               	btfss	3969,5,c	;volatile
  6039  0161EE  0012               	return	
  6040                           
  6041                           ;RemoteCan.c: 414: power_switch = ~power_switch;
  6042  0161F0  B04B               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6043  0161F2  D002               	goto	u8800
  6044  0161F4  804B               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6045  0161F6  D001               	goto	u8815
  6046  0161F8                     u8800:
  6047  0161F8  904B               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6048  0161FA                     u8815:
  6049                           
  6050                           ;RemoteCan.c: 415: wait_low_1 = 1;
  6051  0161FA  864B               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6052  0161FC  0012               	return	
  6053  0161FE                     __end_of_PWR_Button_Polling:
  6054                           	opt stack 0
  6055                           tblptru	equ	0xFF8
  6056                           tblptrh	equ	0xFF7
  6057                           tblptrl	equ	0xFF6
  6058                           tablat	equ	0xFF5
  6059                           intcon	equ	0xFF2
  6060                           postinc0	equ	0xFEE
  6061                           wreg	equ	0xFE8
  6062                           status	equ	0xFD8
  6063                           
  6064 ;; *************** function _LCD_Handler *****************
  6065 ;; Defined at:
  6066 ;;		line 344 in file "RemoteCan.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;		None
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;		None
  6071 ;; Return value:  Size  Location     Type
  6072 ;;		None               void
  6073 ;; Registers used:
  6074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6084 ;;Total ram usage:        0 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; Hardware stack levels required when called:   10
  6087 ;; This function calls:
  6088 ;;		_CANisTxReady
  6089 ;;		_CANsendMessage
  6090 ;;		_LCD_clear
  6091 ;;		_LCD_goto_line
  6092 ;;		_LCD_goto_xy
  6093 ;;		_LCD_initialize
  6094 ;;		_LCD_write_integer
  6095 ;;		_LCD_write_message
  6096 ;;		_LCD_write_string
  6097 ;;		___fldiv
  6098 ;;		___xxtofl
  6099 ;;		_sprintf
  6100 ;; This function is called by:
  6101 ;;		_main
  6102 ;; This function uses a non-reentrant model
  6103 ;;
  6104                           
  6105                           	psect	text7
  6106  014BEC                     __ptext7:
  6107                           	opt stack 0
  6108  014BEC                     _LCD_Handler:
  6109                           	opt stack 20
  6110  014BEC                     l8818:
  6111  014BEC  ECBF  F0B0         	call	_CANisTxReady	;wreg free
  6112  014BF0  06E8               	decf	wreg,f,c
  6113  014BF2  A4D8               	btfss	status,2,c
  6114  014BF4  D7FB               	goto	l8818
  6115                           
  6116                           ;RemoteCan.c: 347: CANsendMessage(0b00000000110, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  6117  014BF6  0E06               	movlw	6
  6118  014BF8  0100               	movlb	0	; () banked
  6119  014BFA  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
  6120  014BFC  0E00               	movlw	0
  6121  014BFE  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  6122  014C00  0E00               	movlw	0
  6123  014C02  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  6124  014C04  0E00               	movlw	0
  6125  014C06  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  6126  014C08  0EEF               	movlw	low _data_speed
  6127  014C0A  0100               	movlb	0	; () banked
  6128  014C0C  6F72               	movwf	CANsendMessage@data& (0+255),b
  6129  014C0E  0E00               	movlw	high _data_speed
  6130  014C10  0100               	movlb	0	; () banked
  6131  014C12  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
  6132  014C14  0E08               	movlw	8
  6133  014C16  0100               	movlb	0	; () banked
  6134  014C18  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
  6135  014C1A  0EFC               	movlw	252
  6136  014C1C  0100               	movlb	0	; () banked
  6137  014C1E  6F75               	movwf	CANsendMessage@flags& (0+255),b
  6138  014C20  ECCD  F089         	call	_CANsendMessage	;wreg free
  6139                           
  6140                           ;RemoteCan.c: 349: actual_speed_kmh = ((actual_speed) / 278.0);
  6141  014C24  C0E0  F06E         	movff	_actual_speed,___xxtofl@val
  6142  014C28  C0E1  F06F         	movff	_actual_speed+1,___xxtofl@val+1
  6143  014C2C  0100               	movlb	0	; () banked
  6144  014C2E  6B70               	clrf	(___xxtofl@val+2)& (0+255),b
  6145  014C30  6B71               	clrf	(___xxtofl@val+3)& (0+255),b
  6146  014C32  0E00               	movlw	0
  6147  014C34  EC4C  F0A3         	call	___xxtofl
  6148  014C38  C06E  F07C         	movff	?___xxtofl,___fldiv@b
  6149  014C3C  C06F  F07D         	movff	?___xxtofl+1,___fldiv@b+1
  6150  014C40  C070  F07E         	movff	?___xxtofl+2,___fldiv@b+2
  6151  014C44  C071  F07F         	movff	?___xxtofl+3,___fldiv@b+3
  6152  014C48  0E00               	movlw	0
  6153  014C4A  0100               	movlb	0	; () banked
  6154  014C4C  6F80               	movwf	___fldiv@a& (0+255),b
  6155  014C4E  0E00               	movlw	0
  6156  014C50  6F81               	movwf	(___fldiv@a+1)& (0+255),b
  6157  014C52  0E8B               	movlw	139
  6158  014C54  6F82               	movwf	(___fldiv@a+2)& (0+255),b
  6159  014C56  0E43               	movlw	67
  6160  014C58  6F83               	movwf	(___fldiv@a+3)& (0+255),b
  6161  014C5A  EC22  F09E         	call	___fldiv	;wreg free
  6162  014C5E  C07C  F001         	movff	?___fldiv,_actual_speed_kmh
  6163  014C62  C07D  F002         	movff	?___fldiv+1,_actual_speed_kmh+1
  6164  014C66  C07E  F003         	movff	?___fldiv+2,_actual_speed_kmh+2
  6165  014C6A  C07F  F004         	movff	?___fldiv+3,_actual_speed_kmh+3
  6166                           
  6167                           ;RemoteCan.c: 350: sprintf(str, "%.2f", actual_speed_kmh);
  6168  014C6E  0E1C               	movlw	low _str
  6169  014C70  0100               	movlb	0	; () banked
  6170  014C72  6FC0               	movwf	sprintf@sp& (0+255),b
  6171  014C74  0E01               	movlw	high _str
  6172  014C76  0100               	movlb	0	; () banked
  6173  014C78  6FC1               	movwf	(sprintf@sp+1)& (0+255),b
  6174  014C7A  0EFA               	movlw	low STR_5
  6175  014C7C  0100               	movlb	0	; () banked
  6176  014C7E  6FC2               	movwf	sprintf@f& (0+255),b
  6177  014C80  0EFF               	movlw	high STR_5
  6178  014C82  0100               	movlb	0	; () banked
  6179  014C84  6FC3               	movwf	(sprintf@f+1)& (0+255),b
  6180  014C86  C001  F0C4         	movff	_actual_speed_kmh,?_sprintf+4
  6181  014C8A  C002  F0C5         	movff	_actual_speed_kmh+1,?_sprintf+5
  6182  014C8E  C003  F0C6         	movff	_actual_speed_kmh+2,?_sprintf+6
  6183  014C92  C004  F0C7         	movff	_actual_speed_kmh+3,?_sprintf+7
  6184  014C96  EC83  F085         	call	_sprintf	;wreg free
  6185                           
  6186                           ;RemoteCan.c: 351: str[11] = '\0';
  6187  014C9A  0E00               	movlw	0
  6188  014C9C  0101               	movlb	1	; () banked
  6189  014C9E  6F27               	movwf	(_str+11)& (0+255),b
  6190                           
  6191                           ; BSR set to: 1
  6192                           ;RemoteCan.c: 353: if (display_refresh == 1) {
  6193  014CA0  AC4A               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6194  014CA2  D032               	goto	l8846
  6195                           
  6196                           ; BSR set to: 1
  6197                           ;RemoteCan.c: 354: LCD_initialize(16);
  6198  014CA4  0E10               	movlw	16
  6199  014CA6  ECF5  F0A9         	call	_LCD_initialize
  6200                           
  6201                           ;RemoteCan.c: 355: LCD_clear();
  6202  014CAA  EC7E  F0B0         	call	_LCD_clear	;wreg free
  6203                           
  6204                           ;RemoteCan.c: 356: LCD_goto_line(1);
  6205  014CAE  0E01               	movlw	1
  6206  014CB0  EC32  F0AB         	call	_LCD_goto_line
  6207                           
  6208                           ;RemoteCan.c: 357: LCD_write_message("=== VEHICLE DATA ===");
  6209  014CB4  0E6F               	movlw	low STR_6
  6210  014CB6  0100               	movlb	0	; () banked
  6211  014CB8  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  6212  014CBA  0EFF               	movlw	high STR_6
  6213  014CBC  0100               	movlb	0	; () banked
  6214  014CBE  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6215  014CC0  EC4B  F0B0         	call	_LCD_write_message	;wreg free
  6216                           
  6217                           ;RemoteCan.c: 358: LCD_goto_line(2);
  6218  014CC4  0E02               	movlw	2
  6219  014CC6  EC32  F0AB         	call	_LCD_goto_line
  6220                           
  6221                           ;RemoteCan.c: 359: LCD_write_message("Direction: ");
  6222  014CCA  0EB8               	movlw	low STR_7
  6223  014CCC  0100               	movlb	0	; () banked
  6224  014CCE  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  6225  014CD0  0EFF               	movlw	high STR_7
  6226  014CD2  0100               	movlb	0	; () banked
  6227  014CD4  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6228  014CD6  EC4B  F0B0         	call	_LCD_write_message	;wreg free
  6229                           
  6230                           ;RemoteCan.c: 360: LCD_goto_line(3);
  6231  014CDA  0E03               	movlw	3
  6232  014CDC  EC32  F0AB         	call	_LCD_goto_line
  6233                           
  6234                           ;RemoteCan.c: 361: LCD_write_message("Speed: 0.00 Km/h");
  6235  014CE0  0E99               	movlw	low STR_8
  6236  014CE2  0100               	movlb	0	; () banked
  6237  014CE4  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  6238  014CE6  0EFF               	movlw	high STR_8
  6239  014CE8  0100               	movlb	0	; () banked
  6240  014CEA  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6241  014CEC  EC4B  F0B0         	call	_LCD_write_message	;wreg free
  6242                           
  6243                           ;RemoteCan.c: 362: LCD_goto_line(4);
  6244  014CF0  0E04               	movlw	4
  6245  014CF2  EC32  F0AB         	call	_LCD_goto_line
  6246                           
  6247                           ;RemoteCan.c: 366: LCD_write_message("Data: ");
  6248                           
  6249                           ;RemoteCan.c: 365: } else {
  6250                           
  6251                           ;RemoteCan.c: 364: LCD_write_message("Park assist: ");
  6252                           
  6253                           ;RemoteCan.c: 363: if (1 == 0) {
  6254  014CF6  0EE4               	movlw	low STR_10
  6255  014CF8  0100               	movlb	0	; () banked
  6256  014CFA  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  6257  014CFC  0EFF               	movlw	high STR_10
  6258  014CFE  0100               	movlb	0	; () banked
  6259  014D00  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6260  014D02  EC4B  F0B0         	call	_LCD_write_message	;wreg free
  6261                           
  6262                           ;RemoteCan.c: 367: }
  6263                           ;RemoteCan.c: 368: display_refresh = 0;
  6264  014D06  9C4A               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6265  014D08                     l8846:
  6266                           
  6267                           ;RemoteCan.c: 369: }
  6268                           ;RemoteCan.c: 372: LCD_goto_xy(12, 2);
  6269  014D08  0E02               	movlw	2
  6270  014D0A  0100               	movlb	0	; () banked
  6271  014D0C  6F7D               	movwf	LCD_goto_xy@y& (0+255),b
  6272  014D0E  0E0C               	movlw	12
  6273  014D10  ECFF  F0B0         	call	_LCD_goto_xy
  6274                           
  6275                           ;RemoteCan.c: 373: if (switch_position != 0) {
  6276  014D14  0100               	movlb	0	; () banked
  6277  014D16  51EB               	movf	_switch_position& (0+255),w,b	;volatile
  6278  014D18  B4D8               	btfsc	status,2,c
  6279  014D1A  D016               	goto	l8856
  6280                           
  6281                           ; BSR set to: 0
  6282                           ;RemoteCan.c: 374: if (dir == 1) {
  6283  014D1C  0100               	movlb	0	; () banked
  6284  014D1E  05E8               	decf	_dir& (0+255),w,b	;volatile
  6285  014D20  A4D8               	btfss	status,2,c
  6286  014D22  D009               	goto	l8854
  6287                           
  6288                           ; BSR set to: 0
  6289                           ;RemoteCan.c: 375: LCD_write_message("FWD ");
  6290  014D24  0EF0               	movlw	low STR_11
  6291  014D26  0100               	movlb	0	; () banked
  6292  014D28  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  6293  014D2A  0EFF               	movlw	high STR_11
  6294  014D2C  0100               	movlb	0	; () banked
  6295  014D2E  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6296  014D30  EC4B  F0B0         	call	_LCD_write_message	;wreg free
  6297                           
  6298                           ;RemoteCan.c: 376: } else {
  6299  014D34  D011               	goto	l8858
  6300  014D36                     l8854:
  6301                           
  6302                           ;RemoteCan.c: 377: LCD_write_message("BKWD");
  6303  014D36  0EF5               	movlw	low STR_12
  6304  014D38  0100               	movlb	0	; () banked
  6305  014D3A  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  6306  014D3C  0EFF               	movlw	high STR_12
  6307  014D3E  0100               	movlb	0	; () banked
  6308  014D40  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6309  014D42  EC4B  F0B0         	call	_LCD_write_message	;wreg free
  6310                           
  6311                           ;RemoteCan.c: 378: }
  6312                           ;RemoteCan.c: 379: } else {
  6313  014D46  D008               	goto	l8858
  6314  014D48                     l8856:
  6315                           
  6316                           ;RemoteCan.c: 380: LCD_write_message("P   ");
  6317  014D48  0EEB               	movlw	low STR_13
  6318  014D4A  0100               	movlb	0	; () banked
  6319  014D4C  6F7F               	movwf	LCD_write_message@buffer& (0+255),b
  6320  014D4E  0EFF               	movlw	high STR_13
  6321  014D50  0100               	movlb	0	; () banked
  6322  014D52  6F80               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6323  014D54  EC4B  F0B0         	call	_LCD_write_message	;wreg free
  6324  014D58                     l8858:
  6325                           
  6326                           ;RemoteCan.c: 381: }
  6327                           ;RemoteCan.c: 384: LCD_goto_xy(8, 3);
  6328  014D58  0E03               	movlw	3
  6329  014D5A  0100               	movlb	0	; () banked
  6330  014D5C  6F7D               	movwf	LCD_goto_xy@y& (0+255),b
  6331  014D5E  0E08               	movlw	8
  6332  014D60  ECFF  F0B0         	call	_LCD_goto_xy
  6333                           
  6334                           ;RemoteCan.c: 385: LCD_write_string(str);
  6335  014D64  0E1C               	movlw	low _str
  6336  014D66  0100               	movlb	0	; () banked
  6337  014D68  6F7F               	movwf	LCD_write_string@buffer& (0+255),b
  6338  014D6A  0E01               	movlw	high _str
  6339  014D6C  0100               	movlb	0	; () banked
  6340  014D6E  6F80               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  6341  014D70  ECAC  F0B0         	call	_LCD_write_string	;wreg free
  6342                           
  6343                           ;RemoteCan.c: 405: LCD_goto_xy(7, 4);
  6344                           
  6345                           ;RemoteCan.c: 401: }
  6346                           ;RemoteCan.c: 402: }
  6347                           ;RemoteCan.c: 403: } else {
  6348                           
  6349                           ;RemoteCan.c: 400: LCD_write_message("PARKING");
  6350                           
  6351                           ;RemoteCan.c: 398: }
  6352                           ;RemoteCan.c: 399: } else {
  6353                           
  6354                           ;RemoteCan.c: 397: LCD_write_message("FOUND! ");
  6355                           
  6356                           ;RemoteCan.c: 396: } else {
  6357                           
  6358                           ; BSR set to: 0
  6359                           ;RemoteCan.c: 395: LCD_write_message("SEARCH ");
  6360                           
  6361                           ; BSR set to: 0
  6362                           ;RemoteCan.c: 394: if (space_available == 0) {
  6363                           
  6364                           ;RemoteCan.c: 393: if (parking_state == 1) {
  6365                           
  6366                           ;RemoteCan.c: 392: } else {
  6367                           
  6368                           ; BSR set to: 0
  6369                           ;RemoteCan.c: 391: LCD_write_message("OFF    ");
  6370                           
  6371                           ;RemoteCan.c: 390: if (parking_state == 0) {
  6372                           
  6373                           ;RemoteCan.c: 389: LCD_goto_xy(14, 4);
  6374                           
  6375                           ;RemoteCan.c: 387: if (1 == 0) {
  6376  014D74  0E04               	movlw	4
  6377  014D76  0100               	movlb	0	; () banked
  6378  014D78  6F7D               	movwf	LCD_goto_xy@y& (0+255),b
  6379  014D7A  0E07               	movlw	7
  6380  014D7C  ECFF  F0B0         	call	_LCD_goto_xy
  6381                           
  6382                           ;RemoteCan.c: 406: LCD_write_integer(user_data, 0, 0x01);
  6383  014D80  C0E6  F086         	movff	_user_data,LCD_write_integer@value
  6384  014D84  C0E7  F087         	movff	_user_data+1,LCD_write_integer@value+1
  6385  014D88  0E00               	movlw	0
  6386  014D8A  0100               	movlb	0	; () banked
  6387  014D8C  6F88               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  6388  014D8E  0E01               	movlw	1
  6389  014D90  0100               	movlb	0	; () banked
  6390  014D92  6F89               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  6391  014D94  EC16  F0A5         	call	_LCD_write_integer	;wreg free
  6392  014D98  0012               	return	
  6393  014D9A                     __end_of_LCD_Handler:
  6394                           	opt stack 0
  6395                           tblptru	equ	0xFF8
  6396                           tblptrh	equ	0xFF7
  6397                           tblptrl	equ	0xFF6
  6398                           tablat	equ	0xFF5
  6399                           intcon	equ	0xFF2
  6400                           postinc0	equ	0xFEE
  6401                           wreg	equ	0xFE8
  6402                           status	equ	0xFD8
  6403                           
  6404 ;; *************** function _sprintf *****************
  6405 ;; Defined at:
  6406 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;  sp              2   96[BANK0 ] PTR unsigned char 
  6409 ;;		 -> str(12), 
  6410 ;;  f               2   98[BANK0 ] PTR const unsigned char 
  6411 ;;		 -> STR_5(5), 
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  6414 ;;  tmpval          4   14[BANK1 ] struct .
  6415 ;;  val             4    8[BANK1 ] unsigned long 
  6416 ;;  cp              3    0        PTR const unsigned char 
  6417 ;;  prec            2   18[BANK1 ] int 
  6418 ;;  exp             2   12[BANK1 ] int 
  6419 ;;  flag            2    6[BANK1 ] unsigned short 
  6420 ;;  ap              2    4[BANK1 ] PTR void [1]
  6421 ;;		 -> ?_sprintf(2), 
  6422 ;;  len             2    0        unsigned int 
  6423 ;;  width           2    0        int 
  6424 ;;  c               1   24[BANK1 ] char 
  6425 ;;  d               1    0        unsigned char 
  6426 ;; Return value:  Size  Location     Type
  6427 ;;                  2   96[BANK0 ] int 
  6428 ;; Registers used:
  6429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6430 ;; Tracked objects:
  6431 ;;		On entry : 0/0
  6432 ;;		On exit  : 0/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6435 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6436 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6437 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6438 ;;      Totals:         0      10      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6439 ;;Total ram usage:       35 bytes
  6440 ;; Hardware stack levels used:    1
  6441 ;; Hardware stack levels required when called:    5
  6442 ;; This function calls:
  6443 ;;		___awdiv
  6444 ;;		___fladd
  6445 ;;		___flge
  6446 ;;		___flmul
  6447 ;;		___flneg
  6448 ;;		___flsub
  6449 ;;		___fltol
  6450 ;;		___lldiv
  6451 ;;		___llmod
  6452 ;;		___wmul
  6453 ;;		___xxtofl
  6454 ;;		__div_to_l_
  6455 ;;		__tdiv_to_l_
  6456 ;;		_fround
  6457 ;;		_isdigit
  6458 ;;		_scale
  6459 ;; This function is called by:
  6460 ;;		_LCD_Handler
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           	psect	text8
  6465  010B06                     __ptext8:
  6466                           	opt stack 0
  6467  010B06                     _sprintf:
  6468                           	opt stack 24
  6469                           
  6470                           ;doprnt.c: 494: va_list ap;
  6471                           ;doprnt.c: 499: signed char c;
  6472                           ;doprnt.c: 501: int width;
  6473                           ;doprnt.c: 504: int prec;
  6474                           ;doprnt.c: 508: unsigned short flag;
  6475                           ;doprnt.c: 515: char d;
  6476                           ;doprnt.c: 516: double fval;
  6477                           ;doprnt.c: 517: int exp;
  6478                           ;doprnt.c: 523: union {
  6479                           ;doprnt.c: 524: unsigned long vd;
  6480                           ;doprnt.c: 525: double integ;
  6481                           ;doprnt.c: 526: } tmpval;
  6482                           ;doprnt.c: 528: unsigned long val;
  6483                           ;doprnt.c: 529: unsigned len;
  6484                           ;doprnt.c: 530: const char * cp;
  6485                           ;doprnt.c: 533: *ap = __va_start();
  6486                           
  6487                           ;incstack = 0
  6488  010B06  0EC4               	movlw	low (?_sprintf+4)
  6489  010B08  0101               	movlb	1	; () banked
  6490  010B0A  6F34               	movwf	sprintf@ap& (0+255),b
  6491  010B0C  0E00               	movlw	high (?_sprintf+4)
  6492  010B0E  0101               	movlb	1	; () banked
  6493  010B10  6F35               	movwf	(sprintf@ap+1)& (0+255),b
  6494                           
  6495                           ;doprnt.c: 536: while(c = *f++) {
  6496  010B12  EFB5  F089         	goto	l8740
  6497  010B16                     l8542:
  6498                           
  6499                           ; BSR set to: 1
  6500                           ;doprnt.c: 538: if(c != '%')
  6501  010B16  0E25               	movlw	37
  6502  010B18  0101               	movlb	1	; () banked
  6503  010B1A  1948               	xorwf	sprintf@c& (0+255),w,b
  6504  010B1C  B4D8               	btfsc	status,2,c
  6505  010B1E  D008               	goto	l8548
  6506                           
  6507                           ; BSR set to: 1
  6508                           ;doprnt.c: 540: {
  6509                           ;doprnt.c: 541: ((*sp++ = (c)));
  6510  010B20  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  6511  010B24  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  6512  010B28  C148  FFDF         	movff	sprintf@c,indf2
  6513  010B2C  EFB2  F089         	goto	l8738
  6514  010B30                     l8548:
  6515                           
  6516                           ;doprnt.c: 543: }
  6517                           ;doprnt.c: 548: flag = 0;
  6518  010B30  0E00               	movlw	0
  6519  010B32  0101               	movlb	1	; () banked
  6520  010B34  6F37               	movwf	(sprintf@flag+1)& (0+255),b
  6521  010B36  0E00               	movlw	0
  6522  010B38  6F36               	movwf	sprintf@flag& (0+255),b
  6523                           
  6524                           ; BSR set to: 1
  6525                           ;doprnt.c: 611: if(*f == '.') {
  6526  010B3A  C0C2  FFF6         	movff	sprintf@f,tblptrl
  6527  010B3E  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  6528  010B42                     	if	0	;tblptru may be non-zero
  6529  010B42                     	endif
  6530  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6531  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  6532  010B44  6EF8               	movwf	tblptru,c
  6533  010B46                     	endif
  6534  010B46  0008               	tblrd		*
  6535  010B48  50F5               	movf	tablat,w,c
  6536  010B4A  0A2E               	xorlw	46
  6537  010B4C  A4D8               	btfss	status,2,c
  6538  010B4E  D03D               	goto	l8562
  6539                           
  6540                           ; BSR set to: 1
  6541                           ;doprnt.c: 612: flag |= 0x4000;
  6542  010B50  0101               	movlb	1	; () banked
  6543  010B52  8D37               	bsf	(sprintf@flag+1)& (0+255),6,b
  6544                           
  6545                           ;doprnt.c: 613: f++;
  6546  010B54  0100               	movlb	0	; () banked
  6547  010B56  4BC2               	infsnz	sprintf@f& (0+255),f,b
  6548  010B58  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  6549                           
  6550                           ; BSR set to: 0
  6551                           ;doprnt.c: 620: {
  6552                           ;doprnt.c: 621: prec = 0;
  6553  010B5A  0E00               	movlw	0
  6554  010B5C  0101               	movlb	1	; () banked
  6555  010B5E  6F43               	movwf	(sprintf@prec+1)& (0+255),b
  6556  010B60  0E00               	movlw	0
  6557  010B62  6F42               	movwf	sprintf@prec& (0+255),b
  6558                           
  6559                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6560  010B64  D025               	goto	l8560
  6561  010B66                     l8556:
  6562                           
  6563                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6564  010B66  C142  F06E         	movff	sprintf@prec,___wmul@multiplier
  6565  010B6A  C143  F06F         	movff	sprintf@prec+1,___wmul@multiplier+1
  6566  010B6E  0E00               	movlw	0
  6567  010B70  0100               	movlb	0	; () banked
  6568  010B72  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6569  010B74  0E0A               	movlw	10
  6570  010B76  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6571  010B78  EC30  F0B0         	call	___wmul	;wreg free
  6572  010B7C  C0C2  FFF6         	movff	sprintf@f,tblptrl
  6573  010B80  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  6574  010B84                     	if	0	;tblptru may be non-zero
  6575  010B84                     	endif
  6576  010B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6577  010B84  0E00               	movlw	low (__mediumconst shr (0+16))
  6578  010B86  6EF8               	movwf	tblptru,c
  6579  010B88                     	endif
  6580  010B88  0008               	tblrd		*
  6581  010B8A  50F5               	movf	tablat,w,c
  6582  010B8C  0100               	movlb	0	; () banked
  6583  010B8E  276E               	addwf	?___wmul& (0+255),f,b
  6584  010B90  0E00               	movlw	0
  6585  010B92  0100               	movlb	0	; () banked
  6586  010B94  236F               	addwfc	(?___wmul+1)& (0+255),f,b
  6587  010B96  0ED0               	movlw	208
  6588  010B98  0100               	movlb	0	; () banked
  6589  010B9A  256E               	addwf	?___wmul& (0+255),w,b
  6590  010B9C  0101               	movlb	1	; () banked
  6591  010B9E  6F42               	movwf	sprintf@prec& (0+255),b
  6592  010BA0  0EFF               	movlw	255
  6593  010BA2  0100               	movlb	0	; () banked
  6594  010BA4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6595  010BA6  0101               	movlb	1	; () banked
  6596  010BA8  6F43               	movwf	(sprintf@prec+1)& (0+255),b
  6597                           
  6598                           ; BSR set to: 1
  6599  010BAA  0100               	movlb	0	; () banked
  6600  010BAC  4BC2               	infsnz	sprintf@f& (0+255),f,b
  6601  010BAE  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  6602  010BB0                     l8560:
  6603  010BB0  C0C2  FFF6         	movff	sprintf@f,tblptrl
  6604  010BB4  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  6605  010BB8                     	if	0	;tblptru may be non-zero
  6606  010BB8                     	endif
  6607  010BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6608  010BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  6609  010BBA  6EF8               	movwf	tblptru,c
  6610  010BBC                     	endif
  6611  010BBC  0008               	tblrd		*
  6612  010BBE  50F5               	movf	tablat,w,c
  6613  010BC0  EC97  F0B0         	call	_isdigit
  6614  010BC4  A0D8               	btfss	status,0,c
  6615  010BC6  D00C               	goto	l8570
  6616  010BC8  D7CE               	goto	l8556
  6617  010BCA                     l8562:
  6618                           
  6619                           ;doprnt.c: 626: prec = 0;
  6620  010BCA  0E00               	movlw	0
  6621  010BCC  0101               	movlb	1	; () banked
  6622  010BCE  6F43               	movwf	(sprintf@prec+1)& (0+255),b
  6623  010BD0  0E00               	movlw	0
  6624  010BD2  6F42               	movwf	sprintf@prec& (0+255),b
  6625                           
  6626                           ; BSR set to: 1
  6627                           ;doprnt.c: 628: flag |= 0x1000;
  6628  010BD4  0101               	movlb	1	; () banked
  6629  010BD6  8937               	bsf	(sprintf@flag+1)& (0+255),4,b
  6630                           
  6631                           ; BSR set to: 1
  6632                           ;doprnt.c: 630: }
  6633                           ;doprnt.c: 635: switch(c = *f++) {
  6634  010BD8  D003               	goto	l8570
  6635  010BDA                     l8566:
  6636                           
  6637                           ; BSR set to: 1
  6638                           ;doprnt.c: 663: flag |= 0x400;
  6639  010BDA  0101               	movlb	1	; () banked
  6640  010BDC  8537               	bsf	(sprintf@flag+1)& (0+255),2,b
  6641                           
  6642                           ;doprnt.c: 664: break;
  6643  010BDE  D015               	goto	l8572
  6644  010BE0                     l8570:
  6645  010BE0  C0C2  FFF6         	movff	sprintf@f,tblptrl
  6646  010BE4  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  6647  010BE8  0100               	movlb	0	; () banked
  6648  010BEA  4BC2               	infsnz	sprintf@f& (0+255),f,b
  6649  010BEC  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  6650  010BEE                     	if	0	;tblptru may be non-zero
  6651  010BEE                     	endif
  6652  010BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6653  010BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  6654  010BF0  6EF8               	movwf	tblptru,c
  6655  010BF2                     	endif
  6656  010BF2  0008               	tblrd		*
  6657  010BF4  CFF5 F148          	movff	tablat,sprintf@c
  6658  010BF8  0101               	movlb	1	; () banked
  6659  010BFA  5148               	movf	sprintf@c& (0+255),w,b
  6660                           
  6661                           ; Switch size 1, requested type "space"
  6662                           ; Number of cases is 2, Range of values is 0 to 102
  6663                           ; switch strategies available:
  6664                           ; Name         Instructions Cycles
  6665                           ; simple_byte            7     4 (average)
  6666                           ;	Chosen strategy is simple_byte
  6667  010BFC  0A00               	xorlw	0	; case 0
  6668  010BFE  B4D8               	btfsc	status,2,c
  6669  010C00  D3C5               	goto	l8742
  6670  010C02  0A66               	xorlw	102	; case 102
  6671  010C04  B4D8               	btfsc	status,2,c
  6672  010C06  D7E9               	goto	l8566
  6673  010C08  D3B0               	goto	l8740
  6674  010C0A                     l8572:
  6675                           
  6676                           ; BSR set to: 1
  6677                           ;doprnt.c: 825: if(flag & (0x700)) {
  6678  010C0A  0E07               	movlw	7
  6679  010C0C  0101               	movlb	1	; () banked
  6680  010C0E  1537               	andwf	(sprintf@flag+1)& (0+255),w,b
  6681  010C10  B4D8               	btfsc	status,2,c
  6682  010C12  D353               	goto	l8720
  6683                           
  6684                           ; BSR set to: 1
  6685                           ;doprnt.c: 827: if(flag & 0x1000)
  6686  010C14  0101               	movlb	1	; () banked
  6687  010C16  A937               	btfss	(sprintf@flag+1)& (0+255),4,b
  6688  010C18  D005               	goto	l8578
  6689                           
  6690                           ; BSR set to: 1
  6691                           ;doprnt.c: 829: prec = 6;
  6692  010C1A  0E00               	movlw	0
  6693  010C1C  0101               	movlb	1	; () banked
  6694  010C1E  6F43               	movwf	(sprintf@prec+1)& (0+255),b
  6695  010C20  0E06               	movlw	6
  6696  010C22  6F42               	movwf	sprintf@prec& (0+255),b
  6697  010C24                     l8578:
  6698                           
  6699                           ; BSR set to: 1
  6700                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6701  010C24  C134  FFD9         	movff	sprintf@ap,fsr2l
  6702  010C28  C135  FFDA         	movff	sprintf@ap+1,fsr2h
  6703  010C2C  CFDE F144          	movff	postinc2,sprintf@fval
  6704  010C30  CFDE F145          	movff	postinc2,sprintf@fval+1
  6705  010C34  CFDE F146          	movff	postinc2,sprintf@fval+2
  6706  010C38  CFDE F147          	movff	postinc2,sprintf@fval+3
  6707                           
  6708                           ; BSR set to: 1
  6709  010C3C  0E04               	movlw	4
  6710  010C3E  0101               	movlb	1	; () banked
  6711  010C40  2734               	addwf	sprintf@ap& (0+255),f,b
  6712  010C42  0E00               	movlw	0
  6713  010C44  2335               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6714                           
  6715                           ; BSR set to: 1
  6716                           ;doprnt.c: 831: if(fval < 0.0) {
  6717  010C46  0101               	movlb	1	; () banked
  6718  010C48  AF47               	btfss	(sprintf@fval+3)& (0+255),7,b
  6719  010C4A  D015               	goto	l8588
  6720                           
  6721                           ; BSR set to: 1
  6722                           ;doprnt.c: 832: fval = -fval;
  6723  010C4C  C144  F095         	movff	sprintf@fval,___flneg@f1
  6724  010C50  C145  F096         	movff	sprintf@fval+1,___flneg@f1+1
  6725  010C54  C146  F097         	movff	sprintf@fval+2,___flneg@f1+2
  6726  010C58  C147  F098         	movff	sprintf@fval+3,___flneg@f1+3
  6727  010C5C  EC14  F0B0         	call	___flneg	;wreg free
  6728  010C60  C095  F144         	movff	?___flneg,sprintf@fval
  6729  010C64  C096  F145         	movff	?___flneg+1,sprintf@fval+1
  6730  010C68  C097  F146         	movff	?___flneg+2,sprintf@fval+2
  6731  010C6C  C098  F147         	movff	?___flneg+3,sprintf@fval+3
  6732                           
  6733                           ;doprnt.c: 833: flag |= 0x03;
  6734  010C70  0E03               	movlw	3
  6735  010C72  0101               	movlb	1	; () banked
  6736  010C74  1336               	iorwf	sprintf@flag& (0+255),f,b
  6737  010C76                     l8588:
  6738                           
  6739                           ; BSR set to: 1
  6740                           ;doprnt.c: 834: }
  6741                           ;doprnt.c: 835: exp = 0;
  6742  010C76  0E00               	movlw	0
  6743  010C78  0101               	movlb	1	; () banked
  6744  010C7A  6F3D               	movwf	(sprintf@exp+1)& (0+255),b
  6745  010C7C  0E00               	movlw	0
  6746  010C7E  6F3C               	movwf	sprintf@exp& (0+255),b
  6747                           
  6748                           ; BSR set to: 1
  6749                           ;doprnt.c: 836: if( fval!=0) {
  6750  010C80  0101               	movlb	1	; () banked
  6751  010C82  5144               	movf	sprintf@fval& (0+255),w,b
  6752  010C84  0101               	movlb	1	; () banked
  6753  010C86  1145               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6754  010C88  0101               	movlb	1	; () banked
  6755  010C8A  1146               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6756  010C8C  0101               	movlb	1	; () banked
  6757  010C8E  1147               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6758  010C90  B4D8               	btfsc	status,2,c
  6759  010C92  D08E               	goto	l8616
  6760                           
  6761                           ; BSR set to: 1
  6762                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  6763  010C94  0101               	movlb	1	; () banked
  6764  010C96  3546               	rlcf	(sprintf@fval+2)& (0+255),w,b
  6765  010C98  3547               	rlcf	(sprintf@fval+3)& (0+255),w,b
  6766  010C9A  0F82               	addlw	130
  6767  010C9C  0101               	movlb	1	; () banked
  6768  010C9E  6F3C               	movwf	sprintf@exp& (0+255),b
  6769  010CA0  0101               	movlb	1	; () banked
  6770  010CA2  6B3D               	clrf	(sprintf@exp+1)& (0+255),b
  6771  010CA4  0EFF               	movlw	255
  6772  010CA6  233D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6773                           
  6774                           ; BSR set to: 1
  6775                           ;doprnt.c: 838: exp--;
  6776  010CA8  0101               	movlb	1	; () banked
  6777  010CAA  073C               	decf	sprintf@exp& (0+255),f,b
  6778  010CAC  A0D8               	btfss	status,0,c
  6779  010CAE  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  6780                           
  6781                           ; BSR set to: 1
  6782                           ;doprnt.c: 839: exp *= 3;
  6783  010CB0  C13C  F06E         	movff	sprintf@exp,___wmul@multiplier
  6784  010CB4  C13D  F06F         	movff	sprintf@exp+1,___wmul@multiplier+1
  6785  010CB8  0E00               	movlw	0
  6786  010CBA  0100               	movlb	0	; () banked
  6787  010CBC  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6788  010CBE  0E03               	movlw	3
  6789  010CC0  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6790  010CC2  EC30  F0B0         	call	___wmul	;wreg free
  6791  010CC6  C06E  F13C         	movff	?___wmul,sprintf@exp
  6792  010CCA  C06F  F13D         	movff	?___wmul+1,sprintf@exp+1
  6793                           
  6794                           ;doprnt.c: 840: exp /= 10;
  6795  010CCE  C13C  F074         	movff	sprintf@exp,___awdiv@dividend
  6796  010CD2  C13D  F075         	movff	sprintf@exp+1,___awdiv@dividend+1
  6797  010CD6  0E00               	movlw	0
  6798  010CD8  0100               	movlb	0	; () banked
  6799  010CDA  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  6800  010CDC  0E0A               	movlw	10
  6801  010CDE  6F76               	movwf	___awdiv@divisor& (0+255),b
  6802  010CE0  ECA8  F0AB         	call	___awdiv	;wreg free
  6803  010CE4  C074  F13C         	movff	?___awdiv,sprintf@exp
  6804  010CE8  C075  F13D         	movff	?___awdiv+1,sprintf@exp+1
  6805                           
  6806                           ;doprnt.c: 841: if(exp < 0)
  6807  010CEC  0101               	movlb	1	; () banked
  6808  010CEE  AF3D               	btfss	(sprintf@exp+1)& (0+255),7,b
  6809  010CF0  D004               	goto	l8604
  6810                           
  6811                           ; BSR set to: 1
  6812                           ;doprnt.c: 842: exp--;
  6813  010CF2  0101               	movlb	1	; () banked
  6814  010CF4  073C               	decf	sprintf@exp& (0+255),f,b
  6815  010CF6  A0D8               	btfss	status,0,c
  6816  010CF8  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  6817  010CFA                     l8604:
  6818                           
  6819                           ; BSR set to: 1
  6820                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6821  010CFA  0101               	movlb	1	; () banked
  6822  010CFC  513C               	movf	sprintf@exp& (0+255),w,b
  6823  010CFE  0800               	sublw	0
  6824  010D00  EC68  F094         	call	_scale
  6825  010D04  C095  F13E         	movff	?_scale,sprintf@tmpval
  6826  010D08  C096  F13F         	movff	?_scale+1,sprintf@tmpval+1
  6827  010D0C  C097  F140         	movff	?_scale+2,sprintf@tmpval+2
  6828  010D10  C098  F141         	movff	?_scale+3,sprintf@tmpval+3
  6829                           
  6830                           ;doprnt.c: 847: tmpval.integ *= fval;
  6831  010D14  C13E  F07C         	movff	sprintf@tmpval,___flmul@b
  6832  010D18  C13F  F07D         	movff	sprintf@tmpval+1,___flmul@b+1
  6833  010D1C  C140  F07E         	movff	sprintf@tmpval+2,___flmul@b+2
  6834  010D20  C141  F07F         	movff	sprintf@tmpval+3,___flmul@b+3
  6835  010D24  C144  F080         	movff	sprintf@fval,___flmul@a
  6836  010D28  C145  F081         	movff	sprintf@fval+1,___flmul@a+1
  6837  010D2C  C146  F082         	movff	sprintf@fval+2,___flmul@a+2
  6838  010D30  C147  F083         	movff	sprintf@fval+3,___flmul@a+3
  6839  010D34  ECCF  F09B         	call	___flmul	;wreg free
  6840  010D38  C07C  F13E         	movff	?___flmul,sprintf@tmpval
  6841  010D3C  C07D  F13F         	movff	?___flmul+1,sprintf@tmpval+1
  6842  010D40  C07E  F140         	movff	?___flmul+2,sprintf@tmpval+2
  6843  010D44  C07F  F141         	movff	?___flmul+3,sprintf@tmpval+3
  6844                           
  6845                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6846  010D48  C13E  F06E         	movff	sprintf@tmpval,___flge@ff1
  6847  010D4C  C13F  F06F         	movff	sprintf@tmpval+1,___flge@ff1+1
  6848  010D50  C140  F070         	movff	sprintf@tmpval+2,___flge@ff1+2
  6849  010D54  C141  F071         	movff	sprintf@tmpval+3,___flge@ff1+3
  6850  010D58  0E00               	movlw	0
  6851  010D5A  0100               	movlb	0	; () banked
  6852  010D5C  6F72               	movwf	___flge@ff2& (0+255),b
  6853  010D5E  0E00               	movlw	0
  6854  010D60  6F73               	movwf	(___flge@ff2+1)& (0+255),b
  6855  010D62  0E80               	movlw	128
  6856  010D64  6F74               	movwf	(___flge@ff2+2)& (0+255),b
  6857  010D66  0E3F               	movlw	63
  6858  010D68  6F75               	movwf	(___flge@ff2+3)& (0+255),b
  6859  010D6A  EC69  F0A8         	call	___flge	;wreg free
  6860  010D6E  0100               	movlb	0	; () banked
  6861  010D70  B0D8               	btfsc	status,0,c
  6862  010D72  D005               	goto	l8612
  6863                           
  6864                           ; BSR set to: 0
  6865                           ;doprnt.c: 849: exp--;
  6866  010D74  0101               	movlb	1	; () banked
  6867  010D76  073C               	decf	sprintf@exp& (0+255),f,b
  6868  010D78  A0D8               	btfss	status,0,c
  6869  010D7A  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  6870  010D7C  D019               	goto	l8616
  6871  010D7E                     l8612:
  6872                           
  6873                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6874  010D7E  C13E  F06E         	movff	sprintf@tmpval,___flge@ff1
  6875  010D82  C13F  F06F         	movff	sprintf@tmpval+1,___flge@ff1+1
  6876  010D86  C140  F070         	movff	sprintf@tmpval+2,___flge@ff1+2
  6877  010D8A  C141  F071         	movff	sprintf@tmpval+3,___flge@ff1+3
  6878  010D8E  0E00               	movlw	0
  6879  010D90  0100               	movlb	0	; () banked
  6880  010D92  6F72               	movwf	___flge@ff2& (0+255),b
  6881  010D94  0E00               	movlw	0
  6882  010D96  6F73               	movwf	(___flge@ff2+1)& (0+255),b
  6883  010D98  0E20               	movlw	32
  6884  010D9A  6F74               	movwf	(___flge@ff2+2)& (0+255),b
  6885  010D9C  0E41               	movlw	65
  6886  010D9E  6F75               	movwf	(___flge@ff2+3)& (0+255),b
  6887  010DA0  EC69  F0A8         	call	___flge	;wreg free
  6888  010DA4  0100               	movlb	0	; () banked
  6889  010DA6  A0D8               	btfss	status,0,c
  6890  010DA8  D003               	goto	l8616
  6891                           
  6892                           ; BSR set to: 0
  6893                           ;doprnt.c: 851: exp++;
  6894  010DAA  0101               	movlb	1	; () banked
  6895  010DAC  4B3C               	infsnz	sprintf@exp& (0+255),f,b
  6896  010DAE  2B3D               	incf	(sprintf@exp+1)& (0+255),f,b
  6897  010DB0                     l8616:
  6898                           
  6899                           ;doprnt.c: 852: }
  6900                           ;doprnt.c: 1112: if(prec <= 12)
  6901  010DB0  0101               	movlb	1	; () banked
  6902  010DB2  BF43               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6903  010DB4  D008               	goto	l8618
  6904  010DB6  0101               	movlb	1	; () banked
  6905  010DB8  5143               	movf	(sprintf@prec+1)& (0+255),w,b
  6906  010DBA  E123               	bnz	l8620
  6907  010DBC  0E0D               	movlw	13
  6908  010DBE  0101               	movlb	1	; () banked
  6909  010DC0  5D42               	subwf	sprintf@prec& (0+255),w,b
  6910  010DC2  B0D8               	btfsc	status,0,c
  6911  010DC4  D01E               	goto	l8620
  6912  010DC6                     l8618:
  6913                           
  6914                           ; BSR set to: 1
  6915                           ;doprnt.c: 1113: fval += fround(prec);
  6916  010DC6  C144  F0A2         	movff	sprintf@fval,___fladd@b
  6917  010DCA  C145  F0A3         	movff	sprintf@fval+1,___fladd@b+1
  6918  010DCE  C146  F0A4         	movff	sprintf@fval+2,___fladd@b+2
  6919  010DD2  C147  F0A5         	movff	sprintf@fval+3,___fladd@b+3
  6920  010DD6  0101               	movlb	1	; () banked
  6921  010DD8  5142               	movf	sprintf@prec& (0+255),w,b
  6922  010DDA  ECD1  F0A1         	call	_fround
  6923  010DDE  C095  F0A6         	movff	?_fround,___fladd@a
  6924  010DE2  C096  F0A7         	movff	?_fround+1,___fladd@a+1
  6925  010DE6  C097  F0A8         	movff	?_fround+2,___fladd@a+2
  6926  010DEA  C098  F0A9         	movff	?_fround+3,___fladd@a+3
  6927  010DEE  EC7B  F099         	call	___fladd	;wreg free
  6928  010DF2  C0A2  F144         	movff	?___fladd,sprintf@fval
  6929  010DF6  C0A3  F145         	movff	?___fladd+1,sprintf@fval+1
  6930  010DFA  C0A4  F146         	movff	?___fladd+2,sprintf@fval+2
  6931  010DFE  C0A5  F147         	movff	?___fladd+3,sprintf@fval+3
  6932  010E02                     l8620:
  6933                           
  6934                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6935  010E02  0101               	movlb	1	; () banked
  6936  010E04  BF3D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6937  010E06  D008               	goto	l8622
  6938  010E08  0101               	movlb	1	; () banked
  6939  010E0A  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  6940  010E0C  E12E               	bnz	l8628
  6941  010E0E  0E0A               	movlw	10
  6942  010E10  0101               	movlb	1	; () banked
  6943  010E12  5D3C               	subwf	sprintf@exp& (0+255),w,b
  6944  010E14  B0D8               	btfsc	status,0,c
  6945  010E16  D029               	goto	l8628
  6946  010E18                     l8622:
  6947                           
  6948                           ; BSR set to: 1
  6949  010E18  0101               	movlb	1	; () banked
  6950  010E1A  5144               	movf	sprintf@fval& (0+255),w,b
  6951  010E1C  0101               	movlb	1	; () banked
  6952  010E1E  1145               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6953  010E20  0101               	movlb	1	; () banked
  6954  010E22  1146               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6955  010E24  0101               	movlb	1	; () banked
  6956  010E26  1147               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6957  010E28  B4D8               	btfsc	status,2,c
  6958  010E2A  D06D               	goto	l8642
  6959                           
  6960                           ; BSR set to: 1
  6961  010E2C  C144  F0B6         	movff	sprintf@fval,___fltol@f1
  6962  010E30  C145  F0B7         	movff	sprintf@fval+1,___fltol@f1+1
  6963  010E34  C146  F0B8         	movff	sprintf@fval+2,___fltol@f1+2
  6964  010E38  C147  F0B9         	movff	sprintf@fval+3,___fltol@f1+3
  6965  010E3C  ECAC  F0AA         	call	___fltol	;wreg free
  6966  010E40  0100               	movlb	0	; () banked
  6967  010E42  51B6               	movf	?___fltol& (0+255),w,b
  6968  010E44  0100               	movlb	0	; () banked
  6969  010E46  11B7               	iorwf	(?___fltol+1)& (0+255),w,b
  6970  010E48  0100               	movlb	0	; () banked
  6971  010E4A  11B8               	iorwf	(?___fltol+2)& (0+255),w,b
  6972  010E4C  0100               	movlb	0	; () banked
  6973  010E4E  11B9               	iorwf	(?___fltol+3)& (0+255),w,b
  6974  010E50  A4D8               	btfss	status,2,c
  6975  010E52  D059               	goto	l8642
  6976                           
  6977                           ; BSR set to: 0
  6978  010E54  0101               	movlb	1	; () banked
  6979  010E56  BF3D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6980  010E58  D056               	goto	l8642
  6981  010E5A  0101               	movlb	1	; () banked
  6982  010E5C  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  6983  010E5E  E105               	bnz	l8628
  6984  010E60  0E02               	movlw	2
  6985  010E62  0101               	movlb	1	; () banked
  6986  010E64  5D3C               	subwf	sprintf@exp& (0+255),w,b
  6987  010E66  A0D8               	btfss	status,0,c
  6988  010E68  D04E               	goto	l8642
  6989  010E6A                     l8628:
  6990                           
  6991                           ; BSR set to: 1
  6992                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6993  010E6A  C13E  F06E         	movff	sprintf@tmpval,___flge@ff1
  6994  010E6E  C13F  F06F         	movff	sprintf@tmpval+1,___flge@ff1+1
  6995  010E72  C140  F070         	movff	sprintf@tmpval+2,___flge@ff1+2
  6996  010E76  C141  F071         	movff	sprintf@tmpval+3,___flge@ff1+3
  6997  010E7A  0E5F               	movlw	95
  6998  010E7C  0100               	movlb	0	; () banked
  6999  010E7E  6F72               	movwf	___flge@ff2& (0+255),b
  7000  010E80  0E70               	movlw	112
  7001  010E82  6F73               	movwf	(___flge@ff2+1)& (0+255),b
  7002  010E84  0E89               	movlw	137
  7003  010E86  6F74               	movwf	(___flge@ff2+2)& (0+255),b
  7004  010E88  0E40               	movlw	64
  7005  010E8A  6F75               	movwf	(___flge@ff2+3)& (0+255),b
  7006  010E8C  EC69  F0A8         	call	___flge	;wreg free
  7007  010E90  0100               	movlb	0	; () banked
  7008  010E92  B0D8               	btfsc	status,0,c
  7009  010E94  D003               	goto	l8632
  7010                           
  7011                           ; BSR set to: 0
  7012                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7013  010E96  0101               	movlb	1	; () banked
  7014  010E98  0EF7               	movlw	247
  7015  010E9A  D002               	goto	L5
  7016  010E9C                     l8632:
  7017                           
  7018                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7019  010E9C  0101               	movlb	1	; () banked
  7020  010E9E  0EF8               	movlw	248
  7021  010EA0                     L5:
  7022  010EA0  273C               	addwf	sprintf@exp& (0+255),f,b
  7023  010EA2  0EFF               	movlw	255
  7024  010EA4  233D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7025                           
  7026                           ; BSR set to: 1
  7027                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7028                           
  7029                           ; BSR set to: 1
  7030  010EA6  0101               	movlb	1	; () banked
  7031  010EA8  513C               	movf	sprintf@exp& (0+255),w,b
  7032  010EAA  EC68  F094         	call	_scale
  7033  010EAE  C095  F13E         	movff	?_scale,sprintf@tmpval
  7034  010EB2  C096  F13F         	movff	?_scale+1,sprintf@tmpval+1
  7035  010EB6  C097  F140         	movff	?_scale+2,sprintf@tmpval+2
  7036  010EBA  C098  F141         	movff	?_scale+3,sprintf@tmpval+3
  7037  010EBE  C144  F06E         	movff	sprintf@fval,__div_to_l_@f1
  7038  010EC2  C145  F06F         	movff	sprintf@fval+1,__div_to_l_@f1+1
  7039  010EC6  C146  F070         	movff	sprintf@fval+2,__div_to_l_@f1+2
  7040  010ECA  C147  F071         	movff	sprintf@fval+3,__div_to_l_@f1+3
  7041  010ECE  C13E  F072         	movff	sprintf@tmpval,__div_to_l_@f2
  7042  010ED2  C13F  F073         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  7043  010ED6  C140  F074         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  7044  010EDA  C141  F075         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  7045  010EDE  EC31  F0A9         	call	__div_to_l_	;wreg free
  7046  010EE2  C06E  F138         	movff	?__div_to_l_,sprintf@val
  7047  010EE6  C06F  F139         	movff	?__div_to_l_+1,sprintf@val+1
  7048  010EEA  C070  F13A         	movff	?__div_to_l_+2,sprintf@val+2
  7049  010EEE  C071  F13B         	movff	?__div_to_l_+3,sprintf@val+3
  7050                           
  7051                           ;doprnt.c: 1129: fval = 0.0;
  7052  010EF2  0E00               	movlw	0
  7053  010EF4  0101               	movlb	1	; () banked
  7054  010EF6  6F44               	movwf	sprintf@fval& (0+255),b
  7055  010EF8  0E00               	movlw	0
  7056  010EFA  6F45               	movwf	(sprintf@fval+1)& (0+255),b
  7057  010EFC  0E00               	movlw	0
  7058  010EFE  6F46               	movwf	(sprintf@fval+2)& (0+255),b
  7059  010F00  0E00               	movlw	0
  7060  010F02  6F47               	movwf	(sprintf@fval+3)& (0+255),b
  7061                           
  7062                           ;doprnt.c: 1130: } else {
  7063  010F04  D03C               	goto	l8646
  7064  010F06                     l8642:
  7065                           
  7066                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7067  010F06  C144  F0B6         	movff	sprintf@fval,___fltol@f1
  7068  010F0A  C145  F0B7         	movff	sprintf@fval+1,___fltol@f1+1
  7069  010F0E  C146  F0B8         	movff	sprintf@fval+2,___fltol@f1+2
  7070  010F12  C147  F0B9         	movff	sprintf@fval+3,___fltol@f1+3
  7071  010F16  ECAC  F0AA         	call	___fltol	;wreg free
  7072  010F1A  C0B6  F138         	movff	?___fltol,sprintf@val
  7073  010F1E  C0B7  F139         	movff	?___fltol+1,sprintf@val+1
  7074  010F22  C0B8  F13A         	movff	?___fltol+2,sprintf@val+2
  7075  010F26  C0B9  F13B         	movff	?___fltol+3,sprintf@val+3
  7076                           
  7077                           ;doprnt.c: 1132: fval -= (double)val;
  7078  010F2A  C144  F0B6         	movff	sprintf@fval,___flsub@b
  7079  010F2E  C145  F0B7         	movff	sprintf@fval+1,___flsub@b+1
  7080  010F32  C146  F0B8         	movff	sprintf@fval+2,___flsub@b+2
  7081  010F36  C147  F0B9         	movff	sprintf@fval+3,___flsub@b+3
  7082  010F3A  C138  F06E         	movff	sprintf@val,___xxtofl@val
  7083  010F3E  C139  F06F         	movff	sprintf@val+1,___xxtofl@val+1
  7084  010F42  C13A  F070         	movff	sprintf@val+2,___xxtofl@val+2
  7085  010F46  C13B  F071         	movff	sprintf@val+3,___xxtofl@val+3
  7086  010F4A  0E00               	movlw	0
  7087  010F4C  EC4C  F0A3         	call	___xxtofl
  7088  010F50  C06E  F0BA         	movff	?___xxtofl,___flsub@a
  7089  010F54  C06F  F0BB         	movff	?___xxtofl+1,___flsub@a+1
  7090  010F58  C070  F0BC         	movff	?___xxtofl+2,___flsub@a+2
  7091  010F5C  C071  F0BD         	movff	?___xxtofl+3,___flsub@a+3
  7092  010F60  EC70  F0AF         	call	___flsub	;wreg free
  7093  010F64  C0B6  F144         	movff	?___flsub,sprintf@fval
  7094  010F68  C0B7  F145         	movff	?___flsub+1,sprintf@fval+1
  7095  010F6C  C0B8  F146         	movff	?___flsub+2,sprintf@fval+2
  7096  010F70  C0B9  F147         	movff	?___flsub+3,sprintf@fval+3
  7097                           
  7098                           ;doprnt.c: 1133: exp = 0;
  7099  010F74  0E00               	movlw	0
  7100  010F76  0101               	movlb	1	; () banked
  7101  010F78  6F3D               	movwf	(sprintf@exp+1)& (0+255),b
  7102  010F7A  0E00               	movlw	0
  7103  010F7C  6F3C               	movwf	sprintf@exp& (0+255),b
  7104  010F7E                     l8646:
  7105                           
  7106                           ; BSR set to: 1
  7107                           ;doprnt.c: 1134: }
  7108                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7109  010F7E  0E01               	movlw	1
  7110  010F80  0101               	movlb	1	; () banked
  7111  010F82  6F48               	movwf	sprintf@c& (0+255),b
  7112  010F84                     l8648:
  7113                           
  7114                           ; BSR set to: 1
  7115  010F84  0E0A               	movlw	10
  7116  010F86  0101               	movlb	1	; () banked
  7117  010F88  1948               	xorwf	sprintf@c& (0+255),w,b
  7118  010F8A  B4D8               	btfsc	status,2,c
  7119  010F8C  D021               	goto	l8660
  7120                           
  7121                           ; BSR set to: 1
  7122                           ;doprnt.c: 1137: if(val < dpowers[c])
  7123                           
  7124                           ; BSR set to: 1
  7125                           
  7126                           ; BSR set to: 1
  7127  010F8E  0101               	movlb	1	; () banked
  7128  010F90  5148               	movf	sprintf@c& (0+255),w,b
  7129  010F92  0D04               	mullw	4
  7130  010F94  0E1D               	movlw	low _dpowers
  7131  010F96  24F3               	addwf	prodl,w,c
  7132  010F98  6EF6               	movwf	tblptrl,c
  7133  010F9A  0EFF               	movlw	high _dpowers
  7134  010F9C  20F4               	addwfc	prodh,w,c
  7135  010F9E  6EF7               	movwf	tblptrh,c
  7136  010FA0                     	if	1	;There are 3 active tblptr bytes
  7137  010FA0  6AF8               	clrf	tblptru,c
  7138  010FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  7139  010FA4  22F8               	addwfc	tblptru,f,c
  7140  010FA6                     	endif
  7141  010FA6  0009               	tblrd		*+
  7142  010FA8  50F5               	movf	tablat,w,c
  7143  010FAA  0101               	movlb	1	; () banked
  7144  010FAC  5D38               	subwf	sprintf@val& (0+255),w,b
  7145  010FAE  0009               	tblrd		*+
  7146  010FB0  50F5               	movf	tablat,w,c
  7147  010FB2  0101               	movlb	1	; () banked
  7148  010FB4  5939               	subwfb	(sprintf@val+1)& (0+255),w,b
  7149  010FB6  0009               	tblrd		*+
  7150  010FB8  50F5               	movf	tablat,w,c
  7151  010FBA  0101               	movlb	1	; () banked
  7152  010FBC  593A               	subwfb	(sprintf@val+2)& (0+255),w,b
  7153  010FBE  0009               	tblrd		*+
  7154  010FC0  50F5               	movf	tablat,w,c
  7155  010FC2  0101               	movlb	1	; () banked
  7156  010FC4  593B               	subwfb	(sprintf@val+3)& (0+255),w,b
  7157  010FC6  A0D8               	btfss	status,0,c
  7158  010FC8  D003               	goto	l8660
  7159                           
  7160                           ; BSR set to: 1
  7161                           
  7162                           ; BSR set to: 1
  7163                           
  7164                           ; BSR set to: 1
  7165                           ;doprnt.c: 1138: break;
  7166  010FCA  0101               	movlb	1	; () banked
  7167  010FCC  2B48               	incf	sprintf@c& (0+255),f,b
  7168  010FCE  D7DA               	goto	l8648
  7169  010FD0                     l8660:
  7170                           
  7171                           ; BSR set to: 1
  7172                           ;doprnt.c: 1175: {
  7173                           ;doprnt.c: 1188: if(flag & 0x03)
  7174  010FD0  0E03               	movlw	3
  7175  010FD2  0101               	movlb	1	; () banked
  7176  010FD4  1536               	andwf	sprintf@flag& (0+255),w,b
  7177  010FD6  0100               	movlb	0	; () banked
  7178  010FD8  6FC8               	movwf	??_sprintf& (0+255),b
  7179  010FDA  0E00               	movlw	0
  7180  010FDC  0101               	movlb	1	; () banked
  7181  010FDE  1537               	andwf	(sprintf@flag+1)& (0+255),w,b
  7182  010FE0  0100               	movlb	0	; () banked
  7183  010FE2  6FC9               	movwf	(??_sprintf+1)& (0+255),b
  7184  010FE4  0100               	movlb	0	; () banked
  7185  010FE6  51C8               	movf	??_sprintf& (0+255),w,b
  7186  010FE8  0100               	movlb	0	; () banked
  7187  010FEA  11C9               	iorwf	(??_sprintf+1)& (0+255),w,b
  7188  010FEC  B4D8               	btfsc	status,2,c
  7189  010FEE  D058               	goto	l8674
  7190                           
  7191                           ; BSR set to: 0
  7192                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7193  010FF0  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  7194  010FF4  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  7195  010FF8  0E2D               	movlw	45
  7196  010FFA  D050               	goto	L6
  7197  010FFC                     l8664:
  7198                           
  7199                           ; BSR set to: 0
  7200  010FFC  0100               	movlb	0	; () banked
  7201  010FFE  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  7202  011000  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  7203                           
  7204                           ; BSR set to: 0
  7205                           ;doprnt.c: 1195: }
  7206                           ;doprnt.c: 1196: while(c--) {
  7207  011002  D04E               	goto	l8674
  7208  011004                     l8666:
  7209                           
  7210                           ;doprnt.c: 1200: {
  7211                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7212  011004  C138  F06E         	movff	sprintf@val,___lldiv@dividend
  7213  011008  C139  F06F         	movff	sprintf@val+1,___lldiv@dividend+1
  7214  01100C  C13A  F070         	movff	sprintf@val+2,___lldiv@dividend+2
  7215  011010  C13B  F071         	movff	sprintf@val+3,___lldiv@dividend+3
  7216  011014  0101               	movlb	1	; () banked
  7217  011016  5148               	movf	sprintf@c& (0+255),w,b
  7218  011018  0D04               	mullw	4
  7219  01101A  0E1D               	movlw	low _dpowers
  7220  01101C  24F3               	addwf	prodl,w,c
  7221  01101E  6EF6               	movwf	tblptrl,c
  7222  011020  0EFF               	movlw	high _dpowers
  7223  011022  20F4               	addwfc	prodh,w,c
  7224  011024  6EF7               	movwf	tblptrh,c
  7225  011026                     	if	1	;There are 3 active tblptr bytes
  7226  011026  6AF8               	clrf	tblptru,c
  7227  011028  0E00               	movlw	low (__mediumconst shr (0+16))
  7228  01102A  22F8               	addwfc	tblptru,f,c
  7229  01102C                     	endif
  7230  01102C  0009               	tblrd		*+
  7231  01102E  CFF5 F072          	movff	tablat,___lldiv@divisor
  7232  011032  0009               	tblrd		*+
  7233  011034  CFF5 F073          	movff	tablat,___lldiv@divisor+1
  7234  011038  0009               	tblrd		*+
  7235  01103A  CFF5 F074          	movff	tablat,___lldiv@divisor+2
  7236  01103E  000A               	tblrd		*-
  7237  011040  CFF5 F075          	movff	tablat,___lldiv@divisor+3
  7238  011044  EC66  F0AC         	call	___lldiv	;wreg free
  7239  011048  C06E  F13E         	movff	?___lldiv,sprintf@tmpval
  7240  01104C  C06F  F13F         	movff	?___lldiv+1,sprintf@tmpval+1
  7241  011050  C070  F140         	movff	?___lldiv+2,sprintf@tmpval+2
  7242  011054  C071  F141         	movff	?___lldiv+3,sprintf@tmpval+3
  7243                           
  7244                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7245  011058  C13E  F06E         	movff	sprintf@tmpval,___llmod@dividend
  7246  01105C  C13F  F06F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7247  011060  C140  F070         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7248  011064  C141  F071         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7249  011068  0E0A               	movlw	10
  7250  01106A  0100               	movlb	0	; () banked
  7251  01106C  6F72               	movwf	___llmod@divisor& (0+255),b
  7252  01106E  0E00               	movlw	0
  7253  011070  6F73               	movwf	(___llmod@divisor+1)& (0+255),b
  7254  011072  0E00               	movlw	0
  7255  011074  6F74               	movwf	(___llmod@divisor+2)& (0+255),b
  7256  011076  0E00               	movlw	0
  7257  011078  6F75               	movwf	(___llmod@divisor+3)& (0+255),b
  7258  01107A  EC1B  F0AE         	call	___llmod	;wreg free
  7259  01107E  C06E  F13E         	movff	?___llmod,sprintf@tmpval
  7260  011082  C06F  F13F         	movff	?___llmod+1,sprintf@tmpval+1
  7261  011086  C070  F140         	movff	?___llmod+2,sprintf@tmpval+2
  7262  01108A  C071  F141         	movff	?___llmod+3,sprintf@tmpval+3
  7263                           
  7264                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7265  01108E  0101               	movlb	1	; () banked
  7266  011090  513E               	movf	sprintf@tmpval& (0+255),w,b
  7267  011092  0F30               	addlw	48
  7268  011094  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  7269  011098  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  7270  01109C                     L6:
  7271  01109C  6EDF               	movwf	indf2,c
  7272  01109E  D7AE               	goto	l8664
  7273  0110A0                     l8674:
  7274                           
  7275                           ; BSR set to: 0
  7276  0110A0  0101               	movlb	1	; () banked
  7277  0110A2  0748               	decf	sprintf@c& (0+255),f,b
  7278  0110A4  0101               	movlb	1	; () banked
  7279  0110A6  2948               	incf	sprintf@c& (0+255),w,b
  7280  0110A8  B4D8               	btfsc	status,2,c
  7281  0110AA  D00E               	goto	l8682
  7282  0110AC  D7AB               	goto	l8666
  7283  0110AE                     l8676:
  7284                           
  7285                           ; BSR set to: 1
  7286                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7287  0110AE  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  7288  0110B2  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  7289  0110B6  0E30               	movlw	48
  7290  0110B8  6EDF               	movwf	indf2,c
  7291                           
  7292                           ; BSR set to: 1
  7293  0110BA  0100               	movlb	0	; () banked
  7294  0110BC  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  7295  0110BE  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  7296                           
  7297                           ; BSR set to: 0
  7298                           ;doprnt.c: 1209: exp--;
  7299  0110C0  0101               	movlb	1	; () banked
  7300  0110C2  073C               	decf	sprintf@exp& (0+255),f,b
  7301  0110C4  A0D8               	btfss	status,0,c
  7302  0110C6  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  7303  0110C8                     l8682:
  7304                           
  7305                           ; BSR set to: 1
  7306  0110C8  0101               	movlb	1	; () banked
  7307  0110CA  BF3D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7308  0110CC  D007               	goto	l8684
  7309  0110CE  0101               	movlb	1	; () banked
  7310  0110D0  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  7311  0110D2  E1ED               	bnz	l8676
  7312  0110D4  0101               	movlb	1	; () banked
  7313  0110D6  053C               	decf	sprintf@exp& (0+255),w,b
  7314  0110D8  B0D8               	btfsc	status,0,c
  7315  0110DA  D7E9               	goto	l8676
  7316  0110DC                     l8684:
  7317                           
  7318                           ; BSR set to: 1
  7319                           ;doprnt.c: 1210: }
  7320                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7321  0110DC  0101               	movlb	1	; () banked
  7322  0110DE  BF43               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7323  0110E0  D00C               	goto	l984
  7324  0110E2  0101               	movlb	1	; () banked
  7325  0110E4  5143               	movf	(sprintf@prec+1)& (0+255),w,b
  7326  0110E6  E105               	bnz	u11670
  7327  0110E8  0E09               	movlw	9
  7328  0110EA  0101               	movlb	1	; () banked
  7329  0110EC  5D42               	subwf	sprintf@prec& (0+255),w,b
  7330  0110EE  A0D8               	btfss	status,0,c
  7331  0110F0  D004               	goto	l984
  7332  0110F2                     u11670:
  7333                           
  7334                           ; BSR set to: 1
  7335                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7336  0110F2  0E08               	movlw	8
  7337  0110F4  0101               	movlb	1	; () banked
  7338  0110F6  6F48               	movwf	sprintf@c& (0+255),b
  7339  0110F8  D002               	goto	l8688
  7340  0110FA                     l984:
  7341                           
  7342                           ; BSR set to: 1
  7343                           ;doprnt.c: 1213: else
  7344                           ;doprnt.c: 1214: c = prec;
  7345  0110FA  C142  F148         	movff	sprintf@prec,sprintf@c
  7346  0110FE                     l8688:
  7347                           
  7348                           ; BSR set to: 1
  7349                           ;doprnt.c: 1215: prec -= c;
  7350  0110FE  0101               	movlb	1	; () banked
  7351  011100  5148               	movf	sprintf@c& (0+255),w,b
  7352  011102  0101               	movlb	1	; () banked
  7353  011104  5F42               	subwf	sprintf@prec& (0+255),f,b
  7354  011106  0E00               	movlw	0
  7355  011108  0101               	movlb	1	; () banked
  7356  01110A  BF48               	btfsc	sprintf@c& (0+255),7,b
  7357  01110C  0EFF               	movlw	255
  7358  01110E  0101               	movlb	1	; () banked
  7359  011110  5B43               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7360                           
  7361                           ; BSR set to: 1
  7362                           ;doprnt.c: 1219: if(c)
  7363  011112  0101               	movlb	1	; () banked
  7364  011114  5148               	movf	sprintf@c& (0+255),w,b
  7365  011116  0101               	movlb	1	; () banked
  7366  011118  B4D8               	btfsc	status,2,c
  7367  01111A  D009               	goto	l8696
  7368                           
  7369                           ; BSR set to: 1
  7370                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7371  01111C  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  7372  011120  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  7373  011124  0E2E               	movlw	46
  7374  011126  6EDF               	movwf	indf2,c
  7375                           
  7376                           ; BSR set to: 1
  7377  011128  0100               	movlb	0	; () banked
  7378  01112A  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  7379  01112C  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  7380  01112E                     l8696:
  7381                           
  7382                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7383  01112E  0101               	movlb	1	; () banked
  7384  011130  5148               	movf	sprintf@c& (0+255),w,b
  7385  011132  EC68  F094         	call	_scale
  7386  011136  C095  F130         	movff	?_scale,_sprintf$4218
  7387  01113A  C096  F131         	movff	?_scale+1,_sprintf$4218+1
  7388  01113E  C097  F132         	movff	?_scale+2,_sprintf$4218+2
  7389  011142  C098  F133         	movff	?_scale+3,_sprintf$4218+3
  7390                           
  7391                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7392  011146  C144  F080         	movff	sprintf@fval,___flmul@a
  7393  01114A  C145  F081         	movff	sprintf@fval+1,___flmul@a+1
  7394  01114E  C146  F082         	movff	sprintf@fval+2,___flmul@a+2
  7395  011152  C147  F083         	movff	sprintf@fval+3,___flmul@a+3
  7396  011156  C130  F07C         	movff	_sprintf$4218,___flmul@b
  7397  01115A  C131  F07D         	movff	_sprintf$4218+1,___flmul@b+1
  7398  01115E  C132  F07E         	movff	_sprintf$4218+2,___flmul@b+2
  7399  011162  C133  F07F         	movff	_sprintf$4218+3,___flmul@b+3
  7400  011166  ECCF  F09B         	call	___flmul	;wreg free
  7401  01116A  C07C  F0B6         	movff	?___flmul,___fltol@f1
  7402  01116E  C07D  F0B7         	movff	?___flmul+1,___fltol@f1+1
  7403  011172  C07E  F0B8         	movff	?___flmul+2,___fltol@f1+2
  7404  011176  C07F  F0B9         	movff	?___flmul+3,___fltol@f1+3
  7405  01117A  ECAC  F0AA         	call	___fltol	;wreg free
  7406  01117E  C0B6  F138         	movff	?___fltol,sprintf@val
  7407  011182  C0B7  F139         	movff	?___fltol+1,sprintf@val+1
  7408  011186  C0B8  F13A         	movff	?___fltol+2,sprintf@val+2
  7409  01118A  C0B9  F13B         	movff	?___fltol+3,sprintf@val+3
  7410                           
  7411                           ;doprnt.c: 1228: while(c--) {
  7412  01118E  D07A               	goto	l8710
  7413  011190                     l8700:
  7414                           
  7415                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7416  011190  C138  F06E         	movff	sprintf@val,___lldiv@dividend
  7417  011194  C139  F06F         	movff	sprintf@val+1,___lldiv@dividend+1
  7418  011198  C13A  F070         	movff	sprintf@val+2,___lldiv@dividend+2
  7419  01119C  C13B  F071         	movff	sprintf@val+3,___lldiv@dividend+3
  7420  0111A0  0101               	movlb	1	; () banked
  7421  0111A2  5148               	movf	sprintf@c& (0+255),w,b
  7422  0111A4  0D04               	mullw	4
  7423  0111A6  0E1D               	movlw	low _dpowers
  7424  0111A8  24F3               	addwf	prodl,w,c
  7425  0111AA  6EF6               	movwf	tblptrl,c
  7426  0111AC  0EFF               	movlw	high _dpowers
  7427  0111AE  20F4               	addwfc	prodh,w,c
  7428  0111B0  6EF7               	movwf	tblptrh,c
  7429  0111B2                     	if	1	;There are 3 active tblptr bytes
  7430  0111B2  6AF8               	clrf	tblptru,c
  7431  0111B4  0E00               	movlw	low (__mediumconst shr (0+16))
  7432  0111B6  22F8               	addwfc	tblptru,f,c
  7433  0111B8                     	endif
  7434  0111B8  0009               	tblrd		*+
  7435  0111BA  CFF5 F072          	movff	tablat,___lldiv@divisor
  7436  0111BE  0009               	tblrd		*+
  7437  0111C0  CFF5 F073          	movff	tablat,___lldiv@divisor+1
  7438  0111C4  0009               	tblrd		*+
  7439  0111C6  CFF5 F074          	movff	tablat,___lldiv@divisor+2
  7440  0111CA  000A               	tblrd		*-
  7441  0111CC  CFF5 F075          	movff	tablat,___lldiv@divisor+3
  7442  0111D0  EC66  F0AC         	call	___lldiv	;wreg free
  7443  0111D4  C06E  F13E         	movff	?___lldiv,sprintf@tmpval
  7444  0111D8  C06F  F13F         	movff	?___lldiv+1,sprintf@tmpval+1
  7445  0111DC  C070  F140         	movff	?___lldiv+2,sprintf@tmpval+2
  7446  0111E0  C071  F141         	movff	?___lldiv+3,sprintf@tmpval+3
  7447                           
  7448                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7449  0111E4  C13E  F06E         	movff	sprintf@tmpval,___llmod@dividend
  7450  0111E8  C13F  F06F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7451  0111EC  C140  F070         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7452  0111F0  C141  F071         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7453  0111F4  0E0A               	movlw	10
  7454  0111F6  0100               	movlb	0	; () banked
  7455  0111F8  6F72               	movwf	___llmod@divisor& (0+255),b
  7456  0111FA  0E00               	movlw	0
  7457  0111FC  6F73               	movwf	(___llmod@divisor+1)& (0+255),b
  7458  0111FE  0E00               	movlw	0
  7459  011200  6F74               	movwf	(___llmod@divisor+2)& (0+255),b
  7460  011202  0E00               	movlw	0
  7461  011204  6F75               	movwf	(___llmod@divisor+3)& (0+255),b
  7462  011206  EC1B  F0AE         	call	___llmod	;wreg free
  7463  01120A  C06E  F13E         	movff	?___llmod,sprintf@tmpval
  7464  01120E  C06F  F13F         	movff	?___llmod+1,sprintf@tmpval+1
  7465  011212  C070  F140         	movff	?___llmod+2,sprintf@tmpval+2
  7466  011216  C071  F141         	movff	?___llmod+3,sprintf@tmpval+3
  7467                           
  7468                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7469  01121A  0101               	movlb	1	; () banked
  7470  01121C  513E               	movf	sprintf@tmpval& (0+255),w,b
  7471  01121E  0F30               	addlw	48
  7472  011220  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  7473  011224  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  7474  011228  6EDF               	movwf	indf2,c
  7475                           
  7476                           ; BSR set to: 1
  7477  01122A  0100               	movlb	0	; () banked
  7478  01122C  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  7479  01122E  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;doprnt.c: 1232: val %= dpowers[c];
  7483  011230  C138  F06E         	movff	sprintf@val,___llmod@dividend
  7484  011234  C139  F06F         	movff	sprintf@val+1,___llmod@dividend+1
  7485  011238  C13A  F070         	movff	sprintf@val+2,___llmod@dividend+2
  7486  01123C  C13B  F071         	movff	sprintf@val+3,___llmod@dividend+3
  7487  011240  0101               	movlb	1	; () banked
  7488  011242  5148               	movf	sprintf@c& (0+255),w,b
  7489  011244  0D04               	mullw	4
  7490  011246  0E1D               	movlw	low _dpowers
  7491  011248  24F3               	addwf	prodl,w,c
  7492  01124A  6EF6               	movwf	tblptrl,c
  7493  01124C  0EFF               	movlw	high _dpowers
  7494  01124E  20F4               	addwfc	prodh,w,c
  7495  011250  6EF7               	movwf	tblptrh,c
  7496  011252                     	if	1	;There are 3 active tblptr bytes
  7497  011252  6AF8               	clrf	tblptru,c
  7498  011254  0E00               	movlw	low (__mediumconst shr (0+16))
  7499  011256  22F8               	addwfc	tblptru,f,c
  7500  011258                     	endif
  7501  011258  0009               	tblrd		*+
  7502  01125A  CFF5 F072          	movff	tablat,___llmod@divisor
  7503  01125E  0009               	tblrd		*+
  7504  011260  CFF5 F073          	movff	tablat,___llmod@divisor+1
  7505  011264  0009               	tblrd		*+
  7506  011266  CFF5 F074          	movff	tablat,___llmod@divisor+2
  7507  01126A  000A               	tblrd		*-
  7508  01126C  CFF5 F075          	movff	tablat,___llmod@divisor+3
  7509  011270  EC1B  F0AE         	call	___llmod	;wreg free
  7510  011274  C06E  F138         	movff	?___llmod,sprintf@val
  7511  011278  C06F  F139         	movff	?___llmod+1,sprintf@val+1
  7512  01127C  C070  F13A         	movff	?___llmod+2,sprintf@val+2
  7513  011280  C071  F13B         	movff	?___llmod+3,sprintf@val+3
  7514  011284                     l8710:
  7515  011284  0101               	movlb	1	; () banked
  7516  011286  0748               	decf	sprintf@c& (0+255),f,b
  7517  011288  0101               	movlb	1	; () banked
  7518  01128A  2948               	incf	sprintf@c& (0+255),w,b
  7519  01128C  B4D8               	btfsc	status,2,c
  7520  01128E  D00E               	goto	l8718
  7521  011290  D77F               	goto	l8700
  7522  011292                     l8712:
  7523                           
  7524                           ; BSR set to: 1
  7525                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7526  011292  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  7527  011296  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  7528  01129A  0E30               	movlw	48
  7529  01129C  6EDF               	movwf	indf2,c
  7530                           
  7531                           ; BSR set to: 1
  7532  01129E  0100               	movlb	0	; () banked
  7533  0112A0  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  7534  0112A2  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;doprnt.c: 1237: prec--;
  7538  0112A4  0101               	movlb	1	; () banked
  7539  0112A6  0742               	decf	sprintf@prec& (0+255),f,b
  7540  0112A8  A0D8               	btfss	status,0,c
  7541  0112AA  0743               	decf	(sprintf@prec+1)& (0+255),f,b
  7542  0112AC                     l8718:
  7543                           
  7544                           ; BSR set to: 1
  7545  0112AC  0101               	movlb	1	; () banked
  7546  0112AE  5142               	movf	sprintf@prec& (0+255),w,b
  7547  0112B0  0101               	movlb	1	; () banked
  7548  0112B2  1143               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7549  0112B4  B4D8               	btfsc	status,2,c
  7550  0112B6  D059               	goto	l8740
  7551  0112B8  D7EC               	goto	l8712
  7552  0112BA                     l8720:
  7553                           
  7554                           ; BSR set to: 1
  7555                           ;doprnt.c: 1246: }
  7556                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7557  0112BA  0101               	movlb	1	; () banked
  7558  0112BC  5142               	movf	sprintf@prec& (0+255),w,b
  7559  0112BE  0101               	movlb	1	; () banked
  7560  0112C0  1143               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7561  0112C2  A4D8               	btfss	status,2,c
  7562  0112C4  D00D               	goto	l8726
  7563                           
  7564                           ; BSR set to: 1
  7565  0112C6  0101               	movlb	1	; () banked
  7566  0112C8  5138               	movf	sprintf@val& (0+255),w,b
  7567  0112CA  0101               	movlb	1	; () banked
  7568  0112CC  1139               	iorwf	(sprintf@val+1)& (0+255),w,b
  7569  0112CE  0101               	movlb	1	; () banked
  7570  0112D0  113A               	iorwf	(sprintf@val+2)& (0+255),w,b
  7571  0112D2  0101               	movlb	1	; () banked
  7572  0112D4  113B               	iorwf	(sprintf@val+3)& (0+255),w,b
  7573  0112D6  A4D8               	btfss	status,2,c
  7574  0112D8  D003               	goto	l8726
  7575                           
  7576                           ; BSR set to: 1
  7577                           ;doprnt.c: 1291: prec++;
  7578  0112DA  0101               	movlb	1	; () banked
  7579  0112DC  4B42               	infsnz	sprintf@prec& (0+255),f,b
  7580  0112DE  2B43               	incf	(sprintf@prec+1)& (0+255),f,b
  7581  0112E0                     l8726:
  7582                           
  7583                           ; BSR set to: 1
  7584                           ;doprnt.c: 1339: if(c < prec)
  7585  0112E0  0E80               	movlw	128
  7586  0112E2  0101               	movlb	1	; () banked
  7587  0112E4  BF48               	btfsc	sprintf@c& (0+255),7,b
  7588  0112E6  0E7F               	movlw	127
  7589  0112E8  0100               	movlb	0	; () banked
  7590  0112EA  6FC8               	movwf	??_sprintf& (0+255),b
  7591  0112EC  0101               	movlb	1	; () banked
  7592  0112EE  5142               	movf	sprintf@prec& (0+255),w,b
  7593  0112F0  0101               	movlb	1	; () banked
  7594  0112F2  5D48               	subwf	sprintf@c& (0+255),w,b
  7595  0112F4  0101               	movlb	1	; () banked
  7596  0112F6  5143               	movf	(sprintf@prec+1)& (0+255),w,b
  7597  0112F8  0A80               	xorlw	128
  7598  0112FA  0100               	movlb	0	; () banked
  7599  0112FC  59C8               	subwfb	??_sprintf& (0+255),w,b
  7600  0112FE  B0D8               	btfsc	status,0,c
  7601  011300  D003               	goto	l8730
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;doprnt.c: 1340: c = prec;
  7605  011302  C142  F148         	movff	sprintf@prec,sprintf@c
  7606  011306  D018               	goto	l8734
  7607  011308                     l8730:
  7608                           
  7609                           ; BSR set to: 0
  7610                           ;doprnt.c: 1341: else if(prec < c)
  7611  011308  0101               	movlb	1	; () banked
  7612  01130A  5143               	movf	(sprintf@prec+1)& (0+255),w,b
  7613  01130C  0A80               	xorlw	128
  7614  01130E  0100               	movlb	0	; () banked
  7615  011310  6FC8               	movwf	??_sprintf& (0+255),b
  7616  011312  0101               	movlb	1	; () banked
  7617  011314  5148               	movf	sprintf@c& (0+255),w,b
  7618  011316  0101               	movlb	1	; () banked
  7619  011318  5D42               	subwf	sprintf@prec& (0+255),w,b
  7620  01131A  0E80               	movlw	128
  7621  01131C  0101               	movlb	1	; () banked
  7622  01131E  BF48               	btfsc	sprintf@c& (0+255),7,b
  7623  011320  0E7F               	movlw	127
  7624  011322  0100               	movlb	0	; () banked
  7625  011324  59C8               	subwfb	??_sprintf& (0+255),w,b
  7626  011326  B0D8               	btfsc	status,0,c
  7627  011328  D007               	goto	l8734
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;doprnt.c: 1342: prec = c;
  7631  01132A  0101               	movlb	1	; () banked
  7632  01132C  5148               	movf	sprintf@c& (0+255),w,b
  7633  01132E  0101               	movlb	1	; () banked
  7634  011330  6F42               	movwf	sprintf@prec& (0+255),b
  7635  011332  6B43               	clrf	(sprintf@prec+1)& (0+255),b
  7636  011334  BF42               	btfsc	sprintf@prec& (0+255),7,b
  7637  011336  0743               	decf	(sprintf@prec+1)& (0+255),f,b
  7638  011338                     l8734:
  7639                           
  7640                           ;doprnt.c: 1422: {
  7641                           ;doprnt.c: 1438: if(flag & 0x03)
  7642  011338  0E03               	movlw	3
  7643  01133A  0101               	movlb	1	; () banked
  7644  01133C  1536               	andwf	sprintf@flag& (0+255),w,b
  7645  01133E  0100               	movlb	0	; () banked
  7646  011340  6FC8               	movwf	??_sprintf& (0+255),b
  7647  011342  0E00               	movlw	0
  7648  011344  0101               	movlb	1	; () banked
  7649  011346  1537               	andwf	(sprintf@flag+1)& (0+255),w,b
  7650  011348  0100               	movlb	0	; () banked
  7651  01134A  6FC9               	movwf	(??_sprintf+1)& (0+255),b
  7652  01134C  0100               	movlb	0	; () banked
  7653  01134E  51C8               	movf	??_sprintf& (0+255),w,b
  7654  011350  0100               	movlb	0	; () banked
  7655  011352  11C9               	iorwf	(??_sprintf+1)& (0+255),w,b
  7656  011354  B4D8               	btfsc	status,2,c
  7657  011356  D009               	goto	l8740
  7658                           
  7659                           ; BSR set to: 0
  7660                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7661  011358  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  7662  01135C  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  7663  011360  0E2D               	movlw	45
  7664  011362  6EDF               	movwf	indf2,c
  7665  011364                     l8738:
  7666                           
  7667                           ; BSR set to: 0
  7668  011364  0100               	movlb	0	; () banked
  7669  011366  4BC0               	infsnz	sprintf@sp& (0+255),f,b
  7670  011368  2BC1               	incf	(sprintf@sp+1)& (0+255),f,b
  7671  01136A                     l8740:
  7672  01136A  C0C2  FFF6         	movff	sprintf@f,tblptrl
  7673  01136E  C0C3  FFF7         	movff	sprintf@f+1,tblptrh
  7674  011372  0100               	movlb	0	; () banked
  7675  011374  4BC2               	infsnz	sprintf@f& (0+255),f,b
  7676  011376  2BC3               	incf	(sprintf@f+1)& (0+255),f,b
  7677  011378                     	if	0	;tblptru may be non-zero
  7678  011378                     	endif
  7679  011378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7680  011378  0E00               	movlw	low (__mediumconst shr (0+16))
  7681  01137A  6EF8               	movwf	tblptru,c
  7682  01137C                     	endif
  7683  01137C  0008               	tblrd		*
  7684  01137E  CFF5 F148          	movff	tablat,sprintf@c
  7685  011382  0101               	movlb	1	; () banked
  7686  011384  5148               	movf	sprintf@c& (0+255),w,b
  7687  011386  A4D8               	btfss	status,2,c
  7688  011388  EF8B  F085         	goto	l8542
  7689  01138C                     l8742:
  7690                           
  7691                           ; BSR set to: 1
  7692                           ;doprnt.c: 1538: *sp = 0;
  7693  01138C  C0C0  FFD9         	movff	sprintf@sp,fsr2l
  7694  011390  C0C1  FFDA         	movff	sprintf@sp+1,fsr2h
  7695  011394  0E00               	movlw	0
  7696  011396  6EDF               	movwf	indf2,c
  7697  011398  0012               	return	
  7698  01139A                     __end_of_sprintf:
  7699                           	opt stack 0
  7700                           tblptru	equ	0xFF8
  7701                           tblptrh	equ	0xFF7
  7702                           tblptrl	equ	0xFF6
  7703                           tablat	equ	0xFF5
  7704                           prodh	equ	0xFF4
  7705                           prodl	equ	0xFF3
  7706                           intcon	equ	0xFF2
  7707                           postinc0	equ	0xFEE
  7708                           wreg	equ	0xFE8
  7709                           indf2	equ	0xFDF
  7710                           postinc2	equ	0xFDE
  7711                           fsr2h	equ	0xFDA
  7712                           fsr2l	equ	0xFD9
  7713                           status	equ	0xFD8
  7714                           
  7715 ;; *************** function _scale *****************
  7716 ;; Defined at:
  7717 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  7718 ;; Parameters:    Size  Location     Type
  7719 ;;  scl             1    wreg     char 
  7720 ;; Auto vars:     Size  Location     Type
  7721 ;;  scl             1   61[BANK0 ] char 
  7722 ;; Return value:  Size  Location     Type
  7723 ;;                  4   53[BANK0 ] char 
  7724 ;; Registers used:
  7725 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7726 ;; Tracked objects:
  7727 ;;		On entry : 0/0
  7728 ;;		On exit  : 0/0
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7731 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7732 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7734 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7735 ;;Total ram usage:        9 bytes
  7736 ;; Hardware stack levels used:    1
  7737 ;; Hardware stack levels required when called:    4
  7738 ;; This function calls:
  7739 ;;		___awdiv
  7740 ;;		___awmod
  7741 ;;		___flmul
  7742 ;; This function is called by:
  7743 ;;		_sprintf
  7744 ;; This function uses a non-reentrant model
  7745 ;;
  7746                           
  7747                           	psect	text9
  7748  0128D0                     __ptext9:
  7749                           	opt stack 0
  7750  0128D0                     _scale:
  7751                           	opt stack 24
  7752                           
  7753                           ; BSR set to: 1
  7754                           ;incstack = 0
  7755                           ;scale@scl stored from wreg
  7756  0128D0  0100               	movlb	0	; () banked
  7757  0128D2  6F9D               	movwf	scale@scl& (0+255),b
  7758                           
  7759                           ;doprnt.c: 428: if(scl < 0) {
  7760  0128D4  0100               	movlb	0	; () banked
  7761  0128D6  AF9D               	btfss	scale@scl& (0+255),7,b
  7762  0128D8  D145               	goto	l8150
  7763                           
  7764                           ; BSR set to: 0
  7765                           ;doprnt.c: 429: scl = -scl;
  7766  0128DA  0100               	movlb	0	; () banked
  7767  0128DC  6D9D               	negf	scale@scl& (0+255),b
  7768                           
  7769                           ;doprnt.c: 430: if(scl>=110)
  7770  0128DE  0100               	movlb	0	; () banked
  7771  0128E0  519D               	movf	scale@scl& (0+255),w,b
  7772  0128E2  0A80               	xorlw	128
  7773  0128E4  0F12               	addlw	-238
  7774  0128E6  A0D8               	btfss	status,0,c
  7775  0128E8  D0BB               	goto	l8140
  7776                           
  7777                           ; BSR set to: 0
  7778                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7779  0128EA  0E00               	movlw	0
  7780  0128EC  0100               	movlb	0	; () banked
  7781  0128EE  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7782  0128F0  0E0A               	movlw	10
  7783  0128F2  6F76               	movwf	___awdiv@divisor& (0+255),b
  7784  0128F4  0E00               	movlw	0
  7785  0128F6  0100               	movlb	0	; () banked
  7786  0128F8  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7787  0128FA  0E64               	movlw	100
  7788  0128FC  6F70               	movwf	___awmod@divisor& (0+255),b
  7789  0128FE  0100               	movlb	0	; () banked
  7790  012900  519D               	movf	scale@scl& (0+255),w,b
  7791  012902  0100               	movlb	0	; () banked
  7792  012904  6F6E               	movwf	___awmod@dividend& (0+255),b
  7793  012906  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7794  012908  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7795  01290A  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7796  01290C  ECCA  F0AD         	call	___awmod	;wreg free
  7797  012910  C06E  F074         	movff	?___awmod,___awdiv@dividend
  7798  012914  C06F  F075         	movff	?___awmod+1,___awdiv@dividend+1
  7799  012918  ECA8  F0AB         	call	___awdiv	;wreg free
  7800  01291C  0100               	movlb	0	; () banked
  7801  01291E  90D8               	bcf	status,0,c
  7802  012920  3774               	rlcf	?___awdiv& (0+255),f,b
  7803  012922  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7804  012924  0100               	movlb	0	; () banked
  7805  012926  90D8               	bcf	status,0,c
  7806  012928  3774               	rlcf	?___awdiv& (0+255),f,b
  7807  01292A  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7808  01292C  0E24               	movlw	36
  7809  01292E  0100               	movlb	0	; () banked
  7810  012930  2774               	addwf	?___awdiv& (0+255),f,b
  7811  012932  0E00               	movlw	0
  7812  012934  0100               	movlb	0	; () banked
  7813  012936  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7814  012938  0EB5               	movlw	low __npowers_
  7815  01293A  0100               	movlb	0	; () banked
  7816  01293C  2574               	addwf	?___awdiv& (0+255),w,b
  7817  01293E  6EF6               	movwf	tblptrl,c
  7818  012940  0EFE               	movlw	high __npowers_
  7819  012942  0100               	movlb	0	; () banked
  7820  012944  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7821  012946  6EF7               	movwf	tblptrh,c
  7822  012948                     	if	1	;There are 3 active tblptr bytes
  7823  012948  6AF8               	clrf	tblptru,c
  7824  01294A  0E00               	movlw	low (__mediumconst shr (0+16))
  7825  01294C  22F8               	addwfc	tblptru,f,c
  7826  01294E                     	endif
  7827  01294E  0009               	tblrd		*+
  7828  012950  CFF5 F080          	movff	tablat,___flmul@a
  7829  012954  0009               	tblrd		*+
  7830  012956  CFF5 F081          	movff	tablat,___flmul@a+1
  7831  01295A  0009               	tblrd		*+
  7832  01295C  CFF5 F082          	movff	tablat,___flmul@a+2
  7833  012960  000A               	tblrd		*-
  7834  012962  CFF5 F083          	movff	tablat,___flmul@a+3
  7835  012966  0E00               	movlw	0
  7836  012968  0100               	movlb	0	; () banked
  7837  01296A  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7838  01296C  0E64               	movlw	100
  7839  01296E  6F76               	movwf	___awdiv@divisor& (0+255),b
  7840  012970  0100               	movlb	0	; () banked
  7841  012972  519D               	movf	scale@scl& (0+255),w,b
  7842  012974  0100               	movlb	0	; () banked
  7843  012976  6F74               	movwf	___awdiv@dividend& (0+255),b
  7844  012978  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  7845  01297A  BF74               	btfsc	___awdiv@dividend& (0+255),7,b
  7846  01297C  0775               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7847  01297E  ECA8  F0AB         	call	___awdiv	;wreg free
  7848  012982  0100               	movlb	0	; () banked
  7849  012984  90D8               	bcf	status,0,c
  7850  012986  3774               	rlcf	?___awdiv& (0+255),f,b
  7851  012988  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7852  01298A  0100               	movlb	0	; () banked
  7853  01298C  90D8               	bcf	status,0,c
  7854  01298E  3774               	rlcf	?___awdiv& (0+255),f,b
  7855  012990  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7856  012992  0E48               	movlw	72
  7857  012994  0100               	movlb	0	; () banked
  7858  012996  2774               	addwf	?___awdiv& (0+255),f,b
  7859  012998  0E00               	movlw	0
  7860  01299A  0100               	movlb	0	; () banked
  7861  01299C  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7862  01299E  0EB5               	movlw	low __npowers_
  7863  0129A0  0100               	movlb	0	; () banked
  7864  0129A2  2574               	addwf	?___awdiv& (0+255),w,b
  7865  0129A4  6EF6               	movwf	tblptrl,c
  7866  0129A6  0EFE               	movlw	high __npowers_
  7867  0129A8  0100               	movlb	0	; () banked
  7868  0129AA  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7869  0129AC  6EF7               	movwf	tblptrh,c
  7870  0129AE                     	if	1	;There are 3 active tblptr bytes
  7871  0129AE  6AF8               	clrf	tblptru,c
  7872  0129B0  0E00               	movlw	low (__mediumconst shr (0+16))
  7873  0129B2  22F8               	addwfc	tblptru,f,c
  7874  0129B4                     	endif
  7875  0129B4  0009               	tblrd		*+
  7876  0129B6  CFF5 F07C          	movff	tablat,___flmul@b
  7877  0129BA  0009               	tblrd		*+
  7878  0129BC  CFF5 F07D          	movff	tablat,___flmul@b+1
  7879  0129C0  0009               	tblrd		*+
  7880  0129C2  CFF5 F07E          	movff	tablat,___flmul@b+2
  7881  0129C6  000A               	tblrd		*-
  7882  0129C8  CFF5 F07F          	movff	tablat,___flmul@b+3
  7883  0129CC  ECCF  F09B         	call	___flmul	;wreg free
  7884  0129D0  C07C  F099         	movff	?___flmul,_scale$4217
  7885  0129D4  C07D  F09A         	movff	?___flmul+1,_scale$4217+1
  7886  0129D8  C07E  F09B         	movff	?___flmul+2,_scale$4217+2
  7887  0129DC  C07F  F09C         	movff	?___flmul+3,_scale$4217+3
  7888                           
  7889                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7890  0129E0  C099  F07C         	movff	_scale$4217,___flmul@b
  7891  0129E4  C09A  F07D         	movff	_scale$4217+1,___flmul@b+1
  7892  0129E8  C09B  F07E         	movff	_scale$4217+2,___flmul@b+2
  7893  0129EC  C09C  F07F         	movff	_scale$4217+3,___flmul@b+3
  7894  0129F0  0E00               	movlw	0
  7895  0129F2  0100               	movlb	0	; () banked
  7896  0129F4  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  7897  0129F6  0E0A               	movlw	10
  7898  0129F8  6F70               	movwf	___awmod@divisor& (0+255),b
  7899  0129FA  0100               	movlb	0	; () banked
  7900  0129FC  519D               	movf	scale@scl& (0+255),w,b
  7901  0129FE  0100               	movlb	0	; () banked
  7902  012A00  6F6E               	movwf	___awmod@dividend& (0+255),b
  7903  012A02  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  7904  012A04  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  7905  012A06  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  7906  012A08  ECCA  F0AD         	call	___awmod	;wreg free
  7907  012A0C  0100               	movlb	0	; () banked
  7908  012A0E  90D8               	bcf	status,0,c
  7909  012A10  376E               	rlcf	?___awmod& (0+255),f,b
  7910  012A12  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7911  012A14  0100               	movlb	0	; () banked
  7912  012A16  90D8               	bcf	status,0,c
  7913  012A18  376E               	rlcf	?___awmod& (0+255),f,b
  7914  012A1A  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  7915  012A1C  0EB5               	movlw	low __npowers_
  7916  012A1E  0100               	movlb	0	; () banked
  7917  012A20  256E               	addwf	?___awmod& (0+255),w,b
  7918  012A22  6EF6               	movwf	tblptrl,c
  7919  012A24  0EFE               	movlw	high __npowers_
  7920  012A26  0100               	movlb	0	; () banked
  7921  012A28  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  7922  012A2A  6EF7               	movwf	tblptrh,c
  7923  012A2C                     	if	1	;There are 3 active tblptr bytes
  7924  012A2C  6AF8               	clrf	tblptru,c
  7925  012A2E  0E00               	movlw	low (__mediumconst shr (0+16))
  7926  012A30  22F8               	addwfc	tblptru,f,c
  7927  012A32                     	endif
  7928  012A32  0009               	tblrd		*+
  7929  012A34  CFF5 F080          	movff	tablat,___flmul@a
  7930  012A38  0009               	tblrd		*+
  7931  012A3A  CFF5 F081          	movff	tablat,___flmul@a+1
  7932  012A3E  0009               	tblrd		*+
  7933  012A40  CFF5 F082          	movff	tablat,___flmul@a+2
  7934  012A44  000A               	tblrd		*-
  7935  012A46  CFF5 F083          	movff	tablat,___flmul@a+3
  7936  012A4A  ECCF  F09B         	call	___flmul	;wreg free
  7937  012A4E  C07C  F095         	movff	?___flmul,?_scale
  7938  012A52  C07D  F096         	movff	?___flmul+1,?_scale+1
  7939  012A56  C07E  F097         	movff	?___flmul+2,?_scale+2
  7940  012A5A  C07F  F098         	movff	?___flmul+3,?_scale+3
  7941  012A5E  0012               	return	
  7942  012A60                     l8140:
  7943                           
  7944                           ;doprnt.c: 432: else if(scl > 10)
  7945  012A60  0100               	movlb	0	; () banked
  7946  012A62  519D               	movf	scale@scl& (0+255),w,b
  7947  012A64  0A80               	xorlw	128
  7948  012A66  0F75               	addlw	-139
  7949  012A68  A0D8               	btfss	status,0,c
  7950  012A6A  D063               	goto	l8146
  7951                           
  7952                           ; BSR set to: 0
  7953                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7954  012A6C  0E00               	movlw	0
  7955  012A6E  0100               	movlb	0	; () banked
  7956  012A70  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  7957  012A72  0E0A               	movlw	10
  7958  012A74  6F76               	movwf	___awdiv@divisor& (0+255),b
  7959  012A76  0100               	movlb	0	; () banked
  7960  012A78  519D               	movf	scale@scl& (0+255),w,b
  7961  012A7A  0100               	movlb	0	; () banked
  7962  012A7C  6F74               	movwf	___awdiv@dividend& (0+255),b
  7963  012A7E  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  7964  012A80  BF74               	btfsc	___awdiv@dividend& (0+255),7,b
  7965  012A82  0775               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7966  012A84  ECA8  F0AB         	call	___awdiv	;wreg free
  7967  012A88  0100               	movlb	0	; () banked
  7968  012A8A  90D8               	bcf	status,0,c
  7969  012A8C  3774               	rlcf	?___awdiv& (0+255),f,b
  7970  012A8E  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7971  012A90  0100               	movlb	0	; () banked
  7972  012A92  90D8               	bcf	status,0,c
  7973  012A94  3774               	rlcf	?___awdiv& (0+255),f,b
  7974  012A96  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  7975  012A98  0E24               	movlw	36
  7976  012A9A  0100               	movlb	0	; () banked
  7977  012A9C  2774               	addwf	?___awdiv& (0+255),f,b
  7978  012A9E  0E00               	movlw	0
  7979  012AA0  0100               	movlb	0	; () banked
  7980  012AA2  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  7981  012AA4  0EB5               	movlw	low __npowers_
  7982  012AA6  0100               	movlb	0	; () banked
  7983  012AA8  2574               	addwf	?___awdiv& (0+255),w,b
  7984  012AAA  6EF6               	movwf	tblptrl,c
  7985  012AAC  0EFE               	movlw	high __npowers_
  7986  012AAE  0100               	movlb	0	; () banked
  7987  012AB0  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  7988  012AB2  6EF7               	movwf	tblptrh,c
  7989  012AB4                     	if	1	;There are 3 active tblptr bytes
  7990  012AB4  6AF8               	clrf	tblptru,c
  7991  012AB6  0E00               	movlw	low (__mediumconst shr (0+16))
  7992  012AB8  22F8               	addwfc	tblptru,f,c
  7993  012ABA                     	endif
  7994  012ABA  0009               	tblrd		*+
  7995  012ABC  CFF5 F07C          	movff	tablat,___flmul@b
  7996  012AC0  0009               	tblrd		*+
  7997  012AC2  CFF5 F07D          	movff	tablat,___flmul@b+1
  7998  012AC6  0009               	tblrd		*+
  7999  012AC8  CFF5 F07E          	movff	tablat,___flmul@b+2
  8000  012ACC  000A               	tblrd		*-
  8001  012ACE  CFF5 F07F          	movff	tablat,___flmul@b+3
  8002  012AD2  0E00               	movlw	0
  8003  012AD4  0100               	movlb	0	; () banked
  8004  012AD6  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  8005  012AD8  0E0A               	movlw	10
  8006  012ADA  6F70               	movwf	___awmod@divisor& (0+255),b
  8007  012ADC  0100               	movlb	0	; () banked
  8008  012ADE  519D               	movf	scale@scl& (0+255),w,b
  8009  012AE0  0100               	movlb	0	; () banked
  8010  012AE2  6F6E               	movwf	___awmod@dividend& (0+255),b
  8011  012AE4  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  8012  012AE6  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  8013  012AE8  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  8014  012AEA  ECCA  F0AD         	call	___awmod	;wreg free
  8015  012AEE  0100               	movlb	0	; () banked
  8016  012AF0  90D8               	bcf	status,0,c
  8017  012AF2  376E               	rlcf	?___awmod& (0+255),f,b
  8018  012AF4  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  8019  012AF6  0100               	movlb	0	; () banked
  8020  012AF8  90D8               	bcf	status,0,c
  8021  012AFA  376E               	rlcf	?___awmod& (0+255),f,b
  8022  012AFC  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  8023  012AFE  0EB5               	movlw	low __npowers_
  8024  012B00  0100               	movlb	0	; () banked
  8025  012B02  256E               	addwf	?___awmod& (0+255),w,b
  8026  012B04  6EF6               	movwf	tblptrl,c
  8027  012B06  0EFE               	movlw	high __npowers_
  8028  012B08  0100               	movlb	0	; () banked
  8029  012B0A  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  8030  012B0C  6EF7               	movwf	tblptrh,c
  8031  012B0E                     	if	1	;There are 3 active tblptr bytes
  8032  012B0E  6AF8               	clrf	tblptru,c
  8033  012B10  0E00               	movlw	low (__mediumconst shr (0+16))
  8034  012B12  22F8               	addwfc	tblptru,f,c
  8035  012B14                     	endif
  8036  012B14  0009               	tblrd		*+
  8037  012B16  CFF5 F080          	movff	tablat,___flmul@a
  8038  012B1A  0009               	tblrd		*+
  8039  012B1C  CFF5 F081          	movff	tablat,___flmul@a+1
  8040  012B20  0009               	tblrd		*+
  8041  012B22  CFF5 F082          	movff	tablat,___flmul@a+2
  8042  012B26  000A               	tblrd		*-
  8043  012B28  CFF5 F083          	movff	tablat,___flmul@a+3
  8044  012B2C  ECCF  F09B         	call	___flmul	;wreg free
  8045  012B30  D78E               	goto	L7
  8046  012B32                     l8146:
  8047                           
  8048                           ;doprnt.c: 434: return _npowers_[scl];
  8049  012B32  0100               	movlb	0	; () banked
  8050  012B34  519D               	movf	scale@scl& (0+255),w,b
  8051  012B36  0D04               	mullw	4
  8052  012B38  0EB5               	movlw	low __npowers_
  8053  012B3A  24F3               	addwf	prodl,w,c
  8054  012B3C  6EF6               	movwf	tblptrl,c
  8055  012B3E  0EFE               	movlw	high __npowers_
  8056  012B40  20F4               	addwfc	prodh,w,c
  8057  012B42  6EF7               	movwf	tblptrh,c
  8058  012B44                     	if	1	;There are 3 active tblptr bytes
  8059  012B44  6AF8               	clrf	tblptru,c
  8060  012B46  0E00               	movlw	low (__mediumconst shr (0+16))
  8061  012B48  22F8               	addwfc	tblptru,f,c
  8062  012B4A                     	endif
  8063  012B4A  0009               	tblrd		*+
  8064  012B4C  CFF5 F095          	movff	tablat,?_scale
  8065  012B50  0009               	tblrd		*+
  8066  012B52  CFF5 F096          	movff	tablat,?_scale+1
  8067  012B56  0009               	tblrd		*+
  8068  012B58  CFF5 F097          	movff	tablat,?_scale+2
  8069  012B5C  000A               	tblrd		*-
  8070  012B5E  CFF5 F098          	movff	tablat,?_scale+3
  8071                           
  8072                           ; BSR set to: 0
  8073  012B62  0012               	return	
  8074  012B64                     l8150:
  8075                           
  8076                           ; BSR set to: 0
  8077                           ;doprnt.c: 435: }
  8078                           ;doprnt.c: 436: if(scl>=110)
  8079  012B64  0100               	movlb	0	; () banked
  8080  012B66  519D               	movf	scale@scl& (0+255),w,b
  8081  012B68  0A80               	xorlw	128
  8082  012B6A  0F12               	addlw	-238
  8083  012B6C  A0D8               	btfss	status,0,c
  8084  012B6E  D0BB               	goto	l8158
  8085                           
  8086                           ; BSR set to: 0
  8087                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8088  012B70  0E00               	movlw	0
  8089  012B72  0100               	movlb	0	; () banked
  8090  012B74  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  8091  012B76  0E0A               	movlw	10
  8092  012B78  6F76               	movwf	___awdiv@divisor& (0+255),b
  8093  012B7A  0E00               	movlw	0
  8094  012B7C  0100               	movlb	0	; () banked
  8095  012B7E  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  8096  012B80  0E64               	movlw	100
  8097  012B82  6F70               	movwf	___awmod@divisor& (0+255),b
  8098  012B84  0100               	movlb	0	; () banked
  8099  012B86  519D               	movf	scale@scl& (0+255),w,b
  8100  012B88  0100               	movlb	0	; () banked
  8101  012B8A  6F6E               	movwf	___awmod@dividend& (0+255),b
  8102  012B8C  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  8103  012B8E  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  8104  012B90  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  8105  012B92  ECCA  F0AD         	call	___awmod	;wreg free
  8106  012B96  C06E  F074         	movff	?___awmod,___awdiv@dividend
  8107  012B9A  C06F  F075         	movff	?___awmod+1,___awdiv@dividend+1
  8108  012B9E  ECA8  F0AB         	call	___awdiv	;wreg free
  8109  012BA2  0100               	movlb	0	; () banked
  8110  012BA4  90D8               	bcf	status,0,c
  8111  012BA6  3774               	rlcf	?___awdiv& (0+255),f,b
  8112  012BA8  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8113  012BAA  0100               	movlb	0	; () banked
  8114  012BAC  90D8               	bcf	status,0,c
  8115  012BAE  3774               	rlcf	?___awdiv& (0+255),f,b
  8116  012BB0  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8117  012BB2  0E24               	movlw	36
  8118  012BB4  0100               	movlb	0	; () banked
  8119  012BB6  2774               	addwf	?___awdiv& (0+255),f,b
  8120  012BB8  0E00               	movlw	0
  8121  012BBA  0100               	movlb	0	; () banked
  8122  012BBC  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  8123  012BBE  0EE9               	movlw	low __powers_
  8124  012BC0  0100               	movlb	0	; () banked
  8125  012BC2  2574               	addwf	?___awdiv& (0+255),w,b
  8126  012BC4  6EF6               	movwf	tblptrl,c
  8127  012BC6  0EFE               	movlw	high __powers_
  8128  012BC8  0100               	movlb	0	; () banked
  8129  012BCA  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  8130  012BCC  6EF7               	movwf	tblptrh,c
  8131  012BCE                     	if	1	;There are 3 active tblptr bytes
  8132  012BCE  6AF8               	clrf	tblptru,c
  8133  012BD0  0E00               	movlw	low (__mediumconst shr (0+16))
  8134  012BD2  22F8               	addwfc	tblptru,f,c
  8135  012BD4                     	endif
  8136  012BD4  0009               	tblrd		*+
  8137  012BD6  CFF5 F080          	movff	tablat,___flmul@a
  8138  012BDA  0009               	tblrd		*+
  8139  012BDC  CFF5 F081          	movff	tablat,___flmul@a+1
  8140  012BE0  0009               	tblrd		*+
  8141  012BE2  CFF5 F082          	movff	tablat,___flmul@a+2
  8142  012BE6  000A               	tblrd		*-
  8143  012BE8  CFF5 F083          	movff	tablat,___flmul@a+3
  8144  012BEC  0E00               	movlw	0
  8145  012BEE  0100               	movlb	0	; () banked
  8146  012BF0  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  8147  012BF2  0E64               	movlw	100
  8148  012BF4  6F76               	movwf	___awdiv@divisor& (0+255),b
  8149  012BF6  0100               	movlb	0	; () banked
  8150  012BF8  519D               	movf	scale@scl& (0+255),w,b
  8151  012BFA  0100               	movlb	0	; () banked
  8152  012BFC  6F74               	movwf	___awdiv@dividend& (0+255),b
  8153  012BFE  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  8154  012C00  BF74               	btfsc	___awdiv@dividend& (0+255),7,b
  8155  012C02  0775               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8156  012C04  ECA8  F0AB         	call	___awdiv	;wreg free
  8157  012C08  0100               	movlb	0	; () banked
  8158  012C0A  90D8               	bcf	status,0,c
  8159  012C0C  3774               	rlcf	?___awdiv& (0+255),f,b
  8160  012C0E  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8161  012C10  0100               	movlb	0	; () banked
  8162  012C12  90D8               	bcf	status,0,c
  8163  012C14  3774               	rlcf	?___awdiv& (0+255),f,b
  8164  012C16  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8165  012C18  0E48               	movlw	72
  8166  012C1A  0100               	movlb	0	; () banked
  8167  012C1C  2774               	addwf	?___awdiv& (0+255),f,b
  8168  012C1E  0E00               	movlw	0
  8169  012C20  0100               	movlb	0	; () banked
  8170  012C22  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  8171  012C24  0EE9               	movlw	low __powers_
  8172  012C26  0100               	movlb	0	; () banked
  8173  012C28  2574               	addwf	?___awdiv& (0+255),w,b
  8174  012C2A  6EF6               	movwf	tblptrl,c
  8175  012C2C  0EFE               	movlw	high __powers_
  8176  012C2E  0100               	movlb	0	; () banked
  8177  012C30  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  8178  012C32  6EF7               	movwf	tblptrh,c
  8179  012C34                     	if	1	;There are 3 active tblptr bytes
  8180  012C34  6AF8               	clrf	tblptru,c
  8181  012C36  0E00               	movlw	low (__mediumconst shr (0+16))
  8182  012C38  22F8               	addwfc	tblptru,f,c
  8183  012C3A                     	endif
  8184  012C3A  0009               	tblrd		*+
  8185  012C3C  CFF5 F07C          	movff	tablat,___flmul@b
  8186  012C40  0009               	tblrd		*+
  8187  012C42  CFF5 F07D          	movff	tablat,___flmul@b+1
  8188  012C46  0009               	tblrd		*+
  8189  012C48  CFF5 F07E          	movff	tablat,___flmul@b+2
  8190  012C4C  000A               	tblrd		*-
  8191  012C4E  CFF5 F07F          	movff	tablat,___flmul@b+3
  8192  012C52  ECCF  F09B         	call	___flmul	;wreg free
  8193  012C56  C07C  F099         	movff	?___flmul,_scale$4217
  8194  012C5A  C07D  F09A         	movff	?___flmul+1,_scale$4217+1
  8195  012C5E  C07E  F09B         	movff	?___flmul+2,_scale$4217+2
  8196  012C62  C07F  F09C         	movff	?___flmul+3,_scale$4217+3
  8197                           
  8198                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8199  012C66  C099  F07C         	movff	_scale$4217,___flmul@b
  8200  012C6A  C09A  F07D         	movff	_scale$4217+1,___flmul@b+1
  8201  012C6E  C09B  F07E         	movff	_scale$4217+2,___flmul@b+2
  8202  012C72  C09C  F07F         	movff	_scale$4217+3,___flmul@b+3
  8203  012C76  0E00               	movlw	0
  8204  012C78  0100               	movlb	0	; () banked
  8205  012C7A  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  8206  012C7C  0E0A               	movlw	10
  8207  012C7E  6F70               	movwf	___awmod@divisor& (0+255),b
  8208  012C80  0100               	movlb	0	; () banked
  8209  012C82  519D               	movf	scale@scl& (0+255),w,b
  8210  012C84  0100               	movlb	0	; () banked
  8211  012C86  6F6E               	movwf	___awmod@dividend& (0+255),b
  8212  012C88  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  8213  012C8A  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  8214  012C8C  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  8215  012C8E  ECCA  F0AD         	call	___awmod	;wreg free
  8216  012C92  0100               	movlb	0	; () banked
  8217  012C94  90D8               	bcf	status,0,c
  8218  012C96  376E               	rlcf	?___awmod& (0+255),f,b
  8219  012C98  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  8220  012C9A  0100               	movlb	0	; () banked
  8221  012C9C  90D8               	bcf	status,0,c
  8222  012C9E  376E               	rlcf	?___awmod& (0+255),f,b
  8223  012CA0  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  8224  012CA2  0EE9               	movlw	low __powers_
  8225  012CA4  0100               	movlb	0	; () banked
  8226  012CA6  256E               	addwf	?___awmod& (0+255),w,b
  8227  012CA8  6EF6               	movwf	tblptrl,c
  8228  012CAA  0EFE               	movlw	high __powers_
  8229  012CAC  0100               	movlb	0	; () banked
  8230  012CAE  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  8231  012CB0  6EF7               	movwf	tblptrh,c
  8232  012CB2                     	if	1	;There are 3 active tblptr bytes
  8233  012CB2  6AF8               	clrf	tblptru,c
  8234  012CB4  0E00               	movlw	low (__mediumconst shr (0+16))
  8235  012CB6  22F8               	addwfc	tblptru,f,c
  8236  012CB8                     	endif
  8237  012CB8  0009               	tblrd		*+
  8238  012CBA  CFF5 F080          	movff	tablat,___flmul@a
  8239  012CBE  0009               	tblrd		*+
  8240  012CC0  CFF5 F081          	movff	tablat,___flmul@a+1
  8241  012CC4  0009               	tblrd		*+
  8242  012CC6  CFF5 F082          	movff	tablat,___flmul@a+2
  8243  012CCA  000A               	tblrd		*-
  8244  012CCC  CFF5 F083          	movff	tablat,___flmul@a+3
  8245  012CD0  ECCF  F09B         	call	___flmul	;wreg free
  8246  012CD4  C07C  F095         	movff	?___flmul,?_scale
  8247  012CD8  C07D  F096         	movff	?___flmul+1,?_scale+1
  8248  012CDC  C07E  F097         	movff	?___flmul+2,?_scale+2
  8249  012CE0  C07F  F098         	movff	?___flmul+3,?_scale+3
  8250  012CE4  0012               	return	
  8251  012CE6                     l8158:
  8252                           
  8253                           ;doprnt.c: 438: else if(scl > 10)
  8254  012CE6  0100               	movlb	0	; () banked
  8255  012CE8  519D               	movf	scale@scl& (0+255),w,b
  8256  012CEA  0A80               	xorlw	128
  8257  012CEC  0F75               	addlw	-139
  8258  012CEE  A0D8               	btfss	status,0,c
  8259  012CF0  D063               	goto	l8164
  8260                           
  8261                           ; BSR set to: 0
  8262                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8263  012CF2  0E00               	movlw	0
  8264  012CF4  0100               	movlb	0	; () banked
  8265  012CF6  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  8266  012CF8  0E0A               	movlw	10
  8267  012CFA  6F76               	movwf	___awdiv@divisor& (0+255),b
  8268  012CFC  0100               	movlb	0	; () banked
  8269  012CFE  519D               	movf	scale@scl& (0+255),w,b
  8270  012D00  0100               	movlb	0	; () banked
  8271  012D02  6F74               	movwf	___awdiv@dividend& (0+255),b
  8272  012D04  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  8273  012D06  BF74               	btfsc	___awdiv@dividend& (0+255),7,b
  8274  012D08  0775               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8275  012D0A  ECA8  F0AB         	call	___awdiv	;wreg free
  8276  012D0E  0100               	movlb	0	; () banked
  8277  012D10  90D8               	bcf	status,0,c
  8278  012D12  3774               	rlcf	?___awdiv& (0+255),f,b
  8279  012D14  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8280  012D16  0100               	movlb	0	; () banked
  8281  012D18  90D8               	bcf	status,0,c
  8282  012D1A  3774               	rlcf	?___awdiv& (0+255),f,b
  8283  012D1C  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8284  012D1E  0E24               	movlw	36
  8285  012D20  0100               	movlb	0	; () banked
  8286  012D22  2774               	addwf	?___awdiv& (0+255),f,b
  8287  012D24  0E00               	movlw	0
  8288  012D26  0100               	movlb	0	; () banked
  8289  012D28  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  8290  012D2A  0EE9               	movlw	low __powers_
  8291  012D2C  0100               	movlb	0	; () banked
  8292  012D2E  2574               	addwf	?___awdiv& (0+255),w,b
  8293  012D30  6EF6               	movwf	tblptrl,c
  8294  012D32  0EFE               	movlw	high __powers_
  8295  012D34  0100               	movlb	0	; () banked
  8296  012D36  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  8297  012D38  6EF7               	movwf	tblptrh,c
  8298  012D3A                     	if	1	;There are 3 active tblptr bytes
  8299  012D3A  6AF8               	clrf	tblptru,c
  8300  012D3C  0E00               	movlw	low (__mediumconst shr (0+16))
  8301  012D3E  22F8               	addwfc	tblptru,f,c
  8302  012D40                     	endif
  8303  012D40  0009               	tblrd		*+
  8304  012D42  CFF5 F07C          	movff	tablat,___flmul@b
  8305  012D46  0009               	tblrd		*+
  8306  012D48  CFF5 F07D          	movff	tablat,___flmul@b+1
  8307  012D4C  0009               	tblrd		*+
  8308  012D4E  CFF5 F07E          	movff	tablat,___flmul@b+2
  8309  012D52  000A               	tblrd		*-
  8310  012D54  CFF5 F07F          	movff	tablat,___flmul@b+3
  8311  012D58  0E00               	movlw	0
  8312  012D5A  0100               	movlb	0	; () banked
  8313  012D5C  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  8314  012D5E  0E0A               	movlw	10
  8315  012D60  6F70               	movwf	___awmod@divisor& (0+255),b
  8316  012D62  0100               	movlb	0	; () banked
  8317  012D64  519D               	movf	scale@scl& (0+255),w,b
  8318  012D66  0100               	movlb	0	; () banked
  8319  012D68  6F6E               	movwf	___awmod@dividend& (0+255),b
  8320  012D6A  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  8321  012D6C  BF6E               	btfsc	___awmod@dividend& (0+255),7,b
  8322  012D6E  076F               	decf	(___awmod@dividend+1)& (0+255),f,b
  8323  012D70  ECCA  F0AD         	call	___awmod	;wreg free
  8324  012D74  0100               	movlb	0	; () banked
  8325  012D76  90D8               	bcf	status,0,c
  8326  012D78  376E               	rlcf	?___awmod& (0+255),f,b
  8327  012D7A  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  8328  012D7C  0100               	movlb	0	; () banked
  8329  012D7E  90D8               	bcf	status,0,c
  8330  012D80  376E               	rlcf	?___awmod& (0+255),f,b
  8331  012D82  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  8332  012D84  0EE9               	movlw	low __powers_
  8333  012D86  0100               	movlb	0	; () banked
  8334  012D88  256E               	addwf	?___awmod& (0+255),w,b
  8335  012D8A  6EF6               	movwf	tblptrl,c
  8336  012D8C  0EFE               	movlw	high __powers_
  8337  012D8E  0100               	movlb	0	; () banked
  8338  012D90  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  8339  012D92  6EF7               	movwf	tblptrh,c
  8340  012D94                     	if	1	;There are 3 active tblptr bytes
  8341  012D94  6AF8               	clrf	tblptru,c
  8342  012D96  0E00               	movlw	low (__mediumconst shr (0+16))
  8343  012D98  22F8               	addwfc	tblptru,f,c
  8344  012D9A                     	endif
  8345  012D9A  0009               	tblrd		*+
  8346  012D9C  CFF5 F080          	movff	tablat,___flmul@a
  8347  012DA0  0009               	tblrd		*+
  8348  012DA2  CFF5 F081          	movff	tablat,___flmul@a+1
  8349  012DA6  0009               	tblrd		*+
  8350  012DA8  CFF5 F082          	movff	tablat,___flmul@a+2
  8351  012DAC  000A               	tblrd		*-
  8352  012DAE  CFF5 F083          	movff	tablat,___flmul@a+3
  8353  012DB2  ECCF  F09B         	call	___flmul	;wreg free
  8354  012DB6  D78E               	goto	L8
  8355  012DB8                     l8164:
  8356                           
  8357                           ;doprnt.c: 440: return _powers_[scl];
  8358  012DB8  0100               	movlb	0	; () banked
  8359  012DBA  519D               	movf	scale@scl& (0+255),w,b
  8360  012DBC  0D04               	mullw	4
  8361  012DBE  0EE9               	movlw	low __powers_
  8362  012DC0  24F3               	addwf	prodl,w,c
  8363  012DC2  6EF6               	movwf	tblptrl,c
  8364  012DC4  0EFE               	movlw	high __powers_
  8365  012DC6  20F4               	addwfc	prodh,w,c
  8366  012DC8  6EF7               	movwf	tblptrh,c
  8367  012DCA                     	if	1	;There are 3 active tblptr bytes
  8368  012DCA  6AF8               	clrf	tblptru,c
  8369  012DCC  0E00               	movlw	low (__mediumconst shr (0+16))
  8370  012DCE  22F8               	addwfc	tblptru,f,c
  8371  012DD0                     	endif
  8372  012DD0  0009               	tblrd		*+
  8373  012DD2  CFF5 F095          	movff	tablat,?_scale
  8374  012DD6  0009               	tblrd		*+
  8375  012DD8  CFF5 F096          	movff	tablat,?_scale+1
  8376  012DDC  0009               	tblrd		*+
  8377  012DDE  CFF5 F097          	movff	tablat,?_scale+2
  8378  012DE2  000A               	tblrd		*-
  8379  012DE4  CFF5 F098          	movff	tablat,?_scale+3
  8380  012DE8  0012               	return	
  8381  012DEA                     __end_of_scale:
  8382                           	opt stack 0
  8383                           tblptru	equ	0xFF8
  8384                           tblptrh	equ	0xFF7
  8385                           tblptrl	equ	0xFF6
  8386                           tablat	equ	0xFF5
  8387                           prodh	equ	0xFF4
  8388                           prodl	equ	0xFF3
  8389                           intcon	equ	0xFF2
  8390                           postinc0	equ	0xFEE
  8391                           wreg	equ	0xFE8
  8392                           indf2	equ	0xFDF
  8393                           postinc2	equ	0xFDE
  8394                           fsr2h	equ	0xFDA
  8395                           fsr2l	equ	0xFD9
  8396                           status	equ	0xFD8
  8397                           
  8398 ;; *************** function _isdigit *****************
  8399 ;; Defined at:
  8400 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  8401 ;; Parameters:    Size  Location     Type
  8402 ;;  c               1    wreg     unsigned char 
  8403 ;; Auto vars:     Size  Location     Type
  8404 ;;  c               1   16[BANK0 ] unsigned char 
  8405 ;; Return value:  Size  Location     Type
  8406 ;;		None               void
  8407 ;; Registers used:
  8408 ;;		wreg, status,2, status,0
  8409 ;; Tracked objects:
  8410 ;;		On entry : 0/0
  8411 ;;		On exit  : 0/0
  8412 ;;		Unchanged: 0/0
  8413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8415 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8416 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8417 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8418 ;;Total ram usage:        3 bytes
  8419 ;; Hardware stack levels used:    1
  8420 ;; Hardware stack levels required when called:    3
  8421 ;; This function calls:
  8422 ;;		Nothing
  8423 ;; This function is called by:
  8424 ;;		_sprintf
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           	psect	text10
  8429  01612E                     __ptext10:
  8430                           	opt stack 0
  8431  01612E                     _isdigit:
  8432                           	opt stack 25
  8433                           
  8434                           ;incstack = 0
  8435                           ;isdigit@c stored from wreg
  8436  01612E  0100               	movlb	0	; () banked
  8437  016130  6F70               	movwf	isdigit@c& (0+255),b
  8438  016132  0E00               	movlw	0
  8439  016134  0100               	movlb	0	; () banked
  8440  016136  6F6F               	movwf	_isdigit$3801& (0+255),b
  8441                           
  8442                           ; BSR set to: 0
  8443  016138  0E3A               	movlw	58
  8444  01613A  0100               	movlb	0	; () banked
  8445  01613C  6170               	cpfslt	isdigit@c& (0+255),b
  8446  01613E  D007               	goto	l8176
  8447                           
  8448                           ; BSR set to: 0
  8449  016140  0E2F               	movlw	47
  8450  016142  0100               	movlb	0	; () banked
  8451  016144  6570               	cpfsgt	isdigit@c& (0+255),b
  8452  016146  D003               	goto	l8176
  8453                           
  8454                           ; BSR set to: 0
  8455  016148  0E01               	movlw	1
  8456  01614A  0100               	movlb	0	; () banked
  8457  01614C  6F6F               	movwf	_isdigit$3801& (0+255),b
  8458  01614E                     l8176:
  8459                           
  8460                           ; BSR set to: 0
  8461  01614E  C06F  F06E         	movff	_isdigit$3801,??_isdigit
  8462  016152  0100               	movlb	0	; () banked
  8463  016154  316E               	rrcf	??_isdigit& (0+255),w,b
  8464  016156  0012               	return	
  8465  016158                     __end_of_isdigit:
  8466                           	opt stack 0
  8467                           tblptru	equ	0xFF8
  8468                           tblptrh	equ	0xFF7
  8469                           tblptrl	equ	0xFF6
  8470                           tablat	equ	0xFF5
  8471                           prodh	equ	0xFF4
  8472                           prodl	equ	0xFF3
  8473                           intcon	equ	0xFF2
  8474                           postinc0	equ	0xFEE
  8475                           wreg	equ	0xFE8
  8476                           indf2	equ	0xFDF
  8477                           postinc2	equ	0xFDE
  8478                           fsr2h	equ	0xFDA
  8479                           fsr2l	equ	0xFD9
  8480                           status	equ	0xFD8
  8481                           
  8482 ;; *************** function _fround *****************
  8483 ;; Defined at:
  8484 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  8485 ;; Parameters:    Size  Location     Type
  8486 ;;  prec            1    wreg     unsigned char 
  8487 ;; Auto vars:     Size  Location     Type
  8488 ;;  prec            1   65[BANK0 ] unsigned char 
  8489 ;; Return value:  Size  Location     Type
  8490 ;;                  4   53[BANK0 ] unsigned char 
  8491 ;; Registers used:
  8492 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8493 ;; Tracked objects:
  8494 ;;		On entry : 0/0
  8495 ;;		On exit  : 0/0
  8496 ;;		Unchanged: 0/0
  8497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8498 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8499 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8501 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8502 ;;Total ram usage:       13 bytes
  8503 ;; Hardware stack levels used:    1
  8504 ;; Hardware stack levels required when called:    4
  8505 ;; This function calls:
  8506 ;;		___awdiv
  8507 ;;		___awmod
  8508 ;;		___flmul
  8509 ;; This function is called by:
  8510 ;;		_sprintf
  8511 ;; This function uses a non-reentrant model
  8512 ;;
  8513                           
  8514                           	psect	text11
  8515  0143A2                     __ptext11:
  8516                           	opt stack 0
  8517  0143A2                     _fround:
  8518                           	opt stack 24
  8519                           
  8520                           ; BSR set to: 0
  8521                           ;incstack = 0
  8522                           ;fround@prec stored from wreg
  8523  0143A2  0100               	movlb	0	; () banked
  8524  0143A4  6FA1               	movwf	fround@prec& (0+255),b
  8525                           
  8526                           ;doprnt.c: 413: if(prec>=110)
  8527  0143A6  0E6D               	movlw	109
  8528  0143A8  0100               	movlb	0	; () banked
  8529  0143AA  65A1               	cpfsgt	fround@prec& (0+255),b
  8530  0143AC  D0CD               	goto	l8118
  8531                           
  8532                           ; BSR set to: 0
  8533                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8534  0143AE  0E00               	movlw	0
  8535  0143B0  0100               	movlb	0	; () banked
  8536  0143B2  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  8537  0143B4  0E0A               	movlw	10
  8538  0143B6  6F76               	movwf	___awdiv@divisor& (0+255),b
  8539  0143B8  0E00               	movlw	0
  8540  0143BA  0100               	movlb	0	; () banked
  8541  0143BC  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  8542  0143BE  0E64               	movlw	100
  8543  0143C0  6F70               	movwf	___awmod@divisor& (0+255),b
  8544  0143C2  C0A1  F06E         	movff	fround@prec,___awmod@dividend
  8545  0143C6  0100               	movlb	0	; () banked
  8546  0143C8  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  8547  0143CA  ECCA  F0AD         	call	___awmod	;wreg free
  8548  0143CE  C06E  F074         	movff	?___awmod,___awdiv@dividend
  8549  0143D2  C06F  F075         	movff	?___awmod+1,___awdiv@dividend+1
  8550  0143D6  ECA8  F0AB         	call	___awdiv	;wreg free
  8551  0143DA  0100               	movlb	0	; () banked
  8552  0143DC  90D8               	bcf	status,0,c
  8553  0143DE  3774               	rlcf	?___awdiv& (0+255),f,b
  8554  0143E0  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8555  0143E2  0100               	movlb	0	; () banked
  8556  0143E4  90D8               	bcf	status,0,c
  8557  0143E6  3774               	rlcf	?___awdiv& (0+255),f,b
  8558  0143E8  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8559  0143EA  0E24               	movlw	36
  8560  0143EC  0100               	movlb	0	; () banked
  8561  0143EE  2774               	addwf	?___awdiv& (0+255),f,b
  8562  0143F0  0E00               	movlw	0
  8563  0143F2  0100               	movlb	0	; () banked
  8564  0143F4  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  8565  0143F6  0EB5               	movlw	low __npowers_
  8566  0143F8  0100               	movlb	0	; () banked
  8567  0143FA  2574               	addwf	?___awdiv& (0+255),w,b
  8568  0143FC  6EF6               	movwf	tblptrl,c
  8569  0143FE  0EFE               	movlw	high __npowers_
  8570  014400  0100               	movlb	0	; () banked
  8571  014402  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  8572  014404  6EF7               	movwf	tblptrh,c
  8573  014406                     	if	1	;There are 3 active tblptr bytes
  8574  014406  6AF8               	clrf	tblptru,c
  8575  014408  0E00               	movlw	low (__mediumconst shr (0+16))
  8576  01440A  22F8               	addwfc	tblptru,f,c
  8577  01440C                     	endif
  8578  01440C  0009               	tblrd		*+
  8579  01440E  CFF5 F080          	movff	tablat,___flmul@a
  8580  014412  0009               	tblrd		*+
  8581  014414  CFF5 F081          	movff	tablat,___flmul@a+1
  8582  014418  0009               	tblrd		*+
  8583  01441A  CFF5 F082          	movff	tablat,___flmul@a+2
  8584  01441E  000A               	tblrd		*-
  8585  014420  CFF5 F083          	movff	tablat,___flmul@a+3
  8586  014424  0E00               	movlw	0
  8587  014426  0100               	movlb	0	; () banked
  8588  014428  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  8589  01442A  0E64               	movlw	100
  8590  01442C  6F76               	movwf	___awdiv@divisor& (0+255),b
  8591  01442E  C0A1  F074         	movff	fround@prec,___awdiv@dividend
  8592  014432  0100               	movlb	0	; () banked
  8593  014434  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  8594  014436  ECA8  F0AB         	call	___awdiv	;wreg free
  8595  01443A  0100               	movlb	0	; () banked
  8596  01443C  90D8               	bcf	status,0,c
  8597  01443E  3774               	rlcf	?___awdiv& (0+255),f,b
  8598  014440  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8599  014442  0100               	movlb	0	; () banked
  8600  014444  90D8               	bcf	status,0,c
  8601  014446  3774               	rlcf	?___awdiv& (0+255),f,b
  8602  014448  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8603  01444A  0E48               	movlw	72
  8604  01444C  0100               	movlb	0	; () banked
  8605  01444E  2774               	addwf	?___awdiv& (0+255),f,b
  8606  014450  0E00               	movlw	0
  8607  014452  0100               	movlb	0	; () banked
  8608  014454  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  8609  014456  0EB5               	movlw	low __npowers_
  8610  014458  0100               	movlb	0	; () banked
  8611  01445A  2574               	addwf	?___awdiv& (0+255),w,b
  8612  01445C  6EF6               	movwf	tblptrl,c
  8613  01445E  0EFE               	movlw	high __npowers_
  8614  014460  0100               	movlb	0	; () banked
  8615  014462  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  8616  014464  6EF7               	movwf	tblptrh,c
  8617  014466                     	if	1	;There are 3 active tblptr bytes
  8618  014466  6AF8               	clrf	tblptru,c
  8619  014468  0E00               	movlw	low (__mediumconst shr (0+16))
  8620  01446A  22F8               	addwfc	tblptru,f,c
  8621  01446C                     	endif
  8622  01446C  0009               	tblrd		*+
  8623  01446E  CFF5 F07C          	movff	tablat,___flmul@b
  8624  014472  0009               	tblrd		*+
  8625  014474  CFF5 F07D          	movff	tablat,___flmul@b+1
  8626  014478  0009               	tblrd		*+
  8627  01447A  CFF5 F07E          	movff	tablat,___flmul@b+2
  8628  01447E  000A               	tblrd		*-
  8629  014480  CFF5 F07F          	movff	tablat,___flmul@b+3
  8630  014484  ECCF  F09B         	call	___flmul	;wreg free
  8631  014488  C07C  F09D         	movff	?___flmul,_fround$4215
  8632  01448C  C07D  F09E         	movff	?___flmul+1,_fround$4215+1
  8633  014490  C07E  F09F         	movff	?___flmul+2,_fround$4215+2
  8634  014494  C07F  F0A0         	movff	?___flmul+3,_fround$4215+3
  8635                           
  8636                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8637  014498  0E00               	movlw	0
  8638  01449A  0100               	movlb	0	; () banked
  8639  01449C  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  8640  01449E  0E0A               	movlw	10
  8641  0144A0  6F70               	movwf	___awmod@divisor& (0+255),b
  8642  0144A2  C0A1  F06E         	movff	fround@prec,___awmod@dividend
  8643  0144A6  0100               	movlb	0	; () banked
  8644  0144A8  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  8645  0144AA  ECCA  F0AD         	call	___awmod	;wreg free
  8646  0144AE  0100               	movlb	0	; () banked
  8647  0144B0  90D8               	bcf	status,0,c
  8648  0144B2  376E               	rlcf	?___awmod& (0+255),f,b
  8649  0144B4  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  8650  0144B6  0100               	movlb	0	; () banked
  8651  0144B8  90D8               	bcf	status,0,c
  8652  0144BA  376E               	rlcf	?___awmod& (0+255),f,b
  8653  0144BC  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  8654  0144BE  0EB5               	movlw	low __npowers_
  8655  0144C0  0100               	movlb	0	; () banked
  8656  0144C2  256E               	addwf	?___awmod& (0+255),w,b
  8657  0144C4  6EF6               	movwf	tblptrl,c
  8658  0144C6  0EFE               	movlw	high __npowers_
  8659  0144C8  0100               	movlb	0	; () banked
  8660  0144CA  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  8661  0144CC  6EF7               	movwf	tblptrh,c
  8662  0144CE                     	if	1	;There are 3 active tblptr bytes
  8663  0144CE  6AF8               	clrf	tblptru,c
  8664  0144D0  0E00               	movlw	low (__mediumconst shr (0+16))
  8665  0144D2  22F8               	addwfc	tblptru,f,c
  8666  0144D4                     	endif
  8667  0144D4  0009               	tblrd		*+
  8668  0144D6  CFF5 F080          	movff	tablat,___flmul@a
  8669  0144DA  0009               	tblrd		*+
  8670  0144DC  CFF5 F081          	movff	tablat,___flmul@a+1
  8671  0144E0  0009               	tblrd		*+
  8672  0144E2  CFF5 F082          	movff	tablat,___flmul@a+2
  8673  0144E6  000A               	tblrd		*-
  8674  0144E8  CFF5 F083          	movff	tablat,___flmul@a+3
  8675  0144EC  C09D  F07C         	movff	_fround$4215,___flmul@b
  8676  0144F0  C09E  F07D         	movff	_fround$4215+1,___flmul@b+1
  8677  0144F4  C09F  F07E         	movff	_fround$4215+2,___flmul@b+2
  8678  0144F8  C0A0  F07F         	movff	_fround$4215+3,___flmul@b+3
  8679  0144FC  ECCF  F09B         	call	___flmul	;wreg free
  8680  014500  C07C  F099         	movff	?___flmul,_fround$4216
  8681  014504  C07D  F09A         	movff	?___flmul+1,_fround$4216+1
  8682  014508  C07E  F09B         	movff	?___flmul+2,_fround$4216+2
  8683  01450C  C07F  F09C         	movff	?___flmul+3,_fround$4216+3
  8684                           
  8685                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8686  014510  C099  F07C         	movff	_fround$4216,___flmul@b
  8687  014514  C09A  F07D         	movff	_fround$4216+1,___flmul@b+1
  8688  014518  C09B  F07E         	movff	_fround$4216+2,___flmul@b+2
  8689  01451C  C09C  F07F         	movff	_fround$4216+3,___flmul@b+3
  8690  014520  0E00               	movlw	0
  8691  014522  0100               	movlb	0	; () banked
  8692  014524  6F80               	movwf	___flmul@a& (0+255),b
  8693  014526  0E00               	movlw	0
  8694  014528  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8695  01452A  0E00               	movlw	0
  8696  01452C  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8697  01452E  0E3F               	movlw	63
  8698  014530  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8699  014532  ECCF  F09B         	call	___flmul	;wreg free
  8700  014536  C07C  F095         	movff	?___flmul,?_fround
  8701  01453A  C07D  F096         	movff	?___flmul+1,?_fround+1
  8702  01453E  C07E  F097         	movff	?___flmul+2,?_fround+2
  8703  014542  C07F  F098         	movff	?___flmul+3,?_fround+3
  8704  014546  0012               	return	
  8705  014548                     l8118:
  8706                           
  8707                           ;doprnt.c: 415: else if(prec > 10)
  8708  014548  0E0A               	movlw	10
  8709  01454A  0100               	movlb	0	; () banked
  8710  01454C  65A1               	cpfsgt	fround@prec& (0+255),b
  8711  01454E  D078               	goto	l8126
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8715  014550  0E00               	movlw	0
  8716  014552  0100               	movlb	0	; () banked
  8717  014554  6F71               	movwf	(___awmod@divisor+1)& (0+255),b
  8718  014556  0E0A               	movlw	10
  8719  014558  6F70               	movwf	___awmod@divisor& (0+255),b
  8720  01455A  C0A1  F06E         	movff	fround@prec,___awmod@dividend
  8721  01455E  0100               	movlb	0	; () banked
  8722  014560  6B6F               	clrf	(___awmod@dividend+1)& (0+255),b
  8723  014562  ECCA  F0AD         	call	___awmod	;wreg free
  8724  014566  0100               	movlb	0	; () banked
  8725  014568  90D8               	bcf	status,0,c
  8726  01456A  376E               	rlcf	?___awmod& (0+255),f,b
  8727  01456C  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  8728  01456E  0100               	movlb	0	; () banked
  8729  014570  90D8               	bcf	status,0,c
  8730  014572  376E               	rlcf	?___awmod& (0+255),f,b
  8731  014574  376F               	rlcf	(?___awmod+1)& (0+255),f,b
  8732  014576  0EB5               	movlw	low __npowers_
  8733  014578  0100               	movlb	0	; () banked
  8734  01457A  256E               	addwf	?___awmod& (0+255),w,b
  8735  01457C  6EF6               	movwf	tblptrl,c
  8736  01457E  0EFE               	movlw	high __npowers_
  8737  014580  0100               	movlb	0	; () banked
  8738  014582  216F               	addwfc	(?___awmod+1)& (0+255),w,b
  8739  014584  6EF7               	movwf	tblptrh,c
  8740  014586                     	if	1	;There are 3 active tblptr bytes
  8741  014586  6AF8               	clrf	tblptru,c
  8742  014588  0E00               	movlw	low (__mediumconst shr (0+16))
  8743  01458A  22F8               	addwfc	tblptru,f,c
  8744  01458C                     	endif
  8745  01458C  0009               	tblrd		*+
  8746  01458E  CFF5 F080          	movff	tablat,___flmul@a
  8747  014592  0009               	tblrd		*+
  8748  014594  CFF5 F081          	movff	tablat,___flmul@a+1
  8749  014598  0009               	tblrd		*+
  8750  01459A  CFF5 F082          	movff	tablat,___flmul@a+2
  8751  01459E  000A               	tblrd		*-
  8752  0145A0  CFF5 F083          	movff	tablat,___flmul@a+3
  8753  0145A4  0E00               	movlw	0
  8754  0145A6  0100               	movlb	0	; () banked
  8755  0145A8  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
  8756  0145AA  0E0A               	movlw	10
  8757  0145AC  6F76               	movwf	___awdiv@divisor& (0+255),b
  8758  0145AE  C0A1  F074         	movff	fround@prec,___awdiv@dividend
  8759  0145B2  0100               	movlb	0	; () banked
  8760  0145B4  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
  8761  0145B6  ECA8  F0AB         	call	___awdiv	;wreg free
  8762  0145BA  0100               	movlb	0	; () banked
  8763  0145BC  90D8               	bcf	status,0,c
  8764  0145BE  3774               	rlcf	?___awdiv& (0+255),f,b
  8765  0145C0  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8766  0145C2  0100               	movlb	0	; () banked
  8767  0145C4  90D8               	bcf	status,0,c
  8768  0145C6  3774               	rlcf	?___awdiv& (0+255),f,b
  8769  0145C8  3775               	rlcf	(?___awdiv+1)& (0+255),f,b
  8770  0145CA  0E24               	movlw	36
  8771  0145CC  0100               	movlb	0	; () banked
  8772  0145CE  2774               	addwf	?___awdiv& (0+255),f,b
  8773  0145D0  0E00               	movlw	0
  8774  0145D2  0100               	movlb	0	; () banked
  8775  0145D4  2375               	addwfc	(?___awdiv+1)& (0+255),f,b
  8776  0145D6  0EB5               	movlw	low __npowers_
  8777  0145D8  0100               	movlb	0	; () banked
  8778  0145DA  2574               	addwf	?___awdiv& (0+255),w,b
  8779  0145DC  6EF6               	movwf	tblptrl,c
  8780  0145DE  0EFE               	movlw	high __npowers_
  8781  0145E0  0100               	movlb	0	; () banked
  8782  0145E2  2175               	addwfc	(?___awdiv+1)& (0+255),w,b
  8783  0145E4  6EF7               	movwf	tblptrh,c
  8784  0145E6                     	if	1	;There are 3 active tblptr bytes
  8785  0145E6  6AF8               	clrf	tblptru,c
  8786  0145E8  0E00               	movlw	low (__mediumconst shr (0+16))
  8787  0145EA  22F8               	addwfc	tblptru,f,c
  8788  0145EC                     	endif
  8789  0145EC  0009               	tblrd		*+
  8790  0145EE  CFF5 F07C          	movff	tablat,___flmul@b
  8791  0145F2  0009               	tblrd		*+
  8792  0145F4  CFF5 F07D          	movff	tablat,___flmul@b+1
  8793  0145F8  0009               	tblrd		*+
  8794  0145FA  CFF5 F07E          	movff	tablat,___flmul@b+2
  8795  0145FE  000A               	tblrd		*-
  8796  014600  CFF5 F07F          	movff	tablat,___flmul@b+3
  8797  014604  ECCF  F09B         	call	___flmul	;wreg free
  8798  014608  C07C  F09D         	movff	?___flmul,_fround$4215
  8799  01460C  C07D  F09E         	movff	?___flmul+1,_fround$4215+1
  8800  014610  C07E  F09F         	movff	?___flmul+2,_fround$4215+2
  8801  014614  C07F  F0A0         	movff	?___flmul+3,_fround$4215+3
  8802                           
  8803                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8804  014618  C09D  F07C         	movff	_fround$4215,___flmul@b
  8805  01461C  C09E  F07D         	movff	_fround$4215+1,___flmul@b+1
  8806  014620  C09F  F07E         	movff	_fround$4215+2,___flmul@b+2
  8807  014624  C0A0  F07F         	movff	_fround$4215+3,___flmul@b+3
  8808  014628  0E00               	movlw	0
  8809  01462A  0100               	movlb	0	; () banked
  8810  01462C  6F80               	movwf	___flmul@a& (0+255),b
  8811  01462E  0E00               	movlw	0
  8812  014630  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8813  014632  0E00               	movlw	0
  8814  014634  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8815  014636  0E3F               	movlw	63
  8816  014638  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8817  01463A  ECCF  F09B         	call	___flmul	;wreg free
  8818  01463E  D77B               	goto	L9
  8819  014640                     l8126:
  8820                           
  8821                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8822  014640  0100               	movlb	0	; () banked
  8823  014642  51A1               	movf	fround@prec& (0+255),w,b
  8824  014644  0D04               	mullw	4
  8825  014646  0EB5               	movlw	low __npowers_
  8826  014648  24F3               	addwf	prodl,w,c
  8827  01464A  6EF6               	movwf	tblptrl,c
  8828  01464C  0EFE               	movlw	high __npowers_
  8829  01464E  20F4               	addwfc	prodh,w,c
  8830  014650  6EF7               	movwf	tblptrh,c
  8831  014652                     	if	1	;There are 3 active tblptr bytes
  8832  014652  6AF8               	clrf	tblptru,c
  8833  014654  0E00               	movlw	low (__mediumconst shr (0+16))
  8834  014656  22F8               	addwfc	tblptru,f,c
  8835  014658                     	endif
  8836  014658  0009               	tblrd		*+
  8837  01465A  CFF5 F07C          	movff	tablat,___flmul@b
  8838  01465E  0009               	tblrd		*+
  8839  014660  CFF5 F07D          	movff	tablat,___flmul@b+1
  8840  014664  0009               	tblrd		*+
  8841  014666  CFF5 F07E          	movff	tablat,___flmul@b+2
  8842  01466A  000A               	tblrd		*-
  8843  01466C  CFF5 F07F          	movff	tablat,___flmul@b+3
  8844  014670  0E00               	movlw	0
  8845  014672  0100               	movlb	0	; () banked
  8846  014674  6F80               	movwf	___flmul@a& (0+255),b
  8847  014676  0E00               	movlw	0
  8848  014678  6F81               	movwf	(___flmul@a+1)& (0+255),b
  8849  01467A  0E00               	movlw	0
  8850  01467C  6F82               	movwf	(___flmul@a+2)& (0+255),b
  8851  01467E  0E3F               	movlw	63
  8852  014680  6F83               	movwf	(___flmul@a+3)& (0+255),b
  8853  014682  ECCF  F09B         	call	___flmul	;wreg free
  8854  014686  C07C  F095         	movff	?___flmul,?_fround
  8855  01468A  C07D  F096         	movff	?___flmul+1,?_fround+1
  8856  01468E  C07E  F097         	movff	?___flmul+2,?_fround+2
  8857  014692  C07F  F098         	movff	?___flmul+3,?_fround+3
  8858  014696  0012               	return	
  8859  014698                     __end_of_fround:
  8860                           	opt stack 0
  8861                           tblptru	equ	0xFF8
  8862                           tblptrh	equ	0xFF7
  8863                           tblptrl	equ	0xFF6
  8864                           tablat	equ	0xFF5
  8865                           prodh	equ	0xFF4
  8866                           prodl	equ	0xFF3
  8867                           intcon	equ	0xFF2
  8868                           postinc0	equ	0xFEE
  8869                           wreg	equ	0xFE8
  8870                           indf2	equ	0xFDF
  8871                           postinc2	equ	0xFDE
  8872                           fsr2h	equ	0xFDA
  8873                           fsr2l	equ	0xFD9
  8874                           status	equ	0xFD8
  8875                           
  8876 ;; *************** function ___flmul *****************
  8877 ;; Defined at:
  8878 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8879 ;; Parameters:    Size  Location     Type
  8880 ;;  b               4   28[BANK0 ] unsigned char 
  8881 ;;  a               4   32[BANK0 ] unsigned char 
  8882 ;; Auto vars:     Size  Location     Type
  8883 ;;  prod            4   47[BANK0 ] struct .
  8884 ;;  grs             4   42[BANK0 ] unsigned long 
  8885 ;;  temp            2   51[BANK0 ] struct .
  8886 ;;  bexp            1   46[BANK0 ] unsigned char 
  8887 ;;  aexp            1   41[BANK0 ] unsigned char 
  8888 ;;  sign            1   40[BANK0 ] unsigned char 
  8889 ;; Return value:  Size  Location     Type
  8890 ;;                  4   28[BANK0 ] unsigned char 
  8891 ;; Registers used:
  8892 ;;		wreg, status,2, status,0, prodl, prodh
  8893 ;; Tracked objects:
  8894 ;;		On entry : 0/0
  8895 ;;		On exit  : 0/0
  8896 ;;		Unchanged: 0/0
  8897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8898 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8899 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8900 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8901 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8902 ;;Total ram usage:       25 bytes
  8903 ;; Hardware stack levels used:    1
  8904 ;; Hardware stack levels required when called:    3
  8905 ;; This function calls:
  8906 ;;		Nothing
  8907 ;; This function is called by:
  8908 ;;		_main
  8909 ;;		_fround
  8910 ;;		_scale
  8911 ;;		_sprintf
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915                           	psect	text12
  8916  01379E                     __ptext12:
  8917                           	opt stack 0
  8918  01379E                     ___flmul:
  8919                           	opt stack 27
  8920                           
  8921                           ;incstack = 0
  8922  01379E  0100               	movlb	0	; () banked
  8923  0137A0  517F               	movf	(___flmul@b+3)& (0+255),w,b
  8924  0137A2  0B80               	andlw	128
  8925  0137A4  0100               	movlb	0	; () banked
  8926  0137A6  6F88               	movwf	___flmul@sign& (0+255),b
  8927  0137A8  0100               	movlb	0	; () banked
  8928  0137AA  517F               	movf	(___flmul@b+3)& (0+255),w,b
  8929  0137AC  257F               	addwf	(___flmul@b+3)& (0+255),w,b
  8930  0137AE  0100               	movlb	0	; () banked
  8931  0137B0  6F8E               	movwf	___flmul@bexp& (0+255),b
  8932                           
  8933                           ; BSR set to: 0
  8934  0137B2  0100               	movlb	0	; () banked
  8935  0137B4  AF7E               	btfss	(___flmul@b+2)& (0+255),7,b
  8936  0137B6  D002               	goto	l7872
  8937                           
  8938                           ; BSR set to: 0
  8939  0137B8  0100               	movlb	0	; () banked
  8940  0137BA  818E               	bsf	___flmul@bexp& (0+255),0,b
  8941  0137BC                     l7872:
  8942                           
  8943                           ; BSR set to: 0
  8944  0137BC  0100               	movlb	0	; () banked
  8945  0137BE  518E               	movf	___flmul@bexp& (0+255),w,b
  8946  0137C0  0100               	movlb	0	; () banked
  8947  0137C2  B4D8               	btfsc	status,2,c
  8948  0137C4  D010               	goto	l7880
  8949                           
  8950                           ; BSR set to: 0
  8951  0137C6  0100               	movlb	0	; () banked
  8952  0137C8  298E               	incf	___flmul@bexp& (0+255),w,b
  8953  0137CA  A4D8               	btfss	status,2,c
  8954  0137CC  D009               	goto	l7878
  8955                           
  8956                           ; BSR set to: 0
  8957  0137CE  0E00               	movlw	0
  8958  0137D0  0100               	movlb	0	; () banked
  8959  0137D2  6F7C               	movwf	___flmul@b& (0+255),b
  8960  0137D4  0E00               	movlw	0
  8961  0137D6  6F7D               	movwf	(___flmul@b+1)& (0+255),b
  8962  0137D8  0E00               	movlw	0
  8963  0137DA  6F7E               	movwf	(___flmul@b+2)& (0+255),b
  8964  0137DC  0E00               	movlw	0
  8965  0137DE  6F7F               	movwf	(___flmul@b+3)& (0+255),b
  8966  0137E0                     l7878:
  8967                           
  8968                           ; BSR set to: 0
  8969  0137E0  0100               	movlb	0	; () banked
  8970  0137E2  8F7E               	bsf	(___flmul@b+2)& (0+255),7,b
  8971  0137E4  D009               	goto	l7882
  8972  0137E6                     l7880:
  8973                           
  8974                           ; BSR set to: 0
  8975  0137E6  0E00               	movlw	0
  8976  0137E8  0100               	movlb	0	; () banked
  8977  0137EA  6F7C               	movwf	___flmul@b& (0+255),b
  8978  0137EC  0E00               	movlw	0
  8979  0137EE  6F7D               	movwf	(___flmul@b+1)& (0+255),b
  8980  0137F0  0E00               	movlw	0
  8981  0137F2  6F7E               	movwf	(___flmul@b+2)& (0+255),b
  8982  0137F4  0E00               	movlw	0
  8983  0137F6  6F7F               	movwf	(___flmul@b+3)& (0+255),b
  8984  0137F8                     l7882:
  8985                           
  8986                           ; BSR set to: 0
  8987  0137F8  0100               	movlb	0	; () banked
  8988  0137FA  5183               	movf	(___flmul@a+3)& (0+255),w,b
  8989  0137FC  0B80               	andlw	128
  8990  0137FE  0100               	movlb	0	; () banked
  8991  013800  1B88               	xorwf	___flmul@sign& (0+255),f,b
  8992                           
  8993                           ; BSR set to: 0
  8994  013802  0100               	movlb	0	; () banked
  8995  013804  5183               	movf	(___flmul@a+3)& (0+255),w,b
  8996  013806  2583               	addwf	(___flmul@a+3)& (0+255),w,b
  8997  013808  0100               	movlb	0	; () banked
  8998  01380A  6F89               	movwf	___flmul@aexp& (0+255),b
  8999                           
  9000                           ; BSR set to: 0
  9001  01380C  0100               	movlb	0	; () banked
  9002  01380E  AF82               	btfss	(___flmul@a+2)& (0+255),7,b
  9003  013810  D002               	goto	l7890
  9004                           
  9005                           ; BSR set to: 0
  9006  013812  0100               	movlb	0	; () banked
  9007  013814  8189               	bsf	___flmul@aexp& (0+255),0,b
  9008  013816                     l7890:
  9009                           
  9010                           ; BSR set to: 0
  9011  013816  0100               	movlb	0	; () banked
  9012  013818  5189               	movf	___flmul@aexp& (0+255),w,b
  9013  01381A  0100               	movlb	0	; () banked
  9014  01381C  B4D8               	btfsc	status,2,c
  9015  01381E  D010               	goto	l7898
  9016                           
  9017                           ; BSR set to: 0
  9018  013820  0100               	movlb	0	; () banked
  9019  013822  2989               	incf	___flmul@aexp& (0+255),w,b
  9020  013824  A4D8               	btfss	status,2,c
  9021  013826  D009               	goto	l7896
  9022                           
  9023                           ; BSR set to: 0
  9024  013828  0E00               	movlw	0
  9025  01382A  0100               	movlb	0	; () banked
  9026  01382C  6F80               	movwf	___flmul@a& (0+255),b
  9027  01382E  0E00               	movlw	0
  9028  013830  6F81               	movwf	(___flmul@a+1)& (0+255),b
  9029  013832  0E00               	movlw	0
  9030  013834  6F82               	movwf	(___flmul@a+2)& (0+255),b
  9031  013836  0E00               	movlw	0
  9032  013838  6F83               	movwf	(___flmul@a+3)& (0+255),b
  9033  01383A                     l7896:
  9034                           
  9035                           ; BSR set to: 0
  9036  01383A  0100               	movlb	0	; () banked
  9037  01383C  8F82               	bsf	(___flmul@a+2)& (0+255),7,b
  9038  01383E  D009               	goto	l1582
  9039  013840                     l7898:
  9040                           
  9041                           ; BSR set to: 0
  9042  013840  0E00               	movlw	0
  9043  013842  0100               	movlb	0	; () banked
  9044  013844  6F80               	movwf	___flmul@a& (0+255),b
  9045  013846  0E00               	movlw	0
  9046  013848  6F81               	movwf	(___flmul@a+1)& (0+255),b
  9047  01384A  0E00               	movlw	0
  9048  01384C  6F82               	movwf	(___flmul@a+2)& (0+255),b
  9049  01384E  0E00               	movlw	0
  9050  013850  6F83               	movwf	(___flmul@a+3)& (0+255),b
  9051  013852                     l1582:
  9052                           
  9053                           ; BSR set to: 0
  9054  013852  0100               	movlb	0	; () banked
  9055  013854  5189               	movf	___flmul@aexp& (0+255),w,b
  9056  013856  0100               	movlb	0	; () banked
  9057  013858  B4D8               	btfsc	status,2,c
  9058  01385A  D005               	goto	l7902
  9059                           
  9060                           ; BSR set to: 0
  9061  01385C  0100               	movlb	0	; () banked
  9062  01385E  518E               	movf	___flmul@bexp& (0+255),w,b
  9063  013860  0100               	movlb	0	; () banked
  9064  013862  A4D8               	btfss	status,2,c
  9065  013864  D00A               	goto	l7906
  9066  013866                     l7902:
  9067                           
  9068                           ; BSR set to: 0
  9069  013866  0E00               	movlw	0
  9070  013868  0100               	movlb	0	; () banked
  9071  01386A  6F7C               	movwf	?___flmul& (0+255),b
  9072  01386C  0E00               	movlw	0
  9073  01386E  6F7D               	movwf	(?___flmul+1)& (0+255),b
  9074  013870  0E00               	movlw	0
  9075  013872  6F7E               	movwf	(?___flmul+2)& (0+255),b
  9076  013874  0E00               	movlw	0
  9077  013876  6F7F               	movwf	(?___flmul+3)& (0+255),b
  9078                           
  9079                           ; BSR set to: 0
  9080  013878  0012               	return	
  9081  01387A                     l7906:
  9082                           
  9083                           ; BSR set to: 0
  9084  01387A  0100               	movlb	0	; () banked
  9085  01387C  5182               	movf	(___flmul@a+2)& (0+255),w,b
  9086  01387E  0100               	movlb	0	; () banked
  9087  013880  037C               	mulwf	___flmul@b& (0+255),b
  9088  013882  CFF3 F093          	movff	prodl,___flmul@temp
  9089  013886  CFF4 F094          	movff	prodh,___flmul@temp+1
  9090                           
  9091                           ; BSR set to: 0
  9092  01388A  0100               	movlb	0	; () banked
  9093  01388C  5193               	movf	___flmul@temp& (0+255),w,b
  9094  01388E  0100               	movlb	0	; () banked
  9095  013890  6F8A               	movwf	___flmul@grs& (0+255),b
  9096  013892  6B8B               	clrf	(___flmul@grs+1)& (0+255),b
  9097  013894  6B8C               	clrf	(___flmul@grs+2)& (0+255),b
  9098  013896  6B8D               	clrf	(___flmul@grs+3)& (0+255),b
  9099                           
  9100                           ; BSR set to: 0
  9101  013898  0100               	movlb	0	; () banked
  9102  01389A  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  9103  01389C  0100               	movlb	0	; () banked
  9104  01389E  6F8F               	movwf	___flmul@prod& (0+255),b
  9105  0138A0  6B90               	clrf	(___flmul@prod+1)& (0+255),b
  9106  0138A2  6B91               	clrf	(___flmul@prod+2)& (0+255),b
  9107  0138A4  6B92               	clrf	(___flmul@prod+3)& (0+255),b
  9108  0138A6  0100               	movlb	0	; () banked
  9109  0138A8  5181               	movf	(___flmul@a+1)& (0+255),w,b
  9110  0138AA  0100               	movlb	0	; () banked
  9111  0138AC  037D               	mulwf	(___flmul@b+1)& (0+255),b
  9112  0138AE  CFF3 F093          	movff	prodl,___flmul@temp
  9113  0138B2  CFF4 F094          	movff	prodh,___flmul@temp+1
  9114                           
  9115                           ; BSR set to: 0
  9116  0138B6  0100               	movlb	0	; () banked
  9117  0138B8  5193               	movf	___flmul@temp& (0+255),w,b
  9118  0138BA  0100               	movlb	0	; () banked
  9119  0138BC  278A               	addwf	___flmul@grs& (0+255),f,b
  9120  0138BE  0E00               	movlw	0
  9121  0138C0  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9122  0138C2  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9123  0138C4  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9124                           
  9125                           ; BSR set to: 0
  9126  0138C6  0100               	movlb	0	; () banked
  9127  0138C8  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  9128  0138CA  0100               	movlb	0	; () banked
  9129  0138CC  278F               	addwf	___flmul@prod& (0+255),f,b
  9130  0138CE  0E00               	movlw	0
  9131  0138D0  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9132  0138D2  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9133  0138D4  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9134  0138D6  0100               	movlb	0	; () banked
  9135  0138D8  5180               	movf	___flmul@a& (0+255),w,b
  9136  0138DA  0100               	movlb	0	; () banked
  9137  0138DC  037E               	mulwf	(___flmul@b+2)& (0+255),b
  9138  0138DE  CFF3 F093          	movff	prodl,___flmul@temp
  9139  0138E2  CFF4 F094          	movff	prodh,___flmul@temp+1
  9140                           
  9141                           ; BSR set to: 0
  9142  0138E6  0100               	movlb	0	; () banked
  9143  0138E8  5193               	movf	___flmul@temp& (0+255),w,b
  9144  0138EA  0100               	movlb	0	; () banked
  9145  0138EC  278A               	addwf	___flmul@grs& (0+255),f,b
  9146  0138EE  0E00               	movlw	0
  9147  0138F0  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9148  0138F2  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9149  0138F4  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9150                           
  9151                           ; BSR set to: 0
  9152  0138F6  0100               	movlb	0	; () banked
  9153  0138F8  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  9154  0138FA  0100               	movlb	0	; () banked
  9155  0138FC  278F               	addwf	___flmul@prod& (0+255),f,b
  9156  0138FE  0E00               	movlw	0
  9157  013900  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9158  013902  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9159  013904  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9160                           
  9161                           ; BSR set to: 0
  9162  013906  C08C  F08D         	movff	___flmul@grs+2,___flmul@grs+3
  9163  01390A  C08B  F08C         	movff	___flmul@grs+1,___flmul@grs+2
  9164  01390E  C08A  F08B         	movff	___flmul@grs,___flmul@grs+1
  9165  013912  0100               	movlb	0	; () banked
  9166  013914  6B8A               	clrf	___flmul@grs& (0+255),b
  9167                           
  9168                           ; BSR set to: 0
  9169  013916  0100               	movlb	0	; () banked
  9170  013918  5180               	movf	___flmul@a& (0+255),w,b
  9171  01391A  0100               	movlb	0	; () banked
  9172  01391C  037D               	mulwf	(___flmul@b+1)& (0+255),b
  9173  01391E  CFF3 F093          	movff	prodl,___flmul@temp
  9174  013922  CFF4 F094          	movff	prodh,___flmul@temp+1
  9175                           
  9176                           ; BSR set to: 0
  9177  013926  0100               	movlb	0	; () banked
  9178  013928  5193               	movf	___flmul@temp& (0+255),w,b
  9179  01392A  0100               	movlb	0	; () banked
  9180  01392C  278A               	addwf	___flmul@grs& (0+255),f,b
  9181  01392E  0100               	movlb	0	; () banked
  9182  013930  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  9183  013932  0100               	movlb	0	; () banked
  9184  013934  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9185  013936  0E00               	movlw	0
  9186  013938  0100               	movlb	0	; () banked
  9187  01393A  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9188  01393C  0E00               	movlw	0
  9189  01393E  0100               	movlb	0	; () banked
  9190  013940  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9191                           
  9192                           ; BSR set to: 0
  9193  013942  0100               	movlb	0	; () banked
  9194  013944  5181               	movf	(___flmul@a+1)& (0+255),w,b
  9195  013946  0100               	movlb	0	; () banked
  9196  013948  037C               	mulwf	___flmul@b& (0+255),b
  9197  01394A  CFF3 F093          	movff	prodl,___flmul@temp
  9198  01394E  CFF4 F094          	movff	prodh,___flmul@temp+1
  9199                           
  9200                           ; BSR set to: 0
  9201  013952  0100               	movlb	0	; () banked
  9202  013954  5193               	movf	___flmul@temp& (0+255),w,b
  9203  013956  0100               	movlb	0	; () banked
  9204  013958  278A               	addwf	___flmul@grs& (0+255),f,b
  9205  01395A  0100               	movlb	0	; () banked
  9206  01395C  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  9207  01395E  0100               	movlb	0	; () banked
  9208  013960  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9209  013962  0E00               	movlw	0
  9210  013964  0100               	movlb	0	; () banked
  9211  013966  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9212  013968  0E00               	movlw	0
  9213  01396A  0100               	movlb	0	; () banked
  9214  01396C  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9215                           
  9216                           ; BSR set to: 0
  9217  01396E  C08C  F08D         	movff	___flmul@grs+2,___flmul@grs+3
  9218  013972  C08B  F08C         	movff	___flmul@grs+1,___flmul@grs+2
  9219  013976  C08A  F08B         	movff	___flmul@grs,___flmul@grs+1
  9220  01397A  0100               	movlb	0	; () banked
  9221  01397C  6B8A               	clrf	___flmul@grs& (0+255),b
  9222  01397E  0100               	movlb	0	; () banked
  9223  013980  5180               	movf	___flmul@a& (0+255),w,b
  9224  013982  0100               	movlb	0	; () banked
  9225  013984  037C               	mulwf	___flmul@b& (0+255),b
  9226  013986  CFF3 F093          	movff	prodl,___flmul@temp
  9227  01398A  CFF4 F094          	movff	prodh,___flmul@temp+1
  9228                           
  9229                           ; BSR set to: 0
  9230  01398E  0100               	movlb	0	; () banked
  9231  013990  5193               	movf	___flmul@temp& (0+255),w,b
  9232  013992  0100               	movlb	0	; () banked
  9233  013994  278A               	addwf	___flmul@grs& (0+255),f,b
  9234  013996  0100               	movlb	0	; () banked
  9235  013998  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  9236  01399A  0100               	movlb	0	; () banked
  9237  01399C  238B               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9238  01399E  0E00               	movlw	0
  9239  0139A0  0100               	movlb	0	; () banked
  9240  0139A2  238C               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9241  0139A4  0E00               	movlw	0
  9242  0139A6  0100               	movlb	0	; () banked
  9243  0139A8  238D               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9244                           
  9245                           ; BSR set to: 0
  9246  0139AA  0100               	movlb	0	; () banked
  9247  0139AC  5182               	movf	(___flmul@a+2)& (0+255),w,b
  9248  0139AE  0100               	movlb	0	; () banked
  9249  0139B0  037D               	mulwf	(___flmul@b+1)& (0+255),b
  9250  0139B2  CFF3 F093          	movff	prodl,___flmul@temp
  9251  0139B6  CFF4 F094          	movff	prodh,___flmul@temp+1
  9252  0139BA  0100               	movlb	0	; () banked
  9253  0139BC  5193               	movf	___flmul@temp& (0+255),w,b
  9254  0139BE  0100               	movlb	0	; () banked
  9255  0139C0  278F               	addwf	___flmul@prod& (0+255),f,b
  9256  0139C2  0100               	movlb	0	; () banked
  9257  0139C4  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  9258  0139C6  0100               	movlb	0	; () banked
  9259  0139C8  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9260  0139CA  0E00               	movlw	0
  9261  0139CC  0100               	movlb	0	; () banked
  9262  0139CE  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9263  0139D0  0E00               	movlw	0
  9264  0139D2  0100               	movlb	0	; () banked
  9265  0139D4  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9266                           
  9267                           ; BSR set to: 0
  9268  0139D6  0100               	movlb	0	; () banked
  9269  0139D8  5181               	movf	(___flmul@a+1)& (0+255),w,b
  9270  0139DA  0100               	movlb	0	; () banked
  9271  0139DC  037E               	mulwf	(___flmul@b+2)& (0+255),b
  9272  0139DE  CFF3 F093          	movff	prodl,___flmul@temp
  9273  0139E2  CFF4 F094          	movff	prodh,___flmul@temp+1
  9274                           
  9275                           ; BSR set to: 0
  9276  0139E6  0100               	movlb	0	; () banked
  9277  0139E8  5193               	movf	___flmul@temp& (0+255),w,b
  9278  0139EA  0100               	movlb	0	; () banked
  9279  0139EC  278F               	addwf	___flmul@prod& (0+255),f,b
  9280  0139EE  0100               	movlb	0	; () banked
  9281  0139F0  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  9282  0139F2  0100               	movlb	0	; () banked
  9283  0139F4  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9284  0139F6  0E00               	movlw	0
  9285  0139F8  0100               	movlb	0	; () banked
  9286  0139FA  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9287  0139FC  0E00               	movlw	0
  9288  0139FE  0100               	movlb	0	; () banked
  9289  013A00  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9290  013A02  0100               	movlb	0	; () banked
  9291  013A04  5182               	movf	(___flmul@a+2)& (0+255),w,b
  9292  013A06  0100               	movlb	0	; () banked
  9293  013A08  037E               	mulwf	(___flmul@b+2)& (0+255),b
  9294  013A0A  CFF3 F093          	movff	prodl,___flmul@temp
  9295  013A0E  CFF4 F094          	movff	prodh,___flmul@temp+1
  9296                           
  9297                           ; BSR set to: 0
  9298  013A12  0100               	movlb	0	; () banked
  9299  013A14  5193               	movf	___flmul@temp& (0+255),w,b
  9300  013A16  0100               	movlb	0	; () banked
  9301  013A18  6F84               	movwf	??___flmul& (0+255),b
  9302  013A1A  0100               	movlb	0	; () banked
  9303  013A1C  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  9304  013A1E  0100               	movlb	0	; () banked
  9305  013A20  6F85               	movwf	(??___flmul+1)& (0+255),b
  9306  013A22  0100               	movlb	0	; () banked
  9307  013A24  6B86               	clrf	(??___flmul+2)& (0+255),b
  9308  013A26  0100               	movlb	0	; () banked
  9309  013A28  6B87               	clrf	(??___flmul+3)& (0+255),b
  9310  013A2A  C086  F087         	movff	??___flmul+2,??___flmul+3
  9311  013A2E  C085  F086         	movff	??___flmul+1,??___flmul+2
  9312  013A32  C084  F085         	movff	??___flmul,??___flmul+1
  9313  013A36  0100               	movlb	0	; () banked
  9314  013A38  6B84               	clrf	??___flmul& (0+255),b
  9315  013A3A  0100               	movlb	0	; () banked
  9316  013A3C  5184               	movf	??___flmul& (0+255),w,b
  9317  013A3E  0100               	movlb	0	; () banked
  9318  013A40  278F               	addwf	___flmul@prod& (0+255),f,b
  9319  013A42  0100               	movlb	0	; () banked
  9320  013A44  5185               	movf	(??___flmul+1)& (0+255),w,b
  9321  013A46  0100               	movlb	0	; () banked
  9322  013A48  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9323  013A4A  0100               	movlb	0	; () banked
  9324  013A4C  5186               	movf	(??___flmul+2)& (0+255),w,b
  9325  013A4E  0100               	movlb	0	; () banked
  9326  013A50  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9327  013A52  0100               	movlb	0	; () banked
  9328  013A54  5187               	movf	(??___flmul+3)& (0+255),w,b
  9329  013A56  0100               	movlb	0	; () banked
  9330  013A58  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9331                           
  9332                           ; BSR set to: 0
  9333  013A5A  C08A  F084         	movff	___flmul@grs,??___flmul
  9334  013A5E  C08B  F085         	movff	___flmul@grs+1,??___flmul+1
  9335  013A62  C08C  F086         	movff	___flmul@grs+2,??___flmul+2
  9336  013A66  C08D  F087         	movff	___flmul@grs+3,??___flmul+3
  9337  013A6A  0E19               	movlw	25
  9338  013A6C  D006               	goto	u10580
  9339  013A6E                     u10585:
  9340  013A6E  0100               	movlb	0	; () banked
  9341  013A70  90D8               	bcf	status,0,c
  9342  013A72  3387               	rrcf	(??___flmul+3)& (0+255),f,b
  9343  013A74  3386               	rrcf	(??___flmul+2)& (0+255),f,b
  9344  013A76  3385               	rrcf	(??___flmul+1)& (0+255),f,b
  9345  013A78  3384               	rrcf	??___flmul& (0+255),f,b
  9346  013A7A                     u10580:
  9347  013A7A  2EE8               	decfsz	wreg,f,c
  9348  013A7C  D7F8               	goto	u10585
  9349  013A7E  0100               	movlb	0	; () banked
  9350  013A80  5184               	movf	??___flmul& (0+255),w,b
  9351  013A82  0100               	movlb	0	; () banked
  9352  013A84  278F               	addwf	___flmul@prod& (0+255),f,b
  9353  013A86  0100               	movlb	0	; () banked
  9354  013A88  5185               	movf	(??___flmul+1)& (0+255),w,b
  9355  013A8A  0100               	movlb	0	; () banked
  9356  013A8C  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9357  013A8E  0100               	movlb	0	; () banked
  9358  013A90  5186               	movf	(??___flmul+2)& (0+255),w,b
  9359  013A92  0100               	movlb	0	; () banked
  9360  013A94  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9361  013A96  0100               	movlb	0	; () banked
  9362  013A98  5187               	movf	(??___flmul+3)& (0+255),w,b
  9363  013A9A  0100               	movlb	0	; () banked
  9364  013A9C  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9365                           
  9366                           ; BSR set to: 0
  9367  013A9E  C08C  F08D         	movff	___flmul@grs+2,___flmul@grs+3
  9368  013AA2  C08B  F08C         	movff	___flmul@grs+1,___flmul@grs+2
  9369  013AA6  C08A  F08B         	movff	___flmul@grs,___flmul@grs+1
  9370  013AAA  0100               	movlb	0	; () banked
  9371  013AAC  6B8A               	clrf	___flmul@grs& (0+255),b
  9372                           
  9373                           ; BSR set to: 0
  9374  013AAE  0100               	movlb	0	; () banked
  9375  013AB0  5189               	movf	___flmul@aexp& (0+255),w,b
  9376  013AB2  C08E  F084         	movff	___flmul@bexp,??___flmul
  9377  013AB6  0100               	movlb	0	; () banked
  9378  013AB8  6B85               	clrf	(??___flmul+1)& (0+255),b
  9379  013ABA  0100               	movlb	0	; () banked
  9380  013ABC  2784               	addwf	??___flmul& (0+255),f,b
  9381  013ABE  0E00               	movlw	0
  9382  013AC0  2385               	addwfc	(??___flmul+1)& (0+255),f,b
  9383  013AC2  0E82               	movlw	130
  9384  013AC4  0100               	movlb	0	; () banked
  9385  013AC6  2584               	addwf	??___flmul& (0+255),w,b
  9386  013AC8  0100               	movlb	0	; () banked
  9387  013ACA  6F93               	movwf	___flmul@temp& (0+255),b
  9388  013ACC  0EFF               	movlw	255
  9389  013ACE  0100               	movlb	0	; () banked
  9390  013AD0  2185               	addwfc	(??___flmul+1)& (0+255),w,b
  9391  013AD2  0100               	movlb	0	; () banked
  9392  013AD4  6F94               	movwf	(___flmul@temp+1)& (0+255),b
  9393  013AD6  D015               	goto	l7954
  9394  013AD8                     l7948:
  9395                           
  9396                           ; BSR set to: 0
  9397  013AD8  0100               	movlb	0	; () banked
  9398  013ADA  90D8               	bcf	status,0,c
  9399  013ADC  378F               	rlcf	___flmul@prod& (0+255),f,b
  9400  013ADE  3790               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9401  013AE0  3791               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9402  013AE2  3792               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9403                           
  9404                           ; BSR set to: 0
  9405  013AE4  0100               	movlb	0	; () banked
  9406  013AE6  AF8D               	btfss	(___flmul@grs+3)& (0+255),7,b
  9407  013AE8  D002               	goto	l1589
  9408                           
  9409                           ; BSR set to: 0
  9410  013AEA  0100               	movlb	0	; () banked
  9411  013AEC  818F               	bsf	___flmul@prod& (0+255),0,b
  9412  013AEE                     l1589:
  9413                           
  9414                           ; BSR set to: 0
  9415  013AEE  0100               	movlb	0	; () banked
  9416  013AF0  90D8               	bcf	status,0,c
  9417  013AF2  378A               	rlcf	___flmul@grs& (0+255),f,b
  9418  013AF4  378B               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9419  013AF6  378C               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9420  013AF8  378D               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9421  013AFA  0100               	movlb	0	; () banked
  9422  013AFC  0793               	decf	___flmul@temp& (0+255),f,b
  9423  013AFE  A0D8               	btfss	status,0,c
  9424  013B00  0794               	decf	(___flmul@temp+1)& (0+255),f,b
  9425  013B02                     l7954:
  9426                           
  9427                           ; BSR set to: 0
  9428  013B02  0100               	movlb	0	; () banked
  9429  013B04  AF91               	btfss	(___flmul@prod+2)& (0+255),7,b
  9430  013B06  D7E8               	goto	l7948
  9431                           
  9432                           ; BSR set to: 0
  9433                           
  9434                           ; BSR set to: 0
  9435  013B08  0E00               	movlw	0
  9436  013B0A  0100               	movlb	0	; () banked
  9437  013B0C  6F89               	movwf	___flmul@aexp& (0+255),b
  9438                           
  9439                           ; BSR set to: 0
  9440  013B0E  0100               	movlb	0	; () banked
  9441  013B10  AF8D               	btfss	(___flmul@grs+3)& (0+255),7,b
  9442  013B12  D024               	goto	l1591
  9443                           
  9444                           ; BSR set to: 0
  9445  013B14  0EFF               	movlw	255
  9446  013B16  0100               	movlb	0	; () banked
  9447  013B18  158A               	andwf	___flmul@grs& (0+255),w,b
  9448  013B1A  0100               	movlb	0	; () banked
  9449  013B1C  6F84               	movwf	??___flmul& (0+255),b
  9450  013B1E  0EFF               	movlw	255
  9451  013B20  0100               	movlb	0	; () banked
  9452  013B22  158B               	andwf	(___flmul@grs+1)& (0+255),w,b
  9453  013B24  0100               	movlb	0	; () banked
  9454  013B26  6F85               	movwf	(??___flmul+1)& (0+255),b
  9455  013B28  0EFF               	movlw	255
  9456  013B2A  0100               	movlb	0	; () banked
  9457  013B2C  158C               	andwf	(___flmul@grs+2)& (0+255),w,b
  9458  013B2E  0100               	movlb	0	; () banked
  9459  013B30  6F86               	movwf	(??___flmul+2)& (0+255),b
  9460  013B32  0E7F               	movlw	127
  9461  013B34  0100               	movlb	0	; () banked
  9462  013B36  158D               	andwf	(___flmul@grs+3)& (0+255),w,b
  9463  013B38  0100               	movlb	0	; () banked
  9464  013B3A  6F87               	movwf	(??___flmul+3)& (0+255),b
  9465  013B3C  0100               	movlb	0	; () banked
  9466  013B3E  5184               	movf	??___flmul& (0+255),w,b
  9467  013B40  0100               	movlb	0	; () banked
  9468  013B42  1185               	iorwf	(??___flmul+1)& (0+255),w,b
  9469  013B44  0100               	movlb	0	; () banked
  9470  013B46  1186               	iorwf	(??___flmul+2)& (0+255),w,b
  9471  013B48  0100               	movlb	0	; () banked
  9472  013B4A  1187               	iorwf	(??___flmul+3)& (0+255),w,b
  9473  013B4C  A4D8               	btfss	status,2,c
  9474  013B4E  D003               	goto	l7964
  9475                           
  9476                           ; BSR set to: 0
  9477                           
  9478                           ; BSR set to: 0
  9479  013B50  0100               	movlb	0	; () banked
  9480  013B52  A18F               	btfss	___flmul@prod& (0+255),0,b
  9481  013B54  D003               	goto	l1591
  9482  013B56                     l7964:
  9483                           
  9484                           ; BSR set to: 0
  9485  013B56  0E01               	movlw	1
  9486  013B58  0100               	movlb	0	; () banked
  9487  013B5A  6F89               	movwf	___flmul@aexp& (0+255),b
  9488  013B5C                     l1591:
  9489                           
  9490                           ; BSR set to: 0
  9491  013B5C  0100               	movlb	0	; () banked
  9492  013B5E  5189               	movf	___flmul@aexp& (0+255),w,b
  9493  013B60  0100               	movlb	0	; () banked
  9494  013B62  B4D8               	btfsc	status,2,c
  9495  013B64  D023               	goto	l7974
  9496                           
  9497                           ; BSR set to: 0
  9498  013B66  0E01               	movlw	1
  9499  013B68  0100               	movlb	0	; () banked
  9500  013B6A  278F               	addwf	___flmul@prod& (0+255),f,b
  9501  013B6C  0E00               	movlw	0
  9502  013B6E  2390               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9503  013B70  2391               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9504  013B72  2392               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9505                           
  9506                           ; BSR set to: 0
  9507  013B74  0100               	movlb	0	; () banked
  9508  013B76  A192               	btfss	(___flmul@prod+3)& (0+255),0,b
  9509  013B78  D019               	goto	l7974
  9510                           
  9511                           ; BSR set to: 0
  9512  013B7A  C08F  F084         	movff	___flmul@prod,??___flmul
  9513  013B7E  C090  F085         	movff	___flmul@prod+1,??___flmul+1
  9514  013B82  C091  F086         	movff	___flmul@prod+2,??___flmul+2
  9515  013B86  C092  F087         	movff	___flmul@prod+3,??___flmul+3
  9516  013B8A  0100               	movlb	0	; () banked
  9517  013B8C  3587               	rlcf	(??___flmul+3)& (0+255),w,b
  9518  013B8E  3387               	rrcf	(??___flmul+3)& (0+255),f,b
  9519  013B90  3386               	rrcf	(??___flmul+2)& (0+255),f,b
  9520  013B92  3385               	rrcf	(??___flmul+1)& (0+255),f,b
  9521  013B94  3384               	rrcf	??___flmul& (0+255),f,b
  9522  013B96  C084  F08F         	movff	??___flmul,___flmul@prod
  9523  013B9A  C085  F090         	movff	??___flmul+1,___flmul@prod+1
  9524  013B9E  C086  F091         	movff	??___flmul+2,___flmul@prod+2
  9525  013BA2  C087  F092         	movff	??___flmul+3,___flmul@prod+3
  9526                           
  9527                           ; BSR set to: 0
  9528  013BA6  0100               	movlb	0	; () banked
  9529  013BA8  4B93               	infsnz	___flmul@temp& (0+255),f,b
  9530  013BAA  2B94               	incf	(___flmul@temp+1)& (0+255),f,b
  9531  013BAC                     l7974:
  9532                           
  9533                           ; BSR set to: 0
  9534  013BAC  0100               	movlb	0	; () banked
  9535  013BAE  BF94               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9536  013BB0  D010               	goto	l7978
  9537  013BB2  0100               	movlb	0	; () banked
  9538  013BB4  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  9539  013BB6  E104               	bnz	u10660
  9540  013BB8  0100               	movlb	0	; () banked
  9541  013BBA  2993               	incf	___flmul@temp& (0+255),w,b
  9542  013BBC  A0D8               	btfss	status,0,c
  9543  013BBE  D009               	goto	l7978
  9544  013BC0                     u10660:
  9545                           
  9546                           ; BSR set to: 0
  9547  013BC0  0E00               	movlw	0
  9548  013BC2  0100               	movlb	0	; () banked
  9549  013BC4  6F8F               	movwf	___flmul@prod& (0+255),b
  9550  013BC6  0E00               	movlw	0
  9551  013BC8  6F90               	movwf	(___flmul@prod+1)& (0+255),b
  9552  013BCA  0E80               	movlw	128
  9553  013BCC  6F91               	movwf	(___flmul@prod+2)& (0+255),b
  9554  013BCE  0E7F               	movlw	127
  9555  013BD0  D02B               	goto	L10
  9556  013BD2                     l7978:
  9557                           
  9558                           ; BSR set to: 0
  9559  013BD2  0100               	movlb	0	; () banked
  9560  013BD4  BF94               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9561  013BD6  D007               	goto	l7980
  9562  013BD8  0100               	movlb	0	; () banked
  9563  013BDA  5194               	movf	(___flmul@temp+1)& (0+255),w,b
  9564  013BDC  E111               	bnz	l1599
  9565  013BDE  0100               	movlb	0	; () banked
  9566  013BE0  0593               	decf	___flmul@temp& (0+255),w,b
  9567  013BE2  B0D8               	btfsc	status,0,c
  9568  013BE4  D00D               	goto	l1599
  9569  013BE6                     l7980:
  9570                           
  9571                           ; BSR set to: 0
  9572  013BE6  0E00               	movlw	0
  9573  013BE8  0100               	movlb	0	; () banked
  9574  013BEA  6F8F               	movwf	___flmul@prod& (0+255),b
  9575  013BEC  0E00               	movlw	0
  9576  013BEE  6F90               	movwf	(___flmul@prod+1)& (0+255),b
  9577  013BF0  0E00               	movlw	0
  9578  013BF2  6F91               	movwf	(___flmul@prod+2)& (0+255),b
  9579  013BF4  0E00               	movlw	0
  9580  013BF6  6F92               	movwf	(___flmul@prod+3)& (0+255),b
  9581  013BF8  0E00               	movlw	0
  9582  013BFA  0100               	movlb	0	; () banked
  9583  013BFC  6F88               	movwf	___flmul@sign& (0+255),b
  9584  013BFE  D015               	goto	l7990
  9585  013C00                     l1599:
  9586                           
  9587                           ; BSR set to: 0
  9588  013C00  C093  F08E         	movff	___flmul@temp,___flmul@bexp
  9589                           
  9590                           ; BSR set to: 0
  9591  013C04  0EFF               	movlw	255
  9592  013C06  0100               	movlb	0	; () banked
  9593  013C08  178F               	andwf	___flmul@prod& (0+255),f,b
  9594  013C0A  0EFF               	movlw	255
  9595  013C0C  1790               	andwf	(___flmul@prod+1)& (0+255),f,b
  9596  013C0E  0E7F               	movlw	127
  9597  013C10  1791               	andwf	(___flmul@prod+2)& (0+255),f,b
  9598  013C12  0E00               	movlw	0
  9599  013C14  1792               	andwf	(___flmul@prod+3)& (0+255),f,b
  9600                           
  9601                           ; BSR set to: 0
  9602  013C16  0100               	movlb	0	; () banked
  9603  013C18  A18E               	btfss	___flmul@bexp& (0+255),0,b
  9604  013C1A  D002               	goto	l7988
  9605                           
  9606                           ; BSR set to: 0
  9607  013C1C  0100               	movlb	0	; () banked
  9608  013C1E  8F91               	bsf	(___flmul@prod+2)& (0+255),7,b
  9609  013C20                     l7988:
  9610                           
  9611                           ; BSR set to: 0
  9612  013C20  0100               	movlb	0	; () banked
  9613  013C22  90D8               	bcf	status,0,c
  9614  013C24  318E               	rrcf	___flmul@bexp& (0+255),w,b
  9615  013C26  0100               	movlb	0	; () banked
  9616  013C28                     L10:
  9617  013C28  6F92               	movwf	(___flmul@prod+3)& (0+255),b
  9618  013C2A                     l7990:
  9619                           
  9620                           ; BSR set to: 0
  9621  013C2A  0100               	movlb	0	; () banked
  9622  013C2C  5188               	movf	___flmul@sign& (0+255),w,b
  9623  013C2E  0100               	movlb	0	; () banked
  9624  013C30  1392               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9625                           
  9626                           ; BSR set to: 0
  9627  013C32  C08F  F07C         	movff	___flmul@prod,?___flmul
  9628  013C36  C090  F07D         	movff	___flmul@prod+1,?___flmul+1
  9629  013C3A  C091  F07E         	movff	___flmul@prod+2,?___flmul+2
  9630  013C3E  C092  F07F         	movff	___flmul@prod+3,?___flmul+3
  9631  013C42  0012               	return	
  9632  013C44                     __end_of___flmul:
  9633                           	opt stack 0
  9634                           tblptru	equ	0xFF8
  9635                           tblptrh	equ	0xFF7
  9636                           tblptrl	equ	0xFF6
  9637                           tablat	equ	0xFF5
  9638                           prodh	equ	0xFF4
  9639                           prodl	equ	0xFF3
  9640                           intcon	equ	0xFF2
  9641                           postinc0	equ	0xFEE
  9642                           wreg	equ	0xFE8
  9643                           indf2	equ	0xFDF
  9644                           postinc2	equ	0xFDE
  9645                           fsr2h	equ	0xFDA
  9646                           fsr2l	equ	0xFD9
  9647                           status	equ	0xFD8
  9648                           
  9649 ;; *************** function ___awmod *****************
  9650 ;; Defined at:
  9651 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  9652 ;; Parameters:    Size  Location     Type
  9653 ;;  dividend        2   14[BANK0 ] int 
  9654 ;;  divisor         2   16[BANK0 ] int 
  9655 ;; Auto vars:     Size  Location     Type
  9656 ;;  sign            1   19[BANK0 ] unsigned char 
  9657 ;;  counter         1   18[BANK0 ] unsigned char 
  9658 ;; Return value:  Size  Location     Type
  9659 ;;                  2   14[BANK0 ] int 
  9660 ;; Registers used:
  9661 ;;		wreg, status,2, status,0
  9662 ;; Tracked objects:
  9663 ;;		On entry : 0/0
  9664 ;;		On exit  : 0/0
  9665 ;;		Unchanged: 0/0
  9666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9667 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9668 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9670 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9671 ;;Total ram usage:        6 bytes
  9672 ;; Hardware stack levels used:    1
  9673 ;; Hardware stack levels required when called:    3
  9674 ;; This function calls:
  9675 ;;		Nothing
  9676 ;; This function is called by:
  9677 ;;		_fround
  9678 ;;		_scale
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682                           	psect	text13
  9683  015B94                     __ptext13:
  9684                           	opt stack 0
  9685  015B94                     ___awmod:
  9686                           	opt stack 24
  9687                           
  9688                           ; BSR set to: 0
  9689                           ;incstack = 0
  9690  015B94  0E00               	movlw	0
  9691  015B96  0100               	movlb	0	; () banked
  9692  015B98  6F73               	movwf	___awmod@sign& (0+255),b
  9693                           
  9694                           ; BSR set to: 0
  9695  015B9A  0100               	movlb	0	; () banked
  9696  015B9C  AF6F               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9697  015B9E  D008               	goto	l8048
  9698                           
  9699                           ; BSR set to: 0
  9700  015BA0  0100               	movlb	0	; () banked
  9701  015BA2  6D6E               	negf	___awmod@dividend& (0+255),b
  9702  015BA4  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  9703  015BA6  B0D8               	btfsc	status,0,c
  9704  015BA8  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  9705                           
  9706                           ; BSR set to: 0
  9707  015BAA  0E01               	movlw	1
  9708  015BAC  0100               	movlb	0	; () banked
  9709  015BAE  6F73               	movwf	___awmod@sign& (0+255),b
  9710  015BB0                     l8048:
  9711                           
  9712                           ; BSR set to: 0
  9713  015BB0  0100               	movlb	0	; () banked
  9714  015BB2  AF71               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9715  015BB4  D005               	goto	l8052
  9716                           
  9717                           ; BSR set to: 0
  9718  015BB6  0100               	movlb	0	; () banked
  9719  015BB8  6D70               	negf	___awmod@divisor& (0+255),b
  9720  015BBA  1F71               	comf	(___awmod@divisor+1)& (0+255),f,b
  9721  015BBC  B0D8               	btfsc	status,0,c
  9722  015BBE  2B71               	incf	(___awmod@divisor+1)& (0+255),f,b
  9723  015BC0                     l8052:
  9724                           
  9725                           ; BSR set to: 0
  9726  015BC0  0100               	movlb	0	; () banked
  9727  015BC2  5170               	movf	___awmod@divisor& (0+255),w,b
  9728  015BC4  0100               	movlb	0	; () banked
  9729  015BC6  1171               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9730  015BC8  B4D8               	btfsc	status,2,c
  9731  015BCA  D026               	goto	l8068
  9732                           
  9733                           ; BSR set to: 0
  9734  015BCC  0E01               	movlw	1
  9735  015BCE  0100               	movlb	0	; () banked
  9736  015BD0  6F72               	movwf	___awmod@counter& (0+255),b
  9737  015BD2  D006               	goto	l8058
  9738  015BD4                     l8056:
  9739                           
  9740                           ; BSR set to: 0
  9741  015BD4  0100               	movlb	0	; () banked
  9742  015BD6  90D8               	bcf	status,0,c
  9743  015BD8  3770               	rlcf	___awmod@divisor& (0+255),f,b
  9744  015BDA  3771               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9745  015BDC  0100               	movlb	0	; () banked
  9746  015BDE  2B72               	incf	___awmod@counter& (0+255),f,b
  9747  015BE0                     l8058:
  9748                           
  9749                           ; BSR set to: 0
  9750  015BE0  0100               	movlb	0	; () banked
  9751  015BE2  AF71               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9752  015BE4  D7F7               	goto	l8056
  9753  015BE6                     l8060:
  9754                           
  9755                           ; BSR set to: 0
  9756  015BE6  0100               	movlb	0	; () banked
  9757  015BE8  5170               	movf	___awmod@divisor& (0+255),w,b
  9758  015BEA  0100               	movlb	0	; () banked
  9759  015BEC  5D6E               	subwf	___awmod@dividend& (0+255),w,b
  9760  015BEE  0100               	movlb	0	; () banked
  9761  015BF0  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  9762  015BF2  0100               	movlb	0	; () banked
  9763  015BF4  596F               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9764  015BF6  A0D8               	btfss	status,0,c
  9765  015BF8  D008               	goto	l8064
  9766                           
  9767                           ; BSR set to: 0
  9768  015BFA  0100               	movlb	0	; () banked
  9769  015BFC  5170               	movf	___awmod@divisor& (0+255),w,b
  9770  015BFE  0100               	movlb	0	; () banked
  9771  015C00  5F6E               	subwf	___awmod@dividend& (0+255),f,b
  9772  015C02  0100               	movlb	0	; () banked
  9773  015C04  5171               	movf	(___awmod@divisor+1)& (0+255),w,b
  9774  015C06  0100               	movlb	0	; () banked
  9775  015C08  5B6F               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9776  015C0A                     l8064:
  9777                           
  9778                           ; BSR set to: 0
  9779  015C0A  0100               	movlb	0	; () banked
  9780  015C0C  90D8               	bcf	status,0,c
  9781  015C0E  3371               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9782  015C10  3370               	rrcf	___awmod@divisor& (0+255),f,b
  9783                           
  9784                           ; BSR set to: 0
  9785  015C12  0100               	movlb	0	; () banked
  9786  015C14  2F72               	decfsz	___awmod@counter& (0+255),f,b
  9787  015C16  D7E7               	goto	l8060
  9788  015C18                     l8068:
  9789                           
  9790                           ; BSR set to: 0
  9791  015C18  0100               	movlb	0	; () banked
  9792  015C1A  5173               	movf	___awmod@sign& (0+255),w,b
  9793  015C1C  0100               	movlb	0	; () banked
  9794  015C1E  B4D8               	btfsc	status,2,c
  9795  015C20  D005               	goto	l8072
  9796                           
  9797                           ; BSR set to: 0
  9798  015C22  0100               	movlb	0	; () banked
  9799  015C24  6D6E               	negf	___awmod@dividend& (0+255),b
  9800  015C26  1F6F               	comf	(___awmod@dividend+1)& (0+255),f,b
  9801  015C28  B0D8               	btfsc	status,0,c
  9802  015C2A  2B6F               	incf	(___awmod@dividend+1)& (0+255),f,b
  9803  015C2C                     l8072:
  9804                           
  9805                           ; BSR set to: 0
  9806  015C2C  C06E  F06E         	movff	___awmod@dividend,?___awmod
  9807  015C30  C06F  F06F         	movff	___awmod@dividend+1,?___awmod+1
  9808  015C34  0012               	return	
  9809  015C36                     __end_of___awmod:
  9810                           	opt stack 0
  9811                           tblptru	equ	0xFF8
  9812                           tblptrh	equ	0xFF7
  9813                           tblptrl	equ	0xFF6
  9814                           tablat	equ	0xFF5
  9815                           prodh	equ	0xFF4
  9816                           prodl	equ	0xFF3
  9817                           intcon	equ	0xFF2
  9818                           postinc0	equ	0xFEE
  9819                           wreg	equ	0xFE8
  9820                           indf2	equ	0xFDF
  9821                           postinc2	equ	0xFDE
  9822                           fsr2h	equ	0xFDA
  9823                           fsr2l	equ	0xFD9
  9824                           status	equ	0xFD8
  9825                           
  9826 ;; *************** function ___awdiv *****************
  9827 ;; Defined at:
  9828 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;  dividend        2   20[BANK0 ] int 
  9831 ;;  divisor         2   22[BANK0 ] int 
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;  quotient        2   26[BANK0 ] int 
  9834 ;;  sign            1   25[BANK0 ] unsigned char 
  9835 ;;  counter         1   24[BANK0 ] unsigned char 
  9836 ;; Return value:  Size  Location     Type
  9837 ;;                  2   20[BANK0 ] int 
  9838 ;; Registers used:
  9839 ;;		wreg, status,2, status,0
  9840 ;; Tracked objects:
  9841 ;;		On entry : 0/0
  9842 ;;		On exit  : 0/0
  9843 ;;		Unchanged: 0/0
  9844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9845 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9846 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9848 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9849 ;;Total ram usage:        8 bytes
  9850 ;; Hardware stack levels used:    1
  9851 ;; Hardware stack levels required when called:    3
  9852 ;; This function calls:
  9853 ;;		Nothing
  9854 ;; This function is called by:
  9855 ;;		_fround
  9856 ;;		_scale
  9857 ;;		_sprintf
  9858 ;; This function uses a non-reentrant model
  9859 ;;
  9860                           
  9861                           	psect	text14
  9862  015750                     __ptext14:
  9863                           	opt stack 0
  9864  015750                     ___awdiv:
  9865                           	opt stack 24
  9866                           
  9867                           ; BSR set to: 0
  9868                           ;incstack = 0
  9869  015750  0E00               	movlw	0
  9870  015752  0100               	movlb	0	; () banked
  9871  015754  6F79               	movwf	___awdiv@sign& (0+255),b
  9872                           
  9873                           ; BSR set to: 0
  9874  015756  0100               	movlb	0	; () banked
  9875  015758  AF77               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9876  01575A  D008               	goto	l8004
  9877                           
  9878                           ; BSR set to: 0
  9879  01575C  0100               	movlb	0	; () banked
  9880  01575E  6D76               	negf	___awdiv@divisor& (0+255),b
  9881  015760  1F77               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9882  015762  B0D8               	btfsc	status,0,c
  9883  015764  2B77               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9884                           
  9885                           ; BSR set to: 0
  9886  015766  0E01               	movlw	1
  9887  015768  0100               	movlb	0	; () banked
  9888  01576A  6F79               	movwf	___awdiv@sign& (0+255),b
  9889  01576C                     l8004:
  9890                           
  9891                           ; BSR set to: 0
  9892  01576C  0100               	movlb	0	; () banked
  9893  01576E  AF75               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9894  015770  D008               	goto	l8010
  9895                           
  9896                           ; BSR set to: 0
  9897  015772  0100               	movlb	0	; () banked
  9898  015774  6D74               	negf	___awdiv@dividend& (0+255),b
  9899  015776  1F75               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9900  015778  B0D8               	btfsc	status,0,c
  9901  01577A  2B75               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9902                           
  9903                           ; BSR set to: 0
  9904  01577C  0E01               	movlw	1
  9905  01577E  0100               	movlb	0	; () banked
  9906  015780  1B79               	xorwf	___awdiv@sign& (0+255),f,b
  9907  015782                     l8010:
  9908                           
  9909                           ; BSR set to: 0
  9910  015782  0E00               	movlw	0
  9911  015784  0100               	movlb	0	; () banked
  9912  015786  6F7B               	movwf	(___awdiv@quotient+1)& (0+255),b
  9913  015788  0E00               	movlw	0
  9914  01578A  6F7A               	movwf	___awdiv@quotient& (0+255),b
  9915                           
  9916                           ; BSR set to: 0
  9917  01578C  0100               	movlb	0	; () banked
  9918  01578E  5176               	movf	___awdiv@divisor& (0+255),w,b
  9919  015790  0100               	movlb	0	; () banked
  9920  015792  1177               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9921  015794  B4D8               	btfsc	status,2,c
  9922  015796  D02C               	goto	l8032
  9923                           
  9924                           ; BSR set to: 0
  9925  015798  0E01               	movlw	1
  9926  01579A  0100               	movlb	0	; () banked
  9927  01579C  6F78               	movwf	___awdiv@counter& (0+255),b
  9928  01579E  D006               	goto	l8018
  9929  0157A0                     l8016:
  9930                           
  9931                           ; BSR set to: 0
  9932  0157A0  0100               	movlb	0	; () banked
  9933  0157A2  90D8               	bcf	status,0,c
  9934  0157A4  3776               	rlcf	___awdiv@divisor& (0+255),f,b
  9935  0157A6  3777               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9936  0157A8  0100               	movlb	0	; () banked
  9937  0157AA  2B78               	incf	___awdiv@counter& (0+255),f,b
  9938  0157AC                     l8018:
  9939                           
  9940                           ; BSR set to: 0
  9941  0157AC  0100               	movlb	0	; () banked
  9942  0157AE  AF77               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9943  0157B0  D7F7               	goto	l8016
  9944  0157B2                     l8020:
  9945                           
  9946                           ; BSR set to: 0
  9947  0157B2  0100               	movlb	0	; () banked
  9948  0157B4  90D8               	bcf	status,0,c
  9949  0157B6  377A               	rlcf	___awdiv@quotient& (0+255),f,b
  9950  0157B8  377B               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9951                           
  9952                           ; BSR set to: 0
  9953  0157BA  0100               	movlb	0	; () banked
  9954  0157BC  5176               	movf	___awdiv@divisor& (0+255),w,b
  9955  0157BE  0100               	movlb	0	; () banked
  9956  0157C0  5D74               	subwf	___awdiv@dividend& (0+255),w,b
  9957  0157C2  0100               	movlb	0	; () banked
  9958  0157C4  5177               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9959  0157C6  0100               	movlb	0	; () banked
  9960  0157C8  5975               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9961  0157CA  A0D8               	btfss	status,0,c
  9962  0157CC  D00A               	goto	l8028
  9963                           
  9964                           ; BSR set to: 0
  9965  0157CE  0100               	movlb	0	; () banked
  9966  0157D0  5176               	movf	___awdiv@divisor& (0+255),w,b
  9967  0157D2  0100               	movlb	0	; () banked
  9968  0157D4  5F74               	subwf	___awdiv@dividend& (0+255),f,b
  9969  0157D6  0100               	movlb	0	; () banked
  9970  0157D8  5177               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9971  0157DA  0100               	movlb	0	; () banked
  9972  0157DC  5B75               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9973                           
  9974                           ; BSR set to: 0
  9975  0157DE  0100               	movlb	0	; () banked
  9976  0157E0  817A               	bsf	___awdiv@quotient& (0+255),0,b
  9977  0157E2                     l8028:
  9978                           
  9979                           ; BSR set to: 0
  9980  0157E2  0100               	movlb	0	; () banked
  9981  0157E4  90D8               	bcf	status,0,c
  9982  0157E6  3377               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9983  0157E8  3376               	rrcf	___awdiv@divisor& (0+255),f,b
  9984                           
  9985                           ; BSR set to: 0
  9986  0157EA  0100               	movlb	0	; () banked
  9987  0157EC  2F78               	decfsz	___awdiv@counter& (0+255),f,b
  9988  0157EE  D7E1               	goto	l8020
  9989  0157F0                     l8032:
  9990                           
  9991                           ; BSR set to: 0
  9992  0157F0  0100               	movlb	0	; () banked
  9993  0157F2  5179               	movf	___awdiv@sign& (0+255),w,b
  9994  0157F4  0100               	movlb	0	; () banked
  9995  0157F6  B4D8               	btfsc	status,2,c
  9996  0157F8  D005               	goto	l8036
  9997                           
  9998                           ; BSR set to: 0
  9999  0157FA  0100               	movlb	0	; () banked
 10000  0157FC  6D7A               	negf	___awdiv@quotient& (0+255),b
 10001  0157FE  1F7B               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10002  015800  B0D8               	btfsc	status,0,c
 10003  015802  2B7B               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10004  015804                     l8036:
 10005                           
 10006                           ; BSR set to: 0
 10007  015804  C07A  F074         	movff	___awdiv@quotient,?___awdiv
 10008  015808  C07B  F075         	movff	___awdiv@quotient+1,?___awdiv+1
 10009  01580C  0012               	return	
 10010  01580E                     __end_of___awdiv:
 10011                           	opt stack 0
 10012                           tblptru	equ	0xFF8
 10013                           tblptrh	equ	0xFF7
 10014                           tblptrl	equ	0xFF6
 10015                           tablat	equ	0xFF5
 10016                           prodh	equ	0xFF4
 10017                           prodl	equ	0xFF3
 10018                           intcon	equ	0xFF2
 10019                           postinc0	equ	0xFEE
 10020                           wreg	equ	0xFE8
 10021                           indf2	equ	0xFDF
 10022                           postinc2	equ	0xFDE
 10023                           fsr2h	equ	0xFDA
 10024                           fsr2l	equ	0xFD9
 10025                           status	equ	0xFD8
 10026                           
 10027 ;; *************** function __tdiv_to_l_ *****************
 10028 ;; Defined at:
 10029 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
 10030 ;; Parameters:    Size  Location     Type
 10031 ;;  f1              4   14[BANK0 ] float 
 10032 ;;  f2              4   18[BANK0 ] float 
 10033 ;; Auto vars:     Size  Location     Type
 10034 ;;  quot            4   25[BANK0 ] unsigned long 
 10035 ;;  exp1            1   30[BANK0 ] unsigned char 
 10036 ;;  cntr            1   29[BANK0 ] unsigned char 
 10037 ;; Return value:  Size  Location     Type
 10038 ;;                  4   14[BANK0 ] unsigned long 
 10039 ;; Registers used:
 10040 ;;		wreg, status,2, status,0
 10041 ;; Tracked objects:
 10042 ;;		On entry : 0/0
 10043 ;;		On exit  : 0/0
 10044 ;;		Unchanged: 0/0
 10045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10046 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10047 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10048 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10049 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10050 ;;Total ram usage:       17 bytes
 10051 ;; Hardware stack levels used:    1
 10052 ;; Hardware stack levels required when called:    3
 10053 ;; This function calls:
 10054 ;;		Nothing
 10055 ;; This function is called by:
 10056 ;;		_sprintf
 10057 ;; This function uses a non-reentrant model
 10058 ;;
 10059                           
 10060                           	psect	text15
 10061  014D9A                     __ptext15:
 10062                           	opt stack 0
 10063  014D9A                     __tdiv_to_l_:
 10064                           	opt stack 25
 10065                           
 10066                           ; BSR set to: 0
 10067                           ;incstack = 0
 10068  014D9A  C070  F076         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10069  014D9E  0100               	movlb	0	; () banked
 10070  014DA0  6B77               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10071  014DA2  6B78               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10072  014DA4  0100               	movlb	0	; () banked
 10073  014DA6  356F               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10074  014DA8  0100               	movlb	0	; () banked
 10075  014DAA  3776               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10076  014DAC  E301               	bnc	u10921
 10077  014DAE  8177               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10078  014DB0                     u10921:
 10079  014DB0  0100               	movlb	0	; () banked
 10080  014DB2  5176               	movf	??__tdiv_to_l_& (0+255),w,b
 10081  014DB4  0100               	movlb	0	; () banked
 10082  014DB6  6F7E               	movwf	__tdiv_to_l_@exp1& (0+255),b
 10083  014DB8  0100               	movlb	0	; () banked
 10084  014DBA  517E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10085  014DBC  A4D8               	btfss	status,2,c
 10086  014DBE  D00A               	goto	l8186
 10087                           
 10088                           ; BSR set to: 0
 10089  014DC0  0E00               	movlw	0
 10090  014DC2  0100               	movlb	0	; () banked
 10091  014DC4  6F6E               	movwf	?__tdiv_to_l_& (0+255),b
 10092  014DC6  0E00               	movlw	0
 10093  014DC8  6F6F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10094  014DCA  0E00               	movlw	0
 10095  014DCC  6F70               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10096  014DCE  0E00               	movlw	0
 10097  014DD0  6F71               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10098                           
 10099                           ; BSR set to: 0
 10100  014DD2  0012               	return	
 10101  014DD4                     l8186:
 10102                           
 10103                           ; BSR set to: 0
 10104  014DD4  C074  F076         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10105  014DD8  0100               	movlb	0	; () banked
 10106  014DDA  6B77               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10107  014DDC  6B78               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10108  014DDE  0100               	movlb	0	; () banked
 10109  014DE0  3573               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10110  014DE2  0100               	movlb	0	; () banked
 10111  014DE4  3776               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10112  014DE6  E301               	bnc	u10941
 10113  014DE8  8177               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10114  014DEA                     u10941:
 10115  014DEA  0100               	movlb	0	; () banked
 10116  014DEC  5176               	movf	??__tdiv_to_l_& (0+255),w,b
 10117  014DEE  0100               	movlb	0	; () banked
 10118  014DF0  6F7D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10119  014DF2  0100               	movlb	0	; () banked
 10120  014DF4  517D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10121  014DF6  A4D8               	btfss	status,2,c
 10122  014DF8  D00A               	goto	l8192
 10123                           
 10124                           ; BSR set to: 0
 10125  014DFA  0E00               	movlw	0
 10126  014DFC  0100               	movlb	0	; () banked
 10127  014DFE  6F6E               	movwf	?__tdiv_to_l_& (0+255),b
 10128  014E00  0E00               	movlw	0
 10129  014E02  6F6F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10130  014E04  0E00               	movlw	0
 10131  014E06  6F70               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10132  014E08  0E00               	movlw	0
 10133  014E0A  6F71               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10134                           
 10135                           ; BSR set to: 0
 10136  014E0C  0012               	return	
 10137  014E0E                     l8192:
 10138                           
 10139                           ; BSR set to: 0
 10140  014E0E  0100               	movlb	0	; () banked
 10141  014E10  8F6F               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 10142                           
 10143                           ; BSR set to: 0
 10144  014E12  0EFF               	movlw	255
 10145  014E14  0100               	movlb	0	; () banked
 10146  014E16  176E               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 10147  014E18  0EFF               	movlw	255
 10148  014E1A  0100               	movlb	0	; () banked
 10149  014E1C  176F               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10150  014E1E  0E00               	movlw	0
 10151  014E20  0100               	movlb	0	; () banked
 10152  014E22  1770               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10153  014E24  0100               	movlb	0	; () banked
 10154  014E26  8F73               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 10155                           
 10156                           ; BSR set to: 0
 10157  014E28  0EFF               	movlw	255
 10158  014E2A  0100               	movlb	0	; () banked
 10159  014E2C  1772               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 10160  014E2E  0EFF               	movlw	255
 10161  014E30  0100               	movlb	0	; () banked
 10162  014E32  1773               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 10163  014E34  0E00               	movlw	0
 10164  014E36  0100               	movlb	0	; () banked
 10165  014E38  1774               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 10166                           
 10167                           ; BSR set to: 0
 10168  014E3A  0E00               	movlw	0
 10169  014E3C  0100               	movlb	0	; () banked
 10170  014E3E  6F79               	movwf	__tdiv_to_l_@quot& (0+255),b
 10171  014E40  0E00               	movlw	0
 10172  014E42  6F7A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 10173  014E44  0E00               	movlw	0
 10174  014E46  6F7B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 10175  014E48  0E00               	movlw	0
 10176  014E4A  6F7C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 10177                           
 10178                           ; BSR set to: 0
 10179  014E4C  0E7F               	movlw	127
 10180  014E4E  0100               	movlb	0	; () banked
 10181  014E50  5F7E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10182                           
 10183                           ; BSR set to: 0
 10184  014E52  0100               	movlb	0	; () banked
 10185  014E54  517D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10186  014E56  0F98               	addlw	152
 10187  014E58  0100               	movlb	0	; () banked
 10188  014E5A  5F7E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10189                           
 10190                           ; BSR set to: 0
 10191  014E5C  0E18               	movlw	24
 10192  014E5E  0100               	movlb	0	; () banked
 10193  014E60  6F7D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10194  014E62                     l1306:
 10195                           
 10196                           ; BSR set to: 0
 10197  014E62  0100               	movlb	0	; () banked
 10198  014E64  90D8               	bcf	status,0,c
 10199  014E66  3779               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10200  014E68  377A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10201  014E6A  377B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10202  014E6C  377C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10203                           
 10204                           ; BSR set to: 0
 10205  014E6E  0100               	movlb	0	; () banked
 10206  014E70  5172               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10207  014E72  0100               	movlb	0	; () banked
 10208  014E74  5D6E               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 10209  014E76  0100               	movlb	0	; () banked
 10210  014E78  5173               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10211  014E7A  0100               	movlb	0	; () banked
 10212  014E7C  596F               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10213  014E7E  0100               	movlb	0	; () banked
 10214  014E80  5174               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10215  014E82  0100               	movlb	0	; () banked
 10216  014E84  5970               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10217  014E86  A0D8               	btfss	status,0,c
 10218  014E88  D00E               	goto	l1307
 10219                           
 10220                           ; BSR set to: 0
 10221  014E8A  0100               	movlb	0	; () banked
 10222  014E8C  5172               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10223  014E8E  0100               	movlb	0	; () banked
 10224  014E90  5F6E               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10225  014E92  0100               	movlb	0	; () banked
 10226  014E94  5173               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10227  014E96  0100               	movlb	0	; () banked
 10228  014E98  5B6F               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10229  014E9A  0100               	movlb	0	; () banked
 10230  014E9C  5174               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10231  014E9E  0100               	movlb	0	; () banked
 10232  014EA0  5B70               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10233                           
 10234                           ; BSR set to: 0
 10235  014EA2  0100               	movlb	0	; () banked
 10236  014EA4  8179               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 10237  014EA6                     l1307:
 10238                           
 10239                           ; BSR set to: 0
 10240  014EA6  0100               	movlb	0	; () banked
 10241  014EA8  90D8               	bcf	status,0,c
 10242  014EAA  376E               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10243  014EAC  376F               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10244  014EAE  3770               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10245                           
 10246                           ; BSR set to: 0
 10247  014EB0  0100               	movlb	0	; () banked
 10248  014EB2  2F7D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 10249  014EB4  D7D6               	goto	l1306
 10250                           
 10251                           ; BSR set to: 0
 10252                           
 10253                           ; BSR set to: 0
 10254  014EB6  0100               	movlb	0	; () banked
 10255  014EB8  AF7E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 10256  014EBA  D01A               	goto	l8226
 10257                           
 10258                           ; BSR set to: 0
 10259  014EBC  0100               	movlb	0	; () banked
 10260  014EBE  517E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10261  014EC0  0A80               	xorlw	128
 10262  014EC2  0F97               	addlw	151
 10263  014EC4  B0D8               	btfsc	status,0,c
 10264  014EC6  D00A               	goto	l8222
 10265                           
 10266                           ; BSR set to: 0
 10267  014EC8  0E00               	movlw	0
 10268  014ECA  0100               	movlb	0	; () banked
 10269  014ECC  6F6E               	movwf	?__tdiv_to_l_& (0+255),b
 10270  014ECE  0E00               	movlw	0
 10271  014ED0  6F6F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10272  014ED2  0E00               	movlw	0
 10273  014ED4  6F70               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10274  014ED6  0E00               	movlw	0
 10275  014ED8  6F71               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10276                           
 10277                           ; BSR set to: 0
 10278  014EDA  0012               	return	
 10279  014EDC                     l8222:
 10280                           
 10281                           ; BSR set to: 0
 10282  014EDC  0100               	movlb	0	; () banked
 10283  014EDE  90D8               	bcf	status,0,c
 10284  014EE0  337C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10285  014EE2  337B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10286  014EE4  337A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10287  014EE6  3379               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 10288                           
 10289                           ; BSR set to: 0
 10290  014EE8  0100               	movlb	0	; () banked
 10291  014EEA  3F7E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 10292  014EEC  D7F7               	goto	l8222
 10293                           
 10294                           ; BSR set to: 0
 10295  014EEE  D01B               	goto	l1313
 10296  014EF0                     l8226:
 10297                           
 10298                           ; BSR set to: 0
 10299  014EF0  0E17               	movlw	23
 10300  014EF2  0100               	movlb	0	; () banked
 10301  014EF4  657E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 10302  014EF6  D012               	goto	l8234
 10303                           
 10304                           ; BSR set to: 0
 10305  014EF8  0E00               	movlw	0
 10306  014EFA  0100               	movlb	0	; () banked
 10307  014EFC  6F6E               	movwf	?__tdiv_to_l_& (0+255),b
 10308  014EFE  0E00               	movlw	0
 10309  014F00  6F6F               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10310  014F02  0E00               	movlw	0
 10311  014F04  6F70               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10312  014F06  0E00               	movlw	0
 10313  014F08  6F71               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10314                           
 10315                           ; BSR set to: 0
 10316  014F0A  0012               	return	
 10317  014F0C                     l8232:
 10318                           
 10319                           ; BSR set to: 0
 10320  014F0C  0100               	movlb	0	; () banked
 10321  014F0E  90D8               	bcf	status,0,c
 10322  014F10  3779               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10323  014F12  377A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10324  014F14  377B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10325  014F16  377C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10326  014F18  0100               	movlb	0	; () banked
 10327  014F1A  077E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 10328  014F1C                     l8234:
 10329                           
 10330                           ; BSR set to: 0
 10331  014F1C  0100               	movlb	0	; () banked
 10332  014F1E  517E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10333  014F20  0100               	movlb	0	; () banked
 10334  014F22  A4D8               	btfss	status,2,c
 10335  014F24  D7F3               	goto	l8232
 10336  014F26                     l1313:
 10337                           
 10338                           ; BSR set to: 0
 10339  014F26  C079  F06E         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10340  014F2A  C07A  F06F         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10341  014F2E  C07B  F070         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10342  014F32  C07C  F071         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10343                           
 10344                           ; BSR set to: 0
 10345  014F36  0012               	return		;funcret
 10346  014F38                     __end_of__tdiv_to_l_:
 10347                           	opt stack 0
 10348                           tblptru	equ	0xFF8
 10349                           tblptrh	equ	0xFF7
 10350                           tblptrl	equ	0xFF6
 10351                           tablat	equ	0xFF5
 10352                           prodh	equ	0xFF4
 10353                           prodl	equ	0xFF3
 10354                           intcon	equ	0xFF2
 10355                           postinc0	equ	0xFEE
 10356                           wreg	equ	0xFE8
 10357                           indf2	equ	0xFDF
 10358                           postinc2	equ	0xFDE
 10359                           fsr2h	equ	0xFDA
 10360                           fsr2l	equ	0xFD9
 10361                           status	equ	0xFD8
 10362                           
 10363 ;; *************** function __div_to_l_ *****************
 10364 ;; Defined at:
 10365 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
 10366 ;; Parameters:    Size  Location     Type
 10367 ;;  f1              4   14[BANK0 ] unsigned long 
 10368 ;;  f2              4   18[BANK0 ] unsigned long 
 10369 ;; Auto vars:     Size  Location     Type
 10370 ;;  quot            4   22[BANK0 ] unsigned long 
 10371 ;;  exp1            1   27[BANK0 ] unsigned char 
 10372 ;;  cntr            1   26[BANK0 ] unsigned char 
 10373 ;; Return value:  Size  Location     Type
 10374 ;;                  4   14[BANK0 ] unsigned long 
 10375 ;; Registers used:
 10376 ;;		wreg, status,2, status,0
 10377 ;; Tracked objects:
 10378 ;;		On entry : 0/0
 10379 ;;		On exit  : 0/0
 10380 ;;		Unchanged: 0/0
 10381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10382 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10383 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10385 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10386 ;;Total ram usage:       14 bytes
 10387 ;; Hardware stack levels used:    1
 10388 ;; Hardware stack levels required when called:    3
 10389 ;; This function calls:
 10390 ;;		Nothing
 10391 ;; This function is called by:
 10392 ;;		_sprintf
 10393 ;; This function uses a non-reentrant model
 10394 ;;
 10395                           
 10396                           	psect	text16
 10397  015262                     __ptext16:
 10398                           	opt stack 0
 10399  015262                     __div_to_l_:
 10400                           	opt stack 25
 10401                           
 10402                           ; BSR set to: 0
 10403                           ;incstack = 0
 10404  015262  0100               	movlb	0	; () banked
 10405  015264  3570               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10406  015266  3571               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10407  015268  0100               	movlb	0	; () banked
 10408  01526A  6F7B               	movwf	__div_to_l_@exp1& (0+255),b
 10409  01526C  0100               	movlb	0	; () banked
 10410  01526E  517B               	movf	__div_to_l_@exp1& (0+255),w,b
 10411  015270  A4D8               	btfss	status,2,c
 10412  015272  D00A               	goto	l8242
 10413                           
 10414                           ; BSR set to: 0
 10415  015274  0E00               	movlw	0
 10416  015276  0100               	movlb	0	; () banked
 10417  015278  6F6E               	movwf	?__div_to_l_& (0+255),b
 10418  01527A  0E00               	movlw	0
 10419  01527C  6F6F               	movwf	(?__div_to_l_+1)& (0+255),b
 10420  01527E  0E00               	movlw	0
 10421  015280  6F70               	movwf	(?__div_to_l_+2)& (0+255),b
 10422  015282  0E00               	movlw	0
 10423  015284  6F71               	movwf	(?__div_to_l_+3)& (0+255),b
 10424                           
 10425                           ; BSR set to: 0
 10426  015286  0012               	return	
 10427  015288                     l8242:
 10428                           
 10429                           ; BSR set to: 0
 10430  015288  0100               	movlb	0	; () banked
 10431  01528A  3574               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10432  01528C  3575               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10433  01528E  0100               	movlb	0	; () banked
 10434  015290  6F7A               	movwf	__div_to_l_@cntr& (0+255),b
 10435  015292  0100               	movlb	0	; () banked
 10436  015294  517A               	movf	__div_to_l_@cntr& (0+255),w,b
 10437  015296  A4D8               	btfss	status,2,c
 10438  015298  D00A               	goto	l8248
 10439                           
 10440                           ; BSR set to: 0
 10441  01529A  0E00               	movlw	0
 10442  01529C  0100               	movlb	0	; () banked
 10443  01529E  6F6E               	movwf	?__div_to_l_& (0+255),b
 10444  0152A0  0E00               	movlw	0
 10445  0152A2  6F6F               	movwf	(?__div_to_l_+1)& (0+255),b
 10446  0152A4  0E00               	movlw	0
 10447  0152A6  6F70               	movwf	(?__div_to_l_+2)& (0+255),b
 10448  0152A8  0E00               	movlw	0
 10449  0152AA  6F71               	movwf	(?__div_to_l_+3)& (0+255),b
 10450                           
 10451                           ; BSR set to: 0
 10452  0152AC  0012               	return	
 10453  0152AE                     l8248:
 10454                           
 10455                           ; BSR set to: 0
 10456  0152AE  0100               	movlb	0	; () banked
 10457  0152B0  8F70               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10458                           
 10459                           ; BSR set to: 0
 10460  0152B2  0EFF               	movlw	255
 10461  0152B4  0100               	movlb	0	; () banked
 10462  0152B6  176E               	andwf	__div_to_l_@f1& (0+255),f,b
 10463  0152B8  0EFF               	movlw	255
 10464  0152BA  176F               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10465  0152BC  0EFF               	movlw	255
 10466  0152BE  1770               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10467  0152C0  0E00               	movlw	0
 10468  0152C2  1771               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10469                           
 10470                           ; BSR set to: 0
 10471  0152C4  0100               	movlb	0	; () banked
 10472  0152C6  8F74               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10473  0152C8  0EFF               	movlw	255
 10474  0152CA  0100               	movlb	0	; () banked
 10475  0152CC  1772               	andwf	__div_to_l_@f2& (0+255),f,b
 10476  0152CE  0EFF               	movlw	255
 10477  0152D0  1773               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10478  0152D2  0EFF               	movlw	255
 10479  0152D4  1774               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10480  0152D6  0E00               	movlw	0
 10481  0152D8  1775               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10482                           
 10483                           ; BSR set to: 0
 10484  0152DA  0E00               	movlw	0
 10485  0152DC  0100               	movlb	0	; () banked
 10486  0152DE  6F76               	movwf	__div_to_l_@quot& (0+255),b
 10487  0152E0  0E00               	movlw	0
 10488  0152E2  6F77               	movwf	(__div_to_l_@quot+1)& (0+255),b
 10489  0152E4  0E00               	movlw	0
 10490  0152E6  6F78               	movwf	(__div_to_l_@quot+2)& (0+255),b
 10491  0152E8  0E00               	movlw	0
 10492  0152EA  6F79               	movwf	(__div_to_l_@quot+3)& (0+255),b
 10493                           
 10494                           ; BSR set to: 0
 10495  0152EC  0E7F               	movlw	127
 10496  0152EE  0100               	movlb	0	; () banked
 10497  0152F0  5F7B               	subwf	__div_to_l_@exp1& (0+255),f,b
 10498                           
 10499                           ; BSR set to: 0
 10500  0152F2  0100               	movlb	0	; () banked
 10501  0152F4  517A               	movf	__div_to_l_@cntr& (0+255),w,b
 10502  0152F6  0FA0               	addlw	160
 10503  0152F8  0100               	movlb	0	; () banked
 10504  0152FA  5F7B               	subwf	__div_to_l_@exp1& (0+255),f,b
 10505                           
 10506                           ; BSR set to: 0
 10507  0152FC  0E20               	movlw	32
 10508  0152FE  0100               	movlb	0	; () banked
 10509  015300  6F7A               	movwf	__div_to_l_@cntr& (0+255),b
 10510  015302                     l8262:
 10511                           
 10512                           ; BSR set to: 0
 10513  015302  0100               	movlb	0	; () banked
 10514  015304  90D8               	bcf	status,0,c
 10515  015306  3776               	rlcf	__div_to_l_@quot& (0+255),f,b
 10516  015308  3777               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10517  01530A  3778               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10518  01530C  3779               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10519                           
 10520                           ; BSR set to: 0
 10521  01530E  0100               	movlb	0	; () banked
 10522  015310  5172               	movf	__div_to_l_@f2& (0+255),w,b
 10523  015312  0100               	movlb	0	; () banked
 10524  015314  5D6E               	subwf	__div_to_l_@f1& (0+255),w,b
 10525  015316  0100               	movlb	0	; () banked
 10526  015318  5173               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10527  01531A  0100               	movlb	0	; () banked
 10528  01531C  596F               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10529  01531E  0100               	movlb	0	; () banked
 10530  015320  5174               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10531  015322  0100               	movlb	0	; () banked
 10532  015324  5970               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10533  015326  0100               	movlb	0	; () banked
 10534  015328  5175               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10535  01532A  0100               	movlb	0	; () banked
 10536  01532C  5971               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10537  01532E  A0D8               	btfss	status,0,c
 10538  015330  D012               	goto	l8270
 10539                           
 10540                           ; BSR set to: 0
 10541  015332  0100               	movlb	0	; () banked
 10542  015334  5172               	movf	__div_to_l_@f2& (0+255),w,b
 10543  015336  0100               	movlb	0	; () banked
 10544  015338  5F6E               	subwf	__div_to_l_@f1& (0+255),f,b
 10545  01533A  0100               	movlb	0	; () banked
 10546  01533C  5173               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10547  01533E  0100               	movlb	0	; () banked
 10548  015340  5B6F               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10549  015342  0100               	movlb	0	; () banked
 10550  015344  5174               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10551  015346  0100               	movlb	0	; () banked
 10552  015348  5B70               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10553  01534A  0100               	movlb	0	; () banked
 10554  01534C  5175               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10555  01534E  0100               	movlb	0	; () banked
 10556  015350  5B71               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10557                           
 10558                           ; BSR set to: 0
 10559  015352  0100               	movlb	0	; () banked
 10560  015354  8176               	bsf	__div_to_l_@quot& (0+255),0,b
 10561  015356                     l8270:
 10562                           
 10563                           ; BSR set to: 0
 10564  015356  0100               	movlb	0	; () banked
 10565  015358  90D8               	bcf	status,0,c
 10566  01535A  376E               	rlcf	__div_to_l_@f1& (0+255),f,b
 10567  01535C  376F               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10568  01535E  3770               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10569  015360  3771               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10570                           
 10571                           ; BSR set to: 0
 10572  015362  0100               	movlb	0	; () banked
 10573  015364  2F7A               	decfsz	__div_to_l_@cntr& (0+255),f,b
 10574  015366  D7CD               	goto	l8262
 10575                           
 10576                           ; BSR set to: 0
 10577                           
 10578                           ; BSR set to: 0
 10579  015368  0100               	movlb	0	; () banked
 10580  01536A  AF7B               	btfss	__div_to_l_@exp1& (0+255),7,b
 10581  01536C  D01A               	goto	l8286
 10582                           
 10583                           ; BSR set to: 0
 10584  01536E  0100               	movlb	0	; () banked
 10585  015370  517B               	movf	__div_to_l_@exp1& (0+255),w,b
 10586  015372  0A80               	xorlw	128
 10587  015374  0F9F               	addlw	159
 10588  015376  B0D8               	btfsc	status,0,c
 10589  015378  D00A               	goto	l8282
 10590                           
 10591                           ; BSR set to: 0
 10592  01537A  0E00               	movlw	0
 10593  01537C  0100               	movlb	0	; () banked
 10594  01537E  6F6E               	movwf	?__div_to_l_& (0+255),b
 10595  015380  0E00               	movlw	0
 10596  015382  6F6F               	movwf	(?__div_to_l_+1)& (0+255),b
 10597  015384  0E00               	movlw	0
 10598  015386  6F70               	movwf	(?__div_to_l_+2)& (0+255),b
 10599  015388  0E00               	movlw	0
 10600  01538A  6F71               	movwf	(?__div_to_l_+3)& (0+255),b
 10601                           
 10602                           ; BSR set to: 0
 10603  01538C  0012               	return	
 10604  01538E                     l8282:
 10605                           
 10606                           ; BSR set to: 0
 10607  01538E  0100               	movlb	0	; () banked
 10608  015390  90D8               	bcf	status,0,c
 10609  015392  3379               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 10610  015394  3378               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 10611  015396  3377               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 10612  015398  3376               	rrcf	__div_to_l_@quot& (0+255),f,b
 10613                           
 10614                           ; BSR set to: 0
 10615  01539A  0100               	movlb	0	; () banked
 10616  01539C  3F7B               	incfsz	__div_to_l_@exp1& (0+255),f,b
 10617  01539E  D7F7               	goto	l8282
 10618                           
 10619                           ; BSR set to: 0
 10620  0153A0  D01B               	goto	l1209
 10621  0153A2                     l8286:
 10622                           
 10623                           ; BSR set to: 0
 10624  0153A2  0E1F               	movlw	31
 10625  0153A4  0100               	movlb	0	; () banked
 10626  0153A6  657B               	cpfsgt	__div_to_l_@exp1& (0+255),b
 10627  0153A8  D012               	goto	l8294
 10628                           
 10629                           ; BSR set to: 0
 10630  0153AA  0E00               	movlw	0
 10631  0153AC  0100               	movlb	0	; () banked
 10632  0153AE  6F6E               	movwf	?__div_to_l_& (0+255),b
 10633  0153B0  0E00               	movlw	0
 10634  0153B2  6F6F               	movwf	(?__div_to_l_+1)& (0+255),b
 10635  0153B4  0E00               	movlw	0
 10636  0153B6  6F70               	movwf	(?__div_to_l_+2)& (0+255),b
 10637  0153B8  0E00               	movlw	0
 10638  0153BA  6F71               	movwf	(?__div_to_l_+3)& (0+255),b
 10639                           
 10640                           ; BSR set to: 0
 10641  0153BC  0012               	return	
 10642  0153BE                     l8292:
 10643                           
 10644                           ; BSR set to: 0
 10645  0153BE  0100               	movlb	0	; () banked
 10646  0153C0  90D8               	bcf	status,0,c
 10647  0153C2  3776               	rlcf	__div_to_l_@quot& (0+255),f,b
 10648  0153C4  3777               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10649  0153C6  3778               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10650  0153C8  3779               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10651  0153CA  0100               	movlb	0	; () banked
 10652  0153CC  077B               	decf	__div_to_l_@exp1& (0+255),f,b
 10653  0153CE                     l8294:
 10654                           
 10655                           ; BSR set to: 0
 10656  0153CE  0100               	movlb	0	; () banked
 10657  0153D0  517B               	movf	__div_to_l_@exp1& (0+255),w,b
 10658  0153D2  0100               	movlb	0	; () banked
 10659  0153D4  A4D8               	btfss	status,2,c
 10660  0153D6  D7F3               	goto	l8292
 10661  0153D8                     l1209:
 10662                           
 10663                           ; BSR set to: 0
 10664  0153D8  C076  F06E         	movff	__div_to_l_@quot,?__div_to_l_
 10665  0153DC  C077  F06F         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10666  0153E0  C078  F070         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10667  0153E4  C079  F071         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10668                           
 10669                           ; BSR set to: 0
 10670  0153E8  0012               	return		;funcret
 10671  0153EA                     __end_of__div_to_l_:
 10672                           	opt stack 0
 10673                           tblptru	equ	0xFF8
 10674                           tblptrh	equ	0xFF7
 10675                           tblptrl	equ	0xFF6
 10676                           tablat	equ	0xFF5
 10677                           prodh	equ	0xFF4
 10678                           prodl	equ	0xFF3
 10679                           intcon	equ	0xFF2
 10680                           postinc0	equ	0xFEE
 10681                           wreg	equ	0xFE8
 10682                           indf2	equ	0xFDF
 10683                           postinc2	equ	0xFDE
 10684                           fsr2h	equ	0xFDA
 10685                           fsr2l	equ	0xFD9
 10686                           status	equ	0xFD8
 10687                           
 10688 ;; *************** function ___xxtofl *****************
 10689 ;; Defined at:
 10690 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
 10691 ;; Parameters:    Size  Location     Type
 10692 ;;  sign            1    wreg     unsigned char 
 10693 ;;  val             4   14[BANK0 ] long 
 10694 ;; Auto vars:     Size  Location     Type
 10695 ;;  sign            1   22[BANK0 ] unsigned char 
 10696 ;;  arg             4   24[BANK0 ] unsigned long 
 10697 ;;  exp             1   23[BANK0 ] unsigned char 
 10698 ;; Return value:  Size  Location     Type
 10699 ;;                  4   14[BANK0 ] unsigned char 
 10700 ;; Registers used:
 10701 ;;		wreg, status,2, status,0
 10702 ;; Tracked objects:
 10703 ;;		On entry : 0/0
 10704 ;;		On exit  : 0/0
 10705 ;;		Unchanged: 0/0
 10706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10707 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10709 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10710 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10711 ;;Total ram usage:       14 bytes
 10712 ;; Hardware stack levels used:    1
 10713 ;; Hardware stack levels required when called:    3
 10714 ;; This function calls:
 10715 ;;		Nothing
 10716 ;; This function is called by:
 10717 ;;		_main
 10718 ;;		_LCD_Handler
 10719 ;;		_sprintf
 10720 ;; This function uses a non-reentrant model
 10721 ;;
 10722                           
 10723                           	psect	text17
 10724  014698                     __ptext17:
 10725                           	opt stack 0
 10726  014698                     ___xxtofl:
 10727                           	opt stack 27
 10728                           
 10729                           ; BSR set to: 0
 10730                           ;incstack = 0
 10731                           ;___xxtofl@sign stored from wreg
 10732  014698  0100               	movlb	0	; () banked
 10733  01469A  6F76               	movwf	___xxtofl@sign& (0+255),b
 10734  01469C  0100               	movlb	0	; () banked
 10735  01469E  5176               	movf	___xxtofl@sign& (0+255),w,b
 10736  0146A0  0100               	movlb	0	; () banked
 10737  0146A2  B4D8               	btfsc	status,2,c
 10738  0146A4  D01E               	goto	l1604
 10739                           
 10740                           ; BSR set to: 0
 10741  0146A6  0100               	movlb	0	; () banked
 10742  0146A8  AF71               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10743  0146AA  D01B               	goto	l1604
 10744                           
 10745                           ; BSR set to: 0
 10746  0146AC  C06E  F072         	movff	___xxtofl@val,??___xxtofl
 10747  0146B0  C06F  F073         	movff	___xxtofl@val+1,??___xxtofl+1
 10748  0146B4  C070  F074         	movff	___xxtofl@val+2,??___xxtofl+2
 10749  0146B8  C071  F075         	movff	___xxtofl@val+3,??___xxtofl+3
 10750  0146BC  0100               	movlb	0	; () banked
 10751  0146BE  1F72               	comf	??___xxtofl& (0+255),f,b
 10752  0146C0  1F73               	comf	(??___xxtofl+1)& (0+255),f,b
 10753  0146C2  1F74               	comf	(??___xxtofl+2)& (0+255),f,b
 10754  0146C4  1F75               	comf	(??___xxtofl+3)& (0+255),f,b
 10755  0146C6  2B72               	incf	??___xxtofl& (0+255),f,b
 10756  0146C8  0E00               	movlw	0
 10757  0146CA  2373               	addwfc	(??___xxtofl+1)& (0+255),f,b
 10758  0146CC  2374               	addwfc	(??___xxtofl+2)& (0+255),f,b
 10759  0146CE  2375               	addwfc	(??___xxtofl+3)& (0+255),f,b
 10760  0146D0  C072  F078         	movff	??___xxtofl,___xxtofl@arg
 10761  0146D4  C073  F079         	movff	??___xxtofl+1,___xxtofl@arg+1
 10762  0146D8  C074  F07A         	movff	??___xxtofl+2,___xxtofl@arg+2
 10763  0146DC  C075  F07B         	movff	??___xxtofl+3,___xxtofl@arg+3
 10764  0146E0  D008               	goto	l8420
 10765  0146E2                     l1604:
 10766                           
 10767                           ; BSR set to: 0
 10768  0146E2  C06E  F078         	movff	___xxtofl@val,___xxtofl@arg
 10769  0146E6  C06F  F079         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10770  0146EA  C070  F07A         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10771  0146EE  C071  F07B         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10772  0146F2                     l8420:
 10773                           
 10774                           ; BSR set to: 0
 10775  0146F2  0100               	movlb	0	; () banked
 10776  0146F4  516E               	movf	___xxtofl@val& (0+255),w,b
 10777  0146F6  0100               	movlb	0	; () banked
 10778  0146F8  116F               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 10779  0146FA  0100               	movlb	0	; () banked
 10780  0146FC  1170               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 10781  0146FE  0100               	movlb	0	; () banked
 10782  014700  1171               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 10783  014702  A4D8               	btfss	status,2,c
 10784  014704  D00A               	goto	l8426
 10785                           
 10786                           ; BSR set to: 0
 10787  014706  0E00               	movlw	0
 10788  014708  0100               	movlb	0	; () banked
 10789  01470A  6F6E               	movwf	?___xxtofl& (0+255),b
 10790  01470C  0E00               	movlw	0
 10791  01470E  6F6F               	movwf	(?___xxtofl+1)& (0+255),b
 10792  014710  0E00               	movlw	0
 10793  014712  6F70               	movwf	(?___xxtofl+2)& (0+255),b
 10794  014714  0E00               	movlw	0
 10795  014716  6F71               	movwf	(?___xxtofl+3)& (0+255),b
 10796                           
 10797                           ; BSR set to: 0
 10798  014718  0012               	return	
 10799  01471A                     l8426:
 10800                           
 10801                           ; BSR set to: 0
 10802  01471A  0E96               	movlw	150
 10803  01471C  0100               	movlb	0	; () banked
 10804  01471E  6F77               	movwf	___xxtofl@exp& (0+255),b
 10805  014720  D008               	goto	l8430
 10806  014722                     l8428:
 10807                           
 10808                           ; BSR set to: 0
 10809  014722  0100               	movlb	0	; () banked
 10810  014724  2B77               	incf	___xxtofl@exp& (0+255),f,b
 10811  014726  0100               	movlb	0	; () banked
 10812  014728  90D8               	bcf	status,0,c
 10813  01472A  337B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10814  01472C  337A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10815  01472E  3379               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10816  014730  3378               	rrcf	___xxtofl@arg& (0+255),f,b
 10817  014732                     l8430:
 10818                           
 10819                           ; BSR set to: 0
 10820  014732  0E00               	movlw	0
 10821  014734  0100               	movlb	0	; () banked
 10822  014736  1578               	andwf	___xxtofl@arg& (0+255),w,b
 10823  014738  0100               	movlb	0	; () banked
 10824  01473A  6F72               	movwf	??___xxtofl& (0+255),b
 10825  01473C  0E00               	movlw	0
 10826  01473E  0100               	movlb	0	; () banked
 10827  014740  1579               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10828  014742  0100               	movlb	0	; () banked
 10829  014744  6F73               	movwf	(??___xxtofl+1)& (0+255),b
 10830  014746  0E00               	movlw	0
 10831  014748  0100               	movlb	0	; () banked
 10832  01474A  157A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10833  01474C  0100               	movlb	0	; () banked
 10834  01474E  6F74               	movwf	(??___xxtofl+2)& (0+255),b
 10835  014750  0EFE               	movlw	254
 10836  014752  0100               	movlb	0	; () banked
 10837  014754  157B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10838  014756  0100               	movlb	0	; () banked
 10839  014758  6F75               	movwf	(??___xxtofl+3)& (0+255),b
 10840  01475A  0100               	movlb	0	; () banked
 10841  01475C  5172               	movf	??___xxtofl& (0+255),w,b
 10842  01475E  0100               	movlb	0	; () banked
 10843  014760  1173               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10844  014762  0100               	movlb	0	; () banked
 10845  014764  1174               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10846  014766  0100               	movlb	0	; () banked
 10847  014768  1175               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10848  01476A  B4D8               	btfsc	status,2,c
 10849  01476C  D010               	goto	l1611
 10850  01476E  D7D9               	goto	l8428
 10851  014770                     l8432:
 10852                           
 10853                           ; BSR set to: 0
 10854  014770  0100               	movlb	0	; () banked
 10855  014772  2B77               	incf	___xxtofl@exp& (0+255),f,b
 10856                           
 10857                           ; BSR set to: 0
 10858  014774  0E01               	movlw	1
 10859  014776  0100               	movlb	0	; () banked
 10860  014778  2778               	addwf	___xxtofl@arg& (0+255),f,b
 10861  01477A  0E00               	movlw	0
 10862  01477C  2379               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 10863  01477E  237A               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 10864  014780  237B               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 10865                           
 10866                           ; BSR set to: 0
 10867  014782  0100               	movlb	0	; () banked
 10868  014784  90D8               	bcf	status,0,c
 10869  014786  337B               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10870  014788  337A               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10871  01478A  3379               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10872  01478C  3378               	rrcf	___xxtofl@arg& (0+255),f,b
 10873  01478E                     l1611:
 10874                           
 10875                           ; BSR set to: 0
 10876  01478E  0E00               	movlw	0
 10877  014790  0100               	movlb	0	; () banked
 10878  014792  1578               	andwf	___xxtofl@arg& (0+255),w,b
 10879  014794  0100               	movlb	0	; () banked
 10880  014796  6F72               	movwf	??___xxtofl& (0+255),b
 10881  014798  0E00               	movlw	0
 10882  01479A  0100               	movlb	0	; () banked
 10883  01479C  1579               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10884  01479E  0100               	movlb	0	; () banked
 10885  0147A0  6F73               	movwf	(??___xxtofl+1)& (0+255),b
 10886  0147A2  0E00               	movlw	0
 10887  0147A4  0100               	movlb	0	; () banked
 10888  0147A6  157A               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10889  0147A8  0100               	movlb	0	; () banked
 10890  0147AA  6F74               	movwf	(??___xxtofl+2)& (0+255),b
 10891  0147AC  0EFF               	movlw	255
 10892  0147AE  0100               	movlb	0	; () banked
 10893  0147B0  157B               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10894  0147B2  0100               	movlb	0	; () banked
 10895  0147B4  6F75               	movwf	(??___xxtofl+3)& (0+255),b
 10896  0147B6  0100               	movlb	0	; () banked
 10897  0147B8  5172               	movf	??___xxtofl& (0+255),w,b
 10898  0147BA  0100               	movlb	0	; () banked
 10899  0147BC  1173               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10900  0147BE  0100               	movlb	0	; () banked
 10901  0147C0  1174               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10902  0147C2  0100               	movlb	0	; () banked
 10903  0147C4  1175               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10904  0147C6  B4D8               	btfsc	status,2,c
 10905  0147C8  D009               	goto	l8440
 10906  0147CA  D7D2               	goto	l8432
 10907  0147CC                     l8438:
 10908                           
 10909                           ; BSR set to: 0
 10910  0147CC  0100               	movlb	0	; () banked
 10911  0147CE  0777               	decf	___xxtofl@exp& (0+255),f,b
 10912  0147D0  0100               	movlb	0	; () banked
 10913  0147D2  90D8               	bcf	status,0,c
 10914  0147D4  3778               	rlcf	___xxtofl@arg& (0+255),f,b
 10915  0147D6  3779               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 10916  0147D8  377A               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 10917  0147DA  377B               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 10918  0147DC                     l8440:
 10919                           
 10920                           ; BSR set to: 0
 10921  0147DC  0100               	movlb	0	; () banked
 10922  0147DE  BF7A               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 10923  0147E0  D004               	goto	l1618
 10924                           
 10925                           ; BSR set to: 0
 10926  0147E2  0E02               	movlw	2
 10927  0147E4  0100               	movlb	0	; () banked
 10928  0147E6  6177               	cpfslt	___xxtofl@exp& (0+255),b
 10929  0147E8  D7F1               	goto	l8438
 10930  0147EA                     l1618:
 10931                           
 10932                           ; BSR set to: 0
 10933  0147EA  0100               	movlb	0	; () banked
 10934  0147EC  B177               	btfsc	___xxtofl@exp& (0+255),0,b
 10935  0147EE  D009               	goto	l1619
 10936                           
 10937                           ; BSR set to: 0
 10938  0147F0  0EFF               	movlw	255
 10939  0147F2  0100               	movlb	0	; () banked
 10940  0147F4  1778               	andwf	___xxtofl@arg& (0+255),f,b
 10941  0147F6  0EFF               	movlw	255
 10942  0147F8  1779               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 10943  0147FA  0E7F               	movlw	127
 10944  0147FC  177A               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 10945  0147FE  0EFF               	movlw	255
 10946  014800  177B               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 10947  014802                     l1619:
 10948                           
 10949                           ; BSR set to: 0
 10950  014802  0100               	movlb	0	; () banked
 10951  014804  90D8               	bcf	status,0,c
 10952  014806  3377               	rrcf	___xxtofl@exp& (0+255),f,b
 10953  014808  C077  F072         	movff	___xxtofl@exp,??___xxtofl
 10954  01480C  0100               	movlb	0	; () banked
 10955  01480E  6B73               	clrf	(??___xxtofl+1)& (0+255),b
 10956  014810  6B74               	clrf	(??___xxtofl+2)& (0+255),b
 10957  014812  6B75               	clrf	(??___xxtofl+3)& (0+255),b
 10958  014814  C072  F075         	movff	??___xxtofl,??___xxtofl+3
 10959  014818  0100               	movlb	0	; () banked
 10960  01481A  6B74               	clrf	(??___xxtofl+2)& (0+255),b
 10961  01481C  6B73               	clrf	(??___xxtofl+1)& (0+255),b
 10962  01481E  6B72               	clrf	??___xxtofl& (0+255),b
 10963  014820  0100               	movlb	0	; () banked
 10964  014822  5172               	movf	??___xxtofl& (0+255),w,b
 10965  014824  0100               	movlb	0	; () banked
 10966  014826  1378               	iorwf	___xxtofl@arg& (0+255),f,b
 10967  014828  0100               	movlb	0	; () banked
 10968  01482A  5173               	movf	(??___xxtofl+1)& (0+255),w,b
 10969  01482C  0100               	movlb	0	; () banked
 10970  01482E  1379               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10971  014830  0100               	movlb	0	; () banked
 10972  014832  5174               	movf	(??___xxtofl+2)& (0+255),w,b
 10973  014834  0100               	movlb	0	; () banked
 10974  014836  137A               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10975  014838  0100               	movlb	0	; () banked
 10976  01483A  5175               	movf	(??___xxtofl+3)& (0+255),w,b
 10977  01483C  0100               	movlb	0	; () banked
 10978  01483E  137B               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10979                           
 10980                           ; BSR set to: 0
 10981  014840  0100               	movlb	0	; () banked
 10982  014842  5176               	movf	___xxtofl@sign& (0+255),w,b
 10983  014844  0100               	movlb	0	; () banked
 10984  014846  B4D8               	btfsc	status,2,c
 10985  014848  D005               	goto	l8452
 10986                           
 10987                           ; BSR set to: 0
 10988  01484A  0100               	movlb	0	; () banked
 10989  01484C  AF71               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10990  01484E  D002               	goto	l8452
 10991                           
 10992                           ; BSR set to: 0
 10993  014850  0100               	movlb	0	; () banked
 10994  014852  8F7B               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10995  014854                     l8452:
 10996                           
 10997                           ; BSR set to: 0
 10998  014854  C078  F06E         	movff	___xxtofl@arg,?___xxtofl
 10999  014858  C079  F06F         	movff	___xxtofl@arg+1,?___xxtofl+1
 11000  01485C  C07A  F070         	movff	___xxtofl@arg+2,?___xxtofl+2
 11001  014860  C07B  F071         	movff	___xxtofl@arg+3,?___xxtofl+3
 11002  014864  0012               	return	
 11003  014866                     __end_of___xxtofl:
 11004                           	opt stack 0
 11005                           tblptru	equ	0xFF8
 11006                           tblptrh	equ	0xFF7
 11007                           tblptrl	equ	0xFF6
 11008                           tablat	equ	0xFF5
 11009                           prodh	equ	0xFF4
 11010                           prodl	equ	0xFF3
 11011                           intcon	equ	0xFF2
 11012                           postinc0	equ	0xFEE
 11013                           wreg	equ	0xFE8
 11014                           indf2	equ	0xFDF
 11015                           postinc2	equ	0xFDE
 11016                           fsr2h	equ	0xFDA
 11017                           fsr2l	equ	0xFD9
 11018                           status	equ	0xFD8
 11019                           
 11020 ;; *************** function ___llmod *****************
 11021 ;; Defined at:
 11022 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 11023 ;; Parameters:    Size  Location     Type
 11024 ;;  dividend        4   14[BANK0 ] unsigned long 
 11025 ;;  divisor         4   18[BANK0 ] unsigned long 
 11026 ;; Auto vars:     Size  Location     Type
 11027 ;;  counter         1   22[BANK0 ] unsigned char 
 11028 ;; Return value:  Size  Location     Type
 11029 ;;                  4   14[BANK0 ] unsigned long 
 11030 ;; Registers used:
 11031 ;;		wreg, status,2, status,0
 11032 ;; Tracked objects:
 11033 ;;		On entry : 0/0
 11034 ;;		On exit  : 0/0
 11035 ;;		Unchanged: 0/0
 11036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11037 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11038 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11040 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11041 ;;Total ram usage:        9 bytes
 11042 ;; Hardware stack levels used:    1
 11043 ;; Hardware stack levels required when called:    3
 11044 ;; This function calls:
 11045 ;;		Nothing
 11046 ;; This function is called by:
 11047 ;;		_sprintf
 11048 ;; This function uses a non-reentrant model
 11049 ;;
 11050                           
 11051                           	psect	text18
 11052  015C36                     __ptext18:
 11053                           	opt stack 0
 11054  015C36                     ___llmod:
 11055                           	opt stack 25
 11056                           
 11057                           ; BSR set to: 0
 11058                           ;incstack = 0
 11059  015C36  0100               	movlb	0	; () banked
 11060  015C38  5172               	movf	___llmod@divisor& (0+255),w,b
 11061  015C3A  0100               	movlb	0	; () banked
 11062  015C3C  1173               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11063  015C3E  0100               	movlb	0	; () banked
 11064  015C40  1174               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11065  015C42  0100               	movlb	0	; () banked
 11066  015C44  1175               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11067  015C46  B4D8               	btfsc	status,2,c
 11068  015C48  D03A               	goto	l1412
 11069                           
 11070                           ; BSR set to: 0
 11071  015C4A  0E01               	movlw	1
 11072  015C4C  0100               	movlb	0	; () banked
 11073  015C4E  6F76               	movwf	___llmod@counter& (0+255),b
 11074  015C50  D008               	goto	l8404
 11075  015C52                     l8402:
 11076                           
 11077                           ; BSR set to: 0
 11078  015C52  0100               	movlb	0	; () banked
 11079  015C54  90D8               	bcf	status,0,c
 11080  015C56  3772               	rlcf	___llmod@divisor& (0+255),f,b
 11081  015C58  3773               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11082  015C5A  3774               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11083  015C5C  3775               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11084  015C5E  0100               	movlb	0	; () banked
 11085  015C60  2B76               	incf	___llmod@counter& (0+255),f,b
 11086  015C62                     l8404:
 11087                           
 11088                           ; BSR set to: 0
 11089  015C62  0100               	movlb	0	; () banked
 11090  015C64  AF75               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11091  015C66  D7F5               	goto	l8402
 11092  015C68                     l8406:
 11093                           
 11094                           ; BSR set to: 0
 11095  015C68  0100               	movlb	0	; () banked
 11096  015C6A  5172               	movf	___llmod@divisor& (0+255),w,b
 11097  015C6C  0100               	movlb	0	; () banked
 11098  015C6E  5D6E               	subwf	___llmod@dividend& (0+255),w,b
 11099  015C70  0100               	movlb	0	; () banked
 11100  015C72  5173               	movf	(___llmod@divisor+1)& (0+255),w,b
 11101  015C74  0100               	movlb	0	; () banked
 11102  015C76  596F               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11103  015C78  0100               	movlb	0	; () banked
 11104  015C7A  5174               	movf	(___llmod@divisor+2)& (0+255),w,b
 11105  015C7C  0100               	movlb	0	; () banked
 11106  015C7E  5970               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11107  015C80  0100               	movlb	0	; () banked
 11108  015C82  5175               	movf	(___llmod@divisor+3)& (0+255),w,b
 11109  015C84  0100               	movlb	0	; () banked
 11110  015C86  5971               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11111  015C88  A0D8               	btfss	status,0,c
 11112  015C8A  D010               	goto	l8410
 11113                           
 11114                           ; BSR set to: 0
 11115  015C8C  0100               	movlb	0	; () banked
 11116  015C8E  5172               	movf	___llmod@divisor& (0+255),w,b
 11117  015C90  0100               	movlb	0	; () banked
 11118  015C92  5F6E               	subwf	___llmod@dividend& (0+255),f,b
 11119  015C94  0100               	movlb	0	; () banked
 11120  015C96  5173               	movf	(___llmod@divisor+1)& (0+255),w,b
 11121  015C98  0100               	movlb	0	; () banked
 11122  015C9A  5B6F               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11123  015C9C  0100               	movlb	0	; () banked
 11124  015C9E  5174               	movf	(___llmod@divisor+2)& (0+255),w,b
 11125  015CA0  0100               	movlb	0	; () banked
 11126  015CA2  5B70               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11127  015CA4  0100               	movlb	0	; () banked
 11128  015CA6  5175               	movf	(___llmod@divisor+3)& (0+255),w,b
 11129  015CA8  0100               	movlb	0	; () banked
 11130  015CAA  5B71               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11131  015CAC                     l8410:
 11132                           
 11133                           ; BSR set to: 0
 11134  015CAC  0100               	movlb	0	; () banked
 11135  015CAE  90D8               	bcf	status,0,c
 11136  015CB0  3375               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11137  015CB2  3374               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11138  015CB4  3373               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11139  015CB6  3372               	rrcf	___llmod@divisor& (0+255),f,b
 11140                           
 11141                           ; BSR set to: 0
 11142  015CB8  0100               	movlb	0	; () banked
 11143  015CBA  2F76               	decfsz	___llmod@counter& (0+255),f,b
 11144  015CBC  D7D5               	goto	l8406
 11145  015CBE                     l1412:
 11146                           
 11147                           ; BSR set to: 0
 11148  015CBE  C06E  F06E         	movff	___llmod@dividend,?___llmod
 11149  015CC2  C06F  F06F         	movff	___llmod@dividend+1,?___llmod+1
 11150  015CC6  C070  F070         	movff	___llmod@dividend+2,?___llmod+2
 11151  015CCA  C071  F071         	movff	___llmod@dividend+3,?___llmod+3
 11152                           
 11153                           ; BSR set to: 0
 11154  015CCE  0012               	return		;funcret
 11155  015CD0                     __end_of___llmod:
 11156                           	opt stack 0
 11157                           tblptru	equ	0xFF8
 11158                           tblptrh	equ	0xFF7
 11159                           tblptrl	equ	0xFF6
 11160                           tablat	equ	0xFF5
 11161                           prodh	equ	0xFF4
 11162                           prodl	equ	0xFF3
 11163                           intcon	equ	0xFF2
 11164                           postinc0	equ	0xFEE
 11165                           wreg	equ	0xFE8
 11166                           indf2	equ	0xFDF
 11167                           postinc2	equ	0xFDE
 11168                           fsr2h	equ	0xFDA
 11169                           fsr2l	equ	0xFD9
 11170                           status	equ	0xFD8
 11171                           
 11172 ;; *************** function ___lldiv *****************
 11173 ;; Defined at:
 11174 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 11175 ;; Parameters:    Size  Location     Type
 11176 ;;  dividend        4   14[BANK0 ] unsigned long 
 11177 ;;  divisor         4   18[BANK0 ] unsigned long 
 11178 ;; Auto vars:     Size  Location     Type
 11179 ;;  quotient        4   22[BANK0 ] unsigned long 
 11180 ;;  counter         1   26[BANK0 ] unsigned char 
 11181 ;; Return value:  Size  Location     Type
 11182 ;;                  4   14[BANK0 ] unsigned long 
 11183 ;; Registers used:
 11184 ;;		wreg, status,2, status,0
 11185 ;; Tracked objects:
 11186 ;;		On entry : 0/0
 11187 ;;		On exit  : 0/0
 11188 ;;		Unchanged: 0/0
 11189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11190 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11191 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11193 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;Total ram usage:       13 bytes
 11195 ;; Hardware stack levels used:    1
 11196 ;; Hardware stack levels required when called:    3
 11197 ;; This function calls:
 11198 ;;		Nothing
 11199 ;; This function is called by:
 11200 ;;		_sprintf
 11201 ;; This function uses a non-reentrant model
 11202 ;;
 11203                           
 11204                           	psect	text19
 11205  0158CC                     __ptext19:
 11206                           	opt stack 0
 11207  0158CC                     ___lldiv:
 11208                           	opt stack 25
 11209                           
 11210                           ; BSR set to: 0
 11211                           ;incstack = 0
 11212  0158CC  0E00               	movlw	0
 11213  0158CE  0100               	movlb	0	; () banked
 11214  0158D0  6F76               	movwf	___lldiv@quotient& (0+255),b
 11215  0158D2  0E00               	movlw	0
 11216  0158D4  6F77               	movwf	(___lldiv@quotient+1)& (0+255),b
 11217  0158D6  0E00               	movlw	0
 11218  0158D8  6F78               	movwf	(___lldiv@quotient+2)& (0+255),b
 11219  0158DA  0E00               	movlw	0
 11220  0158DC  6F79               	movwf	(___lldiv@quotient+3)& (0+255),b
 11221                           
 11222                           ; BSR set to: 0
 11223  0158DE  0100               	movlb	0	; () banked
 11224  0158E0  5172               	movf	___lldiv@divisor& (0+255),w,b
 11225  0158E2  0100               	movlb	0	; () banked
 11226  0158E4  1173               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11227  0158E6  0100               	movlb	0	; () banked
 11228  0158E8  1174               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11229  0158EA  0100               	movlb	0	; () banked
 11230  0158EC  1175               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11231  0158EE  B4D8               	btfsc	status,2,c
 11232  0158F0  D042               	goto	l1402
 11233                           
 11234                           ; BSR set to: 0
 11235  0158F2  0E01               	movlw	1
 11236  0158F4  0100               	movlb	0	; () banked
 11237  0158F6  6F7A               	movwf	___lldiv@counter& (0+255),b
 11238  0158F8  D008               	goto	l8384
 11239  0158FA                     l8382:
 11240                           
 11241                           ; BSR set to: 0
 11242  0158FA  0100               	movlb	0	; () banked
 11243  0158FC  90D8               	bcf	status,0,c
 11244  0158FE  3772               	rlcf	___lldiv@divisor& (0+255),f,b
 11245  015900  3773               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11246  015902  3774               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11247  015904  3775               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11248  015906  0100               	movlb	0	; () banked
 11249  015908  2B7A               	incf	___lldiv@counter& (0+255),f,b
 11250  01590A                     l8384:
 11251                           
 11252                           ; BSR set to: 0
 11253  01590A  0100               	movlb	0	; () banked
 11254  01590C  AF75               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11255  01590E  D7F5               	goto	l8382
 11256  015910                     l8386:
 11257                           
 11258                           ; BSR set to: 0
 11259  015910  0100               	movlb	0	; () banked
 11260  015912  90D8               	bcf	status,0,c
 11261  015914  3776               	rlcf	___lldiv@quotient& (0+255),f,b
 11262  015916  3777               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11263  015918  3778               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11264  01591A  3779               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11265                           
 11266                           ; BSR set to: 0
 11267  01591C  0100               	movlb	0	; () banked
 11268  01591E  5172               	movf	___lldiv@divisor& (0+255),w,b
 11269  015920  0100               	movlb	0	; () banked
 11270  015922  5D6E               	subwf	___lldiv@dividend& (0+255),w,b
 11271  015924  0100               	movlb	0	; () banked
 11272  015926  5173               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11273  015928  0100               	movlb	0	; () banked
 11274  01592A  596F               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11275  01592C  0100               	movlb	0	; () banked
 11276  01592E  5174               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11277  015930  0100               	movlb	0	; () banked
 11278  015932  5970               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11279  015934  0100               	movlb	0	; () banked
 11280  015936  5175               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11281  015938  0100               	movlb	0	; () banked
 11282  01593A  5971               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11283  01593C  A0D8               	btfss	status,0,c
 11284  01593E  D012               	goto	l8394
 11285                           
 11286                           ; BSR set to: 0
 11287  015940  0100               	movlb	0	; () banked
 11288  015942  5172               	movf	___lldiv@divisor& (0+255),w,b
 11289  015944  0100               	movlb	0	; () banked
 11290  015946  5F6E               	subwf	___lldiv@dividend& (0+255),f,b
 11291  015948  0100               	movlb	0	; () banked
 11292  01594A  5173               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11293  01594C  0100               	movlb	0	; () banked
 11294  01594E  5B6F               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11295  015950  0100               	movlb	0	; () banked
 11296  015952  5174               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11297  015954  0100               	movlb	0	; () banked
 11298  015956  5B70               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11299  015958  0100               	movlb	0	; () banked
 11300  01595A  5175               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11301  01595C  0100               	movlb	0	; () banked
 11302  01595E  5B71               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11303                           
 11304                           ; BSR set to: 0
 11305  015960  0100               	movlb	0	; () banked
 11306  015962  8176               	bsf	___lldiv@quotient& (0+255),0,b
 11307  015964                     l8394:
 11308                           
 11309                           ; BSR set to: 0
 11310  015964  0100               	movlb	0	; () banked
 11311  015966  90D8               	bcf	status,0,c
 11312  015968  3375               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11313  01596A  3374               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11314  01596C  3373               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11315  01596E  3372               	rrcf	___lldiv@divisor& (0+255),f,b
 11316                           
 11317                           ; BSR set to: 0
 11318  015970  0100               	movlb	0	; () banked
 11319  015972  2F7A               	decfsz	___lldiv@counter& (0+255),f,b
 11320  015974  D7CD               	goto	l8386
 11321  015976                     l1402:
 11322                           
 11323                           ; BSR set to: 0
 11324  015976  C076  F06E         	movff	___lldiv@quotient,?___lldiv
 11325  01597A  C077  F06F         	movff	___lldiv@quotient+1,?___lldiv+1
 11326  01597E  C078  F070         	movff	___lldiv@quotient+2,?___lldiv+2
 11327  015982  C079  F071         	movff	___lldiv@quotient+3,?___lldiv+3
 11328                           
 11329                           ; BSR set to: 0
 11330  015986  0012               	return		;funcret
 11331  015988                     __end_of___lldiv:
 11332                           	opt stack 0
 11333                           tblptru	equ	0xFF8
 11334                           tblptrh	equ	0xFF7
 11335                           tblptrl	equ	0xFF6
 11336                           tablat	equ	0xFF5
 11337                           prodh	equ	0xFF4
 11338                           prodl	equ	0xFF3
 11339                           intcon	equ	0xFF2
 11340                           postinc0	equ	0xFEE
 11341                           wreg	equ	0xFE8
 11342                           indf2	equ	0xFDF
 11343                           postinc2	equ	0xFDE
 11344                           fsr2h	equ	0xFDA
 11345                           fsr2l	equ	0xFD9
 11346                           status	equ	0xFD8
 11347                           
 11348 ;; *************** function ___fltol *****************
 11349 ;; Defined at:
 11350 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 11351 ;; Parameters:    Size  Location     Type
 11352 ;;  f1              4   86[BANK0 ] unsigned long 
 11353 ;; Auto vars:     Size  Location     Type
 11354 ;;  exp1            1   95[BANK0 ] unsigned char 
 11355 ;;  sign1           1   94[BANK0 ] unsigned char 
 11356 ;; Return value:  Size  Location     Type
 11357 ;;                  4   86[BANK0 ] long 
 11358 ;; Registers used:
 11359 ;;		wreg, status,2, status,0
 11360 ;; Tracked objects:
 11361 ;;		On entry : 0/0
 11362 ;;		On exit  : 0/0
 11363 ;;		Unchanged: 0/0
 11364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11365 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11366 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11367 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11368 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11369 ;;Total ram usage:       10 bytes
 11370 ;; Hardware stack levels used:    1
 11371 ;; Hardware stack levels required when called:    3
 11372 ;; This function calls:
 11373 ;;		Nothing
 11374 ;; This function is called by:
 11375 ;;		_main
 11376 ;;		_sprintf
 11377 ;; This function uses a non-reentrant model
 11378 ;;
 11379                           
 11380                           	psect	text20
 11381  015558                     __ptext20:
 11382                           	opt stack 0
 11383  015558                     ___fltol:
 11384                           	opt stack 27
 11385                           
 11386                           ; BSR set to: 0
 11387                           ;incstack = 0
 11388  015558  0100               	movlb	0	; () banked
 11389  01555A  35B8               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11390  01555C  35B9               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11391  01555E  0100               	movlb	0	; () banked
 11392  015560  6FBF               	movwf	___fltol@exp1& (0+255),b
 11393  015562  0100               	movlb	0	; () banked
 11394  015564  51BF               	movf	___fltol@exp1& (0+255),w,b
 11395  015566  A4D8               	btfss	status,2,c
 11396  015568  D00A               	goto	l8338
 11397                           
 11398                           ; BSR set to: 0
 11399  01556A  0E00               	movlw	0
 11400  01556C  0100               	movlb	0	; () banked
 11401  01556E  6FB6               	movwf	?___fltol& (0+255),b
 11402  015570  0E00               	movlw	0
 11403  015572  6FB7               	movwf	(?___fltol+1)& (0+255),b
 11404  015574  0E00               	movlw	0
 11405  015576  6FB8               	movwf	(?___fltol+2)& (0+255),b
 11406  015578  0E00               	movlw	0
 11407  01557A  6FB9               	movwf	(?___fltol+3)& (0+255),b
 11408                           
 11409                           ; BSR set to: 0
 11410  01557C  0012               	return	
 11411  01557E                     l8338:
 11412                           
 11413                           ; BSR set to: 0
 11414  01557E  C0B6  F0BA         	movff	___fltol@f1,??___fltol
 11415  015582  C0B7  F0BB         	movff	___fltol@f1+1,??___fltol+1
 11416  015586  C0B8  F0BC         	movff	___fltol@f1+2,??___fltol+2
 11417  01558A  C0B9  F0BD         	movff	___fltol@f1+3,??___fltol+3
 11418  01558E  0E20               	movlw	32
 11419  015590  D006               	goto	u11150
 11420  015592                     u11155:
 11421  015592  0100               	movlb	0	; () banked
 11422  015594  90D8               	bcf	status,0,c
 11423  015596  33BD               	rrcf	(??___fltol+3)& (0+255),f,b
 11424  015598  33BC               	rrcf	(??___fltol+2)& (0+255),f,b
 11425  01559A  33BB               	rrcf	(??___fltol+1)& (0+255),f,b
 11426  01559C  33BA               	rrcf	??___fltol& (0+255),f,b
 11427  01559E                     u11150:
 11428  01559E  2EE8               	decfsz	wreg,f,c
 11429  0155A0  D7F8               	goto	u11155
 11430  0155A2  0100               	movlb	0	; () banked
 11431  0155A4  51BA               	movf	??___fltol& (0+255),w,b
 11432  0155A6  0100               	movlb	0	; () banked
 11433  0155A8  6FBE               	movwf	___fltol@sign1& (0+255),b
 11434                           
 11435                           ; BSR set to: 0
 11436  0155AA  0100               	movlb	0	; () banked
 11437  0155AC  8FB8               	bsf	(___fltol@f1+2)& (0+255),7,b
 11438                           
 11439                           ; BSR set to: 0
 11440  0155AE  0EFF               	movlw	255
 11441  0155B0  0100               	movlb	0	; () banked
 11442  0155B2  17B6               	andwf	___fltol@f1& (0+255),f,b
 11443  0155B4  0EFF               	movlw	255
 11444  0155B6  17B7               	andwf	(___fltol@f1+1)& (0+255),f,b
 11445  0155B8  0EFF               	movlw	255
 11446  0155BA  17B8               	andwf	(___fltol@f1+2)& (0+255),f,b
 11447  0155BC  0E00               	movlw	0
 11448  0155BE  17B9               	andwf	(___fltol@f1+3)& (0+255),f,b
 11449                           
 11450                           ; BSR set to: 0
 11451  0155C0  0E96               	movlw	150
 11452  0155C2  0100               	movlb	0	; () banked
 11453  0155C4  5FBF               	subwf	___fltol@exp1& (0+255),f,b
 11454                           
 11455                           ; BSR set to: 0
 11456  0155C6  0100               	movlb	0	; () banked
 11457  0155C8  AFBF               	btfss	___fltol@exp1& (0+255),7,b
 11458  0155CA  D01A               	goto	l8358
 11459                           
 11460                           ; BSR set to: 0
 11461  0155CC  0100               	movlb	0	; () banked
 11462  0155CE  51BF               	movf	___fltol@exp1& (0+255),w,b
 11463  0155D0  0A80               	xorlw	128
 11464  0155D2  0F97               	addlw	151
 11465  0155D4  B0D8               	btfsc	status,0,c
 11466  0155D6  D00A               	goto	l8354
 11467                           
 11468                           ; BSR set to: 0
 11469  0155D8  0E00               	movlw	0
 11470  0155DA  0100               	movlb	0	; () banked
 11471  0155DC  6FB6               	movwf	?___fltol& (0+255),b
 11472  0155DE  0E00               	movlw	0
 11473  0155E0  6FB7               	movwf	(?___fltol+1)& (0+255),b
 11474  0155E2  0E00               	movlw	0
 11475  0155E4  6FB8               	movwf	(?___fltol+2)& (0+255),b
 11476  0155E6  0E00               	movlw	0
 11477  0155E8  6FB9               	movwf	(?___fltol+3)& (0+255),b
 11478                           
 11479                           ; BSR set to: 0
 11480  0155EA  0012               	return	
 11481  0155EC                     l8354:
 11482                           
 11483                           ; BSR set to: 0
 11484  0155EC  0100               	movlb	0	; () banked
 11485  0155EE  90D8               	bcf	status,0,c
 11486  0155F0  33B9               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11487  0155F2  33B8               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11488  0155F4  33B7               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11489  0155F6  33B6               	rrcf	___fltol@f1& (0+255),f,b
 11490                           
 11491                           ; BSR set to: 0
 11492  0155F8  0100               	movlb	0	; () banked
 11493  0155FA  3FBF               	incfsz	___fltol@exp1& (0+255),f,b
 11494  0155FC  D7F7               	goto	l8354
 11495                           
 11496                           ; BSR set to: 0
 11497  0155FE  D01B               	goto	l8368
 11498  015600                     l8358:
 11499                           
 11500                           ; BSR set to: 0
 11501  015600  0E1F               	movlw	31
 11502  015602  0100               	movlb	0	; () banked
 11503  015604  65BF               	cpfsgt	___fltol@exp1& (0+255),b
 11504  015606  D012               	goto	l8366
 11505                           
 11506                           ; BSR set to: 0
 11507  015608  0E00               	movlw	0
 11508  01560A  0100               	movlb	0	; () banked
 11509  01560C  6FB6               	movwf	?___fltol& (0+255),b
 11510  01560E  0E00               	movlw	0
 11511  015610  6FB7               	movwf	(?___fltol+1)& (0+255),b
 11512  015612  0E00               	movlw	0
 11513  015614  6FB8               	movwf	(?___fltol+2)& (0+255),b
 11514  015616  0E00               	movlw	0
 11515  015618  6FB9               	movwf	(?___fltol+3)& (0+255),b
 11516                           
 11517                           ; BSR set to: 0
 11518  01561A  0012               	return	
 11519  01561C                     l8364:
 11520                           
 11521                           ; BSR set to: 0
 11522  01561C  0100               	movlb	0	; () banked
 11523  01561E  90D8               	bcf	status,0,c
 11524  015620  37B6               	rlcf	___fltol@f1& (0+255),f,b
 11525  015622  37B7               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11526  015624  37B8               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11527  015626  37B9               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11528  015628  0100               	movlb	0	; () banked
 11529  01562A  07BF               	decf	___fltol@exp1& (0+255),f,b
 11530  01562C                     l8366:
 11531                           
 11532                           ; BSR set to: 0
 11533  01562C  0100               	movlb	0	; () banked
 11534  01562E  51BF               	movf	___fltol@exp1& (0+255),w,b
 11535  015630  0100               	movlb	0	; () banked
 11536  015632  A4D8               	btfss	status,2,c
 11537  015634  D7F3               	goto	l8364
 11538  015636                     l8368:
 11539                           
 11540                           ; BSR set to: 0
 11541  015636  0100               	movlb	0	; () banked
 11542  015638  51BE               	movf	___fltol@sign1& (0+255),w,b
 11543  01563A  0100               	movlb	0	; () banked
 11544  01563C  B4D8               	btfsc	status,2,c
 11545  01563E  D009               	goto	l8372
 11546                           
 11547                           ; BSR set to: 0
 11548  015640  0100               	movlb	0	; () banked
 11549  015642  1FB9               	comf	(___fltol@f1+3)& (0+255),f,b
 11550  015644  1FB8               	comf	(___fltol@f1+2)& (0+255),f,b
 11551  015646  1FB7               	comf	(___fltol@f1+1)& (0+255),f,b
 11552  015648  6DB6               	negf	___fltol@f1& (0+255),b
 11553  01564A  0E00               	movlw	0
 11554  01564C  23B7               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11555  01564E  23B8               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11556  015650  23B9               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11557  015652                     l8372:
 11558                           
 11559                           ; BSR set to: 0
 11560  015652  C0B6  F0B6         	movff	___fltol@f1,?___fltol
 11561  015656  C0B7  F0B7         	movff	___fltol@f1+1,?___fltol+1
 11562  01565A  C0B8  F0B8         	movff	___fltol@f1+2,?___fltol+2
 11563  01565E  C0B9  F0B9         	movff	___fltol@f1+3,?___fltol+3
 11564  015662  0012               	return	
 11565  015664                     __end_of___fltol:
 11566                           	opt stack 0
 11567                           tblptru	equ	0xFF8
 11568                           tblptrh	equ	0xFF7
 11569                           tblptrl	equ	0xFF6
 11570                           tablat	equ	0xFF5
 11571                           prodh	equ	0xFF4
 11572                           prodl	equ	0xFF3
 11573                           intcon	equ	0xFF2
 11574                           postinc0	equ	0xFEE
 11575                           wreg	equ	0xFE8
 11576                           indf2	equ	0xFDF
 11577                           postinc2	equ	0xFDE
 11578                           fsr2h	equ	0xFDA
 11579                           fsr2l	equ	0xFD9
 11580                           status	equ	0xFD8
 11581                           
 11582 ;; *************** function ___flsub *****************
 11583 ;; Defined at:
 11584 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 11585 ;; Parameters:    Size  Location     Type
 11586 ;;  b               4   86[BANK0 ] long 
 11587 ;;  a               4   90[BANK0 ] long 
 11588 ;; Auto vars:     Size  Location     Type
 11589 ;;		None
 11590 ;; Return value:  Size  Location     Type
 11591 ;;                  4   86[BANK0 ] long 
 11592 ;; Registers used:
 11593 ;;		wreg, status,2, status,0, cstack
 11594 ;; Tracked objects:
 11595 ;;		On entry : 0/0
 11596 ;;		On exit  : 0/0
 11597 ;;		Unchanged: 0/0
 11598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11599 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11602 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11603 ;;Total ram usage:        8 bytes
 11604 ;; Hardware stack levels used:    1
 11605 ;; Hardware stack levels required when called:    4
 11606 ;; This function calls:
 11607 ;;		___fladd
 11608 ;; This function is called by:
 11609 ;;		_sprintf
 11610 ;; This function uses a non-reentrant model
 11611 ;;
 11612                           
 11613                           	psect	text21
 11614  015EE0                     __ptext21:
 11615                           	opt stack 0
 11616  015EE0                     ___flsub:
 11617                           	opt stack 24
 11618                           
 11619                           ; BSR set to: 0
 11620                           ;incstack = 0
 11621  015EE0  0E00               	movlw	0
 11622  015EE2  0100               	movlb	0	; () banked
 11623  015EE4  1BBA               	xorwf	___flsub@a& (0+255),f,b
 11624  015EE6  0E00               	movlw	0
 11625  015EE8  1BBB               	xorwf	(___flsub@a+1)& (0+255),f,b
 11626  015EEA  0E00               	movlw	0
 11627  015EEC  1BBC               	xorwf	(___flsub@a+2)& (0+255),f,b
 11628  015EEE  0E80               	movlw	128
 11629  015EF0  1BBD               	xorwf	(___flsub@a+3)& (0+255),f,b
 11630                           
 11631                           ; BSR set to: 0
 11632  015EF2  C0B6  F0A2         	movff	___flsub@b,___fladd@b
 11633  015EF6  C0B7  F0A3         	movff	___flsub@b+1,___fladd@b+1
 11634  015EFA  C0B8  F0A4         	movff	___flsub@b+2,___fladd@b+2
 11635  015EFE  C0B9  F0A5         	movff	___flsub@b+3,___fladd@b+3
 11636  015F02  C0BA  F0A6         	movff	___flsub@a,___fladd@a
 11637  015F06  C0BB  F0A7         	movff	___flsub@a+1,___fladd@a+1
 11638  015F0A  C0BC  F0A8         	movff	___flsub@a+2,___fladd@a+2
 11639  015F0E  C0BD  F0A9         	movff	___flsub@a+3,___fladd@a+3
 11640  015F12  EC7B  F099         	call	___fladd	;wreg free
 11641  015F16  C0A2  F0B6         	movff	?___fladd,?___flsub
 11642  015F1A  C0A3  F0B7         	movff	?___fladd+1,?___flsub+1
 11643  015F1E  C0A4  F0B8         	movff	?___fladd+2,?___flsub+2
 11644  015F22  C0A5  F0B9         	movff	?___fladd+3,?___flsub+3
 11645  015F26  0012               	return	
 11646  015F28                     __end_of___flsub:
 11647                           	opt stack 0
 11648                           tblptru	equ	0xFF8
 11649                           tblptrh	equ	0xFF7
 11650                           tblptrl	equ	0xFF6
 11651                           tablat	equ	0xFF5
 11652                           prodh	equ	0xFF4
 11653                           prodl	equ	0xFF3
 11654                           intcon	equ	0xFF2
 11655                           postinc0	equ	0xFEE
 11656                           wreg	equ	0xFE8
 11657                           indf2	equ	0xFDF
 11658                           postinc2	equ	0xFDE
 11659                           fsr2h	equ	0xFDA
 11660                           fsr2l	equ	0xFD9
 11661                           status	equ	0xFD8
 11662                           
 11663 ;; *************** function ___fladd *****************
 11664 ;; Defined at:
 11665 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 11666 ;; Parameters:    Size  Location     Type
 11667 ;;  b               4   66[BANK0 ] long 
 11668 ;;  a               4   70[BANK0 ] long 
 11669 ;; Auto vars:     Size  Location     Type
 11670 ;;  grs             1   85[BANK0 ] unsigned char 
 11671 ;;  bexp            1   84[BANK0 ] unsigned char 
 11672 ;;  aexp            1   83[BANK0 ] unsigned char 
 11673 ;;  signs           1   82[BANK0 ] unsigned char 
 11674 ;; Return value:  Size  Location     Type
 11675 ;;                  4   66[BANK0 ] unsigned char 
 11676 ;; Registers used:
 11677 ;;		wreg, status,2, status,0
 11678 ;; Tracked objects:
 11679 ;;		On entry : 0/0
 11680 ;;		On exit  : 0/0
 11681 ;;		Unchanged: 0/0
 11682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11683 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11684 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11685 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11686 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11687 ;;Total ram usage:       20 bytes
 11688 ;; Hardware stack levels used:    1
 11689 ;; Hardware stack levels required when called:    3
 11690 ;; This function calls:
 11691 ;;		Nothing
 11692 ;; This function is called by:
 11693 ;;		_main
 11694 ;;		_sprintf
 11695 ;;		___flsub
 11696 ;; This function uses a non-reentrant model
 11697 ;;
 11698                           
 11699                           	psect	text22
 11700  0132F6                     __ptext22:
 11701                           	opt stack 0
 11702  0132F6                     ___fladd:
 11703                           	opt stack 27
 11704                           
 11705                           ;incstack = 0
 11706  0132F6  0100               	movlb	0	; () banked
 11707  0132F8  51A5               	movf	(___fladd@b+3)& (0+255),w,b
 11708  0132FA  0B80               	andlw	128
 11709  0132FC  0100               	movlb	0	; () banked
 11710  0132FE  6FB2               	movwf	___fladd@signs& (0+255),b
 11711  013300  0100               	movlb	0	; () banked
 11712  013302  51A5               	movf	(___fladd@b+3)& (0+255),w,b
 11713  013304  25A5               	addwf	(___fladd@b+3)& (0+255),w,b
 11714  013306  0100               	movlb	0	; () banked
 11715  013308  6FB4               	movwf	___fladd@bexp& (0+255),b
 11716                           
 11717                           ; BSR set to: 0
 11718  01330A  0100               	movlb	0	; () banked
 11719  01330C  AFA4               	btfss	(___fladd@b+2)& (0+255),7,b
 11720  01330E  D002               	goto	l7670
 11721                           
 11722                           ; BSR set to: 0
 11723  013310  0100               	movlb	0	; () banked
 11724  013312  81B4               	bsf	___fladd@bexp& (0+255),0,b
 11725  013314                     l7670:
 11726                           
 11727                           ; BSR set to: 0
 11728  013314  0100               	movlb	0	; () banked
 11729  013316  51B4               	movf	___fladd@bexp& (0+255),w,b
 11730  013318  0100               	movlb	0	; () banked
 11731  01331A  B4D8               	btfsc	status,2,c
 11732  01331C  D012               	goto	l7680
 11733                           
 11734                           ; BSR set to: 0
 11735  01331E  0100               	movlb	0	; () banked
 11736  013320  29B4               	incf	___fladd@bexp& (0+255),w,b
 11737  013322  A4D8               	btfss	status,2,c
 11738  013324  D009               	goto	l7676
 11739                           
 11740                           ; BSR set to: 0
 11741  013326  0E00               	movlw	0
 11742  013328  0100               	movlb	0	; () banked
 11743  01332A  6FA2               	movwf	___fladd@b& (0+255),b
 11744  01332C  0E00               	movlw	0
 11745  01332E  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 11746  013330  0E00               	movlw	0
 11747  013332  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 11748  013334  0E00               	movlw	0
 11749  013336  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11750  013338                     l7676:
 11751                           
 11752                           ; BSR set to: 0
 11753  013338  0100               	movlb	0	; () banked
 11754  01333A  8FA4               	bsf	(___fladd@b+2)& (0+255),7,b
 11755                           
 11756                           ; BSR set to: 0
 11757  01333C  0E00               	movlw	0
 11758  01333E  0100               	movlb	0	; () banked
 11759  013340  D008               	goto	L11
 11760  013342                     l7680:
 11761                           
 11762                           ; BSR set to: 0
 11763  013342  0E00               	movlw	0
 11764  013344  0100               	movlb	0	; () banked
 11765  013346  6FA2               	movwf	___fladd@b& (0+255),b
 11766  013348  0E00               	movlw	0
 11767  01334A  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 11768  01334C  0E00               	movlw	0
 11769  01334E  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 11770  013350  0E00               	movlw	0
 11771  013352                     L11:
 11772  013352  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11773                           
 11774                           ; BSR set to: 0
 11775                           
 11776                           ; BSR set to: 0
 11777  013354  0100               	movlb	0	; () banked
 11778  013356  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11779  013358  0B80               	andlw	128
 11780  01335A  0100               	movlb	0	; () banked
 11781  01335C  6FB3               	movwf	___fladd@aexp& (0+255),b
 11782                           
 11783                           ; BSR set to: 0
 11784  01335E  0100               	movlb	0	; () banked
 11785  013360  51B2               	movf	___fladd@signs& (0+255),w,b
 11786  013362  0100               	movlb	0	; () banked
 11787  013364  19B3               	xorwf	___fladd@aexp& (0+255),w,b
 11788  013366  B4D8               	btfsc	status,2,c
 11789  013368  D002               	goto	l7688
 11790                           
 11791                           ; BSR set to: 0
 11792  01336A  0100               	movlb	0	; () banked
 11793  01336C  8DB2               	bsf	___fladd@signs& (0+255),6,b
 11794  01336E                     l7688:
 11795                           
 11796                           ; BSR set to: 0
 11797  01336E  0100               	movlb	0	; () banked
 11798  013370  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 11799  013372  25A9               	addwf	(___fladd@a+3)& (0+255),w,b
 11800  013374  0100               	movlb	0	; () banked
 11801  013376  6FB3               	movwf	___fladd@aexp& (0+255),b
 11802                           
 11803                           ; BSR set to: 0
 11804  013378  0100               	movlb	0	; () banked
 11805  01337A  AFA8               	btfss	(___fladd@a+2)& (0+255),7,b
 11806  01337C  D002               	goto	l7694
 11807                           
 11808                           ; BSR set to: 0
 11809  01337E  0100               	movlb	0	; () banked
 11810  013380  81B3               	bsf	___fladd@aexp& (0+255),0,b
 11811  013382                     l7694:
 11812                           
 11813                           ; BSR set to: 0
 11814  013382  0100               	movlb	0	; () banked
 11815  013384  51B3               	movf	___fladd@aexp& (0+255),w,b
 11816  013386  0100               	movlb	0	; () banked
 11817  013388  B4D8               	btfsc	status,2,c
 11818  01338A  D012               	goto	l7704
 11819                           
 11820                           ; BSR set to: 0
 11821  01338C  0100               	movlb	0	; () banked
 11822  01338E  29B3               	incf	___fladd@aexp& (0+255),w,b
 11823  013390  A4D8               	btfss	status,2,c
 11824  013392  D009               	goto	l7700
 11825                           
 11826                           ; BSR set to: 0
 11827  013394  0E00               	movlw	0
 11828  013396  0100               	movlb	0	; () banked
 11829  013398  6FA6               	movwf	___fladd@a& (0+255),b
 11830  01339A  0E00               	movlw	0
 11831  01339C  6FA7               	movwf	(___fladd@a+1)& (0+255),b
 11832  01339E  0E00               	movlw	0
 11833  0133A0  6FA8               	movwf	(___fladd@a+2)& (0+255),b
 11834  0133A2  0E00               	movlw	0
 11835  0133A4  6FA9               	movwf	(___fladd@a+3)& (0+255),b
 11836  0133A6                     l7700:
 11837                           
 11838                           ; BSR set to: 0
 11839  0133A6  0100               	movlb	0	; () banked
 11840  0133A8  8FA8               	bsf	(___fladd@a+2)& (0+255),7,b
 11841                           
 11842                           ; BSR set to: 0
 11843  0133AA  0E00               	movlw	0
 11844  0133AC  0100               	movlb	0	; () banked
 11845  0133AE  D008               	goto	L12
 11846  0133B0                     l7704:
 11847                           
 11848                           ; BSR set to: 0
 11849  0133B0  0E00               	movlw	0
 11850  0133B2  0100               	movlb	0	; () banked
 11851  0133B4  6FA6               	movwf	___fladd@a& (0+255),b
 11852  0133B6  0E00               	movlw	0
 11853  0133B8  6FA7               	movwf	(___fladd@a+1)& (0+255),b
 11854  0133BA  0E00               	movlw	0
 11855  0133BC  6FA8               	movwf	(___fladd@a+2)& (0+255),b
 11856  0133BE  0E00               	movlw	0
 11857  0133C0                     L12:
 11858  0133C0  6FA9               	movwf	(___fladd@a+3)& (0+255),b
 11859                           
 11860                           ; BSR set to: 0
 11861                           
 11862                           ; BSR set to: 0
 11863  0133C2  0100               	movlb	0	; () banked
 11864  0133C4  51B4               	movf	___fladd@bexp& (0+255),w,b
 11865  0133C6  0100               	movlb	0	; () banked
 11866  0133C8  5DB3               	subwf	___fladd@aexp& (0+255),w,b
 11867  0133CA  B0D8               	btfsc	status,0,c
 11868  0133CC  D024               	goto	l7742
 11869                           
 11870                           ; BSR set to: 0
 11871  0133CE  0100               	movlb	0	; () banked
 11872  0133D0  ADB2               	btfss	___fladd@signs& (0+255),6,b
 11873  0133D2  D003               	goto	l7712
 11874                           
 11875                           ; BSR set to: 0
 11876  0133D4  0E80               	movlw	128
 11877  0133D6  0100               	movlb	0	; () banked
 11878  0133D8  1BB2               	xorwf	___fladd@signs& (0+255),f,b
 11879  0133DA                     l7712:
 11880                           
 11881                           ; BSR set to: 0
 11882  0133DA  C0B4  F0B5         	movff	___fladd@bexp,___fladd@grs
 11883                           
 11884                           ; BSR set to: 0
 11885  0133DE  C0B3  F0B4         	movff	___fladd@aexp,___fladd@bexp
 11886                           
 11887                           ; BSR set to: 0
 11888  0133E2  C0B5  F0B3         	movff	___fladd@grs,___fladd@aexp
 11889                           
 11890                           ; BSR set to: 0
 11891  0133E6  C0A2  F0B5         	movff	___fladd@b,___fladd@grs
 11892                           
 11893                           ; BSR set to: 0
 11894  0133EA  C0A6  F0A2         	movff	___fladd@a,___fladd@b
 11895                           
 11896                           ; BSR set to: 0
 11897  0133EE  C0B5  F0A6         	movff	___fladd@grs,___fladd@a
 11898                           
 11899                           ; BSR set to: 0
 11900  0133F2  C0A3  F0B5         	movff	___fladd@b+1,___fladd@grs
 11901                           
 11902                           ; BSR set to: 0
 11903  0133F6  C0A7  F0A3         	movff	___fladd@a+1,___fladd@b+1
 11904                           
 11905                           ; BSR set to: 0
 11906  0133FA  C0B5  F0A7         	movff	___fladd@grs,___fladd@a+1
 11907                           
 11908                           ; BSR set to: 0
 11909  0133FE  C0A4  F0B5         	movff	___fladd@b+2,___fladd@grs
 11910                           
 11911                           ; BSR set to: 0
 11912  013402  C0A8  F0A4         	movff	___fladd@a+2,___fladd@b+2
 11913                           
 11914                           ; BSR set to: 0
 11915  013406  C0B5  F0A8         	movff	___fladd@grs,___fladd@a+2
 11916                           
 11917                           ; BSR set to: 0
 11918  01340A  C0A5  F0B5         	movff	___fladd@b+3,___fladd@grs
 11919                           
 11920                           ; BSR set to: 0
 11921  01340E  C0A9  F0A5         	movff	___fladd@a+3,___fladd@b+3
 11922                           
 11923                           ; BSR set to: 0
 11924  013412  C0B5  F0A9         	movff	___fladd@grs,___fladd@a+3
 11925  013416                     l7742:
 11926                           
 11927                           ; BSR set to: 0
 11928  013416  0E00               	movlw	0
 11929  013418  0100               	movlb	0	; () banked
 11930  01341A  6FB5               	movwf	___fladd@grs& (0+255),b
 11931                           
 11932                           ; BSR set to: 0
 11933  01341C  0100               	movlb	0	; () banked
 11934  01341E  51B4               	movf	___fladd@bexp& (0+255),w,b
 11935  013420  0100               	movlb	0	; () banked
 11936  013422  6FAA               	movwf	??___fladd& (0+255),b
 11937  013424  6BAB               	clrf	(??___fladd+1)& (0+255),b
 11938  013426  0100               	movlb	0	; () banked
 11939  013428  1FAA               	comf	??___fladd& (0+255),f,b
 11940  01342A  1FAB               	comf	(??___fladd+1)& (0+255),f,b
 11941  01342C  4BAA               	infsnz	??___fladd& (0+255),f,b
 11942  01342E  2BAB               	incf	(??___fladd+1)& (0+255),f,b
 11943  013430  0100               	movlb	0	; () banked
 11944  013432  51B3               	movf	___fladd@aexp& (0+255),w,b
 11945  013434  0100               	movlb	0	; () banked
 11946  013436  6FAC               	movwf	(??___fladd+2)& (0+255),b
 11947  013438  6BAD               	clrf	(??___fladd+3)& (0+255),b
 11948  01343A  0100               	movlb	0	; () banked
 11949  01343C  51AA               	movf	??___fladd& (0+255),w,b
 11950  01343E  0100               	movlb	0	; () banked
 11951  013440  27AC               	addwf	(??___fladd+2)& (0+255),f,b
 11952  013442  0100               	movlb	0	; () banked
 11953  013444  51AB               	movf	(??___fladd+1)& (0+255),w,b
 11954  013446  0100               	movlb	0	; () banked
 11955  013448  23AD               	addwfc	(??___fladd+3)& (0+255),f,b
 11956  01344A  0100               	movlb	0	; () banked
 11957  01344C  BFAD               	btfsc	(??___fladd+3)& (0+255),7,b
 11958  01344E  D03D               	goto	l1497
 11959  013450  0100               	movlb	0	; () banked
 11960  013452  51AD               	movf	(??___fladd+3)& (0+255),w,b
 11961  013454  E105               	bnz	u10200
 11962  013456  0E1A               	movlw	26
 11963  013458  0100               	movlb	0	; () banked
 11964  01345A  5DAC               	subwf	(??___fladd+2)& (0+255),w,b
 11965  01345C  A0D8               	btfss	status,0,c
 11966  01345E  D035               	goto	l1497
 11967  013460                     u10200:
 11968                           
 11969                           ; BSR set to: 0
 11970  013460  0100               	movlb	0	; () banked
 11971  013462  51A2               	movf	___fladd@b& (0+255),w,b
 11972  013464  0100               	movlb	0	; () banked
 11973  013466  11A3               	iorwf	(___fladd@b+1)& (0+255),w,b
 11974  013468  0100               	movlb	0	; () banked
 11975  01346A  11A4               	iorwf	(___fladd@b+2)& (0+255),w,b
 11976  01346C  0100               	movlb	0	; () banked
 11977  01346E  11A5               	iorwf	(___fladd@b+3)& (0+255),w,b
 11978  013470  B4D8               	btfsc	status,2,c
 11979  013472  D002               	goto	u10210
 11980  013474  0E01               	movlw	1
 11981  013476  D001               	goto	u10220
 11982  013478                     u10210:
 11983  013478  0E00               	movlw	0
 11984  01347A                     u10220:
 11985  01347A  0100               	movlb	0	; () banked
 11986  01347C  6FB5               	movwf	___fladd@grs& (0+255),b
 11987                           
 11988                           ; BSR set to: 0
 11989  01347E  0E00               	movlw	0
 11990  013480  0100               	movlb	0	; () banked
 11991  013482  6FA2               	movwf	___fladd@b& (0+255),b
 11992  013484  0E00               	movlw	0
 11993  013486  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 11994  013488  0E00               	movlw	0
 11995  01348A  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 11996  01348C  0E00               	movlw	0
 11997  01348E  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 11998                           
 11999                           ; BSR set to: 0
 12000  013490  C0B3  F0B4         	movff	___fladd@aexp,___fladd@bexp
 12001  013494  D020               	goto	l1496
 12002  013496                     l1498:
 12003                           
 12004                           ; BSR set to: 0
 12005  013496  0100               	movlb	0	; () banked
 12006  013498  A1B5               	btfss	___fladd@grs& (0+255),0,b
 12007  01349A  D007               	goto	l7754
 12008                           
 12009                           ; BSR set to: 0
 12010  01349C  0100               	movlb	0	; () banked
 12011  01349E  90D8               	bcf	status,0,c
 12012  0134A0  31B5               	rrcf	___fladd@grs& (0+255),w,b
 12013  0134A2  0901               	iorlw	1
 12014  0134A4  0100               	movlb	0	; () banked
 12015  0134A6  6FB5               	movwf	___fladd@grs& (0+255),b
 12016  0134A8  D003               	goto	l7756
 12017  0134AA                     l7754:
 12018                           
 12019                           ; BSR set to: 0
 12020  0134AA  0100               	movlb	0	; () banked
 12021  0134AC  90D8               	bcf	status,0,c
 12022  0134AE  33B5               	rrcf	___fladd@grs& (0+255),f,b
 12023  0134B0                     l7756:
 12024                           
 12025                           ; BSR set to: 0
 12026  0134B0  0100               	movlb	0	; () banked
 12027  0134B2  A1A2               	btfss	___fladd@b& (0+255),0,b
 12028  0134B4  D002               	goto	l7760
 12029                           
 12030                           ; BSR set to: 0
 12031  0134B6  0100               	movlb	0	; () banked
 12032  0134B8  8FB5               	bsf	___fladd@grs& (0+255),7,b
 12033  0134BA                     l7760:
 12034                           
 12035                           ; BSR set to: 0
 12036  0134BA  0100               	movlb	0	; () banked
 12037  0134BC  35A5               	rlcf	(___fladd@b+3)& (0+255),w,b
 12038  0134BE  33A5               	rrcf	(___fladd@b+3)& (0+255),f,b
 12039  0134C0  33A4               	rrcf	(___fladd@b+2)& (0+255),f,b
 12040  0134C2  33A3               	rrcf	(___fladd@b+1)& (0+255),f,b
 12041  0134C4  33A2               	rrcf	___fladd@b& (0+255),f,b
 12042                           
 12043                           ; BSR set to: 0
 12044  0134C6  0100               	movlb	0	; () banked
 12045  0134C8  2BB4               	incf	___fladd@bexp& (0+255),f,b
 12046  0134CA                     l1497:
 12047                           
 12048                           ; BSR set to: 0
 12049  0134CA  0100               	movlb	0	; () banked
 12050  0134CC  51B3               	movf	___fladd@aexp& (0+255),w,b
 12051  0134CE  0100               	movlb	0	; () banked
 12052  0134D0  5DB4               	subwf	___fladd@bexp& (0+255),w,b
 12053  0134D2  A0D8               	btfss	status,0,c
 12054  0134D4  D7E0               	goto	l1498
 12055  0134D6                     l1496:
 12056                           
 12057                           ; BSR set to: 0
 12058  0134D6  0100               	movlb	0	; () banked
 12059  0134D8  BDB2               	btfsc	___fladd@signs& (0+255),6,b
 12060  0134DA  D03F               	goto	l7788
 12061                           
 12062                           ; BSR set to: 0
 12063  0134DC  0100               	movlb	0	; () banked
 12064  0134DE  51B4               	movf	___fladd@bexp& (0+255),w,b
 12065  0134E0  0100               	movlb	0	; () banked
 12066  0134E2  A4D8               	btfss	status,2,c
 12067  0134E4  D00A               	goto	l7770
 12068                           
 12069                           ; BSR set to: 0
 12070  0134E6  0E00               	movlw	0
 12071  0134E8  0100               	movlb	0	; () banked
 12072  0134EA  6FA2               	movwf	?___fladd& (0+255),b
 12073  0134EC  0E00               	movlw	0
 12074  0134EE  6FA3               	movwf	(?___fladd+1)& (0+255),b
 12075  0134F0  0E00               	movlw	0
 12076  0134F2  6FA4               	movwf	(?___fladd+2)& (0+255),b
 12077  0134F4  0E00               	movlw	0
 12078  0134F6  6FA5               	movwf	(?___fladd+3)& (0+255),b
 12079                           
 12080                           ; BSR set to: 0
 12081  0134F8  0012               	return	
 12082  0134FA                     l7770:
 12083                           
 12084                           ; BSR set to: 0
 12085  0134FA  0100               	movlb	0	; () banked
 12086  0134FC  51A6               	movf	___fladd@a& (0+255),w,b
 12087  0134FE  0100               	movlb	0	; () banked
 12088  013500  27A2               	addwf	___fladd@b& (0+255),f,b
 12089  013502  0100               	movlb	0	; () banked
 12090  013504  51A7               	movf	(___fladd@a+1)& (0+255),w,b
 12091  013506  0100               	movlb	0	; () banked
 12092  013508  23A3               	addwfc	(___fladd@b+1)& (0+255),f,b
 12093  01350A  0100               	movlb	0	; () banked
 12094  01350C  51A8               	movf	(___fladd@a+2)& (0+255),w,b
 12095  01350E  0100               	movlb	0	; () banked
 12096  013510  23A4               	addwfc	(___fladd@b+2)& (0+255),f,b
 12097  013512  0100               	movlb	0	; () banked
 12098  013514  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 12099  013516  0100               	movlb	0	; () banked
 12100  013518  23A5               	addwfc	(___fladd@b+3)& (0+255),f,b
 12101                           
 12102                           ; BSR set to: 0
 12103  01351A  0100               	movlb	0	; () banked
 12104  01351C  A1A5               	btfss	(___fladd@b+3)& (0+255),0,b
 12105  01351E  D0CC               	goto	l7824
 12106                           
 12107                           ; BSR set to: 0
 12108  013520  0100               	movlb	0	; () banked
 12109  013522  A1B5               	btfss	___fladd@grs& (0+255),0,b
 12110  013524  D009               	goto	l7778
 12111                           
 12112                           ; BSR set to: 0
 12113  013526  0100               	movlb	0	; () banked
 12114  013528  90D8               	bcf	status,0,c
 12115  01352A  33B5               	rrcf	___fladd@grs& (0+255),f,b
 12116  01352C  0100               	movlb	0	; () banked
 12117  01352E  51B5               	movf	___fladd@grs& (0+255),w,b
 12118  013530  0901               	iorlw	1
 12119  013532  0100               	movlb	0	; () banked
 12120  013534  6FB5               	movwf	___fladd@grs& (0+255),b
 12121  013536  D003               	goto	l7780
 12122  013538                     l7778:
 12123                           
 12124                           ; BSR set to: 0
 12125  013538  0100               	movlb	0	; () banked
 12126  01353A  90D8               	bcf	status,0,c
 12127  01353C  33B5               	rrcf	___fladd@grs& (0+255),f,b
 12128  01353E                     l7780:
 12129                           
 12130                           ; BSR set to: 0
 12131  01353E  0100               	movlb	0	; () banked
 12132  013540  A1A2               	btfss	___fladd@b& (0+255),0,b
 12133  013542  D002               	goto	l7784
 12134                           
 12135                           ; BSR set to: 0
 12136  013544  0100               	movlb	0	; () banked
 12137  013546  8FB5               	bsf	___fladd@grs& (0+255),7,b
 12138  013548                     l7784:
 12139                           
 12140                           ; BSR set to: 0
 12141  013548  0100               	movlb	0	; () banked
 12142  01354A  35A5               	rlcf	(___fladd@b+3)& (0+255),w,b
 12143  01354C  33A5               	rrcf	(___fladd@b+3)& (0+255),f,b
 12144  01354E  33A4               	rrcf	(___fladd@b+2)& (0+255),f,b
 12145  013550  33A3               	rrcf	(___fladd@b+1)& (0+255),f,b
 12146  013552  33A2               	rrcf	___fladd@b& (0+255),f,b
 12147                           
 12148                           ; BSR set to: 0
 12149  013554  0100               	movlb	0	; () banked
 12150  013556  2BB4               	incf	___fladd@bexp& (0+255),f,b
 12151                           
 12152                           ; BSR set to: 0
 12153  013558  D0AF               	goto	l7824
 12154  01355A                     l7788:
 12155                           
 12156                           ; BSR set to: 0
 12157  01355A  0100               	movlb	0	; () banked
 12158  01355C  51A6               	movf	___fladd@a& (0+255),w,b
 12159  01355E  0100               	movlb	0	; () banked
 12160  013560  5DA2               	subwf	___fladd@b& (0+255),w,b
 12161  013562  0100               	movlb	0	; () banked
 12162  013564  51A7               	movf	(___fladd@a+1)& (0+255),w,b
 12163  013566  0100               	movlb	0	; () banked
 12164  013568  59A3               	subwfb	(___fladd@b+1)& (0+255),w,b
 12165  01356A  0100               	movlb	0	; () banked
 12166  01356C  51A8               	movf	(___fladd@a+2)& (0+255),w,b
 12167  01356E  0100               	movlb	0	; () banked
 12168  013570  59A4               	subwfb	(___fladd@b+2)& (0+255),w,b
 12169  013572  0100               	movlb	0	; () banked
 12170  013574  51A5               	movf	(___fladd@b+3)& (0+255),w,b
 12171  013576  0A80               	xorlw	128
 12172  013578  0100               	movlb	0	; () banked
 12173  01357A  6FAA               	movwf	??___fladd& (0+255),b
 12174  01357C  0100               	movlb	0	; () banked
 12175  01357E  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 12176  013580  0A80               	xorlw	128
 12177  013582  0100               	movlb	0	; () banked
 12178  013584  59AA               	subwfb	??___fladd& (0+255),w,b
 12179  013586  B0D8               	btfsc	status,0,c
 12180  013588  D050               	goto	l7798
 12181                           
 12182                           ; BSR set to: 0
 12183  01358A  C0A2  F0AA         	movff	___fladd@b,??___fladd
 12184  01358E  C0A3  F0AB         	movff	___fladd@b+1,??___fladd+1
 12185  013592  C0A4  F0AC         	movff	___fladd@b+2,??___fladd+2
 12186  013596  C0A5  F0AD         	movff	___fladd@b+3,??___fladd+3
 12187  01359A  0100               	movlb	0	; () banked
 12188  01359C  1FAA               	comf	??___fladd& (0+255),f,b
 12189  01359E  1FAB               	comf	(??___fladd+1)& (0+255),f,b
 12190  0135A0  1FAC               	comf	(??___fladd+2)& (0+255),f,b
 12191  0135A2  1FAD               	comf	(??___fladd+3)& (0+255),f,b
 12192  0135A4  2BAA               	incf	??___fladd& (0+255),f,b
 12193  0135A6  0E00               	movlw	0
 12194  0135A8  23AB               	addwfc	(??___fladd+1)& (0+255),f,b
 12195  0135AA  23AC               	addwfc	(??___fladd+2)& (0+255),f,b
 12196  0135AC  23AD               	addwfc	(??___fladd+3)& (0+255),f,b
 12197  0135AE  0100               	movlb	0	; () banked
 12198  0135B0  51A6               	movf	___fladd@a& (0+255),w,b
 12199  0135B2  0100               	movlb	0	; () banked
 12200  0135B4  25AA               	addwf	??___fladd& (0+255),w,b
 12201  0135B6  0100               	movlb	0	; () banked
 12202  0135B8  6FAE               	movwf	(??___fladd+4)& (0+255),b
 12203  0135BA  0100               	movlb	0	; () banked
 12204  0135BC  51A7               	movf	(___fladd@a+1)& (0+255),w,b
 12205  0135BE  0100               	movlb	0	; () banked
 12206  0135C0  21AB               	addwfc	(??___fladd+1)& (0+255),w,b
 12207  0135C2  0100               	movlb	0	; () banked
 12208  0135C4  6FAF               	movwf	(??___fladd+5)& (0+255),b
 12209  0135C6  0100               	movlb	0	; () banked
 12210  0135C8  51A8               	movf	(___fladd@a+2)& (0+255),w,b
 12211  0135CA  0100               	movlb	0	; () banked
 12212  0135CC  21AC               	addwfc	(??___fladd+2)& (0+255),w,b
 12213  0135CE  0100               	movlb	0	; () banked
 12214  0135D0  6FB0               	movwf	(??___fladd+6)& (0+255),b
 12215  0135D2  0100               	movlb	0	; () banked
 12216  0135D4  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 12217  0135D6  0100               	movlb	0	; () banked
 12218  0135D8  21AD               	addwfc	(??___fladd+3)& (0+255),w,b
 12219  0135DA  0100               	movlb	0	; () banked
 12220  0135DC  6FB1               	movwf	(??___fladd+7)& (0+255),b
 12221  0135DE  0EFF               	movlw	255
 12222  0135E0  0100               	movlb	0	; () banked
 12223  0135E2  25AE               	addwf	(??___fladd+4)& (0+255),w,b
 12224  0135E4  0100               	movlb	0	; () banked
 12225  0135E6  6FA2               	movwf	___fladd@b& (0+255),b
 12226  0135E8  0EFF               	movlw	255
 12227  0135EA  0100               	movlb	0	; () banked
 12228  0135EC  21AF               	addwfc	(??___fladd+5)& (0+255),w,b
 12229  0135EE  0100               	movlb	0	; () banked
 12230  0135F0  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 12231  0135F2  0EFF               	movlw	255
 12232  0135F4  0100               	movlb	0	; () banked
 12233  0135F6  21B0               	addwfc	(??___fladd+6)& (0+255),w,b
 12234  0135F8  0100               	movlb	0	; () banked
 12235  0135FA  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 12236  0135FC  0EFF               	movlw	255
 12237  0135FE  0100               	movlb	0	; () banked
 12238  013600  21B1               	addwfc	(??___fladd+7)& (0+255),w,b
 12239  013602  0100               	movlb	0	; () banked
 12240  013604  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 12241  013606  0E80               	movlw	128
 12242  013608  0100               	movlb	0	; () banked
 12243  01360A  1BB2               	xorwf	___fladd@signs& (0+255),f,b
 12244                           
 12245                           ; BSR set to: 0
 12246  01360C  0100               	movlb	0	; () banked
 12247  01360E  6DB5               	negf	___fladd@grs& (0+255),b
 12248                           
 12249                           ; BSR set to: 0
 12250  013610  0100               	movlb	0	; () banked
 12251  013612  51B5               	movf	___fladd@grs& (0+255),w,b
 12252  013614  0100               	movlb	0	; () banked
 12253  013616  A4D8               	btfss	status,2,c
 12254  013618  D018               	goto	l1513
 12255                           
 12256                           ; BSR set to: 0
 12257  01361A  0E01               	movlw	1
 12258  01361C  0100               	movlb	0	; () banked
 12259  01361E  27A2               	addwf	___fladd@b& (0+255),f,b
 12260  013620  0E00               	movlw	0
 12261  013622  23A3               	addwfc	(___fladd@b+1)& (0+255),f,b
 12262  013624  23A4               	addwfc	(___fladd@b+2)& (0+255),f,b
 12263  013626  23A5               	addwfc	(___fladd@b+3)& (0+255),f,b
 12264                           
 12265                           ; BSR set to: 0
 12266  013628  D010               	goto	l1513
 12267  01362A                     l7798:
 12268                           
 12269                           ; BSR set to: 0
 12270  01362A  0100               	movlb	0	; () banked
 12271  01362C  51A6               	movf	___fladd@a& (0+255),w,b
 12272  01362E  0100               	movlb	0	; () banked
 12273  013630  5FA2               	subwf	___fladd@b& (0+255),f,b
 12274  013632  0100               	movlb	0	; () banked
 12275  013634  51A7               	movf	(___fladd@a+1)& (0+255),w,b
 12276  013636  0100               	movlb	0	; () banked
 12277  013638  5BA3               	subwfb	(___fladd@b+1)& (0+255),f,b
 12278  01363A  0100               	movlb	0	; () banked
 12279  01363C  51A8               	movf	(___fladd@a+2)& (0+255),w,b
 12280  01363E  0100               	movlb	0	; () banked
 12281  013640  5BA4               	subwfb	(___fladd@b+2)& (0+255),f,b
 12282  013642  0100               	movlb	0	; () banked
 12283  013644  51A9               	movf	(___fladd@a+3)& (0+255),w,b
 12284  013646  0100               	movlb	0	; () banked
 12285  013648  5BA5               	subwfb	(___fladd@b+3)& (0+255),f,b
 12286  01364A                     l1513:
 12287                           
 12288                           ; BSR set to: 0
 12289  01364A  0100               	movlb	0	; () banked
 12290  01364C  51A2               	movf	___fladd@b& (0+255),w,b
 12291  01364E  0100               	movlb	0	; () banked
 12292  013650  11A3               	iorwf	(___fladd@b+1)& (0+255),w,b
 12293  013652  0100               	movlb	0	; () banked
 12294  013654  11A4               	iorwf	(___fladd@b+2)& (0+255),w,b
 12295  013656  0100               	movlb	0	; () banked
 12296  013658  11A5               	iorwf	(___fladd@b+3)& (0+255),w,b
 12297  01365A  A4D8               	btfss	status,2,c
 12298  01365C  D02A               	goto	l7822
 12299                           
 12300                           ; BSR set to: 0
 12301  01365E  0100               	movlb	0	; () banked
 12302  013660  51B5               	movf	___fladd@grs& (0+255),w,b
 12303  013662  0100               	movlb	0	; () banked
 12304  013664  A4D8               	btfss	status,2,c
 12305  013666  D025               	goto	l7822
 12306                           
 12307                           ; BSR set to: 0
 12308  013668  0E00               	movlw	0
 12309  01366A  0100               	movlb	0	; () banked
 12310  01366C  6FA2               	movwf	?___fladd& (0+255),b
 12311  01366E  0E00               	movlw	0
 12312  013670  6FA3               	movwf	(?___fladd+1)& (0+255),b
 12313  013672  0E00               	movlw	0
 12314  013674  6FA4               	movwf	(?___fladd+2)& (0+255),b
 12315  013676  0E00               	movlw	0
 12316  013678  6FA5               	movwf	(?___fladd+3)& (0+255),b
 12317                           
 12318                           ; BSR set to: 0
 12319  01367A  0012               	return	
 12320  01367C                     l7806:
 12321                           
 12322                           ; BSR set to: 0
 12323  01367C  0100               	movlb	0	; () banked
 12324  01367E  90D8               	bcf	status,0,c
 12325  013680  37A2               	rlcf	___fladd@b& (0+255),f,b
 12326  013682  37A3               	rlcf	(___fladd@b+1)& (0+255),f,b
 12327  013684  37A4               	rlcf	(___fladd@b+2)& (0+255),f,b
 12328  013686  37A5               	rlcf	(___fladd@b+3)& (0+255),f,b
 12329                           
 12330                           ; BSR set to: 0
 12331  013688  0100               	movlb	0	; () banked
 12332  01368A  AFB5               	btfss	___fladd@grs& (0+255),7,b
 12333  01368C  D002               	goto	l7812
 12334                           
 12335                           ; BSR set to: 0
 12336  01368E  0100               	movlb	0	; () banked
 12337  013690  81A2               	bsf	___fladd@b& (0+255),0,b
 12338  013692                     l7812:
 12339                           
 12340                           ; BSR set to: 0
 12341  013692  0100               	movlb	0	; () banked
 12342  013694  A1B5               	btfss	___fladd@grs& (0+255),0,b
 12343  013696  D003               	goto	l7816
 12344                           
 12345                           ; BSR set to: 0
 12346  013698  80D8               	bsf	status,0,c
 12347  01369A  0100               	movlb	0	; () banked
 12348  01369C  D002               	goto	L13
 12349  01369E                     l7816:
 12350                           
 12351                           ; BSR set to: 0
 12352  01369E  0100               	movlb	0	; () banked
 12353  0136A0  90D8               	bcf	status,0,c
 12354  0136A2                     L13:
 12355  0136A2  37B5               	rlcf	___fladd@grs& (0+255),f,b
 12356                           
 12357                           ; BSR set to: 0
 12358                           
 12359                           ; BSR set to: 0
 12360  0136A4  0100               	movlb	0	; () banked
 12361  0136A6  51B4               	movf	___fladd@bexp& (0+255),w,b
 12362  0136A8  0100               	movlb	0	; () banked
 12363  0136AA  B4D8               	btfsc	status,2,c
 12364  0136AC  D002               	goto	l7822
 12365                           
 12366                           ; BSR set to: 0
 12367  0136AE  0100               	movlb	0	; () banked
 12368  0136B0  07B4               	decf	___fladd@bexp& (0+255),f,b
 12369  0136B2                     l7822:
 12370                           
 12371                           ; BSR set to: 0
 12372  0136B2  0100               	movlb	0	; () banked
 12373  0136B4  AFA4               	btfss	(___fladd@b+2)& (0+255),7,b
 12374  0136B6  D7E2               	goto	l7806
 12375  0136B8                     l7824:
 12376                           
 12377                           ; BSR set to: 0
 12378  0136B8  0E00               	movlw	0
 12379  0136BA  0100               	movlb	0	; () banked
 12380  0136BC  6FB3               	movwf	___fladd@aexp& (0+255),b
 12381                           
 12382                           ; BSR set to: 0
 12383  0136BE  0100               	movlb	0	; () banked
 12384  0136C0  AFB5               	btfss	___fladd@grs& (0+255),7,b
 12385  0136C2  D00D               	goto	l1522
 12386                           
 12387                           ; BSR set to: 0
 12388  0136C4  C0B5  F0AA         	movff	___fladd@grs,??___fladd
 12389  0136C8  0E7F               	movlw	127
 12390  0136CA  0100               	movlb	0	; () banked
 12391  0136CC  17AA               	andwf	??___fladd& (0+255),f,b
 12392  0136CE  A4D8               	btfss	status,2,c
 12393  0136D0  D003               	goto	l7832
 12394                           
 12395                           ; BSR set to: 0
 12396                           
 12397                           ; BSR set to: 0
 12398  0136D2  0100               	movlb	0	; () banked
 12399  0136D4  A1A2               	btfss	___fladd@b& (0+255),0,b
 12400  0136D6  D003               	goto	l1522
 12401  0136D8                     l7832:
 12402                           
 12403                           ; BSR set to: 0
 12404  0136D8  0E01               	movlw	1
 12405  0136DA  0100               	movlb	0	; () banked
 12406  0136DC  6FB3               	movwf	___fladd@aexp& (0+255),b
 12407  0136DE                     l1522:
 12408                           
 12409                           ; BSR set to: 0
 12410  0136DE  0100               	movlb	0	; () banked
 12411  0136E0  51B3               	movf	___fladd@aexp& (0+255),w,b
 12412  0136E2  0100               	movlb	0	; () banked
 12413  0136E4  B4D8               	btfsc	status,2,c
 12414  0136E6  D026               	goto	l7842
 12415                           
 12416                           ; BSR set to: 0
 12417  0136E8  0E01               	movlw	1
 12418  0136EA  0100               	movlb	0	; () banked
 12419  0136EC  27A2               	addwf	___fladd@b& (0+255),f,b
 12420  0136EE  0E00               	movlw	0
 12421  0136F0  23A3               	addwfc	(___fladd@b+1)& (0+255),f,b
 12422  0136F2  23A4               	addwfc	(___fladd@b+2)& (0+255),f,b
 12423  0136F4  23A5               	addwfc	(___fladd@b+3)& (0+255),f,b
 12424                           
 12425                           ; BSR set to: 0
 12426  0136F6  0100               	movlb	0	; () banked
 12427  0136F8  A1A5               	btfss	(___fladd@b+3)& (0+255),0,b
 12428  0136FA  D01C               	goto	l7842
 12429                           
 12430                           ; BSR set to: 0
 12431  0136FC  C0A2  F0AA         	movff	___fladd@b,??___fladd
 12432  013700  C0A3  F0AB         	movff	___fladd@b+1,??___fladd+1
 12433  013704  C0A4  F0AC         	movff	___fladd@b+2,??___fladd+2
 12434  013708  C0A5  F0AD         	movff	___fladd@b+3,??___fladd+3
 12435  01370C  0100               	movlb	0	; () banked
 12436  01370E  35AD               	rlcf	(??___fladd+3)& (0+255),w,b
 12437  013710  33AD               	rrcf	(??___fladd+3)& (0+255),f,b
 12438  013712  33AC               	rrcf	(??___fladd+2)& (0+255),f,b
 12439  013714  33AB               	rrcf	(??___fladd+1)& (0+255),f,b
 12440  013716  33AA               	rrcf	??___fladd& (0+255),f,b
 12441  013718  C0AA  F0A2         	movff	??___fladd,___fladd@b
 12442  01371C  C0AB  F0A3         	movff	??___fladd+1,___fladd@b+1
 12443  013720  C0AC  F0A4         	movff	??___fladd+2,___fladd@b+2
 12444  013724  C0AD  F0A5         	movff	??___fladd+3,___fladd@b+3
 12445  013728  0100               	movlb	0	; () banked
 12446  01372A  29B4               	incf	___fladd@bexp& (0+255),w,b
 12447  01372C  B4D8               	btfsc	status,2,c
 12448  01372E  D002               	goto	l7842
 12449                           
 12450                           ; BSR set to: 0
 12451  013730  0100               	movlb	0	; () banked
 12452  013732  2BB4               	incf	___fladd@bexp& (0+255),f,b
 12453  013734                     l7842:
 12454                           
 12455                           ; BSR set to: 0
 12456  013734  0100               	movlb	0	; () banked
 12457  013736  29B4               	incf	___fladd@bexp& (0+255),w,b
 12458  013738  B4D8               	btfsc	status,2,c
 12459  01373A  D005               	goto	l7846
 12460                           
 12461                           ; BSR set to: 0
 12462  01373C  0100               	movlb	0	; () banked
 12463  01373E  51B4               	movf	___fladd@bexp& (0+255),w,b
 12464  013740  0100               	movlb	0	; () banked
 12465  013742  A4D8               	btfss	status,2,c
 12466  013744  D011               	goto	l7850
 12467  013746                     l7846:
 12468                           
 12469                           ; BSR set to: 0
 12470  013746  0E00               	movlw	0
 12471  013748  0100               	movlb	0	; () banked
 12472  01374A  6FA2               	movwf	___fladd@b& (0+255),b
 12473  01374C  0E00               	movlw	0
 12474  01374E  6FA3               	movwf	(___fladd@b+1)& (0+255),b
 12475  013750  0E00               	movlw	0
 12476  013752  6FA4               	movwf	(___fladd@b+2)& (0+255),b
 12477  013754  0E00               	movlw	0
 12478  013756  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 12479  013758  0100               	movlb	0	; () banked
 12480  01375A  51B4               	movf	___fladd@bexp& (0+255),w,b
 12481  01375C  0100               	movlb	0	; () banked
 12482  01375E  A4D8               	btfss	status,2,c
 12483  013760  D003               	goto	l7850
 12484                           
 12485                           ; BSR set to: 0
 12486  013762  0E00               	movlw	0
 12487  013764  0100               	movlb	0	; () banked
 12488  013766  6FB2               	movwf	___fladd@signs& (0+255),b
 12489  013768                     l7850:
 12490                           
 12491                           ; BSR set to: 0
 12492  013768  0100               	movlb	0	; () banked
 12493  01376A  A1B4               	btfss	___fladd@bexp& (0+255),0,b
 12494  01376C  D003               	goto	l7854
 12495                           
 12496                           ; BSR set to: 0
 12497  01376E  0100               	movlb	0	; () banked
 12498  013770  8FA4               	bsf	(___fladd@b+2)& (0+255),7,b
 12499  013772  D002               	goto	l7856
 12500  013774                     l7854:
 12501                           
 12502                           ; BSR set to: 0
 12503  013774  0100               	movlb	0	; () banked
 12504  013776  9FA4               	bcf	(___fladd@b+2)& (0+255),7,b
 12505  013778                     l7856:
 12506                           
 12507                           ; BSR set to: 0
 12508  013778  0100               	movlb	0	; () banked
 12509  01377A  90D8               	bcf	status,0,c
 12510  01377C  31B4               	rrcf	___fladd@bexp& (0+255),w,b
 12511  01377E  0100               	movlb	0	; () banked
 12512  013780  6FA5               	movwf	(___fladd@b+3)& (0+255),b
 12513                           
 12514                           ; BSR set to: 0
 12515  013782  0100               	movlb	0	; () banked
 12516  013784  AFB2               	btfss	___fladd@signs& (0+255),7,b
 12517  013786  D002               	goto	l7862
 12518                           
 12519                           ; BSR set to: 0
 12520  013788  0100               	movlb	0	; () banked
 12521  01378A  8FA5               	bsf	(___fladd@b+3)& (0+255),7,b
 12522  01378C                     l7862:
 12523                           
 12524                           ; BSR set to: 0
 12525  01378C  C0A2  F0A2         	movff	___fladd@b,?___fladd
 12526  013790  C0A3  F0A3         	movff	___fladd@b+1,?___fladd+1
 12527  013794  C0A4  F0A4         	movff	___fladd@b+2,?___fladd+2
 12528  013798  C0A5  F0A5         	movff	___fladd@b+3,?___fladd+3
 12529  01379C  0012               	return	
 12530  01379E                     __end_of___fladd:
 12531                           	opt stack 0
 12532                           tblptru	equ	0xFF8
 12533                           tblptrh	equ	0xFF7
 12534                           tblptrl	equ	0xFF6
 12535                           tablat	equ	0xFF5
 12536                           prodh	equ	0xFF4
 12537                           prodl	equ	0xFF3
 12538                           intcon	equ	0xFF2
 12539                           postinc0	equ	0xFEE
 12540                           wreg	equ	0xFE8
 12541                           indf2	equ	0xFDF
 12542                           postinc2	equ	0xFDE
 12543                           fsr2h	equ	0xFDA
 12544                           fsr2l	equ	0xFD9
 12545                           status	equ	0xFD8
 12546                           
 12547 ;; *************** function ___flneg *****************
 12548 ;; Defined at:
 12549 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
 12550 ;; Parameters:    Size  Location     Type
 12551 ;;  f1              4   53[BANK0 ] unsigned char 
 12552 ;; Auto vars:     Size  Location     Type
 12553 ;;		None
 12554 ;; Return value:  Size  Location     Type
 12555 ;;                  4   53[BANK0 ] unsigned char 
 12556 ;; Registers used:
 12557 ;;		wreg, status,2, status,0
 12558 ;; Tracked objects:
 12559 ;;		On entry : 0/0
 12560 ;;		On exit  : 0/0
 12561 ;;		Unchanged: 0/0
 12562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12563 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12566 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12567 ;;Total ram usage:        4 bytes
 12568 ;; Hardware stack levels used:    1
 12569 ;; Hardware stack levels required when called:    3
 12570 ;; This function calls:
 12571 ;;		Nothing
 12572 ;; This function is called by:
 12573 ;;		_main
 12574 ;;		_sprintf
 12575 ;; This function uses a non-reentrant model
 12576 ;;
 12577                           
 12578                           	psect	text23
 12579  016028                     __ptext23:
 12580                           	opt stack 0
 12581  016028                     ___flneg:
 12582                           	opt stack 27
 12583                           
 12584                           ; BSR set to: 0
 12585                           ;incstack = 0
 12586  016028  0100               	movlb	0	; () banked
 12587  01602A  5195               	movf	___flneg@f1& (0+255),w,b
 12588  01602C  0100               	movlb	0	; () banked
 12589  01602E  1196               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12590  016030  0100               	movlb	0	; () banked
 12591  016032  1197               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12592  016034  0100               	movlb	0	; () banked
 12593  016036  1198               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12594  016038  B4D8               	btfsc	status,2,c
 12595  01603A  D009               	goto	l8328
 12596                           
 12597                           ; BSR set to: 0
 12598  01603C  0E00               	movlw	0
 12599  01603E  0100               	movlb	0	; () banked
 12600  016040  1B95               	xorwf	___flneg@f1& (0+255),f,b
 12601  016042  0E00               	movlw	0
 12602  016044  1B96               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12603  016046  0E00               	movlw	0
 12604  016048  1B97               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12605  01604A  0E80               	movlw	128
 12606  01604C  1B98               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12607  01604E                     l8328:
 12608                           
 12609                           ; BSR set to: 0
 12610  01604E  C095  F095         	movff	___flneg@f1,?___flneg
 12611  016052  C096  F096         	movff	___flneg@f1+1,?___flneg+1
 12612  016056  C097  F097         	movff	___flneg@f1+2,?___flneg+2
 12613  01605A  C098  F098         	movff	___flneg@f1+3,?___flneg+3
 12614  01605E  0012               	return	
 12615  016060                     __end_of___flneg:
 12616                           	opt stack 0
 12617                           tblptru	equ	0xFF8
 12618                           tblptrh	equ	0xFF7
 12619                           tblptrl	equ	0xFF6
 12620                           tablat	equ	0xFF5
 12621                           prodh	equ	0xFF4
 12622                           prodl	equ	0xFF3
 12623                           intcon	equ	0xFF2
 12624                           postinc0	equ	0xFEE
 12625                           wreg	equ	0xFE8
 12626                           indf2	equ	0xFDF
 12627                           postinc2	equ	0xFDE
 12628                           fsr2h	equ	0xFDA
 12629                           fsr2l	equ	0xFD9
 12630                           status	equ	0xFD8
 12631                           
 12632 ;; *************** function ___flge *****************
 12633 ;; Defined at:
 12634 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
 12635 ;; Parameters:    Size  Location     Type
 12636 ;;  ff1             4   14[BANK0 ] unsigned char 
 12637 ;;  ff2             4   18[BANK0 ] unsigned char 
 12638 ;; Auto vars:     Size  Location     Type
 12639 ;;		None
 12640 ;; Return value:  Size  Location     Type
 12641 ;;		None               void
 12642 ;; Registers used:
 12643 ;;		wreg, status,2, status,0
 12644 ;; Tracked objects:
 12645 ;;		On entry : 0/0
 12646 ;;		On exit  : 0/0
 12647 ;;		Unchanged: 0/0
 12648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12649 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12651 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12652 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12653 ;;Total ram usage:       12 bytes
 12654 ;; Hardware stack levels used:    1
 12655 ;; Hardware stack levels required when called:    3
 12656 ;; This function calls:
 12657 ;;		Nothing
 12658 ;; This function is called by:
 12659 ;;		_sprintf
 12660 ;; This function uses a non-reentrant model
 12661 ;;
 12662                           
 12663                           	psect	text24
 12664  0150D2                     __ptext24:
 12665                           	opt stack 0
 12666  0150D2                     ___flge:
 12667                           	opt stack 25
 12668                           
 12669                           ; BSR set to: 0
 12670                           ;incstack = 0
 12671  0150D2  0E00               	movlw	0
 12672  0150D4  0100               	movlb	0	; () banked
 12673  0150D6  156E               	andwf	___flge@ff1& (0+255),w,b
 12674  0150D8  0100               	movlb	0	; () banked
 12675  0150DA  6F76               	movwf	??___flge& (0+255),b
 12676  0150DC  0E00               	movlw	0
 12677  0150DE  0100               	movlb	0	; () banked
 12678  0150E0  156F               	andwf	(___flge@ff1+1)& (0+255),w,b
 12679  0150E2  0100               	movlb	0	; () banked
 12680  0150E4  6F77               	movwf	(??___flge+1)& (0+255),b
 12681  0150E6  0E80               	movlw	128
 12682  0150E8  0100               	movlb	0	; () banked
 12683  0150EA  1570               	andwf	(___flge@ff1+2)& (0+255),w,b
 12684  0150EC  0100               	movlb	0	; () banked
 12685  0150EE  6F78               	movwf	(??___flge+2)& (0+255),b
 12686  0150F0  0E7F               	movlw	127
 12687  0150F2  0100               	movlb	0	; () banked
 12688  0150F4  1571               	andwf	(___flge@ff1+3)& (0+255),w,b
 12689  0150F6  0100               	movlb	0	; () banked
 12690  0150F8  6F79               	movwf	(??___flge+3)& (0+255),b
 12691  0150FA  0100               	movlb	0	; () banked
 12692  0150FC  5176               	movf	??___flge& (0+255),w,b
 12693  0150FE  0100               	movlb	0	; () banked
 12694  015100  1177               	iorwf	(??___flge+1)& (0+255),w,b
 12695  015102  0100               	movlb	0	; () banked
 12696  015104  1178               	iorwf	(??___flge+2)& (0+255),w,b
 12697  015106  0100               	movlb	0	; () banked
 12698  015108  1179               	iorwf	(??___flge+3)& (0+255),w,b
 12699  01510A  A4D8               	btfss	status,2,c
 12700  01510C  D009               	goto	l8306
 12701                           
 12702                           ; BSR set to: 0
 12703  01510E  0E00               	movlw	0
 12704  015110  0100               	movlb	0	; () banked
 12705  015112  6F6E               	movwf	___flge@ff1& (0+255),b
 12706  015114  0E00               	movlw	0
 12707  015116  6F6F               	movwf	(___flge@ff1+1)& (0+255),b
 12708  015118  0E00               	movlw	0
 12709  01511A  6F70               	movwf	(___flge@ff1+2)& (0+255),b
 12710  01511C  0E00               	movlw	0
 12711  01511E  6F71               	movwf	(___flge@ff1+3)& (0+255),b
 12712  015120                     l8306:
 12713                           
 12714                           ; BSR set to: 0
 12715  015120  0E00               	movlw	0
 12716  015122  0100               	movlb	0	; () banked
 12717  015124  1572               	andwf	___flge@ff2& (0+255),w,b
 12718  015126  0100               	movlb	0	; () banked
 12719  015128  6F76               	movwf	??___flge& (0+255),b
 12720  01512A  0E00               	movlw	0
 12721  01512C  0100               	movlb	0	; () banked
 12722  01512E  1573               	andwf	(___flge@ff2+1)& (0+255),w,b
 12723  015130  0100               	movlb	0	; () banked
 12724  015132  6F77               	movwf	(??___flge+1)& (0+255),b
 12725  015134  0E80               	movlw	128
 12726  015136  0100               	movlb	0	; () banked
 12727  015138  1574               	andwf	(___flge@ff2+2)& (0+255),w,b
 12728  01513A  0100               	movlb	0	; () banked
 12729  01513C  6F78               	movwf	(??___flge+2)& (0+255),b
 12730  01513E  0E7F               	movlw	127
 12731  015140  0100               	movlb	0	; () banked
 12732  015142  1575               	andwf	(___flge@ff2+3)& (0+255),w,b
 12733  015144  0100               	movlb	0	; () banked
 12734  015146  6F79               	movwf	(??___flge+3)& (0+255),b
 12735  015148  0100               	movlb	0	; () banked
 12736  01514A  5176               	movf	??___flge& (0+255),w,b
 12737  01514C  0100               	movlb	0	; () banked
 12738  01514E  1177               	iorwf	(??___flge+1)& (0+255),w,b
 12739  015150  0100               	movlb	0	; () banked
 12740  015152  1178               	iorwf	(??___flge+2)& (0+255),w,b
 12741  015154  0100               	movlb	0	; () banked
 12742  015156  1179               	iorwf	(??___flge+3)& (0+255),w,b
 12743  015158  A4D8               	btfss	status,2,c
 12744  01515A  D009               	goto	l8310
 12745                           
 12746                           ; BSR set to: 0
 12747  01515C  0E00               	movlw	0
 12748  01515E  0100               	movlb	0	; () banked
 12749  015160  6F72               	movwf	___flge@ff2& (0+255),b
 12750  015162  0E00               	movlw	0
 12751  015164  6F73               	movwf	(___flge@ff2+1)& (0+255),b
 12752  015166  0E00               	movlw	0
 12753  015168  6F74               	movwf	(___flge@ff2+2)& (0+255),b
 12754  01516A  0E00               	movlw	0
 12755  01516C  6F75               	movwf	(___flge@ff2+3)& (0+255),b
 12756  01516E                     l8310:
 12757                           
 12758                           ; BSR set to: 0
 12759  01516E  0100               	movlb	0	; () banked
 12760  015170  AF71               	btfss	(___flge@ff1+3)& (0+255),7,b
 12761  015172  D026               	goto	l8314
 12762                           
 12763                           ; BSR set to: 0
 12764  015174  C06E  F076         	movff	___flge@ff1,??___flge
 12765  015178  C06F  F077         	movff	___flge@ff1+1,??___flge+1
 12766  01517C  C070  F078         	movff	___flge@ff1+2,??___flge+2
 12767  015180  C071  F079         	movff	___flge@ff1+3,??___flge+3
 12768  015184  0100               	movlb	0	; () banked
 12769  015186  1F76               	comf	??___flge& (0+255),f,b
 12770  015188  1F77               	comf	(??___flge+1)& (0+255),f,b
 12771  01518A  1F78               	comf	(??___flge+2)& (0+255),f,b
 12772  01518C  1F79               	comf	(??___flge+3)& (0+255),f,b
 12773  01518E  2B76               	incf	??___flge& (0+255),f,b
 12774  015190  0E00               	movlw	0
 12775  015192  2377               	addwfc	(??___flge+1)& (0+255),f,b
 12776  015194  2378               	addwfc	(??___flge+2)& (0+255),f,b
 12777  015196  2379               	addwfc	(??___flge+3)& (0+255),f,b
 12778  015198  0E00               	movlw	0
 12779  01519A  0100               	movlb	0	; () banked
 12780  01519C  2576               	addwf	??___flge& (0+255),w,b
 12781  01519E  0100               	movlb	0	; () banked
 12782  0151A0  6F6E               	movwf	___flge@ff1& (0+255),b
 12783  0151A2  0E00               	movlw	0
 12784  0151A4  0100               	movlb	0	; () banked
 12785  0151A6  2177               	addwfc	(??___flge+1)& (0+255),w,b
 12786  0151A8  0100               	movlb	0	; () banked
 12787  0151AA  6F6F               	movwf	(___flge@ff1+1)& (0+255),b
 12788  0151AC  0E00               	movlw	0
 12789  0151AE  0100               	movlb	0	; () banked
 12790  0151B0  2178               	addwfc	(??___flge+2)& (0+255),w,b
 12791  0151B2  0100               	movlb	0	; () banked
 12792  0151B4  6F70               	movwf	(___flge@ff1+2)& (0+255),b
 12793  0151B6  0E80               	movlw	128
 12794  0151B8  0100               	movlb	0	; () banked
 12795  0151BA  2179               	addwfc	(??___flge+3)& (0+255),w,b
 12796  0151BC  0100               	movlb	0	; () banked
 12797  0151BE  6F71               	movwf	(___flge@ff1+3)& (0+255),b
 12798  0151C0                     l8314:
 12799                           
 12800                           ; BSR set to: 0
 12801  0151C0  0100               	movlb	0	; () banked
 12802  0151C2  AF75               	btfss	(___flge@ff2+3)& (0+255),7,b
 12803  0151C4  D026               	goto	l1219
 12804                           
 12805                           ; BSR set to: 0
 12806  0151C6  C072  F076         	movff	___flge@ff2,??___flge
 12807  0151CA  C073  F077         	movff	___flge@ff2+1,??___flge+1
 12808  0151CE  C074  F078         	movff	___flge@ff2+2,??___flge+2
 12809  0151D2  C075  F079         	movff	___flge@ff2+3,??___flge+3
 12810  0151D6  0100               	movlb	0	; () banked
 12811  0151D8  1F76               	comf	??___flge& (0+255),f,b
 12812  0151DA  1F77               	comf	(??___flge+1)& (0+255),f,b
 12813  0151DC  1F78               	comf	(??___flge+2)& (0+255),f,b
 12814  0151DE  1F79               	comf	(??___flge+3)& (0+255),f,b
 12815  0151E0  2B76               	incf	??___flge& (0+255),f,b
 12816  0151E2  0E00               	movlw	0
 12817  0151E4  2377               	addwfc	(??___flge+1)& (0+255),f,b
 12818  0151E6  2378               	addwfc	(??___flge+2)& (0+255),f,b
 12819  0151E8  2379               	addwfc	(??___flge+3)& (0+255),f,b
 12820  0151EA  0E00               	movlw	0
 12821  0151EC  0100               	movlb	0	; () banked
 12822  0151EE  2576               	addwf	??___flge& (0+255),w,b
 12823  0151F0  0100               	movlb	0	; () banked
 12824  0151F2  6F72               	movwf	___flge@ff2& (0+255),b
 12825  0151F4  0E00               	movlw	0
 12826  0151F6  0100               	movlb	0	; () banked
 12827  0151F8  2177               	addwfc	(??___flge+1)& (0+255),w,b
 12828  0151FA  0100               	movlb	0	; () banked
 12829  0151FC  6F73               	movwf	(___flge@ff2+1)& (0+255),b
 12830  0151FE  0E00               	movlw	0
 12831  015200  0100               	movlb	0	; () banked
 12832  015202  2178               	addwfc	(??___flge+2)& (0+255),w,b
 12833  015204  0100               	movlb	0	; () banked
 12834  015206  6F74               	movwf	(___flge@ff2+2)& (0+255),b
 12835  015208  0E80               	movlw	128
 12836  01520A  0100               	movlb	0	; () banked
 12837  01520C  2179               	addwfc	(??___flge+3)& (0+255),w,b
 12838  01520E  0100               	movlb	0	; () banked
 12839  015210  6F75               	movwf	(___flge@ff2+3)& (0+255),b
 12840  015212                     l1219:
 12841                           
 12842                           ; BSR set to: 0
 12843  015212  0E00               	movlw	0
 12844  015214  0100               	movlb	0	; () banked
 12845  015216  1B6E               	xorwf	___flge@ff1& (0+255),f,b
 12846  015218  0E00               	movlw	0
 12847  01521A  1B6F               	xorwf	(___flge@ff1+1)& (0+255),f,b
 12848  01521C  0E00               	movlw	0
 12849  01521E  1B70               	xorwf	(___flge@ff1+2)& (0+255),f,b
 12850  015220  0E80               	movlw	128
 12851  015222  1B71               	xorwf	(___flge@ff1+3)& (0+255),f,b
 12852  015224  0E00               	movlw	0
 12853  015226  0100               	movlb	0	; () banked
 12854  015228  1B72               	xorwf	___flge@ff2& (0+255),f,b
 12855  01522A  0E00               	movlw	0
 12856  01522C  1B73               	xorwf	(___flge@ff2+1)& (0+255),f,b
 12857  01522E  0E00               	movlw	0
 12858  015230  1B74               	xorwf	(___flge@ff2+2)& (0+255),f,b
 12859  015232  0E80               	movlw	128
 12860  015234  1B75               	xorwf	(___flge@ff2+3)& (0+255),f,b
 12861  015236  0100               	movlb	0	; () banked
 12862  015238  5172               	movf	___flge@ff2& (0+255),w,b
 12863  01523A  0100               	movlb	0	; () banked
 12864  01523C  5D6E               	subwf	___flge@ff1& (0+255),w,b
 12865  01523E  0100               	movlb	0	; () banked
 12866  015240  5173               	movf	(___flge@ff2+1)& (0+255),w,b
 12867  015242  0100               	movlb	0	; () banked
 12868  015244  596F               	subwfb	(___flge@ff1+1)& (0+255),w,b
 12869  015246  0100               	movlb	0	; () banked
 12870  015248  5174               	movf	(___flge@ff2+2)& (0+255),w,b
 12871  01524A  0100               	movlb	0	; () banked
 12872  01524C  5970               	subwfb	(___flge@ff1+2)& (0+255),w,b
 12873  01524E  0100               	movlb	0	; () banked
 12874  015250  5175               	movf	(___flge@ff2+3)& (0+255),w,b
 12875  015252  0100               	movlb	0	; () banked
 12876  015254  5971               	subwfb	(___flge@ff1+3)& (0+255),w,b
 12877  015256  B0D8               	btfsc	status,0,c
 12878  015258  D002               	goto	l8320
 12879                           
 12880                           ; BSR set to: 0
 12881  01525A  90D8               	bcf	status,0,c
 12882  01525C  0012               	return	
 12883  01525E                     l8320:
 12884                           
 12885                           ; BSR set to: 0
 12886  01525E  80D8               	bsf	status,0,c
 12887                           
 12888                           ; BSR set to: 0
 12889  015260  0012               	return	
 12890  015262                     __end_of___flge:
 12891                           	opt stack 0
 12892                           tblptru	equ	0xFF8
 12893                           tblptrh	equ	0xFF7
 12894                           tblptrl	equ	0xFF6
 12895                           tablat	equ	0xFF5
 12896                           prodh	equ	0xFF4
 12897                           prodl	equ	0xFF3
 12898                           intcon	equ	0xFF2
 12899                           postinc0	equ	0xFEE
 12900                           wreg	equ	0xFE8
 12901                           indf2	equ	0xFDF
 12902                           postinc2	equ	0xFDE
 12903                           fsr2h	equ	0xFDA
 12904                           fsr2l	equ	0xFD9
 12905                           status	equ	0xFD8
 12906                           
 12907 ;; *************** function ___fldiv *****************
 12908 ;; Defined at:
 12909 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 12910 ;; Parameters:    Size  Location     Type
 12911 ;;  b               4   28[BANK0 ] unsigned char 
 12912 ;;  a               4   32[BANK0 ] unsigned char 
 12913 ;; Auto vars:     Size  Location     Type
 12914 ;;  grs             4   47[BANK0 ] unsigned long 
 12915 ;;  rem             4   41[BANK0 ] unsigned long 
 12916 ;;  new_exp         2   45[BANK0 ] int 
 12917 ;;  aexp            1   52[BANK0 ] unsigned char 
 12918 ;;  bexp            1   51[BANK0 ] unsigned char 
 12919 ;;  sign            1   40[BANK0 ] unsigned char 
 12920 ;; Return value:  Size  Location     Type
 12921 ;;                  4   28[BANK0 ] unsigned char 
 12922 ;; Registers used:
 12923 ;;		wreg, status,2, status,0
 12924 ;; Tracked objects:
 12925 ;;		On entry : 0/0
 12926 ;;		On exit  : 0/0
 12927 ;;		Unchanged: 0/0
 12928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12929 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12930 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12931 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12932 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12933 ;;Total ram usage:       25 bytes
 12934 ;; Hardware stack levels used:    1
 12935 ;; Hardware stack levels required when called:    3
 12936 ;; This function calls:
 12937 ;;		Nothing
 12938 ;; This function is called by:
 12939 ;;		_LCD_Handler
 12940 ;; This function uses a non-reentrant model
 12941 ;;
 12942                           
 12943                           	psect	text25
 12944  013C44                     __ptext25:
 12945                           	opt stack 0
 12946  013C44                     ___fldiv:
 12947                           	opt stack 26
 12948                           
 12949                           ; BSR set to: 0
 12950                           ;incstack = 0
 12951  013C44  0100               	movlb	0	; () banked
 12952  013C46  517F               	movf	(___fldiv@b+3)& (0+255),w,b
 12953  013C48  0B80               	andlw	128
 12954  013C4A  0100               	movlb	0	; () banked
 12955  013C4C  6F88               	movwf	___fldiv@sign& (0+255),b
 12956  013C4E  0100               	movlb	0	; () banked
 12957  013C50  517F               	movf	(___fldiv@b+3)& (0+255),w,b
 12958  013C52  257F               	addwf	(___fldiv@b+3)& (0+255),w,b
 12959  013C54  0100               	movlb	0	; () banked
 12960  013C56  6F93               	movwf	___fldiv@bexp& (0+255),b
 12961                           
 12962                           ; BSR set to: 0
 12963  013C58  0100               	movlb	0	; () banked
 12964  013C5A  AF7E               	btfss	(___fldiv@b+2)& (0+255),7,b
 12965  013C5C  D002               	goto	l6590
 12966                           
 12967                           ; BSR set to: 0
 12968  013C5E  0100               	movlb	0	; () banked
 12969  013C60  8193               	bsf	___fldiv@bexp& (0+255),0,b
 12970  013C62                     l6590:
 12971                           
 12972                           ; BSR set to: 0
 12973  013C62  0100               	movlb	0	; () banked
 12974  013C64  5193               	movf	___fldiv@bexp& (0+255),w,b
 12975  013C66  0100               	movlb	0	; () banked
 12976  013C68  B4D8               	btfsc	status,2,c
 12977  013C6A  D012               	goto	l6600
 12978                           
 12979                           ; BSR set to: 0
 12980  013C6C  0100               	movlb	0	; () banked
 12981  013C6E  2993               	incf	___fldiv@bexp& (0+255),w,b
 12982  013C70  A4D8               	btfss	status,2,c
 12983  013C72  D009               	goto	l6596
 12984                           
 12985                           ; BSR set to: 0
 12986  013C74  0E00               	movlw	0
 12987  013C76  0100               	movlb	0	; () banked
 12988  013C78  6F7C               	movwf	___fldiv@b& (0+255),b
 12989  013C7A  0E00               	movlw	0
 12990  013C7C  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 12991  013C7E  0E00               	movlw	0
 12992  013C80  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 12993  013C82  0E00               	movlw	0
 12994  013C84  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 12995  013C86                     l6596:
 12996                           
 12997                           ; BSR set to: 0
 12998  013C86  0100               	movlb	0	; () banked
 12999  013C88  8F7E               	bsf	(___fldiv@b+2)& (0+255),7,b
 13000                           
 13001                           ; BSR set to: 0
 13002  013C8A  0E00               	movlw	0
 13003  013C8C  0100               	movlb	0	; () banked
 13004  013C8E  D008               	goto	L14
 13005  013C90                     l6600:
 13006                           
 13007                           ; BSR set to: 0
 13008  013C90  0E00               	movlw	0
 13009  013C92  0100               	movlb	0	; () banked
 13010  013C94  6F7C               	movwf	___fldiv@b& (0+255),b
 13011  013C96  0E00               	movlw	0
 13012  013C98  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 13013  013C9A  0E00               	movlw	0
 13014  013C9C  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 13015  013C9E  0E00               	movlw	0
 13016  013CA0                     L14:
 13017  013CA0  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 13018                           
 13019                           ; BSR set to: 0
 13020                           
 13021                           ; BSR set to: 0
 13022  013CA2  0100               	movlb	0	; () banked
 13023  013CA4  5183               	movf	(___fldiv@a+3)& (0+255),w,b
 13024  013CA6  0B80               	andlw	128
 13025  013CA8  0100               	movlb	0	; () banked
 13026  013CAA  1B88               	xorwf	___fldiv@sign& (0+255),f,b
 13027                           
 13028                           ; BSR set to: 0
 13029  013CAC  0100               	movlb	0	; () banked
 13030  013CAE  5183               	movf	(___fldiv@a+3)& (0+255),w,b
 13031  013CB0  2583               	addwf	(___fldiv@a+3)& (0+255),w,b
 13032  013CB2  0100               	movlb	0	; () banked
 13033  013CB4  6F94               	movwf	___fldiv@aexp& (0+255),b
 13034                           
 13035                           ; BSR set to: 0
 13036  013CB6  0100               	movlb	0	; () banked
 13037  013CB8  AF82               	btfss	(___fldiv@a+2)& (0+255),7,b
 13038  013CBA  D002               	goto	l6610
 13039                           
 13040                           ; BSR set to: 0
 13041  013CBC  0100               	movlb	0	; () banked
 13042  013CBE  8194               	bsf	___fldiv@aexp& (0+255),0,b
 13043  013CC0                     l6610:
 13044                           
 13045                           ; BSR set to: 0
 13046  013CC0  0100               	movlb	0	; () banked
 13047  013CC2  5194               	movf	___fldiv@aexp& (0+255),w,b
 13048  013CC4  0100               	movlb	0	; () banked
 13049  013CC6  B4D8               	btfsc	status,2,c
 13050  013CC8  D012               	goto	l6620
 13051                           
 13052                           ; BSR set to: 0
 13053  013CCA  0100               	movlb	0	; () banked
 13054  013CCC  2994               	incf	___fldiv@aexp& (0+255),w,b
 13055  013CCE  A4D8               	btfss	status,2,c
 13056  013CD0  D009               	goto	l6616
 13057                           
 13058                           ; BSR set to: 0
 13059  013CD2  0E00               	movlw	0
 13060  013CD4  0100               	movlb	0	; () banked
 13061  013CD6  6F80               	movwf	___fldiv@a& (0+255),b
 13062  013CD8  0E00               	movlw	0
 13063  013CDA  6F81               	movwf	(___fldiv@a+1)& (0+255),b
 13064  013CDC  0E00               	movlw	0
 13065  013CDE  6F82               	movwf	(___fldiv@a+2)& (0+255),b
 13066  013CE0  0E00               	movlw	0
 13067  013CE2  6F83               	movwf	(___fldiv@a+3)& (0+255),b
 13068  013CE4                     l6616:
 13069                           
 13070                           ; BSR set to: 0
 13071  013CE4  0100               	movlb	0	; () banked
 13072  013CE6  8F82               	bsf	(___fldiv@a+2)& (0+255),7,b
 13073                           
 13074                           ; BSR set to: 0
 13075  013CE8  0E00               	movlw	0
 13076  013CEA  0100               	movlb	0	; () banked
 13077  013CEC  D008               	goto	L15
 13078  013CEE                     l6620:
 13079                           
 13080                           ; BSR set to: 0
 13081  013CEE  0E00               	movlw	0
 13082  013CF0  0100               	movlb	0	; () banked
 13083  013CF2  6F80               	movwf	___fldiv@a& (0+255),b
 13084  013CF4  0E00               	movlw	0
 13085  013CF6  6F81               	movwf	(___fldiv@a+1)& (0+255),b
 13086  013CF8  0E00               	movlw	0
 13087  013CFA  6F82               	movwf	(___fldiv@a+2)& (0+255),b
 13088  013CFC  0E00               	movlw	0
 13089  013CFE                     L15:
 13090  013CFE  6F83               	movwf	(___fldiv@a+3)& (0+255),b
 13091                           
 13092                           ; BSR set to: 0
 13093                           
 13094                           ; BSR set to: 0
 13095  013D00  0100               	movlb	0	; () banked
 13096  013D02  5180               	movf	___fldiv@a& (0+255),w,b
 13097  013D04  0100               	movlb	0	; () banked
 13098  013D06  1181               	iorwf	(___fldiv@a+1)& (0+255),w,b
 13099  013D08  0100               	movlb	0	; () banked
 13100  013D0A  1182               	iorwf	(___fldiv@a+2)& (0+255),w,b
 13101  013D0C  0100               	movlb	0	; () banked
 13102  013D0E  1183               	iorwf	(___fldiv@a+3)& (0+255),w,b
 13103  013D10  A4D8               	btfss	status,2,c
 13104  013D12  D017               	goto	l6632
 13105                           
 13106                           ; BSR set to: 0
 13107  013D14  0E00               	movlw	0
 13108  013D16  0100               	movlb	0	; () banked
 13109  013D18  6F7C               	movwf	___fldiv@b& (0+255),b
 13110  013D1A  0E00               	movlw	0
 13111  013D1C  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 13112  013D1E  0E00               	movlw	0
 13113  013D20  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 13114  013D22  0E00               	movlw	0
 13115  013D24  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 13116                           
 13117                           ; BSR set to: 0
 13118  013D26  0100               	movlb	0	; () banked
 13119  013D28  0E80               	movlw	128
 13120  013D2A  137E               	iorwf	(___fldiv@b+2)& (0+255),f,b
 13121  013D2C  0E7F               	movlw	127
 13122  013D2E  137F               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13123                           
 13124                           ; BSR set to: 0
 13125  013D30  C07C  F07C         	movff	___fldiv@b,?___fldiv
 13126  013D34  C07D  F07D         	movff	___fldiv@b+1,?___fldiv+1
 13127  013D38  C07E  F07E         	movff	___fldiv@b+2,?___fldiv+2
 13128  013D3C  C07F  F07F         	movff	___fldiv@b+3,?___fldiv+3
 13129                           
 13130                           ; BSR set to: 0
 13131  013D40  0012               	return	
 13132  013D42                     l6632:
 13133                           
 13134                           ; BSR set to: 0
 13135  013D42  0100               	movlb	0	; () banked
 13136  013D44  5193               	movf	___fldiv@bexp& (0+255),w,b
 13137  013D46  0100               	movlb	0	; () banked
 13138  013D48  A4D8               	btfss	status,2,c
 13139  013D4A  D012               	goto	l6640
 13140                           
 13141                           ; BSR set to: 0
 13142  013D4C  0E00               	movlw	0
 13143  013D4E  0100               	movlb	0	; () banked
 13144  013D50  6F7C               	movwf	___fldiv@b& (0+255),b
 13145  013D52  0E00               	movlw	0
 13146  013D54  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 13147  013D56  0E00               	movlw	0
 13148  013D58  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 13149  013D5A  0E00               	movlw	0
 13150  013D5C  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 13151                           
 13152                           ; BSR set to: 0
 13153  013D5E  C07C  F07C         	movff	___fldiv@b,?___fldiv
 13154  013D62  C07D  F07D         	movff	___fldiv@b+1,?___fldiv+1
 13155  013D66  C07E  F07E         	movff	___fldiv@b+2,?___fldiv+2
 13156  013D6A  C07F  F07F         	movff	___fldiv@b+3,?___fldiv+3
 13157                           
 13158                           ; BSR set to: 0
 13159  013D6E  0012               	return	
 13160  013D70                     l6640:
 13161                           
 13162                           ; BSR set to: 0
 13163  013D70  0100               	movlb	0	; () banked
 13164  013D72  5194               	movf	___fldiv@aexp& (0+255),w,b
 13165  013D74  0100               	movlb	0	; () banked
 13166  013D76  6F84               	movwf	??___fldiv& (0+255),b
 13167  013D78  6B85               	clrf	(??___fldiv+1)& (0+255),b
 13168  013D7A  0100               	movlb	0	; () banked
 13169  013D7C  1F84               	comf	??___fldiv& (0+255),f,b
 13170  013D7E  1F85               	comf	(??___fldiv+1)& (0+255),f,b
 13171  013D80  4B84               	infsnz	??___fldiv& (0+255),f,b
 13172  013D82  2B85               	incf	(??___fldiv+1)& (0+255),f,b
 13173  013D84  0100               	movlb	0	; () banked
 13174  013D86  5193               	movf	___fldiv@bexp& (0+255),w,b
 13175  013D88  0100               	movlb	0	; () banked
 13176  013D8A  6F86               	movwf	(??___fldiv+2)& (0+255),b
 13177  013D8C  6B87               	clrf	(??___fldiv+3)& (0+255),b
 13178  013D8E  0100               	movlb	0	; () banked
 13179  013D90  5184               	movf	??___fldiv& (0+255),w,b
 13180  013D92  0100               	movlb	0	; () banked
 13181  013D94  2786               	addwf	(??___fldiv+2)& (0+255),f,b
 13182  013D96  0100               	movlb	0	; () banked
 13183  013D98  5185               	movf	(??___fldiv+1)& (0+255),w,b
 13184  013D9A  0100               	movlb	0	; () banked
 13185  013D9C  2387               	addwfc	(??___fldiv+3)& (0+255),f,b
 13186  013D9E  0E7F               	movlw	127
 13187  013DA0  0100               	movlb	0	; () banked
 13188  013DA2  2586               	addwf	(??___fldiv+2)& (0+255),w,b
 13189  013DA4  0100               	movlb	0	; () banked
 13190  013DA6  6F8D               	movwf	___fldiv@new_exp& (0+255),b
 13191  013DA8  0E00               	movlw	0
 13192  013DAA  0100               	movlb	0	; () banked
 13193  013DAC  2187               	addwfc	(??___fldiv+3)& (0+255),w,b
 13194  013DAE  0100               	movlb	0	; () banked
 13195  013DB0  6F8E               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13196                           
 13197                           ; BSR set to: 0
 13198  013DB2  C07C  F089         	movff	___fldiv@b,___fldiv@rem
 13199  013DB6  C07D  F08A         	movff	___fldiv@b+1,___fldiv@rem+1
 13200  013DBA  C07E  F08B         	movff	___fldiv@b+2,___fldiv@rem+2
 13201  013DBE  C07F  F08C         	movff	___fldiv@b+3,___fldiv@rem+3
 13202                           
 13203                           ; BSR set to: 0
 13204  013DC2  0E00               	movlw	0
 13205  013DC4  0100               	movlb	0	; () banked
 13206  013DC6  6F7C               	movwf	___fldiv@b& (0+255),b
 13207  013DC8  0E00               	movlw	0
 13208  013DCA  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 13209  013DCC  0E00               	movlw	0
 13210  013DCE  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 13211  013DD0  0E00               	movlw	0
 13212  013DD2  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 13213                           
 13214                           ; BSR set to: 0
 13215  013DD4  0E00               	movlw	0
 13216  013DD6  0100               	movlb	0	; () banked
 13217  013DD8  6F8F               	movwf	___fldiv@grs& (0+255),b
 13218  013DDA  0E00               	movlw	0
 13219  013DDC  6F90               	movwf	(___fldiv@grs+1)& (0+255),b
 13220  013DDE  0E00               	movlw	0
 13221  013DE0  6F91               	movwf	(___fldiv@grs+2)& (0+255),b
 13222  013DE2  0E00               	movlw	0
 13223  013DE4  6F92               	movwf	(___fldiv@grs+3)& (0+255),b
 13224                           
 13225                           ; BSR set to: 0
 13226  013DE6  0E00               	movlw	0
 13227  013DE8  0100               	movlb	0	; () banked
 13228  013DEA  6F94               	movwf	___fldiv@aexp& (0+255),b
 13229  013DEC  D042               	goto	l1552
 13230  013DEE                     l6650:
 13231                           
 13232                           ; BSR set to: 0
 13233  013DEE  0100               	movlb	0	; () banked
 13234  013DF0  5194               	movf	___fldiv@aexp& (0+255),w,b
 13235  013DF2  0100               	movlb	0	; () banked
 13236  013DF4  B4D8               	btfsc	status,2,c
 13237  013DF6  D017               	goto	l6658
 13238                           
 13239                           ; BSR set to: 0
 13240  013DF8  0100               	movlb	0	; () banked
 13241  013DFA  90D8               	bcf	status,0,c
 13242  013DFC  3789               	rlcf	___fldiv@rem& (0+255),f,b
 13243  013DFE  378A               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13244  013E00  378B               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13245  013E02  378C               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13246  013E04  0100               	movlb	0	; () banked
 13247  013E06  90D8               	bcf	status,0,c
 13248  013E08  377C               	rlcf	___fldiv@b& (0+255),f,b
 13249  013E0A  377D               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13250  013E0C  377E               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13251  013E0E  377F               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13252                           
 13253                           ; BSR set to: 0
 13254  013E10  0100               	movlb	0	; () banked
 13255  013E12  AF92               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13256  013E14  D002               	goto	l1555
 13257                           
 13258                           ; BSR set to: 0
 13259  013E16  0100               	movlb	0	; () banked
 13260  013E18  817C               	bsf	___fldiv@b& (0+255),0,b
 13261  013E1A                     l1555:
 13262                           
 13263                           ; BSR set to: 0
 13264  013E1A  0100               	movlb	0	; () banked
 13265  013E1C  90D8               	bcf	status,0,c
 13266  013E1E  378F               	rlcf	___fldiv@grs& (0+255),f,b
 13267  013E20  3790               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13268  013E22  3791               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13269  013E24  3792               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13270  013E26                     l6658:
 13271                           
 13272                           ; BSR set to: 0
 13273  013E26  0100               	movlb	0	; () banked
 13274  013E28  5180               	movf	___fldiv@a& (0+255),w,b
 13275  013E2A  0100               	movlb	0	; () banked
 13276  013E2C  5D89               	subwf	___fldiv@rem& (0+255),w,b
 13277  013E2E  0100               	movlb	0	; () banked
 13278  013E30  5181               	movf	(___fldiv@a+1)& (0+255),w,b
 13279  013E32  0100               	movlb	0	; () banked
 13280  013E34  598A               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13281  013E36  0100               	movlb	0	; () banked
 13282  013E38  5182               	movf	(___fldiv@a+2)& (0+255),w,b
 13283  013E3A  0100               	movlb	0	; () banked
 13284  013E3C  598B               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13285  013E3E  0100               	movlb	0	; () banked
 13286  013E40  5183               	movf	(___fldiv@a+3)& (0+255),w,b
 13287  013E42  0100               	movlb	0	; () banked
 13288  013E44  598C               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13289  013E46  A0D8               	btfss	status,0,c
 13290  013E48  D012               	goto	l6664
 13291                           
 13292                           ; BSR set to: 0
 13293  013E4A  0100               	movlb	0	; () banked
 13294  013E4C  8D92               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13295                           
 13296                           ; BSR set to: 0
 13297  013E4E  0100               	movlb	0	; () banked
 13298  013E50  5180               	movf	___fldiv@a& (0+255),w,b
 13299  013E52  0100               	movlb	0	; () banked
 13300  013E54  5F89               	subwf	___fldiv@rem& (0+255),f,b
 13301  013E56  0100               	movlb	0	; () banked
 13302  013E58  5181               	movf	(___fldiv@a+1)& (0+255),w,b
 13303  013E5A  0100               	movlb	0	; () banked
 13304  013E5C  5B8A               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13305  013E5E  0100               	movlb	0	; () banked
 13306  013E60  5182               	movf	(___fldiv@a+2)& (0+255),w,b
 13307  013E62  0100               	movlb	0	; () banked
 13308  013E64  5B8B               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13309  013E66  0100               	movlb	0	; () banked
 13310  013E68  5183               	movf	(___fldiv@a+3)& (0+255),w,b
 13311  013E6A  0100               	movlb	0	; () banked
 13312  013E6C  5B8C               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13313  013E6E                     l6664:
 13314                           
 13315                           ; BSR set to: 0
 13316  013E6E  0100               	movlb	0	; () banked
 13317  013E70  2B94               	incf	___fldiv@aexp& (0+255),f,b
 13318  013E72                     l1552:
 13319                           
 13320                           ; BSR set to: 0
 13321  013E72  0E19               	movlw	25
 13322  013E74  0100               	movlb	0	; () banked
 13323  013E76  6594               	cpfsgt	___fldiv@aexp& (0+255),b
 13324  013E78  D7BA               	goto	l6650
 13325                           
 13326                           ; BSR set to: 0
 13327                           
 13328                           ; BSR set to: 0
 13329  013E7A  0100               	movlb	0	; () banked
 13330  013E7C  5189               	movf	___fldiv@rem& (0+255),w,b
 13331  013E7E  0100               	movlb	0	; () banked
 13332  013E80  118A               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13333  013E82  0100               	movlb	0	; () banked
 13334  013E84  118B               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13335  013E86  0100               	movlb	0	; () banked
 13336  013E88  118C               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13337  013E8A  B4D8               	btfsc	status,2,c
 13338  013E8C  D018               	goto	l6676
 13339                           
 13340                           ; BSR set to: 0
 13341  013E8E  0100               	movlb	0	; () banked
 13342  013E90  818F               	bsf	___fldiv@grs& (0+255),0,b
 13343                           
 13344                           ; BSR set to: 0
 13345  013E92  D015               	goto	l6676
 13346  013E94                     l6670:
 13347                           
 13348                           ; BSR set to: 0
 13349  013E94  0100               	movlb	0	; () banked
 13350  013E96  90D8               	bcf	status,0,c
 13351  013E98  377C               	rlcf	___fldiv@b& (0+255),f,b
 13352  013E9A  377D               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13353  013E9C  377E               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13354  013E9E  377F               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13355                           
 13356                           ; BSR set to: 0
 13357  013EA0  0100               	movlb	0	; () banked
 13358  013EA2  AF92               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13359  013EA4  D002               	goto	l1561
 13360                           
 13361                           ; BSR set to: 0
 13362  013EA6  0100               	movlb	0	; () banked
 13363  013EA8  817C               	bsf	___fldiv@b& (0+255),0,b
 13364  013EAA                     l1561:
 13365                           
 13366                           ; BSR set to: 0
 13367  013EAA  0100               	movlb	0	; () banked
 13368  013EAC  90D8               	bcf	status,0,c
 13369  013EAE  378F               	rlcf	___fldiv@grs& (0+255),f,b
 13370  013EB0  3790               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13371  013EB2  3791               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13372  013EB4  3792               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13373  013EB6  0100               	movlb	0	; () banked
 13374  013EB8  078D               	decf	___fldiv@new_exp& (0+255),f,b
 13375  013EBA  A0D8               	btfss	status,0,c
 13376  013EBC  078E               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13377  013EBE                     l6676:
 13378                           
 13379                           ; BSR set to: 0
 13380  013EBE  0100               	movlb	0	; () banked
 13381  013EC0  AF7E               	btfss	(___fldiv@b+2)& (0+255),7,b
 13382  013EC2  D7E8               	goto	l6670
 13383                           
 13384                           ; BSR set to: 0
 13385                           
 13386                           ; BSR set to: 0
 13387  013EC4  0E00               	movlw	0
 13388  013EC6  0100               	movlb	0	; () banked
 13389  013EC8  6F94               	movwf	___fldiv@aexp& (0+255),b
 13390                           
 13391                           ; BSR set to: 0
 13392  013ECA  0100               	movlb	0	; () banked
 13393  013ECC  AF92               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13394  013ECE  D024               	goto	l1563
 13395                           
 13396                           ; BSR set to: 0
 13397  013ED0  0EFF               	movlw	255
 13398  013ED2  0100               	movlb	0	; () banked
 13399  013ED4  158F               	andwf	___fldiv@grs& (0+255),w,b
 13400  013ED6  0100               	movlb	0	; () banked
 13401  013ED8  6F84               	movwf	??___fldiv& (0+255),b
 13402  013EDA  0EFF               	movlw	255
 13403  013EDC  0100               	movlb	0	; () banked
 13404  013EDE  1590               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13405  013EE0  0100               	movlb	0	; () banked
 13406  013EE2  6F85               	movwf	(??___fldiv+1)& (0+255),b
 13407  013EE4  0EFF               	movlw	255
 13408  013EE6  0100               	movlb	0	; () banked
 13409  013EE8  1591               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13410  013EEA  0100               	movlb	0	; () banked
 13411  013EEC  6F86               	movwf	(??___fldiv+2)& (0+255),b
 13412  013EEE  0E7F               	movlw	127
 13413  013EF0  0100               	movlb	0	; () banked
 13414  013EF2  1592               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13415  013EF4  0100               	movlb	0	; () banked
 13416  013EF6  6F87               	movwf	(??___fldiv+3)& (0+255),b
 13417  013EF8  0100               	movlb	0	; () banked
 13418  013EFA  5184               	movf	??___fldiv& (0+255),w,b
 13419  013EFC  0100               	movlb	0	; () banked
 13420  013EFE  1185               	iorwf	(??___fldiv+1)& (0+255),w,b
 13421  013F00  0100               	movlb	0	; () banked
 13422  013F02  1186               	iorwf	(??___fldiv+2)& (0+255),w,b
 13423  013F04  0100               	movlb	0	; () banked
 13424  013F06  1187               	iorwf	(??___fldiv+3)& (0+255),w,b
 13425  013F08  A4D8               	btfss	status,2,c
 13426  013F0A  D003               	goto	l6686
 13427                           
 13428                           ; BSR set to: 0
 13429                           
 13430                           ; BSR set to: 0
 13431  013F0C  0100               	movlb	0	; () banked
 13432  013F0E  A17C               	btfss	___fldiv@b& (0+255),0,b
 13433  013F10  D003               	goto	l1563
 13434  013F12                     l6686:
 13435                           
 13436                           ; BSR set to: 0
 13437  013F12  0E01               	movlw	1
 13438  013F14  0100               	movlb	0	; () banked
 13439  013F16  6F94               	movwf	___fldiv@aexp& (0+255),b
 13440  013F18                     l1563:
 13441                           
 13442                           ; BSR set to: 0
 13443  013F18  0100               	movlb	0	; () banked
 13444  013F1A  5194               	movf	___fldiv@aexp& (0+255),w,b
 13445  013F1C  0100               	movlb	0	; () banked
 13446  013F1E  B4D8               	btfsc	status,2,c
 13447  013F20  D023               	goto	l6696
 13448                           
 13449                           ; BSR set to: 0
 13450  013F22  0E01               	movlw	1
 13451  013F24  0100               	movlb	0	; () banked
 13452  013F26  277C               	addwf	___fldiv@b& (0+255),f,b
 13453  013F28  0E00               	movlw	0
 13454  013F2A  237D               	addwfc	(___fldiv@b+1)& (0+255),f,b
 13455  013F2C  237E               	addwfc	(___fldiv@b+2)& (0+255),f,b
 13456  013F2E  237F               	addwfc	(___fldiv@b+3)& (0+255),f,b
 13457                           
 13458                           ; BSR set to: 0
 13459  013F30  0100               	movlb	0	; () banked
 13460  013F32  A17F               	btfss	(___fldiv@b+3)& (0+255),0,b
 13461  013F34  D019               	goto	l6696
 13462                           
 13463                           ; BSR set to: 0
 13464  013F36  C07C  F084         	movff	___fldiv@b,??___fldiv
 13465  013F3A  C07D  F085         	movff	___fldiv@b+1,??___fldiv+1
 13466  013F3E  C07E  F086         	movff	___fldiv@b+2,??___fldiv+2
 13467  013F42  C07F  F087         	movff	___fldiv@b+3,??___fldiv+3
 13468  013F46  0100               	movlb	0	; () banked
 13469  013F48  3587               	rlcf	(??___fldiv+3)& (0+255),w,b
 13470  013F4A  3387               	rrcf	(??___fldiv+3)& (0+255),f,b
 13471  013F4C  3386               	rrcf	(??___fldiv+2)& (0+255),f,b
 13472  013F4E  3385               	rrcf	(??___fldiv+1)& (0+255),f,b
 13473  013F50  3384               	rrcf	??___fldiv& (0+255),f,b
 13474  013F52  C084  F07C         	movff	??___fldiv,___fldiv@b
 13475  013F56  C085  F07D         	movff	??___fldiv+1,___fldiv@b+1
 13476  013F5A  C086  F07E         	movff	??___fldiv+2,___fldiv@b+2
 13477  013F5E  C087  F07F         	movff	??___fldiv+3,___fldiv@b+3
 13478                           
 13479                           ; BSR set to: 0
 13480  013F62  0100               	movlb	0	; () banked
 13481  013F64  4B8D               	infsnz	___fldiv@new_exp& (0+255),f,b
 13482  013F66  2B8E               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13483  013F68                     l6696:
 13484                           
 13485                           ; BSR set to: 0
 13486  013F68  0100               	movlb	0	; () banked
 13487  013F6A  BF8E               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13488  013F6C  D014               	goto	l6700
 13489  013F6E  0100               	movlb	0	; () banked
 13490  013F70  518E               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13491  013F72  E104               	bnz	u8480
 13492  013F74  0100               	movlb	0	; () banked
 13493  013F76  298D               	incf	___fldiv@new_exp& (0+255),w,b
 13494  013F78  A0D8               	btfss	status,0,c
 13495  013F7A  D00D               	goto	l6700
 13496  013F7C                     u8480:
 13497                           
 13498                           ; BSR set to: 0
 13499  013F7C  0E00               	movlw	0
 13500  013F7E  0100               	movlb	0	; () banked
 13501  013F80  6F8E               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13502  013F82  698D               	setf	___fldiv@new_exp& (0+255),b
 13503  013F84  0E00               	movlw	0
 13504  013F86  0100               	movlb	0	; () banked
 13505  013F88  6F7C               	movwf	___fldiv@b& (0+255),b
 13506  013F8A  0E00               	movlw	0
 13507  013F8C  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 13508  013F8E  0E00               	movlw	0
 13509  013F90  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 13510  013F92  0E00               	movlw	0
 13511  013F94  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 13512  013F96                     l6700:
 13513                           
 13514                           ; BSR set to: 0
 13515  013F96  0100               	movlb	0	; () banked
 13516  013F98  BF8E               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13517  013F9A  D007               	goto	l6702
 13518  013F9C  0100               	movlb	0	; () banked
 13519  013F9E  518E               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13520  013FA0  E115               	bnz	l6704
 13521  013FA2  0100               	movlb	0	; () banked
 13522  013FA4  058D               	decf	___fldiv@new_exp& (0+255),w,b
 13523  013FA6  B0D8               	btfsc	status,0,c
 13524  013FA8  D011               	goto	l6704
 13525  013FAA                     l6702:
 13526                           
 13527                           ; BSR set to: 0
 13528  013FAA  0E00               	movlw	0
 13529  013FAC  0100               	movlb	0	; () banked
 13530  013FAE  6F8E               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13531  013FB0  0E00               	movlw	0
 13532  013FB2  6F8D               	movwf	___fldiv@new_exp& (0+255),b
 13533  013FB4  0E00               	movlw	0
 13534  013FB6  0100               	movlb	0	; () banked
 13535  013FB8  6F7C               	movwf	___fldiv@b& (0+255),b
 13536  013FBA  0E00               	movlw	0
 13537  013FBC  6F7D               	movwf	(___fldiv@b+1)& (0+255),b
 13538  013FBE  0E00               	movlw	0
 13539  013FC0  6F7E               	movwf	(___fldiv@b+2)& (0+255),b
 13540  013FC2  0E00               	movlw	0
 13541  013FC4  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 13542  013FC6  0E00               	movlw	0
 13543  013FC8  0100               	movlb	0	; () banked
 13544  013FCA  6F88               	movwf	___fldiv@sign& (0+255),b
 13545  013FCC                     l6704:
 13546                           
 13547                           ; BSR set to: 0
 13548  013FCC  C08D  F093         	movff	___fldiv@new_exp,___fldiv@bexp
 13549                           
 13550                           ; BSR set to: 0
 13551  013FD0  0100               	movlb	0	; () banked
 13552  013FD2  A193               	btfss	___fldiv@bexp& (0+255),0,b
 13553  013FD4  D003               	goto	l6710
 13554                           
 13555                           ; BSR set to: 0
 13556  013FD6  0100               	movlb	0	; () banked
 13557  013FD8  8F7E               	bsf	(___fldiv@b+2)& (0+255),7,b
 13558  013FDA  D002               	goto	l6712
 13559  013FDC                     l6710:
 13560                           
 13561                           ; BSR set to: 0
 13562  013FDC  0100               	movlb	0	; () banked
 13563  013FDE  9F7E               	bcf	(___fldiv@b+2)& (0+255),7,b
 13564  013FE0                     l6712:
 13565                           
 13566                           ; BSR set to: 0
 13567  013FE0  0100               	movlb	0	; () banked
 13568  013FE2  90D8               	bcf	status,0,c
 13569  013FE4  3193               	rrcf	___fldiv@bexp& (0+255),w,b
 13570  013FE6  0100               	movlb	0	; () banked
 13571  013FE8  6F7F               	movwf	(___fldiv@b+3)& (0+255),b
 13572                           
 13573                           ; BSR set to: 0
 13574  013FEA  0100               	movlb	0	; () banked
 13575  013FEC  5188               	movf	___fldiv@sign& (0+255),w,b
 13576  013FEE  0100               	movlb	0	; () banked
 13577  013FF0  137F               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13578                           
 13579                           ; BSR set to: 0
 13580  013FF2  C07C  F07C         	movff	___fldiv@b,?___fldiv
 13581  013FF6  C07D  F07D         	movff	___fldiv@b+1,?___fldiv+1
 13582  013FFA  C07E  F07E         	movff	___fldiv@b+2,?___fldiv+2
 13583  013FFE  C07F  F07F         	movff	___fldiv@b+3,?___fldiv+3
 13584  014002  0012               	return	
 13585  014004                     __end_of___fldiv:
 13586                           	opt stack 0
 13587                           tblptru	equ	0xFF8
 13588                           tblptrh	equ	0xFF7
 13589                           tblptrl	equ	0xFF6
 13590                           tablat	equ	0xFF5
 13591                           prodh	equ	0xFF4
 13592                           prodl	equ	0xFF3
 13593                           intcon	equ	0xFF2
 13594                           postinc0	equ	0xFEE
 13595                           wreg	equ	0xFE8
 13596                           indf2	equ	0xFDF
 13597                           postinc2	equ	0xFDE
 13598                           fsr2h	equ	0xFDA
 13599                           fsr2l	equ	0xFD9
 13600                           status	equ	0xFD8
 13601                           
 13602 ;; *************** function _LCD_write_message *****************
 13603 ;; Defined at:
 13604 ;;		line 178 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13605 ;; Parameters:    Size  Location     Type
 13606 ;;  buffer          2   31[BANK0 ] PTR const unsigned char 
 13607 ;;		 -> STR_17(8), STR_16(8), STR_15(8), STR_14(8), 
 13608 ;;		 -> STR_13(5), STR_12(5), STR_11(5), STR_10(7), 
 13609 ;;		 -> STR_9(14), STR_8(17), STR_7(12), STR_6(21), 
 13610 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
 13611 ;; Auto vars:     Size  Location     Type
 13612 ;;		None
 13613 ;; Return value:  Size  Location     Type
 13614 ;;		None               void
 13615 ;; Registers used:
 13616 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13617 ;; Tracked objects:
 13618 ;;		On entry : 0/0
 13619 ;;		On exit  : 0/0
 13620 ;;		Unchanged: 0/0
 13621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13622 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13625 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13626 ;;Total ram usage:        2 bytes
 13627 ;; Hardware stack levels used:    1
 13628 ;; Hardware stack levels required when called:    8
 13629 ;; This function calls:
 13630 ;;		_LCD_write_char
 13631 ;; This function is called by:
 13632 ;;		_main
 13633 ;;		_LCD_Handler
 13634 ;; This function uses a non-reentrant model
 13635 ;;
 13636                           
 13637                           	psect	text26
 13638  016096                     __ptext26:
 13639                           	opt stack 0
 13640  016096                     _LCD_write_message:
 13641                           	opt stack 22
 13642                           
 13643                           ;src\LCD_44780.c: 181: while(*buffer) {
 13644                           
 13645                           ; BSR set to: 0
 13646                           ;incstack = 0
 13647  016096  D00D               	goto	l8464
 13648  016098                     l8460:
 13649                           
 13650                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 13651  016098  C07F  FFF6         	movff	LCD_write_message@buffer,tblptrl
 13652  01609C  C080  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 13653  0160A0                     	if	0	;tblptru may be non-zero
 13654  0160A0                     	endif
 13655  0160A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13656  0160A0  0E00               	movlw	low (__mediumconst shr (0+16))
 13657  0160A2  6EF8               	movwf	tblptru,c
 13658  0160A4                     	endif
 13659  0160A4  0008               	tblrd		*
 13660  0160A6  50F5               	movf	tablat,w,c
 13661  0160A8  EC68  F0AE         	call	_LCD_write_char
 13662                           
 13663                           ;src\LCD_44780.c: 186: buffer++;
 13664  0160AC  0100               	movlb	0	; () banked
 13665  0160AE  4B7F               	infsnz	LCD_write_message@buffer& (0+255),f,b
 13666  0160B0  2B80               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 13667  0160B2                     l8464:
 13668  0160B2  C07F  FFF6         	movff	LCD_write_message@buffer,tblptrl
 13669  0160B6  C080  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 13670  0160BA                     	if	0	;tblptru may be non-zero
 13671  0160BA                     	endif
 13672  0160BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13673  0160BA  0E00               	movlw	low (__mediumconst shr (0+16))
 13674  0160BC  6EF8               	movwf	tblptru,c
 13675  0160BE                     	endif
 13676  0160BE  0008               	tblrd		*
 13677  0160C0  50F5               	movf	tablat,w,c
 13678  0160C2  0900               	iorlw	0
 13679  0160C4  B4D8               	btfsc	status,2,c
 13680  0160C6  0012               	return	
 13681  0160C8  D7E7               	goto	l8460
 13682  0160CA                     __end_of_LCD_write_message:
 13683                           	opt stack 0
 13684                           tblptru	equ	0xFF8
 13685                           tblptrh	equ	0xFF7
 13686                           tblptrl	equ	0xFF6
 13687                           tablat	equ	0xFF5
 13688                           prodh	equ	0xFF4
 13689                           prodl	equ	0xFF3
 13690                           intcon	equ	0xFF2
 13691                           postinc0	equ	0xFEE
 13692                           wreg	equ	0xFE8
 13693                           indf2	equ	0xFDF
 13694                           postinc2	equ	0xFDE
 13695                           fsr2h	equ	0xFDA
 13696                           fsr2l	equ	0xFD9
 13697                           status	equ	0xFD8
 13698                           
 13699 ;; *************** function _LCD_write_integer *****************
 13700 ;; Defined at:
 13701 ;;		line 210 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13702 ;; Parameters:    Size  Location     Type
 13703 ;;  value           2   38[BANK0 ] int 
 13704 ;;  number_of_di    1   40[BANK0 ] unsigned char 
 13705 ;;  zero_cleanin    1   41[BANK0 ] unsigned char 
 13706 ;; Auto vars:     Size  Location     Type
 13707 ;;  convertedInt    6   47[BANK0 ] unsigned char [6]
 13708 ;;  index           1   53[BANK0 ] unsigned char 
 13709 ;; Return value:  Size  Location     Type
 13710 ;;		None               void
 13711 ;; Registers used:
 13712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13713 ;; Tracked objects:
 13714 ;;		On entry : 0/0
 13715 ;;		On exit  : 0/0
 13716 ;;		Unchanged: 0/0
 13717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13718 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13719 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13720 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13721 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13722 ;;Total ram usage:       16 bytes
 13723 ;; Hardware stack levels used:    1
 13724 ;; Hardware stack levels required when called:    9
 13725 ;; This function calls:
 13726 ;;		_LCD_write_string
 13727 ;;		_itoa
 13728 ;; This function is called by:
 13729 ;;		_LCD_Handler
 13730 ;; This function uses a non-reentrant model
 13731 ;;
 13732                           
 13733                           	psect	text27
 13734  014A2C                     __ptext27:
 13735                           	opt stack 0
 13736  014A2C                     _LCD_write_integer:
 13737                           	opt stack 20
 13738                           
 13739                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 13740                           
 13741                           ;incstack = 0
 13742  014A2C  EE21  F007         	lfsr	2,LCD_write_integer@F17272
 13743  014A30  EE10  F08F         	lfsr	1,LCD_write_integer@convertedInt
 13744  014A34  0E05               	movlw	5
 13745  014A36                     u11381:
 13746  014A36  CFDB FFE3          	movff	plusw2,plusw1
 13747  014A3A  06E8               	decf	wreg,f,c
 13748  014A3C  E2FC               	bc	u11381
 13749                           
 13750                           ;src\LCD_44780.c: 216: unsigned char index;
 13751                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 13752  014A3E  0E8F               	movlw	low LCD_write_integer@convertedInt
 13753  014A40  0100               	movlb	0	; () banked
 13754  014A42  6F7E               	movwf	itoa@buf& (0+255),b
 13755  014A44  0E00               	movlw	high LCD_write_integer@convertedInt
 13756  014A46  0100               	movlb	0	; () banked
 13757  014A48  6F7F               	movwf	(itoa@buf+1)& (0+255),b
 13758  014A4A  C086  F080         	movff	LCD_write_integer@value,itoa@val
 13759  014A4E  C087  F081         	movff	LCD_write_integer@value+1,itoa@val+1
 13760  014A52  0E00               	movlw	0
 13761  014A54  0100               	movlb	0	; () banked
 13762  014A56  6F83               	movwf	(itoa@base+1)& (0+255),b
 13763  014A58  0E0A               	movlw	10
 13764  014A5A  6F82               	movwf	itoa@base& (0+255),b
 13765  014A5C  EC94  F0AF         	call	_itoa	;wreg free
 13766                           
 13767                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 13768  014A60  0100               	movlb	0	; () banked
 13769  014A62  5188               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13770  014A64  0100               	movlb	0	; () banked
 13771  014A66  B4D8               	btfsc	status,2,c
 13772  014A68  D0B8               	goto	l8496
 13773                           
 13774                           ; BSR set to: 0
 13775                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 13776  014A6A  0100               	movlb	0	; () banked
 13777  014A6C  5188               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13778  014A6E  0D01               	mullw	1
 13779  014A70  0E8F               	movlw	low LCD_write_integer@convertedInt
 13780  014A72  24F3               	addwf	prodl,w,c
 13781  014A74  6ED9               	movwf	fsr2l,c
 13782  014A76  0E00               	movlw	high LCD_write_integer@convertedInt
 13783  014A78  20F4               	addwfc	prodh,w,c
 13784  014A7A  6EDA               	movwf	fsr2h,c
 13785  014A7C  0E00               	movlw	0
 13786  014A7E  6EDF               	movwf	indf2,c
 13787                           
 13788                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 13789  014A80  D070               	goto	l8492
 13790  014A82                     l8474:
 13791                           
 13792                           ; BSR set to: 0
 13793                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 13794  014A82  0100               	movlb	0	; () banked
 13795  014A84  0588               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 13796  014A86  0100               	movlb	0	; () banked
 13797  014A88  6F95               	movwf	LCD_write_integer@index& (0+255),b
 13798  014A8A                     l8476:
 13799                           
 13800                           ; BSR set to: 0
 13801  014A8A  0100               	movlb	0	; () banked
 13802  014A8C  5195               	movf	LCD_write_integer@index& (0+255),w,b
 13803  014A8E  0100               	movlb	0	; () banked
 13804  014A90  B4D8               	btfsc	status,2,c
 13805  014A92  D067               	goto	l8492
 13806                           
 13807                           ; BSR set to: 0
 13808                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 13809                           
 13810                           ; BSR set to: 0
 13811                           
 13812                           ; BSR set to: 0
 13813  014A94  0EFF               	movlw	255
 13814  014A96  0100               	movlb	0	; () banked
 13815  014A98  6F8A               	movwf	??_LCD_write_integer& (0+255),b
 13816  014A9A  0EFF               	movlw	255
 13817  014A9C  0100               	movlb	0	; () banked
 13818  014A9E  6F8B               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13819  014AA0  0100               	movlb	0	; () banked
 13820  014AA2  5195               	movf	LCD_write_integer@index& (0+255),w,b
 13821  014AA4  0100               	movlb	0	; () banked
 13822  014AA6  6F8C               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13823  014AA8  6B8D               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13824  014AAA  0100               	movlb	0	; () banked
 13825  014AAC  518A               	movf	??_LCD_write_integer& (0+255),w,b
 13826  014AAE  0100               	movlb	0	; () banked
 13827  014AB0  278C               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13828  014AB2  0100               	movlb	0	; () banked
 13829  014AB4  518B               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13830  014AB6  0100               	movlb	0	; () banked
 13831  014AB8  238D               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13832  014ABA  0E8F               	movlw	low LCD_write_integer@convertedInt
 13833  014ABC  0100               	movlb	0	; () banked
 13834  014ABE  258C               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13835  014AC0  6ED9               	movwf	fsr2l,c
 13836  014AC2  0E00               	movlw	high LCD_write_integer@convertedInt
 13837  014AC4  0100               	movlb	0	; () banked
 13838  014AC6  218D               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13839  014AC8  6EDA               	movwf	fsr2h,c
 13840  014ACA  0100               	movlb	0	; () banked
 13841  014ACC  5195               	movf	LCD_write_integer@index& (0+255),w,b
 13842  014ACE  0D01               	mullw	1
 13843  014AD0  0E8F               	movlw	low LCD_write_integer@convertedInt
 13844  014AD2  24F3               	addwf	prodl,w,c
 13845  014AD4  6EE1               	movwf	fsr1l,c
 13846  014AD6  0E00               	movlw	high LCD_write_integer@convertedInt
 13847  014AD8  20F4               	addwfc	prodh,w,c
 13848  014ADA  6EE2               	movwf	fsr1h,c
 13849  014ADC  CFDF FFE7          	movff	indf2,indf1
 13850                           
 13851                           ; BSR set to: 0
 13852                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 13853  014AE0  0100               	movlb	0	; () banked
 13854  014AE2  0589               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 13855  014AE4  A4D8               	btfss	status,2,c
 13856  014AE6  D01D               	goto	l8486
 13857                           
 13858                           ; BSR set to: 0
 13859                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 13860  014AE8  0EFF               	movlw	255
 13861  014AEA  0100               	movlb	0	; () banked
 13862  014AEC  6F8A               	movwf	??_LCD_write_integer& (0+255),b
 13863  014AEE  0EFF               	movlw	255
 13864  014AF0  0100               	movlb	0	; () banked
 13865  014AF2  6F8B               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13866  014AF4  0100               	movlb	0	; () banked
 13867  014AF6  5195               	movf	LCD_write_integer@index& (0+255),w,b
 13868  014AF8  0100               	movlb	0	; () banked
 13869  014AFA  6F8C               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13870  014AFC  6B8D               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13871  014AFE  0100               	movlb	0	; () banked
 13872  014B00  518A               	movf	??_LCD_write_integer& (0+255),w,b
 13873  014B02  0100               	movlb	0	; () banked
 13874  014B04  278C               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13875  014B06  0100               	movlb	0	; () banked
 13876  014B08  518B               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13877  014B0A  0100               	movlb	0	; () banked
 13878  014B0C  238D               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13879  014B0E  0E8F               	movlw	low LCD_write_integer@convertedInt
 13880  014B10  0100               	movlb	0	; () banked
 13881  014B12  258C               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13882  014B14  6ED9               	movwf	fsr2l,c
 13883  014B16  0E00               	movlw	high LCD_write_integer@convertedInt
 13884  014B18  0100               	movlb	0	; () banked
 13885  014B1A  218D               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13886  014B1C  6EDA               	movwf	fsr2h,c
 13887  014B1E  0E20               	movlw	32
 13888  014B20  D01C               	goto	L16
 13889  014B22                     l8486:
 13890                           
 13891                           ; BSR set to: 0
 13892                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 13893  014B22  0EFF               	movlw	255
 13894  014B24  0100               	movlb	0	; () banked
 13895  014B26  6F8A               	movwf	??_LCD_write_integer& (0+255),b
 13896  014B28  0EFF               	movlw	255
 13897  014B2A  0100               	movlb	0	; () banked
 13898  014B2C  6F8B               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13899  014B2E  0100               	movlb	0	; () banked
 13900  014B30  5195               	movf	LCD_write_integer@index& (0+255),w,b
 13901  014B32  0100               	movlb	0	; () banked
 13902  014B34  6F8C               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13903  014B36  6B8D               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13904  014B38  0100               	movlb	0	; () banked
 13905  014B3A  518A               	movf	??_LCD_write_integer& (0+255),w,b
 13906  014B3C  0100               	movlb	0	; () banked
 13907  014B3E  278C               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13908  014B40  0100               	movlb	0	; () banked
 13909  014B42  518B               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13910  014B44  0100               	movlb	0	; () banked
 13911  014B46  238D               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13912  014B48  0E8F               	movlw	low LCD_write_integer@convertedInt
 13913  014B4A  0100               	movlb	0	; () banked
 13914  014B4C  258C               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13915  014B4E  6ED9               	movwf	fsr2l,c
 13916  014B50  0E00               	movlw	high LCD_write_integer@convertedInt
 13917  014B52  0100               	movlb	0	; () banked
 13918  014B54  218D               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13919  014B56  6EDA               	movwf	fsr2h,c
 13920  014B58  0E30               	movlw	48
 13921  014B5A                     L16:
 13922  014B5A  6EDF               	movwf	indf2,c
 13923                           
 13924                           ; BSR set to: 0
 13925                           
 13926                           ; BSR set to: 0
 13927  014B5C  0100               	movlb	0	; () banked
 13928  014B5E  0795               	decf	LCD_write_integer@index& (0+255),f,b
 13929  014B60  D794               	goto	l8476
 13930  014B62                     l8492:
 13931                           
 13932                           ; BSR set to: 0
 13933  014B62  0EFF               	movlw	255
 13934  014B64  0100               	movlb	0	; () banked
 13935  014B66  6F8A               	movwf	??_LCD_write_integer& (0+255),b
 13936  014B68  0EFF               	movlw	255
 13937  014B6A  0100               	movlb	0	; () banked
 13938  014B6C  6F8B               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13939  014B6E  0100               	movlb	0	; () banked
 13940  014B70  5188               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13941  014B72  0100               	movlb	0	; () banked
 13942  014B74  6F8C               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13943  014B76  6B8D               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13944  014B78  0100               	movlb	0	; () banked
 13945  014B7A  518A               	movf	??_LCD_write_integer& (0+255),w,b
 13946  014B7C  0100               	movlb	0	; () banked
 13947  014B7E  278C               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13948  014B80  0100               	movlb	0	; () banked
 13949  014B82  518B               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13950  014B84  0100               	movlb	0	; () banked
 13951  014B86  238D               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13952  014B88  0E8F               	movlw	low LCD_write_integer@convertedInt
 13953  014B8A  0100               	movlb	0	; () banked
 13954  014B8C  258C               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13955  014B8E  6ED9               	movwf	fsr2l,c
 13956  014B90  0E00               	movlw	high LCD_write_integer@convertedInt
 13957  014B92  0100               	movlb	0	; () banked
 13958  014B94  218D               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13959  014B96  6EDA               	movwf	fsr2h,c
 13960  014B98  0E3A               	movlw	58
 13961  014B9A  60DF               	cpfslt	indf2,c
 13962  014B9C  D772               	goto	l8474
 13963                           
 13964                           ; BSR set to: 0
 13965  014B9E  0EFF               	movlw	255
 13966  014BA0  0100               	movlb	0	; () banked
 13967  014BA2  6F8A               	movwf	??_LCD_write_integer& (0+255),b
 13968  014BA4  0EFF               	movlw	255
 13969  014BA6  0100               	movlb	0	; () banked
 13970  014BA8  6F8B               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13971  014BAA  0100               	movlb	0	; () banked
 13972  014BAC  5188               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13973  014BAE  0100               	movlb	0	; () banked
 13974  014BB0  6F8C               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13975  014BB2  6B8D               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13976  014BB4  0100               	movlb	0	; () banked
 13977  014BB6  518A               	movf	??_LCD_write_integer& (0+255),w,b
 13978  014BB8  0100               	movlb	0	; () banked
 13979  014BBA  278C               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13980  014BBC  0100               	movlb	0	; () banked
 13981  014BBE  518B               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13982  014BC0  0100               	movlb	0	; () banked
 13983  014BC2  238D               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13984  014BC4  0E8F               	movlw	low LCD_write_integer@convertedInt
 13985  014BC6  0100               	movlb	0	; () banked
 13986  014BC8  258C               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13987  014BCA  6ED9               	movwf	fsr2l,c
 13988  014BCC  0E00               	movlw	high LCD_write_integer@convertedInt
 13989  014BCE  0100               	movlb	0	; () banked
 13990  014BD0  218D               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13991  014BD2  6EDA               	movwf	fsr2h,c
 13992  014BD4  0E2F               	movlw	47
 13993  014BD6  64DF               	cpfsgt	indf2,c
 13994  014BD8  D754               	goto	l8474
 13995  014BDA                     l8496:
 13996                           
 13997                           ; BSR set to: 0
 13998                           ;src\LCD_44780.c: 243: }
 13999                           ;src\LCD_44780.c: 245: }
 14000                           ;src\LCD_44780.c: 246: }
 14001                           ;src\LCD_44780.c: 247: }
 14002                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 14003  014BDA  0E8F               	movlw	low LCD_write_integer@convertedInt
 14004  014BDC  0100               	movlb	0	; () banked
 14005  014BDE  6F7F               	movwf	LCD_write_string@buffer& (0+255),b
 14006  014BE0  0E00               	movlw	high LCD_write_integer@convertedInt
 14007  014BE2  0100               	movlb	0	; () banked
 14008  014BE4  6F80               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 14009  014BE6  ECAC  F0B0         	call	_LCD_write_string	;wreg free
 14010  014BEA  0012               	return		;funcret
 14011  014BEC                     __end_of_LCD_write_integer:
 14012                           	opt stack 0
 14013                           tblptru	equ	0xFF8
 14014                           tblptrh	equ	0xFF7
 14015                           tblptrl	equ	0xFF6
 14016                           tablat	equ	0xFF5
 14017                           prodh	equ	0xFF4
 14018                           prodl	equ	0xFF3
 14019                           intcon	equ	0xFF2
 14020                           postinc0	equ	0xFEE
 14021                           wreg	equ	0xFE8
 14022                           indf1	equ	0xFE7
 14023                           plusw1	equ	0xFE3
 14024                           fsr1h	equ	0xFE2
 14025                           fsr1l	equ	0xFE1
 14026                           indf2	equ	0xFDF
 14027                           postinc2	equ	0xFDE
 14028                           plusw2	equ	0xFDB
 14029                           fsr2h	equ	0xFDA
 14030                           fsr2l	equ	0xFD9
 14031                           status	equ	0xFD8
 14032                           
 14033 ;; *************** function _itoa *****************
 14034 ;; Defined at:
 14035 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 14036 ;; Parameters:    Size  Location     Type
 14037 ;;  buf             2   30[BANK0 ] PTR unsigned char 
 14038 ;;		 -> LCD_write_integer@convertedInt(6), 
 14039 ;;  val             2   32[BANK0 ] int 
 14040 ;;  base            2   34[BANK0 ] int 
 14041 ;; Auto vars:     Size  Location     Type
 14042 ;;  cp              2   36[BANK0 ] PTR unsigned char 
 14043 ;;		 -> LCD_write_integer@convertedInt(6), 
 14044 ;; Return value:  Size  Location     Type
 14045 ;;                  2   30[BANK0 ] PTR unsigned char 
 14046 ;; Registers used:
 14047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14048 ;; Tracked objects:
 14049 ;;		On entry : 0/0
 14050 ;;		On exit  : 0/0
 14051 ;;		Unchanged: 0/0
 14052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14053 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14054 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14056 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14057 ;;Total ram usage:        8 bytes
 14058 ;; Hardware stack levels used:    1
 14059 ;; Hardware stack levels required when called:    5
 14060 ;; This function calls:
 14061 ;;		_utoa
 14062 ;; This function is called by:
 14063 ;;		_LCD_write_integer
 14064 ;; This function uses a non-reentrant model
 14065 ;;
 14066                           
 14067                           	psect	text28
 14068  015F28                     __ptext28:
 14069                           	opt stack 0
 14070  015F28                     _itoa:
 14071                           	opt stack 23
 14072                           
 14073                           ;incstack = 0
 14074  015F28  C07E  F084         	movff	itoa@buf,itoa@cp
 14075  015F2C  C07F  F085         	movff	itoa@buf+1,itoa@cp+1
 14076  015F30  0100               	movlb	0	; () banked
 14077  015F32  AF81               	btfss	(itoa@val+1)& (0+255),7,b
 14078  015F34  D00E               	goto	l5644
 14079                           
 14080                           ; BSR set to: 0
 14081  015F36  C07E  FFD9         	movff	itoa@buf,fsr2l
 14082  015F3A  C07F  FFDA         	movff	itoa@buf+1,fsr2h
 14083  015F3E  0E2D               	movlw	45
 14084  015F40  6EDF               	movwf	indf2,c
 14085                           
 14086                           ; BSR set to: 0
 14087  015F42  0100               	movlb	0	; () banked
 14088  015F44  4B7E               	infsnz	itoa@buf& (0+255),f,b
 14089  015F46  2B7F               	incf	(itoa@buf+1)& (0+255),f,b
 14090                           
 14091                           ; BSR set to: 0
 14092  015F48  0100               	movlb	0	; () banked
 14093  015F4A  6D80               	negf	itoa@val& (0+255),b
 14094  015F4C  1F81               	comf	(itoa@val+1)& (0+255),f,b
 14095  015F4E  B0D8               	btfsc	status,0,c
 14096  015F50  2B81               	incf	(itoa@val+1)& (0+255),f,b
 14097  015F52                     l5644:
 14098                           
 14099                           ; BSR set to: 0
 14100  015F52  C07E  F075         	movff	itoa@buf,utoa@buf
 14101  015F56  C07F  F076         	movff	itoa@buf+1,utoa@buf+1
 14102  015F5A  C080  F077         	movff	itoa@val,utoa@val
 14103  015F5E  C081  F078         	movff	itoa@val+1,utoa@val+1
 14104  015F62  C082  F079         	movff	itoa@base,utoa@base
 14105  015F66  C083  F07A         	movff	itoa@base+1,utoa@base+1
 14106  015F6A  EC07  F0AC         	call	_utoa	;wreg free
 14107  015F6E  0012               	return	
 14108  015F70                     __end_of_itoa:
 14109                           	opt stack 0
 14110                           tblptru	equ	0xFF8
 14111                           tblptrh	equ	0xFF7
 14112                           tblptrl	equ	0xFF6
 14113                           tablat	equ	0xFF5
 14114                           prodh	equ	0xFF4
 14115                           prodl	equ	0xFF3
 14116                           intcon	equ	0xFF2
 14117                           postinc0	equ	0xFEE
 14118                           wreg	equ	0xFE8
 14119                           indf1	equ	0xFE7
 14120                           plusw1	equ	0xFE3
 14121                           fsr1h	equ	0xFE2
 14122                           fsr1l	equ	0xFE1
 14123                           indf2	equ	0xFDF
 14124                           postinc2	equ	0xFDE
 14125                           plusw2	equ	0xFDB
 14126                           fsr2h	equ	0xFDA
 14127                           fsr2l	equ	0xFD9
 14128                           status	equ	0xFD8
 14129                           
 14130 ;; *************** function _utoa *****************
 14131 ;; Defined at:
 14132 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 14133 ;; Parameters:    Size  Location     Type
 14134 ;;  buf             2   21[BANK0 ] PTR unsigned char 
 14135 ;;		 -> LCD_write_integer@convertedInt(6), 
 14136 ;;  val             2   23[BANK0 ] unsigned int 
 14137 ;;  base            2   25[BANK0 ] int 
 14138 ;; Auto vars:     Size  Location     Type
 14139 ;;  v               2   27[BANK0 ] unsigned int 
 14140 ;;  c               1   29[BANK0 ] unsigned char 
 14141 ;; Return value:  Size  Location     Type
 14142 ;;                  2   21[BANK0 ] PTR unsigned char 
 14143 ;; Registers used:
 14144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14145 ;; Tracked objects:
 14146 ;;		On entry : 0/0
 14147 ;;		On exit  : 0/0
 14148 ;;		Unchanged: 0/0
 14149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14150 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14151 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14153 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14154 ;;Total ram usage:        9 bytes
 14155 ;; Hardware stack levels used:    1
 14156 ;; Hardware stack levels required when called:    4
 14157 ;; This function calls:
 14158 ;;		___lwdiv
 14159 ;;		___lwmod
 14160 ;; This function is called by:
 14161 ;;		_itoa
 14162 ;; This function uses a non-reentrant model
 14163 ;;
 14164                           
 14165                           	psect	text29
 14166  01580E                     __ptext29:
 14167                           	opt stack 0
 14168  01580E                     _utoa:
 14169                           	opt stack 23
 14170                           
 14171                           ;incstack = 0
 14172  01580E  C077  F07B         	movff	utoa@val,utoa@v
 14173  015812  C078  F07C         	movff	utoa@val+1,utoa@v+1
 14174  015816                     l5166:
 14175  015816  C07B  F06E         	movff	utoa@v,___lwdiv@dividend
 14176  01581A  C07C  F06F         	movff	utoa@v+1,___lwdiv@dividend+1
 14177  01581E  C079  F070         	movff	utoa@base,___lwdiv@divisor
 14178  015822  C07A  F071         	movff	utoa@base+1,___lwdiv@divisor+1
 14179  015826  ECB3  F0AE         	call	___lwdiv	;wreg free
 14180  01582A  C06E  F07B         	movff	?___lwdiv,utoa@v
 14181  01582E  C06F  F07C         	movff	?___lwdiv+1,utoa@v+1
 14182  015832  0100               	movlb	0	; () banked
 14183  015834  4B75               	infsnz	utoa@buf& (0+255),f,b
 14184  015836  2B76               	incf	(utoa@buf+1)& (0+255),f,b
 14185                           
 14186                           ; BSR set to: 0
 14187  015838  0100               	movlb	0	; () banked
 14188  01583A  517B               	movf	utoa@v& (0+255),w,b
 14189  01583C  0100               	movlb	0	; () banked
 14190  01583E  117C               	iorwf	(utoa@v+1)& (0+255),w,b
 14191  015840  A4D8               	btfss	status,2,c
 14192  015842  D7E9               	goto	l5166
 14193                           
 14194                           ; BSR set to: 0
 14195                           
 14196                           ; BSR set to: 0
 14197  015844  C075  FFD9         	movff	utoa@buf,fsr2l
 14198  015848  C076  FFDA         	movff	utoa@buf+1,fsr2h
 14199  01584C  0E00               	movlw	0
 14200  01584E  6EDF               	movwf	indf2,c
 14201                           
 14202                           ; BSR set to: 0
 14203  015850  0100               	movlb	0	; () banked
 14204  015852  0775               	decf	utoa@buf& (0+255),f,b
 14205  015854  A0D8               	btfss	status,0,c
 14206  015856  0776               	decf	(utoa@buf+1)& (0+255),f,b
 14207  015858                     l5176:
 14208                           
 14209                           ; BSR set to: 0
 14210  015858  C077  F06E         	movff	utoa@val,___lwmod@dividend
 14211  01585C  C078  F06F         	movff	utoa@val+1,___lwmod@dividend+1
 14212  015860  C079  F070         	movff	utoa@base,___lwmod@divisor
 14213  015864  C07A  F071         	movff	utoa@base+1,___lwmod@divisor+1
 14214  015868  ECEF  F0AE         	call	___lwmod	;wreg free
 14215  01586C  0100               	movlb	0	; () banked
 14216  01586E  516E               	movf	?___lwmod& (0+255),w,b
 14217  015870  0100               	movlb	0	; () banked
 14218  015872  6F7D               	movwf	utoa@c& (0+255),b
 14219                           
 14220                           ; BSR set to: 0
 14221  015874  C077  F06E         	movff	utoa@val,___lwdiv@dividend
 14222  015878  C078  F06F         	movff	utoa@val+1,___lwdiv@dividend+1
 14223  01587C  C079  F070         	movff	utoa@base,___lwdiv@divisor
 14224  015880  C07A  F071         	movff	utoa@base+1,___lwdiv@divisor+1
 14225  015884  ECB3  F0AE         	call	___lwdiv	;wreg free
 14226  015888  C06E  F077         	movff	?___lwdiv,utoa@val
 14227  01588C  C06F  F078         	movff	?___lwdiv+1,utoa@val+1
 14228  015890  0E09               	movlw	9
 14229  015892  0100               	movlb	0	; () banked
 14230  015894  657D               	cpfsgt	utoa@c& (0+255),b
 14231  015896  D003               	goto	l1376
 14232                           
 14233                           ; BSR set to: 0
 14234  015898  0E07               	movlw	7
 14235  01589A  0100               	movlb	0	; () banked
 14236  01589C  277D               	addwf	utoa@c& (0+255),f,b
 14237  01589E                     l1376:
 14238                           
 14239                           ; BSR set to: 0
 14240  01589E  0E30               	movlw	48
 14241  0158A0  0100               	movlb	0	; () banked
 14242  0158A2  277D               	addwf	utoa@c& (0+255),f,b
 14243                           
 14244                           ; BSR set to: 0
 14245  0158A4  C075  FFD9         	movff	utoa@buf,fsr2l
 14246  0158A8  C076  FFDA         	movff	utoa@buf+1,fsr2h
 14247  0158AC  C07D  FFDF         	movff	utoa@c,indf2
 14248                           
 14249                           ; BSR set to: 0
 14250  0158B0  0100               	movlb	0	; () banked
 14251  0158B2  0775               	decf	utoa@buf& (0+255),f,b
 14252  0158B4  A0D8               	btfss	status,0,c
 14253  0158B6  0776               	decf	(utoa@buf+1)& (0+255),f,b
 14254                           
 14255                           ; BSR set to: 0
 14256  0158B8  0100               	movlb	0	; () banked
 14257  0158BA  5177               	movf	utoa@val& (0+255),w,b
 14258  0158BC  0100               	movlb	0	; () banked
 14259  0158BE  1178               	iorwf	(utoa@val+1)& (0+255),w,b
 14260  0158C0  A4D8               	btfss	status,2,c
 14261  0158C2  D7CA               	goto	l5176
 14262                           
 14263                           ; BSR set to: 0
 14264                           ;	Return value of _utoa is never used
 14265                           
 14266                           ; BSR set to: 0
 14267  0158C4  0100               	movlb	0	; () banked
 14268  0158C6  4B75               	infsnz	utoa@buf& (0+255),f,b
 14269  0158C8  2B76               	incf	(utoa@buf+1)& (0+255),f,b
 14270  0158CA  0012               	return	
 14271  0158CC                     __end_of_utoa:
 14272                           	opt stack 0
 14273                           tblptru	equ	0xFF8
 14274                           tblptrh	equ	0xFF7
 14275                           tblptrl	equ	0xFF6
 14276                           tablat	equ	0xFF5
 14277                           prodh	equ	0xFF4
 14278                           prodl	equ	0xFF3
 14279                           intcon	equ	0xFF2
 14280                           postinc0	equ	0xFEE
 14281                           wreg	equ	0xFE8
 14282                           indf1	equ	0xFE7
 14283                           plusw1	equ	0xFE3
 14284                           fsr1h	equ	0xFE2
 14285                           fsr1l	equ	0xFE1
 14286                           indf2	equ	0xFDF
 14287                           postinc2	equ	0xFDE
 14288                           plusw2	equ	0xFDB
 14289                           fsr2h	equ	0xFDA
 14290                           fsr2l	equ	0xFD9
 14291                           status	equ	0xFD8
 14292                           
 14293 ;; *************** function ___lwmod *****************
 14294 ;; Defined at:
 14295 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14296 ;; Parameters:    Size  Location     Type
 14297 ;;  dividend        2   14[BANK0 ] unsigned int 
 14298 ;;  divisor         2   16[BANK0 ] unsigned int 
 14299 ;; Auto vars:     Size  Location     Type
 14300 ;;  counter         1   18[BANK0 ] unsigned char 
 14301 ;; Return value:  Size  Location     Type
 14302 ;;                  2   14[BANK0 ] unsigned int 
 14303 ;; Registers used:
 14304 ;;		wreg, status,2, status,0
 14305 ;; Tracked objects:
 14306 ;;		On entry : 0/0
 14307 ;;		On exit  : 0/0
 14308 ;;		Unchanged: 0/0
 14309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14310 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14311 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14313 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14314 ;;Total ram usage:        5 bytes
 14315 ;; Hardware stack levels used:    1
 14316 ;; Hardware stack levels required when called:    3
 14317 ;; This function calls:
 14318 ;;		Nothing
 14319 ;; This function is called by:
 14320 ;;		_utoa
 14321 ;; This function uses a non-reentrant model
 14322 ;;
 14323                           
 14324                           	psect	text30
 14325  015DDE                     __ptext30:
 14326                           	opt stack 0
 14327  015DDE                     ___lwmod:
 14328                           	opt stack 23
 14329                           
 14330                           ; BSR set to: 0
 14331                           ;incstack = 0
 14332  015DDE  0100               	movlb	0	; () banked
 14333  015DE0  5170               	movf	___lwmod@divisor& (0+255),w,b
 14334  015DE2  0100               	movlb	0	; () banked
 14335  015DE4  1171               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14336  015DE6  B4D8               	btfsc	status,2,c
 14337  015DE8  D026               	goto	l1465
 14338                           
 14339                           ; BSR set to: 0
 14340  015DEA  0E01               	movlw	1
 14341  015DEC  0100               	movlb	0	; () banked
 14342  015DEE  6F72               	movwf	___lwmod@counter& (0+255),b
 14343  015DF0  D006               	goto	l4724
 14344  015DF2                     l4722:
 14345                           
 14346                           ; BSR set to: 0
 14347  015DF2  0100               	movlb	0	; () banked
 14348  015DF4  90D8               	bcf	status,0,c
 14349  015DF6  3770               	rlcf	___lwmod@divisor& (0+255),f,b
 14350  015DF8  3771               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14351  015DFA  0100               	movlb	0	; () banked
 14352  015DFC  2B72               	incf	___lwmod@counter& (0+255),f,b
 14353  015DFE                     l4724:
 14354                           
 14355                           ; BSR set to: 0
 14356  015DFE  0100               	movlb	0	; () banked
 14357  015E00  AF71               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14358  015E02  D7F7               	goto	l4722
 14359  015E04                     l4726:
 14360                           
 14361                           ; BSR set to: 0
 14362  015E04  0100               	movlb	0	; () banked
 14363  015E06  5170               	movf	___lwmod@divisor& (0+255),w,b
 14364  015E08  0100               	movlb	0	; () banked
 14365  015E0A  5D6E               	subwf	___lwmod@dividend& (0+255),w,b
 14366  015E0C  0100               	movlb	0	; () banked
 14367  015E0E  5171               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14368  015E10  0100               	movlb	0	; () banked
 14369  015E12  596F               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14370  015E14  A0D8               	btfss	status,0,c
 14371  015E16  D008               	goto	l4730
 14372                           
 14373                           ; BSR set to: 0
 14374  015E18  0100               	movlb	0	; () banked
 14375  015E1A  5170               	movf	___lwmod@divisor& (0+255),w,b
 14376  015E1C  0100               	movlb	0	; () banked
 14377  015E1E  5F6E               	subwf	___lwmod@dividend& (0+255),f,b
 14378  015E20  0100               	movlb	0	; () banked
 14379  015E22  5171               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14380  015E24  0100               	movlb	0	; () banked
 14381  015E26  5B6F               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14382  015E28                     l4730:
 14383                           
 14384                           ; BSR set to: 0
 14385  015E28  0100               	movlb	0	; () banked
 14386  015E2A  90D8               	bcf	status,0,c
 14387  015E2C  3371               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14388  015E2E  3370               	rrcf	___lwmod@divisor& (0+255),f,b
 14389                           
 14390                           ; BSR set to: 0
 14391  015E30  0100               	movlb	0	; () banked
 14392  015E32  2F72               	decfsz	___lwmod@counter& (0+255),f,b
 14393  015E34  D7E7               	goto	l4726
 14394  015E36                     l1465:
 14395                           
 14396                           ; BSR set to: 0
 14397  015E36  C06E  F06E         	movff	___lwmod@dividend,?___lwmod
 14398  015E3A  C06F  F06F         	movff	___lwmod@dividend+1,?___lwmod+1
 14399                           
 14400                           ; BSR set to: 0
 14401  015E3E  0012               	return		;funcret
 14402  015E40                     __end_of___lwmod:
 14403                           	opt stack 0
 14404                           tblptru	equ	0xFF8
 14405                           tblptrh	equ	0xFF7
 14406                           tblptrl	equ	0xFF6
 14407                           tablat	equ	0xFF5
 14408                           prodh	equ	0xFF4
 14409                           prodl	equ	0xFF3
 14410                           intcon	equ	0xFF2
 14411                           postinc0	equ	0xFEE
 14412                           wreg	equ	0xFE8
 14413                           indf1	equ	0xFE7
 14414                           plusw1	equ	0xFE3
 14415                           fsr1h	equ	0xFE2
 14416                           fsr1l	equ	0xFE1
 14417                           indf2	equ	0xFDF
 14418                           postinc2	equ	0xFDE
 14419                           plusw2	equ	0xFDB
 14420                           fsr2h	equ	0xFDA
 14421                           fsr2l	equ	0xFD9
 14422                           status	equ	0xFD8
 14423                           
 14424 ;; *************** function ___lwdiv *****************
 14425 ;; Defined at:
 14426 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 14427 ;; Parameters:    Size  Location     Type
 14428 ;;  dividend        2   14[BANK0 ] unsigned int 
 14429 ;;  divisor         2   16[BANK0 ] unsigned int 
 14430 ;; Auto vars:     Size  Location     Type
 14431 ;;  quotient        2   18[BANK0 ] unsigned int 
 14432 ;;  counter         1   20[BANK0 ] unsigned char 
 14433 ;; Return value:  Size  Location     Type
 14434 ;;                  2   14[BANK0 ] unsigned int 
 14435 ;; Registers used:
 14436 ;;		wreg, status,2, status,0
 14437 ;; Tracked objects:
 14438 ;;		On entry : 0/0
 14439 ;;		On exit  : 0/0
 14440 ;;		Unchanged: 0/0
 14441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14442 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14443 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14445 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14446 ;;Total ram usage:        7 bytes
 14447 ;; Hardware stack levels used:    1
 14448 ;; Hardware stack levels required when called:    3
 14449 ;; This function calls:
 14450 ;;		Nothing
 14451 ;; This function is called by:
 14452 ;;		_utoa
 14453 ;; This function uses a non-reentrant model
 14454 ;;
 14455                           
 14456                           	psect	text31
 14457  015D66                     __ptext31:
 14458                           	opt stack 0
 14459  015D66                     ___lwdiv:
 14460                           	opt stack 23
 14461                           
 14462                           ; BSR set to: 0
 14463                           ;incstack = 0
 14464  015D66  0E00               	movlw	0
 14465  015D68  0100               	movlb	0	; () banked
 14466  015D6A  6F73               	movwf	(___lwdiv@quotient+1)& (0+255),b
 14467  015D6C  0E00               	movlw	0
 14468  015D6E  6F72               	movwf	___lwdiv@quotient& (0+255),b
 14469                           
 14470                           ; BSR set to: 0
 14471  015D70  0100               	movlb	0	; () banked
 14472  015D72  5170               	movf	___lwdiv@divisor& (0+255),w,b
 14473  015D74  0100               	movlb	0	; () banked
 14474  015D76  1171               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 14475  015D78  B4D8               	btfsc	status,2,c
 14476  015D7A  D02C               	goto	l1455
 14477                           
 14478                           ; BSR set to: 0
 14479  015D7C  0E01               	movlw	1
 14480  015D7E  0100               	movlb	0	; () banked
 14481  015D80  6F74               	movwf	___lwdiv@counter& (0+255),b
 14482  015D82  D006               	goto	l4704
 14483  015D84                     l4702:
 14484                           
 14485                           ; BSR set to: 0
 14486  015D84  0100               	movlb	0	; () banked
 14487  015D86  90D8               	bcf	status,0,c
 14488  015D88  3770               	rlcf	___lwdiv@divisor& (0+255),f,b
 14489  015D8A  3771               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 14490  015D8C  0100               	movlb	0	; () banked
 14491  015D8E  2B74               	incf	___lwdiv@counter& (0+255),f,b
 14492  015D90                     l4704:
 14493                           
 14494                           ; BSR set to: 0
 14495  015D90  0100               	movlb	0	; () banked
 14496  015D92  AF71               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 14497  015D94  D7F7               	goto	l4702
 14498  015D96                     l4706:
 14499                           
 14500                           ; BSR set to: 0
 14501  015D96  0100               	movlb	0	; () banked
 14502  015D98  90D8               	bcf	status,0,c
 14503  015D9A  3772               	rlcf	___lwdiv@quotient& (0+255),f,b
 14504  015D9C  3773               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 14505                           
 14506                           ; BSR set to: 0
 14507  015D9E  0100               	movlb	0	; () banked
 14508  015DA0  5170               	movf	___lwdiv@divisor& (0+255),w,b
 14509  015DA2  0100               	movlb	0	; () banked
 14510  015DA4  5D6E               	subwf	___lwdiv@dividend& (0+255),w,b
 14511  015DA6  0100               	movlb	0	; () banked
 14512  015DA8  5171               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14513  015DAA  0100               	movlb	0	; () banked
 14514  015DAC  596F               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 14515  015DAE  A0D8               	btfss	status,0,c
 14516  015DB0  D00A               	goto	l4714
 14517                           
 14518                           ; BSR set to: 0
 14519  015DB2  0100               	movlb	0	; () banked
 14520  015DB4  5170               	movf	___lwdiv@divisor& (0+255),w,b
 14521  015DB6  0100               	movlb	0	; () banked
 14522  015DB8  5F6E               	subwf	___lwdiv@dividend& (0+255),f,b
 14523  015DBA  0100               	movlb	0	; () banked
 14524  015DBC  5171               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14525  015DBE  0100               	movlb	0	; () banked
 14526  015DC0  5B6F               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 14527                           
 14528                           ; BSR set to: 0
 14529  015DC2  0100               	movlb	0	; () banked
 14530  015DC4  8172               	bsf	___lwdiv@quotient& (0+255),0,b
 14531  015DC6                     l4714:
 14532                           
 14533                           ; BSR set to: 0
 14534  015DC6  0100               	movlb	0	; () banked
 14535  015DC8  90D8               	bcf	status,0,c
 14536  015DCA  3371               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 14537  015DCC  3370               	rrcf	___lwdiv@divisor& (0+255),f,b
 14538                           
 14539                           ; BSR set to: 0
 14540  015DCE  0100               	movlb	0	; () banked
 14541  015DD0  2F74               	decfsz	___lwdiv@counter& (0+255),f,b
 14542  015DD2  D7E1               	goto	l4706
 14543  015DD4                     l1455:
 14544                           
 14545                           ; BSR set to: 0
 14546  015DD4  C072  F06E         	movff	___lwdiv@quotient,?___lwdiv
 14547  015DD8  C073  F06F         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14548                           
 14549                           ; BSR set to: 0
 14550  015DDC  0012               	return		;funcret
 14551  015DDE                     __end_of___lwdiv:
 14552                           	opt stack 0
 14553                           tblptru	equ	0xFF8
 14554                           tblptrh	equ	0xFF7
 14555                           tblptrl	equ	0xFF6
 14556                           tablat	equ	0xFF5
 14557                           prodh	equ	0xFF4
 14558                           prodl	equ	0xFF3
 14559                           intcon	equ	0xFF2
 14560                           postinc0	equ	0xFEE
 14561                           wreg	equ	0xFE8
 14562                           indf1	equ	0xFE7
 14563                           plusw1	equ	0xFE3
 14564                           fsr1h	equ	0xFE2
 14565                           fsr1l	equ	0xFE1
 14566                           indf2	equ	0xFDF
 14567                           postinc2	equ	0xFDE
 14568                           plusw2	equ	0xFDB
 14569                           fsr2h	equ	0xFDA
 14570                           fsr2l	equ	0xFD9
 14571                           status	equ	0xFD8
 14572                           
 14573 ;; *************** function _LCD_write_string *****************
 14574 ;; Defined at:
 14575 ;;		line 194 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14576 ;; Parameters:    Size  Location     Type
 14577 ;;  buffer          2   31[BANK0 ] PTR unsigned char 
 14578 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 14579 ;; Auto vars:     Size  Location     Type
 14580 ;;		None
 14581 ;; Return value:  Size  Location     Type
 14582 ;;		None               void
 14583 ;; Registers used:
 14584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14585 ;; Tracked objects:
 14586 ;;		On entry : 0/0
 14587 ;;		On exit  : 0/0
 14588 ;;		Unchanged: 0/0
 14589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14590 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14593 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14594 ;;Total ram usage:        2 bytes
 14595 ;; Hardware stack levels used:    1
 14596 ;; Hardware stack levels required when called:    8
 14597 ;; This function calls:
 14598 ;;		_LCD_write_char
 14599 ;; This function is called by:
 14600 ;;		_LCD_write_integer
 14601 ;;		_LCD_Handler
 14602 ;; This function uses a non-reentrant model
 14603 ;;
 14604                           
 14605                           	psect	text32
 14606  016158                     __ptext32:
 14607                           	opt stack 0
 14608  016158                     _LCD_write_string:
 14609                           	opt stack 21
 14610                           
 14611                           ;src\LCD_44780.c: 197: while(*buffer){
 14612                           
 14613                           ; BSR set to: 0
 14614                           ;incstack = 0
 14615  016158  D00A               	goto	l8102
 14616  01615A                     l8098:
 14617                           
 14618                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 14619  01615A  C07F  FFD9         	movff	LCD_write_string@buffer,fsr2l
 14620  01615E  C080  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 14621  016162  50DF               	movf	indf2,w,c
 14622  016164  EC68  F0AE         	call	_LCD_write_char
 14623                           
 14624                           ;src\LCD_44780.c: 202: buffer++;
 14625  016168  0100               	movlb	0	; () banked
 14626  01616A  4B7F               	infsnz	LCD_write_string@buffer& (0+255),f,b
 14627  01616C  2B80               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 14628  01616E                     l8102:
 14629  01616E  C07F  FFD9         	movff	LCD_write_string@buffer,fsr2l
 14630  016172  C080  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 14631  016176  50DF               	movf	indf2,w,c
 14632  016178  B4D8               	btfsc	status,2,c
 14633  01617A  0012               	return	
 14634  01617C  D7EE               	goto	l8098
 14635  01617E                     __end_of_LCD_write_string:
 14636                           	opt stack 0
 14637                           tblptru	equ	0xFF8
 14638                           tblptrh	equ	0xFF7
 14639                           tblptrl	equ	0xFF6
 14640                           tablat	equ	0xFF5
 14641                           prodh	equ	0xFF4
 14642                           prodl	equ	0xFF3
 14643                           intcon	equ	0xFF2
 14644                           postinc0	equ	0xFEE
 14645                           wreg	equ	0xFE8
 14646                           indf1	equ	0xFE7
 14647                           plusw1	equ	0xFE3
 14648                           fsr1h	equ	0xFE2
 14649                           fsr1l	equ	0xFE1
 14650                           indf2	equ	0xFDF
 14651                           postinc2	equ	0xFDE
 14652                           plusw2	equ	0xFDB
 14653                           fsr2h	equ	0xFDA
 14654                           fsr2l	equ	0xFD9
 14655                           status	equ	0xFD8
 14656                           
 14657 ;; *************** function _LCD_write_char *****************
 14658 ;; Defined at:
 14659 ;;		line 145 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14660 ;; Parameters:    Size  Location     Type
 14661 ;;  value           1    wreg     unsigned char 
 14662 ;; Auto vars:     Size  Location     Type
 14663 ;;  value           1   30[BANK0 ] unsigned char 
 14664 ;;  D0              1   29[BANK0 ] unsigned char 
 14665 ;;  D1              1   28[BANK0 ] unsigned char 
 14666 ;;  D2              1   27[BANK0 ] unsigned char 
 14667 ;;  D3              1   26[BANK0 ] unsigned char 
 14668 ;; Return value:  Size  Location     Type
 14669 ;;		None               void
 14670 ;; Registers used:
 14671 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14672 ;; Tracked objects:
 14673 ;;		On entry : 0/0
 14674 ;;		On exit  : 0/0
 14675 ;;		Unchanged: 0/0
 14676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14678 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14680 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14681 ;;Total ram usage:        5 bytes
 14682 ;; Hardware stack levels used:    1
 14683 ;; Hardware stack levels required when called:    7
 14684 ;; This function calls:
 14685 ;;		_LCD_send_command
 14686 ;; This function is called by:
 14687 ;;		_LCD_write_message
 14688 ;;		_LCD_write_string
 14689 ;; This function uses a non-reentrant model
 14690 ;;
 14691                           
 14692                           	psect	text33
 14693  015CD0                     __ptext33:
 14694                           	opt stack 0
 14695  015CD0                     _LCD_write_char:
 14696                           	opt stack 22
 14697                           
 14698                           ;incstack = 0
 14699                           ;LCD_write_char@value stored from wreg
 14700  015CD0  0100               	movlb	0	; () banked
 14701  015CD2  6F7E               	movwf	LCD_write_char@value& (0+255),b
 14702                           
 14703                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 14704                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 14705  015CD4  848D               	bsf	3981,2,c	;volatile
 14706                           
 14707                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 14708  015CD6  0100               	movlb	0	; () banked
 14709  015CD8  457E               	rlncf	LCD_write_char@value& (0+255),w,b
 14710  015CDA  0B01               	andlw	1
 14711  015CDC  0100               	movlb	0	; () banked
 14712  015CDE  6F7A               	movwf	LCD_write_char@D3& (0+255),b
 14713                           
 14714                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 14715  015CE0  0100               	movlb	0	; () banked
 14716  015CE2  457E               	rlncf	LCD_write_char@value& (0+255),w,b
 14717  015CE4  46E8               	rlncf	wreg,f,c
 14718  015CE6  0B03               	andlw	3
 14719  015CE8  0B01               	andlw	1
 14720  015CEA  0100               	movlb	0	; () banked
 14721  015CEC  6F7B               	movwf	LCD_write_char@D2& (0+255),b
 14722                           
 14723                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 14724  015CEE  0100               	movlb	0	; () banked
 14725  015CF0  397E               	swapf	LCD_write_char@value& (0+255),w,b
 14726  015CF2  42E8               	rrncf	wreg,f,c
 14727  015CF4  0B07               	andlw	7
 14728  015CF6  0B01               	andlw	1
 14729  015CF8  0100               	movlb	0	; () banked
 14730  015CFA  6F7C               	movwf	LCD_write_char@D1& (0+255),b
 14731                           
 14732                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 14733  015CFC  0100               	movlb	0	; () banked
 14734  015CFE  397E               	swapf	LCD_write_char@value& (0+255),w,b
 14735  015D00  0B0F               	andlw	15
 14736  015D02  0B01               	andlw	1
 14737  015D04  0100               	movlb	0	; () banked
 14738  015D06  6F7D               	movwf	LCD_write_char@D0& (0+255),b
 14739                           
 14740                           ; BSR set to: 0
 14741                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 14742  015D08  C07B  F076         	movff	LCD_write_char@D2,LCD_send_command@D2
 14743  015D0C  C07C  F077         	movff	LCD_write_char@D1,LCD_send_command@D1
 14744  015D10  C07D  F078         	movff	LCD_write_char@D0,LCD_send_command@D0
 14745  015D14  0100               	movlb	0	; () banked
 14746  015D16  517A               	movf	LCD_write_char@D3& (0+255),w,b
 14747  015D18  ECDA  F0AF         	call	_LCD_send_command
 14748                           
 14749                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 14750  015D1C  0100               	movlb	0	; () banked
 14751  015D1E  397E               	swapf	LCD_write_char@value& (0+255),w,b
 14752  015D20  46E8               	rlncf	wreg,f,c
 14753  015D22  0B1F               	andlw	31
 14754  015D24  0B01               	andlw	1
 14755  015D26  0100               	movlb	0	; () banked
 14756  015D28  6F7A               	movwf	LCD_write_char@D3& (0+255),b
 14757                           
 14758                           ; BSR set to: 0
 14759                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 14760  015D2A  0100               	movlb	0	; () banked
 14761  015D2C  417E               	rrncf	LCD_write_char@value& (0+255),w,b
 14762  015D2E  42E8               	rrncf	wreg,f,c
 14763  015D30  0B3F               	andlw	63
 14764  015D32  0B01               	andlw	1
 14765  015D34  0100               	movlb	0	; () banked
 14766  015D36  6F7B               	movwf	LCD_write_char@D2& (0+255),b
 14767                           
 14768                           ; BSR set to: 0
 14769                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 14770  015D38  0100               	movlb	0	; () banked
 14771  015D3A  90D8               	bcf	status,0,c
 14772  015D3C  317E               	rrcf	LCD_write_char@value& (0+255),w,b
 14773  015D3E  0B01               	andlw	1
 14774  015D40  0100               	movlb	0	; () banked
 14775  015D42  6F7C               	movwf	LCD_write_char@D1& (0+255),b
 14776                           
 14777                           ; BSR set to: 0
 14778                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 14779  015D44  0100               	movlb	0	; () banked
 14780  015D46  517E               	movf	LCD_write_char@value& (0+255),w,b
 14781  015D48  0B01               	andlw	1
 14782  015D4A  0100               	movlb	0	; () banked
 14783  015D4C  6F7D               	movwf	LCD_write_char@D0& (0+255),b
 14784                           
 14785                           ; BSR set to: 0
 14786                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 14787  015D4E  C07B  F076         	movff	LCD_write_char@D2,LCD_send_command@D2
 14788  015D52  C07C  F077         	movff	LCD_write_char@D1,LCD_send_command@D1
 14789  015D56  C07D  F078         	movff	LCD_write_char@D0,LCD_send_command@D0
 14790  015D5A  0100               	movlb	0	; () banked
 14791  015D5C  517A               	movf	LCD_write_char@D3& (0+255),w,b
 14792  015D5E  ECDA  F0AF         	call	_LCD_send_command
 14793                           
 14794                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 14795  015D62  948D               	bcf	3981,2,c	;volatile
 14796  015D64  0012               	return		;funcret
 14797  015D66                     __end_of_LCD_write_char:
 14798                           	opt stack 0
 14799                           tblptru	equ	0xFF8
 14800                           tblptrh	equ	0xFF7
 14801                           tblptrl	equ	0xFF6
 14802                           tablat	equ	0xFF5
 14803                           prodh	equ	0xFF4
 14804                           prodl	equ	0xFF3
 14805                           intcon	equ	0xFF2
 14806                           postinc0	equ	0xFEE
 14807                           wreg	equ	0xFE8
 14808                           indf1	equ	0xFE7
 14809                           plusw1	equ	0xFE3
 14810                           fsr1h	equ	0xFE2
 14811                           fsr1l	equ	0xFE1
 14812                           indf2	equ	0xFDF
 14813                           postinc2	equ	0xFDE
 14814                           plusw2	equ	0xFDB
 14815                           fsr2h	equ	0xFDA
 14816                           fsr2l	equ	0xFD9
 14817                           status	equ	0xFD8
 14818                           
 14819 ;; *************** function _LCD_initialize *****************
 14820 ;; Defined at:
 14821 ;;		line 283 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14822 ;; Parameters:    Size  Location     Type
 14823 ;;  quartz_frequ    1    wreg     unsigned char 
 14824 ;; Auto vars:     Size  Location     Type
 14825 ;;  quartz_frequ    1   28[BANK0 ] unsigned char 
 14826 ;; Return value:  Size  Location     Type
 14827 ;;		None               void
 14828 ;; Registers used:
 14829 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14830 ;; Tracked objects:
 14831 ;;		On entry : 0/0
 14832 ;;		On exit  : 0/0
 14833 ;;		Unchanged: 0/0
 14834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14836 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14838 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14839 ;;Total ram usage:        1 bytes
 14840 ;; Hardware stack levels used:    1
 14841 ;; Hardware stack levels required when called:    8
 14842 ;; This function calls:
 14843 ;;		_LCD_clear
 14844 ;;		_LCD_cursor
 14845 ;;		_LCD_send_command
 14846 ;;		_delay_ms
 14847 ;;		_delay_set_quartz
 14848 ;; This function is called by:
 14849 ;;		_main
 14850 ;;		_LCD_Handler
 14851 ;;		_board_initialization
 14852 ;; This function uses a non-reentrant model
 14853 ;;
 14854                           
 14855                           	psect	text34
 14856  0153EA                     __ptext34:
 14857                           	opt stack 0
 14858  0153EA                     _LCD_initialize:
 14859                           	opt stack 21
 14860                           
 14861                           ;incstack = 0
 14862                           ;LCD_initialize@quartz_frequency stored from wreg
 14863  0153EA  0100               	movlb	0	; () banked
 14864  0153EC  6F7C               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 14865                           
 14866                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 14867  0153EE  0100               	movlb	0	; () banked
 14868  0153F0  517C               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 14869  0153F2  EC3F  F0B1         	call	_delay_set_quartz
 14870                           
 14871                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 14872  0153F6  948D               	bcf	3981,2,c	;volatile
 14873                           
 14874                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 14875  0153F8  928B               	bcf	3979,1,c	;volatile
 14876                           
 14877                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 14878  0153FA  908B               	bcf	3979,0,c	;volatile
 14879                           
 14880                           ;src\LCD_44780.c: 291: delay_ms (100);
 14881  0153FC  0E00               	movlw	0
 14882  0153FE  0100               	movlb	0	; () banked
 14883  015400  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14884  015402  0E64               	movlw	100
 14885  015404  6F74               	movwf	delay_ms@value_ms& (0+255),b
 14886  015406  ECF7  F0AF         	call	_delay_ms	;wreg free
 14887                           
 14888                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 14889  01540A  0E00               	movlw	0
 14890  01540C  0100               	movlb	0	; () banked
 14891  01540E  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14892  015410  0E01               	movlw	1
 14893  015412  0100               	movlb	0	; () banked
 14894  015414  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14895  015416  0E01               	movlw	1
 14896  015418  0100               	movlb	0	; () banked
 14897  01541A  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14898  01541C  0E00               	movlw	0
 14899  01541E  ECDA  F0AF         	call	_LCD_send_command
 14900                           
 14901                           ;src\LCD_44780.c: 293: delay_ms (100);
 14902  015422  0E00               	movlw	0
 14903  015424  0100               	movlb	0	; () banked
 14904  015426  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14905  015428  0E64               	movlw	100
 14906  01542A  6F74               	movwf	delay_ms@value_ms& (0+255),b
 14907  01542C  ECF7  F0AF         	call	_delay_ms	;wreg free
 14908                           
 14909                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 14910  015430  0E00               	movlw	0
 14911  015432  0100               	movlb	0	; () banked
 14912  015434  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14913  015436  0E01               	movlw	1
 14914  015438  0100               	movlb	0	; () banked
 14915  01543A  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14916  01543C  0E01               	movlw	1
 14917  01543E  0100               	movlb	0	; () banked
 14918  015440  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14919  015442  0E00               	movlw	0
 14920  015444  ECDA  F0AF         	call	_LCD_send_command
 14921                           
 14922                           ;src\LCD_44780.c: 295: delay_ms (10);
 14923  015448  0E00               	movlw	0
 14924  01544A  0100               	movlb	0	; () banked
 14925  01544C  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
 14926  01544E  0E0A               	movlw	10
 14927  015450  6F74               	movwf	delay_ms@value_ms& (0+255),b
 14928  015452  ECF7  F0AF         	call	_delay_ms	;wreg free
 14929                           
 14930                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 14931  015456  0E00               	movlw	0
 14932  015458  0100               	movlb	0	; () banked
 14933  01545A  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14934  01545C  0E01               	movlw	1
 14935  01545E  0100               	movlb	0	; () banked
 14936  015460  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14937  015462  0E01               	movlw	1
 14938  015464  0100               	movlb	0	; () banked
 14939  015466  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14940  015468  0E00               	movlw	0
 14941  01546A  ECDA  F0AF         	call	_LCD_send_command
 14942                           
 14943                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 14944  01546E  0E00               	movlw	0
 14945  015470  0100               	movlb	0	; () banked
 14946  015472  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14947  015474  0E01               	movlw	1
 14948  015476  0100               	movlb	0	; () banked
 14949  015478  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14950  01547A  0E00               	movlw	0
 14951  01547C  0100               	movlb	0	; () banked
 14952  01547E  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14953  015480  0E00               	movlw	0
 14954  015482  ECDA  F0AF         	call	_LCD_send_command
 14955                           
 14956                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 14957  015486  0E00               	movlw	0
 14958  015488  0100               	movlb	0	; () banked
 14959  01548A  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14960  01548C  0E01               	movlw	1
 14961  01548E  0100               	movlb	0	; () banked
 14962  015490  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14963  015492  0E00               	movlw	0
 14964  015494  0100               	movlb	0	; () banked
 14965  015496  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14966  015498  0E00               	movlw	0
 14967  01549A  ECDA  F0AF         	call	_LCD_send_command
 14968                           
 14969                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 14970  01549E  0E00               	movlw	0
 14971  0154A0  0100               	movlb	0	; () banked
 14972  0154A2  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14973  0154A4  0E00               	movlw	0
 14974  0154A6  0100               	movlb	0	; () banked
 14975  0154A8  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14976  0154AA  0E00               	movlw	0
 14977  0154AC  0100               	movlb	0	; () banked
 14978  0154AE  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14979  0154B0  0E01               	movlw	1
 14980  0154B2  ECDA  F0AF         	call	_LCD_send_command
 14981                           
 14982                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 14983  0154B6  0E00               	movlw	0
 14984  0154B8  0100               	movlb	0	; () banked
 14985  0154BA  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14986  0154BC  0E00               	movlw	0
 14987  0154BE  0100               	movlb	0	; () banked
 14988  0154C0  6F77               	movwf	LCD_send_command@D1& (0+255),b
 14989  0154C2  0E00               	movlw	0
 14990  0154C4  0100               	movlb	0	; () banked
 14991  0154C6  6F78               	movwf	LCD_send_command@D0& (0+255),b
 14992  0154C8  0E00               	movlw	0
 14993  0154CA  ECDA  F0AF         	call	_LCD_send_command
 14994                           
 14995                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 14996  0154CE  0E00               	movlw	0
 14997  0154D0  0100               	movlb	0	; () banked
 14998  0154D2  6F76               	movwf	LCD_send_command@D2& (0+255),b
 14999  0154D4  0E00               	movlw	0
 15000  0154D6  0100               	movlb	0	; () banked
 15001  0154D8  6F77               	movwf	LCD_send_command@D1& (0+255),b
 15002  0154DA  0E00               	movlw	0
 15003  0154DC  0100               	movlb	0	; () banked
 15004  0154DE  6F78               	movwf	LCD_send_command@D0& (0+255),b
 15005  0154E0  0E01               	movlw	1
 15006  0154E2  ECDA  F0AF         	call	_LCD_send_command
 15007                           
 15008                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 15009  0154E6  0E00               	movlw	0
 15010  0154E8  0100               	movlb	0	; () banked
 15011  0154EA  6F76               	movwf	LCD_send_command@D2& (0+255),b
 15012  0154EC  0E00               	movlw	0
 15013  0154EE  0100               	movlb	0	; () banked
 15014  0154F0  6F77               	movwf	LCD_send_command@D1& (0+255),b
 15015  0154F2  0E00               	movlw	0
 15016  0154F4  0100               	movlb	0	; () banked
 15017  0154F6  6F78               	movwf	LCD_send_command@D0& (0+255),b
 15018  0154F8  0E00               	movlw	0
 15019  0154FA  ECDA  F0AF         	call	_LCD_send_command
 15020                           
 15021                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 15022  0154FE  0E00               	movlw	0
 15023  015500  0100               	movlb	0	; () banked
 15024  015502  6F76               	movwf	LCD_send_command@D2& (0+255),b
 15025  015504  0E00               	movlw	0
 15026  015506  0100               	movlb	0	; () banked
 15027  015508  6F77               	movwf	LCD_send_command@D1& (0+255),b
 15028  01550A  0E01               	movlw	1
 15029  01550C  0100               	movlb	0	; () banked
 15030  01550E  6F78               	movwf	LCD_send_command@D0& (0+255),b
 15031  015510  0E00               	movlw	0
 15032  015512  ECDA  F0AF         	call	_LCD_send_command
 15033                           
 15034                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 15035  015516  0E00               	movlw	0
 15036  015518  0100               	movlb	0	; () banked
 15037  01551A  6F76               	movwf	LCD_send_command@D2& (0+255),b
 15038  01551C  0E00               	movlw	0
 15039  01551E  0100               	movlb	0	; () banked
 15040  015520  6F77               	movwf	LCD_send_command@D1& (0+255),b
 15041  015522  0E00               	movlw	0
 15042  015524  0100               	movlb	0	; () banked
 15043  015526  6F78               	movwf	LCD_send_command@D0& (0+255),b
 15044  015528  0E00               	movlw	0
 15045  01552A  ECDA  F0AF         	call	_LCD_send_command
 15046                           
 15047                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 15048  01552E  0E01               	movlw	1
 15049  015530  0100               	movlb	0	; () banked
 15050  015532  6F76               	movwf	LCD_send_command@D2& (0+255),b
 15051  015534  0E01               	movlw	1
 15052  015536  0100               	movlb	0	; () banked
 15053  015538  6F77               	movwf	LCD_send_command@D1& (0+255),b
 15054  01553A  0E00               	movlw	0
 15055  01553C  0100               	movlb	0	; () banked
 15056  01553E  6F78               	movwf	LCD_send_command@D0& (0+255),b
 15057  015540  0E00               	movlw	0
 15058  015542  ECDA  F0AF         	call	_LCD_send_command
 15059                           
 15060                           ;src\LCD_44780.c: 312: LCD_clear ();
 15061  015546  EC7E  F0B0         	call	_LCD_clear	;wreg free
 15062                           
 15063                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 15064  01554A  0E00               	movlw	0
 15065  01554C  0100               	movlb	0	; () banked
 15066  01554E  6F7A               	movwf	LCD_cursor@blinking& (0+255),b
 15067  015550  0E00               	movlw	0
 15068  015552  EC65  F0B0         	call	_LCD_cursor
 15069  015556  0012               	return		;funcret
 15070  015558                     __end_of_LCD_initialize:
 15071                           	opt stack 0
 15072                           tblptru	equ	0xFF8
 15073                           tblptrh	equ	0xFF7
 15074                           tblptrl	equ	0xFF6
 15075                           tablat	equ	0xFF5
 15076                           prodh	equ	0xFF4
 15077                           prodl	equ	0xFF3
 15078                           intcon	equ	0xFF2
 15079                           postinc0	equ	0xFEE
 15080                           wreg	equ	0xFE8
 15081                           indf1	equ	0xFE7
 15082                           plusw1	equ	0xFE3
 15083                           fsr1h	equ	0xFE2
 15084                           fsr1l	equ	0xFE1
 15085                           indf2	equ	0xFDF
 15086                           postinc2	equ	0xFDE
 15087                           plusw2	equ	0xFDB
 15088                           fsr2h	equ	0xFDA
 15089                           fsr2l	equ	0xFD9
 15090                           status	equ	0xFD8
 15091                           
 15092 ;; *************** function _delay_set_quartz *****************
 15093 ;; Defined at:
 15094 ;;		line 115 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 15095 ;; Parameters:    Size  Location     Type
 15096 ;;  frequency       1    wreg     unsigned char 
 15097 ;; Auto vars:     Size  Location     Type
 15098 ;;  frequency       1   14[BANK0 ] unsigned char 
 15099 ;; Return value:  Size  Location     Type
 15100 ;;		None               void
 15101 ;; Registers used:
 15102 ;;		wreg
 15103 ;; Tracked objects:
 15104 ;;		On entry : 0/0
 15105 ;;		On exit  : 0/0
 15106 ;;		Unchanged: 0/0
 15107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15109 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15111 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15112 ;;Total ram usage:        1 bytes
 15113 ;; Hardware stack levels used:    1
 15114 ;; Hardware stack levels required when called:    3
 15115 ;; This function calls:
 15116 ;;		Nothing
 15117 ;; This function is called by:
 15118 ;;		_LCD_initialize
 15119 ;; This function uses a non-reentrant model
 15120 ;;
 15121                           
 15122                           	psect	text35
 15123  01627E                     __ptext35:
 15124                           	opt stack 0
 15125  01627E                     _delay_set_quartz:
 15126                           	opt stack 25
 15127                           
 15128                           ;incstack = 0
 15129                           ;delay_set_quartz@frequency stored from wreg
 15130  01627E  0100               	movlb	0	; () banked
 15131  016280  6F6E               	movwf	delay_set_quartz@frequency& (0+255),b
 15132                           
 15133                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 15134  016282  C06E  F0F1         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 15135  016286  0012               	return		;funcret
 15136  016288                     __end_of_delay_set_quartz:
 15137                           	opt stack 0
 15138                           tblptru	equ	0xFF8
 15139                           tblptrh	equ	0xFF7
 15140                           tblptrl	equ	0xFF6
 15141                           tablat	equ	0xFF5
 15142                           prodh	equ	0xFF4
 15143                           prodl	equ	0xFF3
 15144                           intcon	equ	0xFF2
 15145                           postinc0	equ	0xFEE
 15146                           wreg	equ	0xFE8
 15147                           indf1	equ	0xFE7
 15148                           plusw1	equ	0xFE3
 15149                           fsr1h	equ	0xFE2
 15150                           fsr1l	equ	0xFE1
 15151                           indf2	equ	0xFDF
 15152                           postinc2	equ	0xFDE
 15153                           plusw2	equ	0xFDB
 15154                           fsr2h	equ	0xFDA
 15155                           fsr2l	equ	0xFD9
 15156                           status	equ	0xFD8
 15157                           
 15158 ;; *************** function _LCD_cursor *****************
 15159 ;; Defined at:
 15160 ;;		line 266 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15161 ;; Parameters:    Size  Location     Type
 15162 ;;  active          1    wreg     unsigned char 
 15163 ;;  blinking        1   26[BANK0 ] unsigned char 
 15164 ;; Auto vars:     Size  Location     Type
 15165 ;;  active          1   27[BANK0 ] unsigned char 
 15166 ;; Return value:  Size  Location     Type
 15167 ;;		None               void
 15168 ;; Registers used:
 15169 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15170 ;; Tracked objects:
 15171 ;;		On entry : 0/0
 15172 ;;		On exit  : 0/0
 15173 ;;		Unchanged: 0/0
 15174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15175 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15176 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15178 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15179 ;;Total ram usage:        2 bytes
 15180 ;; Hardware stack levels used:    1
 15181 ;; Hardware stack levels required when called:    7
 15182 ;; This function calls:
 15183 ;;		_LCD_send_command
 15184 ;; This function is called by:
 15185 ;;		_LCD_initialize
 15186 ;; This function uses a non-reentrant model
 15187 ;;
 15188                           
 15189                           	psect	text36
 15190  0160CA                     __ptext36:
 15191                           	opt stack 0
 15192  0160CA                     _LCD_cursor:
 15193                           	opt stack 21
 15194                           
 15195                           ;incstack = 0
 15196                           ;LCD_cursor@active stored from wreg
 15197  0160CA  0100               	movlb	0	; () banked
 15198  0160CC  6F7B               	movwf	LCD_cursor@active& (0+255),b
 15199                           
 15200                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 15201  0160CE  0E00               	movlw	0
 15202  0160D0  0100               	movlb	0	; () banked
 15203  0160D2  6F76               	movwf	LCD_send_command@D2& (0+255),b
 15204  0160D4  0E00               	movlw	0
 15205  0160D6  0100               	movlb	0	; () banked
 15206  0160D8  6F77               	movwf	LCD_send_command@D1& (0+255),b
 15207  0160DA  0E00               	movlw	0
 15208  0160DC  0100               	movlb	0	; () banked
 15209  0160DE  6F78               	movwf	LCD_send_command@D0& (0+255),b
 15210  0160E0  0E00               	movlw	0
 15211  0160E2  ECDA  F0AF         	call	_LCD_send_command
 15212                           
 15213                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 15214  0160E6  0E01               	movlw	1
 15215  0160E8  0100               	movlb	0	; () banked
 15216  0160EA  6F76               	movwf	LCD_send_command@D2& (0+255),b
 15217  0160EC  C07B  F077         	movff	LCD_cursor@active,LCD_send_command@D1
 15218  0160F0  C07A  F078         	movff	LCD_cursor@blinking,LCD_send_command@D0
 15219  0160F4  0E01               	movlw	1
 15220  0160F6  ECDA  F0AF         	call	_LCD_send_command
 15221  0160FA  0012               	return		;funcret
 15222  0160FC                     __end_of_LCD_cursor:
 15223                           	opt stack 0
 15224                           tblptru	equ	0xFF8
 15225                           tblptrh	equ	0xFF7
 15226                           tblptrl	equ	0xFF6
 15227                           tablat	equ	0xFF5
 15228                           prodh	equ	0xFF4
 15229                           prodl	equ	0xFF3
 15230                           intcon	equ	0xFF2
 15231                           postinc0	equ	0xFEE
 15232                           wreg	equ	0xFE8
 15233                           indf1	equ	0xFE7
 15234                           plusw1	equ	0xFE3
 15235                           fsr1h	equ	0xFE2
 15236                           fsr1l	equ	0xFE1
 15237                           indf2	equ	0xFDF
 15238                           postinc2	equ	0xFDE
 15239                           plusw2	equ	0xFDB
 15240                           fsr2h	equ	0xFDA
 15241                           fsr2l	equ	0xFD9
 15242                           status	equ	0xFD8
 15243                           
 15244 ;; *************** function _LCD_clear *****************
 15245 ;; Defined at:
 15246 ;;		line 257 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15247 ;; Parameters:    Size  Location     Type
 15248 ;;		None
 15249 ;; Auto vars:     Size  Location     Type
 15250 ;;		None
 15251 ;; Return value:  Size  Location     Type
 15252 ;;		None               void
 15253 ;; Registers used:
 15254 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15255 ;; Tracked objects:
 15256 ;;		On entry : 0/0
 15257 ;;		On exit  : 0/0
 15258 ;;		Unchanged: 0/0
 15259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15264 ;;Total ram usage:        0 bytes
 15265 ;; Hardware stack levels used:    1
 15266 ;; Hardware stack levels required when called:    7
 15267 ;; This function calls:
 15268 ;;		_LCD_send_command
 15269 ;; This function is called by:
 15270 ;;		_LCD_initialize
 15271 ;;		_LCD_Handler
 15272 ;;		_board_initialization
 15273 ;; This function uses a non-reentrant model
 15274 ;;
 15275                           
 15276                           	psect	text37
 15277  0160FC                     __ptext37:
 15278                           	opt stack 0
 15279  0160FC                     _LCD_clear:
 15280                           	opt stack 21
 15281                           
 15282                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 15283                           
 15284                           ;incstack = 0
 15285  0160FC  0E00               	movlw	0
 15286  0160FE  0100               	movlb	0	; () banked
 15287  016100  6F76               	movwf	LCD_send_command@D2& (0+255),b
 15288  016102  0E00               	movlw	0
 15289  016104  0100               	movlb	0	; () banked
 15290  016106  6F77               	movwf	LCD_send_command@D1& (0+255),b
 15291  016108  0E00               	movlw	0
 15292  01610A  0100               	movlb	0	; () banked
 15293  01610C  6F78               	movwf	LCD_send_command@D0& (0+255),b
 15294  01610E  0E00               	movlw	0
 15295  016110  ECDA  F0AF         	call	_LCD_send_command
 15296                           
 15297                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 15298  016114  0E00               	movlw	0
 15299  016116  0100               	movlb	0	; () banked
 15300  016118  6F76               	movwf	LCD_send_command@D2& (0+255),b
 15301  01611A  0E00               	movlw	0
 15302  01611C  0100               	movlb	0	; () banked
 15303  01611E  6F77               	movwf	LCD_send_command@D1& (0+255),b
 15304  016120  0E01               	movlw	1
 15305  016122  0100               	movlb	0	; () banked
 15306  016124  6F78               	movwf	LCD_send_command@D0& (0+255),b
 15307  016126  0E00               	movlw	0
 15308  016128  ECDA  F0AF         	call	_LCD_send_command
 15309  01612C  0012               	return		;funcret
 15310  01612E                     __end_of_LCD_clear:
 15311                           	opt stack 0
 15312                           tblptru	equ	0xFF8
 15313                           tblptrh	equ	0xFF7
 15314                           tblptrl	equ	0xFF6
 15315                           tablat	equ	0xFF5
 15316                           prodh	equ	0xFF4
 15317                           prodl	equ	0xFF3
 15318                           intcon	equ	0xFF2
 15319                           postinc0	equ	0xFEE
 15320                           wreg	equ	0xFE8
 15321                           indf1	equ	0xFE7
 15322                           plusw1	equ	0xFE3
 15323                           fsr1h	equ	0xFE2
 15324                           fsr1l	equ	0xFE1
 15325                           indf2	equ	0xFDF
 15326                           postinc2	equ	0xFDE
 15327                           plusw2	equ	0xFDB
 15328                           fsr2h	equ	0xFDA
 15329                           fsr2l	equ	0xFD9
 15330                           status	equ	0xFD8
 15331                           
 15332 ;; *************** function _LCD_goto_xy *****************
 15333 ;; Defined at:
 15334 ;;		line 136 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15335 ;; Parameters:    Size  Location     Type
 15336 ;;  x               1    wreg     unsigned char 
 15337 ;;  y               1   29[BANK0 ] unsigned char 
 15338 ;; Auto vars:     Size  Location     Type
 15339 ;;  x               1   30[BANK0 ] unsigned char 
 15340 ;; Return value:  Size  Location     Type
 15341 ;;		None               void
 15342 ;; Registers used:
 15343 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15344 ;; Tracked objects:
 15345 ;;		On entry : 0/0
 15346 ;;		On exit  : 0/0
 15347 ;;		Unchanged: 0/0
 15348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15349 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15350 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15352 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15353 ;;Total ram usage:        2 bytes
 15354 ;; Hardware stack levels used:    1
 15355 ;; Hardware stack levels required when called:    8
 15356 ;; This function calls:
 15357 ;;		_LCD_goto_line
 15358 ;;		_LCD_shift_cursor
 15359 ;; This function is called by:
 15360 ;;		_LCD_Handler
 15361 ;; This function uses a non-reentrant model
 15362 ;;
 15363                           
 15364                           	psect	text38
 15365  0161FE                     __ptext38:
 15366                           	opt stack 0
 15367  0161FE                     _LCD_goto_xy:
 15368                           	opt stack 21
 15369                           
 15370                           ;incstack = 0
 15371                           ;LCD_goto_xy@x stored from wreg
 15372  0161FE  0100               	movlb	0	; () banked
 15373  016200  6F7E               	movwf	LCD_goto_xy@x& (0+255),b
 15374                           
 15375                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 15376  016202  0100               	movlb	0	; () banked
 15377  016204  517D               	movf	LCD_goto_xy@y& (0+255),w,b
 15378  016206  EC32  F0AB         	call	_LCD_goto_line
 15379                           
 15380                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 15381  01620A  0100               	movlb	0	; () banked
 15382  01620C  057E               	decf	LCD_goto_xy@x& (0+255),w,b
 15383  01620E  0100               	movlb	0	; () banked
 15384  016210  6F7A               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 15385  016212  0E01               	movlw	1
 15386  016214  EC4A  F0AF         	call	_LCD_shift_cursor
 15387  016218  0012               	return		;funcret
 15388  01621A                     __end_of_LCD_goto_xy:
 15389                           	opt stack 0
 15390                           tblptru	equ	0xFF8
 15391                           tblptrh	equ	0xFF7
 15392                           tblptrl	equ	0xFF6
 15393                           tablat	equ	0xFF5
 15394                           prodh	equ	0xFF4
 15395                           prodl	equ	0xFF3
 15396                           intcon	equ	0xFF2
 15397                           postinc0	equ	0xFEE
 15398                           wreg	equ	0xFE8
 15399                           indf1	equ	0xFE7
 15400                           plusw1	equ	0xFE3
 15401                           fsr1h	equ	0xFE2
 15402                           fsr1l	equ	0xFE1
 15403                           indf2	equ	0xFDF
 15404                           postinc2	equ	0xFDE
 15405                           plusw2	equ	0xFDB
 15406                           fsr2h	equ	0xFDA
 15407                           fsr2l	equ	0xFD9
 15408                           status	equ	0xFD8
 15409                           
 15410 ;; *************** function _LCD_shift_cursor *****************
 15411 ;; Defined at:
 15412 ;;		line 98 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15413 ;; Parameters:    Size  Location     Type
 15414 ;;  shift           1    wreg     unsigned char 
 15415 ;;  number_of_sh    1   26[BANK0 ] unsigned char 
 15416 ;; Auto vars:     Size  Location     Type
 15417 ;;  shift           1   27[BANK0 ] unsigned char 
 15418 ;;  i               1   28[BANK0 ] unsigned char 
 15419 ;; Return value:  Size  Location     Type
 15420 ;;		None               void
 15421 ;; Registers used:
 15422 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15423 ;; Tracked objects:
 15424 ;;		On entry : 0/0
 15425 ;;		On exit  : 0/0
 15426 ;;		Unchanged: 0/0
 15427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15428 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15429 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15431 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15432 ;;Total ram usage:        3 bytes
 15433 ;; Hardware stack levels used:    1
 15434 ;; Hardware stack levels required when called:    7
 15435 ;; This function calls:
 15436 ;;		_LCD_send_command
 15437 ;; This function is called by:
 15438 ;;		_LCD_goto_xy
 15439 ;; This function uses a non-reentrant model
 15440 ;;
 15441                           
 15442                           	psect	text39
 15443  015E94                     __ptext39:
 15444                           	opt stack 0
 15445  015E94                     _LCD_shift_cursor:
 15446                           	opt stack 21
 15447                           
 15448                           ;incstack = 0
 15449                           ;LCD_shift_cursor@shift stored from wreg
 15450  015E94  0100               	movlb	0	; () banked
 15451  015E96  6F7B               	movwf	LCD_shift_cursor@shift& (0+255),b
 15452                           
 15453                           ;src\LCD_44780.c: 100: unsigned char i;
 15454                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 15455  015E98  0E00               	movlw	0
 15456  015E9A  0100               	movlb	0	; () banked
 15457  015E9C  6F7C               	movwf	LCD_shift_cursor@i& (0+255),b
 15458  015E9E  D019               	goto	l8082
 15459  015EA0                     l8078:
 15460                           
 15461                           ; BSR set to: 0
 15462                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 15463  015EA0  0E00               	movlw	0
 15464  015EA2  0100               	movlb	0	; () banked
 15465  015EA4  6F76               	movwf	LCD_send_command@D2& (0+255),b
 15466  015EA6  0E00               	movlw	0
 15467  015EA8  0100               	movlb	0	; () banked
 15468  015EAA  6F77               	movwf	LCD_send_command@D1& (0+255),b
 15469  015EAC  0E01               	movlw	1
 15470  015EAE  0100               	movlb	0	; () banked
 15471  015EB0  6F78               	movwf	LCD_send_command@D0& (0+255),b
 15472  015EB2  0E00               	movlw	0
 15473  015EB4  ECDA  F0AF         	call	_LCD_send_command
 15474                           
 15475                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 15476  015EB8  C07B  F076         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 15477  015EBC  0E00               	movlw	0
 15478  015EBE  0100               	movlb	0	; () banked
 15479  015EC0  6F77               	movwf	LCD_send_command@D1& (0+255),b
 15480  015EC2  0E00               	movlw	0
 15481  015EC4  0100               	movlb	0	; () banked
 15482  015EC6  6F78               	movwf	LCD_send_command@D0& (0+255),b
 15483  015EC8  0E00               	movlw	0
 15484  015ECA  ECDA  F0AF         	call	_LCD_send_command
 15485  015ECE  0100               	movlb	0	; () banked
 15486  015ED0  2B7C               	incf	LCD_shift_cursor@i& (0+255),f,b
 15487  015ED2                     l8082:
 15488                           
 15489                           ; BSR set to: 0
 15490  015ED2  0100               	movlb	0	; () banked
 15491  015ED4  517A               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 15492  015ED6  0100               	movlb	0	; () banked
 15493  015ED8  5D7C               	subwf	LCD_shift_cursor@i& (0+255),w,b
 15494  015EDA  B0D8               	btfsc	status,0,c
 15495  015EDC  0012               	return	
 15496  015EDE  D7E0               	goto	l8078
 15497  015EE0                     __end_of_LCD_shift_cursor:
 15498                           	opt stack 0
 15499                           tblptru	equ	0xFF8
 15500                           tblptrh	equ	0xFF7
 15501                           tblptrl	equ	0xFF6
 15502                           tablat	equ	0xFF5
 15503                           prodh	equ	0xFF4
 15504                           prodl	equ	0xFF3
 15505                           intcon	equ	0xFF2
 15506                           postinc0	equ	0xFEE
 15507                           wreg	equ	0xFE8
 15508                           indf1	equ	0xFE7
 15509                           plusw1	equ	0xFE3
 15510                           fsr1h	equ	0xFE2
 15511                           fsr1l	equ	0xFE1
 15512                           indf2	equ	0xFDF
 15513                           postinc2	equ	0xFDE
 15514                           plusw2	equ	0xFDB
 15515                           fsr2h	equ	0xFDA
 15516                           fsr2l	equ	0xFD9
 15517                           status	equ	0xFD8
 15518                           
 15519 ;; *************** function _LCD_goto_line *****************
 15520 ;; Defined at:
 15521 ;;		line 111 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15522 ;; Parameters:    Size  Location     Type
 15523 ;;  line            1    wreg     unsigned char 
 15524 ;; Auto vars:     Size  Location     Type
 15525 ;;  line            1   26[BANK0 ] unsigned char 
 15526 ;; Return value:  Size  Location     Type
 15527 ;;		None               void
 15528 ;; Registers used:
 15529 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15530 ;; Tracked objects:
 15531 ;;		On entry : 0/0
 15532 ;;		On exit  : 0/0
 15533 ;;		Unchanged: 0/0
 15534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15536 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15538 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15539 ;;Total ram usage:        1 bytes
 15540 ;; Hardware stack levels used:    1
 15541 ;; Hardware stack levels required when called:    7
 15542 ;; This function calls:
 15543 ;;		_LCD_send_command
 15544 ;; This function is called by:
 15545 ;;		_LCD_goto_xy
 15546 ;;		_main
 15547 ;;		_LCD_Handler
 15548 ;;		_board_initialization
 15549 ;; This function uses a non-reentrant model
 15550 ;;
 15551                           
 15552                           	psect	text40
 15553  015664                     __ptext40:
 15554                           	opt stack 0
 15555  015664                     _LCD_goto_line:
 15556                           	opt stack 22
 15557                           
 15558                           ; BSR set to: 0
 15559                           ;incstack = 0
 15560                           ;LCD_goto_line@line stored from wreg
 15561  015664  0100               	movlb	0	; () banked
 15562  015666  6F7A               	movwf	LCD_goto_line@line& (0+255),b
 15563                           
 15564                           ;src\LCD_44780.c: 113: switch(line) {
 15565  015668  D064               	goto	l8094
 15566  01566A                     l8086:
 15567  01566A  0E00               	movlw	0
 15568  01566C  0100               	movlb	0	; () banked
 15569  01566E  6F76               	movwf	LCD_send_command@D2& (0+255),b
 15570  015670  0E00               	movlw	0
 15571  015672  0100               	movlb	0	; () banked
 15572  015674  6F77               	movwf	LCD_send_command@D1& (0+255),b
 15573  015676  0E00               	movlw	0
 15574  015678  0100               	movlb	0	; () banked
 15575  01567A  6F78               	movwf	LCD_send_command@D0& (0+255),b
 15576  01567C  0E01               	movlw	1
 15577  01567E  ECDA  F0AF         	call	_LCD_send_command
 15578                           
 15579                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 15580  015682  0E00               	movlw	0
 15581  015684  0100               	movlb	0	; () banked
 15582  015686  6F76               	movwf	LCD_send_command@D2& (0+255),b
 15583  015688  0E00               	movlw	0
 15584  01568A  0100               	movlb	0	; () banked
 15585  01568C  6F77               	movwf	LCD_send_command@D1& (0+255),b
 15586  01568E  0E00               	movlw	0
 15587  015690  0100               	movlb	0	; () banked
 15588  015692  6F78               	movwf	LCD_send_command@D0& (0+255),b
 15589  015694  0E00               	movlw	0
 15590  015696  ECDA  F0AF         	call	_LCD_send_command
 15591                           
 15592                           ;src\LCD_44780.c: 117: break;
 15593  01569A  0012               	return	
 15594  01569C                     l8088:
 15595  01569C  0E01               	movlw	1
 15596  01569E  0100               	movlb	0	; () banked
 15597  0156A0  6F76               	movwf	LCD_send_command@D2& (0+255),b
 15598  0156A2  0E00               	movlw	0
 15599  0156A4  0100               	movlb	0	; () banked
 15600  0156A6  6F77               	movwf	LCD_send_command@D1& (0+255),b
 15601  0156A8  0E00               	movlw	0
 15602  0156AA  0100               	movlb	0	; () banked
 15603  0156AC  6F78               	movwf	LCD_send_command@D0& (0+255),b
 15604  0156AE  0E01               	movlw	1
 15605  0156B0  ECDA  F0AF         	call	_LCD_send_command
 15606                           
 15607                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 15608  0156B4  0E00               	movlw	0
 15609  0156B6  0100               	movlb	0	; () banked
 15610  0156B8  6F76               	movwf	LCD_send_command@D2& (0+255),b
 15611  0156BA  0E00               	movlw	0
 15612  0156BC  0100               	movlb	0	; () banked
 15613  0156BE  6F77               	movwf	LCD_send_command@D1& (0+255),b
 15614  0156C0  0E00               	movlw	0
 15615  0156C2  0100               	movlb	0	; () banked
 15616  0156C4  6F78               	movwf	LCD_send_command@D0& (0+255),b
 15617  0156C6  0E00               	movlw	0
 15618  0156C8  ECDA  F0AF         	call	_LCD_send_command
 15619                           
 15620                           ;src\LCD_44780.c: 121: break;
 15621  0156CC  0012               	return	
 15622  0156CE                     l8090:
 15623  0156CE  0E00               	movlw	0
 15624  0156D0  0100               	movlb	0	; () banked
 15625  0156D2  6F76               	movwf	LCD_send_command@D2& (0+255),b
 15626  0156D4  0E00               	movlw	0
 15627  0156D6  0100               	movlb	0	; () banked
 15628  0156D8  6F77               	movwf	LCD_send_command@D1& (0+255),b
 15629  0156DA  0E01               	movlw	1
 15630  0156DC  0100               	movlb	0	; () banked
 15631  0156DE  6F78               	movwf	LCD_send_command@D0& (0+255),b
 15632  0156E0  0E01               	movlw	1
 15633  0156E2  ECDA  F0AF         	call	_LCD_send_command
 15634                           
 15635                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 15636  0156E6  0E01               	movlw	1
 15637  0156E8  0100               	movlb	0	; () banked
 15638  0156EA  6F76               	movwf	LCD_send_command@D2& (0+255),b
 15639  0156EC  0E00               	movlw	0
 15640  0156EE  0100               	movlb	0	; () banked
 15641  0156F0  6F77               	movwf	LCD_send_command@D1& (0+255),b
 15642  0156F2  0E00               	movlw	0
 15643  0156F4  0100               	movlb	0	; () banked
 15644  0156F6  6F78               	movwf	LCD_send_command@D0& (0+255),b
 15645  0156F8  0E00               	movlw	0
 15646  0156FA  ECDA  F0AF         	call	_LCD_send_command
 15647                           
 15648                           ;src\LCD_44780.c: 125: break;
 15649  0156FE  0012               	return	
 15650  015700                     l8092:
 15651  015700  0E01               	movlw	1
 15652  015702  0100               	movlb	0	; () banked
 15653  015704  6F76               	movwf	LCD_send_command@D2& (0+255),b
 15654  015706  0E00               	movlw	0
 15655  015708  0100               	movlb	0	; () banked
 15656  01570A  6F77               	movwf	LCD_send_command@D1& (0+255),b
 15657  01570C  0E01               	movlw	1
 15658  01570E  0100               	movlb	0	; () banked
 15659  015710  6F78               	movwf	LCD_send_command@D0& (0+255),b
 15660  015712  0E01               	movlw	1
 15661  015714  ECDA  F0AF         	call	_LCD_send_command
 15662                           
 15663                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 15664  015718  0E01               	movlw	1
 15665  01571A  0100               	movlb	0	; () banked
 15666  01571C  6F76               	movwf	LCD_send_command@D2& (0+255),b
 15667  01571E  0E00               	movlw	0
 15668  015720  0100               	movlb	0	; () banked
 15669  015722  6F77               	movwf	LCD_send_command@D1& (0+255),b
 15670  015724  0E00               	movlw	0
 15671  015726  0100               	movlb	0	; () banked
 15672  015728  6F78               	movwf	LCD_send_command@D0& (0+255),b
 15673  01572A  0E00               	movlw	0
 15674  01572C  ECDA  F0AF         	call	_LCD_send_command
 15675                           
 15676                           ;src\LCD_44780.c: 129: }
 15677  015730  0012               	return	
 15678  015732                     l8094:
 15679  015732  0100               	movlb	0	; () banked
 15680  015734  517A               	movf	LCD_goto_line@line& (0+255),w,b
 15681                           
 15682                           ; Switch size 1, requested type "space"
 15683                           ; Number of cases is 4, Range of values is 1 to 4
 15684                           ; switch strategies available:
 15685                           ; Name         Instructions Cycles
 15686                           ; simple_byte           13     7 (average)
 15687                           ;	Chosen strategy is simple_byte
 15688  015736  0A01               	xorlw	1	; case 1
 15689  015738  B4D8               	btfsc	status,2,c
 15690  01573A  D797               	goto	l8086
 15691  01573C  0A03               	xorlw	3	; case 2
 15692  01573E  B4D8               	btfsc	status,2,c
 15693  015740  D7AD               	goto	l8088
 15694  015742  0A01               	xorlw	1	; case 3
 15695  015744  B4D8               	btfsc	status,2,c
 15696  015746  D7C3               	goto	l8090
 15697  015748  0A07               	xorlw	7	; case 4
 15698  01574A  A4D8               	btfss	status,2,c
 15699  01574C  0012               	return	
 15700  01574E  D7D8               	goto	l8092
 15701  015750                     __end_of_LCD_goto_line:
 15702                           	opt stack 0
 15703                           tblptru	equ	0xFF8
 15704                           tblptrh	equ	0xFF7
 15705                           tblptrl	equ	0xFF6
 15706                           tablat	equ	0xFF5
 15707                           prodh	equ	0xFF4
 15708                           prodl	equ	0xFF3
 15709                           intcon	equ	0xFF2
 15710                           postinc0	equ	0xFEE
 15711                           wreg	equ	0xFE8
 15712                           indf1	equ	0xFE7
 15713                           plusw1	equ	0xFE3
 15714                           fsr1h	equ	0xFE2
 15715                           fsr1l	equ	0xFE1
 15716                           indf2	equ	0xFDF
 15717                           postinc2	equ	0xFDE
 15718                           plusw2	equ	0xFDB
 15719                           fsr2h	equ	0xFDA
 15720                           fsr2l	equ	0xFD9
 15721                           status	equ	0xFD8
 15722                           
 15723 ;; *************** function _LCD_send_command *****************
 15724 ;; Defined at:
 15725 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15726 ;; Parameters:    Size  Location     Type
 15727 ;;  D3              1    wreg     unsigned char 
 15728 ;;  D2              1   22[BANK0 ] unsigned char 
 15729 ;;  D1              1   23[BANK0 ] unsigned char 
 15730 ;;  D0              1   24[BANK0 ] unsigned char 
 15731 ;; Auto vars:     Size  Location     Type
 15732 ;;  D3              1   25[BANK0 ] unsigned char 
 15733 ;; Return value:  Size  Location     Type
 15734 ;;		None               void
 15735 ;; Registers used:
 15736 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15737 ;; Tracked objects:
 15738 ;;		On entry : 0/0
 15739 ;;		On exit  : 0/0
 15740 ;;		Unchanged: 0/0
 15741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15742 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15743 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15745 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15746 ;;Total ram usage:        4 bytes
 15747 ;; Hardware stack levels used:    1
 15748 ;; Hardware stack levels required when called:    6
 15749 ;; This function calls:
 15750 ;;		_LCD_enable_pulse
 15751 ;; This function is called by:
 15752 ;;		_LCD_shift_cursor
 15753 ;;		_LCD_goto_line
 15754 ;;		_LCD_write_char
 15755 ;;		_LCD_clear
 15756 ;;		_LCD_cursor
 15757 ;;		_LCD_initialize
 15758 ;;		_LCD_home
 15759 ;;		_LCD_shift
 15760 ;; This function uses a non-reentrant model
 15761 ;;
 15762                           
 15763                           	psect	text41
 15764  015FB4                     __ptext41:
 15765                           	opt stack 0
 15766  015FB4                     _LCD_send_command:
 15767                           	opt stack 22
 15768                           
 15769                           ;incstack = 0
 15770                           ;LCD_send_command@D3 stored from wreg
 15771  015FB4  0100               	movlb	0	; () banked
 15772  015FB6  6F79               	movwf	LCD_send_command@D3& (0+255),b
 15773                           
 15774                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 15775  015FB8  0100               	movlb	0	; () banked
 15776  015FBA  B178               	btfsc	LCD_send_command@D0& (0+255),0,b
 15777  015FBC  D002               	bra	u10075
 15778  015FBE  948B               	bcf	3979,2,c	;volatile
 15779  015FC0  D001               	bra	u10076
 15780  015FC2                     u10075:
 15781  015FC2  848B               	bsf	3979,2,c	;volatile
 15782  015FC4                     u10076:
 15783                           
 15784                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 15785  015FC4  0100               	movlb	0	; () banked
 15786  015FC6  B177               	btfsc	LCD_send_command@D1& (0+255),0,b
 15787  015FC8  D002               	bra	u10085
 15788  015FCA  968B               	bcf	3979,3,c	;volatile
 15789  015FCC  D001               	bra	u10086
 15790  015FCE                     u10085:
 15791  015FCE  868B               	bsf	3979,3,c	;volatile
 15792  015FD0                     u10086:
 15793                           
 15794                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 15795  015FD0  0100               	movlb	0	; () banked
 15796  015FD2  B176               	btfsc	LCD_send_command@D2& (0+255),0,b
 15797  015FD4  D002               	bra	u10095
 15798  015FD6  908C               	bcf	3980,0,c	;volatile
 15799  015FD8  D001               	bra	u10096
 15800  015FDA                     u10095:
 15801  015FDA  808C               	bsf	3980,0,c	;volatile
 15802  015FDC                     u10096:
 15803                           
 15804                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 15805  015FDC  0100               	movlb	0	; () banked
 15806  015FDE  B179               	btfsc	LCD_send_command@D3& (0+255),0,b
 15807  015FE0  D002               	bra	u10105
 15808  015FE2  928C               	bcf	3980,1,c	;volatile
 15809  015FE4  D001               	bra	u10106
 15810  015FE6                     u10105:
 15811  015FE6  828C               	bsf	3980,1,c	;volatile
 15812  015FE8                     u10106:
 15813                           
 15814                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 15815  015FE8  ECD1  F0B0         	call	_LCD_enable_pulse	;wreg free
 15816  015FEC  0012               	return		;funcret
 15817  015FEE                     __end_of_LCD_send_command:
 15818                           	opt stack 0
 15819                           tblptru	equ	0xFF8
 15820                           tblptrh	equ	0xFF7
 15821                           tblptrl	equ	0xFF6
 15822                           tablat	equ	0xFF5
 15823                           prodh	equ	0xFF4
 15824                           prodl	equ	0xFF3
 15825                           intcon	equ	0xFF2
 15826                           postinc0	equ	0xFEE
 15827                           wreg	equ	0xFE8
 15828                           indf1	equ	0xFE7
 15829                           plusw1	equ	0xFE3
 15830                           fsr1h	equ	0xFE2
 15831                           fsr1l	equ	0xFE1
 15832                           indf2	equ	0xFDF
 15833                           postinc2	equ	0xFDE
 15834                           plusw2	equ	0xFDB
 15835                           fsr2h	equ	0xFDA
 15836                           fsr2l	equ	0xFD9
 15837                           status	equ	0xFD8
 15838                           
 15839 ;; *************** function _LCD_enable_pulse *****************
 15840 ;; Defined at:
 15841 ;;		line 49 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15842 ;; Parameters:    Size  Location     Type
 15843 ;;		None
 15844 ;; Auto vars:     Size  Location     Type
 15845 ;;		None
 15846 ;; Return value:  Size  Location     Type
 15847 ;;		None               void
 15848 ;; Registers used:
 15849 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15850 ;; Tracked objects:
 15851 ;;		On entry : 0/0
 15852 ;;		On exit  : 0/0
 15853 ;;		Unchanged: 0/0
 15854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15859 ;;Total ram usage:        0 bytes
 15860 ;; Hardware stack levels used:    1
 15861 ;; Hardware stack levels required when called:    5
 15862 ;; This function calls:
 15863 ;;		_delay_ms
 15864 ;; This function is called by:
 15865 ;;		_LCD_send_command
 15866 ;; This function uses a non-reentrant model
 15867 ;;
 15868                           
 15869                           	psect	text42
 15870  0161A2                     __ptext42:
 15871                           	opt stack 0
 15872  0161A2                     _LCD_enable_pulse:
 15873                           	opt stack 22
 15874                           
 15875                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 15876                           
 15877                           ;incstack = 0
 15878  0161A2  828B               	bsf	3979,1,c	;volatile
 15879                           
 15880                           ;src\LCD_44780.c: 52: delay_ms (1);
 15881  0161A4  0E00               	movlw	0
 15882  0161A6  0100               	movlb	0	; () banked
 15883  0161A8  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15884  0161AA  0E01               	movlw	1
 15885  0161AC  6F74               	movwf	delay_ms@value_ms& (0+255),b
 15886  0161AE  ECF7  F0AF         	call	_delay_ms	;wreg free
 15887                           
 15888                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 15889  0161B2  928B               	bcf	3979,1,c	;volatile
 15890                           
 15891                           ;src\LCD_44780.c: 54: delay_ms (1);
 15892  0161B4  0E00               	movlw	0
 15893  0161B6  0100               	movlb	0	; () banked
 15894  0161B8  6F75               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15895  0161BA  0E01               	movlw	1
 15896  0161BC  6F74               	movwf	delay_ms@value_ms& (0+255),b
 15897  0161BE  ECF7  F0AF         	call	_delay_ms	;wreg free
 15898  0161C2  0012               	return		;funcret
 15899  0161C4                     __end_of_LCD_enable_pulse:
 15900                           	opt stack 0
 15901                           tblptru	equ	0xFF8
 15902                           tblptrh	equ	0xFF7
 15903                           tblptrl	equ	0xFF6
 15904                           tablat	equ	0xFF5
 15905                           prodh	equ	0xFF4
 15906                           prodl	equ	0xFF3
 15907                           intcon	equ	0xFF2
 15908                           postinc0	equ	0xFEE
 15909                           wreg	equ	0xFE8
 15910                           indf1	equ	0xFE7
 15911                           plusw1	equ	0xFE3
 15912                           fsr1h	equ	0xFE2
 15913                           fsr1l	equ	0xFE1
 15914                           indf2	equ	0xFDF
 15915                           postinc2	equ	0xFDE
 15916                           plusw2	equ	0xFDB
 15917                           fsr2h	equ	0xFDA
 15918                           fsr2l	equ	0xFD9
 15919                           status	equ	0xFD8
 15920                           
 15921 ;; *************** function _delay_ms *****************
 15922 ;; Defined at:
 15923 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 15924 ;; Parameters:    Size  Location     Type
 15925 ;;  value_ms        2   20[BANK0 ] unsigned int 
 15926 ;; Auto vars:     Size  Location     Type
 15927 ;;		None
 15928 ;; Return value:  Size  Location     Type
 15929 ;;		None               void
 15930 ;; Registers used:
 15931 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15932 ;; Tracked objects:
 15933 ;;		On entry : 0/0
 15934 ;;		On exit  : 0/0
 15935 ;;		Unchanged: 0/0
 15936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15937 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15940 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15941 ;;Total ram usage:        2 bytes
 15942 ;; Hardware stack levels used:    1
 15943 ;; Hardware stack levels required when called:    4
 15944 ;; This function calls:
 15945 ;;		___wmul
 15946 ;; This function is called by:
 15947 ;;		_LCD_enable_pulse
 15948 ;;		_LCD_initialize
 15949 ;;		_main
 15950 ;;		_delay_s
 15951 ;; This function uses a non-reentrant model
 15952 ;;
 15953                           
 15954                           	psect	text43
 15955  015FEE                     __ptext43:
 15956                           	opt stack 0
 15957  015FEE                     _delay_ms:
 15958                           	opt stack 26
 15959                           
 15960                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 15961                           
 15962                           ;incstack = 0
 15963  015FEE  C0F1  F06E         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 15964  015FF2  0100               	movlb	0	; () banked
 15965  015FF4  6B6F               	clrf	(___wmul@multiplier+1)& (0+255),b
 15966  015FF6  C074  F070         	movff	delay_ms@value_ms,___wmul@multiplicand
 15967  015FFA  C075  F071         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 15968  015FFE  EC30  F0B0         	call	___wmul	;wreg free
 15969  016002  C06E  F0E2         	movff	?___wmul,_clock_counter_reference	;volatile
 15970  016006  C06F  F0E3         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 15971                           
 15972                           ;src\delay.c: 75: while (clock_counter_reference) {
 15973  01600A  D007               	goto	l581
 15974  01600C                     l7630:
 15975                           
 15976                           ;src\delay.c: 85: _delay(240);
 15977  01600C  0E50               	movlw	80
 15978  01600E                     u12357:
 15979  01600E  2EE8               	decfsz	wreg,f,c
 15980  016010  D7FE               	goto	u12357
 15981                           
 15982                           ;src\delay.c: 88: clock_counter_reference--;
 15983  016012  0100               	movlb	0	; () banked
 15984  016014  07E2               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 15985  016016  A0D8               	btfss	status,0,c
 15986  016018  07E3               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 15987  01601A                     l581:
 15988  01601A  0100               	movlb	0	; () banked
 15989  01601C  51E2               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 15990  01601E  0100               	movlb	0	; () banked
 15991  016020  11E3               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 15992  016022  B4D8               	btfsc	status,2,c
 15993  016024  0012               	return	
 15994  016026  D7F2               	goto	l7630
 15995  016028                     __end_of_delay_ms:
 15996                           	opt stack 0
 15997                           tblptru	equ	0xFF8
 15998                           tblptrh	equ	0xFF7
 15999                           tblptrl	equ	0xFF6
 16000                           tablat	equ	0xFF5
 16001                           prodh	equ	0xFF4
 16002                           prodl	equ	0xFF3
 16003                           intcon	equ	0xFF2
 16004                           postinc0	equ	0xFEE
 16005                           wreg	equ	0xFE8
 16006                           indf1	equ	0xFE7
 16007                           plusw1	equ	0xFE3
 16008                           fsr1h	equ	0xFE2
 16009                           fsr1l	equ	0xFE1
 16010                           indf2	equ	0xFDF
 16011                           postinc2	equ	0xFDE
 16012                           plusw2	equ	0xFDB
 16013                           fsr2h	equ	0xFDA
 16014                           fsr2l	equ	0xFD9
 16015                           status	equ	0xFD8
 16016                           
 16017 ;; *************** function ___wmul *****************
 16018 ;; Defined at:
 16019 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 16020 ;; Parameters:    Size  Location     Type
 16021 ;;  multiplier      2   14[BANK0 ] unsigned int 
 16022 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 16023 ;; Auto vars:     Size  Location     Type
 16024 ;;  product         2   18[BANK0 ] unsigned int 
 16025 ;; Return value:  Size  Location     Type
 16026 ;;                  2   14[BANK0 ] unsigned int 
 16027 ;; Registers used:
 16028 ;;		wreg, status,2, status,0, prodl, prodh
 16029 ;; Tracked objects:
 16030 ;;		On entry : 0/0
 16031 ;;		On exit  : 0/0
 16032 ;;		Unchanged: 0/0
 16033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16034 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16035 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16037 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16038 ;;Total ram usage:        6 bytes
 16039 ;; Hardware stack levels used:    1
 16040 ;; Hardware stack levels required when called:    3
 16041 ;; This function calls:
 16042 ;;		Nothing
 16043 ;; This function is called by:
 16044 ;;		_delay_ms
 16045 ;;		_sprintf
 16046 ;; This function uses a non-reentrant model
 16047 ;;
 16048                           
 16049                           	psect	text44
 16050  016060                     __ptext44:
 16051                           	opt stack 0
 16052  016060                     ___wmul:
 16053                           	opt stack 26
 16054                           
 16055                           ; BSR set to: 0
 16056                           ;incstack = 0
 16057  016060  0100               	movlb	0	; () banked
 16058  016062  516E               	movf	___wmul@multiplier& (0+255),w,b
 16059  016064  0100               	movlb	0	; () banked
 16060  016066  0370               	mulwf	___wmul@multiplicand& (0+255),b
 16061  016068  CFF3 F072          	movff	prodl,___wmul@product
 16062  01606C  CFF4 F073          	movff	prodh,___wmul@product+1
 16063  016070  0100               	movlb	0	; () banked
 16064  016072  516E               	movf	___wmul@multiplier& (0+255),w,b
 16065  016074  0100               	movlb	0	; () banked
 16066  016076  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 16067  016078  50F3               	movf	prodl,w,c
 16068  01607A  0100               	movlb	0	; () banked
 16069  01607C  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 16070  01607E  0100               	movlb	0	; () banked
 16071  016080  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 16072  016082  0100               	movlb	0	; () banked
 16073  016084  0370               	mulwf	___wmul@multiplicand& (0+255),b
 16074  016086  50F3               	movf	prodl,w,c
 16075  016088  0100               	movlb	0	; () banked
 16076  01608A  2773               	addwf	(___wmul@product+1)& (0+255),f,b
 16077                           
 16078                           ; BSR set to: 0
 16079  01608C  C072  F06E         	movff	___wmul@product,?___wmul
 16080  016090  C073  F06F         	movff	___wmul@product+1,?___wmul+1
 16081  016094  0012               	return	
 16082  016096                     __end_of___wmul:
 16083                           	opt stack 0
 16084                           tblptru	equ	0xFF8
 16085                           tblptrh	equ	0xFF7
 16086                           tblptrl	equ	0xFF6
 16087                           tablat	equ	0xFF5
 16088                           prodh	equ	0xFF4
 16089                           prodl	equ	0xFF3
 16090                           intcon	equ	0xFF2
 16091                           postinc0	equ	0xFEE
 16092                           wreg	equ	0xFE8
 16093                           indf1	equ	0xFE7
 16094                           plusw1	equ	0xFE3
 16095                           fsr1h	equ	0xFE2
 16096                           fsr1l	equ	0xFE1
 16097                           indf2	equ	0xFDF
 16098                           postinc2	equ	0xFDE
 16099                           plusw2	equ	0xFDB
 16100                           fsr2h	equ	0xFDA
 16101                           fsr2l	equ	0xFD9
 16102                           status	equ	0xFD8
 16103                           
 16104 ;; *************** function _Joystick_Polling *****************
 16105 ;; Defined at:
 16106 ;;		line 440 in file "RemoteCan.c"
 16107 ;; Parameters:    Size  Location     Type
 16108 ;;		None
 16109 ;; Auto vars:     Size  Location     Type
 16110 ;;  i               1   15[BANK0 ] unsigned char 
 16111 ;; Return value:  Size  Location     Type
 16112 ;;		None               void
 16113 ;; Registers used:
 16114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16115 ;; Tracked objects:
 16116 ;;		On entry : 0/0
 16117 ;;		On exit  : 0/0
 16118 ;;		Unchanged: 0/0
 16119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16121 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16122 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16123 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16124 ;;Total ram usage:        2 bytes
 16125 ;; Hardware stack levels used:    1
 16126 ;; Hardware stack levels required when called:    3
 16127 ;; This function calls:
 16128 ;;		Nothing
 16129 ;; This function is called by:
 16130 ;;		_main
 16131 ;; This function uses a non-reentrant model
 16132 ;;
 16133                           
 16134                           	psect	text45
 16135  015E40                     __ptext45:
 16136                           	opt stack 0
 16137  015E40                     _Joystick_Polling:
 16138                           	opt stack 27
 16139                           
 16140                           ;RemoteCan.c: 441: for (unsigned char i = 0; i < 2; i++) {
 16141                           
 16142                           ; BSR set to: 0
 16143                           ;incstack = 0
 16144  015E40  0E00               	movlw	0
 16145  015E42  0100               	movlb	0	; () banked
 16146  015E44  6F6F               	movwf	Joystick_Polling@i& (0+255),b
 16147  015E46                     l6976:
 16148                           
 16149                           ; BSR set to: 0
 16150  015E46  0E01               	movlw	1
 16151  015E48  0100               	movlb	0	; () banked
 16152  015E4A  656F               	cpfsgt	Joystick_Polling@i& (0+255),b
 16153  015E4C  D001               	goto	l875
 16154  015E4E  0012               	return	
 16155  015E50                     l875:
 16156                           
 16157                           ; BSR set to: 0
 16158                           ;RemoteCan.c: 442: ADCON0bits.GO = 1;
 16159  015E50  82C2               	bsf	4034,1,c	;volatile
 16160  015E52                     l877:
 16161  015E52  B2C2               	btfsc	4034,1,c	;volatile
 16162  015E54  D7FE               	goto	l877
 16163                           
 16164                           ;RemoteCan.c: 444: JoystickValues[i] = ADRESH;
 16165  015E56  0100               	movlb	0	; () banked
 16166  015E58  516F               	movf	Joystick_Polling@i& (0+255),w,b
 16167  015E5A  0D01               	mullw	1
 16168  015E5C  0EDE               	movlw	low _JoystickValues
 16169  015E5E  24F3               	addwf	prodl,w,c
 16170  015E60  6ED9               	movwf	fsr2l,c
 16171  015E62  0E00               	movlw	high _JoystickValues
 16172  015E64  20F4               	addwfc	prodh,w,c
 16173  015E66  6EDA               	movwf	fsr2h,c
 16174  015E68  CFC4 FFDF          	movff	4036,indf2	;volatile
 16175                           
 16176                           ; BSR set to: 0
 16177                           ;RemoteCan.c: 445: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 16178  015E6C  A4C2               	btfss	4034,2,c	;volatile
 16179  015E6E  D002               	goto	u8970
 16180  015E70  0E01               	movlw	1
 16181  015E72  D001               	goto	u8976
 16182  015E74                     u8970:
 16183  015E74  0E00               	movlw	0
 16184  015E76                     u8976:
 16185  015E76  0AFF               	xorlw	255
 16186  015E78  0100               	movlb	0	; () banked
 16187  015E7A  6F6E               	movwf	??_Joystick_Polling& (0+255),b
 16188  015E7C  0100               	movlb	0	; () banked
 16189  015E7E  476E               	rlncf	??_Joystick_Polling& (0+255),f,b
 16190  015E80  476E               	rlncf	??_Joystick_Polling& (0+255),f,b
 16191  015E82  50C2               	movf	4034,w,c	;volatile
 16192  015E84  0100               	movlb	0	; () banked
 16193  015E86  196E               	xorwf	??_Joystick_Polling& (0+255),w,b
 16194  015E88  0BFB               	andlw	-5
 16195  015E8A  196E               	xorwf	??_Joystick_Polling& (0+255),w,b
 16196  015E8C  6EC2               	movwf	4034,c	;volatile
 16197                           
 16198                           ; BSR set to: 0
 16199  015E8E  0100               	movlb	0	; () banked
 16200  015E90  2B6F               	incf	Joystick_Polling@i& (0+255),f,b
 16201  015E92  D7D9               	goto	l6976
 16202  015E94                     __end_of_Joystick_Polling:
 16203                           	opt stack 0
 16204                           tblptru	equ	0xFF8
 16205                           tblptrh	equ	0xFF7
 16206                           tblptrl	equ	0xFF6
 16207                           tablat	equ	0xFF5
 16208                           prodh	equ	0xFF4
 16209                           prodl	equ	0xFF3
 16210                           intcon	equ	0xFF2
 16211                           postinc0	equ	0xFEE
 16212                           wreg	equ	0xFE8
 16213                           indf1	equ	0xFE7
 16214                           plusw1	equ	0xFE3
 16215                           fsr1h	equ	0xFE2
 16216                           fsr1l	equ	0xFE1
 16217                           indf2	equ	0xFDF
 16218                           postinc2	equ	0xFDE
 16219                           plusw2	equ	0xFDB
 16220                           fsr2h	equ	0xFDA
 16221                           fsr2l	equ	0xFD9
 16222                           status	equ	0xFD8
 16223                           
 16224 ;; *************** function _F2_Button_Polling *****************
 16225 ;; Defined at:
 16226 ;;		line 430 in file "RemoteCan.c"
 16227 ;; Parameters:    Size  Location     Type
 16228 ;;		None
 16229 ;; Auto vars:     Size  Location     Type
 16230 ;;		None
 16231 ;; Return value:  Size  Location     Type
 16232 ;;		None               void
 16233 ;; Registers used:
 16234 ;;		None
 16235 ;; Tracked objects:
 16236 ;;		On entry : 0/0
 16237 ;;		On exit  : 0/0
 16238 ;;		Unchanged: 0/0
 16239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16244 ;;Total ram usage:        0 bytes
 16245 ;; Hardware stack levels used:    1
 16246 ;; Hardware stack levels required when called:    3
 16247 ;; This function calls:
 16248 ;;		Nothing
 16249 ;; This function is called by:
 16250 ;;		_main
 16251 ;; This function uses a non-reentrant model
 16252 ;;
 16253                           
 16254                           	psect	text46
 16255  01621A                     __ptext46:
 16256                           	opt stack 0
 16257  01621A                     _F2_Button_Polling:
 16258                           	opt stack 27
 16259                           
 16260                           ;RemoteCan.c: 431: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 16261                           
 16262                           ; BSR set to: 0
 16263                           ;incstack = 0
 16264  01621A  A281               	btfss	3969,1,c	;volatile
 16265  01621C  D002               	goto	l870
 16266  01621E  BA4B               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16267  016220  0012               	return	
 16268  016222                     l870:
 16269                           
 16270                           ;RemoteCan.c: 432: wait_low_3 = 0;
 16271  016222  9A4B               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16272                           
 16273                           ;RemoteCan.c: 433: if (PORTBbits.RB1 == 1) {
 16274  016224  A281               	btfss	3969,1,c	;volatile
 16275  016226  0012               	return	
 16276                           
 16277                           ;RemoteCan.c: 434: F2_switch = ~F2_switch;
 16278  016228  B44A               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16279  01622A  D002               	goto	u8900
 16280  01622C  844A               	bsf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16281  01622E  D001               	goto	u8915
 16282  016230                     u8900:
 16283  016230  944A               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16284  016232                     u8915:
 16285                           
 16286                           ;RemoteCan.c: 435: wait_low_3 = 1;
 16287  016232  8A4B               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16288  016234  0012               	return	
 16289  016236                     __end_of_F2_Button_Polling:
 16290                           	opt stack 0
 16291                           tblptru	equ	0xFF8
 16292                           tblptrh	equ	0xFF7
 16293                           tblptrl	equ	0xFF6
 16294                           tablat	equ	0xFF5
 16295                           prodh	equ	0xFF4
 16296                           prodl	equ	0xFF3
 16297                           intcon	equ	0xFF2
 16298                           postinc0	equ	0xFEE
 16299                           wreg	equ	0xFE8
 16300                           indf1	equ	0xFE7
 16301                           plusw1	equ	0xFE3
 16302                           fsr1h	equ	0xFE2
 16303                           fsr1l	equ	0xFE1
 16304                           indf2	equ	0xFDF
 16305                           postinc2	equ	0xFDE
 16306                           plusw2	equ	0xFDB
 16307                           fsr2h	equ	0xFDA
 16308                           fsr2l	equ	0xFD9
 16309                           status	equ	0xFD8
 16310                           
 16311 ;; *************** function _F1_Button_Polling *****************
 16312 ;; Defined at:
 16313 ;;		line 420 in file "RemoteCan.c"
 16314 ;; Parameters:    Size  Location     Type
 16315 ;;		None
 16316 ;; Auto vars:     Size  Location     Type
 16317 ;;		None
 16318 ;; Return value:  Size  Location     Type
 16319 ;;		None               void
 16320 ;; Registers used:
 16321 ;;		None
 16322 ;; Tracked objects:
 16323 ;;		On entry : 0/0
 16324 ;;		On exit  : 0/0
 16325 ;;		Unchanged: 0/0
 16326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16331 ;;Total ram usage:        0 bytes
 16332 ;; Hardware stack levels used:    1
 16333 ;; Hardware stack levels required when called:    3
 16334 ;; This function calls:
 16335 ;;		Nothing
 16336 ;; This function is called by:
 16337 ;;		_main
 16338 ;; This function uses a non-reentrant model
 16339 ;;
 16340                           
 16341                           	psect	text47
 16342  016236                     __ptext47:
 16343                           	opt stack 0
 16344  016236                     _F1_Button_Polling:
 16345                           	opt stack 27
 16346                           
 16347                           ;RemoteCan.c: 421: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 16348                           
 16349                           ;incstack = 0
 16350  016236  A881               	btfss	3969,4,c	;volatile
 16351  016238  D002               	goto	l863
 16352  01623A  B84B               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16353  01623C  0012               	return	
 16354  01623E                     l863:
 16355                           
 16356                           ;RemoteCan.c: 422: wait_low_2 = 0;
 16357  01623E  984B               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16358                           
 16359                           ;RemoteCan.c: 423: if (PORTBbits.RB4 == 1) {
 16360  016240  A881               	btfss	3969,4,c	;volatile
 16361  016242  0012               	return	
 16362                           
 16363                           ;RemoteCan.c: 424: F1_switch = ~F1_switch;
 16364  016244  B24A               	btfsc	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16365  016246  D002               	goto	u8850
 16366  016248  824A               	bsf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16367  01624A  D001               	goto	u8865
 16368  01624C                     u8850:
 16369  01624C  924A               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16370  01624E                     u8865:
 16371                           
 16372                           ;RemoteCan.c: 425: wait_low_2 = 1;
 16373  01624E  884B               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16374  016250  0012               	return	
 16375  016252                     __end_of_F1_Button_Polling:
 16376                           	opt stack 0
 16377                           tblptru	equ	0xFF8
 16378                           tblptrh	equ	0xFF7
 16379                           tblptrl	equ	0xFF6
 16380                           tablat	equ	0xFF5
 16381                           prodh	equ	0xFF4
 16382                           prodl	equ	0xFF3
 16383                           intcon	equ	0xFF2
 16384                           postinc0	equ	0xFEE
 16385                           wreg	equ	0xFE8
 16386                           indf1	equ	0xFE7
 16387                           plusw1	equ	0xFE3
 16388                           fsr1h	equ	0xFE2
 16389                           fsr1l	equ	0xFE1
 16390                           indf2	equ	0xFDF
 16391                           postinc2	equ	0xFDE
 16392                           plusw2	equ	0xFDB
 16393                           fsr2h	equ	0xFDA
 16394                           fsr2l	equ	0xFD9
 16395                           status	equ	0xFD8
 16396                           
 16397 ;; *************** function _CAN_interpreter *****************
 16398 ;; Defined at:
 16399 ;;		line 467 in file "RemoteCan.c"
 16400 ;; Parameters:    Size  Location     Type
 16401 ;;		None
 16402 ;; Auto vars:     Size  Location     Type
 16403 ;;		None
 16404 ;; Return value:  Size  Location     Type
 16405 ;;		None               void
 16406 ;; Registers used:
 16407 ;;		wreg, status,2, status,0
 16408 ;; Tracked objects:
 16409 ;;		On entry : 0/0
 16410 ;;		On exit  : 0/0
 16411 ;;		Unchanged: 0/0
 16412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16415 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16416 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16417 ;;Total ram usage:        4 bytes
 16418 ;; Hardware stack levels used:    1
 16419 ;; Hardware stack levels required when called:    3
 16420 ;; This function calls:
 16421 ;;		Nothing
 16422 ;; This function is called by:
 16423 ;;		_main
 16424 ;; This function uses a non-reentrant model
 16425 ;;
 16426                           
 16427                           	psect	text48
 16428  015A42                     __ptext48:
 16429                           	opt stack 0
 16430  015A42                     _CAN_interpreter:
 16431                           	opt stack 27
 16432                           
 16433                           ;RemoteCan.c: 468: if (id == 0b00000000010) {
 16434                           
 16435                           ;incstack = 0
 16436  015A42  0E02               	movlw	2
 16437  015A44  1805               	xorwf	_id,w,c	;volatile
 16438  015A46  1006               	iorwf	_id+1,w,c	;volatile
 16439  015A48  1007               	iorwf	_id+2,w,c	;volatile
 16440  015A4A  1008               	iorwf	_id+3,w,c	;volatile
 16441  015A4C  A4D8               	btfss	status,2,c
 16442  015A4E  D015               	goto	l7004
 16443                           
 16444                           ;RemoteCan.c: 469: if (RTR_Flag == 1) {
 16445  015A50  A84A               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 16446  015A52  D00C               	goto	l6994
 16447                           
 16448                           ;RemoteCan.c: 470: pr_time_4 = time_counter;
 16449  015A54  C01D  F015         	movff	_time_counter,_pr_time_4	;volatile
 16450  015A58  C01E  F016         	movff	_time_counter+1,_pr_time_4+1	;volatile
 16451  015A5C  C01F  F017         	movff	_time_counter+2,_pr_time_4+2	;volatile
 16452  015A60  C020  F018         	movff	_time_counter+3,_pr_time_4+3	;volatile
 16453                           
 16454                           ;RemoteCan.c: 471: MotoreFlag = 1;
 16455  015A64  864A               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 16456                           
 16457                           ;RemoteCan.c: 472: AbsFlag = 0;
 16458  015A66  904A               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 16459                           
 16460                           ;RemoteCan.c: 473: SterzoFlag = 0;
 16461  015A68  9A4A               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 16462                           
 16463                           ;RemoteCan.c: 474: } else {
 16464  015A6A  D007               	goto	l7004
 16465  015A6C                     l6994:
 16466                           
 16467                           ;RemoteCan.c: 475: if (data[0] == 0x01) {
 16468  015A6C  0427               	decf	_data,w,c
 16469  015A6E  B4D8               	btfsc	status,2,c
 16470                           
 16471                           ;RemoteCan.c: 476: AbsFlag = 1;
 16472  015A70  804A               	bsf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 16473                           
 16474                           ;RemoteCan.c: 477: }
 16475                           ;RemoteCan.c: 478: if (data[0] == 0x02) {
 16476  015A72  0E02               	movlw	2
 16477  015A74  1827               	xorwf	_data,w,c
 16478  015A76  B4D8               	btfsc	status,2,c
 16479                           
 16480                           ;RemoteCan.c: 479: SterzoFlag = 1;
 16481  015A78  8A4A               	bsf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 16482  015A7A                     l7004:
 16483                           
 16484                           ;RemoteCan.c: 486: }
 16485                           ;RemoteCan.c: 488: if ((id == 0b00000000110)&&(RTR_Flag == 0)) {
 16486  015A7A  0E06               	movlw	6
 16487  015A7C  1805               	xorwf	_id,w,c	;volatile
 16488  015A7E  1006               	iorwf	_id+1,w,c	;volatile
 16489  015A80  1007               	iorwf	_id+2,w,c	;volatile
 16490  015A82  1008               	iorwf	_id+3,w,c	;volatile
 16491  015A84  B4D8               	btfsc	status,2,c
 16492  015A86  B84A               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 16493  015A88  D029               	goto	l7016
 16494                           
 16495                           ;RemoteCan.c: 489: left_speed = data_speed_rx[1];
 16496  015A8A  C101  F021         	movff	_data_speed_rx+1,_left_speed
 16497  015A8E  6A22               	clrf	_left_speed+1,c
 16498                           
 16499                           ;RemoteCan.c: 490: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 16500  015A90  5021               	movf	_left_speed,w,c
 16501  015A92  0100               	movlb	0	; () banked
 16502  015A94  6F6E               	movwf	??_CAN_interpreter& (0+255),b
 16503  015A96  0101               	movlb	1	; () banked
 16504  015A98  5100               	movf	_data_speed_rx& (0+255),w,b
 16505  015A9A  6E21               	movwf	_left_speed,c
 16506  015A9C  C06E  F022         	movff	??_CAN_interpreter,_left_speed+1
 16507                           
 16508                           ; BSR set to: 1
 16509                           ;RemoteCan.c: 491: right_speed = data_speed_rx[3];
 16510  015AA0  C103  F023         	movff	_data_speed_rx+3,_right_speed
 16511  015AA4  6A24               	clrf	_right_speed+1,c
 16512                           
 16513                           ;RemoteCan.c: 492: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 16514  015AA6  5023               	movf	_right_speed,w,c
 16515  015AA8  0100               	movlb	0	; () banked
 16516  015AAA  6F6E               	movwf	??_CAN_interpreter& (0+255),b
 16517  015AAC  0101               	movlb	1	; () banked
 16518  015AAE  5102               	movf	(_data_speed_rx+2)& (0+255),w,b
 16519  015AB0  6E23               	movwf	_right_speed,c
 16520  015AB2  C06E  F024         	movff	??_CAN_interpreter,_right_speed+1
 16521                           
 16522                           ; BSR set to: 1
 16523                           ;RemoteCan.c: 493: actual_speed = (right_speed + left_speed) / 2;
 16524  015AB6  5021               	movf	_left_speed,w,c
 16525  015AB8  2423               	addwf	_right_speed,w,c
 16526  015ABA  0100               	movlb	0	; () banked
 16527  015ABC  6F6E               	movwf	??_CAN_interpreter& (0+255),b
 16528  015ABE  5022               	movf	_left_speed+1,w,c
 16529  015AC0  2024               	addwfc	_right_speed+1,w,c
 16530  015AC2  0100               	movlb	0	; () banked
 16531  015AC4  6F6F               	movwf	(??_CAN_interpreter+1)& (0+255),b
 16532  015AC6  90D8               	bcf	status,0,c
 16533  015AC8  0100               	movlb	0	; () banked
 16534  015ACA  316F               	rrcf	(??_CAN_interpreter+1)& (0+255),w,b
 16535  015ACC  0100               	movlb	0	; () banked
 16536  015ACE  6F70               	movwf	(??_CAN_interpreter+2)& (0+255),b
 16537  015AD0  0100               	movlb	0	; () banked
 16538  015AD2  316E               	rrcf	??_CAN_interpreter& (0+255),w,b
 16539  015AD4  0100               	movlb	0	; () banked
 16540  015AD6  6FE0               	movwf	_actual_speed& (0+255),b
 16541  015AD8  C070  F0E1         	movff	??_CAN_interpreter+2,_actual_speed+1
 16542  015ADC                     l7016:
 16543                           
 16544                           ;RemoteCan.c: 494: }
 16545                           ;RemoteCan.c: 496: if (id == 0b00000001001) {
 16546  015ADC  0E09               	movlw	9
 16547  015ADE  1805               	xorwf	_id,w,c	;volatile
 16548  015AE0  1006               	iorwf	_id+1,w,c	;volatile
 16549  015AE2  1007               	iorwf	_id+2,w,c	;volatile
 16550  015AE4  1008               	iorwf	_id+3,w,c	;volatile
 16551  015AE6  A4D8               	btfss	status,2,c
 16552  015AE8  0012               	return	
 16553                           
 16554                           ;RemoteCan.c: 497: battery = data[0];
 16555  015AEA  C027  F025         	movff	_data,_battery	;volatile
 16556  015AEE  0012               	return	
 16557  015AF0                     __end_of_CAN_interpreter:
 16558                           	opt stack 0
 16559                           tblptru	equ	0xFF8
 16560                           tblptrh	equ	0xFF7
 16561                           tblptrl	equ	0xFF6
 16562                           tablat	equ	0xFF5
 16563                           prodh	equ	0xFF4
 16564                           prodl	equ	0xFF3
 16565                           intcon	equ	0xFF2
 16566                           postinc0	equ	0xFEE
 16567                           wreg	equ	0xFE8
 16568                           indf1	equ	0xFE7
 16569                           plusw1	equ	0xFE3
 16570                           fsr1h	equ	0xFE2
 16571                           fsr1l	equ	0xFE1
 16572                           indf2	equ	0xFDF
 16573                           postinc2	equ	0xFDE
 16574                           plusw2	equ	0xFDB
 16575                           fsr2h	equ	0xFDA
 16576                           fsr2l	equ	0xFD9
 16577                           status	equ	0xFD8
 16578                           
 16579 ;; *************** function _CAN_Send *****************
 16580 ;; Defined at:
 16581 ;;		line 449 in file "RemoteCan.c"
 16582 ;; Parameters:    Size  Location     Type
 16583 ;;		None
 16584 ;; Auto vars:     Size  Location     Type
 16585 ;;		None
 16586 ;; Return value:  Size  Location     Type
 16587 ;;		None               void
 16588 ;; Registers used:
 16589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16590 ;; Tracked objects:
 16591 ;;		On entry : 0/0
 16592 ;;		On exit  : 0/0
 16593 ;;		Unchanged: 0/0
 16594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16599 ;;Total ram usage:        0 bytes
 16600 ;; Hardware stack levels used:    1
 16601 ;; Hardware stack levels required when called:    4
 16602 ;; This function calls:
 16603 ;;		_CANisTxReady
 16604 ;;		_CANsendMessage
 16605 ;; This function is called by:
 16606 ;;		_main
 16607 ;; This function uses a non-reentrant model
 16608 ;;
 16609                           
 16610                           	psect	text49
 16611  015988                     __ptext49:
 16612                           	opt stack 0
 16613  015988                     _CAN_Send:
 16614                           	opt stack 26
 16615  015988                     l6956:
 16616  015988  ECBF  F0B0         	call	_CANisTxReady	;wreg free
 16617  01598C  06E8               	decf	wreg,f,c
 16618  01598E  A4D8               	btfss	status,2,c
 16619  015990  D7FB               	goto	l6956
 16620                           
 16621                           ;RemoteCan.c: 452: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 16622  015992  0E05               	movlw	5
 16623  015994  0100               	movlb	0	; () banked
 16624  015996  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
 16625  015998  0E00               	movlw	0
 16626  01599A  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16627  01599C  0E00               	movlw	0
 16628  01599E  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16629  0159A0  0E00               	movlw	0
 16630  0159A2  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16631  0159A4  0EF0               	movlw	low _data_steering
 16632  0159A6  0100               	movlb	0	; () banked
 16633  0159A8  6F72               	movwf	CANsendMessage@data& (0+255),b
 16634  0159AA  0E00               	movlw	high _data_steering
 16635  0159AC  0100               	movlb	0	; () banked
 16636  0159AE  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
 16637  0159B0  0E08               	movlw	8
 16638  0159B2  0100               	movlb	0	; () banked
 16639  0159B4  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
 16640  0159B6  0EBC               	movlw	188
 16641  0159B8  0100               	movlb	0	; () banked
 16642  0159BA  6F75               	movwf	CANsendMessage@flags& (0+255),b
 16643  0159BC  ECCD  F089         	call	_CANsendMessage	;wreg free
 16644                           
 16645                           ;RemoteCan.c: 455: data_speed[0] = set_speed;
 16646  0159C0  C0E4  F0EF         	movff	_set_speed,_data_speed	;volatile
 16647                           
 16648                           ;RemoteCan.c: 456: data_speed[1] = (set_speed >> 8);
 16649  0159C4  0100               	movlb	0	; () banked
 16650  0159C6  51E5               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 16651  0159C8  0100               	movlb	0	; () banked
 16652  0159CA  6FF0               	movwf	(_data_speed+1)& (0+255),b
 16653                           
 16654                           ; BSR set to: 0
 16655                           ;RemoteCan.c: 457: data_speed[2] = dir;
 16656  0159CC  C0E8  F0F1         	movff	_dir,_data_speed+2	;volatile
 16657  0159D0                     l6966:
 16658  0159D0  ECBF  F0B0         	call	_CANisTxReady	;wreg free
 16659  0159D4  06E8               	decf	wreg,f,c
 16660  0159D6  A4D8               	btfss	status,2,c
 16661  0159D8  D7FB               	goto	l6966
 16662                           
 16663                           ;RemoteCan.c: 459: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 16664  0159DA  0E03               	movlw	3
 16665  0159DC  0100               	movlb	0	; () banked
 16666  0159DE  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
 16667  0159E0  0E00               	movlw	0
 16668  0159E2  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16669  0159E4  0E00               	movlw	0
 16670  0159E6  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16671  0159E8  0E00               	movlw	0
 16672  0159EA  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16673  0159EC  0EEF               	movlw	low _data_speed
 16674  0159EE  0100               	movlb	0	; () banked
 16675  0159F0  6F72               	movwf	CANsendMessage@data& (0+255),b
 16676  0159F2  0E00               	movlw	high _data_speed
 16677  0159F4  0100               	movlb	0	; () banked
 16678  0159F6  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
 16679  0159F8  0E08               	movlw	8
 16680  0159FA  0100               	movlb	0	; () banked
 16681  0159FC  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
 16682  0159FE  0EBC               	movlw	188
 16683  015A00  0100               	movlb	0	; () banked
 16684  015A02  6F75               	movwf	CANsendMessage@flags& (0+255),b
 16685  015A04  ECCD  F089         	call	_CANsendMessage	;wreg free
 16686  015A08                     l6970:
 16687  015A08  ECBF  F0B0         	call	_CANisTxReady	;wreg free
 16688  015A0C  06E8               	decf	wreg,f,c
 16689  015A0E  A4D8               	btfss	status,2,c
 16690  015A10  D7FB               	goto	l6970
 16691                           
 16692                           ;RemoteCan.c: 463: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_1);
 16693  015A12  0E04               	movlw	4
 16694  015A14  0100               	movlb	0	; () banked
 16695  015A16  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
 16696  015A18  0E00               	movlw	0
 16697  015A1A  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16698  015A1C  0E00               	movlw	0
 16699  015A1E  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16700  015A20  0E00               	movlw	0
 16701  015A22  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16702  015A24  0EEE               	movlw	low _data_brake
 16703  015A26  0100               	movlb	0	; () banked
 16704  015A28  6F72               	movwf	CANsendMessage@data& (0+255),b
 16705  015A2A  0E00               	movlw	high _data_brake
 16706  015A2C  0100               	movlb	0	; () banked
 16707  015A2E  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
 16708  015A30  0E08               	movlw	8
 16709  015A32  0100               	movlb	0	; () banked
 16710  015A34  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
 16711  015A36  0EBD               	movlw	189
 16712  015A38  0100               	movlb	0	; () banked
 16713  015A3A  6F75               	movwf	CANsendMessage@flags& (0+255),b
 16714  015A3C  ECCD  F089         	call	_CANsendMessage	;wreg free
 16715  015A40  0012               	return		;funcret
 16716  015A42                     __end_of_CAN_Send:
 16717                           	opt stack 0
 16718                           tblptru	equ	0xFF8
 16719                           tblptrh	equ	0xFF7
 16720                           tblptrl	equ	0xFF6
 16721                           tablat	equ	0xFF5
 16722                           prodh	equ	0xFF4
 16723                           prodl	equ	0xFF3
 16724                           intcon	equ	0xFF2
 16725                           postinc0	equ	0xFEE
 16726                           wreg	equ	0xFE8
 16727                           indf1	equ	0xFE7
 16728                           plusw1	equ	0xFE3
 16729                           fsr1h	equ	0xFE2
 16730                           fsr1l	equ	0xFE1
 16731                           indf2	equ	0xFDF
 16732                           postinc2	equ	0xFDE
 16733                           plusw2	equ	0xFDB
 16734                           fsr2h	equ	0xFDA
 16735                           fsr2l	equ	0xFD9
 16736                           status	equ	0xFD8
 16737                           
 16738 ;; *************** function _CANsendMessage *****************
 16739 ;; Defined at:
 16740 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 16741 ;; Parameters:    Size  Location     Type
 16742 ;;  identifier      4   14[BANK0 ] unsigned long 
 16743 ;;  data            2   18[BANK0 ] PTR unsigned char 
 16744 ;;		 -> data_speed(1), park_assist_state(8), data_brake(1), data_steering(1), 
 16745 ;;		 -> data(1), 
 16746 ;;  dataLength      1   20[BANK0 ] unsigned char 
 16747 ;;  flags           1   21[BANK0 ] enum E16909
 16748 ;; Auto vars:     Size  Location     Type
 16749 ;;  tamp            4   26[BANK0 ] unsigned long 
 16750 ;; Return value:  Size  Location     Type
 16751 ;;		None               void
 16752 ;; Registers used:
 16753 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16754 ;; Tracked objects:
 16755 ;;		On entry : 0/0
 16756 ;;		On exit  : 0/0
 16757 ;;		Unchanged: 0/0
 16758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16759 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16760 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16761 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16762 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16763 ;;Total ram usage:       16 bytes
 16764 ;; Hardware stack levels used:    1
 16765 ;; Hardware stack levels required when called:    3
 16766 ;; This function calls:
 16767 ;;		Nothing
 16768 ;; This function is called by:
 16769 ;;		_main
 16770 ;;		_LCD_Handler
 16771 ;;		_CAN_Send
 16772 ;; This function uses a non-reentrant model
 16773 ;;
 16774                           
 16775                           	psect	text50
 16776  01139A                     __ptext50:
 16777                           	opt stack 0
 16778  01139A                     _CANsendMessage:
 16779                           	opt stack 26
 16780                           
 16781                           ;inc\CANlib.h: 296: unsigned long tamp;
 16782                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 16783                           
 16784                           ;incstack = 0
 16785  01139A  010F               	movlb	15	; () banked
 16786  01139C  B740               	btfsc	64,3,b	;volatile
 16787  01139E  D13F               	goto	l375
 16788                           
 16789                           ; BSR set to: 15
 16790                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 16791  0113A0  C074  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 16792                           
 16793                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 16794  0113A4  0100               	movlb	0	; () banked
 16795  0113A6  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
 16796  0113A8  D003               	goto	l376
 16797                           
 16798                           ; BSR set to: 0
 16799                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 16800  0113AA  010F               	movlb	15	; () banked
 16801  0113AC  8D45               	bsf	69,6,b	;volatile
 16802  0113AE  D002               	goto	l377
 16803  0113B0                     l376:
 16804                           
 16805                           ; BSR set to: 0
 16806                           ;inc\CANlib.h: 302: else
 16807                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 16808  0113B0  010F               	movlb	15	; () banked
 16809  0113B2  9D45               	bcf	69,6,b	;volatile
 16810  0113B4                     l377:
 16811                           
 16812                           ; BSR set to: 15
 16813                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 16814  0113B4  0100               	movlb	0	; () banked
 16815  0113B6  A775               	btfss	CANsendMessage@flags& (0+255),3,b
 16816  0113B8  D079               	goto	l378
 16817                           
 16818                           ; BSR set to: 0
 16819                           ;inc\CANlib.h: 306: {
 16820                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 16821  0113BA  0100               	movlb	0	; () banked
 16822  0113BC  516E               	movf	CANsendMessage@identifier& (0+255),w,b
 16823  0113BE  0100               	movlb	0	; () banked
 16824  0113C0  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16825  0113C2  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16826  0113C4  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16827  0113C6  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16828                           
 16829                           ; BSR set to: 0
 16830                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 16831  0113C8  C07A  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 16832                           
 16833                           ; BSR set to: 0
 16834                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 16835  0113CC  0E00               	movlw	0
 16836  0113CE  0100               	movlb	0	; () banked
 16837  0113D0  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 16838  0113D2  0100               	movlb	0	; () banked
 16839  0113D4  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16840  0113D6  0EFF               	movlw	255
 16841  0113D8  0100               	movlb	0	; () banked
 16842  0113DA  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16843  0113DC  0100               	movlb	0	; () banked
 16844  0113DE  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16845  0113E0  0E00               	movlw	0
 16846  0113E2  0100               	movlb	0	; () banked
 16847  0113E4  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16848  0113E6  0100               	movlb	0	; () banked
 16849  0113E8  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16850  0113EA  0E00               	movlw	0
 16851  0113EC  0100               	movlb	0	; () banked
 16852  0113EE  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16853  0113F0  0100               	movlb	0	; () banked
 16854  0113F2  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16855                           
 16856                           ; BSR set to: 0
 16857                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 16858  0113F4  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 16859  0113F8  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16860  0113FC  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16861  011400  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16862  011404  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
 16863  011408  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 16864  01140C  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 16865  011410  0100               	movlb	0	; () banked
 16866  011412  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
 16867  011414  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 16868  011418  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16869  01141C  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16870  011420  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16871                           
 16872                           ; BSR set to: 0
 16873                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 16874  011424  C07A  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 16875                           
 16876                           ; BSR set to: 0
 16877                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 16878  011428  0E00               	movlw	0
 16879  01142A  010F               	movlb	15	; () banked
 16880  01142C  6F42               	movwf	66,b	;volatile
 16881                           
 16882                           ; BSR set to: 15
 16883                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 16884  01142E  010F               	movlb	15	; () banked
 16885  011430  8742               	bsf	66,3,b	;volatile
 16886                           
 16887                           ; BSR set to: 15
 16888                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 16889  011432  0100               	movlb	0	; () banked
 16890  011434  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 16891  011436  D002               	goto	l379
 16892                           
 16893                           ; BSR set to: 0
 16894                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 16895  011438  010F               	movlb	15	; () banked
 16896  01143A  8142               	bsf	66,0,b	;volatile
 16897  01143C                     l379:
 16898                           
 16899                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 16900  01143C  0100               	movlb	0	; () banked
 16901  01143E  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 16902  011440  D002               	goto	l380
 16903                           
 16904                           ; BSR set to: 0
 16905                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 16906  011442  010F               	movlb	15	; () banked
 16907  011444  8342               	bsf	66,1,b	;volatile
 16908  011446                     l380:
 16909                           
 16910                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 16911  011446  0100               	movlb	0	; () banked
 16912  011448  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 16913  01144A  D002               	goto	l381
 16914                           
 16915                           ; BSR set to: 0
 16916                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 16917  01144C  010F               	movlb	15	; () banked
 16918  01144E  8B42               	bsf	66,5,b	;volatile
 16919  011450                     l381:
 16920                           
 16921                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 16922  011450  0100               	movlb	0	; () banked
 16923  011452  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 16924  011454  D002               	goto	l382
 16925                           
 16926                           ; BSR set to: 0
 16927                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 16928  011456  010F               	movlb	15	; () banked
 16929  011458  8D42               	bsf	66,6,b	;volatile
 16930  01145A                     l382:
 16931                           
 16932                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 16933  01145A  0100               	movlb	0	; () banked
 16934  01145C  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 16935  01145E  D002               	goto	l6084
 16936                           
 16937                           ; BSR set to: 0
 16938                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 16939  011460  010F               	movlb	15	; () banked
 16940  011462  8F42               	bsf	66,7,b	;volatile
 16941  011464                     l6084:
 16942                           
 16943                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 16944  011464  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 16945  011468  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16946  01146C  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16947  011470  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16948  011474  0E16               	movlw	22
 16949  011476  D006               	goto	u7540
 16950  011478                     u7545:
 16951  011478  0100               	movlb	0	; () banked
 16952  01147A  90D8               	bcf	status,0,c
 16953  01147C  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16954  01147E  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16955  011480  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16956  011482  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 16957  011484                     u7540:
 16958  011484  2EE8               	decfsz	wreg,f,c
 16959  011486  D7F8               	goto	u7545
 16960  011488  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 16961  01148C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16962  011490  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16963  011494  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16964                           
 16965                           ; BSR set to: 0
 16966                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 16967  011498  0100               	movlb	0	; () banked
 16968  01149A  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 16969  01149C  0100               	movlb	0	; () banked
 16970  01149E  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 16971  0114A0  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16972  0114A2  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16973  0114A4  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16974                           
 16975                           ; BSR set to: 0
 16976                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 16977  0114A6  C07A  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 16978                           
 16979                           ;inc\CANlib.h: 332: }
 16980  0114AA  D059               	goto	l6104
 16981  0114AC                     l378:
 16982                           
 16983                           ; BSR set to: 0
 16984                           ;inc\CANlib.h: 334: else
 16985                           ;inc\CANlib.h: 336: {
 16986                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 16987  0114AC  010F               	movlb	15	; () banked
 16988  0114AE  9742               	bcf	66,3,b	;volatile
 16989                           
 16990                           ; BSR set to: 15
 16991                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 16992  0114B0  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 16993  0114B4  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16994  0114B8  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16995  0114BC  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16996  0114C0  0E04               	movlw	4
 16997  0114C2  D006               	goto	u7550
 16998  0114C4                     u7555:
 16999  0114C4  0100               	movlb	0	; () banked
 17000  0114C6  90D8               	bcf	status,0,c
 17001  0114C8  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17002  0114CA  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17003  0114CC  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17004  0114CE  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 17005  0114D0                     u7550:
 17006  0114D0  2EE8               	decfsz	wreg,f,c
 17007  0114D2  D7F8               	goto	u7555
 17008  0114D4  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 17009  0114D8  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17010  0114DC  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17011  0114E0  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17012                           
 17013                           ; BSR set to: 0
 17014                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 17015  0114E4  0100               	movlb	0	; () banked
 17016  0114E6  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 17017  0114E8  0100               	movlb	0	; () banked
 17018  0114EA  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 17019  0114EC  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17020  0114EE  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17021  0114F0  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17022                           
 17023                           ; BSR set to: 0
 17024                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 17025  0114F2  C07A  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17026                           
 17027                           ; BSR set to: 0
 17028                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 17029  0114F6  0E07               	movlw	7
 17030  0114F8  0100               	movlb	0	; () banked
 17031  0114FA  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 17032  0114FC  0100               	movlb	0	; () banked
 17033  0114FE  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 17034  011500  0E00               	movlw	0
 17035  011502  0100               	movlb	0	; () banked
 17036  011504  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17037  011506  0100               	movlb	0	; () banked
 17038  011508  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17039  01150A  0E00               	movlw	0
 17040  01150C  0100               	movlb	0	; () banked
 17041  01150E  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17042  011510  0100               	movlb	0	; () banked
 17043  011512  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17044  011514  0E00               	movlw	0
 17045  011516  0100               	movlb	0	; () banked
 17046  011518  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17047  01151A  0100               	movlb	0	; () banked
 17048  01151C  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17049                           
 17050                           ; BSR set to: 0
 17051                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 17052  01151E  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 17053  011522  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17054  011526  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17055  01152A  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17056  01152E  0E05               	movlw	5
 17057  011530                     u7565:
 17058  011530  90D8               	bcf	status,0,c
 17059  011532  0100               	movlb	0	; () banked
 17060  011534  3776               	rlcf	??_CANsendMessage& (0+255),f,b
 17061  011536  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17062  011538  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17063  01153A  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17064  01153C  2EE8               	decfsz	wreg,f,c
 17065  01153E  D7F8               	goto	u7565
 17066  011540  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 17067  011544  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17068  011548  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17069  01154C  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17070                           
 17071                           ; BSR set to: 0
 17072                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 17073  011550  010F               	movlb	15	; () banked
 17074  011552  5142               	movf	66,w,b	;volatile
 17075  011554  0B1F               	andlw	31
 17076  011556  010F               	movlb	15	; () banked
 17077  011558  6F42               	movwf	66,b	;volatile
 17078                           
 17079                           ; BSR set to: 15
 17080                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 17081  01155A  C07A  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 17082  01155E                     l6104:
 17083                           
 17084                           ;inc\CANlib.h: 347: }
 17085                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 17086  01155E  0100               	movlb	0	; () banked
 17087  011560  A175               	btfss	CANsendMessage@flags& (0+255),0,b
 17088  011562  D003               	goto	l385
 17089                           
 17090                           ; BSR set to: 0
 17091                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 17092  011564  010F               	movlb	15	; () banked
 17093  011566  8140               	bsf	64,0,b	;volatile
 17094  011568  D002               	goto	l386
 17095  01156A                     l385:
 17096                           
 17097                           ; BSR set to: 0
 17098                           ;inc\CANlib.h: 351: else
 17099                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 17100  01156A  010F               	movlb	15	; () banked
 17101  01156C  9140               	bcf	64,0,b	;volatile
 17102  01156E                     l386:
 17103                           
 17104                           ; BSR set to: 15
 17105                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 17106  01156E  0100               	movlb	0	; () banked
 17107  011570  A375               	btfss	CANsendMessage@flags& (0+255),1,b
 17108  011572  D003               	goto	l387
 17109                           
 17110                           ; BSR set to: 0
 17111                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 17112  011574  010F               	movlb	15	; () banked
 17113  011576  8340               	bsf	64,1,b	;volatile
 17114  011578  D002               	goto	l6110
 17115  01157A                     l387:
 17116                           
 17117                           ; BSR set to: 0
 17118                           ;inc\CANlib.h: 355: else
 17119                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 17120  01157A  010F               	movlb	15	; () banked
 17121  01157C  9340               	bcf	64,1,b	;volatile
 17122  01157E                     l6110:
 17123                           
 17124                           ; BSR set to: 15
 17125                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 17126  01157E  C072  FFD9         	movff	CANsendMessage@data,fsr2l
 17127  011582  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
 17128  011586  50DF               	movf	indf2,w,c
 17129  011588  010F               	movlb	15	; () banked
 17130  01158A  6F46               	movwf	70,b	;volatile
 17131                           
 17132                           ; BSR set to: 15
 17133                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 17134  01158C  0100               	movlb	0	; () banked
 17135  01158E  EE20 F001          	lfsr	2,1
 17136  011592  5172               	movf	CANsendMessage@data& (0+255),w,b
 17137  011594  26D9               	addwf	fsr2l,f,c
 17138  011596  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17139  011598  22DA               	addwfc	fsr2h,f,c
 17140  01159A  50DF               	movf	indf2,w,c
 17141  01159C  010F               	movlb	15	; () banked
 17142  01159E  6F47               	movwf	71,b	;volatile
 17143                           
 17144                           ; BSR set to: 15
 17145                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 17146  0115A0  0100               	movlb	0	; () banked
 17147  0115A2  EE20 F002          	lfsr	2,2
 17148  0115A6  5172               	movf	CANsendMessage@data& (0+255),w,b
 17149  0115A8  26D9               	addwf	fsr2l,f,c
 17150  0115AA  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17151  0115AC  22DA               	addwfc	fsr2h,f,c
 17152  0115AE  50DF               	movf	indf2,w,c
 17153  0115B0  010F               	movlb	15	; () banked
 17154  0115B2  6F48               	movwf	72,b	;volatile
 17155                           
 17156                           ; BSR set to: 15
 17157                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 17158  0115B4  0100               	movlb	0	; () banked
 17159  0115B6  EE20 F003          	lfsr	2,3
 17160  0115BA  5172               	movf	CANsendMessage@data& (0+255),w,b
 17161  0115BC  26D9               	addwf	fsr2l,f,c
 17162  0115BE  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17163  0115C0  22DA               	addwfc	fsr2h,f,c
 17164  0115C2  50DF               	movf	indf2,w,c
 17165  0115C4  010F               	movlb	15	; () banked
 17166  0115C6  6F49               	movwf	73,b	;volatile
 17167                           
 17168                           ; BSR set to: 15
 17169                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 17170  0115C8  0100               	movlb	0	; () banked
 17171  0115CA  EE20 F004          	lfsr	2,4
 17172  0115CE  5172               	movf	CANsendMessage@data& (0+255),w,b
 17173  0115D0  26D9               	addwf	fsr2l,f,c
 17174  0115D2  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17175  0115D4  22DA               	addwfc	fsr2h,f,c
 17176  0115D6  50DF               	movf	indf2,w,c
 17177  0115D8  010F               	movlb	15	; () banked
 17178  0115DA  6F4A               	movwf	74,b	;volatile
 17179                           
 17180                           ; BSR set to: 15
 17181                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 17182  0115DC  0100               	movlb	0	; () banked
 17183  0115DE  EE20 F005          	lfsr	2,5
 17184  0115E2  5172               	movf	CANsendMessage@data& (0+255),w,b
 17185  0115E4  26D9               	addwf	fsr2l,f,c
 17186  0115E6  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17187  0115E8  22DA               	addwfc	fsr2h,f,c
 17188  0115EA  50DF               	movf	indf2,w,c
 17189  0115EC  010F               	movlb	15	; () banked
 17190  0115EE  6F4B               	movwf	75,b	;volatile
 17191                           
 17192                           ; BSR set to: 15
 17193                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 17194  0115F0  0100               	movlb	0	; () banked
 17195  0115F2  EE20 F006          	lfsr	2,6
 17196  0115F6  5172               	movf	CANsendMessage@data& (0+255),w,b
 17197  0115F8  26D9               	addwf	fsr2l,f,c
 17198  0115FA  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17199  0115FC  22DA               	addwfc	fsr2h,f,c
 17200  0115FE  50DF               	movf	indf2,w,c
 17201  011600  010F               	movlb	15	; () banked
 17202  011602  6F4C               	movwf	76,b	;volatile
 17203                           
 17204                           ; BSR set to: 15
 17205                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 17206  011604  0100               	movlb	0	; () banked
 17207  011606  EE20 F007          	lfsr	2,7
 17208  01160A  5172               	movf	CANsendMessage@data& (0+255),w,b
 17209  01160C  26D9               	addwf	fsr2l,f,c
 17210  01160E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17211  011610  22DA               	addwfc	fsr2h,f,c
 17212  011612  50DF               	movf	indf2,w,c
 17213  011614  010F               	movlb	15	; () banked
 17214  011616  6F4D               	movwf	77,b	;volatile
 17215                           
 17216                           ; BSR set to: 15
 17217                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 17218  011618  010F               	movlb	15	; () banked
 17219  01161A  8740               	bsf	64,3,b	;volatile
 17220                           
 17221                           ; BSR set to: 15
 17222                           ;inc\CANlib.h: 368: return;
 17223  01161C  0012               	return	
 17224  01161E                     l375:
 17225                           
 17226                           ; BSR set to: 15
 17227                           ;inc\CANlib.h: 369: }
 17228                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 17229  01161E  010F               	movlb	15	; () banked
 17230  011620  B730               	btfsc	48,3,b	;volatile
 17231  011622  D13F               	goto	l390
 17232                           
 17233                           ; BSR set to: 15
 17234                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 17235  011624  C074  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 17236                           
 17237                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 17238  011628  0100               	movlb	0	; () banked
 17239  01162A  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
 17240  01162C  D003               	goto	l391
 17241                           
 17242                           ; BSR set to: 0
 17243                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 17244  01162E  010F               	movlb	15	; () banked
 17245  011630  8D35               	bsf	53,6,b	;volatile
 17246  011632  D002               	goto	l392
 17247  011634                     l391:
 17248                           
 17249                           ; BSR set to: 0
 17250                           ;inc\CANlib.h: 378: else
 17251                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 17252  011634  010F               	movlb	15	; () banked
 17253  011636  9D35               	bcf	53,6,b	;volatile
 17254  011638                     l392:
 17255                           
 17256                           ; BSR set to: 15
 17257                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 17258  011638  0100               	movlb	0	; () banked
 17259  01163A  A775               	btfss	CANsendMessage@flags& (0+255),3,b
 17260  01163C  D079               	goto	l393
 17261                           
 17262                           ; BSR set to: 0
 17263                           ;inc\CANlib.h: 382: {
 17264                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 17265  01163E  0100               	movlb	0	; () banked
 17266  011640  516E               	movf	CANsendMessage@identifier& (0+255),w,b
 17267  011642  0100               	movlb	0	; () banked
 17268  011644  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 17269  011646  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17270  011648  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17271  01164A  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17272                           
 17273                           ; BSR set to: 0
 17274                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 17275  01164C  C07A  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 17276                           
 17277                           ; BSR set to: 0
 17278                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 17279  011650  0E00               	movlw	0
 17280  011652  0100               	movlb	0	; () banked
 17281  011654  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 17282  011656  0100               	movlb	0	; () banked
 17283  011658  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 17284  01165A  0EFF               	movlw	255
 17285  01165C  0100               	movlb	0	; () banked
 17286  01165E  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17287  011660  0100               	movlb	0	; () banked
 17288  011662  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17289  011664  0E00               	movlw	0
 17290  011666  0100               	movlb	0	; () banked
 17291  011668  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17292  01166A  0100               	movlb	0	; () banked
 17293  01166C  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17294  01166E  0E00               	movlw	0
 17295  011670  0100               	movlb	0	; () banked
 17296  011672  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17297  011674  0100               	movlb	0	; () banked
 17298  011676  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17299                           
 17300                           ; BSR set to: 0
 17301                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 17302  011678  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 17303  01167C  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17304  011680  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17305  011684  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17306  011688  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
 17307  01168C  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17308  011690  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17309  011694  0100               	movlb	0	; () banked
 17310  011696  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
 17311  011698  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 17312  01169C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17313  0116A0  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17314  0116A4  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17315                           
 17316                           ; BSR set to: 0
 17317                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 17318  0116A8  C07A  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 17319                           
 17320                           ; BSR set to: 0
 17321                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 17322  0116AC  0E00               	movlw	0
 17323  0116AE  010F               	movlb	15	; () banked
 17324  0116B0  6F32               	movwf	50,b	;volatile
 17325                           
 17326                           ; BSR set to: 15
 17327                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 17328  0116B2  010F               	movlb	15	; () banked
 17329  0116B4  8732               	bsf	50,3,b	;volatile
 17330                           
 17331                           ; BSR set to: 15
 17332                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 17333  0116B6  0100               	movlb	0	; () banked
 17334  0116B8  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17335  0116BA  D002               	goto	l394
 17336                           
 17337                           ; BSR set to: 0
 17338                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 17339  0116BC  010F               	movlb	15	; () banked
 17340  0116BE  8132               	bsf	50,0,b	;volatile
 17341  0116C0                     l394:
 17342                           
 17343                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 17344  0116C0  0100               	movlb	0	; () banked
 17345  0116C2  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17346  0116C4  D002               	goto	l395
 17347                           
 17348                           ; BSR set to: 0
 17349                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 17350  0116C6  010F               	movlb	15	; () banked
 17351  0116C8  8332               	bsf	50,1,b	;volatile
 17352  0116CA                     l395:
 17353                           
 17354                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 17355  0116CA  0100               	movlb	0	; () banked
 17356  0116CC  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17357  0116CE  D002               	goto	l396
 17358                           
 17359                           ; BSR set to: 0
 17360                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 17361  0116D0  010F               	movlb	15	; () banked
 17362  0116D2  8B32               	bsf	50,5,b	;volatile
 17363  0116D4                     l396:
 17364                           
 17365                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 17366  0116D4  0100               	movlb	0	; () banked
 17367  0116D6  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17368  0116D8  D002               	goto	l397
 17369                           
 17370                           ; BSR set to: 0
 17371                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 17372  0116DA  010F               	movlb	15	; () banked
 17373  0116DC  8D32               	bsf	50,6,b	;volatile
 17374  0116DE                     l397:
 17375                           
 17376                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 17377  0116DE  0100               	movlb	0	; () banked
 17378  0116E0  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17379  0116E2  D002               	goto	l6160
 17380                           
 17381                           ; BSR set to: 0
 17382                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 17383  0116E4  010F               	movlb	15	; () banked
 17384  0116E6  8F32               	bsf	50,7,b	;volatile
 17385  0116E8                     l6160:
 17386                           
 17387                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 17388  0116E8  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 17389  0116EC  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17390  0116F0  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17391  0116F4  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17392  0116F8  0E16               	movlw	22
 17393  0116FA  D006               	goto	u7670
 17394  0116FC                     u7675:
 17395  0116FC  0100               	movlb	0	; () banked
 17396  0116FE  90D8               	bcf	status,0,c
 17397  011700  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17398  011702  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17399  011704  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17400  011706  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 17401  011708                     u7670:
 17402  011708  2EE8               	decfsz	wreg,f,c
 17403  01170A  D7F8               	goto	u7675
 17404  01170C  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 17405  011710  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17406  011714  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17407  011718  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17408                           
 17409                           ; BSR set to: 0
 17410                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 17411  01171C  0100               	movlb	0	; () banked
 17412  01171E  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 17413  011720  0100               	movlb	0	; () banked
 17414  011722  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 17415  011724  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17416  011726  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17417  011728  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17418                           
 17419                           ; BSR set to: 0
 17420                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 17421  01172A  C07A  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 17422                           
 17423                           ;inc\CANlib.h: 407: }
 17424  01172E  D059               	goto	l6180
 17425  011730                     l393:
 17426                           
 17427                           ; BSR set to: 0
 17428                           ;inc\CANlib.h: 409: else
 17429                           ;inc\CANlib.h: 411: {
 17430                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 17431  011730  010F               	movlb	15	; () banked
 17432  011732  9732               	bcf	50,3,b	;volatile
 17433                           
 17434                           ; BSR set to: 15
 17435                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 17436  011734  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 17437  011738  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17438  01173C  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17439  011740  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17440  011744  0E04               	movlw	4
 17441  011746  D006               	goto	u7680
 17442  011748                     u7685:
 17443  011748  0100               	movlb	0	; () banked
 17444  01174A  90D8               	bcf	status,0,c
 17445  01174C  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17446  01174E  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17447  011750  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17448  011752  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 17449  011754                     u7680:
 17450  011754  2EE8               	decfsz	wreg,f,c
 17451  011756  D7F8               	goto	u7685
 17452  011758  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 17453  01175C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17454  011760  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17455  011764  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17456                           
 17457                           ; BSR set to: 0
 17458                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 17459  011768  0100               	movlb	0	; () banked
 17460  01176A  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 17461  01176C  0100               	movlb	0	; () banked
 17462  01176E  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 17463  011770  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17464  011772  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17465  011774  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17466                           
 17467                           ; BSR set to: 0
 17468                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 17469  011776  C07A  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 17470                           
 17471                           ; BSR set to: 0
 17472                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 17473  01177A  0E07               	movlw	7
 17474  01177C  0100               	movlb	0	; () banked
 17475  01177E  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 17476  011780  0100               	movlb	0	; () banked
 17477  011782  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 17478  011784  0E00               	movlw	0
 17479  011786  0100               	movlb	0	; () banked
 17480  011788  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17481  01178A  0100               	movlb	0	; () banked
 17482  01178C  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17483  01178E  0E00               	movlw	0
 17484  011790  0100               	movlb	0	; () banked
 17485  011792  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17486  011794  0100               	movlb	0	; () banked
 17487  011796  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17488  011798  0E00               	movlw	0
 17489  01179A  0100               	movlb	0	; () banked
 17490  01179C  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17491  01179E  0100               	movlb	0	; () banked
 17492  0117A0  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17493                           
 17494                           ; BSR set to: 0
 17495                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 17496  0117A2  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 17497  0117A6  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17498  0117AA  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17499  0117AE  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17500  0117B2  0E05               	movlw	5
 17501  0117B4                     u7695:
 17502  0117B4  90D8               	bcf	status,0,c
 17503  0117B6  0100               	movlb	0	; () banked
 17504  0117B8  3776               	rlcf	??_CANsendMessage& (0+255),f,b
 17505  0117BA  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17506  0117BC  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17507  0117BE  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17508  0117C0  2EE8               	decfsz	wreg,f,c
 17509  0117C2  D7F8               	goto	u7695
 17510  0117C4  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 17511  0117C8  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17512  0117CC  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17513  0117D0  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17514                           
 17515                           ; BSR set to: 0
 17516                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 17517  0117D4  010F               	movlb	15	; () banked
 17518  0117D6  5132               	movf	50,w,b	;volatile
 17519  0117D8  0B1F               	andlw	31
 17520  0117DA  010F               	movlb	15	; () banked
 17521  0117DC  6F32               	movwf	50,b	;volatile
 17522                           
 17523                           ; BSR set to: 15
 17524                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 17525  0117DE  C07A  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 17526  0117E2                     l6180:
 17527                           
 17528                           ;inc\CANlib.h: 422: }
 17529                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 17530  0117E2  0100               	movlb	0	; () banked
 17531  0117E4  A175               	btfss	CANsendMessage@flags& (0+255),0,b
 17532  0117E6  D003               	goto	l400
 17533                           
 17534                           ; BSR set to: 0
 17535                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 17536  0117E8  010F               	movlb	15	; () banked
 17537  0117EA  8130               	bsf	48,0,b	;volatile
 17538  0117EC  D002               	goto	l401
 17539  0117EE                     l400:
 17540                           
 17541                           ; BSR set to: 0
 17542                           ;inc\CANlib.h: 426: else
 17543                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 17544  0117EE  010F               	movlb	15	; () banked
 17545  0117F0  9130               	bcf	48,0,b	;volatile
 17546  0117F2                     l401:
 17547                           
 17548                           ; BSR set to: 15
 17549                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 17550  0117F2  0100               	movlb	0	; () banked
 17551  0117F4  A375               	btfss	CANsendMessage@flags& (0+255),1,b
 17552  0117F6  D003               	goto	l402
 17553                           
 17554                           ; BSR set to: 0
 17555                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 17556  0117F8  010F               	movlb	15	; () banked
 17557  0117FA  8330               	bsf	48,1,b	;volatile
 17558  0117FC  D002               	goto	l6186
 17559  0117FE                     l402:
 17560                           
 17561                           ; BSR set to: 0
 17562                           ;inc\CANlib.h: 430: else
 17563                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 17564  0117FE  010F               	movlb	15	; () banked
 17565  011800  9330               	bcf	48,1,b	;volatile
 17566  011802                     l6186:
 17567                           
 17568                           ; BSR set to: 15
 17569                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 17570  011802  C072  FFD9         	movff	CANsendMessage@data,fsr2l
 17571  011806  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
 17572  01180A  50DF               	movf	indf2,w,c
 17573  01180C  010F               	movlb	15	; () banked
 17574  01180E  6F36               	movwf	54,b	;volatile
 17575                           
 17576                           ; BSR set to: 15
 17577                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 17578  011810  0100               	movlb	0	; () banked
 17579  011812  EE20 F001          	lfsr	2,1
 17580  011816  5172               	movf	CANsendMessage@data& (0+255),w,b
 17581  011818  26D9               	addwf	fsr2l,f,c
 17582  01181A  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17583  01181C  22DA               	addwfc	fsr2h,f,c
 17584  01181E  50DF               	movf	indf2,w,c
 17585  011820  010F               	movlb	15	; () banked
 17586  011822  6F37               	movwf	55,b	;volatile
 17587                           
 17588                           ; BSR set to: 15
 17589                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 17590  011824  0100               	movlb	0	; () banked
 17591  011826  EE20 F002          	lfsr	2,2
 17592  01182A  5172               	movf	CANsendMessage@data& (0+255),w,b
 17593  01182C  26D9               	addwf	fsr2l,f,c
 17594  01182E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17595  011830  22DA               	addwfc	fsr2h,f,c
 17596  011832  50DF               	movf	indf2,w,c
 17597  011834  010F               	movlb	15	; () banked
 17598  011836  6F38               	movwf	56,b	;volatile
 17599                           
 17600                           ; BSR set to: 15
 17601                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 17602  011838  0100               	movlb	0	; () banked
 17603  01183A  EE20 F003          	lfsr	2,3
 17604  01183E  5172               	movf	CANsendMessage@data& (0+255),w,b
 17605  011840  26D9               	addwf	fsr2l,f,c
 17606  011842  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17607  011844  22DA               	addwfc	fsr2h,f,c
 17608  011846  50DF               	movf	indf2,w,c
 17609  011848  010F               	movlb	15	; () banked
 17610  01184A  6F39               	movwf	57,b	;volatile
 17611                           
 17612                           ; BSR set to: 15
 17613                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 17614  01184C  0100               	movlb	0	; () banked
 17615  01184E  EE20 F004          	lfsr	2,4
 17616  011852  5172               	movf	CANsendMessage@data& (0+255),w,b
 17617  011854  26D9               	addwf	fsr2l,f,c
 17618  011856  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17619  011858  22DA               	addwfc	fsr2h,f,c
 17620  01185A  50DF               	movf	indf2,w,c
 17621  01185C  010F               	movlb	15	; () banked
 17622  01185E  6F3A               	movwf	58,b	;volatile
 17623                           
 17624                           ; BSR set to: 15
 17625                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 17626  011860  0100               	movlb	0	; () banked
 17627  011862  EE20 F005          	lfsr	2,5
 17628  011866  5172               	movf	CANsendMessage@data& (0+255),w,b
 17629  011868  26D9               	addwf	fsr2l,f,c
 17630  01186A  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17631  01186C  22DA               	addwfc	fsr2h,f,c
 17632  01186E  50DF               	movf	indf2,w,c
 17633  011870  010F               	movlb	15	; () banked
 17634  011872  6F3B               	movwf	59,b	;volatile
 17635                           
 17636                           ; BSR set to: 15
 17637                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 17638  011874  0100               	movlb	0	; () banked
 17639  011876  EE20 F006          	lfsr	2,6
 17640  01187A  5172               	movf	CANsendMessage@data& (0+255),w,b
 17641  01187C  26D9               	addwf	fsr2l,f,c
 17642  01187E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17643  011880  22DA               	addwfc	fsr2h,f,c
 17644  011882  50DF               	movf	indf2,w,c
 17645  011884  010F               	movlb	15	; () banked
 17646  011886  6F3C               	movwf	60,b	;volatile
 17647                           
 17648                           ; BSR set to: 15
 17649                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 17650  011888  0100               	movlb	0	; () banked
 17651  01188A  EE20 F007          	lfsr	2,7
 17652  01188E  5172               	movf	CANsendMessage@data& (0+255),w,b
 17653  011890  26D9               	addwf	fsr2l,f,c
 17654  011892  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17655  011894  22DA               	addwfc	fsr2h,f,c
 17656  011896  50DF               	movf	indf2,w,c
 17657  011898  010F               	movlb	15	; () banked
 17658  01189A  6F3D               	movwf	61,b	;volatile
 17659                           
 17660                           ; BSR set to: 15
 17661                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 17662  01189C  010F               	movlb	15	; () banked
 17663  01189E  8730               	bsf	48,3,b	;volatile
 17664                           
 17665                           ; BSR set to: 15
 17666                           ;inc\CANlib.h: 444: return;
 17667  0118A0  0012               	return	
 17668  0118A2                     l390:
 17669                           
 17670                           ; BSR set to: 15
 17671                           ;inc\CANlib.h: 445: }
 17672                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 17673  0118A2  010F               	movlb	15	; () banked
 17674  0118A4  B720               	btfsc	32,3,b	;volatile
 17675  0118A6  0012               	return	
 17676                           
 17677                           ; BSR set to: 15
 17678                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 17679  0118A8  C074  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 17680                           
 17681                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 17682  0118AC  0100               	movlb	0	; () banked
 17683  0118AE  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
 17684  0118B0  D003               	goto	l405
 17685                           
 17686                           ; BSR set to: 0
 17687                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 17688  0118B2  010F               	movlb	15	; () banked
 17689  0118B4  8D25               	bsf	37,6,b	;volatile
 17690  0118B6  D002               	goto	l406
 17691  0118B8                     l405:
 17692                           
 17693                           ; BSR set to: 0
 17694                           ;inc\CANlib.h: 454: else
 17695                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 17696  0118B8  010F               	movlb	15	; () banked
 17697  0118BA  9D25               	bcf	37,6,b	;volatile
 17698  0118BC                     l406:
 17699                           
 17700                           ; BSR set to: 15
 17701                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 17702  0118BC  0100               	movlb	0	; () banked
 17703  0118BE  A775               	btfss	CANsendMessage@flags& (0+255),3,b
 17704  0118C0  D079               	goto	l407
 17705                           
 17706                           ; BSR set to: 0
 17707                           ;inc\CANlib.h: 458: {
 17708                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 17709  0118C2  0100               	movlb	0	; () banked
 17710  0118C4  516E               	movf	CANsendMessage@identifier& (0+255),w,b
 17711  0118C6  0100               	movlb	0	; () banked
 17712  0118C8  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 17713  0118CA  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17714  0118CC  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17715  0118CE  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17716                           
 17717                           ; BSR set to: 0
 17718                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 17719  0118D0  C07A  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 17720                           
 17721                           ; BSR set to: 0
 17722                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 17723  0118D4  0E00               	movlw	0
 17724  0118D6  0100               	movlb	0	; () banked
 17725  0118D8  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 17726  0118DA  0100               	movlb	0	; () banked
 17727  0118DC  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 17728  0118DE  0EFF               	movlw	255
 17729  0118E0  0100               	movlb	0	; () banked
 17730  0118E2  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17731  0118E4  0100               	movlb	0	; () banked
 17732  0118E6  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17733  0118E8  0E00               	movlw	0
 17734  0118EA  0100               	movlb	0	; () banked
 17735  0118EC  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17736  0118EE  0100               	movlb	0	; () banked
 17737  0118F0  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17738  0118F2  0E00               	movlw	0
 17739  0118F4  0100               	movlb	0	; () banked
 17740  0118F6  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17741  0118F8  0100               	movlb	0	; () banked
 17742  0118FA  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17743                           
 17744                           ; BSR set to: 0
 17745                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 17746  0118FC  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 17747  011900  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17748  011904  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17749  011908  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17750  01190C  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
 17751  011910  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17752  011914  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17753  011918  0100               	movlb	0	; () banked
 17754  01191A  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
 17755  01191C  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 17756  011920  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17757  011924  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17758  011928  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17759                           
 17760                           ; BSR set to: 0
 17761                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 17762  01192C  C07A  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 17763                           
 17764                           ; BSR set to: 0
 17765                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 17766  011930  0E00               	movlw	0
 17767  011932  010F               	movlb	15	; () banked
 17768  011934  6F22               	movwf	34,b	;volatile
 17769                           
 17770                           ; BSR set to: 15
 17771                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 17772  011936  010F               	movlb	15	; () banked
 17773  011938  8722               	bsf	34,3,b	;volatile
 17774                           
 17775                           ; BSR set to: 15
 17776                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 17777  01193A  0100               	movlb	0	; () banked
 17778  01193C  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17779  01193E  D002               	goto	l408
 17780                           
 17781                           ; BSR set to: 0
 17782                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 17783  011940  010F               	movlb	15	; () banked
 17784  011942  8122               	bsf	34,0,b	;volatile
 17785  011944                     l408:
 17786                           
 17787                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 17788  011944  0100               	movlb	0	; () banked
 17789  011946  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17790  011948  D002               	goto	l409
 17791                           
 17792                           ; BSR set to: 0
 17793                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 17794  01194A  010F               	movlb	15	; () banked
 17795  01194C  8322               	bsf	34,1,b	;volatile
 17796  01194E                     l409:
 17797                           
 17798                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 17799  01194E  0100               	movlb	0	; () banked
 17800  011950  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17801  011952  D002               	goto	l410
 17802                           
 17803                           ; BSR set to: 0
 17804                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 17805  011954  010F               	movlb	15	; () banked
 17806  011956  8B22               	bsf	34,5,b	;volatile
 17807  011958                     l410:
 17808                           
 17809                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 17810  011958  0100               	movlb	0	; () banked
 17811  01195A  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17812  01195C  D002               	goto	l411
 17813                           
 17814                           ; BSR set to: 0
 17815                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 17816  01195E  010F               	movlb	15	; () banked
 17817  011960  8D22               	bsf	34,6,b	;volatile
 17818  011962                     l411:
 17819                           
 17820                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 17821  011962  0100               	movlb	0	; () banked
 17822  011964  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17823  011966  D002               	goto	l6236
 17824                           
 17825                           ; BSR set to: 0
 17826                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 17827  011968  010F               	movlb	15	; () banked
 17828  01196A  8F22               	bsf	34,7,b	;volatile
 17829  01196C                     l6236:
 17830                           
 17831                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 17832  01196C  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 17833  011970  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17834  011974  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17835  011978  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17836  01197C  0E16               	movlw	22
 17837  01197E  D006               	goto	u7800
 17838  011980                     u7805:
 17839  011980  0100               	movlb	0	; () banked
 17840  011982  90D8               	bcf	status,0,c
 17841  011984  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17842  011986  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17843  011988  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17844  01198A  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 17845  01198C                     u7800:
 17846  01198C  2EE8               	decfsz	wreg,f,c
 17847  01198E  D7F8               	goto	u7805
 17848  011990  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 17849  011994  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17850  011998  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17851  01199C  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17852                           
 17853                           ; BSR set to: 0
 17854                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 17855  0119A0  0100               	movlb	0	; () banked
 17856  0119A2  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 17857  0119A4  0100               	movlb	0	; () banked
 17858  0119A6  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 17859  0119A8  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17860  0119AA  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17861  0119AC  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17862                           
 17863                           ; BSR set to: 0
 17864                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 17865  0119AE  C07A  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 17866                           
 17867                           ;inc\CANlib.h: 483: }
 17868  0119B2  D059               	goto	l6256
 17869  0119B4                     l407:
 17870                           
 17871                           ; BSR set to: 0
 17872                           ;inc\CANlib.h: 485: else
 17873                           ;inc\CANlib.h: 487: {
 17874                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 17875  0119B4  010F               	movlb	15	; () banked
 17876  0119B6  9722               	bcf	34,3,b	;volatile
 17877                           
 17878                           ; BSR set to: 15
 17879                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 17880  0119B8  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
 17881  0119BC  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17882  0119C0  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17883  0119C4  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17884  0119C8  0E04               	movlw	4
 17885  0119CA  D006               	goto	u7810
 17886  0119CC                     u7815:
 17887  0119CC  0100               	movlb	0	; () banked
 17888  0119CE  90D8               	bcf	status,0,c
 17889  0119D0  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17890  0119D2  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17891  0119D4  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17892  0119D6  3376               	rrcf	??_CANsendMessage& (0+255),f,b
 17893  0119D8                     u7810:
 17894  0119D8  2EE8               	decfsz	wreg,f,c
 17895  0119DA  D7F8               	goto	u7815
 17896  0119DC  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 17897  0119E0  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17898  0119E4  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17899  0119E8  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17900                           
 17901                           ; BSR set to: 0
 17902                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 17903  0119EC  0100               	movlb	0	; () banked
 17904  0119EE  517A               	movf	CANsendMessage@tamp& (0+255),w,b
 17905  0119F0  0100               	movlb	0	; () banked
 17906  0119F2  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 17907  0119F4  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17908  0119F6  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17909  0119F8  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17910                           
 17911                           ; BSR set to: 0
 17912                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 17913  0119FA  C07A  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 17914                           
 17915                           ; BSR set to: 0
 17916                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 17917  0119FE  0E07               	movlw	7
 17918  011A00  0100               	movlb	0	; () banked
 17919  011A02  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
 17920  011A04  0100               	movlb	0	; () banked
 17921  011A06  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
 17922  011A08  0E00               	movlw	0
 17923  011A0A  0100               	movlb	0	; () banked
 17924  011A0C  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17925  011A0E  0100               	movlb	0	; () banked
 17926  011A10  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17927  011A12  0E00               	movlw	0
 17928  011A14  0100               	movlb	0	; () banked
 17929  011A16  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17930  011A18  0100               	movlb	0	; () banked
 17931  011A1A  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17932  011A1C  0E00               	movlw	0
 17933  011A1E  0100               	movlb	0	; () banked
 17934  011A20  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17935  011A22  0100               	movlb	0	; () banked
 17936  011A24  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17937                           
 17938                           ; BSR set to: 0
 17939                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 17940  011A26  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
 17941  011A2A  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17942  011A2E  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17943  011A32  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17944  011A36  0E05               	movlw	5
 17945  011A38                     u7825:
 17946  011A38  90D8               	bcf	status,0,c
 17947  011A3A  0100               	movlb	0	; () banked
 17948  011A3C  3776               	rlcf	??_CANsendMessage& (0+255),f,b
 17949  011A3E  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17950  011A40  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17951  011A42  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17952  011A44  2EE8               	decfsz	wreg,f,c
 17953  011A46  D7F8               	goto	u7825
 17954  011A48  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
 17955  011A4C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17956  011A50  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17957  011A54  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17958                           
 17959                           ; BSR set to: 0
 17960                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 17961  011A58  010F               	movlb	15	; () banked
 17962  011A5A  5122               	movf	34,w,b	;volatile
 17963  011A5C  0B1F               	andlw	31
 17964  011A5E  010F               	movlb	15	; () banked
 17965  011A60  6F22               	movwf	34,b	;volatile
 17966                           
 17967                           ; BSR set to: 15
 17968                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 17969  011A62  C07A  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 17970  011A66                     l6256:
 17971                           
 17972                           ;inc\CANlib.h: 498: }
 17973                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 17974  011A66  0100               	movlb	0	; () banked
 17975  011A68  A175               	btfss	CANsendMessage@flags& (0+255),0,b
 17976  011A6A  D003               	goto	l414
 17977                           
 17978                           ; BSR set to: 0
 17979                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 17980  011A6C  010F               	movlb	15	; () banked
 17981  011A6E  8120               	bsf	32,0,b	;volatile
 17982  011A70  D002               	goto	l415
 17983  011A72                     l414:
 17984                           
 17985                           ; BSR set to: 0
 17986                           ;inc\CANlib.h: 502: else
 17987                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 17988  011A72  010F               	movlb	15	; () banked
 17989  011A74  9120               	bcf	32,0,b	;volatile
 17990  011A76                     l415:
 17991                           
 17992                           ; BSR set to: 15
 17993                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 17994  011A76  0100               	movlb	0	; () banked
 17995  011A78  A375               	btfss	CANsendMessage@flags& (0+255),1,b
 17996  011A7A  D003               	goto	l416
 17997                           
 17998                           ; BSR set to: 0
 17999                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 18000  011A7C  010F               	movlb	15	; () banked
 18001  011A7E  8320               	bsf	32,1,b	;volatile
 18002  011A80  D002               	goto	l6262
 18003  011A82                     l416:
 18004                           
 18005                           ; BSR set to: 0
 18006                           ;inc\CANlib.h: 506: else
 18007                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 18008  011A82  010F               	movlb	15	; () banked
 18009  011A84  9320               	bcf	32,1,b	;volatile
 18010  011A86                     l6262:
 18011                           
 18012                           ; BSR set to: 15
 18013                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 18014  011A86  C072  FFD9         	movff	CANsendMessage@data,fsr2l
 18015  011A8A  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18016  011A8E  50DF               	movf	indf2,w,c
 18017  011A90  010F               	movlb	15	; () banked
 18018  011A92  6F26               	movwf	38,b	;volatile
 18019                           
 18020                           ; BSR set to: 15
 18021                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 18022  011A94  0100               	movlb	0	; () banked
 18023  011A96  EE20 F001          	lfsr	2,1
 18024  011A9A  5172               	movf	CANsendMessage@data& (0+255),w,b
 18025  011A9C  26D9               	addwf	fsr2l,f,c
 18026  011A9E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18027  011AA0  22DA               	addwfc	fsr2h,f,c
 18028  011AA2  50DF               	movf	indf2,w,c
 18029  011AA4  010F               	movlb	15	; () banked
 18030  011AA6  6F27               	movwf	39,b	;volatile
 18031                           
 18032                           ; BSR set to: 15
 18033                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 18034  011AA8  0100               	movlb	0	; () banked
 18035  011AAA  EE20 F002          	lfsr	2,2
 18036  011AAE  5172               	movf	CANsendMessage@data& (0+255),w,b
 18037  011AB0  26D9               	addwf	fsr2l,f,c
 18038  011AB2  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18039  011AB4  22DA               	addwfc	fsr2h,f,c
 18040  011AB6  50DF               	movf	indf2,w,c
 18041  011AB8  010F               	movlb	15	; () banked
 18042  011ABA  6F28               	movwf	40,b	;volatile
 18043                           
 18044                           ; BSR set to: 15
 18045                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 18046  011ABC  0100               	movlb	0	; () banked
 18047  011ABE  EE20 F003          	lfsr	2,3
 18048  011AC2  5172               	movf	CANsendMessage@data& (0+255),w,b
 18049  011AC4  26D9               	addwf	fsr2l,f,c
 18050  011AC6  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18051  011AC8  22DA               	addwfc	fsr2h,f,c
 18052  011ACA  50DF               	movf	indf2,w,c
 18053  011ACC  010F               	movlb	15	; () banked
 18054  011ACE  6F29               	movwf	41,b	;volatile
 18055                           
 18056                           ; BSR set to: 15
 18057                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 18058  011AD0  0100               	movlb	0	; () banked
 18059  011AD2  EE20 F004          	lfsr	2,4
 18060  011AD6  5172               	movf	CANsendMessage@data& (0+255),w,b
 18061  011AD8  26D9               	addwf	fsr2l,f,c
 18062  011ADA  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18063  011ADC  22DA               	addwfc	fsr2h,f,c
 18064  011ADE  50DF               	movf	indf2,w,c
 18065  011AE0  010F               	movlb	15	; () banked
 18066  011AE2  6F2A               	movwf	42,b	;volatile
 18067                           
 18068                           ; BSR set to: 15
 18069                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 18070  011AE4  0100               	movlb	0	; () banked
 18071  011AE6  EE20 F005          	lfsr	2,5
 18072  011AEA  5172               	movf	CANsendMessage@data& (0+255),w,b
 18073  011AEC  26D9               	addwf	fsr2l,f,c
 18074  011AEE  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18075  011AF0  22DA               	addwfc	fsr2h,f,c
 18076  011AF2  50DF               	movf	indf2,w,c
 18077  011AF4  010F               	movlb	15	; () banked
 18078  011AF6  6F2B               	movwf	43,b	;volatile
 18079                           
 18080                           ; BSR set to: 15
 18081                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 18082  011AF8  0100               	movlb	0	; () banked
 18083  011AFA  EE20 F006          	lfsr	2,6
 18084  011AFE  5172               	movf	CANsendMessage@data& (0+255),w,b
 18085  011B00  26D9               	addwf	fsr2l,f,c
 18086  011B02  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18087  011B04  22DA               	addwfc	fsr2h,f,c
 18088  011B06  50DF               	movf	indf2,w,c
 18089  011B08  010F               	movlb	15	; () banked
 18090  011B0A  6F2C               	movwf	44,b	;volatile
 18091                           
 18092                           ; BSR set to: 15
 18093                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 18094  011B0C  0100               	movlb	0	; () banked
 18095  011B0E  EE20 F007          	lfsr	2,7
 18096  011B12  5172               	movf	CANsendMessage@data& (0+255),w,b
 18097  011B14  26D9               	addwf	fsr2l,f,c
 18098  011B16  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18099  011B18  22DA               	addwfc	fsr2h,f,c
 18100  011B1A  50DF               	movf	indf2,w,c
 18101  011B1C  010F               	movlb	15	; () banked
 18102  011B1E  6F2D               	movwf	45,b	;volatile
 18103                           
 18104                           ; BSR set to: 15
 18105                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 18106  011B20  010F               	movlb	15	; () banked
 18107  011B22  8720               	bsf	32,3,b	;volatile
 18108                           
 18109                           ; BSR set to: 15
 18110                           ;inc\CANlib.h: 520: return;
 18111  011B24  0012               	return	
 18112  011B26                     __end_of_CANsendMessage:
 18113                           	opt stack 0
 18114                           tblptru	equ	0xFF8
 18115                           tblptrh	equ	0xFF7
 18116                           tblptrl	equ	0xFF6
 18117                           tablat	equ	0xFF5
 18118                           prodh	equ	0xFF4
 18119                           prodl	equ	0xFF3
 18120                           intcon	equ	0xFF2
 18121                           postinc0	equ	0xFEE
 18122                           wreg	equ	0xFE8
 18123                           indf1	equ	0xFE7
 18124                           plusw1	equ	0xFE3
 18125                           fsr1h	equ	0xFE2
 18126                           fsr1l	equ	0xFE1
 18127                           indf2	equ	0xFDF
 18128                           postinc2	equ	0xFDE
 18129                           plusw2	equ	0xFDB
 18130                           fsr2h	equ	0xFDA
 18131                           fsr2l	equ	0xFD9
 18132                           status	equ	0xFD8
 18133                           
 18134 ;; *************** function _CANisTxReady *****************
 18135 ;; Defined at:
 18136 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 18137 ;; Parameters:    Size  Location     Type
 18138 ;;		None
 18139 ;; Auto vars:     Size  Location     Type
 18140 ;;		None
 18141 ;; Return value:  Size  Location     Type
 18142 ;;                  1    wreg      unsigned char 
 18143 ;; Registers used:
 18144 ;;		wreg, status,2
 18145 ;; Tracked objects:
 18146 ;;		On entry : 0/0
 18147 ;;		On exit  : 0/0
 18148 ;;		Unchanged: 0/0
 18149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18151 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18153 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18154 ;;Total ram usage:        1 bytes
 18155 ;; Hardware stack levels used:    1
 18156 ;; Hardware stack levels required when called:    3
 18157 ;; This function calls:
 18158 ;;		Nothing
 18159 ;; This function is called by:
 18160 ;;		_main
 18161 ;;		_LCD_Handler
 18162 ;;		_CAN_Send
 18163 ;; This function uses a non-reentrant model
 18164 ;;
 18165                           
 18166                           	psect	text51
 18167  01617E                     __ptext51:
 18168                           	opt stack 0
 18169  01617E                     _CANisTxReady:
 18170                           	opt stack 26
 18171                           
 18172                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 18173                           
 18174                           ; BSR set to: 15
 18175                           ;incstack = 0
 18176  01617E  0E01               	movlw	1
 18177  016180  0100               	movlb	0	; () banked
 18178  016182  6F6E               	movwf	_CANisTxReady$3235& (0+255),b
 18179                           
 18180                           ; BSR set to: 0
 18181  016184  010F               	movlb	15	; () banked
 18182  016186  A740               	btfss	64,3,b	;volatile
 18183  016188  D009               	goto	l568
 18184                           
 18185                           ; BSR set to: 15
 18186  01618A  010F               	movlb	15	; () banked
 18187  01618C  A730               	btfss	48,3,b	;volatile
 18188  01618E  D006               	goto	l568
 18189                           
 18190                           ; BSR set to: 15
 18191  016190  010F               	movlb	15	; () banked
 18192  016192  A720               	btfss	32,3,b	;volatile
 18193  016194  D003               	goto	l568
 18194                           
 18195                           ; BSR set to: 15
 18196  016196  0E00               	movlw	0
 18197  016198  0100               	movlb	0	; () banked
 18198  01619A  6F6E               	movwf	_CANisTxReady$3235& (0+255),b
 18199  01619C                     l568:
 18200  01619C  0100               	movlb	0	; () banked
 18201  01619E  516E               	movf	_CANisTxReady$3235& (0+255),w,b
 18202  0161A0  0012               	return	
 18203  0161A2                     __end_of_CANisTxReady:
 18204                           	opt stack 0
 18205                           tblptru	equ	0xFF8
 18206                           tblptrh	equ	0xFF7
 18207                           tblptrl	equ	0xFF6
 18208                           tablat	equ	0xFF5
 18209                           prodh	equ	0xFF4
 18210                           prodl	equ	0xFF3
 18211                           intcon	equ	0xFF2
 18212                           postinc0	equ	0xFEE
 18213                           wreg	equ	0xFE8
 18214                           indf1	equ	0xFE7
 18215                           plusw1	equ	0xFE3
 18216                           fsr1h	equ	0xFE2
 18217                           fsr1l	equ	0xFE1
 18218                           indf2	equ	0xFDF
 18219                           postinc2	equ	0xFDE
 18220                           plusw2	equ	0xFDB
 18221                           fsr2h	equ	0xFDA
 18222                           fsr2l	equ	0xFD9
 18223                           status	equ	0xFD8
 18224                           
 18225 ;; *************** function _ISR_bassa *****************
 18226 ;; Defined at:
 18227 ;;		line 161 in file "RemoteCan.c"
 18228 ;; Parameters:    Size  Location     Type
 18229 ;;		None
 18230 ;; Auto vars:     Size  Location     Type
 18231 ;;		None
 18232 ;; Return value:  Size  Location     Type
 18233 ;;		None               void
 18234 ;; Registers used:
 18235 ;;		wreg, status,2, status,0
 18236 ;; Tracked objects:
 18237 ;;		On entry : 0/0
 18238 ;;		On exit  : 0/0
 18239 ;;		Unchanged: 0/0
 18240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18243 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18244 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18245 ;;Total ram usage:       17 bytes
 18246 ;; Hardware stack levels used:    1
 18247 ;; Hardware stack levels required when called:    2
 18248 ;; This function calls:
 18249 ;;		Nothing
 18250 ;; This function is called by:
 18251 ;;		Interrupt level 1
 18252 ;; This function uses a non-reentrant model
 18253 ;;
 18254                           
 18255                           	psect	intcodelo
 18256  000018                     __pintcodelo:
 18257                           	opt stack 0
 18258  000018                     _ISR_bassa:
 18259                           	opt stack 20
 18260                           
 18261                           ; BSR set to: 0
 18262                           ;incstack = 0
 18263  000018  804C               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 18264  00001A  CFD8 F028          	movff	status,??_ISR_bassa
 18265  00001E  CFE8 F029          	movff	wreg,??_ISR_bassa+1
 18266  000022  CFE0 F02A          	movff	bsr,??_ISR_bassa+2
 18267  000026  CFFA F02B          	movff	pclath,??_ISR_bassa+3
 18268  00002A  CFFB F02C          	movff	pclatu,??_ISR_bassa+4
 18269  00002E  CFE9 F02D          	movff	fsr0l,??_ISR_bassa+5
 18270  000032  CFEA F02E          	movff	fsr0h,??_ISR_bassa+6
 18271  000036  CFE1 F02F          	movff	fsr1l,??_ISR_bassa+7
 18272  00003A  CFE2 F030          	movff	fsr1h,??_ISR_bassa+8
 18273  00003E  CFD9 F031          	movff	fsr2l,??_ISR_bassa+9
 18274  000042  CFDA F032          	movff	fsr2h,??_ISR_bassa+10
 18275  000046  CFF3 F033          	movff	prodl,??_ISR_bassa+11
 18276  00004A  CFF4 F034          	movff	prodh,??_ISR_bassa+12
 18277  00004E  CFF6 F035          	movff	tblptrl,??_ISR_bassa+13
 18278  000052  CFF7 F036          	movff	tblptrh,??_ISR_bassa+14
 18279  000056  CFF8 F037          	movff	tblptru,??_ISR_bassa+15
 18280  00005A  CFF5 F038          	movff	tablat,??_ISR_bassa+16
 18281                           
 18282                           ;RemoteCan.c: 162: if (PIR2bits.TMR3IF == 1) {
 18283  00005E  A2A1               	btfss	4001,1,c	;volatile
 18284  000060  D00B               	goto	i1l780
 18285                           
 18286                           ;RemoteCan.c: 163: time_counter++;
 18287  000062  0E01               	movlw	1
 18288  000064  261D               	addwf	_time_counter,f,c	;volatile
 18289  000066  0E00               	movlw	0
 18290  000068  221E               	addwfc	_time_counter+1,f,c	;volatile
 18291  00006A  221F               	addwfc	_time_counter+2,f,c	;volatile
 18292  00006C  2220               	addwfc	_time_counter+3,f,c	;volatile
 18293                           
 18294                           ;RemoteCan.c: 164: TMR3H = 0x63;
 18295  00006E  0E63               	movlw	99
 18296  000070  6EB3               	movwf	4019,c	;volatile
 18297                           
 18298                           ;RemoteCan.c: 165: TMR3L = 0xC0;
 18299  000072  0EC0               	movlw	192
 18300  000074  6EB2               	movwf	4018,c	;volatile
 18301                           
 18302                           ;RemoteCan.c: 166: PIR2bits.TMR3IF = 0;
 18303  000076  92A1               	bcf	4001,1,c	;volatile
 18304  000078                     i1l780:
 18305  000078  C038  FFF5         	movff	??_ISR_bassa+16,tablat
 18306  00007C  C037  FFF8         	movff	??_ISR_bassa+15,tblptru
 18307  000080  C036  FFF7         	movff	??_ISR_bassa+14,tblptrh
 18308  000084  C035  FFF6         	movff	??_ISR_bassa+13,tblptrl
 18309  000088  C034  FFF4         	movff	??_ISR_bassa+12,prodh
 18310  00008C  C033  FFF3         	movff	??_ISR_bassa+11,prodl
 18311  000090  C032  FFDA         	movff	??_ISR_bassa+10,fsr2h
 18312  000094  C031  FFD9         	movff	??_ISR_bassa+9,fsr2l
 18313  000098  C030  FFE2         	movff	??_ISR_bassa+8,fsr1h
 18314  00009C  C02F  FFE1         	movff	??_ISR_bassa+7,fsr1l
 18315  0000A0  C02E  FFEA         	movff	??_ISR_bassa+6,fsr0h
 18316  0000A4  C02D  FFE9         	movff	??_ISR_bassa+5,fsr0l
 18317  0000A8  C02C  FFFB         	movff	??_ISR_bassa+4,pclatu
 18318  0000AC  C02B  FFFA         	movff	??_ISR_bassa+3,pclath
 18319  0000B0  C02A  FFE0         	movff	??_ISR_bassa+2,bsr
 18320  0000B4  C029  FFE8         	movff	??_ISR_bassa+1,wreg
 18321  0000B8  C028  FFD8         	movff	??_ISR_bassa,status
 18322  0000BC  904C               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 18323  0000BE  0010               	retfie	
 18324  0000C0                     __end_of_ISR_bassa:
 18325                           	opt stack 0
 18326                           pclatu	equ	0xFFB
 18327                           pclath	equ	0xFFA
 18328                           tblptru	equ	0xFF8
 18329                           tblptrh	equ	0xFF7
 18330                           tblptrl	equ	0xFF6
 18331                           tablat	equ	0xFF5
 18332                           prodh	equ	0xFF4
 18333                           prodl	equ	0xFF3
 18334                           intcon	equ	0xFF2
 18335                           postinc0	equ	0xFEE
 18336                           fsr0h	equ	0xFEA
 18337                           fsr0l	equ	0xFE9
 18338                           wreg	equ	0xFE8
 18339                           indf1	equ	0xFE7
 18340                           plusw1	equ	0xFE3
 18341                           fsr1h	equ	0xFE2
 18342                           fsr1l	equ	0xFE1
 18343                           bsr	equ	0xFE0
 18344                           indf2	equ	0xFDF
 18345                           postinc2	equ	0xFDE
 18346                           plusw2	equ	0xFDB
 18347                           fsr2h	equ	0xFDA
 18348                           fsr2l	equ	0xFD9
 18349                           status	equ	0xFD8
 18350                           
 18351 ;; *************** function _ISR_alta *****************
 18352 ;; Defined at:
 18353 ;;		line 110 in file "RemoteCan.c"
 18354 ;; Parameters:    Size  Location     Type
 18355 ;;		None
 18356 ;; Auto vars:     Size  Location     Type
 18357 ;;  i               1   33[COMRAM] unsigned char 
 18358 ;; Return value:  Size  Location     Type
 18359 ;;		None               void
 18360 ;; Registers used:
 18361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18362 ;; Tracked objects:
 18363 ;;		On entry : 0/0
 18364 ;;		On exit  : 0/0
 18365 ;;		Unchanged: 0/0
 18366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18368 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18369 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18370 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18371 ;;Total ram usage:       15 bytes
 18372 ;; Hardware stack levels used:    1
 18373 ;; Hardware stack levels required when called:    1
 18374 ;; This function calls:
 18375 ;;		_CANisRxReady
 18376 ;;		_CANreceiveMessage
 18377 ;;		i2_CANisTxReady
 18378 ;;		i2_CANsendMessage
 18379 ;; This function is called by:
 18380 ;;		Interrupt level 2
 18381 ;; This function uses a non-reentrant model
 18382 ;;
 18383                           
 18384                           	psect	intcode
 18385  000008                     __pintcode:
 18386                           	opt stack 0
 18387  000008                     _ISR_alta:
 18388                           	opt stack 20
 18389                           
 18390                           ;incstack = 0
 18391  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 18392  00000A  CFFA F060          	movff	pclath,??_ISR_alta
 18393  00000E  CFFB F061          	movff	pclatu,??_ISR_alta+1
 18394  000012  EF9C  F0A7         	goto	int_func
 18395                           pclatu	equ	0xFFB
 18396                           pclath	equ	0xFFA
 18397                           tblptru	equ	0xFF8
 18398                           tblptrh	equ	0xFF7
 18399                           tblptrl	equ	0xFF6
 18400                           tablat	equ	0xFF5
 18401                           prodh	equ	0xFF4
 18402                           prodl	equ	0xFF3
 18403                           intcon	equ	0xFF2
 18404                           postinc0	equ	0xFEE
 18405                           fsr0h	equ	0xFEA
 18406                           fsr0l	equ	0xFE9
 18407                           wreg	equ	0xFE8
 18408                           indf1	equ	0xFE7
 18409                           plusw1	equ	0xFE3
 18410                           fsr1h	equ	0xFE2
 18411                           fsr1l	equ	0xFE1
 18412                           bsr	equ	0xFE0
 18413                           indf2	equ	0xFDF
 18414                           postinc2	equ	0xFDE
 18415                           plusw2	equ	0xFDB
 18416                           fsr2h	equ	0xFDA
 18417                           fsr2l	equ	0xFD9
 18418                           status	equ	0xFD8
 18419                           
 18420                           	psect	intcode_body
 18421  014F38                     __pintcode_body:
 18422                           	opt stack 20
 18423  014F38                     int_func:
 18424                           	opt stack 20
 18425  014F38  CFE9 F062          	movff	fsr0l,??_ISR_alta+2
 18426  014F3C  CFEA F063          	movff	fsr0h,??_ISR_alta+3
 18427  014F40  CFE1 F064          	movff	fsr1l,??_ISR_alta+4
 18428  014F44  CFE2 F065          	movff	fsr1h,??_ISR_alta+5
 18429  014F48  CFD9 F066          	movff	fsr2l,??_ISR_alta+6
 18430  014F4C  CFDA F067          	movff	fsr2h,??_ISR_alta+7
 18431  014F50  CFF3 F068          	movff	prodl,??_ISR_alta+8
 18432  014F54  CFF4 F069          	movff	prodh,??_ISR_alta+9
 18433  014F58  CFF6 F06A          	movff	tblptrl,??_ISR_alta+10
 18434  014F5C  CFF7 F06B          	movff	tblptrh,??_ISR_alta+11
 18435  014F60  CFF8 F06C          	movff	tblptru,??_ISR_alta+12
 18436  014F64  CFF5 F06D          	movff	tablat,??_ISR_alta+13
 18437                           
 18438                           ;RemoteCan.c: 111: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 18439  014F68  A2A4               	btfss	4004,1,c	;volatile
 18440  014F6A  B0A4               	btfsc	4004,0,c	;volatile
 18441  014F6C  D001               	goto	i2l8904
 18442  014F6E  D093               	goto	i2l776
 18443  014F70                     i2l8904:
 18444                           
 18445                           ;RemoteCan.c: 112: if (CANisRxReady()) {
 18446  014F70  EC34  F0B1         	call	_CANisRxReady	;wreg free
 18447  014F74  0900               	iorlw	0
 18448  014F76  B4D8               	btfsc	status,2,c
 18449  014F78  D08A               	goto	i2l8956
 18450                           
 18451                           ;RemoteCan.c: 113: CANreceiveMessage(&msg);
 18452  014F7A  0E0D               	movlw	low _msg
 18453  014F7C  6E39               	movwf	CANreceiveMessage@msg,c
 18454  014F7E  0E01               	movlw	high _msg
 18455  014F80  6E3A               	movwf	CANreceiveMessage@msg+1,c
 18456  014F82  ECF5  F096         	call	_CANreceiveMessage	;wreg free
 18457                           
 18458                           ;RemoteCan.c: 114: RTR_Flag = msg.RTR;
 18459  014F86  0101               	movlb	1	; () banked
 18460  014F88  A11B               	btfss	(_msg+14)& (0+255),0,b
 18461  014F8A  D002               	goto	i2u1189_40
 18462  014F8C  884A               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18463  014F8E  D001               	goto	i2l8910
 18464  014F90                     i2u1189_40:
 18465  014F90  984A               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18466  014F92                     i2l8910:
 18467                           
 18468                           ;RemoteCan.c: 115: id = msg.identifier;
 18469  014F92  C10D  F005         	movff	_msg,_id	;volatile
 18470  014F96  C10E  F006         	movff	_msg+1,_id+1	;volatile
 18471  014F9A  C10F  F007         	movff	_msg+2,_id+2	;volatile
 18472  014F9E  C110  F008         	movff	_msg+3,_id+3	;volatile
 18473                           
 18474                           ;RemoteCan.c: 116: newMessageCan = 1;
 18475  014FA2  8E4A               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 18476                           
 18477                           ;RemoteCan.c: 117: if (id == 0b00000000110) {
 18478  014FA4  0E06               	movlw	6
 18479  014FA6  1805               	xorwf	_id,w,c	;volatile
 18480  014FA8  1006               	iorwf	_id+1,w,c	;volatile
 18481  014FAA  1007               	iorwf	_id+2,w,c	;volatile
 18482  014FAC  1008               	iorwf	_id+3,w,c	;volatile
 18483  014FAE  A4D8               	btfss	status,2,c
 18484  014FB0  D01A               	goto	i2l8928
 18485                           
 18486                           ;RemoteCan.c: 118: for (unsigned char i = 0; i < 8; i++) {
 18487  014FB2  0E00               	movlw	0
 18488  014FB4  6E49               	movwf	ISR_alta@i,c
 18489  014FB6                     i2l8918:
 18490  014FB6  0E07               	movlw	7
 18491  014FB8  6449               	cpfsgt	ISR_alta@i,c
 18492  014FBA  D001               	goto	i2l8922
 18493  014FBC  D014               	goto	i2l8928
 18494  014FBE                     i2l8922:
 18495                           
 18496                           ;RemoteCan.c: 119: data_speed_rx[i] = msg.data[i];
 18497  014FBE  5049               	movf	ISR_alta@i,w,c
 18498  014FC0  0D01               	mullw	1
 18499  014FC2  0E11               	movlw	low (_msg+4)
 18500  014FC4  24F3               	addwf	prodl,w,c
 18501  014FC6  6ED9               	movwf	fsr2l,c
 18502  014FC8  0E01               	movlw	high (_msg+4)
 18503  014FCA  20F4               	addwfc	prodh,w,c
 18504  014FCC  6EDA               	movwf	fsr2h,c
 18505  014FCE  5049               	movf	ISR_alta@i,w,c
 18506  014FD0  0D01               	mullw	1
 18507  014FD2  0E00               	movlw	low _data_speed_rx
 18508  014FD4  24F3               	addwf	prodl,w,c
 18509  014FD6  6EE1               	movwf	fsr1l,c
 18510  014FD8  0E01               	movlw	high _data_speed_rx
 18511  014FDA  20F4               	addwfc	prodh,w,c
 18512  014FDC  6EE2               	movwf	fsr1h,c
 18513  014FDE  CFDF FFE7          	movff	indf2,indf1
 18514  014FE2  2A49               	incf	ISR_alta@i,f,c
 18515  014FE4  D7E8               	goto	i2l8918
 18516  014FE6                     i2l8928:
 18517                           
 18518                           ;RemoteCan.c: 120: }
 18519                           ;RemoteCan.c: 121: }
 18520                           ;RemoteCan.c: 123: if (id == 0b00000001011) {
 18521  014FE6  0E0B               	movlw	11
 18522  014FE8  1805               	xorwf	_id,w,c	;volatile
 18523  014FEA  1006               	iorwf	_id+1,w,c	;volatile
 18524  014FEC  1007               	iorwf	_id+2,w,c	;volatile
 18525  014FEE  1008               	iorwf	_id+3,w,c	;volatile
 18526  014FF0  A4D8               	btfss	status,2,c
 18527  014FF2  D006               	goto	i2l8934
 18528                           
 18529                           ;RemoteCan.c: 124: if (msg.data[0] == 1) {
 18530  014FF4  0101               	movlb	1	; () banked
 18531  014FF6  0511               	decf	(_msg+4)& (0+255),w,b
 18532  014FF8  A4D8               	btfss	status,2,c
 18533  014FFA  D002               	goto	i2l8934
 18534                           
 18535                           ; BSR set to: 1
 18536                           ;RemoteCan.c: 125: space_available = 1;
 18537  014FFC  824B               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 18538                           
 18539                           ;RemoteCan.c: 126: F2_switch = 0;
 18540  014FFE  944A               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 18541  015000                     i2l8934:
 18542                           
 18543                           ;RemoteCan.c: 127: }
 18544                           ;RemoteCan.c: 128: }
 18545                           ;RemoteCan.c: 130: if (id == 0b00000001110) {
 18546  015000  0E0E               	movlw	14
 18547  015002  1805               	xorwf	_id,w,c	;volatile
 18548  015004  1006               	iorwf	_id+1,w,c	;volatile
 18549  015006  1007               	iorwf	_id+2,w,c	;volatile
 18550  015008  1008               	iorwf	_id+3,w,c	;volatile
 18551  01500A  A4D8               	btfss	status,2,c
 18552  01500C  D008               	goto	i2l8938
 18553                           
 18554                           ;RemoteCan.c: 131: steering_correction_dir = msg.data[1];
 18555  01500E  0101               	movlb	1	; () banked
 18556  015010  A112               	btfss	(_msg+5)& (0+255),0,b
 18557  015012  D002               	goto	i2u1197_40
 18558  015014  844B               	bsf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 18559  015016  D001               	goto	i2u1198_45
 18560  015018                     i2u1197_40:
 18561  015018  944B               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 18562  01501A                     i2u1198_45:
 18563                           
 18564                           ;RemoteCan.c: 132: steering_correction = msg.data[0];
 18565  01501A  C111  F0EA         	movff	_msg+4,_steering_correction	;volatile
 18566  01501E                     i2l8938:
 18567                           
 18568                           ;RemoteCan.c: 133: }
 18569                           ;RemoteCan.c: 135: if (id == 0xAA) {
 18570  01501E  0EAA               	movlw	170
 18571  015020  1805               	xorwf	_id,w,c	;volatile
 18572  015022  1006               	iorwf	_id+1,w,c	;volatile
 18573  015024  1007               	iorwf	_id+2,w,c	;volatile
 18574  015026  1008               	iorwf	_id+3,w,c	;volatile
 18575  015028  A4D8               	btfss	status,2,c
 18576  01502A  D004               	goto	i2l8942
 18577                           
 18578                           ;RemoteCan.c: 136: user_data = msg.data[0];
 18579  01502C  C111  F0E6         	movff	_msg+4,_user_data
 18580  015030  0100               	movlb	0	; () banked
 18581  015032  6BE7               	clrf	(_user_data+1)& (0+255),b
 18582  015034                     i2l8942:
 18583                           
 18584                           ;RemoteCan.c: 137: }
 18585                           ;RemoteCan.c: 139: if (id == 0b00000000010) {
 18586  015034  0E02               	movlw	2
 18587  015036  1805               	xorwf	_id,w,c	;volatile
 18588  015038  1006               	iorwf	_id+1,w,c	;volatile
 18589  01503A  1007               	iorwf	_id+2,w,c	;volatile
 18590  01503C  1008               	iorwf	_id+3,w,c	;volatile
 18591  01503E  B4D8               	btfsc	status,2,c
 18592                           
 18593                           ;RemoteCan.c: 140: if (RTR_Flag == 1) {
 18594  015040  A84A               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18595  015042  D025               	goto	i2l8956
 18596                           
 18597                           ;RemoteCan.c: 141: pr_time_4 = time_counter;
 18598  015044  C01D  F015         	movff	_time_counter,_pr_time_4	;volatile
 18599  015048  C01E  F016         	movff	_time_counter+1,_pr_time_4+1	;volatile
 18600  01504C  C01F  F017         	movff	_time_counter+2,_pr_time_4+2	;volatile
 18601  015050  C020  F018         	movff	_time_counter+3,_pr_time_4+3	;volatile
 18602                           
 18603                           ;RemoteCan.c: 142: data[0] = 0x03;
 18604  015054  0E03               	movlw	3
 18605  015056  6E27               	movwf	_data,c
 18606                           
 18607                           ;RemoteCan.c: 143: _delay((unsigned long)((10)*(16000000/4000000.0)));
 18608  015058  0E0D               	movlw	13
 18609  01505A                     i2u1236_47:
 18610  01505A  2EE8               	decfsz	wreg,f,c
 18611  01505C  D7FE               	goto	i2u1236_47
 18612  01505E  F000               	nop	
 18613  015060                     i2l8952:
 18614  015060  ECE2  F0B0         	call	i2_CANisTxReady	;wreg free
 18615  015064  06E8               	decf	wreg,f,c
 18616  015066  A4D8               	btfss	status,2,c
 18617  015068  D7FB               	goto	i2l8952
 18618                           
 18619                           ;RemoteCan.c: 145: CANsendMessage(0b00000000010, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 18620  01506A  0E02               	movlw	2
 18621  01506C  6E39               	movwf	i2CANsendMessage@identifier,c
 18622  01506E  0E00               	movlw	0
 18623  015070  6E3A               	movwf	i2CANsendMessage@identifier+1,c
 18624  015072  0E00               	movlw	0
 18625  015074  6E3B               	movwf	i2CANsendMessage@identifier+2,c
 18626  015076  0E00               	movlw	0
 18627  015078  6E3C               	movwf	i2CANsendMessage@identifier+3,c
 18628  01507A  0E27               	movlw	low _data
 18629  01507C  6E3D               	movwf	i2CANsendMessage@data,c
 18630  01507E  0E00               	movlw	high _data
 18631  015080  6E3E               	movwf	i2CANsendMessage@data+1,c
 18632  015082  0E08               	movlw	8
 18633  015084  6E3F               	movwf	i2CANsendMessage@dataLength,c
 18634  015086  0EBC               	movlw	188
 18635  015088  6E40               	movwf	i2CANsendMessage@flags,c
 18636  01508A  EC20  F091         	call	i2_CANsendMessage	;wreg free
 18637  01508E                     i2l8956:
 18638                           
 18639                           ;RemoteCan.c: 151: }
 18640                           ;RemoteCan.c: 152: }
 18641                           ;RemoteCan.c: 153: }
 18642                           ;RemoteCan.c: 154: LATDbits.LATD2 = 1;
 18643  01508E  848C               	bsf	3980,2,c	;volatile
 18644                           
 18645                           ;RemoteCan.c: 155: LATDbits.LATD3 = 1;
 18646  015090  868C               	bsf	3980,3,c	;volatile
 18647                           
 18648                           ;RemoteCan.c: 156: PIR3bits.RXB1IF = 0;
 18649  015092  92A4               	bcf	4004,1,c	;volatile
 18650                           
 18651                           ;RemoteCan.c: 157: PIR3bits.RXB0IF = 0;
 18652  015094  90A4               	bcf	4004,0,c	;volatile
 18653  015096                     i2l776:
 18654  015096  C06D  FFF5         	movff	??_ISR_alta+13,tablat
 18655  01509A  C06C  FFF8         	movff	??_ISR_alta+12,tblptru
 18656  01509E  C06B  FFF7         	movff	??_ISR_alta+11,tblptrh
 18657  0150A2  C06A  FFF6         	movff	??_ISR_alta+10,tblptrl
 18658  0150A6  C069  FFF4         	movff	??_ISR_alta+9,prodh
 18659  0150AA  C068  FFF3         	movff	??_ISR_alta+8,prodl
 18660  0150AE  C067  FFDA         	movff	??_ISR_alta+7,fsr2h
 18661  0150B2  C066  FFD9         	movff	??_ISR_alta+6,fsr2l
 18662  0150B6  C065  FFE2         	movff	??_ISR_alta+5,fsr1h
 18663  0150BA  C064  FFE1         	movff	??_ISR_alta+4,fsr1l
 18664  0150BE  C063  FFEA         	movff	??_ISR_alta+3,fsr0h
 18665  0150C2  C062  FFE9         	movff	??_ISR_alta+2,fsr0l
 18666  0150C6  C061  FFFB         	movff	??_ISR_alta+1,pclatu
 18667  0150CA  C060  FFFA         	movff	??_ISR_alta,pclath
 18668  0150CE  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 18669  0150D0  0011               	retfie		f
 18670  0150D2                     __end_of_ISR_alta:
 18671                           	opt stack 0
 18672                           pclatu	equ	0xFFB
 18673                           pclath	equ	0xFFA
 18674                           tblptru	equ	0xFF8
 18675                           tblptrh	equ	0xFF7
 18676                           tblptrl	equ	0xFF6
 18677                           tablat	equ	0xFF5
 18678                           prodh	equ	0xFF4
 18679                           prodl	equ	0xFF3
 18680                           intcon	equ	0xFF2
 18681                           postinc0	equ	0xFEE
 18682                           fsr0h	equ	0xFEA
 18683                           fsr0l	equ	0xFE9
 18684                           wreg	equ	0xFE8
 18685                           indf1	equ	0xFE7
 18686                           plusw1	equ	0xFE3
 18687                           fsr1h	equ	0xFE2
 18688                           fsr1l	equ	0xFE1
 18689                           bsr	equ	0xFE0
 18690                           indf2	equ	0xFDF
 18691                           postinc2	equ	0xFDE
 18692                           plusw2	equ	0xFDB
 18693                           fsr2h	equ	0xFDA
 18694                           fsr2l	equ	0xFD9
 18695                           status	equ	0xFD8
 18696                           
 18697 ;; *************** function i2_CANsendMessage *****************
 18698 ;; Defined at:
 18699 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 18700 ;; Parameters:    Size  Location     Type
 18701 ;;  identifier      4   17[COMRAM] unsigned long 
 18702 ;;  data            2   21[COMRAM] PTR unsigned char 
 18703 ;;		 -> data_speed(1), park_assist_state(8), data_brake(1), data_steering(1), 
 18704 ;;		 -> data(1), 
 18705 ;;  dataLength      1   23[COMRAM] unsigned char 
 18706 ;;  flags           1   24[COMRAM] enum E16909
 18707 ;; Auto vars:     Size  Location     Type
 18708 ;;  CANsendMessa    4   29[COMRAM] unsigned long 
 18709 ;; Return value:  Size  Location     Type
 18710 ;;		None               void
 18711 ;; Registers used:
 18712 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18713 ;; Tracked objects:
 18714 ;;		On entry : 0/0
 18715 ;;		On exit  : 0/0
 18716 ;;		Unchanged: 0/0
 18717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18718 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18719 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18720 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18721 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18722 ;;Total ram usage:       16 bytes
 18723 ;; Hardware stack levels used:    1
 18724 ;; This function calls:
 18725 ;;		Nothing
 18726 ;; This function is called by:
 18727 ;;		_ISR_alta
 18728 ;; This function uses a non-reentrant model
 18729 ;;
 18730                           
 18731                           	psect	text54
 18732  012240                     __ptext54:
 18733                           	opt stack 0
 18734  012240                     i2_CANsendMessage:
 18735                           	opt stack 20
 18736                           
 18737                           ;inc\CANlib.h: 296: unsigned long tamp;
 18738                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 18739                           
 18740                           ;incstack = 0
 18741  012240  010F               	movlb	15	; () banked
 18742  012242  B740               	btfsc	64,3,b	;volatile
 18743  012244  D115               	goto	i2l375
 18744                           
 18745                           ; BSR set to: 15
 18746                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 18747  012246  C03F  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 18748                           
 18749                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 18750  01224A  AC40               	btfss	i2CANsendMessage@flags,6,c
 18751  01224C  D003               	goto	i2l376
 18752                           
 18753                           ; BSR set to: 15
 18754                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 18755  01224E  010F               	movlb	15	; () banked
 18756  012250  8D45               	bsf	69,6,b	;volatile
 18757  012252  D002               	goto	i2l377
 18758  012254                     i2l376:
 18759                           
 18760                           ; BSR set to: 15
 18761                           ;inc\CANlib.h: 302: else
 18762                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 18763  012254  010F               	movlb	15	; () banked
 18764  012256  9D45               	bcf	69,6,b	;volatile
 18765  012258                     i2l377:
 18766                           
 18767                           ; BSR set to: 15
 18768                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 18769  012258  A640               	btfss	i2CANsendMessage@flags,3,c
 18770  01225A  D066               	goto	i2l378
 18771                           
 18772                           ; BSR set to: 15
 18773                           ;inc\CANlib.h: 306: {
 18774                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 18775  01225C  5039               	movf	i2CANsendMessage@identifier,w,c
 18776  01225E  6E45               	movwf	i2CANsendMessage@tamp,c
 18777  012260  6A46               	clrf	i2CANsendMessage@tamp+1,c
 18778  012262  6A47               	clrf	i2CANsendMessage@tamp+2,c
 18779  012264  6A48               	clrf	i2CANsendMessage@tamp+3,c
 18780                           
 18781                           ; BSR set to: 15
 18782                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 18783  012266  C045  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 18784                           
 18785                           ; BSR set to: 15
 18786                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 18787  01226A  0E00               	movlw	0
 18788  01226C  1439               	andwf	i2CANsendMessage@identifier,w,c
 18789  01226E  6E45               	movwf	i2CANsendMessage@tamp,c
 18790  012270  0EFF               	movlw	255
 18791  012272  143A               	andwf	i2CANsendMessage@identifier+1,w,c
 18792  012274  6E46               	movwf	i2CANsendMessage@tamp+1,c
 18793  012276  0E00               	movlw	0
 18794  012278  143B               	andwf	i2CANsendMessage@identifier+2,w,c
 18795  01227A  6E47               	movwf	i2CANsendMessage@tamp+2,c
 18796  01227C  0E00               	movlw	0
 18797  01227E  143C               	andwf	i2CANsendMessage@identifier+3,w,c
 18798  012280  6E48               	movwf	i2CANsendMessage@tamp+3,c
 18799                           
 18800                           ; BSR set to: 15
 18801                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 18802  012282  C045  F041         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18803  012286  C046  F042         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18804  01228A  C047  F043         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18805  01228E  C048  F044         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18806  012292  C042  F041         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 18807  012296  C043  F042         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 18808  01229A  C044  F043         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 18809  01229E  6A44               	clrf	??i2_CANsendMessage+3,c
 18810  0122A0  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18811  0122A4  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18812  0122A8  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18813  0122AC  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18814                           
 18815                           ; BSR set to: 15
 18816                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 18817  0122B0  C045  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 18818                           
 18819                           ; BSR set to: 15
 18820                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 18821  0122B4  0E00               	movlw	0
 18822  0122B6  010F               	movlb	15	; () banked
 18823  0122B8  6F42               	movwf	66,b	;volatile
 18824                           
 18825                           ; BSR set to: 15
 18826                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 18827  0122BA  010F               	movlb	15	; () banked
 18828  0122BC  8742               	bsf	66,3,b	;volatile
 18829                           
 18830                           ; BSR set to: 15
 18831                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 18832  0122BE  A03B               	btfss	i2CANsendMessage@identifier+2,0,c
 18833  0122C0  D002               	goto	i2l379
 18834                           
 18835                           ; BSR set to: 15
 18836                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 18837  0122C2  010F               	movlb	15	; () banked
 18838  0122C4  8142               	bsf	66,0,b	;volatile
 18839  0122C6                     i2l379:
 18840                           
 18841                           ; BSR set to: 15
 18842                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 18843  0122C6  A23B               	btfss	i2CANsendMessage@identifier+2,1,c
 18844  0122C8  D002               	goto	i2l380
 18845                           
 18846                           ; BSR set to: 15
 18847                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 18848  0122CA  010F               	movlb	15	; () banked
 18849  0122CC  8342               	bsf	66,1,b	;volatile
 18850  0122CE                     i2l380:
 18851                           
 18852                           ; BSR set to: 15
 18853                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 18854  0122CE  A43B               	btfss	i2CANsendMessage@identifier+2,2,c
 18855  0122D0  D002               	goto	i2l381
 18856                           
 18857                           ; BSR set to: 15
 18858                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 18859  0122D2  010F               	movlb	15	; () banked
 18860  0122D4  8B42               	bsf	66,5,b	;volatile
 18861  0122D6                     i2l381:
 18862                           
 18863                           ; BSR set to: 15
 18864                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 18865  0122D6  A63B               	btfss	i2CANsendMessage@identifier+2,3,c
 18866  0122D8  D002               	goto	i2l382
 18867                           
 18868                           ; BSR set to: 15
 18869                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 18870  0122DA  010F               	movlb	15	; () banked
 18871  0122DC  8D42               	bsf	66,6,b	;volatile
 18872  0122DE                     i2l382:
 18873                           
 18874                           ; BSR set to: 15
 18875                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 18876  0122DE  A83B               	btfss	i2CANsendMessage@identifier+2,4,c
 18877  0122E0  D002               	goto	i2l7118
 18878                           
 18879                           ; BSR set to: 15
 18880                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 18881  0122E2  010F               	movlb	15	; () banked
 18882  0122E4  8F42               	bsf	66,7,b	;volatile
 18883  0122E6                     i2l7118:
 18884                           
 18885                           ; BSR set to: 15
 18886                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 18887  0122E6  C039  F041         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18888  0122EA  C03A  F042         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18889  0122EE  C03B  F043         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18890  0122F2  C03C  F044         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18891  0122F6  0E16               	movlw	22
 18892  0122F8  D005               	goto	i2u921_40
 18893  0122FA                     i2u921_45:
 18894  0122FA  90D8               	bcf	status,0,c
 18895  0122FC  3244               	rrcf	??i2_CANsendMessage+3,f,c
 18896  0122FE  3243               	rrcf	??i2_CANsendMessage+2,f,c
 18897  012300  3242               	rrcf	??i2_CANsendMessage+1,f,c
 18898  012302  3241               	rrcf	??i2_CANsendMessage,f,c
 18899  012304                     i2u921_40:
 18900  012304  2EE8               	decfsz	wreg,f,c
 18901  012306  D7F9               	goto	i2u921_45
 18902  012308  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18903  01230C  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18904  012310  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18905  012314  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18906                           
 18907                           ; BSR set to: 15
 18908                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 18909  012318  5045               	movf	i2CANsendMessage@tamp,w,c
 18910  01231A  6E45               	movwf	i2CANsendMessage@tamp,c
 18911  01231C  6A46               	clrf	i2CANsendMessage@tamp+1,c
 18912  01231E  6A47               	clrf	i2CANsendMessage@tamp+2,c
 18913  012320  6A48               	clrf	i2CANsendMessage@tamp+3,c
 18914                           
 18915                           ; BSR set to: 15
 18916                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 18917  012322  C045  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 18918                           
 18919                           ;inc\CANlib.h: 332: }
 18920  012326  D04D               	goto	i2l7138
 18921  012328                     i2l378:
 18922                           
 18923                           ; BSR set to: 15
 18924                           ;inc\CANlib.h: 334: else
 18925                           ;inc\CANlib.h: 336: {
 18926                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 18927  012328  010F               	movlb	15	; () banked
 18928  01232A  9742               	bcf	66,3,b	;volatile
 18929                           
 18930                           ; BSR set to: 15
 18931                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 18932  01232C  C039  F041         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 18933  012330  C03A  F042         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 18934  012334  C03B  F043         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 18935  012338  C03C  F044         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 18936  01233C  0E04               	movlw	4
 18937  01233E  D005               	goto	i2u922_40
 18938  012340                     i2u922_45:
 18939  012340  90D8               	bcf	status,0,c
 18940  012342  3244               	rrcf	??i2_CANsendMessage+3,f,c
 18941  012344  3243               	rrcf	??i2_CANsendMessage+2,f,c
 18942  012346  3242               	rrcf	??i2_CANsendMessage+1,f,c
 18943  012348  3241               	rrcf	??i2_CANsendMessage,f,c
 18944  01234A                     i2u922_40:
 18945  01234A  2EE8               	decfsz	wreg,f,c
 18946  01234C  D7F9               	goto	i2u922_45
 18947  01234E  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18948  012352  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18949  012356  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18950  01235A  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18951                           
 18952                           ; BSR set to: 15
 18953                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 18954  01235E  5045               	movf	i2CANsendMessage@tamp,w,c
 18955  012360  6E45               	movwf	i2CANsendMessage@tamp,c
 18956  012362  6A46               	clrf	i2CANsendMessage@tamp+1,c
 18957  012364  6A47               	clrf	i2CANsendMessage@tamp+2,c
 18958  012366  6A48               	clrf	i2CANsendMessage@tamp+3,c
 18959                           
 18960                           ; BSR set to: 15
 18961                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 18962  012368  C045  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 18963                           
 18964                           ; BSR set to: 15
 18965                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 18966  01236C  0E07               	movlw	7
 18967  01236E  1439               	andwf	i2CANsendMessage@identifier,w,c
 18968  012370  6E45               	movwf	i2CANsendMessage@tamp,c
 18969  012372  0E00               	movlw	0
 18970  012374  143A               	andwf	i2CANsendMessage@identifier+1,w,c
 18971  012376  6E46               	movwf	i2CANsendMessage@tamp+1,c
 18972  012378  0E00               	movlw	0
 18973  01237A  143B               	andwf	i2CANsendMessage@identifier+2,w,c
 18974  01237C  6E47               	movwf	i2CANsendMessage@tamp+2,c
 18975  01237E  0E00               	movlw	0
 18976  012380  143C               	andwf	i2CANsendMessage@identifier+3,w,c
 18977  012382  6E48               	movwf	i2CANsendMessage@tamp+3,c
 18978                           
 18979                           ; BSR set to: 15
 18980                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 18981  012384  C045  F041         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 18982  012388  C046  F042         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 18983  01238C  C047  F043         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 18984  012390  C048  F044         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 18985  012394  0E05               	movlw	5
 18986  012396                     i2u923_45:
 18987  012396  90D8               	bcf	status,0,c
 18988  012398  3641               	rlcf	??i2_CANsendMessage,f,c
 18989  01239A  3642               	rlcf	??i2_CANsendMessage+1,f,c
 18990  01239C  3643               	rlcf	??i2_CANsendMessage+2,f,c
 18991  01239E  3644               	rlcf	??i2_CANsendMessage+3,f,c
 18992  0123A0  2EE8               	decfsz	wreg,f,c
 18993  0123A2  D7F9               	goto	i2u923_45
 18994  0123A4  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 18995  0123A8  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 18996  0123AC  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 18997  0123B0  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 18998                           
 18999                           ; BSR set to: 15
 19000                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 19001  0123B4  010F               	movlb	15	; () banked
 19002  0123B6  5142               	movf	66,w,b	;volatile
 19003  0123B8  0B1F               	andlw	31
 19004  0123BA  010F               	movlb	15	; () banked
 19005  0123BC  6F42               	movwf	66,b	;volatile
 19006                           
 19007                           ; BSR set to: 15
 19008                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 19009  0123BE  C045  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 19010  0123C2                     i2l7138:
 19011                           
 19012                           ; BSR set to: 15
 19013                           ;inc\CANlib.h: 347: }
 19014                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 19015  0123C2  A040               	btfss	i2CANsendMessage@flags,0,c
 19016  0123C4  D003               	goto	i2l385
 19017                           
 19018                           ; BSR set to: 15
 19019                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 19020  0123C6  010F               	movlb	15	; () banked
 19021  0123C8  8140               	bsf	64,0,b	;volatile
 19022  0123CA  D002               	goto	i2l386
 19023  0123CC                     i2l385:
 19024                           
 19025                           ; BSR set to: 15
 19026                           ;inc\CANlib.h: 351: else
 19027                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 19028  0123CC  010F               	movlb	15	; () banked
 19029  0123CE  9140               	bcf	64,0,b	;volatile
 19030  0123D0                     i2l386:
 19031                           
 19032                           ; BSR set to: 15
 19033                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 19034  0123D0  A240               	btfss	i2CANsendMessage@flags,1,c
 19035  0123D2  D003               	goto	i2l387
 19036                           
 19037                           ; BSR set to: 15
 19038                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 19039  0123D4  010F               	movlb	15	; () banked
 19040  0123D6  8340               	bsf	64,1,b	;volatile
 19041  0123D8  D002               	goto	i2l7144
 19042  0123DA                     i2l387:
 19043                           
 19044                           ; BSR set to: 15
 19045                           ;inc\CANlib.h: 355: else
 19046                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 19047  0123DA  010F               	movlb	15	; () banked
 19048  0123DC  9340               	bcf	64,1,b	;volatile
 19049  0123DE                     i2l7144:
 19050                           
 19051                           ; BSR set to: 15
 19052                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 19053  0123DE  C03D  FFD9         	movff	i2CANsendMessage@data,fsr2l
 19054  0123E2  C03E  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 19055  0123E6  50DF               	movf	indf2,w,c
 19056  0123E8  010F               	movlb	15	; () banked
 19057  0123EA  6F46               	movwf	70,b	;volatile
 19058                           
 19059                           ; BSR set to: 15
 19060                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 19061  0123EC  EE20 F001          	lfsr	2,1
 19062  0123F0  503D               	movf	i2CANsendMessage@data,w,c
 19063  0123F2  26D9               	addwf	fsr2l,f,c
 19064  0123F4  503E               	movf	i2CANsendMessage@data+1,w,c
 19065  0123F6  22DA               	addwfc	fsr2h,f,c
 19066  0123F8  50DF               	movf	indf2,w,c
 19067  0123FA  010F               	movlb	15	; () banked
 19068  0123FC  6F47               	movwf	71,b	;volatile
 19069                           
 19070                           ; BSR set to: 15
 19071                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 19072  0123FE  EE20 F002          	lfsr	2,2
 19073  012402  503D               	movf	i2CANsendMessage@data,w,c
 19074  012404  26D9               	addwf	fsr2l,f,c
 19075  012406  503E               	movf	i2CANsendMessage@data+1,w,c
 19076  012408  22DA               	addwfc	fsr2h,f,c
 19077  01240A  50DF               	movf	indf2,w,c
 19078  01240C  010F               	movlb	15	; () banked
 19079  01240E  6F48               	movwf	72,b	;volatile
 19080                           
 19081                           ; BSR set to: 15
 19082                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 19083  012410  EE20 F003          	lfsr	2,3
 19084  012414  503D               	movf	i2CANsendMessage@data,w,c
 19085  012416  26D9               	addwf	fsr2l,f,c
 19086  012418  503E               	movf	i2CANsendMessage@data+1,w,c
 19087  01241A  22DA               	addwfc	fsr2h,f,c
 19088  01241C  50DF               	movf	indf2,w,c
 19089  01241E  010F               	movlb	15	; () banked
 19090  012420  6F49               	movwf	73,b	;volatile
 19091                           
 19092                           ; BSR set to: 15
 19093                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 19094  012422  EE20 F004          	lfsr	2,4
 19095  012426  503D               	movf	i2CANsendMessage@data,w,c
 19096  012428  26D9               	addwf	fsr2l,f,c
 19097  01242A  503E               	movf	i2CANsendMessage@data+1,w,c
 19098  01242C  22DA               	addwfc	fsr2h,f,c
 19099  01242E  50DF               	movf	indf2,w,c
 19100  012430  010F               	movlb	15	; () banked
 19101  012432  6F4A               	movwf	74,b	;volatile
 19102                           
 19103                           ; BSR set to: 15
 19104                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 19105  012434  EE20 F005          	lfsr	2,5
 19106  012438  503D               	movf	i2CANsendMessage@data,w,c
 19107  01243A  26D9               	addwf	fsr2l,f,c
 19108  01243C  503E               	movf	i2CANsendMessage@data+1,w,c
 19109  01243E  22DA               	addwfc	fsr2h,f,c
 19110  012440  50DF               	movf	indf2,w,c
 19111  012442  010F               	movlb	15	; () banked
 19112  012444  6F4B               	movwf	75,b	;volatile
 19113                           
 19114                           ; BSR set to: 15
 19115                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 19116  012446  EE20 F006          	lfsr	2,6
 19117  01244A  503D               	movf	i2CANsendMessage@data,w,c
 19118  01244C  26D9               	addwf	fsr2l,f,c
 19119  01244E  503E               	movf	i2CANsendMessage@data+1,w,c
 19120  012450  22DA               	addwfc	fsr2h,f,c
 19121  012452  50DF               	movf	indf2,w,c
 19122  012454  010F               	movlb	15	; () banked
 19123  012456  6F4C               	movwf	76,b	;volatile
 19124                           
 19125                           ; BSR set to: 15
 19126                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 19127  012458  EE20 F007          	lfsr	2,7
 19128  01245C  503D               	movf	i2CANsendMessage@data,w,c
 19129  01245E  26D9               	addwf	fsr2l,f,c
 19130  012460  503E               	movf	i2CANsendMessage@data+1,w,c
 19131  012462  22DA               	addwfc	fsr2h,f,c
 19132  012464  50DF               	movf	indf2,w,c
 19133  012466  010F               	movlb	15	; () banked
 19134  012468  6F4D               	movwf	77,b	;volatile
 19135                           
 19136                           ; BSR set to: 15
 19137                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 19138  01246A  010F               	movlb	15	; () banked
 19139  01246C  8740               	bsf	64,3,b	;volatile
 19140                           
 19141                           ; BSR set to: 15
 19142                           ;inc\CANlib.h: 368: return;
 19143  01246E  0012               	return	
 19144  012470                     i2l375:
 19145                           
 19146                           ; BSR set to: 15
 19147                           ;inc\CANlib.h: 369: }
 19148                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 19149  012470  010F               	movlb	15	; () banked
 19150  012472  B730               	btfsc	48,3,b	;volatile
 19151  012474  D115               	goto	i2l390
 19152                           
 19153                           ; BSR set to: 15
 19154                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 19155  012476  C03F  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 19156                           
 19157                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 19158  01247A  AC40               	btfss	i2CANsendMessage@flags,6,c
 19159  01247C  D003               	goto	i2l391
 19160                           
 19161                           ; BSR set to: 15
 19162                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 19163  01247E  010F               	movlb	15	; () banked
 19164  012480  8D35               	bsf	53,6,b	;volatile
 19165  012482  D002               	goto	i2l392
 19166  012484                     i2l391:
 19167                           
 19168                           ; BSR set to: 15
 19169                           ;inc\CANlib.h: 378: else
 19170                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 19171  012484  010F               	movlb	15	; () banked
 19172  012486  9D35               	bcf	53,6,b	;volatile
 19173  012488                     i2l392:
 19174                           
 19175                           ; BSR set to: 15
 19176                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 19177  012488  A640               	btfss	i2CANsendMessage@flags,3,c
 19178  01248A  D066               	goto	i2l393
 19179                           
 19180                           ; BSR set to: 15
 19181                           ;inc\CANlib.h: 382: {
 19182                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 19183  01248C  5039               	movf	i2CANsendMessage@identifier,w,c
 19184  01248E  6E45               	movwf	i2CANsendMessage@tamp,c
 19185  012490  6A46               	clrf	i2CANsendMessage@tamp+1,c
 19186  012492  6A47               	clrf	i2CANsendMessage@tamp+2,c
 19187  012494  6A48               	clrf	i2CANsendMessage@tamp+3,c
 19188                           
 19189                           ; BSR set to: 15
 19190                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 19191  012496  C045  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 19192                           
 19193                           ; BSR set to: 15
 19194                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 19195  01249A  0E00               	movlw	0
 19196  01249C  1439               	andwf	i2CANsendMessage@identifier,w,c
 19197  01249E  6E45               	movwf	i2CANsendMessage@tamp,c
 19198  0124A0  0EFF               	movlw	255
 19199  0124A2  143A               	andwf	i2CANsendMessage@identifier+1,w,c
 19200  0124A4  6E46               	movwf	i2CANsendMessage@tamp+1,c
 19201  0124A6  0E00               	movlw	0
 19202  0124A8  143B               	andwf	i2CANsendMessage@identifier+2,w,c
 19203  0124AA  6E47               	movwf	i2CANsendMessage@tamp+2,c
 19204  0124AC  0E00               	movlw	0
 19205  0124AE  143C               	andwf	i2CANsendMessage@identifier+3,w,c
 19206  0124B0  6E48               	movwf	i2CANsendMessage@tamp+3,c
 19207                           
 19208                           ; BSR set to: 15
 19209                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 19210  0124B2  C045  F041         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19211  0124B6  C046  F042         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19212  0124BA  C047  F043         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19213  0124BE  C048  F044         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19214  0124C2  C042  F041         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19215  0124C6  C043  F042         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19216  0124CA  C044  F043         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19217  0124CE  6A44               	clrf	??i2_CANsendMessage+3,c
 19218  0124D0  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19219  0124D4  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19220  0124D8  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19221  0124DC  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19222                           
 19223                           ; BSR set to: 15
 19224                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 19225  0124E0  C045  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 19226                           
 19227                           ; BSR set to: 15
 19228                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 19229  0124E4  0E00               	movlw	0
 19230  0124E6  010F               	movlb	15	; () banked
 19231  0124E8  6F32               	movwf	50,b	;volatile
 19232                           
 19233                           ; BSR set to: 15
 19234                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 19235  0124EA  010F               	movlb	15	; () banked
 19236  0124EC  8732               	bsf	50,3,b	;volatile
 19237                           
 19238                           ; BSR set to: 15
 19239                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 19240  0124EE  A03B               	btfss	i2CANsendMessage@identifier+2,0,c
 19241  0124F0  D002               	goto	i2l394
 19242                           
 19243                           ; BSR set to: 15
 19244                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 19245  0124F2  010F               	movlb	15	; () banked
 19246  0124F4  8132               	bsf	50,0,b	;volatile
 19247  0124F6                     i2l394:
 19248                           
 19249                           ; BSR set to: 15
 19250                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 19251  0124F6  A23B               	btfss	i2CANsendMessage@identifier+2,1,c
 19252  0124F8  D002               	goto	i2l395
 19253                           
 19254                           ; BSR set to: 15
 19255                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 19256  0124FA  010F               	movlb	15	; () banked
 19257  0124FC  8332               	bsf	50,1,b	;volatile
 19258  0124FE                     i2l395:
 19259                           
 19260                           ; BSR set to: 15
 19261                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 19262  0124FE  A43B               	btfss	i2CANsendMessage@identifier+2,2,c
 19263  012500  D002               	goto	i2l396
 19264                           
 19265                           ; BSR set to: 15
 19266                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 19267  012502  010F               	movlb	15	; () banked
 19268  012504  8B32               	bsf	50,5,b	;volatile
 19269  012506                     i2l396:
 19270                           
 19271                           ; BSR set to: 15
 19272                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 19273  012506  A63B               	btfss	i2CANsendMessage@identifier+2,3,c
 19274  012508  D002               	goto	i2l397
 19275                           
 19276                           ; BSR set to: 15
 19277                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 19278  01250A  010F               	movlb	15	; () banked
 19279  01250C  8D32               	bsf	50,6,b	;volatile
 19280  01250E                     i2l397:
 19281                           
 19282                           ; BSR set to: 15
 19283                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 19284  01250E  A83B               	btfss	i2CANsendMessage@identifier+2,4,c
 19285  012510  D002               	goto	i2l7194
 19286                           
 19287                           ; BSR set to: 15
 19288                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 19289  012512  010F               	movlb	15	; () banked
 19290  012514  8F32               	bsf	50,7,b	;volatile
 19291  012516                     i2l7194:
 19292                           
 19293                           ; BSR set to: 15
 19294                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 19295  012516  C039  F041         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19296  01251A  C03A  F042         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19297  01251E  C03B  F043         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19298  012522  C03C  F044         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19299  012526  0E16               	movlw	22
 19300  012528  D005               	goto	i2u934_40
 19301  01252A                     i2u934_45:
 19302  01252A  90D8               	bcf	status,0,c
 19303  01252C  3244               	rrcf	??i2_CANsendMessage+3,f,c
 19304  01252E  3243               	rrcf	??i2_CANsendMessage+2,f,c
 19305  012530  3242               	rrcf	??i2_CANsendMessage+1,f,c
 19306  012532  3241               	rrcf	??i2_CANsendMessage,f,c
 19307  012534                     i2u934_40:
 19308  012534  2EE8               	decfsz	wreg,f,c
 19309  012536  D7F9               	goto	i2u934_45
 19310  012538  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19311  01253C  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19312  012540  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19313  012544  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19314                           
 19315                           ; BSR set to: 15
 19316                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 19317  012548  5045               	movf	i2CANsendMessage@tamp,w,c
 19318  01254A  6E45               	movwf	i2CANsendMessage@tamp,c
 19319  01254C  6A46               	clrf	i2CANsendMessage@tamp+1,c
 19320  01254E  6A47               	clrf	i2CANsendMessage@tamp+2,c
 19321  012550  6A48               	clrf	i2CANsendMessage@tamp+3,c
 19322                           
 19323                           ; BSR set to: 15
 19324                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 19325  012552  C045  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 19326                           
 19327                           ;inc\CANlib.h: 407: }
 19328  012556  D04D               	goto	i2l7214
 19329  012558                     i2l393:
 19330                           
 19331                           ; BSR set to: 15
 19332                           ;inc\CANlib.h: 409: else
 19333                           ;inc\CANlib.h: 411: {
 19334                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 19335  012558  010F               	movlb	15	; () banked
 19336  01255A  9732               	bcf	50,3,b	;volatile
 19337                           
 19338                           ; BSR set to: 15
 19339                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 19340  01255C  C039  F041         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19341  012560  C03A  F042         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19342  012564  C03B  F043         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19343  012568  C03C  F044         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19344  01256C  0E04               	movlw	4
 19345  01256E  D005               	goto	i2u935_40
 19346  012570                     i2u935_45:
 19347  012570  90D8               	bcf	status,0,c
 19348  012572  3244               	rrcf	??i2_CANsendMessage+3,f,c
 19349  012574  3243               	rrcf	??i2_CANsendMessage+2,f,c
 19350  012576  3242               	rrcf	??i2_CANsendMessage+1,f,c
 19351  012578  3241               	rrcf	??i2_CANsendMessage,f,c
 19352  01257A                     i2u935_40:
 19353  01257A  2EE8               	decfsz	wreg,f,c
 19354  01257C  D7F9               	goto	i2u935_45
 19355  01257E  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19356  012582  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19357  012586  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19358  01258A  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19359                           
 19360                           ; BSR set to: 15
 19361                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 19362  01258E  5045               	movf	i2CANsendMessage@tamp,w,c
 19363  012590  6E45               	movwf	i2CANsendMessage@tamp,c
 19364  012592  6A46               	clrf	i2CANsendMessage@tamp+1,c
 19365  012594  6A47               	clrf	i2CANsendMessage@tamp+2,c
 19366  012596  6A48               	clrf	i2CANsendMessage@tamp+3,c
 19367                           
 19368                           ; BSR set to: 15
 19369                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 19370  012598  C045  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 19371                           
 19372                           ; BSR set to: 15
 19373                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 19374  01259C  0E07               	movlw	7
 19375  01259E  1439               	andwf	i2CANsendMessage@identifier,w,c
 19376  0125A0  6E45               	movwf	i2CANsendMessage@tamp,c
 19377  0125A2  0E00               	movlw	0
 19378  0125A4  143A               	andwf	i2CANsendMessage@identifier+1,w,c
 19379  0125A6  6E46               	movwf	i2CANsendMessage@tamp+1,c
 19380  0125A8  0E00               	movlw	0
 19381  0125AA  143B               	andwf	i2CANsendMessage@identifier+2,w,c
 19382  0125AC  6E47               	movwf	i2CANsendMessage@tamp+2,c
 19383  0125AE  0E00               	movlw	0
 19384  0125B0  143C               	andwf	i2CANsendMessage@identifier+3,w,c
 19385  0125B2  6E48               	movwf	i2CANsendMessage@tamp+3,c
 19386                           
 19387                           ; BSR set to: 15
 19388                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 19389  0125B4  C045  F041         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19390  0125B8  C046  F042         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19391  0125BC  C047  F043         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19392  0125C0  C048  F044         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19393  0125C4  0E05               	movlw	5
 19394  0125C6                     i2u936_45:
 19395  0125C6  90D8               	bcf	status,0,c
 19396  0125C8  3641               	rlcf	??i2_CANsendMessage,f,c
 19397  0125CA  3642               	rlcf	??i2_CANsendMessage+1,f,c
 19398  0125CC  3643               	rlcf	??i2_CANsendMessage+2,f,c
 19399  0125CE  3644               	rlcf	??i2_CANsendMessage+3,f,c
 19400  0125D0  2EE8               	decfsz	wreg,f,c
 19401  0125D2  D7F9               	goto	i2u936_45
 19402  0125D4  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19403  0125D8  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19404  0125DC  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19405  0125E0  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19406                           
 19407                           ; BSR set to: 15
 19408                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 19409  0125E4  010F               	movlb	15	; () banked
 19410  0125E6  5132               	movf	50,w,b	;volatile
 19411  0125E8  0B1F               	andlw	31
 19412  0125EA  010F               	movlb	15	; () banked
 19413  0125EC  6F32               	movwf	50,b	;volatile
 19414                           
 19415                           ; BSR set to: 15
 19416                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 19417  0125EE  C045  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 19418  0125F2                     i2l7214:
 19419                           
 19420                           ; BSR set to: 15
 19421                           ;inc\CANlib.h: 422: }
 19422                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 19423  0125F2  A040               	btfss	i2CANsendMessage@flags,0,c
 19424  0125F4  D003               	goto	i2l400
 19425                           
 19426                           ; BSR set to: 15
 19427                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 19428  0125F6  010F               	movlb	15	; () banked
 19429  0125F8  8130               	bsf	48,0,b	;volatile
 19430  0125FA  D002               	goto	i2l401
 19431  0125FC                     i2l400:
 19432                           
 19433                           ; BSR set to: 15
 19434                           ;inc\CANlib.h: 426: else
 19435                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 19436  0125FC  010F               	movlb	15	; () banked
 19437  0125FE  9130               	bcf	48,0,b	;volatile
 19438  012600                     i2l401:
 19439                           
 19440                           ; BSR set to: 15
 19441                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 19442  012600  A240               	btfss	i2CANsendMessage@flags,1,c
 19443  012602  D003               	goto	i2l402
 19444                           
 19445                           ; BSR set to: 15
 19446                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 19447  012604  010F               	movlb	15	; () banked
 19448  012606  8330               	bsf	48,1,b	;volatile
 19449  012608  D002               	goto	i2l7220
 19450  01260A                     i2l402:
 19451                           
 19452                           ; BSR set to: 15
 19453                           ;inc\CANlib.h: 430: else
 19454                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 19455  01260A  010F               	movlb	15	; () banked
 19456  01260C  9330               	bcf	48,1,b	;volatile
 19457  01260E                     i2l7220:
 19458                           
 19459                           ; BSR set to: 15
 19460                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 19461  01260E  C03D  FFD9         	movff	i2CANsendMessage@data,fsr2l
 19462  012612  C03E  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 19463  012616  50DF               	movf	indf2,w,c
 19464  012618  010F               	movlb	15	; () banked
 19465  01261A  6F36               	movwf	54,b	;volatile
 19466                           
 19467                           ; BSR set to: 15
 19468                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 19469  01261C  EE20 F001          	lfsr	2,1
 19470  012620  503D               	movf	i2CANsendMessage@data,w,c
 19471  012622  26D9               	addwf	fsr2l,f,c
 19472  012624  503E               	movf	i2CANsendMessage@data+1,w,c
 19473  012626  22DA               	addwfc	fsr2h,f,c
 19474  012628  50DF               	movf	indf2,w,c
 19475  01262A  010F               	movlb	15	; () banked
 19476  01262C  6F37               	movwf	55,b	;volatile
 19477                           
 19478                           ; BSR set to: 15
 19479                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 19480  01262E  EE20 F002          	lfsr	2,2
 19481  012632  503D               	movf	i2CANsendMessage@data,w,c
 19482  012634  26D9               	addwf	fsr2l,f,c
 19483  012636  503E               	movf	i2CANsendMessage@data+1,w,c
 19484  012638  22DA               	addwfc	fsr2h,f,c
 19485  01263A  50DF               	movf	indf2,w,c
 19486  01263C  010F               	movlb	15	; () banked
 19487  01263E  6F38               	movwf	56,b	;volatile
 19488                           
 19489                           ; BSR set to: 15
 19490                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 19491  012640  EE20 F003          	lfsr	2,3
 19492  012644  503D               	movf	i2CANsendMessage@data,w,c
 19493  012646  26D9               	addwf	fsr2l,f,c
 19494  012648  503E               	movf	i2CANsendMessage@data+1,w,c
 19495  01264A  22DA               	addwfc	fsr2h,f,c
 19496  01264C  50DF               	movf	indf2,w,c
 19497  01264E  010F               	movlb	15	; () banked
 19498  012650  6F39               	movwf	57,b	;volatile
 19499                           
 19500                           ; BSR set to: 15
 19501                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 19502  012652  EE20 F004          	lfsr	2,4
 19503  012656  503D               	movf	i2CANsendMessage@data,w,c
 19504  012658  26D9               	addwf	fsr2l,f,c
 19505  01265A  503E               	movf	i2CANsendMessage@data+1,w,c
 19506  01265C  22DA               	addwfc	fsr2h,f,c
 19507  01265E  50DF               	movf	indf2,w,c
 19508  012660  010F               	movlb	15	; () banked
 19509  012662  6F3A               	movwf	58,b	;volatile
 19510                           
 19511                           ; BSR set to: 15
 19512                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 19513  012664  EE20 F005          	lfsr	2,5
 19514  012668  503D               	movf	i2CANsendMessage@data,w,c
 19515  01266A  26D9               	addwf	fsr2l,f,c
 19516  01266C  503E               	movf	i2CANsendMessage@data+1,w,c
 19517  01266E  22DA               	addwfc	fsr2h,f,c
 19518  012670  50DF               	movf	indf2,w,c
 19519  012672  010F               	movlb	15	; () banked
 19520  012674  6F3B               	movwf	59,b	;volatile
 19521                           
 19522                           ; BSR set to: 15
 19523                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 19524  012676  EE20 F006          	lfsr	2,6
 19525  01267A  503D               	movf	i2CANsendMessage@data,w,c
 19526  01267C  26D9               	addwf	fsr2l,f,c
 19527  01267E  503E               	movf	i2CANsendMessage@data+1,w,c
 19528  012680  22DA               	addwfc	fsr2h,f,c
 19529  012682  50DF               	movf	indf2,w,c
 19530  012684  010F               	movlb	15	; () banked
 19531  012686  6F3C               	movwf	60,b	;volatile
 19532                           
 19533                           ; BSR set to: 15
 19534                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 19535  012688  EE20 F007          	lfsr	2,7
 19536  01268C  503D               	movf	i2CANsendMessage@data,w,c
 19537  01268E  26D9               	addwf	fsr2l,f,c
 19538  012690  503E               	movf	i2CANsendMessage@data+1,w,c
 19539  012692  22DA               	addwfc	fsr2h,f,c
 19540  012694  50DF               	movf	indf2,w,c
 19541  012696  010F               	movlb	15	; () banked
 19542  012698  6F3D               	movwf	61,b	;volatile
 19543                           
 19544                           ; BSR set to: 15
 19545                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 19546  01269A  010F               	movlb	15	; () banked
 19547  01269C  8730               	bsf	48,3,b	;volatile
 19548                           
 19549                           ; BSR set to: 15
 19550                           ;inc\CANlib.h: 444: return;
 19551  01269E  0012               	return	
 19552  0126A0                     i2l390:
 19553                           
 19554                           ; BSR set to: 15
 19555                           ;inc\CANlib.h: 445: }
 19556                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 19557  0126A0  010F               	movlb	15	; () banked
 19558  0126A2  B720               	btfsc	32,3,b	;volatile
 19559  0126A4  0012               	return	
 19560                           
 19561                           ; BSR set to: 15
 19562                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 19563  0126A6  C03F  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 19564                           
 19565                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 19566  0126AA  AC40               	btfss	i2CANsendMessage@flags,6,c
 19567  0126AC  D003               	goto	i2l405
 19568                           
 19569                           ; BSR set to: 15
 19570                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 19571  0126AE  010F               	movlb	15	; () banked
 19572  0126B0  8D25               	bsf	37,6,b	;volatile
 19573  0126B2  D002               	goto	i2l406
 19574  0126B4                     i2l405:
 19575                           
 19576                           ; BSR set to: 15
 19577                           ;inc\CANlib.h: 454: else
 19578                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 19579  0126B4  010F               	movlb	15	; () banked
 19580  0126B6  9D25               	bcf	37,6,b	;volatile
 19581  0126B8                     i2l406:
 19582                           
 19583                           ; BSR set to: 15
 19584                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 19585  0126B8  A640               	btfss	i2CANsendMessage@flags,3,c
 19586  0126BA  D066               	goto	i2l407
 19587                           
 19588                           ; BSR set to: 15
 19589                           ;inc\CANlib.h: 458: {
 19590                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 19591  0126BC  5039               	movf	i2CANsendMessage@identifier,w,c
 19592  0126BE  6E45               	movwf	i2CANsendMessage@tamp,c
 19593  0126C0  6A46               	clrf	i2CANsendMessage@tamp+1,c
 19594  0126C2  6A47               	clrf	i2CANsendMessage@tamp+2,c
 19595  0126C4  6A48               	clrf	i2CANsendMessage@tamp+3,c
 19596                           
 19597                           ; BSR set to: 15
 19598                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 19599  0126C6  C045  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 19600                           
 19601                           ; BSR set to: 15
 19602                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 19603  0126CA  0E00               	movlw	0
 19604  0126CC  1439               	andwf	i2CANsendMessage@identifier,w,c
 19605  0126CE  6E45               	movwf	i2CANsendMessage@tamp,c
 19606  0126D0  0EFF               	movlw	255
 19607  0126D2  143A               	andwf	i2CANsendMessage@identifier+1,w,c
 19608  0126D4  6E46               	movwf	i2CANsendMessage@tamp+1,c
 19609  0126D6  0E00               	movlw	0
 19610  0126D8  143B               	andwf	i2CANsendMessage@identifier+2,w,c
 19611  0126DA  6E47               	movwf	i2CANsendMessage@tamp+2,c
 19612  0126DC  0E00               	movlw	0
 19613  0126DE  143C               	andwf	i2CANsendMessage@identifier+3,w,c
 19614  0126E0  6E48               	movwf	i2CANsendMessage@tamp+3,c
 19615                           
 19616                           ; BSR set to: 15
 19617                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 19618  0126E2  C045  F041         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19619  0126E6  C046  F042         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19620  0126EA  C047  F043         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19621  0126EE  C048  F044         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19622  0126F2  C042  F041         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19623  0126F6  C043  F042         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19624  0126FA  C044  F043         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19625  0126FE  6A44               	clrf	??i2_CANsendMessage+3,c
 19626  012700  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19627  012704  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19628  012708  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19629  01270C  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19630                           
 19631                           ; BSR set to: 15
 19632                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 19633  012710  C045  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 19634                           
 19635                           ; BSR set to: 15
 19636                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 19637  012714  0E00               	movlw	0
 19638  012716  010F               	movlb	15	; () banked
 19639  012718  6F22               	movwf	34,b	;volatile
 19640                           
 19641                           ; BSR set to: 15
 19642                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 19643  01271A  010F               	movlb	15	; () banked
 19644  01271C  8722               	bsf	34,3,b	;volatile
 19645                           
 19646                           ; BSR set to: 15
 19647                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 19648  01271E  A03B               	btfss	i2CANsendMessage@identifier+2,0,c
 19649  012720  D002               	goto	i2l408
 19650                           
 19651                           ; BSR set to: 15
 19652                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 19653  012722  010F               	movlb	15	; () banked
 19654  012724  8122               	bsf	34,0,b	;volatile
 19655  012726                     i2l408:
 19656                           
 19657                           ; BSR set to: 15
 19658                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 19659  012726  A23B               	btfss	i2CANsendMessage@identifier+2,1,c
 19660  012728  D002               	goto	i2l409
 19661                           
 19662                           ; BSR set to: 15
 19663                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 19664  01272A  010F               	movlb	15	; () banked
 19665  01272C  8322               	bsf	34,1,b	;volatile
 19666  01272E                     i2l409:
 19667                           
 19668                           ; BSR set to: 15
 19669                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 19670  01272E  A43B               	btfss	i2CANsendMessage@identifier+2,2,c
 19671  012730  D002               	goto	i2l410
 19672                           
 19673                           ; BSR set to: 15
 19674                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 19675  012732  010F               	movlb	15	; () banked
 19676  012734  8B22               	bsf	34,5,b	;volatile
 19677  012736                     i2l410:
 19678                           
 19679                           ; BSR set to: 15
 19680                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 19681  012736  A63B               	btfss	i2CANsendMessage@identifier+2,3,c
 19682  012738  D002               	goto	i2l411
 19683                           
 19684                           ; BSR set to: 15
 19685                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 19686  01273A  010F               	movlb	15	; () banked
 19687  01273C  8D22               	bsf	34,6,b	;volatile
 19688  01273E                     i2l411:
 19689                           
 19690                           ; BSR set to: 15
 19691                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 19692  01273E  A83B               	btfss	i2CANsendMessage@identifier+2,4,c
 19693  012740  D002               	goto	i2l7270
 19694                           
 19695                           ; BSR set to: 15
 19696                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 19697  012742  010F               	movlb	15	; () banked
 19698  012744  8F22               	bsf	34,7,b	;volatile
 19699  012746                     i2l7270:
 19700                           
 19701                           ; BSR set to: 15
 19702                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 19703  012746  C039  F041         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19704  01274A  C03A  F042         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19705  01274E  C03B  F043         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19706  012752  C03C  F044         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19707  012756  0E16               	movlw	22
 19708  012758  D005               	goto	i2u947_40
 19709  01275A                     i2u947_45:
 19710  01275A  90D8               	bcf	status,0,c
 19711  01275C  3244               	rrcf	??i2_CANsendMessage+3,f,c
 19712  01275E  3243               	rrcf	??i2_CANsendMessage+2,f,c
 19713  012760  3242               	rrcf	??i2_CANsendMessage+1,f,c
 19714  012762  3241               	rrcf	??i2_CANsendMessage,f,c
 19715  012764                     i2u947_40:
 19716  012764  2EE8               	decfsz	wreg,f,c
 19717  012766  D7F9               	goto	i2u947_45
 19718  012768  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19719  01276C  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19720  012770  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19721  012774  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19722                           
 19723                           ; BSR set to: 15
 19724                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 19725  012778  5045               	movf	i2CANsendMessage@tamp,w,c
 19726  01277A  6E45               	movwf	i2CANsendMessage@tamp,c
 19727  01277C  6A46               	clrf	i2CANsendMessage@tamp+1,c
 19728  01277E  6A47               	clrf	i2CANsendMessage@tamp+2,c
 19729  012780  6A48               	clrf	i2CANsendMessage@tamp+3,c
 19730                           
 19731                           ; BSR set to: 15
 19732                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 19733  012782  C045  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 19734                           
 19735                           ;inc\CANlib.h: 483: }
 19736  012786  D04D               	goto	i2l7290
 19737  012788                     i2l407:
 19738                           
 19739                           ; BSR set to: 15
 19740                           ;inc\CANlib.h: 485: else
 19741                           ;inc\CANlib.h: 487: {
 19742                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 19743  012788  010F               	movlb	15	; () banked
 19744  01278A  9722               	bcf	34,3,b	;volatile
 19745                           
 19746                           ; BSR set to: 15
 19747                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 19748  01278C  C039  F041         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19749  012790  C03A  F042         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19750  012794  C03B  F043         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19751  012798  C03C  F044         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19752  01279C  0E04               	movlw	4
 19753  01279E  D005               	goto	i2u948_40
 19754  0127A0                     i2u948_45:
 19755  0127A0  90D8               	bcf	status,0,c
 19756  0127A2  3244               	rrcf	??i2_CANsendMessage+3,f,c
 19757  0127A4  3243               	rrcf	??i2_CANsendMessage+2,f,c
 19758  0127A6  3242               	rrcf	??i2_CANsendMessage+1,f,c
 19759  0127A8  3241               	rrcf	??i2_CANsendMessage,f,c
 19760  0127AA                     i2u948_40:
 19761  0127AA  2EE8               	decfsz	wreg,f,c
 19762  0127AC  D7F9               	goto	i2u948_45
 19763  0127AE  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19764  0127B2  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19765  0127B6  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19766  0127BA  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19767                           
 19768                           ; BSR set to: 15
 19769                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 19770  0127BE  5045               	movf	i2CANsendMessage@tamp,w,c
 19771  0127C0  6E45               	movwf	i2CANsendMessage@tamp,c
 19772  0127C2  6A46               	clrf	i2CANsendMessage@tamp+1,c
 19773  0127C4  6A47               	clrf	i2CANsendMessage@tamp+2,c
 19774  0127C6  6A48               	clrf	i2CANsendMessage@tamp+3,c
 19775                           
 19776                           ; BSR set to: 15
 19777                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 19778  0127C8  C045  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 19779                           
 19780                           ; BSR set to: 15
 19781                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 19782  0127CC  0E07               	movlw	7
 19783  0127CE  1439               	andwf	i2CANsendMessage@identifier,w,c
 19784  0127D0  6E45               	movwf	i2CANsendMessage@tamp,c
 19785  0127D2  0E00               	movlw	0
 19786  0127D4  143A               	andwf	i2CANsendMessage@identifier+1,w,c
 19787  0127D6  6E46               	movwf	i2CANsendMessage@tamp+1,c
 19788  0127D8  0E00               	movlw	0
 19789  0127DA  143B               	andwf	i2CANsendMessage@identifier+2,w,c
 19790  0127DC  6E47               	movwf	i2CANsendMessage@tamp+2,c
 19791  0127DE  0E00               	movlw	0
 19792  0127E0  143C               	andwf	i2CANsendMessage@identifier+3,w,c
 19793  0127E2  6E48               	movwf	i2CANsendMessage@tamp+3,c
 19794                           
 19795                           ; BSR set to: 15
 19796                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 19797  0127E4  C045  F041         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19798  0127E8  C046  F042         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19799  0127EC  C047  F043         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19800  0127F0  C048  F044         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19801  0127F4  0E05               	movlw	5
 19802  0127F6                     i2u949_45:
 19803  0127F6  90D8               	bcf	status,0,c
 19804  0127F8  3641               	rlcf	??i2_CANsendMessage,f,c
 19805  0127FA  3642               	rlcf	??i2_CANsendMessage+1,f,c
 19806  0127FC  3643               	rlcf	??i2_CANsendMessage+2,f,c
 19807  0127FE  3644               	rlcf	??i2_CANsendMessage+3,f,c
 19808  012800  2EE8               	decfsz	wreg,f,c
 19809  012802  D7F9               	goto	i2u949_45
 19810  012804  C041  F045         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19811  012808  C042  F046         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19812  01280C  C043  F047         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19813  012810  C044  F048         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19814                           
 19815                           ; BSR set to: 15
 19816                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 19817  012814  010F               	movlb	15	; () banked
 19818  012816  5122               	movf	34,w,b	;volatile
 19819  012818  0B1F               	andlw	31
 19820  01281A  010F               	movlb	15	; () banked
 19821  01281C  6F22               	movwf	34,b	;volatile
 19822                           
 19823                           ; BSR set to: 15
 19824                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 19825  01281E  C045  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 19826  012822                     i2l7290:
 19827                           
 19828                           ; BSR set to: 15
 19829                           ;inc\CANlib.h: 498: }
 19830                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 19831  012822  A040               	btfss	i2CANsendMessage@flags,0,c
 19832  012824  D003               	goto	i2l414
 19833                           
 19834                           ; BSR set to: 15
 19835                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 19836  012826  010F               	movlb	15	; () banked
 19837  012828  8120               	bsf	32,0,b	;volatile
 19838  01282A  D002               	goto	i2l415
 19839  01282C                     i2l414:
 19840                           
 19841                           ; BSR set to: 15
 19842                           ;inc\CANlib.h: 502: else
 19843                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 19844  01282C  010F               	movlb	15	; () banked
 19845  01282E  9120               	bcf	32,0,b	;volatile
 19846  012830                     i2l415:
 19847                           
 19848                           ; BSR set to: 15
 19849                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 19850  012830  A240               	btfss	i2CANsendMessage@flags,1,c
 19851  012832  D003               	goto	i2l416
 19852                           
 19853                           ; BSR set to: 15
 19854                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 19855  012834  010F               	movlb	15	; () banked
 19856  012836  8320               	bsf	32,1,b	;volatile
 19857  012838  D002               	goto	i2l7296
 19858  01283A                     i2l416:
 19859                           
 19860                           ; BSR set to: 15
 19861                           ;inc\CANlib.h: 506: else
 19862                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 19863  01283A  010F               	movlb	15	; () banked
 19864  01283C  9320               	bcf	32,1,b	;volatile
 19865  01283E                     i2l7296:
 19866                           
 19867                           ; BSR set to: 15
 19868                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 19869  01283E  C03D  FFD9         	movff	i2CANsendMessage@data,fsr2l
 19870  012842  C03E  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 19871  012846  50DF               	movf	indf2,w,c
 19872  012848  010F               	movlb	15	; () banked
 19873  01284A  6F26               	movwf	38,b	;volatile
 19874                           
 19875                           ; BSR set to: 15
 19876                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 19877  01284C  EE20 F001          	lfsr	2,1
 19878  012850  503D               	movf	i2CANsendMessage@data,w,c
 19879  012852  26D9               	addwf	fsr2l,f,c
 19880  012854  503E               	movf	i2CANsendMessage@data+1,w,c
 19881  012856  22DA               	addwfc	fsr2h,f,c
 19882  012858  50DF               	movf	indf2,w,c
 19883  01285A  010F               	movlb	15	; () banked
 19884  01285C  6F27               	movwf	39,b	;volatile
 19885                           
 19886                           ; BSR set to: 15
 19887                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 19888  01285E  EE20 F002          	lfsr	2,2
 19889  012862  503D               	movf	i2CANsendMessage@data,w,c
 19890  012864  26D9               	addwf	fsr2l,f,c
 19891  012866  503E               	movf	i2CANsendMessage@data+1,w,c
 19892  012868  22DA               	addwfc	fsr2h,f,c
 19893  01286A  50DF               	movf	indf2,w,c
 19894  01286C  010F               	movlb	15	; () banked
 19895  01286E  6F28               	movwf	40,b	;volatile
 19896                           
 19897                           ; BSR set to: 15
 19898                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 19899  012870  EE20 F003          	lfsr	2,3
 19900  012874  503D               	movf	i2CANsendMessage@data,w,c
 19901  012876  26D9               	addwf	fsr2l,f,c
 19902  012878  503E               	movf	i2CANsendMessage@data+1,w,c
 19903  01287A  22DA               	addwfc	fsr2h,f,c
 19904  01287C  50DF               	movf	indf2,w,c
 19905  01287E  010F               	movlb	15	; () banked
 19906  012880  6F29               	movwf	41,b	;volatile
 19907                           
 19908                           ; BSR set to: 15
 19909                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 19910  012882  EE20 F004          	lfsr	2,4
 19911  012886  503D               	movf	i2CANsendMessage@data,w,c
 19912  012888  26D9               	addwf	fsr2l,f,c
 19913  01288A  503E               	movf	i2CANsendMessage@data+1,w,c
 19914  01288C  22DA               	addwfc	fsr2h,f,c
 19915  01288E  50DF               	movf	indf2,w,c
 19916  012890  010F               	movlb	15	; () banked
 19917  012892  6F2A               	movwf	42,b	;volatile
 19918                           
 19919                           ; BSR set to: 15
 19920                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 19921  012894  EE20 F005          	lfsr	2,5
 19922  012898  503D               	movf	i2CANsendMessage@data,w,c
 19923  01289A  26D9               	addwf	fsr2l,f,c
 19924  01289C  503E               	movf	i2CANsendMessage@data+1,w,c
 19925  01289E  22DA               	addwfc	fsr2h,f,c
 19926  0128A0  50DF               	movf	indf2,w,c
 19927  0128A2  010F               	movlb	15	; () banked
 19928  0128A4  6F2B               	movwf	43,b	;volatile
 19929                           
 19930                           ; BSR set to: 15
 19931                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 19932  0128A6  EE20 F006          	lfsr	2,6
 19933  0128AA  503D               	movf	i2CANsendMessage@data,w,c
 19934  0128AC  26D9               	addwf	fsr2l,f,c
 19935  0128AE  503E               	movf	i2CANsendMessage@data+1,w,c
 19936  0128B0  22DA               	addwfc	fsr2h,f,c
 19937  0128B2  50DF               	movf	indf2,w,c
 19938  0128B4  010F               	movlb	15	; () banked
 19939  0128B6  6F2C               	movwf	44,b	;volatile
 19940                           
 19941                           ; BSR set to: 15
 19942                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 19943  0128B8  EE20 F007          	lfsr	2,7
 19944  0128BC  503D               	movf	i2CANsendMessage@data,w,c
 19945  0128BE  26D9               	addwf	fsr2l,f,c
 19946  0128C0  503E               	movf	i2CANsendMessage@data+1,w,c
 19947  0128C2  22DA               	addwfc	fsr2h,f,c
 19948  0128C4  50DF               	movf	indf2,w,c
 19949  0128C6  010F               	movlb	15	; () banked
 19950  0128C8  6F2D               	movwf	45,b	;volatile
 19951                           
 19952                           ; BSR set to: 15
 19953                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 19954  0128CA  010F               	movlb	15	; () banked
 19955  0128CC  8720               	bsf	32,3,b	;volatile
 19956                           
 19957                           ; BSR set to: 15
 19958                           ;inc\CANlib.h: 520: return;
 19959  0128CE  0012               	return	
 19960  0128D0                     __end_ofi2_CANsendMessage:
 19961                           	opt stack 0
 19962                           pclatu	equ	0xFFB
 19963                           pclath	equ	0xFFA
 19964                           tblptru	equ	0xFF8
 19965                           tblptrh	equ	0xFF7
 19966                           tblptrl	equ	0xFF6
 19967                           tablat	equ	0xFF5
 19968                           prodh	equ	0xFF4
 19969                           prodl	equ	0xFF3
 19970                           intcon	equ	0xFF2
 19971                           postinc0	equ	0xFEE
 19972                           fsr0h	equ	0xFEA
 19973                           fsr0l	equ	0xFE9
 19974                           wreg	equ	0xFE8
 19975                           indf1	equ	0xFE7
 19976                           plusw1	equ	0xFE3
 19977                           fsr1h	equ	0xFE2
 19978                           fsr1l	equ	0xFE1
 19979                           bsr	equ	0xFE0
 19980                           indf2	equ	0xFDF
 19981                           postinc2	equ	0xFDE
 19982                           plusw2	equ	0xFDB
 19983                           fsr2h	equ	0xFDA
 19984                           fsr2l	equ	0xFD9
 19985                           status	equ	0xFD8
 19986                           
 19987 ;; *************** function i2_CANisTxReady *****************
 19988 ;; Defined at:
 19989 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 19990 ;; Parameters:    Size  Location     Type
 19991 ;;		None
 19992 ;; Auto vars:     Size  Location     Type
 19993 ;;		None
 19994 ;; Return value:  Size  Location     Type
 19995 ;;                  1    wreg      unsigned char 
 19996 ;; Registers used:
 19997 ;;		wreg, status,2
 19998 ;; Tracked objects:
 19999 ;;		On entry : 0/0
 20000 ;;		On exit  : 0/0
 20001 ;;		Unchanged: 0/0
 20002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20004 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20006 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20007 ;;Total ram usage:        1 bytes
 20008 ;; Hardware stack levels used:    1
 20009 ;; This function calls:
 20010 ;;		Nothing
 20011 ;; This function is called by:
 20012 ;;		_ISR_alta
 20013 ;; This function uses a non-reentrant model
 20014 ;;
 20015                           
 20016                           	psect	text55
 20017  0161C4                     __ptext55:
 20018                           	opt stack 0
 20019  0161C4                     i2_CANisTxReady:
 20020                           	opt stack 20
 20021                           
 20022                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 20023                           
 20024                           ; BSR set to: 15
 20025                           ;incstack = 0
 20026  0161C4  0E01               	movlw	1
 20027  0161C6  6E39               	movwf	i2_CANisTxReady$3235,c
 20028  0161C8  010F               	movlb	15	; () banked
 20029  0161CA  A740               	btfss	64,3,b	;volatile
 20030  0161CC  D008               	goto	i2l568
 20031                           
 20032                           ; BSR set to: 15
 20033  0161CE  010F               	movlb	15	; () banked
 20034  0161D0  A730               	btfss	48,3,b	;volatile
 20035  0161D2  D005               	goto	i2l568
 20036                           
 20037                           ; BSR set to: 15
 20038  0161D4  010F               	movlb	15	; () banked
 20039  0161D6  A720               	btfss	32,3,b	;volatile
 20040  0161D8  D002               	goto	i2l568
 20041                           
 20042                           ; BSR set to: 15
 20043  0161DA  0E00               	movlw	0
 20044  0161DC  6E39               	movwf	i2_CANisTxReady$3235,c
 20045  0161DE                     i2l568:
 20046                           
 20047                           ; BSR set to: 15
 20048  0161DE  5039               	movf	i2_CANisTxReady$3235,w,c
 20049  0161E0  0012               	return	
 20050  0161E2                     __end_ofi2_CANisTxReady:
 20051                           	opt stack 0
 20052                           pclatu	equ	0xFFB
 20053                           pclath	equ	0xFFA
 20054                           tblptru	equ	0xFF8
 20055                           tblptrh	equ	0xFF7
 20056                           tblptrl	equ	0xFF6
 20057                           tablat	equ	0xFF5
 20058                           prodh	equ	0xFF4
 20059                           prodl	equ	0xFF3
 20060                           intcon	equ	0xFF2
 20061                           postinc0	equ	0xFEE
 20062                           fsr0h	equ	0xFEA
 20063                           fsr0l	equ	0xFE9
 20064                           wreg	equ	0xFE8
 20065                           indf1	equ	0xFE7
 20066                           plusw1	equ	0xFE3
 20067                           fsr1h	equ	0xFE2
 20068                           fsr1l	equ	0xFE1
 20069                           bsr	equ	0xFE0
 20070                           indf2	equ	0xFDF
 20071                           postinc2	equ	0xFDE
 20072                           plusw2	equ	0xFDB
 20073                           fsr2h	equ	0xFDA
 20074                           fsr2l	equ	0xFD9
 20075                           status	equ	0xFD8
 20076                           
 20077 ;; *************** function _CANreceiveMessage *****************
 20078 ;; Defined at:
 20079 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 20080 ;; Parameters:    Size  Location     Type
 20081 ;;  msg             2   17[COMRAM] PTR struct .
 20082 ;;		 -> msg(15), 
 20083 ;; Auto vars:     Size  Location     Type
 20084 ;;  tamp            1   28[COMRAM] unsigned char 
 20085 ;;  error           1   27[COMRAM] unsigned char 
 20086 ;; Return value:  Size  Location     Type
 20087 ;;                  1    wreg      unsigned char 
 20088 ;; Registers used:
 20089 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20090 ;; Tracked objects:
 20091 ;;		On entry : 0/0
 20092 ;;		On exit  : 0/0
 20093 ;;		Unchanged: 0/0
 20094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20096 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20097 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20098 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20099 ;;Total ram usage:       12 bytes
 20100 ;; Hardware stack levels used:    1
 20101 ;; This function calls:
 20102 ;;		Nothing
 20103 ;; This function is called by:
 20104 ;;		_ISR_alta
 20105 ;; This function uses a non-reentrant model
 20106 ;;
 20107                           
 20108                           	psect	text56
 20109  012DEA                     __ptext56:
 20110                           	opt stack 0
 20111  012DEA                     _CANreceiveMessage:
 20112                           	opt stack 20
 20113                           
 20114                           ;inc\CANlib.h: 530: BYTE tamp;
 20115                           ;inc\CANlib.h: 531: BYTE error = 0;
 20116                           
 20117                           ; BSR set to: 15
 20118                           ;incstack = 0
 20119  012DEA  0E00               	movlw	0
 20120  012DEC  6E43               	movwf	CANreceiveMessage@error,c
 20121                           
 20122                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 20123  012DEE  BE74               	btfsc	3956,7,c	;volatile
 20124                           
 20125                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 20126  012DF0  8043               	bsf	CANreceiveMessage@error,0,c
 20127                           
 20128                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 20129  012DF2  BC74               	btfsc	3956,6,c	;volatile
 20130                           
 20131                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 20132  012DF4  8243               	bsf	CANreceiveMessage@error,1,c
 20133                           
 20134                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 20135  012DF6  010F               	movlb	15	; () banked
 20136  012DF8  AF50               	btfss	80,7,b	;volatile
 20137  012DFA  D143               	goto	i2l422
 20138                           
 20139                           ; BSR set to: 15
 20140                           ;inc\CANlib.h: 541: {
 20141                           ;inc\CANlib.h: 542: msg->identifier = 0;
 20142  012DFC  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20143  012E00  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20144  012E04  6ADE               	clrf	postinc2,c
 20145  012E06  6ADE               	clrf	postinc2,c
 20146  012E08  6ADE               	clrf	postinc2,c
 20147  012E0A  6ADD               	clrf	postdec2,c
 20148                           
 20149                           ; BSR set to: 15
 20150                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 20151  012E0C  EE20 F004          	lfsr	2,4
 20152  012E10  5039               	movf	CANreceiveMessage@msg,w,c
 20153  012E12  26D9               	addwf	fsr2l,f,c
 20154  012E14  503A               	movf	CANreceiveMessage@msg+1,w,c
 20155  012E16  22DA               	addwfc	fsr2h,f,c
 20156  012E18  CF56 FFDF          	movff	3926,indf2	;volatile
 20157                           
 20158                           ; BSR set to: 15
 20159                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 20160  012E1C  EE20 F005          	lfsr	2,5
 20161  012E20  5039               	movf	CANreceiveMessage@msg,w,c
 20162  012E22  26D9               	addwf	fsr2l,f,c
 20163  012E24  503A               	movf	CANreceiveMessage@msg+1,w,c
 20164  012E26  22DA               	addwfc	fsr2h,f,c
 20165  012E28  CF57 FFDF          	movff	3927,indf2	;volatile
 20166                           
 20167                           ; BSR set to: 15
 20168                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 20169  012E2C  EE20 F006          	lfsr	2,6
 20170  012E30  5039               	movf	CANreceiveMessage@msg,w,c
 20171  012E32  26D9               	addwf	fsr2l,f,c
 20172  012E34  503A               	movf	CANreceiveMessage@msg+1,w,c
 20173  012E36  22DA               	addwfc	fsr2h,f,c
 20174  012E38  CF58 FFDF          	movff	3928,indf2	;volatile
 20175                           
 20176                           ; BSR set to: 15
 20177                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 20178  012E3C  EE20 F007          	lfsr	2,7
 20179  012E40  5039               	movf	CANreceiveMessage@msg,w,c
 20180  012E42  26D9               	addwf	fsr2l,f,c
 20181  012E44  503A               	movf	CANreceiveMessage@msg+1,w,c
 20182  012E46  22DA               	addwfc	fsr2h,f,c
 20183  012E48  CF59 FFDF          	movff	3929,indf2	;volatile
 20184                           
 20185                           ; BSR set to: 15
 20186                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 20187  012E4C  EE20 F008          	lfsr	2,8
 20188  012E50  5039               	movf	CANreceiveMessage@msg,w,c
 20189  012E52  26D9               	addwf	fsr2l,f,c
 20190  012E54  503A               	movf	CANreceiveMessage@msg+1,w,c
 20191  012E56  22DA               	addwfc	fsr2h,f,c
 20192  012E58  CF5A FFDF          	movff	3930,indf2	;volatile
 20193                           
 20194                           ; BSR set to: 15
 20195                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 20196  012E5C  EE20 F009          	lfsr	2,9
 20197  012E60  5039               	movf	CANreceiveMessage@msg,w,c
 20198  012E62  26D9               	addwf	fsr2l,f,c
 20199  012E64  503A               	movf	CANreceiveMessage@msg+1,w,c
 20200  012E66  22DA               	addwfc	fsr2h,f,c
 20201  012E68  CF5B FFDF          	movff	3931,indf2	;volatile
 20202                           
 20203                           ; BSR set to: 15
 20204                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 20205  012E6C  EE20 F00A          	lfsr	2,10
 20206  012E70  5039               	movf	CANreceiveMessage@msg,w,c
 20207  012E72  26D9               	addwf	fsr2l,f,c
 20208  012E74  503A               	movf	CANreceiveMessage@msg+1,w,c
 20209  012E76  22DA               	addwfc	fsr2h,f,c
 20210  012E78  CF5C FFDF          	movff	3932,indf2	;volatile
 20211                           
 20212                           ; BSR set to: 15
 20213                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 20214  012E7C  EE20 F00B          	lfsr	2,11
 20215  012E80  5039               	movf	CANreceiveMessage@msg,w,c
 20216  012E82  26D9               	addwf	fsr2l,f,c
 20217  012E84  503A               	movf	CANreceiveMessage@msg+1,w,c
 20218  012E86  22DA               	addwfc	fsr2h,f,c
 20219  012E88  CF5D FFDF          	movff	3933,indf2	;volatile
 20220                           
 20221                           ; BSR set to: 15
 20222                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 20223  012E8C  EE20 F00E          	lfsr	2,14
 20224  012E90  5039               	movf	CANreceiveMessage@msg,w,c
 20225  012E92  26D9               	addwf	fsr2l,f,c
 20226  012E94  503A               	movf	CANreceiveMessage@msg+1,w,c
 20227  012E96  22DA               	addwfc	fsr2h,f,c
 20228  012E98  010F               	movlb	15	; () banked
 20229  012E9A  AD55               	btfss	85,6,b	;volatile
 20230  012E9C  D002               	goto	i2u854_40
 20231  012E9E  0E01               	movlw	1
 20232  012EA0  D001               	goto	i2u854_46
 20233  012EA2                     i2u854_40:
 20234  012EA2  0E00               	movlw	0
 20235  012EA4                     i2u854_46:
 20236  012EA4  6EDF               	movwf	indf2,c
 20237                           
 20238                           ; BSR set to: 15
 20239                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 20240  012EA6  EE20 F00D          	lfsr	2,13
 20241  012EAA  5039               	movf	CANreceiveMessage@msg,w,c
 20242  012EAC  26D9               	addwf	fsr2l,f,c
 20243  012EAE  503A               	movf	CANreceiveMessage@msg+1,w,c
 20244  012EB0  22DA               	addwfc	fsr2h,f,c
 20245  012EB2  010F               	movlb	15	; () banked
 20246  012EB4  5155               	movf	85,w,b	;volatile
 20247  012EB6  0B0F               	andlw	15
 20248  012EB8  6EDF               	movwf	indf2,c
 20249                           
 20250                           ; BSR set to: 15
 20251                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 20252  012EBA  EE20 F00C          	lfsr	2,12
 20253  012EBE  5039               	movf	CANreceiveMessage@msg,w,c
 20254  012EC0  26D9               	addwf	fsr2l,f,c
 20255  012EC2  503A               	movf	CANreceiveMessage@msg+1,w,c
 20256  012EC4  22DA               	addwfc	fsr2h,f,c
 20257  012EC6  010F               	movlb	15	; () banked
 20258  012EC8  A752               	btfss	82,3,b	;volatile
 20259  012ECA  D002               	goto	i2u855_40
 20260  012ECC  0E01               	movlw	1
 20261  012ECE  D001               	goto	i2u855_46
 20262  012ED0                     i2u855_40:
 20263  012ED0  0E00               	movlw	0
 20264  012ED2                     i2u855_46:
 20265  012ED2  6EDF               	movwf	indf2,c
 20266                           
 20267                           ; BSR set to: 15
 20268                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 20269  012ED4  010F               	movlb	15	; () banked
 20270  012ED6  B752               	btfsc	82,3,b	;volatile
 20271  012ED8  D044               	goto	i2l6764
 20272                           
 20273                           ; BSR set to: 15
 20274                           ;inc\CANlib.h: 559: {
 20275                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 20276  012EDA  CF51 F03B          	movff	3921,??_CANreceiveMessage	;volatile
 20277  012EDE  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20278  012EE0  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20279  012EE2  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20280  012EE4  0E03               	movlw	3
 20281  012EE6                     i2u857_45:
 20282  012EE6  90D8               	bcf	status,0,c
 20283  012EE8  363B               	rlcf	??_CANreceiveMessage,f,c
 20284  012EEA  363C               	rlcf	??_CANreceiveMessage+1,f,c
 20285  012EEC  363D               	rlcf	??_CANreceiveMessage+2,f,c
 20286  012EEE  363E               	rlcf	??_CANreceiveMessage+3,f,c
 20287  012EF0  2EE8               	decfsz	wreg,f,c
 20288  012EF2  D7F9               	goto	i2u857_45
 20289  012EF4  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20290  012EF8  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20291  012EFC  C03B  FFDE         	movff	??_CANreceiveMessage,postinc2
 20292  012F00  C03C  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20293  012F04  C03D  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20294  012F08  C03E  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20295                           
 20296                           ; BSR set to: 15
 20297                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 20298  012F0C  010F               	movlb	15	; () banked
 20299  012F0E  3952               	swapf	82,w,b	;volatile
 20300  012F10  42E8               	rrncf	wreg,f,c
 20301  012F12  0B07               	andlw	7
 20302  012F14  0B07               	andlw	7
 20303  012F16  6E44               	movwf	CANreceiveMessage@tamp,c
 20304                           
 20305                           ; BSR set to: 15
 20306                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 20307  012F18  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20308  012F1C  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20309  012F20  CFDE F03B          	movff	postinc2,??_CANreceiveMessage
 20310  012F24  CFDE F03C          	movff	postinc2,??_CANreceiveMessage+1
 20311  012F28  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+2
 20312  012F2C  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+3
 20313  012F30  5044               	movf	CANreceiveMessage@tamp,w,c
 20314  012F32  243B               	addwf	??_CANreceiveMessage,w,c
 20315  012F34  6E3F               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 20316  012F36  0E00               	movlw	0
 20317  012F38  203C               	addwfc	??_CANreceiveMessage+1,w,c
 20318  012F3A  6E40               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 20319  012F3C  0E00               	movlw	0
 20320  012F3E  203D               	addwfc	??_CANreceiveMessage+2,w,c
 20321  012F40  6E41               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 20322  012F42  0E00               	movlw	0
 20323  012F44  203E               	addwfc	??_CANreceiveMessage+3,w,c
 20324  012F46  6E42               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 20325  012F48  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20326  012F4C  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20327  012F50  C03F  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 20328  012F54  C040  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 20329  012F58  C041  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 20330  012F5C  C042  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 20331                           
 20332                           ;inc\CANlib.h: 563: }
 20333  012F60  D08D               	goto	i2l6790
 20334  012F62                     i2l6764:
 20335                           
 20336                           ; BSR set to: 15
 20337                           ;inc\CANlib.h: 564: else
 20338                           ;inc\CANlib.h: 565: {
 20339                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 20340  012F62  CF54 F03B          	movff	3924,??_CANreceiveMessage	;volatile
 20341  012F66  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20342  012F68  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20343  012F6A  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20344  012F6C  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20345  012F70  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20346  012F74  C03B  FFDE         	movff	??_CANreceiveMessage,postinc2
 20347  012F78  C03C  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20348  012F7C  C03D  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20349  012F80  C03E  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20350                           
 20351                           ; BSR set to: 15
 20352                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 20353  012F84  CF53 F03B          	movff	3923,??_CANreceiveMessage	;volatile
 20354  012F88  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20355  012F8A  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20356  012F8C  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20357  012F8E  C03D  F03E         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 20358  012F92  C03C  F03D         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 20359  012F96  C03B  F03C         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 20360  012F9A  6A3B               	clrf	??_CANreceiveMessage,c
 20361  012F9C  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20362  012FA0  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20363  012FA4  503B               	movf	??_CANreceiveMessage,w,c
 20364  012FA6  26DE               	addwf	postinc2,f,c
 20365  012FA8  503C               	movf	??_CANreceiveMessage+1,w,c
 20366  012FAA  22DE               	addwfc	postinc2,f,c
 20367  012FAC  503D               	movf	??_CANreceiveMessage+2,w,c
 20368  012FAE  22DE               	addwfc	postinc2,f,c
 20369  012FB0  503E               	movf	??_CANreceiveMessage+3,w,c
 20370  012FB2  22DE               	addwfc	postinc2,f,c
 20371                           
 20372                           ; BSR set to: 15
 20373                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 20374  012FB4  010F               	movlb	15	; () banked
 20375  012FB6  A152               	btfss	82,0,b	;volatile
 20376  012FB8  D00C               	goto	i2l6772
 20377                           
 20378                           ; BSR set to: 15
 20379                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 20380  012FBA  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20381  012FBE  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20382  012FC2  0E00               	movlw	0
 20383  012FC4  12DE               	iorwf	postinc2,f,c
 20384  012FC6  0E00               	movlw	0
 20385  012FC8  12DE               	iorwf	postinc2,f,c
 20386  012FCA  0E01               	movlw	1
 20387  012FCC  12DE               	iorwf	postinc2,f,c
 20388  012FCE  0E00               	movlw	0
 20389  012FD0  12DE               	iorwf	postinc2,f,c
 20390  012FD2                     i2l6772:
 20391                           
 20392                           ; BSR set to: 15
 20393                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 20394  012FD2  010F               	movlb	15	; () banked
 20395  012FD4  A352               	btfss	82,1,b	;volatile
 20396  012FD6  D00C               	goto	i2l6776
 20397                           
 20398                           ; BSR set to: 15
 20399                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 20400  012FD8  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20401  012FDC  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20402  012FE0  0E00               	movlw	0
 20403  012FE2  12DE               	iorwf	postinc2,f,c
 20404  012FE4  0E00               	movlw	0
 20405  012FE6  12DE               	iorwf	postinc2,f,c
 20406  012FE8  0E02               	movlw	2
 20407  012FEA  12DE               	iorwf	postinc2,f,c
 20408  012FEC  0E00               	movlw	0
 20409  012FEE  12DE               	iorwf	postinc2,f,c
 20410  012FF0                     i2l6776:
 20411                           
 20412                           ; BSR set to: 15
 20413                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 20414  012FF0  010F               	movlb	15	; () banked
 20415  012FF2  AB52               	btfss	82,5,b	;volatile
 20416  012FF4  D00C               	goto	i2l6780
 20417                           
 20418                           ; BSR set to: 15
 20419                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 20420  012FF6  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20421  012FFA  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20422  012FFE  0E00               	movlw	0
 20423  013000  12DE               	iorwf	postinc2,f,c
 20424  013002  0E00               	movlw	0
 20425  013004  12DE               	iorwf	postinc2,f,c
 20426  013006  0E04               	movlw	4
 20427  013008  12DE               	iorwf	postinc2,f,c
 20428  01300A  0E00               	movlw	0
 20429  01300C  12DE               	iorwf	postinc2,f,c
 20430  01300E                     i2l6780:
 20431                           
 20432                           ; BSR set to: 15
 20433                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 20434  01300E  010F               	movlb	15	; () banked
 20435  013010  AD52               	btfss	82,6,b	;volatile
 20436  013012  D00C               	goto	i2l6784
 20437                           
 20438                           ; BSR set to: 15
 20439                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 20440  013014  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20441  013018  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20442  01301C  0E00               	movlw	0
 20443  01301E  12DE               	iorwf	postinc2,f,c
 20444  013020  0E00               	movlw	0
 20445  013022  12DE               	iorwf	postinc2,f,c
 20446  013024  0E08               	movlw	8
 20447  013026  12DE               	iorwf	postinc2,f,c
 20448  013028  0E00               	movlw	0
 20449  01302A  12DE               	iorwf	postinc2,f,c
 20450  01302C                     i2l6784:
 20451                           
 20452                           ; BSR set to: 15
 20453                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 20454  01302C  010F               	movlb	15	; () banked
 20455  01302E  AF52               	btfss	82,7,b	;volatile
 20456  013030  D00C               	goto	i2l6788
 20457                           
 20458                           ; BSR set to: 15
 20459                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 20460  013032  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20461  013036  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20462  01303A  0E00               	movlw	0
 20463  01303C  12DE               	iorwf	postinc2,f,c
 20464  01303E  0E00               	movlw	0
 20465  013040  12DE               	iorwf	postinc2,f,c
 20466  013042  0E10               	movlw	16
 20467  013044  12DE               	iorwf	postinc2,f,c
 20468  013046  0E00               	movlw	0
 20469  013048  12DE               	iorwf	postinc2,f,c
 20470  01304A                     i2l6788:
 20471                           
 20472                           ; BSR set to: 15
 20473                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 20474  01304A  CF51 F03B          	movff	3921,??_CANreceiveMessage	;volatile
 20475  01304E  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20476  013050  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20477  013052  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20478  013054  0E15               	movlw	21
 20479  013056                     i2u863_45:
 20480  013056  90D8               	bcf	status,0,c
 20481  013058  363B               	rlcf	??_CANreceiveMessage,f,c
 20482  01305A  363C               	rlcf	??_CANreceiveMessage+1,f,c
 20483  01305C  363D               	rlcf	??_CANreceiveMessage+2,f,c
 20484  01305E  363E               	rlcf	??_CANreceiveMessage+3,f,c
 20485  013060  2EE8               	decfsz	wreg,f,c
 20486  013062  D7F9               	goto	i2u863_45
 20487  013064  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20488  013068  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20489  01306C  503B               	movf	??_CANreceiveMessage,w,c
 20490  01306E  12DE               	iorwf	postinc2,f,c
 20491  013070  503C               	movf	??_CANreceiveMessage+1,w,c
 20492  013072  12DE               	iorwf	postinc2,f,c
 20493  013074  503D               	movf	??_CANreceiveMessage+2,w,c
 20494  013076  12DE               	iorwf	postinc2,f,c
 20495  013078  503E               	movf	??_CANreceiveMessage+3,w,c
 20496  01307A  12DE               	iorwf	postinc2,f,c
 20497  01307C                     i2l6790:
 20498                           
 20499                           ; BSR set to: 15
 20500                           ;inc\CANlib.h: 581: }
 20501                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 20502  01307C  010F               	movlb	15	; () banked
 20503  01307E  9F50               	bcf	80,7,b	;volatile
 20504                           
 20505                           ; BSR set to: 15
 20506                           ;inc\CANlib.h: 584: return (error);
 20507                           ;	Return value of _CANreceiveMessage is never used
 20508  013080  0012               	return	
 20509  013082                     i2l422:
 20510                           
 20511                           ; BSR set to: 15
 20512                           ;inc\CANlib.h: 585: }
 20513                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 20514  013082  AE60               	btfss	3936,7,c	;volatile
 20515  013084  0012               	return	
 20516                           
 20517                           ; BSR set to: 15
 20518                           ;inc\CANlib.h: 588: {
 20519                           ;inc\CANlib.h: 589: msg->identifier = 0;
 20520  013086  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20521  01308A  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20522  01308E  6ADE               	clrf	postinc2,c
 20523  013090  6ADE               	clrf	postinc2,c
 20524  013092  6ADE               	clrf	postinc2,c
 20525  013094  6ADD               	clrf	postdec2,c
 20526                           
 20527                           ; BSR set to: 15
 20528                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 20529  013096  EE20 F004          	lfsr	2,4
 20530  01309A  5039               	movf	CANreceiveMessage@msg,w,c
 20531  01309C  26D9               	addwf	fsr2l,f,c
 20532  01309E  503A               	movf	CANreceiveMessage@msg+1,w,c
 20533  0130A0  22DA               	addwfc	fsr2h,f,c
 20534  0130A2  CF66 FFDF          	movff	3942,indf2	;volatile
 20535                           
 20536                           ; BSR set to: 15
 20537                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 20538  0130A6  EE20 F005          	lfsr	2,5
 20539  0130AA  5039               	movf	CANreceiveMessage@msg,w,c
 20540  0130AC  26D9               	addwf	fsr2l,f,c
 20541  0130AE  503A               	movf	CANreceiveMessage@msg+1,w,c
 20542  0130B0  22DA               	addwfc	fsr2h,f,c
 20543  0130B2  CF67 FFDF          	movff	3943,indf2	;volatile
 20544                           
 20545                           ; BSR set to: 15
 20546                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 20547  0130B6  EE20 F006          	lfsr	2,6
 20548  0130BA  5039               	movf	CANreceiveMessage@msg,w,c
 20549  0130BC  26D9               	addwf	fsr2l,f,c
 20550  0130BE  503A               	movf	CANreceiveMessage@msg+1,w,c
 20551  0130C0  22DA               	addwfc	fsr2h,f,c
 20552  0130C2  CF68 FFDF          	movff	3944,indf2	;volatile
 20553                           
 20554                           ; BSR set to: 15
 20555                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 20556  0130C6  EE20 F007          	lfsr	2,7
 20557  0130CA  5039               	movf	CANreceiveMessage@msg,w,c
 20558  0130CC  26D9               	addwf	fsr2l,f,c
 20559  0130CE  503A               	movf	CANreceiveMessage@msg+1,w,c
 20560  0130D0  22DA               	addwfc	fsr2h,f,c
 20561  0130D2  CF69 FFDF          	movff	3945,indf2	;volatile
 20562                           
 20563                           ; BSR set to: 15
 20564                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 20565  0130D6  EE20 F008          	lfsr	2,8
 20566  0130DA  5039               	movf	CANreceiveMessage@msg,w,c
 20567  0130DC  26D9               	addwf	fsr2l,f,c
 20568  0130DE  503A               	movf	CANreceiveMessage@msg+1,w,c
 20569  0130E0  22DA               	addwfc	fsr2h,f,c
 20570  0130E2  CF6A FFDF          	movff	3946,indf2	;volatile
 20571                           
 20572                           ; BSR set to: 15
 20573                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 20574  0130E6  EE20 F009          	lfsr	2,9
 20575  0130EA  5039               	movf	CANreceiveMessage@msg,w,c
 20576  0130EC  26D9               	addwf	fsr2l,f,c
 20577  0130EE  503A               	movf	CANreceiveMessage@msg+1,w,c
 20578  0130F0  22DA               	addwfc	fsr2h,f,c
 20579  0130F2  CF6B FFDF          	movff	3947,indf2	;volatile
 20580                           
 20581                           ; BSR set to: 15
 20582                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 20583  0130F6  EE20 F00A          	lfsr	2,10
 20584  0130FA  5039               	movf	CANreceiveMessage@msg,w,c
 20585  0130FC  26D9               	addwf	fsr2l,f,c
 20586  0130FE  503A               	movf	CANreceiveMessage@msg+1,w,c
 20587  013100  22DA               	addwfc	fsr2h,f,c
 20588  013102  CF6C FFDF          	movff	3948,indf2	;volatile
 20589                           
 20590                           ; BSR set to: 15
 20591                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 20592  013106  EE20 F00B          	lfsr	2,11
 20593  01310A  5039               	movf	CANreceiveMessage@msg,w,c
 20594  01310C  26D9               	addwf	fsr2l,f,c
 20595  01310E  503A               	movf	CANreceiveMessage@msg+1,w,c
 20596  013110  22DA               	addwfc	fsr2h,f,c
 20597  013112  CF6D FFDF          	movff	3949,indf2	;volatile
 20598                           
 20599                           ; BSR set to: 15
 20600                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 20601  013116  EE20 F00E          	lfsr	2,14
 20602  01311A  5039               	movf	CANreceiveMessage@msg,w,c
 20603  01311C  26D9               	addwf	fsr2l,f,c
 20604  01311E  503A               	movf	CANreceiveMessage@msg+1,w,c
 20605  013120  22DA               	addwfc	fsr2h,f,c
 20606  013122  AC65               	btfss	3941,6,c	;volatile
 20607  013124  D002               	goto	i2u865_40
 20608  013126  0E01               	movlw	1
 20609  013128  D001               	goto	i2u865_46
 20610  01312A                     i2u865_40:
 20611  01312A  0E00               	movlw	0
 20612  01312C                     i2u865_46:
 20613  01312C  6EDF               	movwf	indf2,c
 20614                           
 20615                           ; BSR set to: 15
 20616                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 20617  01312E  EE20 F00D          	lfsr	2,13
 20618  013132  5039               	movf	CANreceiveMessage@msg,w,c
 20619  013134  26D9               	addwf	fsr2l,f,c
 20620  013136  503A               	movf	CANreceiveMessage@msg+1,w,c
 20621  013138  22DA               	addwfc	fsr2h,f,c
 20622  01313A  5065               	movf	3941,w,c	;volatile
 20623  01313C  0B0F               	andlw	15
 20624  01313E  6EDF               	movwf	indf2,c
 20625                           
 20626                           ; BSR set to: 15
 20627                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 20628  013140  EE20 F00C          	lfsr	2,12
 20629  013144  5039               	movf	CANreceiveMessage@msg,w,c
 20630  013146  26D9               	addwf	fsr2l,f,c
 20631  013148  503A               	movf	CANreceiveMessage@msg+1,w,c
 20632  01314A  22DA               	addwfc	fsr2h,f,c
 20633  01314C  A662               	btfss	3938,3,c	;volatile
 20634  01314E  D002               	goto	i2u866_40
 20635  013150  0E01               	movlw	1
 20636  013152  D001               	goto	i2u866_46
 20637  013154                     i2u866_40:
 20638  013154  0E00               	movlw	0
 20639  013156                     i2u866_46:
 20640  013156  6EDF               	movwf	indf2,c
 20641                           
 20642                           ; BSR set to: 15
 20643                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 20644  013158  B662               	btfsc	3938,3,c	;volatile
 20645  01315A  D043               	goto	i2l6826
 20646                           
 20647                           ; BSR set to: 15
 20648                           ;inc\CANlib.h: 606: {
 20649                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 20650  01315C  CF61 F03B          	movff	3937,??_CANreceiveMessage	;volatile
 20651  013160  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20652  013162  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20653  013164  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20654  013166  0E03               	movlw	3
 20655  013168                     i2u868_45:
 20656  013168  90D8               	bcf	status,0,c
 20657  01316A  363B               	rlcf	??_CANreceiveMessage,f,c
 20658  01316C  363C               	rlcf	??_CANreceiveMessage+1,f,c
 20659  01316E  363D               	rlcf	??_CANreceiveMessage+2,f,c
 20660  013170  363E               	rlcf	??_CANreceiveMessage+3,f,c
 20661  013172  2EE8               	decfsz	wreg,f,c
 20662  013174  D7F9               	goto	i2u868_45
 20663  013176  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20664  01317A  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20665  01317E  C03B  FFDE         	movff	??_CANreceiveMessage,postinc2
 20666  013182  C03C  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20667  013186  C03D  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20668  01318A  C03E  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20669                           
 20670                           ; BSR set to: 15
 20671                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 20672  01318E  3862               	swapf	3938,w,c	;volatile
 20673  013190  42E8               	rrncf	wreg,f,c
 20674  013192  0B07               	andlw	7
 20675  013194  0B07               	andlw	7
 20676  013196  6E44               	movwf	CANreceiveMessage@tamp,c
 20677                           
 20678                           ; BSR set to: 15
 20679                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 20680  013198  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20681  01319C  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20682  0131A0  CFDE F03B          	movff	postinc2,??_CANreceiveMessage
 20683  0131A4  CFDE F03C          	movff	postinc2,??_CANreceiveMessage+1
 20684  0131A8  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+2
 20685  0131AC  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+3
 20686  0131B0  5044               	movf	CANreceiveMessage@tamp,w,c
 20687  0131B2  243B               	addwf	??_CANreceiveMessage,w,c
 20688  0131B4  6E3F               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 20689  0131B6  0E00               	movlw	0
 20690  0131B8  203C               	addwfc	??_CANreceiveMessage+1,w,c
 20691  0131BA  6E40               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 20692  0131BC  0E00               	movlw	0
 20693  0131BE  203D               	addwfc	??_CANreceiveMessage+2,w,c
 20694  0131C0  6E41               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 20695  0131C2  0E00               	movlw	0
 20696  0131C4  203E               	addwfc	??_CANreceiveMessage+3,w,c
 20697  0131C6  6E42               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 20698  0131C8  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20699  0131CC  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20700  0131D0  C03F  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 20701  0131D4  C040  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 20702  0131D8  C041  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 20703  0131DC  C042  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 20704                           
 20705                           ;inc\CANlib.h: 610: }
 20706  0131E0  D088               	goto	i2l6852
 20707  0131E2                     i2l6826:
 20708                           
 20709                           ; BSR set to: 15
 20710                           ;inc\CANlib.h: 611: else
 20711                           ;inc\CANlib.h: 612: {
 20712                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 20713  0131E2  CF64 F03B          	movff	3940,??_CANreceiveMessage	;volatile
 20714  0131E6  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20715  0131E8  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20716  0131EA  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20717  0131EC  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20718  0131F0  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20719  0131F4  C03B  FFDE         	movff	??_CANreceiveMessage,postinc2
 20720  0131F8  C03C  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20721  0131FC  C03D  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20722  013200  C03E  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20723                           
 20724                           ; BSR set to: 15
 20725                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 20726  013204  CF63 F03B          	movff	3939,??_CANreceiveMessage	;volatile
 20727  013208  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20728  01320A  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20729  01320C  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20730  01320E  C03D  F03E         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 20731  013212  C03C  F03D         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 20732  013216  C03B  F03C         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 20733  01321A  6A3B               	clrf	??_CANreceiveMessage,c
 20734  01321C  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20735  013220  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20736  013224  503B               	movf	??_CANreceiveMessage,w,c
 20737  013226  26DE               	addwf	postinc2,f,c
 20738  013228  503C               	movf	??_CANreceiveMessage+1,w,c
 20739  01322A  22DE               	addwfc	postinc2,f,c
 20740  01322C  503D               	movf	??_CANreceiveMessage+2,w,c
 20741  01322E  22DE               	addwfc	postinc2,f,c
 20742  013230  503E               	movf	??_CANreceiveMessage+3,w,c
 20743  013232  22DE               	addwfc	postinc2,f,c
 20744                           
 20745                           ; BSR set to: 15
 20746                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 20747  013234  A062               	btfss	3938,0,c	;volatile
 20748  013236  D00C               	goto	i2l6834
 20749                           
 20750                           ; BSR set to: 15
 20751                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 20752  013238  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20753  01323C  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20754  013240  0E00               	movlw	0
 20755  013242  12DE               	iorwf	postinc2,f,c
 20756  013244  0E00               	movlw	0
 20757  013246  12DE               	iorwf	postinc2,f,c
 20758  013248  0E01               	movlw	1
 20759  01324A  12DE               	iorwf	postinc2,f,c
 20760  01324C  0E00               	movlw	0
 20761  01324E  12DE               	iorwf	postinc2,f,c
 20762  013250                     i2l6834:
 20763                           
 20764                           ; BSR set to: 15
 20765                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 20766  013250  A262               	btfss	3938,1,c	;volatile
 20767  013252  D00C               	goto	i2l6838
 20768                           
 20769                           ; BSR set to: 15
 20770                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 20771  013254  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20772  013258  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20773  01325C  0E00               	movlw	0
 20774  01325E  12DE               	iorwf	postinc2,f,c
 20775  013260  0E00               	movlw	0
 20776  013262  12DE               	iorwf	postinc2,f,c
 20777  013264  0E02               	movlw	2
 20778  013266  12DE               	iorwf	postinc2,f,c
 20779  013268  0E00               	movlw	0
 20780  01326A  12DE               	iorwf	postinc2,f,c
 20781  01326C                     i2l6838:
 20782                           
 20783                           ; BSR set to: 15
 20784                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 20785  01326C  AA62               	btfss	3938,5,c	;volatile
 20786  01326E  D00C               	goto	i2l6842
 20787                           
 20788                           ; BSR set to: 15
 20789                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 20790  013270  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20791  013274  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20792  013278  0E00               	movlw	0
 20793  01327A  12DE               	iorwf	postinc2,f,c
 20794  01327C  0E00               	movlw	0
 20795  01327E  12DE               	iorwf	postinc2,f,c
 20796  013280  0E04               	movlw	4
 20797  013282  12DE               	iorwf	postinc2,f,c
 20798  013284  0E00               	movlw	0
 20799  013286  12DE               	iorwf	postinc2,f,c
 20800  013288                     i2l6842:
 20801                           
 20802                           ; BSR set to: 15
 20803                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 20804  013288  AC62               	btfss	3938,6,c	;volatile
 20805  01328A  D00C               	goto	i2l6846
 20806                           
 20807                           ; BSR set to: 15
 20808                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 20809  01328C  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20810  013290  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20811  013294  0E00               	movlw	0
 20812  013296  12DE               	iorwf	postinc2,f,c
 20813  013298  0E00               	movlw	0
 20814  01329A  12DE               	iorwf	postinc2,f,c
 20815  01329C  0E08               	movlw	8
 20816  01329E  12DE               	iorwf	postinc2,f,c
 20817  0132A0  0E00               	movlw	0
 20818  0132A2  12DE               	iorwf	postinc2,f,c
 20819  0132A4                     i2l6846:
 20820                           
 20821                           ; BSR set to: 15
 20822                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 20823  0132A4  AE62               	btfss	3938,7,c	;volatile
 20824  0132A6  D00C               	goto	i2l6850
 20825                           
 20826                           ; BSR set to: 15
 20827                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 20828  0132A8  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20829  0132AC  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20830  0132B0  0E00               	movlw	0
 20831  0132B2  12DE               	iorwf	postinc2,f,c
 20832  0132B4  0E00               	movlw	0
 20833  0132B6  12DE               	iorwf	postinc2,f,c
 20834  0132B8  0E10               	movlw	16
 20835  0132BA  12DE               	iorwf	postinc2,f,c
 20836  0132BC  0E00               	movlw	0
 20837  0132BE  12DE               	iorwf	postinc2,f,c
 20838  0132C0                     i2l6850:
 20839                           
 20840                           ; BSR set to: 15
 20841                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 20842  0132C0  CF61 F03B          	movff	3937,??_CANreceiveMessage	;volatile
 20843  0132C4  6A3C               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20844  0132C6  6A3D               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20845  0132C8  6A3E               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20846  0132CA  0E15               	movlw	21
 20847  0132CC                     i2u874_45:
 20848  0132CC  90D8               	bcf	status,0,c
 20849  0132CE  363B               	rlcf	??_CANreceiveMessage,f,c
 20850  0132D0  363C               	rlcf	??_CANreceiveMessage+1,f,c
 20851  0132D2  363D               	rlcf	??_CANreceiveMessage+2,f,c
 20852  0132D4  363E               	rlcf	??_CANreceiveMessage+3,f,c
 20853  0132D6  2EE8               	decfsz	wreg,f,c
 20854  0132D8  D7F9               	goto	i2u874_45
 20855  0132DA  C039  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20856  0132DE  C03A  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20857  0132E2  503B               	movf	??_CANreceiveMessage,w,c
 20858  0132E4  12DE               	iorwf	postinc2,f,c
 20859  0132E6  503C               	movf	??_CANreceiveMessage+1,w,c
 20860  0132E8  12DE               	iorwf	postinc2,f,c
 20861  0132EA  503D               	movf	??_CANreceiveMessage+2,w,c
 20862  0132EC  12DE               	iorwf	postinc2,f,c
 20863  0132EE  503E               	movf	??_CANreceiveMessage+3,w,c
 20864  0132F0  12DE               	iorwf	postinc2,f,c
 20865  0132F2                     i2l6852:
 20866                           
 20867                           ; BSR set to: 15
 20868                           ;inc\CANlib.h: 629: }
 20869                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 20870  0132F2  9E60               	bcf	3936,7,c	;volatile
 20871                           
 20872                           ; BSR set to: 15
 20873                           ;inc\CANlib.h: 632: return (error);
 20874                           ;	Return value of _CANreceiveMessage is never used
 20875  0132F4  0012               	return	
 20876  0132F6                     __end_of_CANreceiveMessage:
 20877                           	opt stack 0
 20878                           pclatu	equ	0xFFB
 20879                           pclath	equ	0xFFA
 20880                           tblptru	equ	0xFF8
 20881                           tblptrh	equ	0xFF7
 20882                           tblptrl	equ	0xFF6
 20883                           tablat	equ	0xFF5
 20884                           prodh	equ	0xFF4
 20885                           prodl	equ	0xFF3
 20886                           intcon	equ	0xFF2
 20887                           postinc0	equ	0xFEE
 20888                           fsr0h	equ	0xFEA
 20889                           fsr0l	equ	0xFE9
 20890                           wreg	equ	0xFE8
 20891                           indf1	equ	0xFE7
 20892                           plusw1	equ	0xFE3
 20893                           fsr1h	equ	0xFE2
 20894                           fsr1l	equ	0xFE1
 20895                           bsr	equ	0xFE0
 20896                           indf2	equ	0xFDF
 20897                           postinc2	equ	0xFDE
 20898                           postdec2	equ	0xFDD
 20899                           plusw2	equ	0xFDB
 20900                           fsr2h	equ	0xFDA
 20901                           fsr2l	equ	0xFD9
 20902                           status	equ	0xFD8
 20903                           
 20904 ;; *************** function _CANisRxReady *****************
 20905 ;; Defined at:
 20906 ;;		line 1163 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 20907 ;; Parameters:    Size  Location     Type
 20908 ;;		None
 20909 ;; Auto vars:     Size  Location     Type
 20910 ;;		None
 20911 ;; Return value:  Size  Location     Type
 20912 ;;                  1    wreg      unsigned char 
 20913 ;; Registers used:
 20914 ;;		wreg, status,2
 20915 ;; Tracked objects:
 20916 ;;		On entry : 0/0
 20917 ;;		On exit  : 0/0
 20918 ;;		Unchanged: 0/0
 20919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20921 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20923 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20924 ;;Total ram usage:        1 bytes
 20925 ;; Hardware stack levels used:    1
 20926 ;; This function calls:
 20927 ;;		Nothing
 20928 ;; This function is called by:
 20929 ;;		_ISR_alta
 20930 ;; This function uses a non-reentrant model
 20931 ;;
 20932                           
 20933                           	psect	text57
 20934  016268                     __ptext57:
 20935                           	opt stack 0
 20936  016268                     _CANisRxReady:
 20937                           	opt stack 20
 20938                           
 20939                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 20940                           
 20941                           ; BSR set to: 15
 20942                           ;incstack = 0
 20943  016268  0E01               	movlw	1
 20944  01626A  6E39               	movwf	_CANisRxReady$3237,c
 20945  01626C  BE60               	btfsc	3936,7,c	;volatile
 20946  01626E  D005               	goto	i2l573
 20947  016270  010F               	movlb	15	; () banked
 20948  016272  BF50               	btfsc	80,7,b	;volatile
 20949  016274  D002               	goto	i2l573
 20950                           
 20951                           ; BSR set to: 15
 20952  016276  0E00               	movlw	0
 20953  016278  6E39               	movwf	_CANisRxReady$3237,c
 20954  01627A                     i2l573:
 20955  01627A  5039               	movf	_CANisRxReady$3237,w,c
 20956  01627C  0012               	return	
 20957  01627E                     __end_of_CANisRxReady:
 20958                           	opt stack 0
 20959                           pclatu	equ	0xFFB
 20960                           pclath	equ	0xFFA
 20961                           tblptru	equ	0xFF8
 20962                           tblptrh	equ	0xFF7
 20963                           tblptrl	equ	0xFF6
 20964                           tablat	equ	0xFF5
 20965                           prodh	equ	0xFF4
 20966                           prodl	equ	0xFF3
 20967                           intcon	equ	0xFF2
 20968                           postinc0	equ	0xFEE
 20969                           fsr0h	equ	0xFEA
 20970                           fsr0l	equ	0xFE9
 20971                           wreg	equ	0xFE8
 20972                           indf1	equ	0xFE7
 20973                           plusw1	equ	0xFE3
 20974                           fsr1h	equ	0xFE2
 20975                           fsr1l	equ	0xFE1
 20976                           bsr	equ	0xFE0
 20977                           indf2	equ	0xFDF
 20978                           postinc2	equ	0xFDE
 20979                           postdec2	equ	0xFDD
 20980                           plusw2	equ	0xFDB
 20981                           fsr2h	equ	0xFDA
 20982                           fsr2l	equ	0xFD9
 20983                           status	equ	0xFD8
 20984                           pclatu	equ	0xFFB
 20985                           pclath	equ	0xFFA
 20986                           tblptru	equ	0xFF8
 20987                           tblptrh	equ	0xFF7
 20988                           tblptrl	equ	0xFF6
 20989                           tablat	equ	0xFF5
 20990                           prodh	equ	0xFF4
 20991                           prodl	equ	0xFF3
 20992                           intcon	equ	0xFF2
 20993                           postinc0	equ	0xFEE
 20994                           fsr0h	equ	0xFEA
 20995                           fsr0l	equ	0xFE9
 20996                           wreg	equ	0xFE8
 20997                           indf1	equ	0xFE7
 20998                           plusw1	equ	0xFE3
 20999                           fsr1h	equ	0xFE2
 21000                           fsr1l	equ	0xFE1
 21001                           bsr	equ	0xFE0
 21002                           indf2	equ	0xFDF
 21003                           postinc2	equ	0xFDE
 21004                           postdec2	equ	0xFDD
 21005                           plusw2	equ	0xFDB
 21006                           fsr2h	equ	0xFDA
 21007                           fsr2l	equ	0xFD9
 21008                           status	equ	0xFD8
 21009                           
 21010                           	psect	rparam
 21011  0000                     pclatu	equ	0xFFB
 21012                           pclath	equ	0xFFA
 21013                           tblptru	equ	0xFF8
 21014                           tblptrh	equ	0xFF7
 21015                           tblptrl	equ	0xFF6
 21016                           tablat	equ	0xFF5
 21017                           prodh	equ	0xFF4
 21018                           prodl	equ	0xFF3
 21019                           intcon	equ	0xFF2
 21020                           postinc0	equ	0xFEE
 21021                           fsr0h	equ	0xFEA
 21022                           fsr0l	equ	0xFE9
 21023                           wreg	equ	0xFE8
 21024                           indf1	equ	0xFE7
 21025                           plusw1	equ	0xFE3
 21026                           fsr1h	equ	0xFE2
 21027                           fsr1l	equ	0xFE1
 21028                           bsr	equ	0xFE0
 21029                           indf2	equ	0xFDF
 21030                           postinc2	equ	0xFDE
 21031                           postdec2	equ	0xFDD
 21032                           plusw2	equ	0xFDB
 21033                           fsr2h	equ	0xFDA
 21034                           fsr2l	equ	0xFD9
 21035                           status	equ	0xFD8
 21036                           
 21037                           	psect	temp
 21038  00004C                     btemp:
 21039                           	opt stack 0
 21040  00004C                     	ds	1
 21041  0000                     int$flags	set	btemp
 21042                           pclatu	equ	0xFFB
 21043                           pclath	equ	0xFFA
 21044                           tblptru	equ	0xFF8
 21045                           tblptrh	equ	0xFF7
 21046                           tblptrl	equ	0xFF6
 21047                           tablat	equ	0xFF5
 21048                           prodh	equ	0xFF4
 21049                           prodl	equ	0xFF3
 21050                           intcon	equ	0xFF2
 21051                           postinc0	equ	0xFEE
 21052                           fsr0h	equ	0xFEA
 21053                           fsr0l	equ	0xFE9
 21054                           wreg	equ	0xFE8
 21055                           indf1	equ	0xFE7
 21056                           plusw1	equ	0xFE3
 21057                           fsr1h	equ	0xFE2
 21058                           fsr1l	equ	0xFE1
 21059                           bsr	equ	0xFE0
 21060                           indf2	equ	0xFDF
 21061                           postinc2	equ	0xFDE
 21062                           postdec2	equ	0xFDD
 21063                           plusw2	equ	0xFDB
 21064                           fsr2h	equ	0xFDA
 21065                           fsr2l	equ	0xFD9
 21066                           status	equ	0xFD8


Data Sizes:
    Strings     186
    Constant    144
    Data        1
    BSS         118
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      75
    BANK0           160    114     146
    BANK1           256     25      73
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_17(CODE[8]), STR_16(CODE[8]), STR_15(CODE[8]), STR_14(CODE[8]), 
		 -> STR_13(CODE[5]), STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[7]), 
		 -> STR_9(CODE[14]), STR_8(CODE[17]), STR_7(CODE[12]), STR_6(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK0[1]), park_assist_state(BANK1[8]), data_brake(BANK0[1]), data_steering(BANK0[1]), 
		 -> data(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___fldiv->___xxtofl
    _LCD_write_message->_LCD_write_char
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Send->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  261982
                                            106 BANK0      8     8      0
                           _CAN_Send
                    _CAN_interpreter
                       _CANisTxReady
                     _CANsendMessage
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                        _LCD_Handler
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   51321
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             28 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             14 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             14 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  143589
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41624
                                             96 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9426
                                             53 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             14 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9147
                                             53 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4925
                                             28 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             20 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             14 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             14 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     861
                                             14 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             14 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             14 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     799
                                             86 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             86 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    3518
                                             66 BANK0     20    12      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             53 BANK0      4     0      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             14 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             28 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2   10597
                                             31 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   12052
                                             38 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             30 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             21 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             14 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             14 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9519
                                             31 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    9300
                                             26 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   27796
                                             28 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8919
                                             26 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8780
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18137
                                             29 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    8956
                                             26 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8811
                                             26 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8780
                                             22 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0    1264
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1264
                                             20 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      68
                                             14 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_interpreter                                      4     4      0       0
                                             14 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Send                                             0     0      0    4107
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4083
                                             14 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_alta                                           15    15      0    3558
                                             33 COMRAM     1     1      0
                                              0 BANK0     14    14      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (11) i2_CANsendMessage                                   16     8      8    2243
                                             17 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (11) i2_CANisTxReady                                      1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CANreceiveMessage                                  12    10      2    1137
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (11) _CANisRxReady                                        1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Send
     _CANisTxReady
     _CANsendMessage
   _CAN_interpreter
   _CANisTxReady
   _CANsendMessage
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     19      49       7       28.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     72      92       5       91.3%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     22      4B       1       79.8%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     126      20        0.0%
DATA                 0      0     126       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Apr 24 17:36:04 2016

                     ___fldiv@aexp 0094                       ___fldiv@bexp 0093  
                                _x 00EC                                  _y 025E  
                                _z 00ED          __size_of_delay_set_quartz 000A  
             __end_of_CANSetFilter 0B06                       ?_LCD_Handler 0028  
                     ___fldiv@sign 0088                       ___awdiv@sign 0079  
                               _id 0005                                 bsr 000FE0  
              ___wmul@multiplicand 0070                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                      __CFG_OSC$HS 000000                       __CFG_CP4$OFF 000000  
                     __CFG_CP5$OFF 000000                                l400 17EE  
                              l401 17F2                                l410 1958  
                              l402 17FE                                l411 1962  
                              l500 073A                                l405 18B8  
                              l501 0746                                l414 1A72  
                              l406 18BC                                l510 0852  
                              l502 074A                                l415 1A76  
                              l407 19B4                                l511 0856  
                              l503 0756                                l416 1A82  
                              l408 1944                                l520 0962  
                              l512 0862                                l504 075A  
                              l409 194E                                l521 096E  
                              l513 0866                                l505 0766  
                              l530 0A7A                                l522 0972  
                              l514 0872                                l450 422E  
                              l370 4922                                l531 0A7E  
                              l523 097E                                l515 0876  
                              l451 4232                                l371 492C  
                              l380 1446                                l532 0A8A  
                              l524 0982                                l516 0882  
                              l508 0842                                l460 433A  
                              l452 423E                                l444 41FE  
                              l381 1450                                l533 0A8E  
                              l525 098E                                l509 0846  
                              l461 4346                                l445 4202  
                              l390 18A2                                l382 145A  
                              l534 0A9A                                l526 0992  
                              l462 434A                                l446 420E  
                              l391 1634                                l375 161E  
                              l535 0A9E                                l527 099E  
                              l519 095E                                l463 4356  
                              l455 4316                                l447 4212  
                              l392 1638                                l376 13B0  
                              l536 0AAA                                l480 0514  
                              l456 431A                                l448 421E  
                              l393 1730                                l385 156A  
                              l377 13B4                                l537 0AAE  
                              l481 0520                                l457 4326  
                              l449 4222                                l394 16C0  
                              l386 156E                                l378 14AC  
                              l538 0ABA                                l490 062A  
                              l482 0524                                l458 432A  
                              l395 16CA                                l387 157A  
                              l379 143C                                l491 062E  
                              l483 0530                                l475 04F0  
                              l459 4336                                l396 16D4  
                              l492 063A                                l476 04F4  
                              l397 16DE                                l581 601A  
                              l493 063E                                l477 0500  
                              l821 2022                                l805 1E2C  
                              l494 064A                                l486 060A  
                              l478 0504                                l814 201A  
                              l487 060E                                l479 0510  
                              l807 1E56                                l568 619C  
                              l488 061A                                l497 0726  
                              l489 061E                                l498 072A  
                              l499 0736                                l870 6222  
                              l863 623E                                l856 61EA  
                              l875 5E50                                l877 5E52  
                              l789 1CAA                                l984 10FA  
             ??_PWR_Button_Polling 006E                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                        ?_LCD_cursor 007A  
                              _dir 00E8                                _msg 010D  
                              _str 011C                       ___awmod@sign 0073  
                              prod 000FF3                                wreg 000FE8  
                     ___flmul@aexp 0089                       ___flmul@bexp 008E  
                     ___flmul@sign 0088                       ___flmul@temp 0093  
                     ___flmul@prod 008F                       __CFG_LVP$OFF 000000  
           __size_of_LCD_goto_line 00EC                       ___fltol@exp1 00BF  
                     __CFG_WDT$OFF 000000                               l1209 53D8  
                             l1313 4F26                               l1402 5976  
                             l1306 4E62                               l1219 5212  
                             l1307 4EA6                               l1412 5CBE  
                             l1513 364A                               l1522 36DE  
                             l1611 478E                               l1604 46E2  
                             l1455 5DD4                               l1376 589E  
                             l1552 3E72                               l1465 5E36  
                             l1561 3EAA                               l1618 47EA  
                             l1563 3F18                               l1555 3E1A  
                             l1619 4802                               l1582 3852  
                             l1591 3B5C                               l1496 34D6  
                             l1497 34CA                               l1498 3496  
                             l1589 3AEE                               l6110 157E  
                             l5230 4172                               l5214 40BC  
                             l1599 3C00                               l6104 155E  
                             l5312 00BE                               l6040 4930  
                             l5402 045E                               l5330 0176  
                             l7004 5A7A                               l6044 4938  
                             l4702 5D84                               l5166 5816  
                             l5430 0534                               l5262 4288  
                             l6046 497C                               l6038 491A  
                             l6160 16E8                               l7016 5ADC  
                             l4704 5D90                               l5176 5858  
                             l5600 0ABE                               l5504 07B0  
                             l5256 4242                               l4714 5DC6  
                             l4706 5D96                               l4730 5E28  
                             l4722 5DF2                               l8010 5782  
                             l6236 196C                               l6180 17E2  
                             l6084 1464                               l4724 5DFE  
                             l8020 57B2                               l8004 576C  
                             l5196 625A                               l5532 0886  
                             l5436 057A                               l5348 0230  
                             l6262 1A86                               l8102 616E  
                             l4726 5E04                               l5470 0694  
                             l5366 02EA                               l6256 1A66  
                             l6600 3C90                               l8016 57A0  
                             l8032 57F0                               l5464 064E  
                             l5384 03A4                               l5288 435A  
                             l6186 1802                               l6610 3CC0  
                             l8018 57AC                               l5538 08CC  
                             l5644 5F52                               l6700 3F96  
                             l6620 3CEE                               l8036 5804  
                             l8028 57E2                               l8060 5BE6  
                             l8052 5BC0                               l8140 2A60  
                             l5572 09E8                               l9100 1ECC  
                             l9012 1C80                               l6710 3FDC  
                             l6702 3FAA                               l8310 516E  
                             l8222 4EDC                               l8126 4640  
                             l8118 4548                               l8150 2B64  
                             l5566 09A2                               l9006 1BEA  
                             l6712 3FE0                               l6704 3FCC  
                             l6640 3D70                               l6632 3D42  
                             l6616 3CE4                               l8320 525E  
                             l8232 4F0C                               l8072 5C2C  
                             l8064 5C0A                               l8056 5BD4  
                             l8048 5BB0                               l9112 1FEA  
                             l9040 1CEE                               l9016 1C92  
                             l8090 56CE                               l8082 5ED2  
                             l6650 3DEE                               l8314 51C0  
                             l8306 5120                               l8410 5CAC  
                             l8402 5C52                               l8242 5288  
                             l8234 4F1C                               l8226 4EF0  
                             l8058 5BE0                               l8146 2B32  
                             l5498 076A                               l9114 1FF0  
                             l9026 1CB8                               l9018 1C9A  
                             l8092 5700                               l7700 33A6  
                             l8404 5C62                               l8420 46F2  
                             l8068 5C18                               l8164 2DB8  
                             l9132 213A                               l9108 1F84  
                             l9028 1CC4                               l7630 600C  
                             l8086 566A                               l8094 5732  
                             l8078 5EA0                               l6670 3E94  
                             l6590 3C62                               l8406 5C68  
                             l8430 4732                               l8270 5356  
                             l8262 5302                               l8158 2CE6  
                             l9118 2012                               l8088 569C  
                             l6664 3E6E                               l8328 604E  
                             l7712 33DA                               l7704 33B0  
                             l8440 47DC                               l8432 4770  
                             l8248 52AE                               l8192 4E0E  
                             l8176 614E                               l9128 20B6  
                             l9056 1D44                               l9064 1D88  
                             l9048 1D30                               l8098 615A  
                             l6658 3E26                               l8354 55EC  
                             l8338 557E                               l8426 471A  
                             l8282 538E                               l8186 4DD4  
                             l9146 21C6                               l9138 2144  
                             l9066 1D8E                               l8460 6098  
                             l6676 3EBE                               l6596 3C86  
                             l7812 3692                               l8372 5652  
                             l8364 561C                               l8452 4854  
                             l8428 4722                               l8292 53BE  
                             l8700 1190                               l8620 0E02  
                             l8612 0D7E                               l8604 0CFA  
                             l9076 1E5A                               l6686 3F12  
                             l7806 367C                               l7822 36B2  
                             l7742 3416                               l7670 3314  
                             l8366 562C                               l8358 5600  
                             l8382 58FA                               l8438 47CC  
                             l8294 53CE                               l8286 53A2  
                             l7902 3866                               l8710 1284  
                             l8622 0E18                               l8542 0B16  
                             l8464 60B2                               l6696 3F68  
                             l7832 36D8                               l7816 369E  
                             l7824 36B8                               l7760 34BA  
                             l7680 3342                               l8368 5636  
                             l8384 590A                               l8712 1292  
                             l8632 0E9C                               l8616 0DB0  
                             l8720 12BA                               l8560 0BB0  
                             l9088 1E88                               l9096 1EC8  
                             l6970 5A08                               l8474 4A82  
                             l7850 3768                               l7842 3734  
                             l7770 34FA                               l7754 34AA  
                             l8394 5964                               l8386 5910  
                             l7906 387A                               l8730 1308  
                             l8642 0F06                               l8618 0DC6  
                             l8570 0BE0                               l8562 0BCA  
                             l9098 1ECA                               l6956 5988  
                             l8476 4A8A                               l8492 4B62  
                             l7780 353E                               l7756 34B0  
                             l7676 3338                               l8660 0FD0  
                             l8628 0E6A                               l8572 0C0A  
                             l8556 0B66                               l8548 0B30  
                             l8740 136A                               l6966 59D0  
                             l8486 4B22                               l7862 378C  
                             l7854 3774                               l7846 3746  
                             l7694 3382                               l8734 1338  
                             l8726 12E0                               l8718 12AC  
                             l8646 0F7E                               l8566 0BDA  
                             l8742 138C                               l6976 5E46  
                             l8496 4BDA                               l7856 3778  
                             l7784 3548                               l7688 336E  
                             l7880 37E6                               l7872 37BC  
                             l8664 0FFC                               l8648 0F84  
                             l6994 5A6C                               l7778 3538  
                             l7954 3B02                               l7890 3816  
                             l7882 37F8                               l8738 1364  
                             l8682 10C8                               l8666 1004  
                             l8674 10A0                               l8578 0C24  
                             l8818 4BEC                               l7788 355A  
                             l7980 3BE6                               l7964 3B56  
                             l7948 3AD8                               l8684 10DC  
                             l8676 10AE                               l8588 0C76  
                             l7798 362A                               l7990 3C2A  
                             l7974 3BAC                               l7878 37E0  
                             l8854 4D36                               l8846 4D08  
                             l7896 383A                               l8696 112E  
                             l8688 10FE                               l8856 4D48  
                             l7978 3BD2                               l7898 3840  
                             l8858 4D58                               l7988 3C20  
                             l8972 1B50                               STR_1 FF84  
                             STR_2 FF5A                               STR_3 FF45  
                             STR_4 FF84                               STR_5 FFFA  
                             STR_6 FF6F                               STR_7 FFB8  
                             STR_8 FF99                               STR_9 FFAA  
                             _LATA 000F89                               _LATB 000F8A  
                             _LATC 000F8B                               _LATD 000F8C  
                             _LATE 000F8D                               u6120 437A  
                             u6040 4262                               u6205 0152  
                             u6125 436E                               u6045 4256  
                             u6310 0320                               u6230 01AC  
                             u6150 003A                               u6315 0314  
                             u6235 01A0                               u6155 002E  
                             u6325 0380                               u6245 020C  
                             u6165 009A                               u6350 03DA  
                             u6270 0266                               u6190 00F2  
                             u6600 078A                               u6520 066E  
                             u6440 0554                               u6355 03CE  
                             u6275 025A                               u6195 00E6  
                _F2_Button_Polling 621A                               u6605 077E  
                             u6525 0662                               u6445 0548  
                             u6365 043A                               u6285 02C6  
                             u5910 4038                               u5915 402C  
                             u7540 1484                               u5925 4098  
                             u7550 14D0                               u5950 40EE  
                             u7800 198C                               u6840 0ADE  
                             u6760 09C2                               u6680 08A6  
                             u7545 1478                               u7810 19D8  
                             u7555 14C4                               u5955 40E2  
                             u7805 1980                               u7565 1530  
                             u6845 0AD2                               u6765 09B6  
                             u6685 089A                               u5965 414E  
                             u7670 1708                               u7815 19CC  
                             u7680 1754                               u8480 3F7C  
                             u8800 61F8                               u7825 1A38  
                             u7675 16FC                               u8900 6230  
                             u7685 1748                               u7695 17B4  
                             u8815 61FA                               u8850 624C  
                             u8915 6232                               u8865 624E  
                             u8970 5E74                               u8976 5E76  
              __size_of_CANSetMask 039E                       ?_LCD_goto_xy 007D  
                             _data 0027                               _main 1B26  
                             _itoa 5F28                 ?_F2_Button_Polling 0028  
        __size_of_LCD_send_command 003A                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               indf1 000FE7  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               btemp 004C  
                             _utoa 580E                               pclat 000FFA  
                             prodh 000FF4                               prodl 000FF3  
                             start 00C0                      __CFG_IESO$OFF 000000  
                  ___fldiv@new_exp 008D                 __size_of_LCD_clear 0032  
                 __end_of_CAN_Send 5A42                       _sprintf$4218 0130  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000010  
              ??_F2_Button_Polling 006E           __end_of_LCD_enable_pulse 61C4  
                 _CANOperationMode 6252                    _space_available 0259  
          __size_of_LCD_initialize 016E         __size_of_CANreceiveMessage 050C  
                    ___fltol@sign1 00BE                    __end_of___fladd 379E  
                            ?_main 0028                    __end_of___fldiv 4004  
                            ?_itoa 007E                    __end_of___awdiv 580E  
                  __end_of___flneg 6060                              STR_10 FFE4  
                            STR_11 FFF0                              STR_12 FFF5  
                            STR_13 FFEB                              STR_14 FFC4  
                            STR_15 FFD4                              STR_16 FFCC  
                            STR_17 FFDC                    __end_of___awmod 5C36  
                  __end_of___flmul 3C44                    __end_of___flsub 5F28  
                  __end_of___fltol 5664                    __end_of___lldiv 5988  
                            ?_utoa 0075                              u10200 3460  
                            u10105 5FE6                              u10106 5FE8  
                            u10210 3478                              u10220 347A  
                            u10075 5FC2                              u10076 5FC4  
                            u10085 5FCE                              u10086 5FD0  
                            u11150 559E                              u10095 5FDA  
                            u10096 5FDC                              u12040 1C4E  
                            u12210 1E3A                              u12050 1C66  
                            u11155 5592                    ___awdiv@divisor 0076  
                            u12320 21A8                              u12216 1E3C  
                            u12056 1C68                    __end_of___llmod 5CD0  
                            u12170 1DF2                              u10660 3BC0  
                            u10580 3A7A                              u12340 222A  
                            u11381 4A36                              u12190 1E0E  
                            u12280 200E                              u10921 4DB0  
                            u10585 3A6E                              u12196 1E10  
                            u12357 600E                              u10941 4DEA  
                            u11670 10F2                              _T3CON 000FB1  
                  __end_of___lwdiv 5DDE                    __end_of___lwmod 5E40  
                            i2l400 25FC                              i2l401 2600  
                            i2l410 2736                              i2l402 260A  
                            i2l411 273E                              i2l405 26B4  
                            i2l422 3082                              i2l414 282C  
                            i2l406 26B8                              i2l415 2830  
                            i2l407 2788                              i2l416 283A  
                            i2l408 2726                              i2l409 272E  
                            i2l380 22CE                              i1l780 0078  
                            i2l381 22D6                              i2l390 26A0  
                            i2l382 22DE                              i2l391 2484  
                            i2l375 2470                              i2l392 2488  
                            i2l376 2254                              i2l393 2558  
                            i2l385 23CC                              i2l377 2258  
                            i2l394 24F6                              i2l386 23D0  
                            i2l378 2328                              i2l395 24FE  
                            i2l387 23DA                              i2l379 22C6  
                            i2l396 2506                              i2l573 627A  
                            i2l397 250E                              i2l568 61DE  
                            i2l776 5096                    ___awdiv@counter 0078  
                            _TMR3H 000FB3                              _TMR3L 000FB2  
                _CANisRxReady$3237 0039                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
                    __CFG_PWRT$OFF 000000                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                      __CFG_WRT4$OFF 000000  
               __size_of_ISR_bassa 00A8                      __CFG_WRT5$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                 CANInitialize@flags 0080  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                   __CFG_EBTR4$OFF 000000                   __end_of_ISR_alta 50D2  
                   __CFG_EBTR5$OFF 000000                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                            _check 00DA                     __CFG_EBTRB$OFF 000000  
        __end_of_F2_Button_Polling 6236                    __end_of_dpowers FF45  
                            _scale 28D0                    __end_of_isdigit 6158  
        __size_of_LCD_shift_cursor 004C                     __pbitbssCOMRAM 0250  
             __end_of_CANisRxReady 627E                              tablat 000FF5  
             __end_of_CANisTxReady 61A2                              plusw1 000FE3  
                            plusw2 000FDB                              utoa@c 007D  
                            utoa@v 007B                              status 000FD8  
                  __end_of_sprintf 139A                __size_of_LCD_cursor 0032  
                  __initialization 5F70                       __end_of_main 2240  
                     __end_of_itoa 5F70      __size_of_board_initialization 00A4  
                    _LCD_goto_line 5664                       __end_of_utoa 58CC  
                ?_Joystick_Polling 0028                 ??_Joystick_Polling 006E  
                ?_LCD_write_string 007F                             ??_main 00CA  
                           ??_itoa 0084                             ??_utoa 007B  
        __size_ofi2_CANsendMessage 0690                      __activetblptr 000003  
                   _JoystickValues 00DE                 ??_LCD_write_string 0081  
             __size_of__tdiv_to_l_ 019E                  _CANisTxReady$3235 006E  
         __size_of_CAN_interpreter 00AE                  __end_of_LCD_clear 612E  
            i2CANsendMessage@flags 0040             LCD_write_string@buffer 007F  
                           _ADCON1 000FC1                             _CANCON 000F6F  
                 ___llmod@dividend 006E                             ?_scale 0095  
                           _ADRESH 000FC4                   ___awdiv@dividend 0074  
                  __CFG_BBSIZ$1024 000000                             i2l7220 260E  
                           i2l7214 25F2                             i2l7118 22E6  
                           i2l7144 23DE                             i2l7138 23C2  
                           i2l7270 2746                             i2l7290 2822  
                           i2l7194 2516                             i2l7296 283E  
                           i2l6850 32C0                             i2l6842 3288  
                           i2l6834 3250                             i2l6826 31E2  
                           i2l6852 32F2                             i2l6780 300E  
                           i2l6772 2FD2                             i2l6764 2F62  
                           i2l6846 32A4                             i2l6838 326C  
                           i2l6790 307C                             i2l6784 302C  
                           i2l6776 2FF0                             i2l6788 304A  
                           i2l8910 4F92                             i2l8904 4F70  
                           i2l8922 4FBE                             i2l8942 5034  
                           i2l8934 5000                             i2l8918 4FB6  
                           i2l8952 5060                             i2l8928 4FE6  
                           i2l8938 501E                             i2l8956 508E  
                           _RXB0D0 000F66                             _RXB0D1 000F67  
                           _RXB0D2 000F68                             _RXB0D3 000F69  
                           _RXB0D4 000F6A                             _RXB1D0 000F56  
                           _RXB0D5 000F6B                             _RXB1D1 000F57  
                           _RXB0D6 000F6C                             _RXB1D2 000F58  
                           _RXB0D7 000F6D                             _RXB1D3 000F59  
                           _RXB1D4 000F5A                             _RXB1D5 000F5B  
                           _RXB1D6 000F5C                             _RXB1D7 000F5D  
                           _TXB0D0 000F46                             _TXB0D1 000F47  
                           _TXB0D2 000F48                             _TXB0D3 000F49  
                           _TXB1D0 000F36                             _TXB0D4 000F4A  
                           _TXB1D1 000F37                             _TXB0D5 000F4B  
                           _TXB1D2 000F38                             _TXB0D6 000F4C  
                           _TXB1D3 000F39                             _TXB0D7 000F4D  
                           _TXB2D0 000F26                             _TXB1D4 000F3A  
                           _TXB2D1 000F27                             _TXB1D5 000F3B  
                           _TXB2D2 000F28                             _TXB1D6 000F3C  
                           _TXB2D3 000F29                             _TXB1D7 000F3D  
                           _TXB2D4 000F2A                             _TXB2D5 000F2B  
                           _TXB2D6 000F2C                             _TXB2D7 000F2D  
               CANsendMessage@data 0072                 CANsendMessage@tamp 007A  
                 __end_of___xxtofl 4866                    _switch_position 00EB  
                 __end_of_delay_ms 6028              __size_of_CANSetFilter 0B06  
                   __CFG_XINST$OFF 000000                  __end_of_ISR_bassa 00C0  
                 __end_of__powers_ FF1D                         _MotoreFlag 0253  
                   ?_LCD_goto_line 0028                             ___flge 50D2  
                        ??___fladd 00AA                   _delay_set_quartz 627E  
                           ___wmul 6060                          ??___fldiv 0084  
                        ??___awdiv 0078                          ??___flneg 0099  
                   __CFG_STVREN$ON 000000                          ??___awmod 0072  
                        ??___flmul 0084                          ??___flsub 00BE  
                        ??___fltol 00BA                          ??___lldiv 0076  
                        ??___llmod 0076                          ??___lwdiv 0072  
                     ??_CANSetMask 0073                          ??___lwmod 0072  
          __size_of_LCD_write_char 0096                             _fround 43A2  
   LCD_initialize@quartz_frequency 007C                             clear_0 5F76  
                           clear_1 5F82                             clear_2 5F92  
                 ___awdiv@quotient 007A                    ___awmod@divisor 0070  
             __size_of_LCD_Handler 01AE                    ___awmod@counter 0072  
                  __CFG_BOREN$BOHW 000000                  _JoystickConstants 00D2  
                           itoa@cp 0084                          ??_isdigit 006E  
                     __mediumconst FEB4                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                        ?_CAN_Send 0028         __size_of_F2_Button_Polling 001C  
                        ??_sprintf 00C8                       _CANSetFilter 0000  
                       ___flge@ff1 006E                         ___flge@ff2 0072  
                     ___xxtofl@arg 0078                       ___xxtofl@exp 0077  
                     ___xxtofl@val 006E                         __accesstop 0060  
          __end_of__initialization 5FAA                 __end_of_CANSetMask 43A2  
                  __CFG_PBADEN$OFF 000000                         _SterzoFlag 0255  
                       ___flneg@f1 0095                   _LCD_send_command 5FB4  
                    ___rparam_used 000001  LCD_write_integer@number_of_digits 0088  
                       ___fltol@f1 00B6               __size_of_LCD_goto_xy 001C  
                   __pcstackCOMRAM 0028                       __pidataBANK0 6288  
                        ?_ISR_alta 0028                       LCD_goto_xy@x 007E  
                     LCD_goto_xy@y 007D                      __end_of_scale 2DEA  
                   _LCD_initialize 53EA                  _LCD_write_integer 4A2C  
                _LCD_write_message 6096              CANSetFilter@numBuffer 0077  
               ?_LCD_write_integer 0086             LCD_write_integer@index 0095  
               ?_LCD_write_message 007F                         __div_to_l_ 5262  
                     ??_LCD_cursor 007B             LCD_write_integer@value 0086  
    LCD_write_integer@convertedInt 008F                      _newMessageCan 0257  
                     _actual_speed 00E0              __size_of_CANisRxReady 0016  
            __size_of_CANisTxReady 0024                         ??_CAN_Send 007E  
              ??_LCD_write_integer 008A                    __div_to_l_@exp1 007B  
              ??_LCD_write_message 0081                    __div_to_l_@cntr 007A  
                          ??_scale 0099                   _LCD_shift_cursor 5E94  
                  __div_to_l_@quot 0076           __end_of_CANOperationMode 6268  
                       __pbssBANK0 00D2                         __pbssBANK1 0100  
                ??_CAN_interpreter 006E                         _data_brake 00EE  
          __size_of_CANsendMessage 078C                         _data_speed 00EF  
                    __div_to_l_@f1 006E                      __div_to_l_@f2 0072  
                  ??_LCD_goto_line 007A                 __end_of_LCD_cursor 60FC  
           __end_of_LCD_initialize 5558                            ?___flge 006E  
                          ?___wmul 006E                         ??_ISR_alta 0060  
        __end_of_LCD_write_integer 4BEC          __end_of_LCD_write_message 60CA  
                ?_LCD_enable_pulse 0028                            ?_fround 0095  
                     _CANisRxReady 6268                            _CANSTAT 000F6E  
               ??_LCD_enable_pulse 0076                       _CANisTxReady 617E  
                        ISR_alta@i 0049                            _BRGCON1 000F70  
                          _BRGCON2 000F71                            _BRGCON3 000F72  
                 i2_CANsendMessage 2240        __size_of_PWR_Button_Polling 001C  
                        ?___xxtofl 006E            __size_ofi2_CANisTxReady 001E  
           __size_of_CANInitialize 01C6                   LCD_cursor@active 007B  
                        ?_delay_ms 0074                            _RXB0DLC 000F65  
                          _RXB1DLC 000F55                            _RXB0CON 000F60  
                          _RXB1CON 000F50                            _TXB0DLC 000F45  
                          _TXB1DLC 000F35                            _TXB2DLC 000F25  
              CANsendMessage@flags 0075                            _AbsFlag 0250  
                __end_of__npowers_ FEE9                            __Hparam 0000  
                       _left_speed 0021                         _scale$4217 0099  
                          __Lparam 0000                   delay_ms@value_ms 0074  
                  ?_LCD_initialize 0028                    __size_of___flge 0190  
                          ___fladd 32F6                            ___fldiv 3C44  
                          ___awdiv 5750                            ___flneg 6028  
                          ___awmod 5B94                            ___flmul 379E  
                          ___flsub 5EE0                            ___fltol 5558  
                          ___lldiv 58CC                    __size_of___wmul 0036  
                   _LCD_write_char 5CD0                            ___llmod 5C36  
                          ___lwdiv 5D66                            ___lwmod 5DDE  
             CANInitialize@propSeg 0085                            __pcinit 5F70  
                          _battery 0025                    __size_of_fround 02F6  
                          __ramtop 0D00                LCD_write_char@value 007E  
                          __ptext0 1B26                            __ptext1 5AF0  
                          __ptext2 4866                            __ptext3 4004  
                          __ptext4 0000                            __ptext5 6252  
                          __ptext6 61E2                            __ptext7 4BEC  
                          __ptext8 0B06                            __ptext9 28D0  
                      ?__div_to_l_ 006E                   LCD_write_char@D0 007D  
                 LCD_write_char@D1 007C                   LCD_write_char@D2 007B  
                 LCD_write_char@D3 007A                          _F1_switch 0251  
                          _dpowers FF1D                          _F2_switch 0252  
                          _isdigit 612E                         ??___xxtofl 0072  
                 ___awmod@dividend 006E                         ??_delay_ms 0076  
           CANreceiveMessage@error 0043       __end_of_board_initialization 5B94  
        __size_of_Joystick_Polling 0054           __end_of_delay_set_quartz 6288  
                          _sprintf 0B06                     __pintcode_body 4F38  
                        _LCD_clear 60FC               end_of_initialization 5FAA  
        __size_of_LCD_write_string 0026                            itoa@buf 007E  
                          itoa@val 0080                            int_func 4F38  
                        i2u1236_47 505A                          i2u1197_40 5018  
                        i2u1189_40 4F90                          i2u1198_45 501A  
                    _CANInitialize 4866                    ___lldiv@divisor 0072  
               LCD_cursor@blinking 007A                      _parking_state 00E9  
                  ___lldiv@counter 007A             __end_of_LCD_write_char 5D66  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE         __size_of_LCD_write_integer 01C0  
       __size_of_LCD_write_message 0034                            utoa@buf 0075  
                   __tdiv_to_l_@f1 006E                     __tdiv_to_l_@f2 0072  
                          utoa@val 0077                         _wait_low_1 025B  
                       _wait_low_2 025C                         _wait_low_3 025D  
                        _ISR_bassa 0018                      ??__tdiv_to_l_ 0076  
          _steering_correction_dir 025A                          _PORTAbits 000F80  
                        _PORTBbits 000F81                     CANSetMask@mask 006E  
                        _PORTDbits 000F83                     CANSetMask@tamp 0078  
         __end_of_LCD_send_command 5FEE                     CANSetMask@type 0072  
                      ___fladd@grs 00B5                      ___xxtofl@sign 0076  
                      ___fldiv@grs 008F                        ___fldiv@rem 0089  
                _F1_Button_Polling 6236                         ?_LCD_clear 0028  
               ?_F1_Button_Polling 0028                  __size_of_CAN_Send 00BA  
          _clock_counter_reference 00E2                        ___flmul@grs 008A  
                   _CANsendMessage 139A                   CANInitialize@BRP 007F  
                 CANInitialize@SJW 007E                     ?_CANInitialize 007C  
              ??_F1_Button_Polling 006E                __size_of__div_to_l_ 0188  
          LCD_write_integer@F17272 0107                    ?_LCD_write_char 0028  
                    ??_LCD_Handler 00CA           __end_of_LCD_shift_cursor 5EE0  
                   __end_of___flge 5262                         ?_ISR_bassa 0028  
                   __end_of___wmul 6096                  __size_of_ISR_alta 50CA  
                LCD_shift_cursor@i 007C                     __end_of_fround 4698  
                  _CAN_interpreter 5A42                     i2_CANisTxReady 61C4  
        __end_of_F1_Button_Polling 6252                start_initialization 5F70  
              __end_of__tdiv_to_l_ 4F38                CANSetMask@numBuffer 0077  
                    _data_speed_rx 0100             __end_of_CANsendMessage 1B26  
                ?_CANOperationMode 0028                      _data_steering 00F0  
                    ??_LCD_goto_xy 007E         i2CANsendMessage@dataLength 003F  
             i2CANsendMessage@data 003D                 ??_CANOperationMode 006E  
             i2CANsendMessage@tamp 0045                    ___llmod@divisor 0072  
         __end_ofi2_CANsendMessage 28D0         CANInitialize@FilterConfig1 0086  
       CANInitialize@FilterConfig2 0087                    ___llmod@counter 0076  
              _steering_correction 00EA                           ??___flge 0076  
             _board_initialization 5AF0                           ??___wmul 0072  
                      __pdataBANK0 00F1                   __CFG_LPT1OSC$OFF 000000  
                         ??_fround 0099             __end_ofi2_CANisTxReady 61E2  
                    sprintf@tmpval 013E                          ___fladd@a 00A6  
                        ___fladd@b 00A2             CANInitialize@phaseSeg1 007C  
           CANInitialize@phaseSeg2 007D                         fround@prec 00A1  
              __end_of_LCD_Handler 4D9A                          ___fldiv@a 0080  
                        ___fldiv@b 007C                          ___flmul@a 0080  
                        ___flmul@b 007C                        __pbssCOMRAM 0001  
                        ___flsub@a 00BA                          ___flsub@b 00B6  
                    __pcstackBANK0 0060                      __pcstackBANK1 0130  
                      _BRGCON2bits 000F71                        _BRGCON3bits 000F72  
                 _Joystick_Polling 5E40                  __size_of___xxtofl 01CE  
        __size_of_LCD_enable_pulse 0022                       _isdigit$3801 006F  
       i2CANsendMessage@identifier 0039                  _park_assist_state 0128  
                __size_of_delay_ms 003A                        ??_LCD_clear 007A  
                  ?_CANsendMessage 006E            LCD_write_message@buffer 007F  
                 _LCD_write_string 6158                    ??_CANInitialize 0081  
                      sprintf@flag 0136                        sprintf@fval 0144  
                      sprintf@prec 0142                   ??_LCD_initialize 007C  
               CANSetFilter@filter 006E          delay_set_quartz@frequency 006E  
                 ___lwdiv@dividend 006E                 LCD_send_command@D0 0078  
               LCD_send_command@D1 0077                 LCD_send_command@D2 0076  
               LCD_send_command@D3 0079                __end_of_LCD_goto_xy 621A  
            __end_of_LCD_goto_line 5750              ?_board_initialization 0028  
                        __pintcode 0008                      __pmediumconst FEB4  
                         ?___fladd 00A2                           ?___fldiv 007C  
                         ?___awdiv 0074                           ?___flneg 0095  
                         ?___awmod 006E                           ?___flmul 007C  
          __end_of_CAN_interpreter 5AF0                           ?___flsub 00B6  
                         ?___fltol 00B6                           ?___lldiv 006E  
                         ?___llmod 006E                          __npowers_ FEB5  
                         ?___lwdiv 006E                           ?___lwmod 006E  
                      ??_ISR_bassa 0028                        __pintcodelo 0018  
       __end_of_PWR_Button_Polling 61FE                    ?i2_CANisTxReady 0028  
                      __tdiv_to_l_ 4D9A                       ??__div_to_l_ 0076  
                      _COMSTATbits 000F74                           ?_isdigit 0028  
       __size_of_F1_Button_Polling 001C                           _CAN_Send 5988  
                 ___lwdiv@quotient 0072                           ?_sprintf 00C0  
                   __size_of_scale 051A                  ?_delay_set_quartz 0028  
            CANreceiveMessage@tamp 0044                 ??_delay_set_quartz 006E  
                   ___wmul@product 0072                           _LATCbits 000F8B  
                         _LATDbits 000F8C                           _LATEbits 000F8D  
                         _IPR2bits 000FA2       _delay_quartz_frequency_value 00F1  
                         _IPR3bits 000FA5                           _PIE2bits 000FA0  
                         _PIE3bits 000FA3                 __end_of__div_to_l_ 53EA  
                         _PIR2bits 000FA1                           _PIR3bits 000FA4  
                         i2u921_40 2304                           i2u921_45 22FA  
                         i2u922_40 234A                           i2u922_45 2340  
                         i2u923_45 2396                           i2u854_40 2EA2  
                         i2u934_40 2534                           i2u934_45 252A  
                         i2u854_46 2EA4                           i2u855_40 2ED0  
                         i2u935_40 257A                           i2u863_45 3056  
                         i2u935_45 2570                           i2u855_46 2ED2  
                         i2u936_45 25C6                           i2u865_40 312A  
                         _RXB0EIDH 000F63                           _RXB0EIDL 000F64  
                         i2u857_45 2EE6                           i2u865_46 312C  
                         i2u866_40 3154                           i2u874_45 32CC  
                         i2u866_46 3156                           i2u947_40 2764  
                         _RXB1EIDH 000F53                          _pr_time_1 0009  
                        _pr_time_2 000D                           _RXB1EIDL 000F54  
                        _pr_time_3 0011                           i2u947_45 275A  
                        _pr_time_4 0015                          _pr_time_5 0019  
                         i2u948_40 27AA                           i2u868_45 3168  
                         i2u948_45 27A0                           i2u949_45 27F6  
                        _set_speed 00E4                           _RCONbits 000FD0  
                 __CFG_WDTPS$32768 000000                           _RXB0SIDH 000F61  
                         _RXB0SIDL 000F62                           _RXF0EIDH 000F02  
                         _RXB1SIDH 000F51                           _RXF0EIDL 000F03  
                         _RXB1SIDL 000F52                           _RXF1EIDH 000F06  
                         _RXF1EIDL 000F07                           _RXF2EIDH 000F0A  
                         _RXF2EIDL 000F0B                           _RXF3EIDH 000F0E  
                         _RXF3EIDL 000F0F                           _RXF4EIDH 000F12  
                         _RXF4EIDL 000F13                           _RXF5EIDH 000F16  
                         _RXF5EIDL 000F17                           _RXF0SIDH 000F00  
                         _RXF0SIDL 000F01                           _TXB0EIDH 000F43  
                         _RXF1SIDH 000F04                           _TXB0EIDL 000F44  
                         _RXF1SIDL 000F05                           _TXB1EIDH 000F33  
                         _RXF2SIDH 000F08                           _TXB1EIDL 000F34  
                         _RXF2SIDL 000F09                           _ISR_alta 0008  
                         _TXB2EIDH 000F23                           _RXF3SIDH 000F0C  
                         _TXB2EIDL 000F24                           _RXF3SIDL 000F0D  
                         _RXF4SIDH 000F10                           _RXF4SIDL 000F11  
                         _RXF5SIDH 000F14                           _RXF5SIDL 000F15  
                         _RXM0EIDH 000F1A                           _RXM0EIDL 000F1B  
                         _TXB0SIDH 000F41                           _RXM1EIDH 000F1E  
                         _TXB0SIDL 000F42                           _RXM1EIDL 000F1F  
                         _TXB1SIDH 000F31                           _TXB1SIDL 000F32  
                         _TXB2SIDH 000F21                           _TXB2SIDL 000F22  
                      _LCD_Handler 4BEC                           _RXM0SIDH 000F18  
                         _RXM0SIDL 000F19                           _RXM1SIDH 000F1C  
                         _RXM1SIDL 000F1D                           _RXERRCNT 000F75  
   LCD_write_integer@zero_cleaning 0089                           _TXERRCNT 000F76  
                       _ADCON0bits 000FC2                         _ADCON2bits 000FC0  
                ___wmul@multiplier 006E                           _RTR_Flag 0254  
                ?_LCD_send_command 0076                   _actual_speed_kmh 0001  
                        _user_data 00E6                 ??_LCD_send_command 0079  
                    ?_CANSetFilter 006E                         _CANCONbits 000F6F  
                      _LCD_goto_xy 61FE                   ??_LCD_write_char 007A  
                LCD_goto_line@line 007A                           __Hrparam 0000  
                     _RXB0SIDLbits 000F62             ??_board_initialization 0088  
                         __Lrparam 0000                       _RXB1SIDLbits 000F52  
                 ?_CAN_interpreter 0028                   __size_of___fladd 04A8  
                       _CANSetMask 4004                   __size_of___fldiv 03C0  
                 __size_of___awdiv 00BE                   __size_of___flneg 0038  
                 __size_of___awmod 00A2                   __size_of___flmul 04A6  
                ?_LCD_shift_cursor 007A                   __size_of___flsub 0048  
                 __size_of___fltol 010C                   __size_of___lldiv 00BC  
                 __size_of___llmod 009A                   __size_of___lwdiv 0078  
                 __size_of___lwmod 0062                        _fround$4215 009D  
                      _fround$4216 0099                 ??_LCD_shift_cursor 007B  
                       sprintf@exp 013C                         sprintf@val 0138  
                         ___xxtofl 4698                       _RXF0SIDLbits 000F01  
                 __size_of_isdigit 002A                           _delay_ms 5FEE  
                  ___lwdiv@divisor 0070                       _RXF1SIDLbits 000F05  
                  ___lwdiv@counter 0074                     ??_CANSetFilter 0073  
                 _LCD_enable_pulse 61A2                           __ptext10 612E  
                         __ptext11 43A2                           __ptext20 5558  
                         __ptext12 379E                           __ptext21 5EE0  
                         __ptext13 5B94                           __ptext30 5DDE  
                         __ptext22 32F6                           __ptext14 5750  
                         __ptext31 5D66                           __ptext23 6028  
                         __ptext15 4D9A                           __ptext40 5664  
                         __ptext32 6158                           __ptext24 50D2  
                         __ptext16 5262                           __ptext41 5FB4  
                         __ptext33 5CD0                           __ptext25 3C44  
                         __ptext17 4698                           __ptext50 139A  
                         __ptext42 61A2                           __ptext34 53EA  
                         __ptext26 6096                           __ptext18 5C36  
                         __ptext51 617E                           __ptext43 5FEE  
                         __ptext35 627E                           __ptext27 4A2C  
                         __ptext19 58CC                           __ptext44 6060  
                         __ptext36 60CA                           __ptext28 5F28  
                         __ptext45 5E40                           __ptext37 60FC  
                         __ptext29 580E                           __ptext54 2240  
                         __ptext46 621A                           __ptext38 61FE  
                         __ptext55 61C4                           __ptext47 6236  
                         __ptext39 5E94                           __ptext56 2DEA  
                         __ptext48 5A42                           __ptext57 6268  
                         __ptext49 5988                       _RXF2SIDLbits 000F09  
                         __powers_ FEE9                       _RXF3SIDLbits 000F0D  
                 __size_of_sprintf 0894                       _RXF4SIDLbits 000F11  
                     _RXF5SIDLbits 000F15           CANsendMessage@dataLength 0074  
                    __size_of_main 071A                      __size_of_itoa 0048  
                    __size_of_utoa 00BE                  ?i2_CANsendMessage 0039  
             CANreceiveMessage@msg 0039              LCD_shift_cursor@shift 007B  
              i2_CANisTxReady$3235 0039                       _TXB0SIDLbits 000F42  
                Joystick_Polling@i 006F                 ??i2_CANsendMessage 0041  
                     _TXB1SIDLbits 000F32           __end_of_Joystick_Polling 5E94  
                     _TXB2SIDLbits 000F22                           int$flags 004C  
        __size_of_CANOperationMode 0016                      ?_CANisRxReady 0028  
                    ?_CANisTxReady 0028           __end_of_LCD_write_string 617E  
                      _RXB0DLCbits 000F65                        _RXB1DLCbits 000F55  
                     _RXM0SIDLbits 000F19                        _RXB0CONbits 000F60  
                       _LCD_cursor 60CA                        _RXB1CONbits 000F50  
                _CANreceiveMessage 2DEA                       _RXM1SIDLbits 000F1D  
                       _INTCONbits 000FF2                       _set_steering 0026  
                 ??_CANsendMessage 0076                 ?_CANreceiveMessage 0039  
                         itoa@base 0082                           isdigit@c 0070  
                         scale@scl 009D           CANsendMessage@identifier 006E  
                     _time_counter 001D                           intlevel1 0000  
                         intlevel2 0000                          sprintf@ap 0134  
                 __tdiv_to_l_@exp1 007E                          sprintf@sp 00C0  
                 __tdiv_to_l_@cntr 007D                   CANSetFilter@tamp 0078  
                 __tdiv_to_l_@quot 0079                   CANSetFilter@type 0072  
              ??_CANreceiveMessage 003B                   ___lwmod@dividend 006E  
                 ___lldiv@dividend 006E                        _TXB0DLCbits 000F45  
                      _right_speed 0023                        _TXB1DLCbits 000F35  
                      _TXB0CONbits 000F40                        _TXB2DLCbits 000F25  
                      _TXB1CONbits 000F30                        _TXB2CONbits 000F20  
                  _display_refresh 0256                   ??i2_CANisTxReady 0039  
             CANOperationMode@mode 006E                     ??_CANisRxReady 0039  
                      ?_CANSetMask 006E                     ??_CANisTxReady 006E  
                     ?__tdiv_to_l_ 006E          __end_of_CANreceiveMessage 32F6  
                         utoa@base 0079                           sprintf@c 0148  
                         sprintf@f 00C2                   ___lldiv@quotient 0076  
                  ___lwmod@divisor 0070    LCD_shift_cursor@number_of_shift 007A  
                  ___lwmod@counter 0072                      ___fladd@signs 00B2  
               _PWR_Button_Polling 61E2                       ___fladd@aexp 00B3  
                     ___fladd@bexp 00B4              __end_of_CANInitialize 4A2C  
              ?_PWR_Button_Polling 0028                       _power_switch 0258  
