

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Jun 18 15:32:54 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83  0000                     
    84                           	psect	idataBANK0
    85  0168B2                     __pidataBANK0:
    86                           	opt stack 0
    87                           
    88                           ;initializer for _delay_quartz_frequency_value
    89  0168B2  10                 	db	16
    90                           
    91                           	psect	mediumconst
    92  00FCCC                     __pmediumconst:
    93                           	opt stack 0
    94  00FCCC  00                 	db	0
    95  00FCCD                     __npowers_:
    96                           	opt stack 0
    97  00FCCD  0000               	dw	0
    98  00FCCF  3F80               	dw	16256
    99  00FCD1  CCCD               	dw	52429
   100  00FCD3  3DCC               	dw	15820
   101  00FCD5  D70A               	dw	55050
   102  00FCD7  3C23               	dw	15395
   103  00FCD9  126F               	dw	4719
   104  00FCDB  3A83               	dw	14979
   105  00FCDD  B717               	dw	46871
   106  00FCDF  38D1               	dw	14545
   107  00FCE1  C5AC               	dw	50604
   108  00FCE3  3727               	dw	14119
   109  00FCE5  37BD               	dw	14269
   110  00FCE7  3586               	dw	13702
   111  00FCE9  BF95               	dw	49045
   112  00FCEB  33D6               	dw	13270
   113  00FCED  CC77               	dw	52343
   114  00FCEF  322B               	dw	12843
   115  00FCF1  705F               	dw	28767
   116  00FCF3  3089               	dw	12425
   117  00FCF5  E6FF               	dw	59135
   118  00FCF7  2EDB               	dw	11995
   119  00FCF9  E508               	dw	58632
   120  00FCFB  1E3C               	dw	7740
   121  00FCFD  4260               	dw	16992
   122  00FCFF  0DA2               	dw	3490
   123  00FD01                     __end_of__npowers_:
   124                           	opt stack 0
   125  00FD01                     __powers_:
   126                           	opt stack 0
   127  00FD01  0000               	dw	0
   128  00FD03  3F80               	dw	16256
   129  00FD05  0000               	dw	0
   130  00FD07  4120               	dw	16672
   131  00FD09  0000               	dw	0
   132  00FD0B  42C8               	dw	17096
   133  00FD0D  0000               	dw	0
   134  00FD0F  447A               	dw	17530
   135  00FD11  4000               	dw	16384
   136  00FD13  461C               	dw	17948
   137  00FD15  5000               	dw	20480
   138  00FD17  47C3               	dw	18371
   139  00FD19  2400               	dw	9216
   140  00FD1B  4974               	dw	18804
   141  00FD1D  9680               	dw	38528
   142  00FD1F  4B18               	dw	19224
   143  00FD21  BC20               	dw	48160
   144  00FD23  4CBE               	dw	19646
   145  00FD25  6B28               	dw	27432
   146  00FD27  4E6E               	dw	20078
   147  00FD29  02F9               	dw	761
   148  00FD2B  5015               	dw	20501
   149  00FD2D  78EC               	dw	30956
   150  00FD2F  60AD               	dw	24749
   151  00FD31  F2CA               	dw	62154
   152  00FD33  7149               	dw	29001
   153  00FD35                     __end_of__powers_:
   154                           	opt stack 0
   155  00FD35                     _dpowers:
   156                           	opt stack 0
   157  00FD35  0001               	dw	1
   158  00FD37  0000               	dw	0
   159  00FD39  000A               	dw	10
   160  00FD3B  0000               	dw	0
   161  00FD3D  0064               	dw	100
   162  00FD3F  0000               	dw	0
   163  00FD41  03E8               	dw	1000
   164  00FD43  0000               	dw	0
   165  00FD45  2710               	dw	10000
   166  00FD47  0000               	dw	0
   167  00FD49  86A0               	dw	34464
   168  00FD4B  0001               	dw	1
   169  00FD4D  4240               	dw	16960
   170  00FD4F  000F               	dw	15
   171  00FD51  9680               	dw	38528
   172  00FD53  0098               	dw	152
   173  00FD55  E100               	dw	57600
   174  00FD57  05F5               	dw	1525
   175  00FD59  CA00               	dw	51712
   176  00FD5B  3B9A               	dw	15258
   177  00FD5D                     __end_of_dpowers:
   178                           	opt stack 0
   179  0000                     _RXB1CON	set	3920
   180  0000                     _RXB1CONbits	set	3920
   181  0000                     _RXB1D0	set	3926
   182  0000                     _RXB1D1	set	3927
   183  0000                     _RXB1D2	set	3928
   184  0000                     _RXB1D3	set	3929
   185  0000                     _RXB1D4	set	3930
   186  0000                     _RXB1D5	set	3931
   187  0000                     _RXB1D6	set	3932
   188  0000                     _RXB1D7	set	3933
   189  0000                     _RXB1DLC	set	3925
   190  0000                     _RXB1DLCbits	set	3925
   191  0000                     _RXB1EIDH	set	3923
   192  0000                     _RXB1EIDL	set	3924
   193  0000                     _RXB1SIDH	set	3921
   194  0000                     _RXB1SIDL	set	3922
   195  0000                     _RXB1SIDLbits	set	3922
   196  0000                     _RXF0EIDH	set	3842
   197  0000                     _RXF0EIDL	set	3843
   198  0000                     _RXF0SIDH	set	3840
   199  0000                     _RXF0SIDL	set	3841
   200  0000                     _RXF0SIDLbits	set	3841
   201  0000                     _RXF1EIDH	set	3846
   202  0000                     _RXF1EIDL	set	3847
   203  0000                     _RXF1SIDH	set	3844
   204  0000                     _RXF1SIDL	set	3845
   205  0000                     _RXF1SIDLbits	set	3845
   206  0000                     _RXF2EIDH	set	3850
   207  0000                     _RXF2EIDL	set	3851
   208  0000                     _RXF2SIDH	set	3848
   209  0000                     _RXF2SIDL	set	3849
   210  0000                     _RXF2SIDLbits	set	3849
   211  0000                     _RXF3EIDH	set	3854
   212  0000                     _RXF3EIDL	set	3855
   213  0000                     _RXF3SIDH	set	3852
   214  0000                     _RXF3SIDL	set	3853
   215  0000                     _RXF3SIDLbits	set	3853
   216  0000                     _RXF4EIDH	set	3858
   217  0000                     _RXF4EIDL	set	3859
   218  0000                     _RXF4SIDH	set	3856
   219  0000                     _RXF4SIDL	set	3857
   220  0000                     _RXF4SIDLbits	set	3857
   221  0000                     _RXF5EIDH	set	3862
   222  0000                     _RXF5EIDL	set	3863
   223  0000                     _RXF5SIDH	set	3860
   224  0000                     _RXF5SIDL	set	3861
   225  0000                     _RXF5SIDLbits	set	3861
   226  0000                     _RXM0EIDH	set	3866
   227  0000                     _RXM0EIDL	set	3867
   228  0000                     _RXM0SIDH	set	3864
   229  0000                     _RXM0SIDL	set	3865
   230  0000                     _RXM0SIDLbits	set	3865
   231  0000                     _RXM1EIDH	set	3870
   232  0000                     _RXM1EIDL	set	3871
   233  0000                     _RXM1SIDH	set	3868
   234  0000                     _RXM1SIDL	set	3869
   235  0000                     _RXM1SIDLbits	set	3869
   236  0000                     _TXB0CONbits	set	3904
   237  0000                     _TXB0D0	set	3910
   238  0000                     _TXB0D1	set	3911
   239  0000                     _TXB0D2	set	3912
   240  0000                     _TXB0D3	set	3913
   241  0000                     _TXB0D4	set	3914
   242  0000                     _TXB0D5	set	3915
   243  0000                     _TXB0D6	set	3916
   244  0000                     _TXB0D7	set	3917
   245  0000                     _TXB0DLC	set	3909
   246  0000                     _TXB0DLCbits	set	3909
   247  0000                     _TXB0EIDH	set	3907
   248  0000                     _TXB0EIDL	set	3908
   249  0000                     _TXB0SIDH	set	3905
   250  0000                     _TXB0SIDL	set	3906
   251  0000                     _TXB0SIDLbits	set	3906
   252  0000                     _TXB1CONbits	set	3888
   253  0000                     _TXB1D0	set	3894
   254  0000                     _TXB1D1	set	3895
   255  0000                     _TXB1D2	set	3896
   256  0000                     _TXB1D3	set	3897
   257  0000                     _TXB1D4	set	3898
   258  0000                     _TXB1D5	set	3899
   259  0000                     _TXB1D6	set	3900
   260  0000                     _TXB1D7	set	3901
   261  0000                     _TXB1DLC	set	3893
   262  0000                     _TXB1DLCbits	set	3893
   263  0000                     _TXB1EIDH	set	3891
   264  0000                     _TXB1EIDL	set	3892
   265  0000                     _TXB1SIDH	set	3889
   266  0000                     _TXB1SIDL	set	3890
   267  0000                     _TXB1SIDLbits	set	3890
   268  0000                     _TXB2CONbits	set	3872
   269  0000                     _TXB2D0	set	3878
   270  0000                     _TXB2D1	set	3879
   271  0000                     _TXB2D2	set	3880
   272  0000                     _TXB2D3	set	3881
   273  0000                     _TXB2D4	set	3882
   274  0000                     _TXB2D5	set	3883
   275  0000                     _TXB2D6	set	3884
   276  0000                     _TXB2D7	set	3885
   277  0000                     _TXB2DLC	set	3877
   278  0000                     _TXB2DLCbits	set	3877
   279  0000                     _TXB2EIDH	set	3875
   280  0000                     _TXB2EIDL	set	3876
   281  0000                     _TXB2SIDH	set	3873
   282  0000                     _TXB2SIDL	set	3874
   283  0000                     _TXB2SIDLbits	set	3874
   284  0000                     _ADCON0bits	set	4034
   285  0000                     _ADCON1	set	4033
   286  0000                     _ADCON2bits	set	4032
   287  0000                     _ADRESH	set	4036
   288  0000                     _BRGCON1	set	3952
   289  0000                     _BRGCON2	set	3953
   290  0000                     _BRGCON2bits	set	3953
   291  0000                     _BRGCON3	set	3954
   292  0000                     _BRGCON3bits	set	3954
   293  0000                     _CANCON	set	3951
   294  0000                     _CANCONbits	set	3951
   295  0000                     _CANSTAT	set	3950
   296  0000                     _COMSTATbits	set	3956
   297  0000                     _INTCONbits	set	4082
   298  0000                     _IPR2bits	set	4002
   299  0000                     _IPR3bits	set	4005
   300  0000                     _LATA	set	3977
   301  0000                     _LATB	set	3978
   302  0000                     _LATC	set	3979
   303  0000                     _LATCbits	set	3979
   304  0000                     _LATD	set	3980
   305  0000                     _LATDbits	set	3980
   306  0000                     _LATE	set	3981
   307  0000                     _LATEbits	set	3981
   308  0000                     _PIE2bits	set	4000
   309  0000                     _PIE3bits	set	4003
   310  0000                     _PIR2bits	set	4001
   311  0000                     _PIR3bits	set	4004
   312  0000                     _PORTAbits	set	3968
   313  0000                     _PORTBbits	set	3969
   314  0000                     _PORTDbits	set	3971
   315  0000                     _RCONbits	set	4048
   316  0000                     _RXB0CON	set	3936
   317  0000                     _RXB0CONbits	set	3936
   318  0000                     _RXB0D0	set	3942
   319  0000                     _RXB0D1	set	3943
   320  0000                     _RXB0D2	set	3944
   321  0000                     _RXB0D3	set	3945
   322  0000                     _RXB0D4	set	3946
   323  0000                     _RXB0D5	set	3947
   324  0000                     _RXB0D6	set	3948
   325  0000                     _RXB0D7	set	3949
   326  0000                     _RXB0DLC	set	3941
   327  0000                     _RXB0DLCbits	set	3941
   328  0000                     _RXB0EIDH	set	3939
   329  0000                     _RXB0EIDL	set	3940
   330  0000                     _RXB0SIDH	set	3937
   331  0000                     _RXB0SIDL	set	3938
   332  0000                     _RXB0SIDLbits	set	3938
   333  0000                     _RXERRCNT	set	3957
   334  0000                     _T3CON	set	4017
   335  0000                     _TMR3H	set	4019
   336  0000                     _TMR3L	set	4018
   337  0000                     _TRISA	set	3986
   338  0000                     _TRISB	set	3987
   339  0000                     _TRISC	set	3988
   340  0000                     _TRISD	set	3989
   341  0000                     _TRISE	set	3990
   342  0000                     _TXERRCNT	set	3958
   343  00FD5D                     STR_11:
   344  00FD5D  44                 	db	68	;'D'
   345  00FD5E  69                 	db	105	;'i'
   346  00FD5F  72                 	db	114	;'r'
   347  00FD60  65                 	db	101	;'e'
   348  00FD61  63                 	db	99	;'c'
   349  00FD62  74                 	db	116	;'t'
   350  00FD63  69                 	db	105	;'i'
   351  00FD64  6F                 	db	111	;'o'
   352  00FD65  6E                 	db	110	;'n'
   353  00FD66  3A                 	db	58	;':'
   354  00FD67  20                 	db	32
   355  00FD68  20                 	db	32
   356  00FD69  20                 	db	32
   357  00FD6A  20                 	db	32
   358  00FD6B  20                 	db	32
   359  00FD6C  20                 	db	32
   360  00FD6D  20                 	db	32
   361  00FD6E  20                 	db	32
   362  00FD6F  20                 	db	32
   363  00FD70  20                 	db	32
   364  00FD71  00                 	db	0
   365  00FD72                     STR_39:
   366  00FD72  20                 	db	32
   367  00FD73  20                 	db	32
   368  00FD74  20                 	db	32
   369  00FD75  20                 	db	32
   370  00FD76  20                 	db	32
   371  00FD77  20                 	db	32
   372  00FD78  20                 	db	32
   373  00FD79  46                 	db	70	;'F'
   374  00FD7A  41                 	db	65	;'A'
   375  00FD7B  49                 	db	73	;'I'
   376  00FD7C  4C                 	db	76	;'L'
   377  00FD7D  45                 	db	69	;'E'
   378  00FD7E  44                 	db	68	;'D'
   379  00FD7F  21                 	db	33
   380  00FD80  20                 	db	32
   381  00FD81  20                 	db	32
   382  00FD82  20                 	db	32
   383  00FD83  20                 	db	32
   384  00FD84  20                 	db	32
   385  00FD85  20                 	db	32
   386  00FD86  00                 	db	0
   387  00FD87                     STR_41:
   388  00FD87  20                 	db	32
   389  00FD88  20                 	db	32
   390  00FD89  20                 	db	32
   391  00FD8A  20                 	db	32
   392  00FD8B  20                 	db	32
   393  00FD8C  20                 	db	32
   394  00FD8D  53                 	db	83	;'S'
   395  00FD8E  54                 	db	84	;'T'
   396  00FD8F  4F                 	db	79	;'O'
   397  00FD90  50                 	db	80	;'P'
   398  00FD91  50                 	db	80	;'P'
   399  00FD92  45                 	db	69	;'E'
   400  00FD93  44                 	db	68	;'D'
   401  00FD94  21                 	db	33
   402  00FD95  20                 	db	32
   403  00FD96  20                 	db	32
   404  00FD97  20                 	db	32
   405  00FD98  20                 	db	32
   406  00FD99  20                 	db	32
   407  00FD9A  20                 	db	32
   408  00FD9B  00                 	db	0
   409  00FD9C                     STR_36:
   410  00FD9C  20                 	db	32
   411  00FD9D  20                 	db	32
   412  00FD9E  20                 	db	32
   413  00FD9F  20                 	db	32
   414  00FDA0  20                 	db	32
   415  00FDA1  43                 	db	67	;'C'
   416  00FDA2  4F                 	db	79	;'O'
   417  00FDA3  4D                 	db	77	;'M'
   418  00FDA4  50                 	db	80	;'P'
   419  00FDA5  4C                 	db	76	;'L'
   420  00FDA6  45                 	db	69	;'E'
   421  00FDA7  54                 	db	84	;'T'
   422  00FDA8  45                 	db	69	;'E'
   423  00FDA9  44                 	db	68	;'D'
   424  00FDAA  21                 	db	33
   425  00FDAB  20                 	db	32
   426  00FDAC  20                 	db	32
   427  00FDAD  20                 	db	32
   428  00FDAE  20                 	db	32
   429  00FDAF  20                 	db	32
   430  00FDB0  00                 	db	0
   431  00FDB1                     STR_42:
   432  00FDB1  20                 	db	32
   433  00FDB2  20                 	db	32
   434  00FDB3  20                 	db	32
   435  00FDB4  20                 	db	32
   436  00FDB5  62                 	db	98	;'b'
   437  00FDB6  79                 	db	121	;'y'
   438  00FDB7  20                 	db	32
   439  00FDB8  74                 	db	116	;'t'
   440  00FDB9  68                 	db	104	;'h'
   441  00FDBA  65                 	db	101	;'e'
   442  00FDBB  20                 	db	32
   443  00FDBC  55                 	db	85	;'U'
   444  00FDBD  53                 	db	83	;'S'
   445  00FDBE  45                 	db	69	;'E'
   446  00FDBF  52                 	db	82	;'R'
   447  00FDC0  20                 	db	32
   448  00FDC1  20                 	db	32
   449  00FDC2  20                 	db	32
   450  00FDC3  20                 	db	32
   451  00FDC4  20                 	db	32
   452  00FDC5  00                 	db	0
   453  00FDC6                     STR_35:
   454  00FDC6  20                 	db	32
   455  00FDC7  20                 	db	32
   456  00FDC8  20                 	db	32
   457  00FDC9  20                 	db	32
   458  00FDCA  53                 	db	83	;'S'
   459  00FDCB  55                 	db	85	;'U'
   460  00FDCC  43                 	db	67	;'C'
   461  00FDCD  43                 	db	67	;'C'
   462  00FDCE  45                 	db	69	;'E'
   463  00FDCF  53                 	db	83	;'S'
   464  00FDD0  53                 	db	83	;'S'
   465  00FDD1  46                 	db	70	;'F'
   466  00FDD2  55                 	db	85	;'U'
   467  00FDD3  4C                 	db	76	;'L'
   468  00FDD4  4C                 	db	76	;'L'
   469  00FDD5  59                 	db	89	;'Y'
   470  00FDD6  20                 	db	32
   471  00FDD7  20                 	db	32
   472  00FDD8  20                 	db	32
   473  00FDD9  20                 	db	32
   474  00FDDA  00                 	db	0
   475  00FDDB                     STR_28:
   476  00FDDB  20                 	db	32
   477  00FDDC  20                 	db	32
   478  00FDDD  20                 	db	32
   479  00FDDE  73                 	db	115	;'s'
   480  00FDDF  74                 	db	116	;'t'
   481  00FDE0  61                 	db	97	;'a'
   482  00FDE1  72                 	db	114	;'r'
   483  00FDE2  74                 	db	116	;'t'
   484  00FDE3  20                 	db	32
   485  00FDE4  70                 	db	112	;'p'
   486  00FDE5  61                 	db	97	;'a'
   487  00FDE6  72                 	db	114	;'r'
   488  00FDE7  6B                 	db	107	;'k'
   489  00FDE8  69                 	db	105	;'i'
   490  00FDE9  6E                 	db	110	;'n'
   491  00FDEA  67                 	db	103	;'g'
   492  00FDEB  20                 	db	32
   493  00FDEC  20                 	db	32
   494  00FDED  20                 	db	32
   495  00FDEE  20                 	db	32
   496  00FDEF  00                 	db	0
   497  00FDF0                     STR_46:
   498  00FDF0  20                 	db	32
   499  00FDF1  20                 	db	32
   500  00FDF2  53                 	db	83	;'S'
   501  00FDF3  69                 	db	105	;'i'
   502  00FDF4  6D                 	db	109	;'m'
   503  00FDF5  6F                 	db	111	;'o'
   504  00FDF6  6E                 	db	110	;'n'
   505  00FDF7  65                 	db	101	;'e'
   506  00FDF8  20                 	db	32
   507  00FDF9  52                 	db	82	;'R'
   508  00FDFA  69                 	db	105	;'i'
   509  00FDFB  67                 	db	103	;'g'
   510  00FDFC  68                 	db	104	;'h'
   511  00FDFD  65                 	db	101	;'e'
   512  00FDFE  74                 	db	116	;'t'
   513  00FDFF  74                 	db	116	;'t'
   514  00FE00  69                 	db	105	;'i'
   515  00FE01  20                 	db	32
   516  00FE02  20                 	db	32
   517  00FE03  20                 	db	32
   518  00FE04  00                 	db	0
   519  00FE05                     STR_44:
   520  00FE05  20                 	db	32
   521  00FE06  20                 	db	32
   522  00FE07  4D                 	db	77	;'M'
   523  00FE08  61                 	db	97	;'a'
   524  00FE09  73                 	db	115	;'s'
   525  00FE0A  73                 	db	115	;'s'
   526  00FE0B  69                 	db	105	;'i'
   527  00FE0C  6D                 	db	109	;'m'
   528  00FE0D  6F                 	db	111	;'o'
   529  00FE0E  20                 	db	32
   530  00FE0F  43                 	db	67	;'C'
   531  00FE10  6C                 	db	108	;'l'
   532  00FE11  65                 	db	101	;'e'
   533  00FE12  6D                 	db	109	;'m'
   534  00FE13  65                 	db	101	;'e'
   535  00FE14  6E                 	db	110	;'n'
   536  00FE15  74                 	db	116	;'t'
   537  00FE16  69                 	db	105	;'i'
   538  00FE17  20                 	db	32
   539  00FE18  20                 	db	32
   540  00FE19  00                 	db	0
   541  00FE1A                     STR_3:
   542  00FE1A  20                 	db	32
   543  00FE1B  20                 	db	32
   544  00FE1C  50                 	db	80	;'P'
   545  00FE1D  72                 	db	114	;'r'
   546  00FE1E  65                 	db	101	;'e'
   547  00FE1F  73                 	db	115	;'s'
   548  00FE20  73                 	db	115	;'s'
   549  00FE21  20                 	db	32
   550  00FE22  74                 	db	116	;'t'
   551  00FE23  68                 	db	104	;'h'
   552  00FE24  65                 	db	101	;'e'
   553  00FE25  20                 	db	32
   554  00FE26  62                 	db	98	;'b'
   555  00FE27  75                 	db	117	;'u'
   556  00FE28  74                 	db	116	;'t'
   557  00FE29  74                 	db	116	;'t'
   558  00FE2A  6F                 	db	111	;'o'
   559  00FE2B  6E                 	db	110	;'n'
   560  00FE2C  20                 	db	32
   561  00FE2D  20                 	db	32
   562  00FE2E  00                 	db	0
   563  00FE2F                     STR_40:
   564  00FE2F  20                 	db	32
   565  00FE30  20                 	db	32
   566  00FE31  20                 	db	32
   567  00FE32  64                 	db	100	;'d'
   568  00FE33  75                 	db	117	;'u'
   569  00FE34  65                 	db	101	;'e'
   570  00FE35  20                 	db	32
   571  00FE36  74                 	db	116	;'t'
   572  00FE37  6F                 	db	111	;'o'
   573  00FE38  20                 	db	32
   574  00FE39  61                 	db	97	;'a'
   575  00FE3A  6E                 	db	110	;'n'
   576  00FE3B  20                 	db	32
   577  00FE3C  65                 	db	101	;'e'
   578  00FE3D  72                 	db	114	;'r'
   579  00FE3E  72                 	db	114	;'r'
   580  00FE3F  6F                 	db	111	;'o'
   581  00FE40  72                 	db	114	;'r'
   582  00FE41  20                 	db	32
   583  00FE42  20                 	db	32
   584  00FE43  00                 	db	0
   585  00FE44                     STR_19:
   586  00FE44  42                 	db	66	;'B'
   587  00FE45  61                 	db	97	;'a'
   588  00FE46  74                 	db	116	;'t'
   589  00FE47  74                 	db	116	;'t'
   590  00FE48  65                 	db	101	;'e'
   591  00FE49  72                 	db	114	;'r'
   592  00FE4A  79                 	db	121	;'y'
   593  00FE4B  20                 	db	32
   594  00FE4C  63                 	db	99	;'c'
   595  00FE4D  68                 	db	104	;'h'
   596  00FE4E  61                 	db	97	;'a'
   597  00FE4F  72                 	db	114	;'r'
   598  00FE50  67                 	db	103	;'g'
   599  00FE51  69                 	db	105	;'i'
   600  00FE52  6E                 	db	110	;'n'
   601  00FE53  67                 	db	103	;'g'
   602  00FE54  2E                 	db	46
   603  00FE55  2E                 	db	46
   604  00FE56  2E                 	db	46
   605  00FE57  20                 	db	32
   606  00FE58  00                 	db	0
   607  00FE59                     STR_24:
   608  00FE59  20                 	db	32
   609  00FE5A  75                 	db	117	;'u'
   610  00FE5B  6E                 	db	110	;'n'
   611  00FE5C  74                 	db	116	;'t'
   612  00FE5D  69                 	db	105	;'i'
   613  00FE5E  6C                 	db	108	;'l'
   614  00FE5F  20                 	db	32
   615  00FE60  6E                 	db	110	;'n'
   616  00FE61  65                 	db	101	;'e'
   617  00FE62  78                 	db	120	;'x'
   618  00FE63  74                 	db	116	;'t'
   619  00FE64  20                 	db	32
   620  00FE65  6D                 	db	109	;'m'
   621  00FE66  65                 	db	101	;'e'
   622  00FE67  73                 	db	115	;'s'
   623  00FE68  73                 	db	115	;'s'
   624  00FE69  61                 	db	97	;'a'
   625  00FE6A  67                 	db	103	;'g'
   626  00FE6B  65                 	db	101	;'e'
   627  00FE6C  20                 	db	32
   628  00FE6D  00                 	db	0
   629  00FE6E                     STR_27:
   630  00FE6E  50                 	db	80	;'P'
   631  00FE6F  72                 	db	114	;'r'
   632  00FE70  65                 	db	101	;'e'
   633  00FE71  73                 	db	115	;'s'
   634  00FE72  73                 	db	115	;'s'
   635  00FE73  20                 	db	32
   636  00FE74  74                 	db	116	;'t'
   637  00FE75  68                 	db	104	;'h'
   638  00FE76  65                 	db	101	;'e'
   639  00FE77  20                 	db	32
   640  00FE78  42                 	db	66	;'B'
   641  00FE79  55                 	db	85	;'U'
   642  00FE7A  54                 	db	84	;'T'
   643  00FE7B  54                 	db	84	;'T'
   644  00FE7C  4F                 	db	79	;'O'
   645  00FE7D  4E                 	db	78	;'N'
   646  00FE7E  20                 	db	32
   647  00FE7F  74                 	db	116	;'t'
   648  00FE80  6F                 	db	111	;'o'
   649  00FE81  20                 	db	32
   650  00FE82  00                 	db	0
   651  00FE83                     STR_45:
   652  00FE83  20                 	db	32
   653  00FE84  20                 	db	32
   654  00FE85  47                 	db	71	;'G'
   655  00FE86  69                 	db	105	;'i'
   656  00FE87  61                 	db	97	;'a'
   657  00FE88  6E                 	db	110	;'n'
   658  00FE89  6C                 	db	108	;'l'
   659  00FE8A  6F                 	db	111	;'o'
   660  00FE8B  72                 	db	114	;'r'
   661  00FE8C  65                 	db	101	;'e'
   662  00FE8D  6E                 	db	110	;'n'
   663  00FE8E  7A                 	db	122	;'z'
   664  00FE8F  6F                 	db	111	;'o'
   665  00FE90  20                 	db	32
   666  00FE91  4D                 	db	77	;'M'
   667  00FE92  6F                 	db	111	;'o'
   668  00FE93  73                 	db	115	;'s'
   669  00FE94  65                 	db	101	;'e'
   670  00FE95  72                 	db	114	;'r'
   671  00FE96  20                 	db	32
   672  00FE97  00                 	db	0
   673  00FE98                     STR_34:
   674  00FE98  20                 	db	32
   675  00FE99  50                 	db	80	;'P'
   676  00FE9A  61                 	db	97	;'a'
   677  00FE9B  72                 	db	114	;'r'
   678  00FE9C  6B                 	db	107	;'k'
   679  00FE9D  69                 	db	105	;'i'
   680  00FE9E  6E                 	db	110	;'n'
   681  00FE9F  67                 	db	103	;'g'
   682  00FEA0  20                 	db	32
   683  00FEA1  70                 	db	112	;'p'
   684  00FEA2  72                 	db	114	;'r'
   685  00FEA3  6F                 	db	111	;'o'
   686  00FEA4  63                 	db	99	;'c'
   687  00FEA5  65                 	db	101	;'e'
   688  00FEA6  64                 	db	100	;'d'
   689  00FEA7  75                 	db	117	;'u'
   690  00FEA8  72                 	db	114	;'r'
   691  00FEA9  65                 	db	101	;'e'
   692  00FEAA  73                 	db	115	;'s'
   693  00FEAB  20                 	db	32
   694  00FEAC  00                 	db	0
   695  00FEAD                     STR_26:
   696  00FEAD  2D                 	db	45
   697  00FEAE  20                 	db	32
   698  00FEAF  44                 	db	68	;'D'
   699  00FEB0  69                 	db	105	;'i'
   700  00FEB1  73                 	db	115	;'s'
   701  00FEB2  74                 	db	116	;'t'
   702  00FEB3  61                 	db	97	;'a'
   703  00FEB4  6E                 	db	110	;'n'
   704  00FEB5  63                 	db	99	;'c'
   705  00FEB6  65                 	db	101	;'e'
   706  00FEB7  20                 	db	32
   707  00FEB8  52                 	db	82	;'R'
   708  00FEB9  45                 	db	69	;'E'
   709  00FEBA  41                 	db	65	;'A'
   710  00FEBB  43                 	db	67	;'C'
   711  00FEBC  48                 	db	72	;'H'
   712  00FEBD  45                 	db	69	;'E'
   713  00FEBE  44                 	db	68	;'D'
   714  00FEBF  20                 	db	32
   715  00FEC0  2D                 	db	45
   716  00FEC1  00                 	db	0
   717  00FEC2                     STR_23:
   718  00FEC2  2D                 	db	45
   719  00FEC3  3E                 	db	62	;'>'
   720  00FEC4  20                 	db	32
   721  00FEC5  20                 	db	32
   722  00FEC6  4B                 	db	75	;'K'
   723  00FEC7  45                 	db	69	;'E'
   724  00FEC8  45                 	db	69	;'E'
   725  00FEC9  50                 	db	80	;'P'
   726  00FECA  20                 	db	32
   727  00FECB  4D                 	db	77	;'M'
   728  00FECC  4F                 	db	79	;'O'
   729  00FECD  56                 	db	86	;'V'
   730  00FECE  49                 	db	73	;'I'
   731  00FECF  4E                 	db	78	;'N'
   732  00FED0  47                 	db	71	;'G'
   733  00FED1  20                 	db	32
   734  00FED2  20                 	db	32
   735  00FED3  20                 	db	32
   736  00FED4  3C                 	db	60	;'<'
   737  00FED5  2D                 	db	45
   738  00FED6  00                 	db	0
   739  00FED7                     STR_15:
   740  00FED7  2D                 	db	45
   741  00FED8  3E                 	db	62	;'>'
   742  00FED9  20                 	db	32
   743  00FEDA  53                 	db	83	;'S'
   744  00FEDB  61                 	db	97	;'a'
   745  00FEDC  66                 	db	102	;'f'
   746  00FEDD  65                 	db	101	;'e'
   747  00FEDE  74                 	db	116	;'t'
   748  00FEDF  79                 	db	121	;'y'
   749  00FEE0  20                 	db	32
   750  00FEE1  62                 	db	98	;'b'
   751  00FEE2  72                 	db	114	;'r'
   752  00FEE3  61                 	db	97	;'a'
   753  00FEE4  6B                 	db	107	;'k'
   754  00FEE5  65                 	db	101	;'e'
   755  00FEE6  20                 	db	32
   756  00FEE7  4F                 	db	79	;'O'
   757  00FEE8  4E                 	db	78	;'N'
   758  00FEE9  3C                 	db	60	;'<'
   759  00FEEA  2D                 	db	45
   760  00FEEB  00                 	db	0
   761  00FEEC                     STR_30:
   762  00FEEC  3D                 	db	61	;'='
   763  00FEED  20                 	db	32
   764  00FEEE  20                 	db	32
   765  00FEEF  20                 	db	32
   766  00FEF0  20                 	db	32
   767  00FEF1  50                 	db	80	;'P'
   768  00FEF2  61                 	db	97	;'a'
   769  00FEF3  72                 	db	114	;'r'
   770  00FEF4  6B                 	db	107	;'k'
   771  00FEF5  69                 	db	105	;'i'
   772  00FEF6  6E                 	db	110	;'n'
   773  00FEF7  67                 	db	103	;'g'
   774  00FEF8  20                 	db	32
   775  00FEF9  69                 	db	105	;'i'
   776  00FEFA  6E                 	db	110	;'n'
   777  00FEFB  20                 	db	32
   778  00FEFC  20                 	db	32
   779  00FEFD  20                 	db	32
   780  00FEFE  20                 	db	32
   781  00FEFF  3D                 	db	61	;'='
   782  00FF00  00                 	db	0
   783  00FF01                     STR_31:
   784  00FF01  3D                 	db	61	;'='
   785  00FF02  20                 	db	32
   786  00FF03  20                 	db	32
   787  00FF04  20                 	db	32
   788  00FF05  20                 	db	32
   789  00FF06  70                 	db	112	;'p'
   790  00FF07  72                 	db	114	;'r'
   791  00FF08  6F                 	db	111	;'o'
   792  00FF09  67                 	db	103	;'g'
   793  00FF0A  72                 	db	114	;'r'
   794  00FF0B  65                 	db	101	;'e'
   795  00FF0C  73                 	db	115	;'s'
   796  00FF0D  73                 	db	115	;'s'
   797  00FF0E  2E                 	db	46
   798  00FF0F  2E                 	db	46
   799  00FF10  2E                 	db	46
   800  00FF11  20                 	db	32
   801  00FF12  20                 	db	32
   802  00FF13  20                 	db	32
   803  00FF14  3D                 	db	61	;'='
   804  00FF15  00                 	db	0
   805  00FF16                     STR_21:
   806  00FF16  3D                 	db	61	;'='
   807  00FF17  20                 	db	32
   808  00FF18  50                 	db	80	;'P'
   809  00FF19  41                 	db	65	;'A'
   810  00FF1A  52                 	db	82	;'R'
   811  00FF1B  4B                 	db	75	;'K'
   812  00FF1C  49                 	db	73	;'I'
   813  00FF1D  4E                 	db	78	;'N'
   814  00FF1E  47                 	db	71	;'G'
   815  00FF1F  20                 	db	32
   816  00FF20  4D                 	db	77	;'M'
   817  00FF21  45                 	db	69	;'E'
   818  00FF22  53                 	db	83	;'S'
   819  00FF23  53                 	db	83	;'S'
   820  00FF24  41                 	db	65	;'A'
   821  00FF25  47                 	db	71	;'G'
   822  00FF26  45                 	db	69	;'E'
   823  00FF27  53                 	db	83	;'S'
   824  00FF28  20                 	db	32
   825  00FF29  3D                 	db	61	;'='
   826  00FF2A  00                 	db	0
   827  00FF2B                     STR_43:
   828  00FF2B  3D                 	db	61	;'='
   829  00FF2C  3E                 	db	62	;'>'
   830  00FF2D  20                 	db	32
   831  00FF2E  20                 	db	32
   832  00FF2F  20                 	db	32
   833  00FF30  20                 	db	32
   834  00FF31  43                 	db	67	;'C'
   835  00FF32  52                 	db	82	;'R'
   836  00FF33  45                 	db	69	;'E'
   837  00FF34  44                 	db	68	;'D'
   838  00FF35  49                 	db	73	;'I'
   839  00FF36  54                 	db	84	;'T'
   840  00FF37  53                 	db	83	;'S'
   841  00FF38  21                 	db	33
   842  00FF39  20                 	db	32
   843  00FF3A  20                 	db	32
   844  00FF3B  20                 	db	32
   845  00FF3C  20                 	db	32
   846  00FF3D  3C                 	db	60	;'<'
   847  00FF3E  3D                 	db	61	;'='
   848  00FF3F  00                 	db	0
   849  00FF40                     STR_2:
   850  00FF40  3D                 	db	61	;'='
   851  00FF41  3D                 	db	61	;'='
   852  00FF42  3E                 	db	62	;'>'
   853  00FF43  20                 	db	32
   854  00FF44  56                 	db	86	;'V'
   855  00FF45  45                 	db	69	;'E'
   856  00FF46  48                 	db	72	;'H'
   857  00FF47  49                 	db	73	;'I'
   858  00FF48  43                 	db	67	;'C'
   859  00FF49  4C                 	db	76	;'L'
   860  00FF4A  45                 	db	69	;'E'
   861  00FF4B  20                 	db	32
   862  00FF4C  20                 	db	32
   863  00FF4D  4F                 	db	79	;'O'
   864  00FF4E  46                 	db	70	;'F'
   865  00FF4F  46                 	db	70	;'F'
   866  00FF50  20                 	db	32
   867  00FF51  3C                 	db	60	;'<'
   868  00FF52  3D                 	db	61	;'='
   869  00FF53  3D                 	db	61	;'='
   870  00FF54  00                 	db	0
   871  00FF55                     STR_6:
   872  00FF55  3D                 	db	61	;'='
   873  00FF56  3D                 	db	61	;'='
   874  00FF57  3D                 	db	61	;'='
   875  00FF58  20                 	db	32
   876  00FF59  56                 	db	86	;'V'
   877  00FF5A  45                 	db	69	;'E'
   878  00FF5B  48                 	db	72	;'H'
   879  00FF5C  49                 	db	73	;'I'
   880  00FF5D  43                 	db	67	;'C'
   881  00FF5E  4C                 	db	76	;'L'
   882  00FF5F  45                 	db	69	;'E'
   883  00FF60  20                 	db	32
   884  00FF61  44                 	db	68	;'D'
   885  00FF62  41                 	db	65	;'A'
   886  00FF63  54                 	db	84	;'T'
   887  00FF64  41                 	db	65	;'A'
   888  00FF65  20                 	db	32
   889  00FF66  3D                 	db	61	;'='
   890  00FF67  3D                 	db	61	;'='
   891  00FF68  3D                 	db	61	;'='
   892  00FF69  00                 	db	0
   893  00FF6A                     STR_1:
   894  00FF6A  3D                 	db	61	;'='
   895  00FF6B  3D                 	db	61	;'='
   896  00FF6C  3D                 	db	61	;'='
   897  00FF6D  3D                 	db	61	;'='
   898  00FF6E  3D                 	db	61	;'='
   899  00FF6F  3D                 	db	61	;'='
   900  00FF70  3D                 	db	61	;'='
   901  00FF71  3D                 	db	61	;'='
   902  00FF72  3D                 	db	61	;'='
   903  00FF73  3D                 	db	61	;'='
   904  00FF74  3D                 	db	61	;'='
   905  00FF75  3D                 	db	61	;'='
   906  00FF76  3D                 	db	61	;'='
   907  00FF77  3D                 	db	61	;'='
   908  00FF78  3D                 	db	61	;'='
   909  00FF79  3D                 	db	61	;'='
   910  00FF7A  3D                 	db	61	;'='
   911  00FF7B  3D                 	db	61	;'='
   912  00FF7C  3D                 	db	61	;'='
   913  00FF7D  3D                 	db	61	;'='
   914  00FF7E  00                 	db	0
   915  00FF7F                     STR_22:
   916  00FF7F  20                 	db	32
   917  00FF80  50                 	db	80	;'P'
   918  00FF81  61                 	db	97	;'a'
   919  00FF82  72                 	db	114	;'r'
   920  00FF83  6B                 	db	107	;'k'
   921  00FF84  69                 	db	105	;'i'
   922  00FF85  6E                 	db	110	;'n'
   923  00FF86  67                 	db	103	;'g'
   924  00FF87  20                 	db	32
   925  00FF88  73                 	db	115	;'s'
   926  00FF89  70                 	db	112	;'p'
   927  00FF8A  61                 	db	97	;'a'
   928  00FF8B  63                 	db	99	;'c'
   929  00FF8C  65                 	db	101	;'e'
   930  00FF8D  20                 	db	32
   931  00FF8E  46                 	db	70	;'F'
   932  00FF8F  4F                 	db	79	;'O'
   933  00FF90  55                 	db	85	;'U'
   934  00FF91  4E                 	db	78	;'N'
   935  00FF92  44                 	db	68	;'D'
   936  00FF93  00                 	db	0
   937  00FF94                     STR_20:
   938  00FF94  5B                 	db	91	;'['
   939  00FF95  21                 	db	33
   940  00FF96  5D                 	db	93	;']'
   941  00FF97  20                 	db	32
   942  00FF98  20                 	db	32
   943  00FF99  4C                 	db	76	;'L'
   944  00FF9A  6F                 	db	111	;'o'
   945  00FF9B  77                 	db	119	;'w'
   946  00FF9C  20                 	db	32
   947  00FF9D  62                 	db	98	;'b'
   948  00FF9E  61                 	db	97	;'a'
   949  00FF9F  74                 	db	116	;'t'
   950  00FFA0  74                 	db	116	;'t'
   951  00FFA1  65                 	db	101	;'e'
   952  00FFA2  72                 	db	114	;'r'
   953  00FFA3  79                 	db	121	;'y'
   954  00FFA4  20                 	db	32
   955  00FFA5  5B                 	db	91	;'['
   956  00FFA6  21                 	db	33
   957  00FFA7  5D                 	db	93	;']'
   958  00FFA8  00                 	db	0
   959  00FFA9                     STR_8:
   960  00FFA9  53                 	db	83	;'S'
   961  00FFAA  70                 	db	112	;'p'
   962  00FFAB  65                 	db	101	;'e'
   963  00FFAC  65                 	db	101	;'e'
   964  00FFAD  64                 	db	100	;'d'
   965  00FFAE  3A                 	db	58	;':'
   966  00FFAF  20                 	db	32
   967  00FFB0  30                 	db	48	;'0'
   968  00FFB1  2E                 	db	46
   969  00FFB2  30                 	db	48	;'0'
   970  00FFB3  30                 	db	48	;'0'
   971  00FFB4  20                 	db	32
   972  00FFB5  4B                 	db	75	;'K'
   973  00FFB6  6D                 	db	109	;'m'
   974  00FFB7  2F                 	db	47
   975  00FFB8  68                 	db	104	;'h'
   976  00FFB9  00                 	db	0
   977  00FFBA                     STR_9:
   978  00FFBA  50                 	db	80	;'P'
   979  00FFBB  61                 	db	97	;'a'
   980  00FFBC  72                 	db	114	;'r'
   981  00FFBD  6B                 	db	107	;'k'
   982  00FFBE  20                 	db	32
   983  00FFBF  61                 	db	97	;'a'
   984  00FFC0  73                 	db	115	;'s'
   985  00FFC1  73                 	db	115	;'s'
   986  00FFC2  69                 	db	105	;'i'
   987  00FFC3  73                 	db	115	;'s'
   988  00FFC4  74                 	db	116	;'t'
   989  00FFC5  3A                 	db	58	;':'
   990  00FFC6  20                 	db	32
   991  00FFC7  00                 	db	0
   992  00FFC8                     STR_7:
   993  00FFC8  44                 	db	68	;'D'
   994  00FFC9  69                 	db	105	;'i'
   995  00FFCA  72                 	db	114	;'r'
   996  00FFCB  65                 	db	101	;'e'
   997  00FFCC  63                 	db	99	;'c'
   998  00FFCD  74                 	db	116	;'t'
   999  00FFCE  69                 	db	105	;'i'
  1000  00FFCF  6F                 	db	111	;'o'
  1001  00FFD0  6E                 	db	110	;'n'
  1002  00FFD1  3A                 	db	58	;':'
  1003  00FFD2  20                 	db	32
  1004  00FFD3  00                 	db	0
  1005  00FFD4                     STR_17:
  1006  00FFD4  4F                 	db	79	;'O'
  1007  00FFD5  46                 	db	70	;'F'
  1008  00FFD6  46                 	db	70	;'F'
  1009  00FFD7  20                 	db	32
  1010  00FFD8  20                 	db	32
  1011  00FFD9  20                 	db	32
  1012  00FFDA  20                 	db	32
  1013  00FFDB  00                 	db	0
  1014  00FFDC                     STR_18:
  1015  00FFDC  53                 	db	83	;'S'
  1016  00FFDD  45                 	db	69	;'E'
  1017  00FFDE  41                 	db	65	;'A'
  1018  00FFDF  52                 	db	82	;'R'
  1019  00FFE0  43                 	db	67	;'C'
  1020  00FFE1  48                 	db	72	;'H'
  1021  00FFE2  20                 	db	32
  1022  00FFE3  00                 	db	0
  1023  00FFE4                     STR_10:
  1024  00FFE4  44                 	db	68	;'D'
  1025  00FFE5  61                 	db	97	;'a'
  1026  00FFE6  74                 	db	116	;'t'
  1027  00FFE7  61                 	db	97	;'a'
  1028  00FFE8  3A                 	db	58	;':'
  1029  00FFE9  20                 	db	32
  1030  00FFEA  00                 	db	0
  1031  00FFEB                     STR_14:
  1032  00FFEB  50                 	db	80	;'P'
  1033  00FFEC  20                 	db	32
  1034  00FFED  20                 	db	32
  1035  00FFEE  20                 	db	32
  1036  00FFEF  00                 	db	0
  1037  00FFF0                     STR_12:
  1038  00FFF0  46                 	db	70	;'F'
  1039  00FFF1  57                 	db	87	;'W'
  1040  00FFF2  44                 	db	68	;'D'
  1041  00FFF3  20                 	db	32
  1042  00FFF4  00                 	db	0
  1043  00FFF5                     STR_13:
  1044  00FFF5  42                 	db	66	;'B'
  1045  00FFF6  4B                 	db	75	;'K'
  1046  00FFF7  57                 	db	87	;'W'
  1047  00FFF8  44                 	db	68	;'D'
  1048  00FFF9  00                 	db	0
  1049  00FFFA                     STR_5:
  1050  00FFFA  25                 	db	37
  1051  00FFFB  2E                 	db	46
  1052  00FFFC  32                 	db	50	;'2'
  1053  00FFFD  66                 	db	102	;'f'
  1054  00FFFE  00                 	db	0
  1055  0000                     
  1056                           ; #config settings
  1057  00FFFF  00                 	db	0	; dummy byte at the end
  1058  0000                     
  1059                           	psect	cinit
  1060  016598                     __pcinit:
  1061                           	opt stack 0
  1062  016598                     start_initialization:
  1063                           	opt stack 0
  1064  016598                     __initialization:
  1065                           	opt stack 0
  1066                           
  1067                           ; Clear objects allocated to BANK1 (77 bytes)
  1068  016598  EE01  F000         	lfsr	0,__pbssBANK1
  1069  01659C  0E4D               	movlw	77
  1070  01659E                     clear_0:
  1071  01659E  6AEE               	clrf	postinc0,c
  1072  0165A0  06E8               	decf	wreg,f,c
  1073  0165A2  E1FD               	bnz	clear_0
  1074                           
  1075                           ; Clear objects allocated to BANK0 (31 bytes)
  1076  0165A4  EE00  F0CD         	lfsr	0,__pbssBANK0
  1077  0165A8  0E1F               	movlw	31
  1078  0165AA                     clear_1:
  1079  0165AA  6AEE               	clrf	postinc0,c
  1080  0165AC  06E8               	decf	wreg,f,c
  1081  0165AE  E1FD               	bnz	clear_1
  1082                           
  1083                           ; Clear objects allocated to BITCOMRAM (3 bytes)
  1084  0165B0  6A4A               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
  1085  0165B2  6A49               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
  1086  0165B4  6A48               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  1087                           
  1088                           ; Clear objects allocated to COMRAM (37 bytes)
  1089  0165B6  EE00  F001         	lfsr	0,__pbssCOMRAM
  1090  0165BA  0E25               	movlw	37
  1091  0165BC                     clear_2:
  1092  0165BC  6AEE               	clrf	postinc0,c
  1093  0165BE  06E8               	decf	wreg,f,c
  1094  0165C0  E1FD               	bnz	clear_2
  1095                           
  1096                           ; Initialize objects allocated to BANK0 (1 bytes)
  1097                           ; load TBLPTR registers with __pidataBANK0
  1098  0165C2  0EB2               	movlw	low __pidataBANK0
  1099  0165C4  6EF6               	movwf	tblptrl,c
  1100  0165C6  0E68               	movlw	high __pidataBANK0
  1101  0165C8  6EF7               	movwf	tblptrh,c
  1102  0165CA  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1103  0165CC  6EF8               	movwf	tblptru,c
  1104  0165CE  0009               	tblrd		*+	;fetch initializer
  1105  0165D0  CFF5 F0EC          	movff	tablat,__pdataBANK0
  1106  0165D4                     end_of_initialization:
  1107                           	opt stack 0
  1108  0165D4                     __end_of__initialization:
  1109                           	opt stack 0
  1110  0165D4  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1111  0165D6  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1112  0165D8  0100               	movlb	0
  1113  0165DA  EF83  F085         	goto	_main	;jump to C main() function
  1114                           tblptru	equ	0xFF8
  1115                           tblptrh	equ	0xFF7
  1116                           tblptrl	equ	0xFF6
  1117                           tablat	equ	0xFF5
  1118                           postinc0	equ	0xFEE
  1119                           wreg	equ	0xFE8
  1120                           
  1121                           	psect	bitbssCOMRAM
  1122  000240                     __pbitbssCOMRAM:
  1123                           	opt stack 0
  1124  000240                     _Can_Tx_Force:
  1125                           	opt stack 0
  1126  000240                     	ds	1
  1127  000241                     _F1_switch:
  1128                           	opt stack 0
  1129  000241                     	ds	1
  1130  000242                     _F2_switch:
  1131                           	opt stack 0
  1132  000242                     	ds	1
  1133  000243                     _LCD_4TH_ROW_MODE:
  1134                           	opt stack 0
  1135  000243                     	ds	1
  1136  000244                     _RTR_Flag:
  1137                           	opt stack 0
  1138  000244                     	ds	1
  1139  000245                     _battery_charging:
  1140                           	opt stack 0
  1141  000245                     	ds	1
  1142  000246                     _collision_msg:
  1143                           	opt stack 0
  1144  000246                     	ds	1
  1145  000247                     _display_refresh:
  1146                           	opt stack 0
  1147  000247                     	ds	1
  1148  000248                     _low_battery:
  1149                           	opt stack 0
  1150  000248                     	ds	1
  1151  000249                     _parking_error:
  1152                           	opt stack 0
  1153  000249                     	ds	1
  1154  00024A                     _parking_message_E:
  1155                           	opt stack 0
  1156  00024A                     	ds	1
  1157  00024B                     _power_switch:
  1158                           	opt stack 0
  1159  00024B                     	ds	1
  1160  00024C                     _pwr_credits:
  1161                           	opt stack 0
  1162  00024C                     	ds	1
  1163  00024D                     _row_refresh:
  1164                           	opt stack 0
  1165  00024D                     	ds	1
  1166  00024E                     _space_available:
  1167                           	opt stack 0
  1168  00024E                     	ds	1
  1169  00024F                     _space_gap_reached:
  1170                           	opt stack 0
  1171  00024F                     	ds	1
  1172  000250                     _steering_correction_dir:
  1173                           	opt stack 0
  1174  000250                     	ds	1
  1175  000251                     _user_stop:
  1176                           	opt stack 0
  1177  000251                     	ds	1
  1178  000252                     _wait_low_1:
  1179                           	opt stack 0
  1180  000252                     	ds	1
  1181  000253                     _wait_low_2:
  1182                           	opt stack 0
  1183  000253                     	ds	1
  1184  000254                     _wait_low_3:
  1185                           	opt stack 0
  1186  000254                     	ds	1
  1187  000255                     _x:
  1188                           	opt stack 0
  1189  000255                     	ds	1
  1190  000256                     _y:
  1191                           	opt stack 0
  1192  000256                     	ds	1
  1193  000257                     _z:
  1194                           	opt stack 0
  1195  000257                     	ds	1
  1196                           tblptru	equ	0xFF8
  1197                           tblptrh	equ	0xFF7
  1198                           tblptrl	equ	0xFF6
  1199                           tablat	equ	0xFF5
  1200                           postinc0	equ	0xFEE
  1201                           wreg	equ	0xFE8
  1202                           
  1203                           	psect	bssCOMRAM
  1204  000001                     __pbssCOMRAM:
  1205                           	opt stack 0
  1206  000001                     _actual_speed_kmh:
  1207                           	opt stack 0
  1208  000001                     	ds	4
  1209  000005                     _id:
  1210                           	opt stack 0
  1211  000005                     	ds	4
  1212  000009                     _pr_time_2:
  1213                           	opt stack 0
  1214  000009                     	ds	4
  1215  00000D                     _pr_time_3:
  1216                           	opt stack 0
  1217  00000D                     	ds	4
  1218  000011                     _pr_time_5:
  1219                           	opt stack 0
  1220  000011                     	ds	4
  1221  000015                     _pr_time_6:
  1222                           	opt stack 0
  1223  000015                     	ds	4
  1224  000019                     _time_counter:
  1225                           	opt stack 0
  1226  000019                     	ds	4
  1227  00001D                     _collision_sensor_distance:
  1228                           	opt stack 0
  1229  00001D                     	ds	2
  1230  00001F                     _left_speed:
  1231                           	opt stack 0
  1232  00001F                     	ds	2
  1233  000021                     _right_speed:
  1234                           	opt stack 0
  1235  000021                     	ds	2
  1236  000023                     _user_data:
  1237                           	opt stack 0
  1238  000023                     	ds	2
  1239  000025                     _set_steering:
  1240                           	opt stack 0
  1241  000025                     	ds	1
  1242                           tblptru	equ	0xFF8
  1243                           tblptrh	equ	0xFF7
  1244                           tblptrl	equ	0xFF6
  1245                           tablat	equ	0xFF5
  1246                           postinc0	equ	0xFEE
  1247                           wreg	equ	0xFE8
  1248                           
  1249                           	psect	bssBANK0
  1250  0000CD                     __pbssBANK0:
  1251                           	opt stack 0
  1252  0000CD                     _JoystickConstants:
  1253                           	opt stack 0
  1254  0000CD                     	ds	8
  1255  0000D5                     _check:
  1256                           	opt stack 0
  1257  0000D5                     	ds	4
  1258  0000D9                     _pr_time_1:
  1259                           	opt stack 0
  1260  0000D9                     	ds	4
  1261  0000DD                     _JoystickValues:
  1262                           	opt stack 0
  1263  0000DD                     	ds	2
  1264  0000DF                     _actual_speed:
  1265                           	opt stack 0
  1266  0000DF                     	ds	2
  1267  0000E1                     _clock_counter_reference:
  1268                           	opt stack 0
  1269  0000E1                     	ds	2
  1270  0000E3                     _set_speed:
  1271                           	opt stack 0
  1272  0000E3                     	ds	2
  1273  0000E5                     _center_value_Y:
  1274                           	opt stack 0
  1275  0000E5                     	ds	1
  1276  0000E6                     _collision_risk_value:
  1277                           	opt stack 0
  1278  0000E6                     	ds	1
  1279  0000E7                     _dir:
  1280                           	opt stack 0
  1281  0000E7                     	ds	1
  1282  0000E8                     _parking_message_ID:
  1283                           	opt stack 0
  1284  0000E8                     	ds	1
  1285  0000E9                     _parking_state:
  1286                           	opt stack 0
  1287  0000E9                     	ds	1
  1288  0000EA                     _steering_correction:
  1289                           	opt stack 0
  1290  0000EA                     	ds	1
  1291  0000EB                     _switch_position:
  1292                           	opt stack 0
  1293  0000EB                     	ds	1
  1294                           tblptru	equ	0xFF8
  1295                           tblptrh	equ	0xFF7
  1296                           tblptrl	equ	0xFF6
  1297                           tablat	equ	0xFF5
  1298                           postinc0	equ	0xFEE
  1299                           wreg	equ	0xFE8
  1300                           
  1301                           	psect	dataBANK0
  1302  0000EC                     __pdataBANK0:
  1303                           	opt stack 0
  1304  0000EC                     _delay_quartz_frequency_value:
  1305                           	opt stack 0
  1306  0000EC                     	ds	1
  1307                           tblptru	equ	0xFF8
  1308                           tblptrh	equ	0xFF7
  1309                           tblptrl	equ	0xFF6
  1310                           tablat	equ	0xFF5
  1311                           postinc0	equ	0xFEE
  1312                           wreg	equ	0xFE8
  1313                           
  1314                           	psect	bssBANK1
  1315  000100                     __pbssBANK1:
  1316                           	opt stack 0
  1317  000100                     LCD_write_integer@F17134:
  1318                           	opt stack 0
  1319  000100                     	ds	6
  1320  000106                     _pr_time_4:
  1321                           	opt stack 0
  1322  000106                     	ds	4
  1323  00010A                     _msg:
  1324                           	opt stack 0
  1325  00010A                     	ds	15
  1326  000119                     _str:
  1327                           	opt stack 0
  1328  000119                     	ds	12
  1329  000125                     _data:
  1330                           	opt stack 0
  1331  000125                     	ds	8
  1332  00012D                     _data_brake:
  1333                           	opt stack 0
  1334  00012D                     	ds	8
  1335  000135                     _data_speed:
  1336                           	opt stack 0
  1337  000135                     	ds	8
  1338  00013D                     _data_steering:
  1339                           	opt stack 0
  1340  00013D                     	ds	8
  1341  000145                     _park_assist_state:
  1342                           	opt stack 0
  1343  000145                     	ds	8
  1344                           tblptru	equ	0xFF8
  1345                           tblptrh	equ	0xFF7
  1346                           tblptrl	equ	0xFF6
  1347                           tablat	equ	0xFF5
  1348                           postinc0	equ	0xFEE
  1349                           wreg	equ	0xFE8
  1350                           
  1351                           	psect	cstackBANK1
  1352  00014D                     __pcstackBANK1:
  1353                           	opt stack 0
  1354  00014D                     _sprintf$4194:
  1355                           	opt stack 0
  1356                           
  1357                           ; 4 bytes @ 0x0
  1358  00014D                     	ds	4
  1359  000151                     sprintf@ap:
  1360                           	opt stack 0
  1361                           
  1362                           ; 2 bytes @ 0x4
  1363  000151                     	ds	2
  1364  000153                     sprintf@flag:
  1365                           	opt stack 0
  1366                           
  1367                           ; 2 bytes @ 0x6
  1368  000153                     	ds	2
  1369  000155                     sprintf@val:
  1370                           	opt stack 0
  1371                           
  1372                           ; 4 bytes @ 0x8
  1373  000155                     	ds	4
  1374  000159                     sprintf@exp:
  1375                           	opt stack 0
  1376                           
  1377                           ; 2 bytes @ 0xC
  1378  000159                     	ds	2
  1379  00015B                     sprintf@tmpval:
  1380                           	opt stack 0
  1381                           
  1382                           ; 4 bytes @ 0xE
  1383  00015B                     	ds	4
  1384  00015F                     sprintf@prec:
  1385                           	opt stack 0
  1386                           
  1387                           ; 2 bytes @ 0x12
  1388  00015F                     	ds	2
  1389  000161                     sprintf@fval:
  1390                           	opt stack 0
  1391                           
  1392                           ; 4 bytes @ 0x14
  1393  000161                     	ds	4
  1394  000165                     sprintf@c:
  1395                           	opt stack 0
  1396                           
  1397                           ; 1 bytes @ 0x18
  1398  000165                     	ds	1
  1399  000166                     ??_main:
  1400                           
  1401                           ; 1 bytes @ 0x19
  1402  000166                     	ds	8
  1403                           tblptru	equ	0xFF8
  1404                           tblptrh	equ	0xFF7
  1405                           tblptrl	equ	0xFF6
  1406                           tablat	equ	0xFF5
  1407                           postinc0	equ	0xFEE
  1408                           wreg	equ	0xFE8
  1409                           
  1410                           	psect	cstackBANK0
  1411  000060                     __pcstackBANK0:
  1412                           	opt stack 0
  1413  000060                     ??_ISR_bassa:
  1414                           
  1415                           ; 1 bytes @ 0x0
  1416  000060                     	ds	17
  1417  000071                     ??_Joystick_Polling:
  1418  000071                     ??_isdigit:
  1419  000071                     ?___wmul:
  1420                           	opt stack 0
  1421  000071                     ?___awmod:
  1422                           	opt stack 0
  1423  000071                     ?___lwdiv:
  1424                           	opt stack 0
  1425  000071                     ?___lwmod:
  1426                           	opt stack 0
  1427  000071                     ?__tdiv_to_l_:
  1428                           	opt stack 0
  1429  000071                     ?__div_to_l_:
  1430                           	opt stack 0
  1431  000071                     ?___lldiv:
  1432                           	opt stack 0
  1433  000071                     ?___llmod:
  1434                           	opt stack 0
  1435  000071                     ?___xxtofl:
  1436                           	opt stack 0
  1437  000071                     CANOperationMode@mode:
  1438                           	opt stack 0
  1439  000071                     _CANisTxReady$3168:
  1440                           	opt stack 0
  1441  000071                     delay_set_quartz@frequency:
  1442                           	opt stack 0
  1443  000071                     ___wmul@multiplier:
  1444                           	opt stack 0
  1445  000071                     ___awmod@dividend:
  1446                           	opt stack 0
  1447  000071                     ___lwdiv@dividend:
  1448                           	opt stack 0
  1449  000071                     ___lwmod@dividend:
  1450                           	opt stack 0
  1451  000071                     CANsendMessage@identifier:
  1452                           	opt stack 0
  1453  000071                     CANSetMask@mask:
  1454                           	opt stack 0
  1455  000071                     CANSetFilter@filter:
  1456                           	opt stack 0
  1457  000071                     __div_to_l_@f1:
  1458                           	opt stack 0
  1459  000071                     ___flge@ff1:
  1460                           	opt stack 0
  1461  000071                     __tdiv_to_l_@f1:
  1462                           	opt stack 0
  1463  000071                     ___lldiv@dividend:
  1464                           	opt stack 0
  1465  000071                     ___llmod@dividend:
  1466                           	opt stack 0
  1467  000071                     ___xxtofl@val:
  1468                           	opt stack 0
  1469                           
  1470                           ; 4 bytes @ 0x11
  1471  000071                     	ds	1
  1472  000072                     Joystick_Polling@i:
  1473                           	opt stack 0
  1474  000072                     _isdigit$3774:
  1475                           	opt stack 0
  1476                           
  1477                           ; 1 bytes @ 0x12
  1478  000072                     	ds	1
  1479  000073                     isdigit@c:
  1480                           	opt stack 0
  1481  000073                     ___wmul@multiplicand:
  1482                           	opt stack 0
  1483  000073                     ___awmod@divisor:
  1484                           	opt stack 0
  1485  000073                     ___lwdiv@divisor:
  1486                           	opt stack 0
  1487  000073                     ___lwmod@divisor:
  1488                           	opt stack 0
  1489                           
  1490                           ; 2 bytes @ 0x13
  1491  000073                     	ds	2
  1492  000075                     ??___xxtofl:
  1493  000075                     CANSetMask@type:
  1494                           	opt stack 0
  1495  000075                     CANSetFilter@type:
  1496                           	opt stack 0
  1497  000075                     ___awmod@counter:
  1498                           	opt stack 0
  1499  000075                     ___lwmod@counter:
  1500                           	opt stack 0
  1501  000075                     CANsendMessage@data:
  1502                           	opt stack 0
  1503  000075                     ___wmul@product:
  1504                           	opt stack 0
  1505  000075                     ___lwdiv@quotient:
  1506                           	opt stack 0
  1507  000075                     __div_to_l_@f2:
  1508                           	opt stack 0
  1509  000075                     ___flge@ff2:
  1510                           	opt stack 0
  1511  000075                     __tdiv_to_l_@f2:
  1512                           	opt stack 0
  1513  000075                     ___lldiv@divisor:
  1514                           	opt stack 0
  1515  000075                     ___llmod@divisor:
  1516                           	opt stack 0
  1517                           
  1518                           ; 4 bytes @ 0x15
  1519  000075                     	ds	1
  1520  000076                     ??_CANSetMask:
  1521  000076                     ??_CANSetFilter:
  1522  000076                     ___awmod@sign:
  1523                           	opt stack 0
  1524                           
  1525                           ; 1 bytes @ 0x16
  1526  000076                     	ds	1
  1527  000077                     ?___awdiv:
  1528                           	opt stack 0
  1529  000077                     CANsendMessage@dataLength:
  1530                           	opt stack 0
  1531  000077                     ___lwdiv@counter:
  1532                           	opt stack 0
  1533  000077                     delay_ms@value_ms:
  1534                           	opt stack 0
  1535  000077                     ___awdiv@dividend:
  1536                           	opt stack 0
  1537                           
  1538                           ; 2 bytes @ 0x17
  1539  000077                     	ds	1
  1540  000078                     CANsendMessage@flags:
  1541                           	opt stack 0
  1542  000078                     utoa@buf:
  1543                           	opt stack 0
  1544                           
  1545                           ; 2 bytes @ 0x18
  1546  000078                     	ds	1
  1547  000079                     ??__tdiv_to_l_:
  1548  000079                     ??_CANsendMessage:
  1549  000079                     ??___flge:
  1550  000079                     LCD_send_command@D2:
  1551                           	opt stack 0
  1552  000079                     ___llmod@counter:
  1553                           	opt stack 0
  1554  000079                     ___xxtofl@sign:
  1555                           	opt stack 0
  1556  000079                     ___awdiv@divisor:
  1557                           	opt stack 0
  1558  000079                     __div_to_l_@quot:
  1559                           	opt stack 0
  1560  000079                     ___lldiv@quotient:
  1561                           	opt stack 0
  1562                           
  1563                           ; 4 bytes @ 0x19
  1564  000079                     	ds	1
  1565  00007A                     CANSetMask@numBuffer:
  1566                           	opt stack 0
  1567  00007A                     CANSetFilter@numBuffer:
  1568                           	opt stack 0
  1569  00007A                     LCD_send_command@D1:
  1570                           	opt stack 0
  1571  00007A                     ___xxtofl@exp:
  1572                           	opt stack 0
  1573  00007A                     utoa@val:
  1574                           	opt stack 0
  1575                           
  1576                           ; 2 bytes @ 0x1A
  1577  00007A                     	ds	1
  1578  00007B                     LCD_send_command@D0:
  1579                           	opt stack 0
  1580  00007B                     ___awdiv@counter:
  1581                           	opt stack 0
  1582  00007B                     CANSetMask@tamp:
  1583                           	opt stack 0
  1584  00007B                     CANSetFilter@tamp:
  1585                           	opt stack 0
  1586  00007B                     ___xxtofl@arg:
  1587                           	opt stack 0
  1588                           
  1589                           ; 4 bytes @ 0x1B
  1590  00007B                     	ds	1
  1591  00007C                     LCD_send_command@D3:
  1592                           	opt stack 0
  1593  00007C                     ___awdiv@sign:
  1594                           	opt stack 0
  1595  00007C                     utoa@base:
  1596                           	opt stack 0
  1597  00007C                     __tdiv_to_l_@quot:
  1598                           	opt stack 0
  1599                           
  1600                           ; 4 bytes @ 0x1C
  1601  00007C                     	ds	1
  1602  00007D                     LCD_shift_cursor@number_of_shift:
  1603                           	opt stack 0
  1604  00007D                     LCD_goto_line@line:
  1605                           	opt stack 0
  1606  00007D                     LCD_write_char@D3:
  1607                           	opt stack 0
  1608  00007D                     LCD_cursor@blinking:
  1609                           	opt stack 0
  1610  00007D                     __div_to_l_@cntr:
  1611                           	opt stack 0
  1612  00007D                     ___lldiv@counter:
  1613                           	opt stack 0
  1614  00007D                     ___awdiv@quotient:
  1615                           	opt stack 0
  1616  00007D                     CANsendMessage@tamp:
  1617                           	opt stack 0
  1618                           
  1619                           ; 4 bytes @ 0x1D
  1620  00007D                     	ds	1
  1621  00007E                     LCD_shift_cursor@shift:
  1622                           	opt stack 0
  1623  00007E                     LCD_write_char@D2:
  1624                           	opt stack 0
  1625  00007E                     LCD_cursor@active:
  1626                           	opt stack 0
  1627  00007E                     __div_to_l_@exp1:
  1628                           	opt stack 0
  1629  00007E                     utoa@v:
  1630                           	opt stack 0
  1631                           
  1632                           ; 2 bytes @ 0x1E
  1633  00007E                     	ds	1
  1634  00007F                     ?___fldiv:
  1635                           	opt stack 0
  1636  00007F                     ?___flmul:
  1637                           	opt stack 0
  1638  00007F                     CANInitialize@phaseSeg1:
  1639                           	opt stack 0
  1640  00007F                     LCD_shift_cursor@i:
  1641                           	opt stack 0
  1642  00007F                     LCD_write_char@D1:
  1643                           	opt stack 0
  1644  00007F                     LCD_initialize@quartz_frequency:
  1645                           	opt stack 0
  1646  00007F                     ___fldiv@b:
  1647                           	opt stack 0
  1648  00007F                     ___flmul@b:
  1649                           	opt stack 0
  1650                           
  1651                           ; 4 bytes @ 0x1F
  1652  00007F                     	ds	1
  1653  000080                     CANInitialize@phaseSeg2:
  1654                           	opt stack 0
  1655  000080                     LCD_goto_xy@y:
  1656                           	opt stack 0
  1657  000080                     LCD_write_char@D0:
  1658                           	opt stack 0
  1659  000080                     __tdiv_to_l_@cntr:
  1660                           	opt stack 0
  1661  000080                     utoa@c:
  1662                           	opt stack 0
  1663                           
  1664                           ; 1 bytes @ 0x20
  1665  000080                     	ds	1
  1666  000081                     CANInitialize@SJW:
  1667                           	opt stack 0
  1668  000081                     LCD_goto_xy@x:
  1669                           	opt stack 0
  1670  000081                     LCD_write_char@value:
  1671                           	opt stack 0
  1672  000081                     __tdiv_to_l_@exp1:
  1673                           	opt stack 0
  1674  000081                     itoa@buf:
  1675                           	opt stack 0
  1676                           
  1677                           ; 2 bytes @ 0x21
  1678  000081                     	ds	1
  1679  000082                     CANInitialize@BRP:
  1680                           	opt stack 0
  1681  000082                     LCD_write_message@buffer:
  1682                           	opt stack 0
  1683  000082                     LCD_write_string@buffer:
  1684                           	opt stack 0
  1685                           
  1686                           ; 2 bytes @ 0x22
  1687  000082                     	ds	1
  1688  000083                     CANInitialize@flags:
  1689                           	opt stack 0
  1690  000083                     itoa@val:
  1691                           	opt stack 0
  1692  000083                     ___fldiv@a:
  1693                           	opt stack 0
  1694  000083                     ___flmul@a:
  1695                           	opt stack 0
  1696                           
  1697                           ; 4 bytes @ 0x23
  1698  000083                     	ds	1
  1699  000084                     ??_CANInitialize:
  1700  000084                     
  1701                           ; 1 bytes @ 0x24
  1702  000084                     	ds	1
  1703  000085                     itoa@base:
  1704                           	opt stack 0
  1705                           
  1706                           ; 2 bytes @ 0x25
  1707  000085                     	ds	2
  1708  000087                     ??___fldiv:
  1709  000087                     ??___flmul:
  1710  000087                     itoa@cp:
  1711                           	opt stack 0
  1712                           
  1713                           ; 2 bytes @ 0x27
  1714  000087                     	ds	1
  1715  000088                     CANInitialize@propSeg:
  1716                           	opt stack 0
  1717                           
  1718                           ; 1 bytes @ 0x28
  1719  000088                     	ds	1
  1720  000089                     CANInitialize@FilterConfig1:
  1721                           	opt stack 0
  1722  000089                     LCD_write_integer@value:
  1723                           	opt stack 0
  1724                           
  1725                           ; 2 bytes @ 0x29
  1726  000089                     	ds	1
  1727  00008A                     CANInitialize@FilterConfig2:
  1728                           	opt stack 0
  1729                           
  1730                           ; 1 bytes @ 0x2A
  1731  00008A                     	ds	1
  1732  00008B                     LCD_write_integer@number_of_digits:
  1733                           	opt stack 0
  1734  00008B                     ___fldiv@sign:
  1735                           	opt stack 0
  1736  00008B                     ___flmul@sign:
  1737                           	opt stack 0
  1738                           
  1739                           ; 1 bytes @ 0x2B
  1740  00008B                     	ds	1
  1741  00008C                     LCD_write_integer@zero_cleaning:
  1742                           	opt stack 0
  1743  00008C                     ___flmul@aexp:
  1744                           	opt stack 0
  1745  00008C                     ___fldiv@rem:
  1746                           	opt stack 0
  1747                           
  1748                           ; 4 bytes @ 0x2C
  1749  00008C                     	ds	1
  1750  00008D                     ??_LCD_write_integer:
  1751  00008D                     ___flmul@grs:
  1752                           	opt stack 0
  1753                           
  1754                           ; 4 bytes @ 0x2D
  1755  00008D                     	ds	3
  1756  000090                     ___fldiv@new_exp:
  1757                           	opt stack 0
  1758                           
  1759                           ; 2 bytes @ 0x30
  1760  000090                     	ds	1
  1761  000091                     ___flmul@bexp:
  1762                           	opt stack 0
  1763                           
  1764                           ; 1 bytes @ 0x31
  1765  000091                     	ds	1
  1766  000092                     ___fldiv@grs:
  1767                           	opt stack 0
  1768  000092                     ___flmul@prod:
  1769                           	opt stack 0
  1770  000092                     LCD_write_integer@convertedInt:
  1771                           	opt stack 0
  1772                           
  1773                           ; 6 bytes @ 0x32
  1774  000092                     	ds	4
  1775  000096                     ___fldiv@bexp:
  1776                           	opt stack 0
  1777  000096                     ___flmul@temp:
  1778                           	opt stack 0
  1779                           
  1780                           ; 2 bytes @ 0x36
  1781  000096                     	ds	1
  1782  000097                     ___fldiv@aexp:
  1783                           	opt stack 0
  1784                           
  1785                           ; 1 bytes @ 0x37
  1786  000097                     	ds	1
  1787  000098                     ?_fround:
  1788                           	opt stack 0
  1789  000098                     ?_scale:
  1790                           	opt stack 0
  1791  000098                     ?___flneg:
  1792                           	opt stack 0
  1793  000098                     LCD_write_integer@index:
  1794                           	opt stack 0
  1795  000098                     ___flneg@f1:
  1796                           	opt stack 0
  1797                           
  1798                           ; 4 bytes @ 0x38
  1799  000098                     	ds	4
  1800  00009C                     _fround$4192:
  1801                           	opt stack 0
  1802  00009C                     _scale$4193:
  1803                           	opt stack 0
  1804                           
  1805                           ; 4 bytes @ 0x3C
  1806  00009C                     	ds	4
  1807  0000A0                     scale@scl:
  1808                           	opt stack 0
  1809  0000A0                     _fround$4191:
  1810                           	opt stack 0
  1811                           
  1812                           ; 4 bytes @ 0x40
  1813  0000A0                     	ds	4
  1814  0000A4                     fround@prec:
  1815                           	opt stack 0
  1816                           
  1817                           ; 1 bytes @ 0x44
  1818  0000A4                     	ds	1
  1819  0000A5                     ?___fladd:
  1820                           	opt stack 0
  1821  0000A5                     ___fladd@b:
  1822                           	opt stack 0
  1823                           
  1824                           ; 4 bytes @ 0x45
  1825  0000A5                     	ds	4
  1826  0000A9                     ___fladd@a:
  1827                           	opt stack 0
  1828                           
  1829                           ; 4 bytes @ 0x49
  1830  0000A9                     	ds	4
  1831  0000AD                     ??___fladd:
  1832                           
  1833                           ; 1 bytes @ 0x4D
  1834  0000AD                     	ds	8
  1835  0000B5                     ___fladd@signs:
  1836                           	opt stack 0
  1837                           
  1838                           ; 1 bytes @ 0x55
  1839  0000B5                     	ds	1
  1840  0000B6                     ___fladd@aexp:
  1841                           	opt stack 0
  1842                           
  1843                           ; 1 bytes @ 0x56
  1844  0000B6                     	ds	1
  1845  0000B7                     ___fladd@bexp:
  1846                           	opt stack 0
  1847                           
  1848                           ; 1 bytes @ 0x57
  1849  0000B7                     	ds	1
  1850  0000B8                     ___fladd@grs:
  1851                           	opt stack 0
  1852                           
  1853                           ; 1 bytes @ 0x58
  1854  0000B8                     	ds	1
  1855  0000B9                     ?___flsub:
  1856                           	opt stack 0
  1857  0000B9                     ?___fltol:
  1858                           	opt stack 0
  1859  0000B9                     ___fltol@f1:
  1860                           	opt stack 0
  1861  0000B9                     ___flsub@b:
  1862                           	opt stack 0
  1863                           
  1864                           ; 4 bytes @ 0x59
  1865  0000B9                     	ds	4
  1866  0000BD                     ??___fltol:
  1867  0000BD                     ___flsub@a:
  1868                           	opt stack 0
  1869                           
  1870                           ; 4 bytes @ 0x5D
  1871  0000BD                     	ds	4
  1872  0000C1                     ___fltol@sign1:
  1873                           	opt stack 0
  1874                           
  1875                           ; 1 bytes @ 0x61
  1876  0000C1                     	ds	1
  1877  0000C2                     ___fltol@exp1:
  1878                           	opt stack 0
  1879                           
  1880                           ; 1 bytes @ 0x62
  1881  0000C2                     	ds	1
  1882  0000C3                     ?_sprintf:
  1883                           	opt stack 0
  1884  0000C3                     sprintf@sp:
  1885                           	opt stack 0
  1886                           
  1887                           ; 2 bytes @ 0x63
  1888  0000C3                     	ds	2
  1889  0000C5                     sprintf@f:
  1890                           	opt stack 0
  1891                           
  1892                           ; 2 bytes @ 0x65
  1893  0000C5                     	ds	6
  1894  0000CB                     ??_sprintf:
  1895                           
  1896                           ; 1 bytes @ 0x6B
  1897  0000CB                     	ds	2
  1898  0000CD                     tblptru	equ	0xFF8
  1899                           tblptrh	equ	0xFF7
  1900                           tblptrl	equ	0xFF6
  1901                           tablat	equ	0xFF5
  1902                           postinc0	equ	0xFEE
  1903                           wreg	equ	0xFE8
  1904                           
  1905                           ; 1 bytes @ 0x6D
  1906                           
  1907                           	psect	cstackCOMRAM
  1908  000026                     __pcstackCOMRAM:
  1909                           	opt stack 0
  1910  000026                     _CANisRxReady$3170:
  1911                           	opt stack 0
  1912  000026                     i2_CANisTxReady$3168:
  1913                           	opt stack 0
  1914  000026                     CANreceiveMessage@msg:
  1915                           	opt stack 0
  1916  000026                     i2CANsendMessage@identifier:
  1917                           	opt stack 0
  1918                           
  1919                           ; 4 bytes @ 0x0
  1920  000026                     	ds	2
  1921  000028                     ??_CANreceiveMessage:
  1922                           
  1923                           ; 1 bytes @ 0x2
  1924  000028                     	ds	2
  1925  00002A                     i2CANsendMessage@data:
  1926                           	opt stack 0
  1927                           
  1928                           ; 2 bytes @ 0x4
  1929  00002A                     	ds	2
  1930  00002C                     i2CANsendMessage@dataLength:
  1931                           	opt stack 0
  1932                           
  1933                           ; 1 bytes @ 0x6
  1934  00002C                     	ds	1
  1935  00002D                     i2CANsendMessage@flags:
  1936                           	opt stack 0
  1937                           
  1938                           ; 1 bytes @ 0x7
  1939  00002D                     	ds	1
  1940  00002E                     ??i2_CANsendMessage:
  1941                           
  1942                           ; 1 bytes @ 0x8
  1943  00002E                     	ds	2
  1944  000030                     CANreceiveMessage@error:
  1945                           	opt stack 0
  1946                           
  1947                           ; 1 bytes @ 0xA
  1948  000030                     	ds	1
  1949  000031                     CANreceiveMessage@tamp:
  1950                           	opt stack 0
  1951                           
  1952                           ; 1 bytes @ 0xB
  1953  000031                     	ds	1
  1954  000032                     i2CANsendMessage@tamp:
  1955                           	opt stack 0
  1956                           
  1957                           ; 4 bytes @ 0xC
  1958  000032                     	ds	4
  1959  000036                     ??_ISR_alta:
  1960                           
  1961                           ; 1 bytes @ 0x10
  1962  000036                     	ds	18
  1963                           tblptru	equ	0xFF8
  1964                           tblptrh	equ	0xFF7
  1965                           tblptrl	equ	0xFF6
  1966                           tablat	equ	0xFF5
  1967                           postinc0	equ	0xFEE
  1968                           wreg	equ	0xFE8
  1969                           
  1970 ;;
  1971 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1972 ;;
  1973 ;; *************** function _main *****************
  1974 ;; Defined at:
  1975 ;;		line 215 in file "RemoteCan.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1991 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1992 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1993 ;;Total ram usage:        8 bytes
  1994 ;; Hardware stack levels required when called:   11
  1995 ;; This function calls:
  1996 ;;		_CAN_Tx
  1997 ;;		_CANisTxReady
  1998 ;;		_CANsendMessage
  1999 ;;		_Credits
  2000 ;;		_F1_Button_Polling
  2001 ;;		_F2_Button_Polling
  2002 ;;		_Joystick_Polling
  2003 ;;		_LCD_End
  2004 ;;		_LCD_Error
  2005 ;;		_LCD_Gap
  2006 ;;		_LCD_Handler
  2007 ;;		_LCD_Park
  2008 ;;		_LCD_Parking
  2009 ;;		_LCD_goto_line
  2010 ;;		_LCD_initialize
  2011 ;;		_LCD_write_message
  2012 ;;		_PWR_Button_Polling
  2013 ;;		___awdiv
  2014 ;;		___fladd
  2015 ;;		___flmul
  2016 ;;		___flneg
  2017 ;;		___fltol
  2018 ;;		___xxtofl
  2019 ;;		_board_initialization
  2020 ;;		_delay_ms
  2021 ;; This function is called by:
  2022 ;;		Startup code after reset
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text0
  2027  010B06                     __ptext0:
  2028                           	opt stack 0
  2029  010B06                     _main:
  2030                           	opt stack 20
  2031                           
  2032                           ;RemoteCan.c: 216: board_initialization();
  2033                           
  2034                           ;incstack = 0
  2035  010B06  EC49  F0AF         	call	_board_initialization	;wreg free
  2036                           
  2037                           ;RemoteCan.c: 218: JoystickConstants[0] = 0.703;
  2038  010B0A  0ECF               	movlw	207
  2039  010B0C  0100               	movlb	0	; () banked
  2040  010B0E  6FCD               	movwf	_JoystickConstants& (0+255),b	;volatile
  2041  010B10  0EF7               	movlw	247
  2042  010B12  6FCE               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  2043  010B14  0E33               	movlw	51
  2044  010B16  6FCF               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  2045  010B18  0E3F               	movlw	63
  2046  010B1A  6FD0               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;RemoteCan.c: 219: JoystickConstants[1] = 25;
  2050  010B1C  0E00               	movlw	0
  2051  010B1E  0100               	movlb	0	; () banked
  2052  010B20  6FD1               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2053  010B22  0E00               	movlw	0
  2054  010B24  6FD2               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2055  010B26  0EC8               	movlw	200
  2056  010B28  6FD3               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2057  010B2A  0E41               	movlw	65
  2058  010B2C  6FD4               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;RemoteCan.c: 221: data_brake [1] = 0;
  2062  010B2E  0E00               	movlw	0
  2063  010B30  0101               	movlb	1	; () banked
  2064  010B32  6F2E               	movwf	(_data_brake+1)& (0+255),b
  2065                           
  2066                           ; BSR set to: 1
  2067                           ;RemoteCan.c: 223: if (PORTBbits.RB1 == 1) {
  2068  010B34  B281               	btfsc	3969,1,c	;volatile
  2069                           
  2070                           ; BSR set to: 1
  2071                           ;RemoteCan.c: 224: LCD_4TH_ROW_MODE = 1;
  2072  010B36  8648               	bsf	_LCD_4TH_ROW_MODE/(0+8),_LCD_4TH_ROW_MODE& (0+7),c	;volatile
  2073                           
  2074                           ; BSR set to: 1
  2075                           ;RemoteCan.c: 225: }
  2076                           ;RemoteCan.c: 227: Joystick_Polling();
  2077                           
  2078                           ; BSR set to: 1
  2079  010B38  EC34  F0B2         	call	_Joystick_Polling	;wreg free
  2080                           
  2081                           ;RemoteCan.c: 228: center_value_Y = JoystickValues[1];
  2082  010B3C  C0DE  F0E5         	movff	_JoystickValues+1,_center_value_Y	;volatile
  2083  010B40                     l9567:
  2084                           
  2085                           ;RemoteCan.c: 233: PWR_Button_Polling();
  2086  010B40  EC06  F0B4         	call	_PWR_Button_Polling	;wreg free
  2087                           
  2088                           ;RemoteCan.c: 234: F1_Button_Polling();
  2089  010B44  EC30  F0B4         	call	_F1_Button_Polling	;wreg free
  2090                           
  2091                           ;RemoteCan.c: 235: F2_Button_Polling();
  2092  010B48  EC22  F0B4         	call	_F2_Button_Polling	;wreg free
  2093                           
  2094                           ;RemoteCan.c: 238: if (power_switch == 0) {
  2095  010B4C  B649               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  2096  010B4E  D0CB               	goto	l822
  2097                           
  2098                           ;RemoteCan.c: 239: dir = 1;
  2099  010B50  0E01               	movlw	1
  2100  010B52  0100               	movlb	0	; () banked
  2101  010B54  6FE7               	movwf	_dir& (0+255),b	;volatile
  2102                           
  2103                           ;RemoteCan.c: 240: set_speed = 0;
  2104  010B56  0E00               	movlw	0
  2105  010B58  0100               	movlb	0	; () banked
  2106  010B5A  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2107  010B5C  0E00               	movlw	0
  2108  010B5E  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  2109                           
  2110                           ;RemoteCan.c: 241: data_steering [0] = 90;
  2111  010B60  0E5A               	movlw	90
  2112  010B62  0101               	movlb	1	; () banked
  2113  010B64  6F3D               	movwf	_data_steering& (0+255),b
  2114                           
  2115                           ;RemoteCan.c: 242: data_brake [0] = 0b00000000;
  2116  010B66  0E00               	movlw	0
  2117  010B68  0101               	movlb	1	; () banked
  2118  010B6A  6F2D               	movwf	_data_brake& (0+255),b
  2119                           
  2120                           ; BSR set to: 1
  2121                           ;RemoteCan.c: 243: CAN_Tx();
  2122  010B6C  ECEC  F0AE         	call	_CAN_Tx	;wreg free
  2123                           
  2124                           ;RemoteCan.c: 244: PORTDbits.RD6 = 0;
  2125  010B70  9C83               	bcf	3971,6,c	;volatile
  2126                           
  2127                           ;RemoteCan.c: 245: PORTDbits.RD5 = 0;
  2128  010B72  9A83               	bcf	3971,5,c	;volatile
  2129                           
  2130                           ;RemoteCan.c: 246: LCD_initialize(16);
  2131  010B74  0E10               	movlw	16
  2132  010B76  EC1D  F0AC         	call	_LCD_initialize
  2133                           
  2134                           ;RemoteCan.c: 247: LCD_goto_line(1);
  2135  010B7A  0E01               	movlw	1
  2136  010B7C  EC5A  F0AD         	call	_LCD_goto_line
  2137                           
  2138                           ;RemoteCan.c: 248: LCD_write_message("====================");
  2139  010B80  0E6A               	movlw	low STR_1
  2140  010B82  0100               	movlb	0	; () banked
  2141  010B84  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  2142  010B86  0EFF               	movlw	high STR_1
  2143  010B88  0100               	movlb	0	; () banked
  2144  010B8A  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2145  010B8C  EC60  F0B3         	call	_LCD_write_message	;wreg free
  2146                           
  2147                           ;RemoteCan.c: 249: LCD_goto_line(2);
  2148  010B90  0E02               	movlw	2
  2149  010B92  EC5A  F0AD         	call	_LCD_goto_line
  2150                           
  2151                           ;RemoteCan.c: 250: LCD_write_message("==> VEHICLE  OFF <==");
  2152  010B96  0E40               	movlw	low STR_2
  2153  010B98  0100               	movlb	0	; () banked
  2154  010B9A  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  2155  010B9C  0EFF               	movlw	high STR_2
  2156  010B9E  0100               	movlb	0	; () banked
  2157  010BA0  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2158  010BA2  EC60  F0B3         	call	_LCD_write_message	;wreg free
  2159                           
  2160                           ;RemoteCan.c: 251: LCD_goto_line(3);
  2161  010BA6  0E03               	movlw	3
  2162  010BA8  EC5A  F0AD         	call	_LCD_goto_line
  2163                           
  2164                           ;RemoteCan.c: 252: LCD_write_message("  Press the button  ");
  2165  010BAC  0E1A               	movlw	low STR_3
  2166  010BAE  0100               	movlb	0	; () banked
  2167  010BB0  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  2168  010BB2  0EFE               	movlw	high STR_3
  2169  010BB4  0100               	movlb	0	; () banked
  2170  010BB6  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2171  010BB8  EC60  F0B3         	call	_LCD_write_message	;wreg free
  2172                           
  2173                           ;RemoteCan.c: 253: LCD_goto_line(4);
  2174  010BBC  0E04               	movlw	4
  2175  010BBE  EC5A  F0AD         	call	_LCD_goto_line
  2176                           
  2177                           ;RemoteCan.c: 254: LCD_write_message("====================");
  2178  010BC2  0E6A               	movlw	low STR_1
  2179  010BC4  0100               	movlb	0	; () banked
  2180  010BC6  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  2181  010BC8  0EFF               	movlw	high STR_1
  2182  010BCA  0100               	movlb	0	; () banked
  2183  010BCC  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  2184  010BCE  EC60  F0B3         	call	_LCD_write_message	;wreg free
  2185                           
  2186                           ;RemoteCan.c: 255: while (power_switch == 0) {
  2187  010BD2  D082               	goto	l9623
  2188  010BD4                     l9601:
  2189                           
  2190                           ;RemoteCan.c: 256: if ((time_counter - pr_time_1) >= 30) {
  2191  010BD4  C0D9  F166         	movff	_pr_time_1,??_main	;volatile
  2192  010BD8  C0DA  F167         	movff	_pr_time_1+1,??_main+1	;volatile
  2193  010BDC  C0DB  F168         	movff	_pr_time_1+2,??_main+2	;volatile
  2194  010BE0  C0DC  F169         	movff	_pr_time_1+3,??_main+3	;volatile
  2195  010BE4  0101               	movlb	1	; () banked
  2196  010BE6  1F66               	comf	??_main& (0+255),f,b
  2197  010BE8  1F67               	comf	(??_main+1)& (0+255),f,b
  2198  010BEA  1F68               	comf	(??_main+2)& (0+255),f,b
  2199  010BEC  1F69               	comf	(??_main+3)& (0+255),f,b
  2200  010BEE  2B66               	incf	??_main& (0+255),f,b
  2201  010BF0  0E00               	movlw	0
  2202  010BF2  2367               	addwfc	(??_main+1)& (0+255),f,b
  2203  010BF4  2368               	addwfc	(??_main+2)& (0+255),f,b
  2204  010BF6  2369               	addwfc	(??_main+3)& (0+255),f,b
  2205  010BF8  5019               	movf	_time_counter,w,c	;volatile
  2206  010BFA  0101               	movlb	1	; () banked
  2207  010BFC  2566               	addwf	??_main& (0+255),w,b
  2208  010BFE  0101               	movlb	1	; () banked
  2209  010C00  6F6A               	movwf	(??_main+4)& (0+255),b
  2210  010C02  501A               	movf	_time_counter+1,w,c	;volatile
  2211  010C04  0101               	movlb	1	; () banked
  2212  010C06  2167               	addwfc	(??_main+1)& (0+255),w,b
  2213  010C08  0101               	movlb	1	; () banked
  2214  010C0A  6F6B               	movwf	(??_main+5)& (0+255),b
  2215  010C0C  501B               	movf	_time_counter+2,w,c	;volatile
  2216  010C0E  0101               	movlb	1	; () banked
  2217  010C10  2168               	addwfc	(??_main+2)& (0+255),w,b
  2218  010C12  0101               	movlb	1	; () banked
  2219  010C14  6F6C               	movwf	(??_main+6)& (0+255),b
  2220  010C16  501C               	movf	_time_counter+3,w,c	;volatile
  2221  010C18  0101               	movlb	1	; () banked
  2222  010C1A  2169               	addwfc	(??_main+3)& (0+255),w,b
  2223  010C1C  0101               	movlb	1	; () banked
  2224  010C1E  6F6D               	movwf	(??_main+7)& (0+255),b
  2225  010C20  0101               	movlb	1	; () banked
  2226  010C22  516D               	movf	(??_main+7)& (0+255),w,b
  2227  010C24  0101               	movlb	1	; () banked
  2228  010C26  116C               	iorwf	(??_main+6)& (0+255),w,b
  2229  010C28  0101               	movlb	1	; () banked
  2230  010C2A  116B               	iorwf	(??_main+5)& (0+255),w,b
  2231  010C2C  E105               	bnz	u12680
  2232  010C2E  0E1E               	movlw	30
  2233  010C30  0101               	movlb	1	; () banked
  2234  010C32  5D6A               	subwf	(??_main+4)& (0+255),w,b
  2235  010C34  A0D8               	btfss	status,0,c
  2236  010C36  D03D               	goto	l9609
  2237  010C38                     u12680:
  2238                           
  2239                           ; BSR set to: 1
  2240                           ;RemoteCan.c: 257: pr_time_1 = time_counter;
  2241  010C38  C019  F0D9         	movff	_time_counter,_pr_time_1	;volatile
  2242  010C3C  C01A  F0DA         	movff	_time_counter+1,_pr_time_1+1	;volatile
  2243  010C40  C01B  F0DB         	movff	_time_counter+2,_pr_time_1+2	;volatile
  2244  010C44  C01C  F0DC         	movff	_time_counter+3,_pr_time_1+3	;volatile
  2245                           
  2246                           ;RemoteCan.c: 258: if (pwr_credits == 0) {
  2247  010C48  B849               	btfsc	_pwr_credits/(0+8),_pwr_credits& (0+7),c	;volatile
  2248  010C4A  D010               	goto	l9607
  2249                           
  2250                           ; BSR set to: 1
  2251                           ;RemoteCan.c: 259: PORTDbits.RD7 = ~PORTDbits.RD7;
  2252  010C4C  AE83               	btfss	3971,7,c	;volatile
  2253  010C4E  D002               	goto	u12700
  2254  010C50  0E01               	movlw	1
  2255  010C52  D001               	goto	u12706
  2256  010C54                     u12700:
  2257  010C54  0E00               	movlw	0
  2258  010C56                     u12706:
  2259  010C56  0AFF               	xorlw	255
  2260  010C58  0101               	movlb	1	; () banked
  2261  010C5A  6F66               	movwf	??_main& (0+255),b
  2262  010C5C  0101               	movlb	1	; () banked
  2263  010C5E  3366               	rrcf	??_main& (0+255),f,b
  2264  010C60  3366               	rrcf	??_main& (0+255),f,b
  2265  010C62  5083               	movf	3971,w,c	;volatile
  2266  010C64  0101               	movlb	1	; () banked
  2267  010C66  1966               	xorwf	??_main& (0+255),w,b
  2268  010C68  0B7F               	andlw	-129
  2269  010C6A  D021               	goto	L1
  2270  010C6C                     l9607:
  2271                           
  2272                           ; BSR set to: 1
  2273                           ;RemoteCan.c: 261: PORTDbits.RD6 = ~PORTDbits.RD6;
  2274  010C6C  AC83               	btfss	3971,6,c	;volatile
  2275  010C6E  D002               	goto	u12710
  2276  010C70  0E01               	movlw	1
  2277  010C72  D001               	goto	u12716
  2278  010C74                     u12710:
  2279  010C74  0E00               	movlw	0
  2280  010C76                     u12716:
  2281  010C76  0AFF               	xorlw	255
  2282  010C78  0101               	movlb	1	; () banked
  2283  010C7A  6F66               	movwf	??_main& (0+255),b
  2284  010C7C  0101               	movlb	1	; () banked
  2285  010C7E  3B66               	swapf	??_main& (0+255),f,b
  2286  010C80  4766               	rlncf	??_main& (0+255),f,b
  2287  010C82  4766               	rlncf	??_main& (0+255),f,b
  2288  010C84  5083               	movf	3971,w,c	;volatile
  2289  010C86  0101               	movlb	1	; () banked
  2290  010C88  1966               	xorwf	??_main& (0+255),w,b
  2291  010C8A  0BBF               	andlw	-65
  2292  010C8C  1966               	xorwf	??_main& (0+255),w,b
  2293  010C8E  6E83               	movwf	3971,c	;volatile
  2294                           
  2295                           ;RemoteCan.c: 262: PORTDbits.RD5 = ~PORTDbits.RD5;
  2296  010C90  AA83               	btfss	3971,5,c	;volatile
  2297  010C92  D002               	goto	u12720
  2298  010C94  0E01               	movlw	1
  2299  010C96  D001               	goto	u12726
  2300  010C98                     u12720:
  2301  010C98  0E00               	movlw	0
  2302  010C9A                     u12726:
  2303  010C9A  0AFF               	xorlw	255
  2304  010C9C  0101               	movlb	1	; () banked
  2305  010C9E  6F66               	movwf	??_main& (0+255),b
  2306  010CA0  0101               	movlb	1	; () banked
  2307  010CA2  3B66               	swapf	??_main& (0+255),f,b
  2308  010CA4  4766               	rlncf	??_main& (0+255),f,b
  2309  010CA6  5083               	movf	3971,w,c	;volatile
  2310  010CA8  0101               	movlb	1	; () banked
  2311  010CAA  1966               	xorwf	??_main& (0+255),w,b
  2312  010CAC  0BDF               	andlw	-33
  2313  010CAE                     L1:
  2314  010CAE  1966               	xorwf	??_main& (0+255),w,b
  2315  010CB0  6E83               	movwf	3971,c	;volatile
  2316  010CB2                     l9609:
  2317                           
  2318                           ; BSR set to: 1
  2319                           ;RemoteCan.c: 263: }
  2320                           ;RemoteCan.c: 264: }
  2321                           ;RemoteCan.c: 265: if (((PORTBbits.RB1 == 1)&&(PORTBbits.RB4 == 1))&&(pwr_credits == 0))
      +                           {
  2322  010CB2  B281               	btfsc	3969,1,c	;volatile
  2323                           
  2324                           ; BSR set to: 1
  2325  010CB4  A881               	btfss	3969,4,c	;volatile
  2326  010CB6  D007               	goto	l9619
  2327                           
  2328                           ; BSR set to: 1
  2329  010CB8  B849               	btfsc	_pwr_credits/(0+8),_pwr_credits& (0+7),c	;volatile
  2330  010CBA  D005               	goto	l9619
  2331                           
  2332                           ; BSR set to: 1
  2333                           ;RemoteCan.c: 266: pwr_credits = 1;
  2334  010CBC  8849               	bsf	_pwr_credits/(0+8),_pwr_credits& (0+7),c	;volatile
  2335                           
  2336                           ;RemoteCan.c: 267: PORTDbits.RD7 = 1;
  2337  010CBE  8E83               	bsf	3971,7,c	;volatile
  2338                           
  2339                           ;RemoteCan.c: 268: PORTDbits.RD6 = 1;
  2340  010CC0  8C83               	bsf	3971,6,c	;volatile
  2341                           
  2342                           ; BSR set to: 1
  2343                           ;RemoteCan.c: 269: Credits();
  2344  010CC2  ECD1  F0B1         	call	_Credits	;wreg free
  2345  010CC6                     l9619:
  2346                           
  2347                           ;RemoteCan.c: 270: }
  2348                           ;RemoteCan.c: 271: PWR_Button_Polling();
  2349  010CC6  EC06  F0B4         	call	_PWR_Button_Polling	;wreg free
  2350                           
  2351                           ;RemoteCan.c: 272: delay_ms(10);
  2352  010CCA  0E00               	movlw	0
  2353  010CCC  0100               	movlb	0	; () banked
  2354  010CCE  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2355  010CD0  0E0A               	movlw	10
  2356  010CD2  6F77               	movwf	delay_ms@value_ms& (0+255),b
  2357  010CD4  EC0C  F0B3         	call	_delay_ms	;wreg free
  2358  010CD8                     l9623:
  2359  010CD8  A649               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  2360  010CDA  D77C               	goto	l9601
  2361                           
  2362                           ;RemoteCan.c: 273: }
  2363                           ;RemoteCan.c: 274: pwr_credits = 0;
  2364  010CDC  9849               	bcf	_pwr_credits/(0+8),_pwr_credits& (0+7),c	;volatile
  2365                           
  2366                           ;RemoteCan.c: 275: PORTDbits.RD6 = 0;
  2367  010CDE  9C83               	bcf	3971,6,c	;volatile
  2368                           
  2369                           ;RemoteCan.c: 276: PORTDbits.RD5 = 0;
  2370  010CE0  9A83               	bcf	3971,5,c	;volatile
  2371                           
  2372                           ;RemoteCan.c: 277: PORTDbits.RD7 = 0;
  2373  010CE2  9E83               	bcf	3971,7,c	;volatile
  2374                           
  2375                           ;RemoteCan.c: 278: display_refresh = 1;
  2376  010CE4  8E48               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  2377  010CE6                     l822:
  2378                           
  2379                           ;RemoteCan.c: 279: }
  2380                           ;RemoteCan.c: 282: if (PORTAbits.RA2 == 1) {
  2381  010CE6  A480               	btfss	3968,2,c	;volatile
  2382  010CE8  D004               	goto	l830
  2383                           
  2384                           ;RemoteCan.c: 283: switch_position = 0;
  2385  010CEA  0E00               	movlw	0
  2386  010CEC  0100               	movlb	0	; () banked
  2387  010CEE  6FEB               	movwf	_switch_position& (0+255),b	;volatile
  2388                           
  2389                           ;RemoteCan.c: 284: } else {
  2390  010CF0  D00D               	goto	l9631
  2391  010CF2                     l830:
  2392                           
  2393                           ;RemoteCan.c: 285: if (PORTAbits.RA3 == 0) {
  2394  010CF2  B680               	btfsc	3968,3,c	;volatile
  2395  010CF4  D005               	goto	l9629
  2396                           
  2397                           ;RemoteCan.c: 286: switch_position = 1;
  2398  010CF6  0E01               	movlw	1
  2399  010CF8  0100               	movlb	0	; () banked
  2400  010CFA  6FEB               	movwf	_switch_position& (0+255),b	;volatile
  2401                           
  2402                           ;RemoteCan.c: 287: dir = 1;
  2403  010CFC  0E01               	movlw	1
  2404  010CFE  D004               	goto	L2
  2405  010D00                     l9629:
  2406                           
  2407                           ;RemoteCan.c: 289: switch_position = 2;
  2408  010D00  0E02               	movlw	2
  2409  010D02  0100               	movlb	0	; () banked
  2410  010D04  6FEB               	movwf	_switch_position& (0+255),b	;volatile
  2411                           
  2412                           ;RemoteCan.c: 290: dir = 0;
  2413  010D06  0E00               	movlw	0
  2414  010D08                     L2:
  2415  010D08  0100               	movlb	0	; () banked
  2416  010D0A  6FE7               	movwf	_dir& (0+255),b	;volatile
  2417  010D0C                     l9631:
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;RemoteCan.c: 291: }
  2421                           ;RemoteCan.c: 292: }
  2422                           ;RemoteCan.c: 295: if (F1_switch == 1) {
  2423  010D0C  A248               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  2424  010D0E  D0C5               	goto	l834
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;RemoteCan.c: 296: y = 0;
  2428  010D10  9C4A               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  2429                           
  2430                           ;RemoteCan.c: 297: if ((x == 0)&&(F2_switch == 0)) {
  2431  010D12  AA4A               	btfss	_x/(0+8),_x& (0+7),c	;volatile
  2432                           
  2433                           ; BSR set to: 0
  2434  010D14  B448               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2435  010D16  D02D               	goto	l9649
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;RemoteCan.c: 298: space_available = 0;
  2439  010D18  9C49               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;RemoteCan.c: 299: parking_state = 1;
  2443  010D1A  0E01               	movlw	1
  2444  010D1C  0100               	movlb	0	; () banked
  2445  010D1E  6FE9               	movwf	_parking_state& (0+255),b	;volatile
  2446                           
  2447                           ;RemoteCan.c: 300: JoystickConstants[1] = 8;
  2448  010D20  0E00               	movlw	0
  2449  010D22  0100               	movlb	0	; () banked
  2450  010D24  6FD1               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2451  010D26  0E00               	movlw	0
  2452  010D28  6FD2               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2453  010D2A  0E00               	movlw	0
  2454  010D2C  6FD3               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2455  010D2E  0E41               	movlw	65
  2456  010D30  6FD4               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2457  010D32                     l9641:
  2458  010D32  ECD4  F0B3         	call	_CANisTxReady	;wreg free
  2459  010D36  0900               	iorlw	0
  2460  010D38  B4D8               	btfsc	status,2,c
  2461  010D3A  D7FB               	goto	l9641
  2462                           
  2463                           ;RemoteCan.c: 302: park_assist_state[0] = 0b00000001;
  2464  010D3C  0E01               	movlw	1
  2465  010D3E  0101               	movlb	1	; () banked
  2466  010D40  6F45               	movwf	_park_assist_state& (0+255),b
  2467                           
  2468                           ; BSR set to: 1
  2469                           ;RemoteCan.c: 303: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2470  010D42  0E0C               	movlw	12
  2471  010D44  0100               	movlb	0	; () banked
  2472  010D46  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  2473  010D48  0E00               	movlw	0
  2474  010D4A  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2475  010D4C  0E00               	movlw	0
  2476  010D4E  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2477  010D50  0E00               	movlw	0
  2478  010D52  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2479  010D54  0E45               	movlw	low _park_assist_state
  2480  010D56  0100               	movlb	0	; () banked
  2481  010D58  6F75               	movwf	CANsendMessage@data& (0+255),b
  2482  010D5A  0E01               	movlw	high _park_assist_state
  2483  010D5C  0100               	movlb	0	; () banked
  2484  010D5E  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  2485  010D60  0E08               	movlw	8
  2486  010D62  0100               	movlb	0	; () banked
  2487  010D64  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  2488  010D66  0EBC               	movlw	188
  2489  010D68  0100               	movlb	0	; () banked
  2490  010D6A  6F78               	movwf	CANsendMessage@flags& (0+255),b
  2491  010D6C  ECAE  F08E         	call	_CANsendMessage	;wreg free
  2492                           
  2493                           ;RemoteCan.c: 304: x = 1;
  2494  010D70  8A4A               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  2495  010D72                     l9649:
  2496                           
  2497                           ;RemoteCan.c: 305: }
  2498                           ;RemoteCan.c: 307: if ((F2_switch == 1)&&(space_available == 1)&&(space_gap_reached == 1
      +                          )) {
  2499  010D72  B448               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2500  010D74  AC49               	btfss	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2501  010D76  D029               	goto	l839
  2502  010D78  AE49               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2503  010D7A  D027               	goto	l839
  2504                           
  2505                           ;RemoteCan.c: 308: if (z == 0) {
  2506  010D7C  BE4A               	btfsc	_z/(0+8),_z& (0+7),c	;volatile
  2507  010D7E  D026               	goto	l9667
  2508                           
  2509                           ;RemoteCan.c: 309: parking_message_ID = 4;
  2510  010D80  0E04               	movlw	4
  2511  010D82  0100               	movlb	0	; () banked
  2512  010D84  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
  2513                           
  2514                           ;RemoteCan.c: 310: parking_state = 2;
  2515  010D86  0E02               	movlw	2
  2516  010D88  0100               	movlb	0	; () banked
  2517  010D8A  6FE9               	movwf	_parking_state& (0+255),b	;volatile
  2518  010D8C                     l9659:
  2519  010D8C  ECD4  F0B3         	call	_CANisTxReady	;wreg free
  2520  010D90  0900               	iorlw	0
  2521  010D92  B4D8               	btfsc	status,2,c
  2522  010D94  D7FB               	goto	l9659
  2523                           
  2524                           ;RemoteCan.c: 312: CANsendMessage(0b00000001110, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  2525  010D96  0E0E               	movlw	14
  2526  010D98  0100               	movlb	0	; () banked
  2527  010D9A  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  2528  010D9C  0E00               	movlw	0
  2529  010D9E  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2530  010DA0  0E00               	movlw	0
  2531  010DA2  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2532  010DA4  0E00               	movlw	0
  2533  010DA6  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2534  010DA8  0E25               	movlw	low _data
  2535  010DAA  0100               	movlb	0	; () banked
  2536  010DAC  6F75               	movwf	CANsendMessage@data& (0+255),b
  2537  010DAE  0E01               	movlw	high _data
  2538  010DB0  0100               	movlb	0	; () banked
  2539  010DB2  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  2540  010DB4  0E08               	movlw	8
  2541  010DB6  0100               	movlb	0	; () banked
  2542  010DB8  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  2543  010DBA  0EBC               	movlw	188
  2544  010DBC  0100               	movlb	0	; () banked
  2545  010DBE  6F78               	movwf	CANsendMessage@flags& (0+255),b
  2546  010DC0  ECAE  F08E         	call	_CANsendMessage	;wreg free
  2547                           
  2548                           ;RemoteCan.c: 313: x = 0;
  2549  010DC4  9A4A               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2550                           
  2551                           ;RemoteCan.c: 314: z = 1;
  2552  010DC6  8E4A               	bsf	_z/(0+8),_z& (0+7),c	;volatile
  2553                           
  2554                           ;RemoteCan.c: 315: }
  2555                           ;RemoteCan.c: 316: } else {
  2556  010DC8  D001               	goto	l9667
  2557  010DCA                     l839:
  2558                           
  2559                           ;RemoteCan.c: 317: z = 0;
  2560  010DCA  9E4A               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2561  010DCC                     l9667:
  2562                           
  2563                           ;RemoteCan.c: 318: }
  2564                           ;RemoteCan.c: 320: if ((time_counter - pr_time_5) >= 30) {
  2565  010DCC  C011  F166         	movff	_pr_time_5,??_main	;volatile
  2566  010DD0  C012  F167         	movff	_pr_time_5+1,??_main+1	;volatile
  2567  010DD4  C013  F168         	movff	_pr_time_5+2,??_main+2	;volatile
  2568  010DD8  C014  F169         	movff	_pr_time_5+3,??_main+3	;volatile
  2569  010DDC  0101               	movlb	1	; () banked
  2570  010DDE  1F66               	comf	??_main& (0+255),f,b
  2571  010DE0  1F67               	comf	(??_main+1)& (0+255),f,b
  2572  010DE2  1F68               	comf	(??_main+2)& (0+255),f,b
  2573  010DE4  1F69               	comf	(??_main+3)& (0+255),f,b
  2574  010DE6  2B66               	incf	??_main& (0+255),f,b
  2575  010DE8  0E00               	movlw	0
  2576  010DEA  2367               	addwfc	(??_main+1)& (0+255),f,b
  2577  010DEC  2368               	addwfc	(??_main+2)& (0+255),f,b
  2578  010DEE  2369               	addwfc	(??_main+3)& (0+255),f,b
  2579  010DF0  5019               	movf	_time_counter,w,c	;volatile
  2580  010DF2  0101               	movlb	1	; () banked
  2581  010DF4  2566               	addwf	??_main& (0+255),w,b
  2582  010DF6  0101               	movlb	1	; () banked
  2583  010DF8  6F6A               	movwf	(??_main+4)& (0+255),b
  2584  010DFA  501A               	movf	_time_counter+1,w,c	;volatile
  2585  010DFC  0101               	movlb	1	; () banked
  2586  010DFE  2167               	addwfc	(??_main+1)& (0+255),w,b
  2587  010E00  0101               	movlb	1	; () banked
  2588  010E02  6F6B               	movwf	(??_main+5)& (0+255),b
  2589  010E04  501B               	movf	_time_counter+2,w,c	;volatile
  2590  010E06  0101               	movlb	1	; () banked
  2591  010E08  2168               	addwfc	(??_main+2)& (0+255),w,b
  2592  010E0A  0101               	movlb	1	; () banked
  2593  010E0C  6F6C               	movwf	(??_main+6)& (0+255),b
  2594  010E0E  501C               	movf	_time_counter+3,w,c	;volatile
  2595  010E10  0101               	movlb	1	; () banked
  2596  010E12  2169               	addwfc	(??_main+3)& (0+255),w,b
  2597  010E14  0101               	movlb	1	; () banked
  2598  010E16  6F6D               	movwf	(??_main+7)& (0+255),b
  2599  010E18  0101               	movlb	1	; () banked
  2600  010E1A  516D               	movf	(??_main+7)& (0+255),w,b
  2601  010E1C  0101               	movlb	1	; () banked
  2602  010E1E  116C               	iorwf	(??_main+6)& (0+255),w,b
  2603  010E20  0101               	movlb	1	; () banked
  2604  010E22  116B               	iorwf	(??_main+5)& (0+255),w,b
  2605  010E24  E105               	bnz	u12880
  2606  010E26  0E1E               	movlw	30
  2607  010E28  0101               	movlb	1	; () banked
  2608  010E2A  5D6A               	subwf	(??_main+4)& (0+255),w,b
  2609  010E2C  A0D8               	btfss	status,0,c
  2610  010E2E  D070               	goto	l9709
  2611  010E30                     u12880:
  2612                           
  2613                           ; BSR set to: 1
  2614                           ;RemoteCan.c: 321: pr_time_5 = time_counter;
  2615  010E30  C019  F011         	movff	_time_counter,_pr_time_5	;volatile
  2616  010E34  C01A  F012         	movff	_time_counter+1,_pr_time_5+1	;volatile
  2617  010E38  C01B  F013         	movff	_time_counter+2,_pr_time_5+2	;volatile
  2618  010E3C  C01C  F014         	movff	_time_counter+3,_pr_time_5+3	;volatile
  2619                           
  2620                           ;RemoteCan.c: 322: if ((space_available == 1)&&(space_gap_reached == 1)) {
  2621  010E40  BC49               	btfsc	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2622                           
  2623                           ; BSR set to: 1
  2624  010E42  AE49               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2625  010E44  D017               	goto	l9677
  2626                           
  2627                           ; BSR set to: 1
  2628                           ;RemoteCan.c: 323: PORTDbits.RD6 = 1;
  2629  010E46  8C83               	bsf	3971,6,c	;volatile
  2630                           
  2631                           ;RemoteCan.c: 324: if (F2_switch == 0) {
  2632  010E48  B448               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2633  010E4A  D012               	goto	l847
  2634                           
  2635                           ; BSR set to: 1
  2636                           ;RemoteCan.c: 325: PORTDbits.RD5 = ~PORTDbits.RD5;
  2637  010E4C  AA83               	btfss	3971,5,c	;volatile
  2638  010E4E  D002               	goto	u12920
  2639  010E50  0E01               	movlw	1
  2640  010E52  D001               	goto	u12926
  2641  010E54                     u12920:
  2642  010E54  0E00               	movlw	0
  2643  010E56                     u12926:
  2644  010E56  0AFF               	xorlw	255
  2645  010E58  0101               	movlb	1	; () banked
  2646  010E5A  6F66               	movwf	??_main& (0+255),b
  2647  010E5C  0101               	movlb	1	; () banked
  2648  010E5E  3B66               	swapf	??_main& (0+255),f,b
  2649  010E60  4766               	rlncf	??_main& (0+255),f,b
  2650  010E62  5083               	movf	3971,w,c	;volatile
  2651  010E64  0101               	movlb	1	; () banked
  2652  010E66  1966               	xorwf	??_main& (0+255),w,b
  2653  010E68  0BDF               	andlw	-33
  2654  010E6A  1966               	xorwf	??_main& (0+255),w,b
  2655  010E6C  6E83               	movwf	3971,c	;volatile
  2656                           
  2657                           ;RemoteCan.c: 326: } else {
  2658  010E6E  D050               	goto	l9709
  2659  010E70                     l847:
  2660                           
  2661                           ; BSR set to: 1
  2662                           ;RemoteCan.c: 327: PORTDbits.RD5 = 1;
  2663  010E70  8A83               	bsf	3971,5,c	;volatile
  2664                           
  2665                           ; BSR set to: 1
  2666                           ;RemoteCan.c: 328: }
  2667                           ;RemoteCan.c: 329: } else {
  2668  010E72  D04E               	goto	l9709
  2669  010E74                     l9677:
  2670                           
  2671                           ; BSR set to: 1
  2672                           ;RemoteCan.c: 330: PORTDbits.RD6 = ~PORTDbits.RD6;
  2673  010E74  AC83               	btfss	3971,6,c	;volatile
  2674  010E76  D002               	goto	u12930
  2675  010E78  0E01               	movlw	1
  2676  010E7A  D001               	goto	u12936
  2677  010E7C                     u12930:
  2678  010E7C  0E00               	movlw	0
  2679  010E7E                     u12936:
  2680  010E7E  0AFF               	xorlw	255
  2681  010E80  0101               	movlb	1	; () banked
  2682  010E82  6F66               	movwf	??_main& (0+255),b
  2683  010E84  0101               	movlb	1	; () banked
  2684  010E86  3B66               	swapf	??_main& (0+255),f,b
  2685  010E88  4766               	rlncf	??_main& (0+255),f,b
  2686  010E8A  4766               	rlncf	??_main& (0+255),f,b
  2687  010E8C  5083               	movf	3971,w,c	;volatile
  2688  010E8E  0101               	movlb	1	; () banked
  2689  010E90  1966               	xorwf	??_main& (0+255),w,b
  2690  010E92  0BBF               	andlw	-65
  2691  010E94  1966               	xorwf	??_main& (0+255),w,b
  2692  010E96  6E83               	movwf	3971,c	;volatile
  2693  010E98  D03A               	goto	l9707
  2694  010E9A                     l834:
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;RemoteCan.c: 335: x = 0;
  2698  010E9A  9A4A               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2699                           
  2700                           ;RemoteCan.c: 336: z = 0;
  2701  010E9C  9E4A               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2702                           
  2703                           ;RemoteCan.c: 337: parking_message_E = 0;
  2704  010E9E  9449               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;RemoteCan.c: 338: parking_message_ID = 0;
  2708  010EA0  0E00               	movlw	0
  2709  010EA2  0100               	movlb	0	; () banked
  2710  010EA4  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
  2711                           
  2712                           ; BSR set to: 0
  2713                           ;RemoteCan.c: 339: F2_switch = 0;
  2714  010EA6  9448               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;RemoteCan.c: 340: space_available = 0;
  2718  010EA8  9C49               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;RemoteCan.c: 341: space_gap_reached = 0;
  2722  010EAA  9E49               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;RemoteCan.c: 342: PORTDbits.RD5 = 0;
  2726  010EAC  9A83               	bcf	3971,5,c	;volatile
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;RemoteCan.c: 343: PORTDbits.RD6 = 0;
  2730  010EAE  9C83               	bcf	3971,6,c	;volatile
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;RemoteCan.c: 344: if (y == 0) {
  2734  010EB0  BC4A               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  2735  010EB2  D02C               	goto	l9705
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;RemoteCan.c: 345: parking_state = 0;
  2739  010EB4  0E00               	movlw	0
  2740  010EB6  0100               	movlb	0	; () banked
  2741  010EB8  6FE9               	movwf	_parking_state& (0+255),b	;volatile
  2742                           
  2743                           ;RemoteCan.c: 346: JoystickConstants[1] = 25;
  2744  010EBA  0E00               	movlw	0
  2745  010EBC  0100               	movlb	0	; () banked
  2746  010EBE  6FD1               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2747  010EC0  0E00               	movlw	0
  2748  010EC2  6FD2               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2749  010EC4  0EC8               	movlw	200
  2750  010EC6  6FD3               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2751  010EC8  0E41               	movlw	65
  2752  010ECA  6FD4               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2753  010ECC                     l9697:
  2754  010ECC  ECD4  F0B3         	call	_CANisTxReady	;wreg free
  2755  010ED0  0900               	iorlw	0
  2756  010ED2  B4D8               	btfsc	status,2,c
  2757  010ED4  D7FB               	goto	l9697
  2758                           
  2759                           ;RemoteCan.c: 348: park_assist_state[0] = 0b00000000;
  2760  010ED6  0E00               	movlw	0
  2761  010ED8  0101               	movlb	1	; () banked
  2762  010EDA  6F45               	movwf	_park_assist_state& (0+255),b
  2763                           
  2764                           ; BSR set to: 1
  2765                           ;RemoteCan.c: 349: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2766  010EDC  0E0C               	movlw	12
  2767  010EDE  0100               	movlb	0	; () banked
  2768  010EE0  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  2769  010EE2  0E00               	movlw	0
  2770  010EE4  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2771  010EE6  0E00               	movlw	0
  2772  010EE8  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2773  010EEA  0E00               	movlw	0
  2774  010EEC  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2775  010EEE  0E45               	movlw	low _park_assist_state
  2776  010EF0  0100               	movlb	0	; () banked
  2777  010EF2  6F75               	movwf	CANsendMessage@data& (0+255),b
  2778  010EF4  0E01               	movlw	high _park_assist_state
  2779  010EF6  0100               	movlb	0	; () banked
  2780  010EF8  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  2781  010EFA  0E08               	movlw	8
  2782  010EFC  0100               	movlb	0	; () banked
  2783  010EFE  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  2784  010F00  0EBC               	movlw	188
  2785  010F02  0100               	movlb	0	; () banked
  2786  010F04  6F78               	movwf	CANsendMessage@flags& (0+255),b
  2787  010F06  ECAE  F08E         	call	_CANsendMessage	;wreg free
  2788                           
  2789                           ;RemoteCan.c: 350: y = 1;
  2790  010F0A  8C4A               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2791  010F0C                     l9705:
  2792                           
  2793                           ;RemoteCan.c: 351: }
  2794                           ;RemoteCan.c: 352: PORTDbits.RD6 = 0;
  2795  010F0C  9C83               	bcf	3971,6,c	;volatile
  2796  010F0E                     l9707:
  2797                           
  2798                           ;RemoteCan.c: 353: PORTDbits.RD5 = 0;
  2799  010F0E  9A83               	bcf	3971,5,c	;volatile
  2800  010F10                     l9709:
  2801                           
  2802                           ;RemoteCan.c: 354: }
  2803                           ;RemoteCan.c: 356: Joystick_Polling();
  2804  010F10  EC34  F0B2         	call	_Joystick_Polling	;wreg free
  2805                           
  2806                           ;RemoteCan.c: 359: if ((JoystickValues[1] < 10)&&(parking_state == 2)) {
  2807  010F14  0E0A               	movlw	10
  2808  010F16  0100               	movlb	0	; () banked
  2809  010F18  61DE               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2810  010F1A  D037               	goto	l9733
  2811                           
  2812                           ; BSR set to: 0
  2813  010F1C  0E02               	movlw	2
  2814  010F1E  0100               	movlb	0	; () banked
  2815  010F20  19E9               	xorwf	_parking_state& (0+255),w,b	;volatile
  2816  010F22  A4D8               	btfss	status,2,c
  2817  010F24  D032               	goto	l9733
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;RemoteCan.c: 361: parking_message_ID = 6;
  2821  010F26  0E06               	movlw	6
  2822  010F28  0100               	movlb	0	; () banked
  2823  010F2A  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;RemoteCan.c: 362: parking_error = 1;
  2827  010F2C  8249               	bsf	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;RemoteCan.c: 363: user_stop = 1;
  2831  010F2E  824A               	bsf	_user_stop/(0+8),_user_stop& (0+7),c	;volatile
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;RemoteCan.c: 364: F1_switch = 0;
  2835  010F30  9248               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  2836                           
  2837                           ; BSR set to: 0
  2838                           ;RemoteCan.c: 365: pr_time_6 = time_counter + (2000 / 10);
  2839  010F32  0EC8               	movlw	200
  2840  010F34  2419               	addwf	_time_counter,w,c	;volatile
  2841  010F36  6E15               	movwf	_pr_time_6,c	;volatile
  2842  010F38  0E00               	movlw	0
  2843  010F3A  201A               	addwfc	_time_counter+1,w,c	;volatile
  2844  010F3C  6E16               	movwf	_pr_time_6+1,c	;volatile
  2845  010F3E  0E00               	movlw	0
  2846  010F40  201B               	addwfc	_time_counter+2,w,c	;volatile
  2847  010F42  6E17               	movwf	_pr_time_6+2,c	;volatile
  2848  010F44  0E00               	movlw	0
  2849  010F46  201C               	addwfc	_time_counter+3,w,c	;volatile
  2850  010F48  6E18               	movwf	_pr_time_6+3,c	;volatile
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;RemoteCan.c: 367: park_assist_state[0] = 0b00000000;
  2854  010F4A  0E00               	movlw	0
  2855  010F4C  0101               	movlb	1	; () banked
  2856  010F4E  6F45               	movwf	_park_assist_state& (0+255),b
  2857  010F50                     l9727:
  2858  010F50  ECD4  F0B3         	call	_CANisTxReady	;wreg free
  2859  010F54  0900               	iorlw	0
  2860  010F56  B4D8               	btfsc	status,2,c
  2861  010F58  D7FB               	goto	l9727
  2862                           
  2863                           ;RemoteCan.c: 369: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2864  010F5A  0E0C               	movlw	12
  2865  010F5C  0100               	movlb	0	; () banked
  2866  010F5E  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  2867  010F60  0E00               	movlw	0
  2868  010F62  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2869  010F64  0E00               	movlw	0
  2870  010F66  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2871  010F68  0E00               	movlw	0
  2872  010F6A  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2873  010F6C  0E45               	movlw	low _park_assist_state
  2874  010F6E  0100               	movlb	0	; () banked
  2875  010F70  6F75               	movwf	CANsendMessage@data& (0+255),b
  2876  010F72  0E01               	movlw	high _park_assist_state
  2877  010F74  0100               	movlb	0	; () banked
  2878  010F76  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  2879  010F78  0E08               	movlw	8
  2880  010F7A  0100               	movlb	0	; () banked
  2881  010F7C  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  2882  010F7E  0EBC               	movlw	188
  2883  010F80  0100               	movlb	0	; () banked
  2884  010F82  6F78               	movwf	CANsendMessage@flags& (0+255),b
  2885  010F84  ECAE  F08E         	call	_CANsendMessage	;wreg free
  2886                           
  2887                           ;RemoteCan.c: 370: Can_Tx_Force = 1;
  2888  010F88  8048               	bsf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2889  010F8A                     l9733:
  2890                           
  2891                           ;RemoteCan.c: 371: }
  2892                           ;RemoteCan.c: 374: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2893  010F8A  0E00               	movlw	0
  2894  010F8C  0100               	movlb	0	; () banked
  2895  010F8E  6FA9               	movwf	___fladd@a& (0+255),b
  2896  010F90  0E00               	movlw	0
  2897  010F92  6FAA               	movwf	(___fladd@a+1)& (0+255),b
  2898  010F94  0E34               	movlw	52
  2899  010F96  6FAB               	movwf	(___fladd@a+2)& (0+255),b
  2900  010F98  0E43               	movlw	67
  2901  010F9A  6FAC               	movwf	(___fladd@a+3)& (0+255),b
  2902  010F9C  C0CD  F083         	movff	_JoystickConstants,___flmul@a	;volatile
  2903  010FA0  C0CE  F084         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  2904  010FA4  C0CF  F085         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  2905  010FA8  C0D0  F086         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  2906  010FAC  0100               	movlb	0	; () banked
  2907  010FAE  51DD               	movf	_JoystickValues& (0+255),w,b	;volatile
  2908  010FB0  0100               	movlb	0	; () banked
  2909  010FB2  6F71               	movwf	___xxtofl@val& (0+255),b
  2910  010FB4  6B72               	clrf	(___xxtofl@val+1)& (0+255),b
  2911  010FB6  6B73               	clrf	(___xxtofl@val+2)& (0+255),b
  2912  010FB8  6B74               	clrf	(___xxtofl@val+3)& (0+255),b
  2913  010FBA  0E00               	movlw	0
  2914  010FBC  EC18  F0A7         	call	___xxtofl
  2915  010FC0  C071  F07F         	movff	?___xxtofl,___flmul@b
  2916  010FC4  C072  F080         	movff	?___xxtofl+1,___flmul@b+1
  2917  010FC8  C073  F081         	movff	?___xxtofl+2,___flmul@b+2
  2918  010FCC  C074  F082         	movff	?___xxtofl+3,___flmul@b+3
  2919  010FD0  EC23  F09D         	call	___flmul	;wreg free
  2920  010FD4  C07F  F098         	movff	?___flmul,___flneg@f1
  2921  010FD8  C080  F099         	movff	?___flmul+1,___flneg@f1+1
  2922  010FDC  C081  F09A         	movff	?___flmul+2,___flneg@f1+2
  2923  010FE0  C082  F09B         	movff	?___flmul+3,___flneg@f1+3
  2924  010FE4  EC29  F0B3         	call	___flneg	;wreg free
  2925  010FE8  C098  F0A5         	movff	?___flneg,___fladd@b
  2926  010FEC  C099  F0A6         	movff	?___flneg+1,___fladd@b+1
  2927  010FF0  C09A  F0A7         	movff	?___flneg+2,___fladd@b+2
  2928  010FF4  C09B  F0A8         	movff	?___flneg+3,___fladd@b+3
  2929  010FF8  ECCF  F09A         	call	___fladd	;wreg free
  2930  010FFC  C0A5  F0B9         	movff	?___fladd,___fltol@f1
  2931  011000  C0A6  F0BA         	movff	?___fladd+1,___fltol@f1+1
  2932  011004  C0A7  F0BB         	movff	?___fladd+2,___fltol@f1+2
  2933  011008  C0A8  F0BC         	movff	?___fladd+3,___fltol@f1+3
  2934  01100C  ECD4  F0AC         	call	___fltol	;wreg free
  2935  011010  0100               	movlb	0	; () banked
  2936  011012  51B9               	movf	?___fltol& (0+255),w,b
  2937  011014  0101               	movlb	1	; () banked
  2938  011016  6F3D               	movwf	_data_steering& (0+255),b
  2939                           
  2940                           ; BSR set to: 1
  2941                           ;RemoteCan.c: 375: if (parking_state == 1) {
  2942  011018  0100               	movlb	0	; () banked
  2943  01101A  05E9               	decf	_parking_state& (0+255),w,b	;volatile
  2944  01101C  A4D8               	btfss	status,2,c
  2945  01101E  D05C               	goto	l859
  2946                           
  2947                           ; BSR set to: 0
  2948                           ;RemoteCan.c: 376: if (steering_correction_dir == 1) {
  2949  011020  A04A               	btfss	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2950  011022  D00F               	goto	l9741
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;RemoteCan.c: 377: check = data_steering[0] + steering_correction;
  2954  011024  0100               	movlb	0	; () banked
  2955  011026  51EA               	movf	_steering_correction& (0+255),w,b	;volatile
  2956  011028  C13D  F166         	movff	_data_steering,??_main
  2957  01102C  0101               	movlb	1	; () banked
  2958  01102E  6B67               	clrf	(??_main+1)& (0+255),b
  2959  011030  0101               	movlb	1	; () banked
  2960  011032  2766               	addwf	??_main& (0+255),f,b
  2961  011034  0E00               	movlw	0
  2962  011036  2367               	addwfc	(??_main+1)& (0+255),f,b
  2963  011038  C166  F0D5         	movff	??_main,_check	;volatile
  2964  01103C  C167  F0D6         	movff	??_main+1,_check+1	;volatile
  2965  011040  D01B               	goto	L3
  2966  011042                     l9741:
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;RemoteCan.c: 379: check = data_steering[0] - steering_correction;
  2970  011042  0100               	movlb	0	; () banked
  2971  011044  51EA               	movf	_steering_correction& (0+255),w,b	;volatile
  2972  011046  0101               	movlb	1	; () banked
  2973  011048  6F66               	movwf	??_main& (0+255),b
  2974  01104A  6B67               	clrf	(??_main+1)& (0+255),b
  2975  01104C  0101               	movlb	1	; () banked
  2976  01104E  1F66               	comf	??_main& (0+255),f,b
  2977  011050  1F67               	comf	(??_main+1)& (0+255),f,b
  2978  011052  4B66               	infsnz	??_main& (0+255),f,b
  2979  011054  2B67               	incf	(??_main+1)& (0+255),f,b
  2980  011056  0101               	movlb	1	; () banked
  2981  011058  513D               	movf	_data_steering& (0+255),w,b
  2982  01105A  0101               	movlb	1	; () banked
  2983  01105C  6F68               	movwf	(??_main+2)& (0+255),b
  2984  01105E  6B69               	clrf	(??_main+3)& (0+255),b
  2985  011060  0101               	movlb	1	; () banked
  2986  011062  5166               	movf	??_main& (0+255),w,b
  2987  011064  0101               	movlb	1	; () banked
  2988  011066  2768               	addwf	(??_main+2)& (0+255),f,b
  2989  011068  0101               	movlb	1	; () banked
  2990  01106A  5167               	movf	(??_main+1)& (0+255),w,b
  2991  01106C  0101               	movlb	1	; () banked
  2992  01106E  2369               	addwfc	(??_main+3)& (0+255),f,b
  2993  011070  C168  F0D5         	movff	??_main+2,_check	;volatile
  2994  011074  C169  F0D6         	movff	??_main+3,_check+1	;volatile
  2995  011078                     L3:
  2996  011078  0100               	movlb	0	; () banked
  2997  01107A  0E00               	movlw	0
  2998  01107C  BFD6               	btfsc	(_check+1)& (0+255),7,b	;volatile
  2999  01107E  0EFF               	movlw	-1
  3000  011080  6FD7               	movwf	(_check+2)& (0+255),b	;volatile
  3001  011082  6FD8               	movwf	(_check+3)& (0+255),b	;volatile
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;RemoteCan.c: 380: }
  3005                           ;RemoteCan.c: 381: if ((check >= 0)&&(check <= 180)) {
  3006  011084  0100               	movlb	0	; () banked
  3007  011086  BFD8               	btfsc	(_check+3)& (0+255),7,b	;volatile
  3008  011088  D012               	goto	l9747
  3009                           
  3010                           ; BSR set to: 0
  3011  01108A  0100               	movlb	0	; () banked
  3012  01108C  BFD8               	btfsc	(_check+3)& (0+255),7,b	;volatile
  3013  01108E  D00C               	goto	l9745
  3014  011090  0100               	movlb	0	; () banked
  3015  011092  51D8               	movf	(_check+3)& (0+255),w,b	;volatile
  3016  011094  0100               	movlb	0	; () banked
  3017  011096  11D7               	iorwf	(_check+2)& (0+255),w,b	;volatile
  3018  011098  0100               	movlb	0	; () banked
  3019  01109A  11D6               	iorwf	(_check+1)& (0+255),w,b	;volatile
  3020  01109C  E108               	bnz	l9747
  3021  01109E  0EB5               	movlw	181
  3022  0110A0  0100               	movlb	0	; () banked
  3023  0110A2  5DD5               	subwf	_check& (0+255),w,b	;volatile
  3024  0110A4  B0D8               	btfsc	status,0,c
  3025  0110A6  D003               	goto	l9747
  3026  0110A8                     l9745:
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;RemoteCan.c: 382: data_steering[0] = check;
  3030  0110A8  C0D5  F13D         	movff	_check,_data_steering	;volatile
  3031                           
  3032                           ;RemoteCan.c: 383: } else {
  3033  0110AC  D019               	goto	l866
  3034  0110AE                     l9747:
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;RemoteCan.c: 384: if (check > 180) {
  3038  0110AE  0100               	movlb	0	; () banked
  3039  0110B0  BFD8               	btfsc	(_check+3)& (0+255),7,b	;volatile
  3040  0110B2  D00E               	goto	l9751
  3041  0110B4  0100               	movlb	0	; () banked
  3042  0110B6  51D8               	movf	(_check+3)& (0+255),w,b	;volatile
  3043  0110B8  0100               	movlb	0	; () banked
  3044  0110BA  11D7               	iorwf	(_check+2)& (0+255),w,b	;volatile
  3045  0110BC  0100               	movlb	0	; () banked
  3046  0110BE  11D6               	iorwf	(_check+1)& (0+255),w,b	;volatile
  3047  0110C0  E105               	bnz	u13030
  3048  0110C2  0EB5               	movlw	181
  3049  0110C4  0100               	movlb	0	; () banked
  3050  0110C6  5DD5               	subwf	_check& (0+255),w,b	;volatile
  3051  0110C8  A0D8               	btfss	status,0,c
  3052  0110CA  D002               	goto	l9751
  3053  0110CC                     u13030:
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;RemoteCan.c: 385: data_steering[0] = 180;
  3057  0110CC  0EB4               	movlw	180
  3058  0110CE  D001               	goto	L4
  3059  0110D0                     l9751:
  3060                           
  3061                           ;RemoteCan.c: 387: data_steering[0] = 0;
  3062  0110D0  0E00               	movlw	0
  3063  0110D2                     L4:
  3064  0110D2  0101               	movlb	1	; () banked
  3065  0110D4  6F3D               	movwf	_data_steering& (0+255),b
  3066                           
  3067                           ; BSR set to: 1
  3068                           ;RemoteCan.c: 388: }
  3069                           ;RemoteCan.c: 389: }
  3070                           ;RemoteCan.c: 390: } else {
  3071                           
  3072                           ; BSR set to: 1
  3073  0110D6  D004               	goto	l866
  3074  0110D8                     l859:
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;RemoteCan.c: 391: steering_correction_dir = 0;
  3078  0110D8  904A               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;RemoteCan.c: 392: steering_correction = 0;
  3082  0110DA  0E00               	movlw	0
  3083  0110DC  0100               	movlb	0	; () banked
  3084  0110DE  6FEA               	movwf	_steering_correction& (0+255),b	;volatile
  3085  0110E0                     l866:
  3086                           
  3087                           ;RemoteCan.c: 393: }
  3088                           ;RemoteCan.c: 396: if (switch_position != 0) {
  3089  0110E0  0100               	movlb	0	; () banked
  3090  0110E2  51EB               	movf	_switch_position& (0+255),w,b	;volatile
  3091  0110E4  B4D8               	btfsc	status,2,c
  3092  0110E6  D0D2               	goto	l9789
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;RemoteCan.c: 397: if (JoystickValues[1] > (center_value_Y + 2)) {
  3096  0110E8  0100               	movlb	0	; () banked
  3097  0110EA  51DE               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  3098  0110EC  0101               	movlb	1	; () banked
  3099  0110EE  6F66               	movwf	??_main& (0+255),b
  3100  0110F0  6B67               	clrf	(??_main+1)& (0+255),b
  3101  0110F2  0100               	movlb	0	; () banked
  3102  0110F4  51E5               	movf	_center_value_Y& (0+255),w,b	;volatile
  3103  0110F6  0101               	movlb	1	; () banked
  3104  0110F8  6F68               	movwf	(??_main+2)& (0+255),b
  3105  0110FA  6B69               	clrf	(??_main+3)& (0+255),b
  3106  0110FC  0E02               	movlw	2
  3107  0110FE  0101               	movlb	1	; () banked
  3108  011100  2768               	addwf	(??_main+2)& (0+255),f,b
  3109  011102  0E00               	movlw	0
  3110  011104  2369               	addwfc	(??_main+3)& (0+255),f,b
  3111  011106  0101               	movlb	1	; () banked
  3112  011108  5166               	movf	??_main& (0+255),w,b
  3113  01110A  0101               	movlb	1	; () banked
  3114  01110C  5D68               	subwf	(??_main+2)& (0+255),w,b
  3115  01110E  0101               	movlb	1	; () banked
  3116  011110  5169               	movf	(??_main+3)& (0+255),w,b
  3117  011112  0A80               	xorlw	128
  3118  011114  0101               	movlb	1	; () banked
  3119  011116  6F6A               	movwf	(??_main+4)& (0+255),b
  3120  011118  0101               	movlb	1	; () banked
  3121  01111A  5167               	movf	(??_main+1)& (0+255),w,b
  3122  01111C  0A80               	xorlw	128
  3123  01111E  0101               	movlb	1	; () banked
  3124  011120  596A               	subwfb	(??_main+4)& (0+255),w,b
  3125  011122  B0D8               	btfsc	status,0,c
  3126  011124  D04F               	goto	l9763
  3127                           
  3128                           ; BSR set to: 1
  3129                           ;RemoteCan.c: 398: set_speed = (JoystickValues[1] - center_value_Y + 2)*(JoystickConstan
      +                          ts[1]);
  3130  011126  C0D1  F083         	movff	_JoystickConstants+4,___flmul@a	;volatile
  3131  01112A  C0D2  F084         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  3132  01112E  C0D3  F085         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  3133  011132  C0D4  F086         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  3134  011136  0100               	movlb	0	; () banked
  3135  011138  51E5               	movf	_center_value_Y& (0+255),w,b	;volatile
  3136  01113A  0101               	movlb	1	; () banked
  3137  01113C  6F66               	movwf	??_main& (0+255),b
  3138  01113E  6B67               	clrf	(??_main+1)& (0+255),b
  3139  011140  0101               	movlb	1	; () banked
  3140  011142  1F66               	comf	??_main& (0+255),f,b
  3141  011144  1F67               	comf	(??_main+1)& (0+255),f,b
  3142  011146  4B66               	infsnz	??_main& (0+255),f,b
  3143  011148  2B67               	incf	(??_main+1)& (0+255),f,b
  3144  01114A  0100               	movlb	0	; () banked
  3145  01114C  51DE               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  3146  01114E  0101               	movlb	1	; () banked
  3147  011150  6F68               	movwf	(??_main+2)& (0+255),b
  3148  011152  6B69               	clrf	(??_main+3)& (0+255),b
  3149  011154  0101               	movlb	1	; () banked
  3150  011156  5166               	movf	??_main& (0+255),w,b
  3151  011158  0101               	movlb	1	; () banked
  3152  01115A  2768               	addwf	(??_main+2)& (0+255),f,b
  3153  01115C  0101               	movlb	1	; () banked
  3154  01115E  5167               	movf	(??_main+1)& (0+255),w,b
  3155  011160  0101               	movlb	1	; () banked
  3156  011162  2369               	addwfc	(??_main+3)& (0+255),f,b
  3157  011164  0E02               	movlw	2
  3158  011166  0101               	movlb	1	; () banked
  3159  011168  2768               	addwf	(??_main+2)& (0+255),f,b
  3160  01116A  0E00               	movlw	0
  3161  01116C  2369               	addwfc	(??_main+3)& (0+255),f,b
  3162  01116E  C168  F071         	movff	??_main+2,___xxtofl@val
  3163  011172  C169  F072         	movff	??_main+3,___xxtofl@val+1
  3164  011176  0100               	movlb	0	; () banked
  3165  011178  0E00               	movlw	0
  3166  01117A  BF72               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  3167  01117C  0EFF               	movlw	-1
  3168  01117E  6F73               	movwf	(___xxtofl@val+2)& (0+255),b
  3169  011180  6F74               	movwf	(___xxtofl@val+3)& (0+255),b
  3170  011182  0E01               	movlw	1
  3171  011184  EC18  F0A7         	call	___xxtofl
  3172  011188  C071  F07F         	movff	?___xxtofl,___flmul@b
  3173  01118C  C072  F080         	movff	?___xxtofl+1,___flmul@b+1
  3174  011190  C073  F081         	movff	?___xxtofl+2,___flmul@b+2
  3175  011194  C074  F082         	movff	?___xxtofl+3,___flmul@b+3
  3176  011198  EC23  F09D         	call	___flmul	;wreg free
  3177  01119C  C07F  F0B9         	movff	?___flmul,___fltol@f1
  3178  0111A0  C080  F0BA         	movff	?___flmul+1,___fltol@f1+1
  3179  0111A4  C081  F0BB         	movff	?___flmul+2,___fltol@f1+2
  3180  0111A8  C082  F0BC         	movff	?___flmul+3,___fltol@f1+3
  3181  0111AC  ECD4  F0AC         	call	___fltol	;wreg free
  3182  0111B0  C0B9  F0E3         	movff	?___fltol,_set_speed	;volatile
  3183  0111B4  C0BA  F0E4         	movff	?___fltol+1,_set_speed+1	;volatile
  3184                           
  3185                           ;RemoteCan.c: 399: data_brake [0] = 3;
  3186  0111B8  0E03               	movlw	3
  3187  0111BA  D022               	goto	L5
  3188  0111BC                     l9761:
  3189                           
  3190                           ; BSR set to: 1
  3191                           ;RemoteCan.c: 400: data_brake [1] = 0;
  3192  0111BC  0E00               	movlw	0
  3193  0111BE  0101               	movlb	1	; () banked
  3194  0111C0  6F2E               	movwf	(_data_brake+1)& (0+255),b
  3195                           
  3196                           ;RemoteCan.c: 401: } else {
  3197  0111C2  D021               	goto	l9777
  3198  0111C4                     l9763:
  3199                           
  3200                           ; BSR set to: 1
  3201                           ;RemoteCan.c: 402: set_speed = 0;
  3202  0111C4  0E00               	movlw	0
  3203  0111C6  0100               	movlb	0	; () banked
  3204  0111C8  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  3205  0111CA  0E00               	movlw	0
  3206  0111CC  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;RemoteCan.c: 403: if (JoystickValues[1] <= 65) {
  3210  0111CE  0E42               	movlw	66
  3211  0111D0  0100               	movlb	0	; () banked
  3212  0111D2  61DE               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  3213  0111D4  D006               	goto	l9769
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;RemoteCan.c: 404: data_brake [0] = 0b00000010;
  3217  0111D6  0E02               	movlw	2
  3218  0111D8  0101               	movlb	1	; () banked
  3219  0111DA  6F2D               	movwf	_data_brake& (0+255),b
  3220                           
  3221                           ;RemoteCan.c: 405: data_brake [1] = 0;
  3222  0111DC  0E00               	movlw	0
  3223  0111DE  0101               	movlb	1	; () banked
  3224  0111E0  6F2E               	movwf	(_data_brake+1)& (0+255),b
  3225  0111E2                     l9769:
  3226                           
  3227                           ;RemoteCan.c: 406: }
  3228                           ;RemoteCan.c: 407: if (JoystickValues[1] <= 20) {
  3229  0111E2  0E15               	movlw	21
  3230  0111E4  0100               	movlb	0	; () banked
  3231  0111E6  61DE               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  3232  0111E8  D006               	goto	l9773
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;RemoteCan.c: 408: data_brake [0] = 0b00000001;
  3236  0111EA  0E01               	movlw	1
  3237  0111EC  0101               	movlb	1	; () banked
  3238  0111EE  6F2D               	movwf	_data_brake& (0+255),b
  3239                           
  3240                           ;RemoteCan.c: 409: data_brake [1] = 0;
  3241  0111F0  0E00               	movlw	0
  3242  0111F2  0101               	movlb	1	; () banked
  3243  0111F4  6F2E               	movwf	(_data_brake+1)& (0+255),b
  3244  0111F6                     l9773:
  3245                           
  3246                           ;RemoteCan.c: 410: }
  3247                           ;RemoteCan.c: 411: if (JoystickValues[1] <= 5) {
  3248  0111F6  0E06               	movlw	6
  3249  0111F8  0100               	movlb	0	; () banked
  3250  0111FA  61DE               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  3251  0111FC  D004               	goto	l9777
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;RemoteCan.c: 412: data_brake [0] = 0b00000000;
  3255  0111FE  0E00               	movlw	0
  3256  011200                     L5:
  3257  011200  0101               	movlb	1	; () banked
  3258  011202  6F2D               	movwf	_data_brake& (0+255),b
  3259  011204  D7DB               	goto	l9761
  3260  011206                     l9777:
  3261                           
  3262                           ;RemoteCan.c: 414: }
  3263                           ;RemoteCan.c: 415: }
  3264                           ;RemoteCan.c: 417: if ((JoystickValues[1] >= center_value_Y)&&(parking_state == 0)) {
  3265  011206  0100               	movlb	0	; () banked
  3266  011208  51E5               	movf	_center_value_Y& (0+255),w,b	;volatile
  3267  01120A  0100               	movlb	0	; () banked
  3268  01120C  5DDE               	subwf	(_JoystickValues+1)& (0+255),w,b	;volatile
  3269  01120E  A0D8               	btfss	status,0,c
  3270  011210  D067               	goto	L18
  3271                           
  3272                           ; BSR set to: 0
  3273  011212  0100               	movlb	0	; () banked
  3274  011214  51E9               	movf	_parking_state& (0+255),w,b	;volatile
  3275  011216  A4D8               	btfss	status,2,c
  3276  011218  D063               	goto	L18
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;RemoteCan.c: 419: collision_risk_value = ((JoystickValues[1] - center_value_Y) / 3) + 4
      +                          ;
  3280  01121A  0100               	movlb	0	; () banked
  3281  01121C  51E5               	movf	_center_value_Y& (0+255),w,b	;volatile
  3282  01121E  0101               	movlb	1	; () banked
  3283  011220  6F66               	movwf	??_main& (0+255),b
  3284  011222  6B67               	clrf	(??_main+1)& (0+255),b
  3285  011224  0101               	movlb	1	; () banked
  3286  011226  1F66               	comf	??_main& (0+255),f,b
  3287  011228  1F67               	comf	(??_main+1)& (0+255),f,b
  3288  01122A  4B66               	infsnz	??_main& (0+255),f,b
  3289  01122C  2B67               	incf	(??_main+1)& (0+255),f,b
  3290  01122E  0100               	movlb	0	; () banked
  3291  011230  51DE               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  3292  011232  0101               	movlb	1	; () banked
  3293  011234  2566               	addwf	??_main& (0+255),w,b
  3294  011236  0100               	movlb	0	; () banked
  3295  011238  6F77               	movwf	___awdiv@dividend& (0+255),b
  3296  01123A  0E00               	movlw	0
  3297  01123C  0101               	movlb	1	; () banked
  3298  01123E  2167               	addwfc	(??_main+1)& (0+255),w,b
  3299  011240  0100               	movlb	0	; () banked
  3300  011242  6F78               	movwf	(___awdiv@dividend+1)& (0+255),b
  3301  011244  0E00               	movlw	0
  3302  011246  0100               	movlb	0	; () banked
  3303  011248  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  3304  01124A  0E03               	movlw	3
  3305  01124C  6F79               	movwf	___awdiv@divisor& (0+255),b
  3306  01124E  ECD0  F0AD         	call	___awdiv	;wreg free
  3307  011252  0100               	movlb	0	; () banked
  3308  011254  5177               	movf	?___awdiv& (0+255),w,b
  3309  011256  0F04               	addlw	4
  3310  011258  0100               	movlb	0	; () banked
  3311  01125A  6FE6               	movwf	_collision_risk_value& (0+255),b	;volatile
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;RemoteCan.c: 420: if (collision_sensor_distance[dir] < collision_risk_value) {
  3315  01125C  0100               	movlb	0	; () banked
  3316  01125E  51E7               	movf	_dir& (0+255),w,b	;volatile
  3317  011260  0D01               	mullw	1
  3318  011262  0E1D               	movlw	low _collision_sensor_distance
  3319  011264  24F3               	addwf	prodl,w,c
  3320  011266  6ED9               	movwf	fsr2l,c
  3321  011268  0E00               	movlw	high _collision_sensor_distance
  3322  01126A  20F4               	addwfc	prodh,w,c
  3323  01126C  6EDA               	movwf	fsr2h,c
  3324  01126E  0100               	movlb	0	; () banked
  3325  011270  51E6               	movf	_collision_risk_value& (0+255),w,b	;volatile
  3326  011272  5CDE               	subwf	postinc2,w,c
  3327  011274  B0D8               	btfsc	status,0,c
  3328  011276  D034               	goto	L18
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;RemoteCan.c: 421: set_speed = 0;
  3332  011278  0E00               	movlw	0
  3333  01127A  0100               	movlb	0	; () banked
  3334  01127C  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  3335  01127E  0E00               	movlw	0
  3336  011280  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  3337                           
  3338                           ;RemoteCan.c: 422: data_brake [0] = 0b00000000;
  3339  011282  0E00               	movlw	0
  3340  011284  0101               	movlb	1	; () banked
  3341  011286  6F2D               	movwf	_data_brake& (0+255),b
  3342                           
  3343                           ; BSR set to: 1
  3344                           ;RemoteCan.c: 423: collision_msg = 1;
  3345  011288  8C48               	bsf	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  3346                           
  3347                           ;RemoteCan.c: 424: } else {
  3348  01128A  D02B               	goto	l9797
  3349  01128C                     l9789:
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;RemoteCan.c: 431: set_speed = 0;
  3353  01128C  0E00               	movlw	0
  3354  01128E  0100               	movlb	0	; () banked
  3355  011290  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  3356  011292  0E00               	movlw	0
  3357  011294  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  3358                           
  3359                           ;RemoteCan.c: 432: data_brake [0] = 0b00000000;
  3360  011296  0E00               	movlw	0
  3361  011298  0101               	movlb	1	; () banked
  3362  01129A  6F2D               	movwf	_data_brake& (0+255),b
  3363                           
  3364                           ; BSR set to: 1
  3365                           ;RemoteCan.c: 433: collision_risk_value = ((JoystickValues[1] - 130) / 3) + 4;
  3366  01129C  0E7E               	movlw	126
  3367  01129E  0100               	movlb	0	; () banked
  3368  0112A0  25DE               	addwf	(_JoystickValues+1)& (0+255),w,b	;volatile
  3369  0112A2  0100               	movlb	0	; () banked
  3370  0112A4  6F77               	movwf	___awdiv@dividend& (0+255),b
  3371  0112A6  0100               	movlb	0	; () banked
  3372  0112A8  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  3373  0112AA  0EFF               	movlw	255
  3374  0112AC  2378               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
  3375  0112AE  0E00               	movlw	0
  3376  0112B0  0100               	movlb	0	; () banked
  3377  0112B2  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  3378  0112B4  0E03               	movlw	3
  3379  0112B6  6F79               	movwf	___awdiv@divisor& (0+255),b
  3380  0112B8  ECD0  F0AD         	call	___awdiv	;wreg free
  3381  0112BC  0100               	movlb	0	; () banked
  3382  0112BE  5177               	movf	?___awdiv& (0+255),w,b
  3383  0112C0  0F04               	addlw	4
  3384  0112C2  0100               	movlb	0	; () banked
  3385  0112C4  6FE6               	movwf	_collision_risk_value& (0+255),b	;volatile
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;RemoteCan.c: 434: if (collision_sensor_distance[dir] > collision_risk_value) {
  3389  0112C6  0100               	movlb	0	; () banked
  3390  0112C8  51E7               	movf	_dir& (0+255),w,b	;volatile
  3391  0112CA  0D01               	mullw	1
  3392  0112CC  0E1D               	movlw	low _collision_sensor_distance
  3393  0112CE  24F3               	addwf	prodl,w,c
  3394  0112D0  6ED9               	movwf	fsr2l,c
  3395  0112D2  0E00               	movlw	high _collision_sensor_distance
  3396  0112D4  20F4               	addwfc	prodh,w,c
  3397  0112D6  6EDA               	movwf	fsr2h,c
  3398  0112D8  50DE               	movf	postinc2,w,c
  3399  0112DA  0100               	movlb	0	; () banked
  3400  0112DC  5DE6               	subwf	_collision_risk_value& (0+255),w,b	;volatile
  3401  0112DE  A0D8               	btfss	status,0,c
  3402  0112E0                     L18:
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;RemoteCan.c: 435: collision_msg = 0;
  3406  0112E0  9C48               	bcf	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  3407  0112E2                     l9797:
  3408                           
  3409                           ;RemoteCan.c: 436: }
  3410                           ;RemoteCan.c: 437: }
  3411                           ;RemoteCan.c: 439: if ((((time_counter - pr_time_2) >= 2) && (parking_message_ID < 2)) |
      +                          | (Can_Tx_Force == 1)) {
  3412  0112E2  C009  F166         	movff	_pr_time_2,??_main	;volatile
  3413  0112E6  C00A  F167         	movff	_pr_time_2+1,??_main+1	;volatile
  3414  0112EA  C00B  F168         	movff	_pr_time_2+2,??_main+2	;volatile
  3415  0112EE  C00C  F169         	movff	_pr_time_2+3,??_main+3	;volatile
  3416  0112F2  0101               	movlb	1	; () banked
  3417  0112F4  1F66               	comf	??_main& (0+255),f,b
  3418  0112F6  1F67               	comf	(??_main+1)& (0+255),f,b
  3419  0112F8  1F68               	comf	(??_main+2)& (0+255),f,b
  3420  0112FA  1F69               	comf	(??_main+3)& (0+255),f,b
  3421  0112FC  2B66               	incf	??_main& (0+255),f,b
  3422  0112FE  0E00               	movlw	0
  3423  011300  2367               	addwfc	(??_main+1)& (0+255),f,b
  3424  011302  2368               	addwfc	(??_main+2)& (0+255),f,b
  3425  011304  2369               	addwfc	(??_main+3)& (0+255),f,b
  3426  011306  5019               	movf	_time_counter,w,c	;volatile
  3427  011308  0101               	movlb	1	; () banked
  3428  01130A  2566               	addwf	??_main& (0+255),w,b
  3429  01130C  0101               	movlb	1	; () banked
  3430  01130E  6F6A               	movwf	(??_main+4)& (0+255),b
  3431  011310  501A               	movf	_time_counter+1,w,c	;volatile
  3432  011312  0101               	movlb	1	; () banked
  3433  011314  2167               	addwfc	(??_main+1)& (0+255),w,b
  3434  011316  0101               	movlb	1	; () banked
  3435  011318  6F6B               	movwf	(??_main+5)& (0+255),b
  3436  01131A  501B               	movf	_time_counter+2,w,c	;volatile
  3437  01131C  0101               	movlb	1	; () banked
  3438  01131E  2168               	addwfc	(??_main+2)& (0+255),w,b
  3439  011320  0101               	movlb	1	; () banked
  3440  011322  6F6C               	movwf	(??_main+6)& (0+255),b
  3441  011324  501C               	movf	_time_counter+3,w,c	;volatile
  3442  011326  0101               	movlb	1	; () banked
  3443  011328  2169               	addwfc	(??_main+3)& (0+255),w,b
  3444  01132A  0101               	movlb	1	; () banked
  3445  01132C  6F6D               	movwf	(??_main+7)& (0+255),b
  3446  01132E  0101               	movlb	1	; () banked
  3447  011330  516D               	movf	(??_main+7)& (0+255),w,b
  3448  011332  0101               	movlb	1	; () banked
  3449  011334  116C               	iorwf	(??_main+6)& (0+255),w,b
  3450  011336  0101               	movlb	1	; () banked
  3451  011338  116B               	iorwf	(??_main+5)& (0+255),w,b
  3452  01133A  E105               	bnz	u13130
  3453  01133C  0E02               	movlw	2
  3454  01133E  0101               	movlb	1	; () banked
  3455  011340  5D6A               	subwf	(??_main+4)& (0+255),w,b
  3456  011342  A0D8               	btfss	status,0,c
  3457  011344  D004               	goto	l883
  3458  011346                     u13130:
  3459                           
  3460                           ; BSR set to: 1
  3461  011346  0E01               	movlw	1
  3462  011348  0100               	movlb	0	; () banked
  3463  01134A  65E8               	cpfsgt	_parking_message_ID& (0+255),b	;volatile
  3464  01134C  D002               	goto	l881
  3465  01134E                     l883:
  3466  01134E  A048               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  3467  011350  D01B               	goto	l9809
  3468  011352                     l881:
  3469                           
  3470                           ;RemoteCan.c: 440: if (Can_Tx_Force == 1) {
  3471  011352  A048               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  3472  011354  D00F               	goto	l9805
  3473                           
  3474                           ;RemoteCan.c: 441: dir = 1;
  3475  011356  0E01               	movlw	1
  3476  011358  0100               	movlb	0	; () banked
  3477  01135A  6FE7               	movwf	_dir& (0+255),b	;volatile
  3478                           
  3479                           ;RemoteCan.c: 442: set_speed = 0;
  3480  01135C  0E00               	movlw	0
  3481  01135E  0100               	movlb	0	; () banked
  3482  011360  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  3483  011362  0E00               	movlw	0
  3484  011364  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  3485                           
  3486                           ;RemoteCan.c: 443: data_steering [0] = 90;
  3487  011366  0E5A               	movlw	90
  3488  011368  0101               	movlb	1	; () banked
  3489  01136A  6F3D               	movwf	_data_steering& (0+255),b
  3490                           
  3491                           ;RemoteCan.c: 444: data_brake [0] = 0b00000000;
  3492  01136C  0E00               	movlw	0
  3493  01136E  0101               	movlb	1	; () banked
  3494  011370  6F2D               	movwf	_data_brake& (0+255),b
  3495                           
  3496                           ; BSR set to: 1
  3497                           ;RemoteCan.c: 445: Can_Tx_Force = 0;
  3498  011372  9048               	bcf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  3499  011374                     l9805:
  3500                           
  3501                           ;RemoteCan.c: 446: }
  3502                           ;RemoteCan.c: 447: pr_time_2 = time_counter;
  3503  011374  C019  F009         	movff	_time_counter,_pr_time_2	;volatile
  3504  011378  C01A  F00A         	movff	_time_counter+1,_pr_time_2+1	;volatile
  3505  01137C  C01B  F00B         	movff	_time_counter+2,_pr_time_2+2	;volatile
  3506  011380  C01C  F00C         	movff	_time_counter+3,_pr_time_2+3	;volatile
  3507                           
  3508                           ;RemoteCan.c: 448: CAN_Tx();
  3509  011384  ECEC  F0AE         	call	_CAN_Tx	;wreg free
  3510  011388                     l9809:
  3511                           
  3512                           ;RemoteCan.c: 449: }
  3513                           ;RemoteCan.c: 452: if (time_counter >= pr_time_6) {
  3514  011388  5015               	movf	_pr_time_6,w,c	;volatile
  3515  01138A  5C19               	subwf	_time_counter,w,c	;volatile
  3516  01138C  5016               	movf	_pr_time_6+1,w,c	;volatile
  3517  01138E  581A               	subwfb	_time_counter+1,w,c	;volatile
  3518  011390  5017               	movf	_pr_time_6+2,w,c	;volatile
  3519  011392  581B               	subwfb	_time_counter+2,w,c	;volatile
  3520  011394  5018               	movf	_pr_time_6+3,w,c	;volatile
  3521  011396  581C               	subwfb	_time_counter+3,w,c	;volatile
  3522  011398  A0D8               	btfss	status,0,c
  3523  01139A  D05F               	goto	l9837
  3524                           
  3525                           ;RemoteCan.c: 453: if ((time_counter - pr_time_3) >= (100 / 10)) {
  3526  01139C  C00D  F166         	movff	_pr_time_3,??_main	;volatile
  3527  0113A0  C00E  F167         	movff	_pr_time_3+1,??_main+1	;volatile
  3528  0113A4  C00F  F168         	movff	_pr_time_3+2,??_main+2	;volatile
  3529  0113A8  C010  F169         	movff	_pr_time_3+3,??_main+3	;volatile
  3530  0113AC  0101               	movlb	1	; () banked
  3531  0113AE  1F66               	comf	??_main& (0+255),f,b
  3532  0113B0  1F67               	comf	(??_main+1)& (0+255),f,b
  3533  0113B2  1F68               	comf	(??_main+2)& (0+255),f,b
  3534  0113B4  1F69               	comf	(??_main+3)& (0+255),f,b
  3535  0113B6  2B66               	incf	??_main& (0+255),f,b
  3536  0113B8  0E00               	movlw	0
  3537  0113BA  2367               	addwfc	(??_main+1)& (0+255),f,b
  3538  0113BC  2368               	addwfc	(??_main+2)& (0+255),f,b
  3539  0113BE  2369               	addwfc	(??_main+3)& (0+255),f,b
  3540  0113C0  5019               	movf	_time_counter,w,c	;volatile
  3541  0113C2  0101               	movlb	1	; () banked
  3542  0113C4  2566               	addwf	??_main& (0+255),w,b
  3543  0113C6  0101               	movlb	1	; () banked
  3544  0113C8  6F6A               	movwf	(??_main+4)& (0+255),b
  3545  0113CA  501A               	movf	_time_counter+1,w,c	;volatile
  3546  0113CC  0101               	movlb	1	; () banked
  3547  0113CE  2167               	addwfc	(??_main+1)& (0+255),w,b
  3548  0113D0  0101               	movlb	1	; () banked
  3549  0113D2  6F6B               	movwf	(??_main+5)& (0+255),b
  3550  0113D4  501B               	movf	_time_counter+2,w,c	;volatile
  3551  0113D6  0101               	movlb	1	; () banked
  3552  0113D8  2168               	addwfc	(??_main+2)& (0+255),w,b
  3553  0113DA  0101               	movlb	1	; () banked
  3554  0113DC  6F6C               	movwf	(??_main+6)& (0+255),b
  3555  0113DE  501C               	movf	_time_counter+3,w,c	;volatile
  3556  0113E0  0101               	movlb	1	; () banked
  3557  0113E2  2169               	addwfc	(??_main+3)& (0+255),w,b
  3558  0113E4  0101               	movlb	1	; () banked
  3559  0113E6  6F6D               	movwf	(??_main+7)& (0+255),b
  3560  0113E8  0101               	movlb	1	; () banked
  3561  0113EA  516D               	movf	(??_main+7)& (0+255),w,b
  3562  0113EC  0101               	movlb	1	; () banked
  3563  0113EE  116C               	iorwf	(??_main+6)& (0+255),w,b
  3564  0113F0  0101               	movlb	1	; () banked
  3565  0113F2  116B               	iorwf	(??_main+5)& (0+255),w,b
  3566  0113F4  E106               	bnz	u13180
  3567  0113F6  0E0A               	movlw	10
  3568  0113F8  0101               	movlb	1	; () banked
  3569  0113FA  5D6A               	subwf	(??_main+4)& (0+255),w,b
  3570  0113FC  A0D8               	btfss	status,0,c
  3571  0113FE  EFA0  F085         	goto	l9567
  3572  011402                     u13180:
  3573                           
  3574                           ; BSR set to: 1
  3575                           ;RemoteCan.c: 454: pr_time_3 = time_counter;
  3576  011402  C019  F00D         	movff	_time_counter,_pr_time_3	;volatile
  3577  011406  C01A  F00E         	movff	_time_counter+1,_pr_time_3+1	;volatile
  3578  01140A  C01B  F00F         	movff	_time_counter+2,_pr_time_3+2	;volatile
  3579  01140E  C01C  F010         	movff	_time_counter+3,_pr_time_3+3	;volatile
  3580                           
  3581                           ;RemoteCan.c: 455: if (parking_message_E == 1) {
  3582  011412  A449               	btfss	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  3583  011414  D01E               	goto	l9835
  3584                           
  3585                           ; BSR set to: 1
  3586                           ;RemoteCan.c: 456: display_refresh = 1;
  3587  011416  8E48               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  3588                           
  3589                           ; BSR set to: 1
  3590                           ;RemoteCan.c: 457: if (parking_message_ID == 0) {
  3591  011418  0100               	movlb	0	; () banked
  3592  01141A  51E8               	movf	_parking_message_ID& (0+255),w,b	;volatile
  3593  01141C  A4D8               	btfss	status,2,c
  3594  01141E  D004               	goto	l9823
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;RemoteCan.c: 458: LCD_Gap();
  3598  011420  EC6D  F0B1         	call	_LCD_Gap	;wreg free
  3599                           
  3600                           ;RemoteCan.c: 459: parking_message_ID++;
  3601  011424  0100               	movlb	0	; () banked
  3602  011426  2BE8               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3603  011428                     l9823:
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;RemoteCan.c: 460: }
  3607                           ;RemoteCan.c: 461: if (parking_message_ID == 2) {
  3608  011428  0E02               	movlw	2
  3609  01142A  0100               	movlb	0	; () banked
  3610  01142C  19E8               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3611  01142E  A4D8               	btfss	status,2,c
  3612  011430  D004               	goto	l9829
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;RemoteCan.c: 462: LCD_Park();
  3616  011432  EC3B  F0B1         	call	_LCD_Park	;wreg free
  3617                           
  3618                           ;RemoteCan.c: 463: parking_message_ID++;
  3619  011436  0100               	movlb	0	; () banked
  3620  011438  2BE8               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3621  01143A                     l9829:
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;RemoteCan.c: 464: }
  3625                           ;RemoteCan.c: 465: if (parking_message_ID == 4) {
  3626  01143A  0E04               	movlw	4
  3627  01143C  0100               	movlb	0	; () banked
  3628  01143E  19E8               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3629  011440  A4D8               	btfss	status,2,c
  3630  011442  EFA0  F085         	goto	l9567
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;RemoteCan.c: 466: LCD_Parking();
  3634  011446  EC09  F0B1         	call	_LCD_Parking	;wreg free
  3635                           
  3636                           ;RemoteCan.c: 467: parking_message_ID++;
  3637  01144A  0100               	movlb	0	; () banked
  3638  01144C  2BE8               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;RemoteCan.c: 468: }
  3642                           ;RemoteCan.c: 469: } else {
  3643  01144E  EFA0  F085         	goto	l9567
  3644  011452                     l9835:
  3645                           
  3646                           ;RemoteCan.c: 470: LCD_Handler();
  3647  011452  ECA0  F0A4         	call	_LCD_Handler	;wreg free
  3648                           
  3649                           ;RemoteCan.c: 471: }
  3650                           ;RemoteCan.c: 472: }
  3651                           ;RemoteCan.c: 473: } else {
  3652  011456  EFA0  F085         	goto	l9567
  3653  01145A                     l9837:
  3654                           
  3655                           ;RemoteCan.c: 474: if ((parking_message_ID == 6)||(user_stop == 1)) {
  3656  01145A  0E06               	movlw	6
  3657  01145C  0100               	movlb	0	; () banked
  3658  01145E  19E8               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3659  011460  B4D8               	btfsc	status,2,c
  3660  011462  D003               	goto	l895
  3661                           
  3662                           ; BSR set to: 0
  3663  011464  A24A               	btfss	_user_stop/(0+8),_user_stop& (0+7),c	;volatile
  3664  011466  EFA0  F085         	goto	l9567
  3665  01146A                     l895:
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;RemoteCan.c: 475: if ((parking_error == 1)||(user_stop == 1)) {
  3669  01146A  B249               	btfsc	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
  3670  01146C  D002               	goto	l898
  3671                           
  3672                           ; BSR set to: 0
  3673  01146E  A24A               	btfss	_user_stop/(0+8),_user_stop& (0+7),c	;volatile
  3674  011470  D023               	goto	l9851
  3675  011472                     l898:
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;RemoteCan.c: 476: parking_error = 0;
  3679  011472  9249               	bcf	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;RemoteCan.c: 477: LCD_Error();
  3683  011474  EC84  F0B0         	call	_LCD_Error	;wreg free
  3684  011478                     l9845:
  3685  011478  ECD4  F0B3         	call	_CANisTxReady	;wreg free
  3686  01147C  06E8               	decf	wreg,f,c
  3687  01147E  A4D8               	btfss	status,2,c
  3688  011480  D7FB               	goto	l9845
  3689                           
  3690                           ;RemoteCan.c: 479: data_brake [0] = 0b00000000;
  3691  011482  0E00               	movlw	0
  3692  011484  0101               	movlb	1	; () banked
  3693  011486  6F2D               	movwf	_data_brake& (0+255),b
  3694                           
  3695                           ; BSR set to: 1
  3696                           ;RemoteCan.c: 480: CANsendMessage(0b00000000110, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3697  011488  0E06               	movlw	6
  3698  01148A  0100               	movlb	0	; () banked
  3699  01148C  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  3700  01148E  0E00               	movlw	0
  3701  011490  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3702  011492  0E00               	movlw	0
  3703  011494  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3704  011496  0E00               	movlw	0
  3705  011498  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3706  01149A  0E2D               	movlw	low _data_brake
  3707  01149C  0100               	movlb	0	; () banked
  3708  01149E  6F75               	movwf	CANsendMessage@data& (0+255),b
  3709  0114A0  0E01               	movlw	high _data_brake
  3710  0114A2  0100               	movlb	0	; () banked
  3711  0114A4  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  3712  0114A6  0E08               	movlw	8
  3713  0114A8  0100               	movlb	0	; () banked
  3714  0114AA  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  3715  0114AC  0EBC               	movlw	188
  3716  0114AE  0100               	movlb	0	; () banked
  3717  0114B0  6F78               	movwf	CANsendMessage@flags& (0+255),b
  3718  0114B2  ECAE  F08E         	call	_CANsendMessage	;wreg free
  3719                           
  3720                           ;RemoteCan.c: 481: } else {
  3721  0114B6  D002               	goto	l9853
  3722  0114B8                     l9851:
  3723                           
  3724                           ;RemoteCan.c: 482: LCD_End();
  3725  0114B8  EC9F  F0B1         	call	_LCD_End	;wreg free
  3726  0114BC                     l9853:
  3727                           
  3728                           ;RemoteCan.c: 483: }
  3729                           ;RemoteCan.c: 484: parking_message_ID = 0;
  3730  0114BC  0E00               	movlw	0
  3731  0114BE  0100               	movlb	0	; () banked
  3732  0114C0  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;RemoteCan.c: 485: parking_message_E = 0;
  3736  0114C2  9449               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  3737                           
  3738                           ; BSR set to: 0
  3739                           
  3740                           ; BSR set to: 0
  3741                           
  3742                           ; BSR set to: 0
  3743  0114C4  EFA0  F085         	goto	l9567
  3744  0114C8                     __end_of_main:
  3745                           	opt stack 0
  3746                           tblptru	equ	0xFF8
  3747                           tblptrh	equ	0xFF7
  3748                           tblptrl	equ	0xFF6
  3749                           tablat	equ	0xFF5
  3750                           prodh	equ	0xFF4
  3751                           prodl	equ	0xFF3
  3752                           postinc0	equ	0xFEE
  3753                           wreg	equ	0xFE8
  3754                           postinc2	equ	0xFDE
  3755                           fsr2h	equ	0xFDA
  3756                           fsr2l	equ	0xFD9
  3757                           status	equ	0xFD8
  3758                           
  3759 ;; *************** function _board_initialization *****************
  3760 ;; Defined at:
  3761 ;;		line 712 in file "RemoteCan.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;		None
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;		None
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      void 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3779 ;;Total ram usage:        0 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:    9
  3782 ;; This function calls:
  3783 ;;		_CANInitialize
  3784 ;;		_LCD_clear
  3785 ;;		_LCD_goto_line
  3786 ;;		_LCD_initialize
  3787 ;; This function is called by:
  3788 ;;		_main
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           	psect	text1
  3793  015E92                     __ptext1:
  3794                           	opt stack 0
  3795  015E92                     _board_initialization:
  3796                           	opt stack 21
  3797                           
  3798                           ;RemoteCan.c: 714: LATA = 0x00;
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;incstack = 0
  3802  015E92  0E00               	movlw	0
  3803  015E94  6E89               	movwf	3977,c	;volatile
  3804                           
  3805                           ;RemoteCan.c: 715: TRISA = 0b00011111;
  3806  015E96  0E1F               	movlw	31
  3807  015E98  6E92               	movwf	3986,c	;volatile
  3808                           
  3809                           ;RemoteCan.c: 716: LATB = 0x00;
  3810  015E9A  0E00               	movlw	0
  3811  015E9C  6E8A               	movwf	3978,c	;volatile
  3812                           
  3813                           ;RemoteCan.c: 717: TRISB = 0b11111011;
  3814  015E9E  0EFB               	movlw	251
  3815  015EA0  6E93               	movwf	3987,c	;volatile
  3816                           
  3817                           ;RemoteCan.c: 718: LATC = 0x00;
  3818  015EA2  0E00               	movlw	0
  3819  015EA4  6E8B               	movwf	3979,c	;volatile
  3820                           
  3821                           ;RemoteCan.c: 719: TRISC = 0b11110000;
  3822  015EA6  0EF0               	movlw	240
  3823  015EA8  6E94               	movwf	3988,c	;volatile
  3824                           
  3825                           ;RemoteCan.c: 720: LATD = 0x00;
  3826  015EAA  0E00               	movlw	0
  3827  015EAC  6E8C               	movwf	3980,c	;volatile
  3828                           
  3829                           ;RemoteCan.c: 721: TRISD = 0x00;
  3830  015EAE  0E00               	movlw	0
  3831  015EB0  6E95               	movwf	3989,c	;volatile
  3832                           
  3833                           ;RemoteCan.c: 722: LATE = 0x00;
  3834  015EB2  0E00               	movlw	0
  3835  015EB4  6E8D               	movwf	3981,c	;volatile
  3836                           
  3837                           ;RemoteCan.c: 723: TRISE = 0x00;
  3838  015EB6  0E00               	movlw	0
  3839  015EB8  6E96               	movwf	3990,c	;volatile
  3840                           
  3841                           ;RemoteCan.c: 725: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3842  015EBA  0E06               	movlw	6
  3843  015EBC  0100               	movlb	0	; () banked
  3844  015EBE  6F7F               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3845  015EC0  0E05               	movlw	5
  3846  015EC2  0100               	movlb	0	; () banked
  3847  015EC4  6F80               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3848  015EC6  0E01               	movlw	1
  3849  015EC8  0100               	movlb	0	; () banked
  3850  015ECA  6F81               	movwf	CANInitialize@SJW& (0+255),b
  3851  015ECC  0E03               	movlw	3
  3852  015ECE  0100               	movlb	0	; () banked
  3853  015ED0  6F82               	movwf	CANInitialize@BRP& (0+255),b
  3854  015ED2  0E9D               	movlw	157
  3855  015ED4  0100               	movlb	0	; () banked
  3856  015ED6  6F83               	movwf	CANInitialize@flags& (0+255),b
  3857  015ED8  0E04               	movlw	4
  3858  015EDA  ECFF  F0A7         	call	_CANInitialize
  3859                           
  3860                           ;RemoteCan.c: 729: PIR2bits.TMR3IF = 0;
  3861  015EDE  92A1               	bcf	4001,1,c	;volatile
  3862                           
  3863                           ;RemoteCan.c: 730: PIR3bits.RXB1IF = 0;
  3864  015EE0  92A4               	bcf	4004,1,c	;volatile
  3865                           
  3866                           ;RemoteCan.c: 731: PIR3bits.RXB0IF = 0;
  3867  015EE2  90A4               	bcf	4004,0,c	;volatile
  3868                           
  3869                           ;RemoteCan.c: 734: RCONbits.IPEN = 1;
  3870  015EE4  8ED0               	bsf	4048,7,c	;volatile
  3871                           
  3872                           ;RemoteCan.c: 735: IPR3bits.RXB1IP = 1;
  3873  015EE6  82A5               	bsf	4005,1,c	;volatile
  3874                           
  3875                           ;RemoteCan.c: 736: IPR3bits.RXB0IP = 1;
  3876  015EE8  80A5               	bsf	4005,0,c	;volatile
  3877                           
  3878                           ;RemoteCan.c: 737: IPR2bits.TMR3IP = 0;
  3879  015EEA  92A2               	bcf	4002,1,c	;volatile
  3880                           
  3881                           ;RemoteCan.c: 740: ADCON1 = 0b00001101;
  3882  015EEC  0E0D               	movlw	13
  3883  015EEE  6EC1               	movwf	4033,c	;volatile
  3884                           
  3885                           ;RemoteCan.c: 741: ADCON0bits.CHS2 = 0;
  3886  015EF0  98C2               	bcf	4034,4,c	;volatile
  3887                           
  3888                           ;RemoteCan.c: 742: ADCON0bits.CHS1 = 0;
  3889  015EF2  96C2               	bcf	4034,3,c	;volatile
  3890                           
  3891                           ;RemoteCan.c: 743: ADCON0bits.CHS0 = 0;
  3892  015EF4  94C2               	bcf	4034,2,c	;volatile
  3893                           
  3894                           ;RemoteCan.c: 744: ADCON2bits.ACQT2 = 1;
  3895  015EF6  8AC0               	bsf	4032,5,c	;volatile
  3896                           
  3897                           ;RemoteCan.c: 745: ADCON2bits.ACQT1 = 1;
  3898  015EF8  88C0               	bsf	4032,4,c	;volatile
  3899                           
  3900                           ;RemoteCan.c: 746: ADCON2bits.ACQT0 = 0;
  3901  015EFA  96C0               	bcf	4032,3,c	;volatile
  3902                           
  3903                           ;RemoteCan.c: 747: ADCON2bits.ADCS2 = 1;
  3904  015EFC  84C0               	bsf	4032,2,c	;volatile
  3905                           
  3906                           ;RemoteCan.c: 748: ADCON2bits.ADCS1 = 0;
  3907  015EFE  92C0               	bcf	4032,1,c	;volatile
  3908                           
  3909                           ;RemoteCan.c: 749: ADCON2bits.ADCS0 = 1;
  3910  015F00  80C0               	bsf	4032,0,c	;volatile
  3911                           
  3912                           ;RemoteCan.c: 750: ADCON2bits.ADFM = 0;
  3913  015F02  9EC0               	bcf	4032,7,c	;volatile
  3914                           
  3915                           ;RemoteCan.c: 751: ADCON0bits.ADON = 1;
  3916  015F04  80C2               	bsf	4034,0,c	;volatile
  3917                           
  3918                           ;RemoteCan.c: 753: LCD_initialize(16);
  3919  015F06  0E10               	movlw	16
  3920  015F08  EC1D  F0AC         	call	_LCD_initialize
  3921                           
  3922                           ;RemoteCan.c: 754: LCD_clear();
  3923  015F0C  EC93  F0B3         	call	_LCD_clear	;wreg free
  3924                           
  3925                           ;RemoteCan.c: 755: LCD_goto_line(1);
  3926  015F10  0E01               	movlw	1
  3927  015F12  EC5A  F0AD         	call	_LCD_goto_line
  3928                           
  3929                           ;RemoteCan.c: 757: PORTDbits.RD2 = 0;
  3930  015F16  9483               	bcf	3971,2,c	;volatile
  3931                           
  3932                           ;RemoteCan.c: 758: PORTDbits.RD3 = 0;
  3933  015F18  9683               	bcf	3971,3,c	;volatile
  3934                           
  3935                           ;RemoteCan.c: 761: TMR3H = 0x63;
  3936  015F1A  0E63               	movlw	99
  3937  015F1C  6EB3               	movwf	4019,c	;volatile
  3938                           
  3939                           ;RemoteCan.c: 762: TMR3L = 0xC0;
  3940  015F1E  0EC0               	movlw	192
  3941  015F20  6EB2               	movwf	4018,c	;volatile
  3942                           
  3943                           ;RemoteCan.c: 765: PIE3bits.RXB1IE = 1;
  3944  015F22  82A3               	bsf	4003,1,c	;volatile
  3945                           
  3946                           ;RemoteCan.c: 766: PIE3bits.RXB0IE = 1;
  3947  015F24  80A3               	bsf	4003,0,c	;volatile
  3948                           
  3949                           ;RemoteCan.c: 767: PIE2bits.TMR3IE = 1;
  3950  015F26  82A0               	bsf	4000,1,c	;volatile
  3951                           
  3952                           ;RemoteCan.c: 770: T3CON = 0x01;
  3953  015F28  0E01               	movlw	1
  3954  015F2A  6EB1               	movwf	4017,c	;volatile
  3955                           
  3956                           ;RemoteCan.c: 771: LCD_clear();
  3957  015F2C  EC93  F0B3         	call	_LCD_clear	;wreg free
  3958                           
  3959                           ;RemoteCan.c: 772: INTCONbits.GIEH = 1;
  3960  015F30  8EF2               	bsf	intcon,7,c	;volatile
  3961                           
  3962                           ;RemoteCan.c: 773: INTCONbits.GIEL = 1;
  3963  015F32  8CF2               	bsf	intcon,6,c	;volatile
  3964  015F34  0012               	return		;funcret
  3965  015F36                     __end_of_board_initialization:
  3966                           	opt stack 0
  3967                           tblptru	equ	0xFF8
  3968                           tblptrh	equ	0xFF7
  3969                           tblptrl	equ	0xFF6
  3970                           tablat	equ	0xFF5
  3971                           prodh	equ	0xFF4
  3972                           prodl	equ	0xFF3
  3973                           intcon	equ	0xFF2
  3974                           postinc0	equ	0xFEE
  3975                           wreg	equ	0xFE8
  3976                           postinc2	equ	0xFDE
  3977                           fsr2h	equ	0xFDA
  3978                           fsr2l	equ	0xFD9
  3979                           status	equ	0xFD8
  3980                           
  3981 ;; *************** function _CANInitialize *****************
  3982 ;; Defined at:
  3983 ;;		line 218 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  propSeg         1    wreg     unsigned char 
  3986 ;;  phaseSeg1       1   31[BANK0 ] unsigned char 
  3987 ;;  phaseSeg2       1   32[BANK0 ] unsigned char 
  3988 ;;  SJW             1   33[BANK0 ] unsigned char 
  3989 ;;  BRP             1   34[BANK0 ] unsigned char 
  3990 ;;  flags           1   35[BANK0 ] enum E16749
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  propSeg         1   40[BANK0 ] unsigned char 
  3993 ;;  FilterConfig    1   42[BANK0 ] unsigned char 
  3994 ;;  FilterConfig    1   41[BANK0 ] unsigned char 
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  1    wreg      void 
  3997 ;; Registers used:
  3998 ;;		wreg, status,2, status,0, cstack
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4004 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4005 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4006 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4007 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4008 ;;Total ram usage:       12 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; Hardware stack levels required when called:    4
  4011 ;; This function calls:
  4012 ;;		_CANOperationMode
  4013 ;;		_CANSetFilter
  4014 ;;		_CANSetMask
  4015 ;; This function is called by:
  4016 ;;		_board_initialization
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           	psect	text2
  4021  014FFE                     __ptext2:
  4022                           	opt stack 0
  4023  014FFE                     _CANInitialize:
  4024                           	opt stack 25
  4025                           
  4026                           ;incstack = 0
  4027                           ;CANInitialize@propSeg stored from wreg
  4028  014FFE  0100               	movlb	0	; () banked
  4029  015000  6F88               	movwf	CANInitialize@propSeg& (0+255),b
  4030                           
  4031                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  4032                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  4033                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  4034  015002  0E80               	movlw	128
  4035  015004  EC3E  F0B4         	call	_CANOperationMode
  4036                           
  4037                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  4038  015008  0E00               	movlw	0
  4039  01500A  6E70               	movwf	3952,c	;volatile
  4040                           
  4041                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  4042  01500C  0E00               	movlw	0
  4043  01500E  6E71               	movwf	3953,c	;volatile
  4044                           
  4045                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  4046  015010  0E00               	movlw	0
  4047  015012  6E72               	movwf	3954,c	;volatile
  4048                           
  4049                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  4050  015014  0100               	movlb	0	; () banked
  4051  015016  4181               	rrncf	CANInitialize@SJW& (0+255),w,b
  4052  015018  42E8               	rrncf	wreg,f,c
  4053  01501A  0BC0               	andlw	192
  4054  01501C  0100               	movlb	0	; () banked
  4055  01501E  6F81               	movwf	CANInitialize@SJW& (0+255),b
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  4059  015020  0100               	movlb	0	; () banked
  4060  015022  5181               	movf	CANInitialize@SJW& (0+255),w,b
  4061  015024  1270               	iorwf	3952,f,c	;volatile
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  4065  015026  0100               	movlb	0	; () banked
  4066  015028  5182               	movf	CANInitialize@BRP& (0+255),w,b
  4067  01502A  1270               	iorwf	3952,f,c	;volatile
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  4071  01502C  0100               	movlb	0	; () banked
  4072  01502E  5188               	movf	CANInitialize@propSeg& (0+255),w,b
  4073  015030  1271               	iorwf	3953,f,c	;volatile
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  4077  015032  0100               	movlb	0	; () banked
  4078  015034  397F               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  4079  015036  42E8               	rrncf	wreg,f,c
  4080  015038  0BF8               	andlw	248
  4081  01503A  0100               	movlb	0	; () banked
  4082  01503C  6F7F               	movwf	CANInitialize@phaseSeg1& (0+255),b
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  4086  01503E  0100               	movlb	0	; () banked
  4087  015040  517F               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  4088  015042  1271               	iorwf	3953,f,c	;volatile
  4089                           
  4090                           ; BSR set to: 0
  4091                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  4092  015044  0100               	movlb	0	; () banked
  4093  015046  A583               	btfss	CANInitialize@flags& (0+255),2,b
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  4097  015048  8C71               	bsf	3953,6,c	;volatile
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  4101  01504A  0100               	movlb	0	; () banked
  4102  01504C  B183               	btfsc	CANInitialize@flags& (0+255),0,b
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  4106  01504E  8E71               	bsf	3953,7,c	;volatile
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  4110                           
  4111                           ; BSR set to: 0
  4112  015050  0100               	movlb	0	; () banked
  4113  015052  5180               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  4114  015054  1272               	iorwf	3954,f,c	;volatile
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  4118  015056  0100               	movlb	0	; () banked
  4119  015058  B383               	btfsc	CANInitialize@flags& (0+255),1,b
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  4123  01505A  8C72               	bsf	3954,6,c	;volatile
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  4127                           
  4128                           ; BSR set to: 0
  4129  01505C  0100               	movlb	0	; () banked
  4130  01505E  5183               	movf	CANInitialize@flags& (0+255),w,b
  4131  015060  0B60               	andlw	96
  4132  015062  6E60               	movwf	3936,c	;volatile
  4133                           
  4134                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  4135  015064  0100               	movlb	0	; () banked
  4136  015066  5183               	movf	CANInitialize@flags& (0+255),w,b
  4137  015068  0B10               	andlw	16
  4138  01506A  0AFF               	xorlw	255
  4139  01506C  B4D8               	btfsc	status,2,c
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  4143  01506E  8460               	bsf	3936,2,c	;volatile
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  4147  015070  CF60 FF50          	movff	3936,3920	;volatile
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  4151  015074  0E00               	movlw	0
  4152  015076  0100               	movlb	0	; () banked
  4153  015078  6F71               	movwf	CANSetMask@mask& (0+255),b
  4154  01507A  0E00               	movlw	0
  4155  01507C  6F72               	movwf	(CANSetMask@mask+1)& (0+255),b
  4156  01507E  0E00               	movlw	0
  4157  015080  6F73               	movwf	(CANSetMask@mask+2)& (0+255),b
  4158  015082  0E00               	movlw	0
  4159  015084  6F74               	movwf	(CANSetMask@mask+3)& (0+255),b
  4160  015086  0EF7               	movlw	247
  4161  015088  0100               	movlb	0	; () banked
  4162  01508A  6F75               	movwf	CANSetMask@type& (0+255),b
  4163  01508C  0E01               	movlw	1
  4164  01508E  EC56  F0A1         	call	_CANSetMask
  4165                           
  4166                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  4167  015092  0E00               	movlw	0
  4168  015094  0100               	movlb	0	; () banked
  4169  015096  6F71               	movwf	CANSetMask@mask& (0+255),b
  4170  015098  0E00               	movlw	0
  4171  01509A  6F72               	movwf	(CANSetMask@mask+1)& (0+255),b
  4172  01509C  0E00               	movlw	0
  4173  01509E  6F73               	movwf	(CANSetMask@mask+2)& (0+255),b
  4174  0150A0  0E00               	movlw	0
  4175  0150A2  6F74               	movwf	(CANSetMask@mask+3)& (0+255),b
  4176  0150A4  0EF7               	movlw	247
  4177  0150A6  0100               	movlb	0	; () banked
  4178  0150A8  6F75               	movwf	CANSetMask@type& (0+255),b
  4179  0150AA  0E02               	movlw	2
  4180  0150AC  EC56  F0A1         	call	_CANSetMask
  4181                           
  4182                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  4183  0150B0  D00F               	goto	l6355
  4184  0150B2                     l6349:
  4185                           
  4186                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  4187  0150B2  0EF7               	movlw	247
  4188  0150B4  0100               	movlb	0	; () banked
  4189  0150B6  6F89               	movwf	CANInitialize@FilterConfig1& (0+255),b
  4190  0150B8  D007               	goto	l6351
  4191  0150BA                     l380:
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  4195  0150BA  0100               	movlb	0	; () banked
  4196  0150BC  6989               	setf	CANInitialize@FilterConfig1& (0+255),b
  4197                           
  4198                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  4199  0150BE  0100               	movlb	0	; () banked
  4200  0150C0  698A               	setf	CANInitialize@FilterConfig2& (0+255),b
  4201                           
  4202                           ;inc\CANlib.h: 273: break;
  4203  0150C2  D028               	goto	l6357
  4204  0150C4                     l381:
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  4208  0150C4  0100               	movlb	0	; () banked
  4209  0150C6  6989               	setf	CANInitialize@FilterConfig1& (0+255),b
  4210  0150C8                     l6351:
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  4214  0150C8  0EF7               	movlw	247
  4215  0150CA  0100               	movlb	0	; () banked
  4216  0150CC  6F8A               	movwf	CANInitialize@FilterConfig2& (0+255),b
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;inc\CANlib.h: 278: }
  4220                           
  4221                           ;inc\CANlib.h: 277: break;
  4222  0150CE  D022               	goto	l6357
  4223  0150D0                     l6355:
  4224  0150D0  0E9F               	movlw	159
  4225  0150D2  0100               	movlb	0	; () banked
  4226  0150D4  6F84               	movwf	??_CANInitialize& (0+255),b
  4227  0150D6  0EFF               	movlw	255
  4228  0150D8  0100               	movlb	0	; () banked
  4229  0150DA  6F85               	movwf	(??_CANInitialize+1)& (0+255),b
  4230  0150DC  0100               	movlb	0	; () banked
  4231  0150DE  5183               	movf	CANInitialize@flags& (0+255),w,b
  4232  0150E0  0B60               	andlw	96
  4233  0150E2  0100               	movlb	0	; () banked
  4234  0150E4  6F86               	movwf	(??_CANInitialize+2)& (0+255),b
  4235  0150E6  6B87               	clrf	(??_CANInitialize+3)& (0+255),b
  4236  0150E8  0100               	movlb	0	; () banked
  4237  0150EA  5184               	movf	??_CANInitialize& (0+255),w,b
  4238  0150EC  0100               	movlb	0	; () banked
  4239  0150EE  1386               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  4240  0150F0  0100               	movlb	0	; () banked
  4241  0150F2  5185               	movf	(??_CANInitialize+1)& (0+255),w,b
  4242  0150F4  0100               	movlb	0	; () banked
  4243  0150F6  1387               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  4244                           
  4245                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4246                           ; Switch size 1, requested type "space"
  4247                           ; Number of cases is 1, Range of values is 0 to 0
  4248                           ; switch strategies available:
  4249                           ; Name         Instructions Cycles
  4250                           ; simple_byte            4     3 (average)
  4251                           ;	Chosen strategy is simple_byte
  4252  0150F8  0100               	movlb	0	; () banked
  4253  0150FA  5187               	movf	(??_CANInitialize+3)& (0+255),w,b
  4254  0150FC  0A00               	xorlw	0	; case 0
  4255  0150FE  A4D8               	btfss	status,2,c
  4256  015100  D7E1               	goto	l381
  4257                           
  4258                           ; BSR set to: 0
  4259                           ; Switch size 1, requested type "space"
  4260                           ; Number of cases is 2, Range of values is 191 to 223
  4261                           ; switch strategies available:
  4262                           ; Name         Instructions Cycles
  4263                           ; simple_byte            7     4 (average)
  4264                           ;	Chosen strategy is simple_byte
  4265  015102  0100               	movlb	0	; () banked
  4266  015104  5186               	movf	(??_CANInitialize+2)& (0+255),w,b
  4267  015106  0ABF               	xorlw	191	; case 191
  4268  015108  B4D8               	btfsc	status,2,c
  4269  01510A  D7D7               	goto	l380
  4270  01510C  0A60               	xorlw	96	; case 223
  4271  01510E  B4D8               	btfsc	status,2,c
  4272  015110  D7D0               	goto	l6349
  4273  015112  D7D8               	goto	l381
  4274  015114                     l6357:
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  4278  015114  0E00               	movlw	0
  4279  015116  0100               	movlb	0	; () banked
  4280  015118  6F71               	movwf	CANSetFilter@filter& (0+255),b
  4281  01511A  0E00               	movlw	0
  4282  01511C  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4283  01511E  0E00               	movlw	0
  4284  015120  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4285  015122  0E00               	movlw	0
  4286  015124  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4287  015126  C089  F075         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  4288  01512A  0E00               	movlw	0
  4289  01512C  EC00  F080         	call	_CANSetFilter
  4290                           
  4291                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  4292  015130  0E00               	movlw	0
  4293  015132  0100               	movlb	0	; () banked
  4294  015134  6F71               	movwf	CANSetFilter@filter& (0+255),b
  4295  015136  0E00               	movlw	0
  4296  015138  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4297  01513A  0E00               	movlw	0
  4298  01513C  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4299  01513E  0E00               	movlw	0
  4300  015140  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4301  015142  C089  F075         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  4302  015146  0E01               	movlw	1
  4303  015148  EC00  F080         	call	_CANSetFilter
  4304                           
  4305                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  4306  01514C  0E00               	movlw	0
  4307  01514E  0100               	movlb	0	; () banked
  4308  015150  6F71               	movwf	CANSetFilter@filter& (0+255),b
  4309  015152  0E00               	movlw	0
  4310  015154  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4311  015156  0E00               	movlw	0
  4312  015158  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4313  01515A  0E00               	movlw	0
  4314  01515C  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4315  01515E  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4316  015162  0E02               	movlw	2
  4317  015164  EC00  F080         	call	_CANSetFilter
  4318                           
  4319                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  4320  015168  0E00               	movlw	0
  4321  01516A  0100               	movlb	0	; () banked
  4322  01516C  6F71               	movwf	CANSetFilter@filter& (0+255),b
  4323  01516E  0E00               	movlw	0
  4324  015170  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4325  015172  0E00               	movlw	0
  4326  015174  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4327  015176  0E00               	movlw	0
  4328  015178  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4329  01517A  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4330  01517E  0E03               	movlw	3
  4331  015180  EC00  F080         	call	_CANSetFilter
  4332                           
  4333                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  4334  015184  0E00               	movlw	0
  4335  015186  0100               	movlb	0	; () banked
  4336  015188  6F71               	movwf	CANSetFilter@filter& (0+255),b
  4337  01518A  0E00               	movlw	0
  4338  01518C  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4339  01518E  0E00               	movlw	0
  4340  015190  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4341  015192  0E00               	movlw	0
  4342  015194  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4343  015196  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4344  01519A  0E04               	movlw	4
  4345  01519C  EC00  F080         	call	_CANSetFilter
  4346                           
  4347                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  4348  0151A0  0E00               	movlw	0
  4349  0151A2  0100               	movlb	0	; () banked
  4350  0151A4  6F71               	movwf	CANSetFilter@filter& (0+255),b
  4351  0151A6  0E00               	movlw	0
  4352  0151A8  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4353  0151AA  0E00               	movlw	0
  4354  0151AC  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4355  0151AE  0E00               	movlw	0
  4356  0151B0  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4357  0151B2  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4358  0151B6  0E05               	movlw	5
  4359  0151B8  EC00  F080         	call	_CANSetFilter
  4360                           
  4361                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  4362  0151BC  0E00               	movlw	0
  4363  0151BE  EC3E  F0B4         	call	_CANOperationMode
  4364  0151C2  0012               	return		;funcret
  4365  0151C4                     __end_of_CANInitialize:
  4366                           	opt stack 0
  4367                           tblptru	equ	0xFF8
  4368                           tblptrh	equ	0xFF7
  4369                           tblptrl	equ	0xFF6
  4370                           tablat	equ	0xFF5
  4371                           prodh	equ	0xFF4
  4372                           prodl	equ	0xFF3
  4373                           intcon	equ	0xFF2
  4374                           postinc0	equ	0xFEE
  4375                           wreg	equ	0xFE8
  4376                           postinc2	equ	0xFDE
  4377                           fsr2h	equ	0xFDA
  4378                           fsr2l	equ	0xFD9
  4379                           status	equ	0xFD8
  4380                           
  4381 ;; *************** function _CANSetMask *****************
  4382 ;; Defined at:
  4383 ;;		line 640 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;  numBuffer       1    wreg     enum E16783
  4386 ;;  mask            4   17[BANK0 ] unsigned long 
  4387 ;;  type            1   21[BANK0 ] enum E16749
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  numBuffer       1   26[BANK0 ] enum E16783
  4390 ;;  tamp            4   27[BANK0 ] unsigned long 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1    wreg      void 
  4393 ;; Registers used:
  4394 ;;		wreg, status,2, status,0
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4400 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4401 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4402 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4403 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4404 ;;Total ram usage:       14 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:    3
  4407 ;; This function calls:
  4408 ;;		Nothing
  4409 ;; This function is called by:
  4410 ;;		_CANInitialize
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text3
  4415  0142AC                     __ptext3:
  4416                           	opt stack 0
  4417  0142AC                     _CANSetMask:
  4418                           	opt stack 25
  4419                           
  4420                           ;incstack = 0
  4421                           ;CANSetMask@numBuffer stored from wreg
  4422  0142AC  0100               	movlb	0	; () banked
  4423  0142AE  6F7A               	movwf	CANSetMask@numBuffer& (0+255),b
  4424                           
  4425                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  4426  0142B0  0100               	movlb	0	; () banked
  4427  0142B2  057A               	decf	CANSetMask@numBuffer& (0+255),w,b
  4428  0142B4  A4D8               	btfss	status,2,c
  4429  0142B6  D056               	goto	l5525
  4430                           
  4431                           ; BSR set to: 0
  4432  0142B8  0100               	movlb	0	; () banked
  4433  0142BA  2975               	incf	CANSetMask@type& (0+255),w,b
  4434  0142BC  A4D8               	btfss	status,2,c
  4435  0142BE  D052               	goto	l5525
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;inc\CANlib.h: 644: {
  4439                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  4440  0142C0  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  4441  0142C4  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4442  0142C8  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4443  0142CC  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4444  0142D0  0E04               	movlw	4
  4445  0142D2  D006               	goto	u6280
  4446  0142D4                     u6285:
  4447  0142D4  0100               	movlb	0	; () banked
  4448  0142D6  90D8               	bcf	status,0,c
  4449  0142D8  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4450  0142DA  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4451  0142DC  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4452  0142DE  3376               	rrcf	??_CANSetMask& (0+255),f,b
  4453  0142E0                     u6280:
  4454  0142E0  2EE8               	decfsz	wreg,f,c
  4455  0142E2  D7F8               	goto	u6285
  4456  0142E4  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4457  0142E8  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4458  0142EC  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4459  0142F0  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  4463  0142F4  0100               	movlb	0	; () banked
  4464  0142F6  517B               	movf	CANSetMask@tamp& (0+255),w,b
  4465  0142F8  0100               	movlb	0	; () banked
  4466  0142FA  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4467  0142FC  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4468  0142FE  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4469  014300  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  4473  014302  C07B  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  4477  014306  0E07               	movlw	7
  4478  014308  0100               	movlb	0	; () banked
  4479  01430A  1571               	andwf	CANSetMask@mask& (0+255),w,b
  4480  01430C  0100               	movlb	0	; () banked
  4481  01430E  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4482  014310  0E00               	movlw	0
  4483  014312  0100               	movlb	0	; () banked
  4484  014314  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4485  014316  0100               	movlb	0	; () banked
  4486  014318  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4487  01431A  0E00               	movlw	0
  4488  01431C  0100               	movlb	0	; () banked
  4489  01431E  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4490  014320  0100               	movlb	0	; () banked
  4491  014322  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4492  014324  0E00               	movlw	0
  4493  014326  0100               	movlb	0	; () banked
  4494  014328  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4495  01432A  0100               	movlb	0	; () banked
  4496  01432C  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  4500  01432E  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  4501  014332  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4502  014336  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4503  01433A  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4504  01433E  0E05               	movlw	5
  4505  014340                     u6295:
  4506  014340  90D8               	bcf	status,0,c
  4507  014342  0100               	movlb	0	; () banked
  4508  014344  3776               	rlcf	??_CANSetMask& (0+255),f,b
  4509  014346  3777               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4510  014348  3778               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4511  01434A  3779               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4512  01434C  2EE8               	decfsz	wreg,f,c
  4513  01434E  D7F8               	goto	u6295
  4514  014350  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4515  014354  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4516  014358  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4517  01435C  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4518                           
  4519                           ; BSR set to: 0
  4520                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  4521  014360  C07B  FF19         	movff	CANSetMask@tamp,3865	;volatile
  4522  014364                     l5525:
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;inc\CANlib.h: 652: }
  4526                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  4527  014364  0E02               	movlw	2
  4528  014366  0100               	movlb	0	; () banked
  4529  014368  197A               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4530  01436A  A4D8               	btfss	status,2,c
  4531  01436C  D056               	goto	l5541
  4532                           
  4533                           ; BSR set to: 0
  4534  01436E  0100               	movlb	0	; () banked
  4535  014370  2975               	incf	CANSetMask@type& (0+255),w,b
  4536  014372  A4D8               	btfss	status,2,c
  4537  014374  D052               	goto	l5541
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;inc\CANlib.h: 655: {
  4541                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  4542  014376  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  4543  01437A  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4544  01437E  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4545  014382  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4546  014386  0E04               	movlw	4
  4547  014388  D006               	goto	u6320
  4548  01438A                     u6325:
  4549  01438A  0100               	movlb	0	; () banked
  4550  01438C  90D8               	bcf	status,0,c
  4551  01438E  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4552  014390  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4553  014392  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4554  014394  3376               	rrcf	??_CANSetMask& (0+255),f,b
  4555  014396                     u6320:
  4556  014396  2EE8               	decfsz	wreg,f,c
  4557  014398  D7F8               	goto	u6325
  4558  01439A  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4559  01439E  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4560  0143A2  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4561  0143A6  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  4565  0143AA  0100               	movlb	0	; () banked
  4566  0143AC  517B               	movf	CANSetMask@tamp& (0+255),w,b
  4567  0143AE  0100               	movlb	0	; () banked
  4568  0143B0  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4569  0143B2  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4570  0143B4  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4571  0143B6  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  4575  0143B8  C07B  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  4579  0143BC  0E07               	movlw	7
  4580  0143BE  0100               	movlb	0	; () banked
  4581  0143C0  1571               	andwf	CANSetMask@mask& (0+255),w,b
  4582  0143C2  0100               	movlb	0	; () banked
  4583  0143C4  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4584  0143C6  0E00               	movlw	0
  4585  0143C8  0100               	movlb	0	; () banked
  4586  0143CA  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4587  0143CC  0100               	movlb	0	; () banked
  4588  0143CE  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4589  0143D0  0E00               	movlw	0
  4590  0143D2  0100               	movlb	0	; () banked
  4591  0143D4  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4592  0143D6  0100               	movlb	0	; () banked
  4593  0143D8  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4594  0143DA  0E00               	movlw	0
  4595  0143DC  0100               	movlb	0	; () banked
  4596  0143DE  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4597  0143E0  0100               	movlb	0	; () banked
  4598  0143E2  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  4602  0143E4  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  4603  0143E8  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4604  0143EC  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4605  0143F0  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4606  0143F4  0E05               	movlw	5
  4607  0143F6                     u6335:
  4608  0143F6  90D8               	bcf	status,0,c
  4609  0143F8  0100               	movlb	0	; () banked
  4610  0143FA  3776               	rlcf	??_CANSetMask& (0+255),f,b
  4611  0143FC  3777               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4612  0143FE  3778               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4613  014400  3779               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4614  014402  2EE8               	decfsz	wreg,f,c
  4615  014404  D7F8               	goto	u6335
  4616  014406  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4617  01440A  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4618  01440E  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4619  014412  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4620                           
  4621                           ; BSR set to: 0
  4622                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4623  014416  C07B  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4624  01441A                     l5541:
  4625                           
  4626                           ; BSR set to: 0
  4627                           ;inc\CANlib.h: 663: }
  4628                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4629  01441A  0100               	movlb	0	; () banked
  4630  01441C  057A               	decf	CANSetMask@numBuffer& (0+255),w,b
  4631  01441E  A4D8               	btfss	status,2,c
  4632  014420  D087               	goto	l5573
  4633                           
  4634                           ; BSR set to: 0
  4635  014422  0EF7               	movlw	247
  4636  014424  0100               	movlb	0	; () banked
  4637  014426  1975               	xorwf	CANSetMask@type& (0+255),w,b
  4638  014428  A4D8               	btfss	status,2,c
  4639  01442A  D082               	goto	l5573
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;inc\CANlib.h: 666: {
  4643                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4644  01442C  0100               	movlb	0	; () banked
  4645  01442E  5171               	movf	CANSetMask@mask& (0+255),w,b
  4646  014430  0100               	movlb	0	; () banked
  4647  014432  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4648  014434  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4649  014436  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4650  014438  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4654  01443A  C07B  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4658  01443E  0E00               	movlw	0
  4659  014440  0100               	movlb	0	; () banked
  4660  014442  1571               	andwf	CANSetMask@mask& (0+255),w,b
  4661  014444  0100               	movlb	0	; () banked
  4662  014446  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4663  014448  0EFF               	movlw	255
  4664  01444A  0100               	movlb	0	; () banked
  4665  01444C  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4666  01444E  0100               	movlb	0	; () banked
  4667  014450  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4668  014452  0E00               	movlw	0
  4669  014454  0100               	movlb	0	; () banked
  4670  014456  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4671  014458  0100               	movlb	0	; () banked
  4672  01445A  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4673  01445C  0E00               	movlw	0
  4674  01445E  0100               	movlb	0	; () banked
  4675  014460  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4676  014462  0100               	movlb	0	; () banked
  4677  014464  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4681  014466  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  4682  01446A  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4683  01446E  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4684  014472  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4685  014476  C077  F076         	movff	??_CANSetMask+1,??_CANSetMask
  4686  01447A  C078  F077         	movff	??_CANSetMask+2,??_CANSetMask+1
  4687  01447E  C079  F078         	movff	??_CANSetMask+3,??_CANSetMask+2
  4688  014482  0100               	movlb	0	; () banked
  4689  014484  6B79               	clrf	(??_CANSetMask+3)& (0+255),b
  4690  014486  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4691  01448A  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4692  01448E  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4693  014492  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4697  014496  C07B  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4701  01449A  0100               	movlb	0	; () banked
  4702  01449C  A173               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4703  01449E  D003               	goto	l454
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4707  0144A0  010F               	movlb	15	; () banked
  4708  0144A2  8119               	bsf	25,0,b	;volatile
  4709  0144A4  D002               	goto	l455
  4710  0144A6                     l454:
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;inc\CANlib.h: 676: else
  4714                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4715  0144A6  010F               	movlb	15	; () banked
  4716  0144A8  9119               	bcf	25,0,b	;volatile
  4717  0144AA                     l455:
  4718                           
  4719                           ; BSR set to: 15
  4720                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4721  0144AA  0100               	movlb	0	; () banked
  4722  0144AC  A373               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4723  0144AE  D003               	goto	l456
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4727  0144B0  010F               	movlb	15	; () banked
  4728  0144B2  8319               	bsf	25,1,b	;volatile
  4729  0144B4  D002               	goto	l457
  4730  0144B6                     l456:
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;inc\CANlib.h: 681: else
  4734                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4735  0144B6  010F               	movlb	15	; () banked
  4736  0144B8  9319               	bcf	25,1,b	;volatile
  4737  0144BA                     l457:
  4738                           
  4739                           ; BSR set to: 15
  4740                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4741  0144BA  0100               	movlb	0	; () banked
  4742  0144BC  A573               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4743  0144BE  D003               	goto	l458
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4747  0144C0  010F               	movlb	15	; () banked
  4748  0144C2  8B19               	bsf	25,5,b	;volatile
  4749  0144C4  D002               	goto	l459
  4750  0144C6                     l458:
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;inc\CANlib.h: 686: else
  4754                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4755  0144C6  010F               	movlb	15	; () banked
  4756  0144C8  9B19               	bcf	25,5,b	;volatile
  4757  0144CA                     l459:
  4758                           
  4759                           ; BSR set to: 15
  4760                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4761  0144CA  0100               	movlb	0	; () banked
  4762  0144CC  A773               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4763  0144CE  D003               	goto	l460
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4767  0144D0  010F               	movlb	15	; () banked
  4768  0144D2  8D19               	bsf	25,6,b	;volatile
  4769  0144D4  D002               	goto	l461
  4770  0144D6                     l460:
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;inc\CANlib.h: 691: else
  4774                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4775  0144D6  010F               	movlb	15	; () banked
  4776  0144D8  9D19               	bcf	25,6,b	;volatile
  4777  0144DA                     l461:
  4778                           
  4779                           ; BSR set to: 15
  4780                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4781  0144DA  0100               	movlb	0	; () banked
  4782  0144DC  A973               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4783  0144DE  D003               	goto	l462
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4787  0144E0  010F               	movlb	15	; () banked
  4788  0144E2  8F19               	bsf	25,7,b	;volatile
  4789  0144E4  D002               	goto	l5567
  4790  0144E6                     l462:
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;inc\CANlib.h: 696: else
  4794                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4795  0144E6  010F               	movlb	15	; () banked
  4796  0144E8  9F19               	bcf	25,7,b	;volatile
  4797  0144EA                     l5567:
  4798                           
  4799                           ; BSR set to: 15
  4800                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4801  0144EA  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  4802  0144EE  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4803  0144F2  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4804  0144F6  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4805  0144FA  0E16               	movlw	22
  4806  0144FC  D006               	goto	u6410
  4807  0144FE                     u6415:
  4808  0144FE  0100               	movlb	0	; () banked
  4809  014500  90D8               	bcf	status,0,c
  4810  014502  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4811  014504  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4812  014506  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4813  014508  3376               	rrcf	??_CANSetMask& (0+255),f,b
  4814  01450A                     u6410:
  4815  01450A  2EE8               	decfsz	wreg,f,c
  4816  01450C  D7F8               	goto	u6415
  4817  01450E  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4818  014512  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4819  014516  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4820  01451A  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4824  01451E  0100               	movlb	0	; () banked
  4825  014520  517B               	movf	CANSetMask@tamp& (0+255),w,b
  4826  014522  0100               	movlb	0	; () banked
  4827  014524  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4828  014526  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4829  014528  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4830  01452A  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4834  01452C  C07B  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4835  014530                     l5573:
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;inc\CANlib.h: 702: }
  4839                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4840  014530  0E02               	movlw	2
  4841  014532  0100               	movlb	0	; () banked
  4842  014534  197A               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4843  014536  A4D8               	btfss	status,2,c
  4844  014538  0012               	return	
  4845                           
  4846                           ; BSR set to: 0
  4847  01453A  0EF7               	movlw	247
  4848  01453C  0100               	movlb	0	; () banked
  4849  01453E  1975               	xorwf	CANSetMask@type& (0+255),w,b
  4850  014540  A4D8               	btfss	status,2,c
  4851  014542  0012               	return	
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;inc\CANlib.h: 705: {
  4855                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4856  014544  0100               	movlb	0	; () banked
  4857  014546  5171               	movf	CANSetMask@mask& (0+255),w,b
  4858  014548  0100               	movlb	0	; () banked
  4859  01454A  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4860  01454C  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4861  01454E  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4862  014550  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4866  014552  C07B  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4870  014556  0E00               	movlw	0
  4871  014558  0100               	movlb	0	; () banked
  4872  01455A  1571               	andwf	CANSetMask@mask& (0+255),w,b
  4873  01455C  0100               	movlb	0	; () banked
  4874  01455E  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4875  014560  0EFF               	movlw	255
  4876  014562  0100               	movlb	0	; () banked
  4877  014564  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4878  014566  0100               	movlb	0	; () banked
  4879  014568  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4880  01456A  0E00               	movlw	0
  4881  01456C  0100               	movlb	0	; () banked
  4882  01456E  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4883  014570  0100               	movlb	0	; () banked
  4884  014572  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4885  014574  0E00               	movlw	0
  4886  014576  0100               	movlb	0	; () banked
  4887  014578  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4888  01457A  0100               	movlb	0	; () banked
  4889  01457C  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4890                           
  4891                           ; BSR set to: 0
  4892                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4893  01457E  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  4894  014582  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4895  014586  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4896  01458A  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4897  01458E  C077  F076         	movff	??_CANSetMask+1,??_CANSetMask
  4898  014592  C078  F077         	movff	??_CANSetMask+2,??_CANSetMask+1
  4899  014596  C079  F078         	movff	??_CANSetMask+3,??_CANSetMask+2
  4900  01459A  0100               	movlb	0	; () banked
  4901  01459C  6B79               	clrf	(??_CANSetMask+3)& (0+255),b
  4902  01459E  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4903  0145A2  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4904  0145A6  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4905  0145AA  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4909  0145AE  C07B  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4913  0145B2  0100               	movlb	0	; () banked
  4914  0145B4  A173               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4915  0145B6  D003               	goto	l465
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4919  0145B8  010F               	movlb	15	; () banked
  4920  0145BA  811D               	bsf	29,0,b	;volatile
  4921  0145BC  D002               	goto	l466
  4922  0145BE                     l465:
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;inc\CANlib.h: 715: else
  4926                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4927  0145BE  010F               	movlb	15	; () banked
  4928  0145C0  911D               	bcf	29,0,b	;volatile
  4929  0145C2                     l466:
  4930                           
  4931                           ; BSR set to: 15
  4932                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4933  0145C2  0100               	movlb	0	; () banked
  4934  0145C4  A373               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4935  0145C6  D003               	goto	l467
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4939  0145C8  010F               	movlb	15	; () banked
  4940  0145CA  831D               	bsf	29,1,b	;volatile
  4941  0145CC  D002               	goto	l468
  4942  0145CE                     l467:
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;inc\CANlib.h: 720: else
  4946                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4947  0145CE  010F               	movlb	15	; () banked
  4948  0145D0  931D               	bcf	29,1,b	;volatile
  4949  0145D2                     l468:
  4950                           
  4951                           ; BSR set to: 15
  4952                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4953  0145D2  0100               	movlb	0	; () banked
  4954  0145D4  A573               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4955  0145D6  D003               	goto	l469
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4959  0145D8  010F               	movlb	15	; () banked
  4960  0145DA  8B1D               	bsf	29,5,b	;volatile
  4961  0145DC  D002               	goto	l470
  4962  0145DE                     l469:
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;inc\CANlib.h: 725: else
  4966                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4967  0145DE  010F               	movlb	15	; () banked
  4968  0145E0  9B1D               	bcf	29,5,b	;volatile
  4969  0145E2                     l470:
  4970                           
  4971                           ; BSR set to: 15
  4972                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4973  0145E2  0100               	movlb	0	; () banked
  4974  0145E4  A773               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4975  0145E6  D003               	goto	l471
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4979  0145E8  010F               	movlb	15	; () banked
  4980  0145EA  8D1D               	bsf	29,6,b	;volatile
  4981  0145EC  D002               	goto	l472
  4982  0145EE                     l471:
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;inc\CANlib.h: 730: else
  4986                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4987  0145EE  010F               	movlb	15	; () banked
  4988  0145F0  9D1D               	bcf	29,6,b	;volatile
  4989  0145F2                     l472:
  4990                           
  4991                           ; BSR set to: 15
  4992                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4993  0145F2  0100               	movlb	0	; () banked
  4994  0145F4  A973               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4995  0145F6  D003               	goto	l473
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4999  0145F8  010F               	movlb	15	; () banked
  5000  0145FA  8F1D               	bsf	29,7,b	;volatile
  5001  0145FC  D002               	goto	l5599
  5002  0145FE                     l473:
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;inc\CANlib.h: 735: else
  5006                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  5007  0145FE  010F               	movlb	15	; () banked
  5008  014600  9F1D               	bcf	29,7,b	;volatile
  5009  014602                     l5599:
  5010                           
  5011                           ; BSR set to: 15
  5012                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  5013  014602  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  5014  014606  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  5015  01460A  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  5016  01460E  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  5017  014612  0E16               	movlw	22
  5018  014614  D006               	goto	u6490
  5019  014616                     u6495:
  5020  014616  0100               	movlb	0	; () banked
  5021  014618  90D8               	bcf	status,0,c
  5022  01461A  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  5023  01461C  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  5024  01461E  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  5025  014620  3376               	rrcf	??_CANSetMask& (0+255),f,b
  5026  014622                     u6490:
  5027  014622  2EE8               	decfsz	wreg,f,c
  5028  014624  D7F8               	goto	u6495
  5029  014626  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  5030  01462A  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  5031  01462E  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  5032  014632  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  5036  014636  0100               	movlb	0	; () banked
  5037  014638  517B               	movf	CANSetMask@tamp& (0+255),w,b
  5038  01463A  0100               	movlb	0	; () banked
  5039  01463C  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  5040  01463E  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  5041  014640  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  5042  014642  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  5046  014644  C07B  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  5047  014648  0012               	return	
  5048  01464A                     __end_of_CANSetMask:
  5049                           	opt stack 0
  5050                           tblptru	equ	0xFF8
  5051                           tblptrh	equ	0xFF7
  5052                           tblptrl	equ	0xFF6
  5053                           tablat	equ	0xFF5
  5054                           prodh	equ	0xFF4
  5055                           prodl	equ	0xFF3
  5056                           intcon	equ	0xFF2
  5057                           postinc0	equ	0xFEE
  5058                           wreg	equ	0xFE8
  5059                           postinc2	equ	0xFDE
  5060                           fsr2h	equ	0xFDA
  5061                           fsr2l	equ	0xFD9
  5062                           status	equ	0xFD8
  5063                           
  5064 ;; *************** function _CANSetFilter *****************
  5065 ;; Defined at:
  5066 ;;		line 748 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  numBuffer       1    wreg     enum E16786
  5069 ;;  filter          4   17[BANK0 ] unsigned long 
  5070 ;;  type            1   21[BANK0 ] enum E16749
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  numBuffer       1   26[BANK0 ] enum E16786
  5073 ;;  tamp            4   27[BANK0 ] unsigned long 
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  1    wreg      void 
  5076 ;; Registers used:
  5077 ;;		wreg, status,2, status,0
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5083 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5084 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5085 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5086 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5087 ;;Total ram usage:       14 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:    3
  5090 ;; This function calls:
  5091 ;;		Nothing
  5092 ;; This function is called by:
  5093 ;;		_CANInitialize
  5094 ;; This function uses a non-reentrant model
  5095 ;;
  5096                           
  5097                           	psect	text4
  5098  010000                     __ptext4:
  5099                           	opt stack 0
  5100  010000                     _CANSetFilter:
  5101                           	opt stack 25
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;incstack = 0
  5105                           ;CANSetFilter@numBuffer stored from wreg
  5106  010000  0100               	movlb	0	; () banked
  5107  010002  6F7A               	movwf	CANSetFilter@numBuffer& (0+255),b
  5108                           
  5109                           ;inc\CANlib.h: 750: unsigned long tamp;
  5110                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  5111  010004  0100               	movlb	0	; () banked
  5112  010006  517A               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5113  010008  0100               	movlb	0	; () banked
  5114  01000A  A4D8               	btfss	status,2,c
  5115  01000C  D058               	goto	l5623
  5116                           
  5117                           ; BSR set to: 0
  5118  01000E  0100               	movlb	0	; () banked
  5119  010010  2975               	incf	CANSetFilter@type& (0+255),w,b
  5120  010012  A4D8               	btfss	status,2,c
  5121  010014  D054               	goto	l5623
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;inc\CANlib.h: 753: {
  5125                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  5126  010016  010F               	movlb	15	; () banked
  5127  010018  9701               	bcf	1,3,b	;volatile
  5128                           
  5129                           ; BSR set to: 15
  5130                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  5131  01001A  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5132  01001E  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5133  010022  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5134  010026  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5135  01002A  0E04               	movlw	4
  5136  01002C  D006               	goto	u6520
  5137  01002E                     u6525:
  5138  01002E  0100               	movlb	0	; () banked
  5139  010030  90D8               	bcf	status,0,c
  5140  010032  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5141  010034  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5142  010036  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5143  010038  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5144  01003A                     u6520:
  5145  01003A  2EE8               	decfsz	wreg,f,c
  5146  01003C  D7F8               	goto	u6525
  5147  01003E  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5148  010042  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5149  010046  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5150  01004A  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  5154  01004E  0100               	movlb	0	; () banked
  5155  010050  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5156  010052  0100               	movlb	0	; () banked
  5157  010054  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5158  010056  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5159  010058  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5160  01005A  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  5164  01005C  C07B  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  5168  010060  0E07               	movlw	7
  5169  010062  0100               	movlb	0	; () banked
  5170  010064  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5171  010066  0100               	movlb	0	; () banked
  5172  010068  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5173  01006A  0E00               	movlw	0
  5174  01006C  0100               	movlb	0	; () banked
  5175  01006E  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5176  010070  0100               	movlb	0	; () banked
  5177  010072  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5178  010074  0E00               	movlw	0
  5179  010076  0100               	movlb	0	; () banked
  5180  010078  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5181  01007A  0100               	movlb	0	; () banked
  5182  01007C  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5183  01007E  0E00               	movlw	0
  5184  010080  0100               	movlb	0	; () banked
  5185  010082  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5186  010084  0100               	movlb	0	; () banked
  5187  010086  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  5191  010088  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5192  01008C  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5193  010090  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5194  010094  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5195  010098  0E05               	movlw	5
  5196  01009A                     u6535:
  5197  01009A  90D8               	bcf	status,0,c
  5198  01009C  0100               	movlb	0	; () banked
  5199  01009E  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  5200  0100A0  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5201  0100A2  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5202  0100A4  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5203  0100A6  2EE8               	decfsz	wreg,f,c
  5204  0100A8  D7F8               	goto	u6535
  5205  0100AA  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5206  0100AE  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5207  0100B2  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5208  0100B6  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  5212  0100BA  C07B  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  5213  0100BE                     l5623:
  5214                           
  5215                           ; BSR set to: 0
  5216                           ;inc\CANlib.h: 763: }
  5217                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  5218  0100BE  0100               	movlb	0	; () banked
  5219  0100C0  057A               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5220  0100C2  A4D8               	btfss	status,2,c
  5221  0100C4  D058               	goto	l5641
  5222                           
  5223                           ; BSR set to: 0
  5224  0100C6  0100               	movlb	0	; () banked
  5225  0100C8  2975               	incf	CANSetFilter@type& (0+255),w,b
  5226  0100CA  A4D8               	btfss	status,2,c
  5227  0100CC  D054               	goto	l5641
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;inc\CANlib.h: 766: {
  5231                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  5232  0100CE  010F               	movlb	15	; () banked
  5233  0100D0  9705               	bcf	5,3,b	;volatile
  5234                           
  5235                           ; BSR set to: 15
  5236                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  5237  0100D2  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5238  0100D6  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5239  0100DA  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5240  0100DE  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5241  0100E2  0E04               	movlw	4
  5242  0100E4  D006               	goto	u6560
  5243  0100E6                     u6565:
  5244  0100E6  0100               	movlb	0	; () banked
  5245  0100E8  90D8               	bcf	status,0,c
  5246  0100EA  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5247  0100EC  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5248  0100EE  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5249  0100F0  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5250  0100F2                     u6560:
  5251  0100F2  2EE8               	decfsz	wreg,f,c
  5252  0100F4  D7F8               	goto	u6565
  5253  0100F6  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5254  0100FA  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5255  0100FE  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5256  010102  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  5260  010106  0100               	movlb	0	; () banked
  5261  010108  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5262  01010A  0100               	movlb	0	; () banked
  5263  01010C  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5264  01010E  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5265  010110  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5266  010112  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  5270  010114  C07B  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  5274  010118  0E07               	movlw	7
  5275  01011A  0100               	movlb	0	; () banked
  5276  01011C  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5277  01011E  0100               	movlb	0	; () banked
  5278  010120  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5279  010122  0E00               	movlw	0
  5280  010124  0100               	movlb	0	; () banked
  5281  010126  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5282  010128  0100               	movlb	0	; () banked
  5283  01012A  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5284  01012C  0E00               	movlw	0
  5285  01012E  0100               	movlb	0	; () banked
  5286  010130  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5287  010132  0100               	movlb	0	; () banked
  5288  010134  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5289  010136  0E00               	movlw	0
  5290  010138  0100               	movlb	0	; () banked
  5291  01013A  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5292  01013C  0100               	movlb	0	; () banked
  5293  01013E  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  5297  010140  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5298  010144  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5299  010148  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5300  01014C  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5301  010150  0E05               	movlw	5
  5302  010152                     u6575:
  5303  010152  90D8               	bcf	status,0,c
  5304  010154  0100               	movlb	0	; () banked
  5305  010156  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  5306  010158  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5307  01015A  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5308  01015C  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5309  01015E  2EE8               	decfsz	wreg,f,c
  5310  010160  D7F8               	goto	u6575
  5311  010162  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5312  010166  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5313  01016A  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5314  01016E  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5315                           
  5316                           ; BSR set to: 0
  5317                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  5318  010172  C07B  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  5319  010176                     l5641:
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;inc\CANlib.h: 776: }
  5323                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  5324  010176  0E02               	movlw	2
  5325  010178  0100               	movlb	0	; () banked
  5326  01017A  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5327  01017C  A4D8               	btfss	status,2,c
  5328  01017E  D058               	goto	l5659
  5329                           
  5330                           ; BSR set to: 0
  5331  010180  0100               	movlb	0	; () banked
  5332  010182  2975               	incf	CANSetFilter@type& (0+255),w,b
  5333  010184  A4D8               	btfss	status,2,c
  5334  010186  D054               	goto	l5659
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;inc\CANlib.h: 779: {
  5338                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  5339  010188  010F               	movlb	15	; () banked
  5340  01018A  9709               	bcf	9,3,b	;volatile
  5341                           
  5342                           ; BSR set to: 15
  5343                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  5344  01018C  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5345  010190  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5346  010194  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5347  010198  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5348  01019C  0E04               	movlw	4
  5349  01019E  D006               	goto	u6600
  5350  0101A0                     u6605:
  5351  0101A0  0100               	movlb	0	; () banked
  5352  0101A2  90D8               	bcf	status,0,c
  5353  0101A4  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5354  0101A6  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5355  0101A8  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5356  0101AA  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5357  0101AC                     u6600:
  5358  0101AC  2EE8               	decfsz	wreg,f,c
  5359  0101AE  D7F8               	goto	u6605
  5360  0101B0  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5361  0101B4  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5362  0101B8  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5363  0101BC  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5364                           
  5365                           ; BSR set to: 0
  5366                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  5367  0101C0  0100               	movlb	0	; () banked
  5368  0101C2  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5369  0101C4  0100               	movlb	0	; () banked
  5370  0101C6  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5371  0101C8  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5372  0101CA  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5373  0101CC  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  5377  0101CE  C07B  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  5381  0101D2  0E07               	movlw	7
  5382  0101D4  0100               	movlb	0	; () banked
  5383  0101D6  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5384  0101D8  0100               	movlb	0	; () banked
  5385  0101DA  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5386  0101DC  0E00               	movlw	0
  5387  0101DE  0100               	movlb	0	; () banked
  5388  0101E0  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5389  0101E2  0100               	movlb	0	; () banked
  5390  0101E4  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5391  0101E6  0E00               	movlw	0
  5392  0101E8  0100               	movlb	0	; () banked
  5393  0101EA  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5394  0101EC  0100               	movlb	0	; () banked
  5395  0101EE  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5396  0101F0  0E00               	movlw	0
  5397  0101F2  0100               	movlb	0	; () banked
  5398  0101F4  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5399  0101F6  0100               	movlb	0	; () banked
  5400  0101F8  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  5404  0101FA  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5405  0101FE  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5406  010202  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5407  010206  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5408  01020A  0E05               	movlw	5
  5409  01020C                     u6615:
  5410  01020C  90D8               	bcf	status,0,c
  5411  01020E  0100               	movlb	0	; () banked
  5412  010210  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  5413  010212  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5414  010214  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5415  010216  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5416  010218  2EE8               	decfsz	wreg,f,c
  5417  01021A  D7F8               	goto	u6615
  5418  01021C  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5419  010220  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5420  010224  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5421  010228  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5422                           
  5423                           ; BSR set to: 0
  5424                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  5425  01022C  C07B  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  5426  010230                     l5659:
  5427                           
  5428                           ; BSR set to: 0
  5429                           ;inc\CANlib.h: 789: }
  5430                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  5431  010230  0E03               	movlw	3
  5432  010232  0100               	movlb	0	; () banked
  5433  010234  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5434  010236  A4D8               	btfss	status,2,c
  5435  010238  D058               	goto	l5677
  5436                           
  5437                           ; BSR set to: 0
  5438  01023A  0100               	movlb	0	; () banked
  5439  01023C  2975               	incf	CANSetFilter@type& (0+255),w,b
  5440  01023E  A4D8               	btfss	status,2,c
  5441  010240  D054               	goto	l5677
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;inc\CANlib.h: 792: {
  5445                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  5446  010242  010F               	movlb	15	; () banked
  5447  010244  970D               	bcf	13,3,b	;volatile
  5448                           
  5449                           ; BSR set to: 15
  5450                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  5451  010246  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5452  01024A  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5453  01024E  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5454  010252  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5455  010256  0E04               	movlw	4
  5456  010258  D006               	goto	u6640
  5457  01025A                     u6645:
  5458  01025A  0100               	movlb	0	; () banked
  5459  01025C  90D8               	bcf	status,0,c
  5460  01025E  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5461  010260  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5462  010262  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5463  010264  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5464  010266                     u6640:
  5465  010266  2EE8               	decfsz	wreg,f,c
  5466  010268  D7F8               	goto	u6645
  5467  01026A  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5468  01026E  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5469  010272  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5470  010276  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5471                           
  5472                           ; BSR set to: 0
  5473                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  5474  01027A  0100               	movlb	0	; () banked
  5475  01027C  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5476  01027E  0100               	movlb	0	; () banked
  5477  010280  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5478  010282  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5479  010284  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5480  010286  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5481                           
  5482                           ; BSR set to: 0
  5483                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  5484  010288  C07B  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  5488  01028C  0E07               	movlw	7
  5489  01028E  0100               	movlb	0	; () banked
  5490  010290  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5491  010292  0100               	movlb	0	; () banked
  5492  010294  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5493  010296  0E00               	movlw	0
  5494  010298  0100               	movlb	0	; () banked
  5495  01029A  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5496  01029C  0100               	movlb	0	; () banked
  5497  01029E  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5498  0102A0  0E00               	movlw	0
  5499  0102A2  0100               	movlb	0	; () banked
  5500  0102A4  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5501  0102A6  0100               	movlb	0	; () banked
  5502  0102A8  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5503  0102AA  0E00               	movlw	0
  5504  0102AC  0100               	movlb	0	; () banked
  5505  0102AE  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5506  0102B0  0100               	movlb	0	; () banked
  5507  0102B2  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  5511  0102B4  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5512  0102B8  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5513  0102BC  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5514  0102C0  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5515  0102C4  0E05               	movlw	5
  5516  0102C6                     u6655:
  5517  0102C6  90D8               	bcf	status,0,c
  5518  0102C8  0100               	movlb	0	; () banked
  5519  0102CA  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  5520  0102CC  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5521  0102CE  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5522  0102D0  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5523  0102D2  2EE8               	decfsz	wreg,f,c
  5524  0102D4  D7F8               	goto	u6655
  5525  0102D6  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5526  0102DA  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5527  0102DE  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5528  0102E2  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5529                           
  5530                           ; BSR set to: 0
  5531                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  5532  0102E6  C07B  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  5533  0102EA                     l5677:
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;inc\CANlib.h: 802: }
  5537                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  5538  0102EA  0E04               	movlw	4
  5539  0102EC  0100               	movlb	0	; () banked
  5540  0102EE  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5541  0102F0  A4D8               	btfss	status,2,c
  5542  0102F2  D058               	goto	l5695
  5543                           
  5544                           ; BSR set to: 0
  5545  0102F4  0100               	movlb	0	; () banked
  5546  0102F6  2975               	incf	CANSetFilter@type& (0+255),w,b
  5547  0102F8  A4D8               	btfss	status,2,c
  5548  0102FA  D054               	goto	l5695
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;inc\CANlib.h: 805: {
  5552                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  5553  0102FC  010F               	movlb	15	; () banked
  5554  0102FE  9711               	bcf	17,3,b	;volatile
  5555                           
  5556                           ; BSR set to: 15
  5557                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  5558  010300  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5559  010304  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5560  010308  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5561  01030C  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5562  010310  0E04               	movlw	4
  5563  010312  D006               	goto	u6680
  5564  010314                     u6685:
  5565  010314  0100               	movlb	0	; () banked
  5566  010316  90D8               	bcf	status,0,c
  5567  010318  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5568  01031A  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5569  01031C  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5570  01031E  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5571  010320                     u6680:
  5572  010320  2EE8               	decfsz	wreg,f,c
  5573  010322  D7F8               	goto	u6685
  5574  010324  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5575  010328  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5576  01032C  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5577  010330  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  5581  010334  0100               	movlb	0	; () banked
  5582  010336  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5583  010338  0100               	movlb	0	; () banked
  5584  01033A  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5585  01033C  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5586  01033E  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5587  010340  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5591  010342  C07B  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  5595  010346  0E07               	movlw	7
  5596  010348  0100               	movlb	0	; () banked
  5597  01034A  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5598  01034C  0100               	movlb	0	; () banked
  5599  01034E  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5600  010350  0E00               	movlw	0
  5601  010352  0100               	movlb	0	; () banked
  5602  010354  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5603  010356  0100               	movlb	0	; () banked
  5604  010358  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5605  01035A  0E00               	movlw	0
  5606  01035C  0100               	movlb	0	; () banked
  5607  01035E  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5608  010360  0100               	movlb	0	; () banked
  5609  010362  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5610  010364  0E00               	movlw	0
  5611  010366  0100               	movlb	0	; () banked
  5612  010368  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5613  01036A  0100               	movlb	0	; () banked
  5614  01036C  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5618  01036E  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5619  010372  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5620  010376  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5621  01037A  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5622  01037E  0E05               	movlw	5
  5623  010380                     u6695:
  5624  010380  90D8               	bcf	status,0,c
  5625  010382  0100               	movlb	0	; () banked
  5626  010384  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  5627  010386  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5628  010388  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5629  01038A  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5630  01038C  2EE8               	decfsz	wreg,f,c
  5631  01038E  D7F8               	goto	u6695
  5632  010390  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5633  010394  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5634  010398  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5635  01039C  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5636                           
  5637                           ; BSR set to: 0
  5638                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5639  0103A0  C07B  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5640  0103A4                     l5695:
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;inc\CANlib.h: 815: }
  5644                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5645  0103A4  0E05               	movlw	5
  5646  0103A6  0100               	movlb	0	; () banked
  5647  0103A8  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5648  0103AA  A4D8               	btfss	status,2,c
  5649  0103AC  D058               	goto	l5713
  5650                           
  5651                           ; BSR set to: 0
  5652  0103AE  0100               	movlb	0	; () banked
  5653  0103B0  2975               	incf	CANSetFilter@type& (0+255),w,b
  5654  0103B2  A4D8               	btfss	status,2,c
  5655  0103B4  D054               	goto	l5713
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;inc\CANlib.h: 818: {
  5659                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5660  0103B6  010F               	movlb	15	; () banked
  5661  0103B8  9715               	bcf	21,3,b	;volatile
  5662                           
  5663                           ; BSR set to: 15
  5664                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5665  0103BA  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5666  0103BE  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5667  0103C2  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5668  0103C6  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5669  0103CA  0E04               	movlw	4
  5670  0103CC  D006               	goto	u6720
  5671  0103CE                     u6725:
  5672  0103CE  0100               	movlb	0	; () banked
  5673  0103D0  90D8               	bcf	status,0,c
  5674  0103D2  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5675  0103D4  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5676  0103D6  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5677  0103D8  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5678  0103DA                     u6720:
  5679  0103DA  2EE8               	decfsz	wreg,f,c
  5680  0103DC  D7F8               	goto	u6725
  5681  0103DE  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5682  0103E2  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5683  0103E6  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5684  0103EA  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5685                           
  5686                           ; BSR set to: 0
  5687                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5688  0103EE  0100               	movlb	0	; () banked
  5689  0103F0  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5690  0103F2  0100               	movlb	0	; () banked
  5691  0103F4  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5692  0103F6  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5693  0103F8  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5694  0103FA  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5695                           
  5696                           ; BSR set to: 0
  5697                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5698  0103FC  C07B  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5699                           
  5700                           ; BSR set to: 0
  5701                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5702  010400  0E07               	movlw	7
  5703  010402  0100               	movlb	0	; () banked
  5704  010404  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5705  010406  0100               	movlb	0	; () banked
  5706  010408  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5707  01040A  0E00               	movlw	0
  5708  01040C  0100               	movlb	0	; () banked
  5709  01040E  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5710  010410  0100               	movlb	0	; () banked
  5711  010412  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5712  010414  0E00               	movlw	0
  5713  010416  0100               	movlb	0	; () banked
  5714  010418  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5715  01041A  0100               	movlb	0	; () banked
  5716  01041C  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5717  01041E  0E00               	movlw	0
  5718  010420  0100               	movlb	0	; () banked
  5719  010422  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5720  010424  0100               	movlb	0	; () banked
  5721  010426  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5722                           
  5723                           ; BSR set to: 0
  5724                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5725  010428  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5726  01042C  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5727  010430  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5728  010434  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5729  010438  0E05               	movlw	5
  5730  01043A                     u6735:
  5731  01043A  90D8               	bcf	status,0,c
  5732  01043C  0100               	movlb	0	; () banked
  5733  01043E  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  5734  010440  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5735  010442  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5736  010444  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5737  010446  2EE8               	decfsz	wreg,f,c
  5738  010448  D7F8               	goto	u6735
  5739  01044A  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5740  01044E  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5741  010452  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5742  010456  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5746  01045A  C07B  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5747  01045E                     l5713:
  5748                           
  5749                           ; BSR set to: 0
  5750                           ;inc\CANlib.h: 828: }
  5751                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5752  01045E  0100               	movlb	0	; () banked
  5753  010460  517A               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5754  010462  0100               	movlb	0	; () banked
  5755  010464  A4D8               	btfss	status,2,c
  5756  010466  D089               	goto	l5747
  5757                           
  5758                           ; BSR set to: 0
  5759  010468  0EF7               	movlw	247
  5760  01046A  0100               	movlb	0	; () banked
  5761  01046C  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5762  01046E  A4D8               	btfss	status,2,c
  5763  010470  D084               	goto	l5747
  5764                           
  5765                           ; BSR set to: 0
  5766                           ;inc\CANlib.h: 832: {
  5767                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5768  010472  010F               	movlb	15	; () banked
  5769  010474  8701               	bsf	1,3,b	;volatile
  5770                           
  5771                           ; BSR set to: 15
  5772                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5773  010476  0100               	movlb	0	; () banked
  5774  010478  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5775  01047A  0100               	movlb	0	; () banked
  5776  01047C  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5777  01047E  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5778  010480  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5779  010482  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5780                           
  5781                           ; BSR set to: 0
  5782                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5783  010484  C07B  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5787  010488  0E00               	movlw	0
  5788  01048A  0100               	movlb	0	; () banked
  5789  01048C  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5790  01048E  0100               	movlb	0	; () banked
  5791  010490  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5792  010492  0EFF               	movlw	255
  5793  010494  0100               	movlb	0	; () banked
  5794  010496  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5795  010498  0100               	movlb	0	; () banked
  5796  01049A  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5797  01049C  0E00               	movlw	0
  5798  01049E  0100               	movlb	0	; () banked
  5799  0104A0  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5800  0104A2  0100               	movlb	0	; () banked
  5801  0104A4  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5802  0104A6  0E00               	movlw	0
  5803  0104A8  0100               	movlb	0	; () banked
  5804  0104AA  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5805  0104AC  0100               	movlb	0	; () banked
  5806  0104AE  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5810  0104B0  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5811  0104B4  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5812  0104B8  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5813  0104BC  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5814  0104C0  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  5815  0104C4  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5816  0104C8  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5817  0104CC  0100               	movlb	0	; () banked
  5818  0104CE  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  5819  0104D0  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5820  0104D4  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5821  0104D8  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5822  0104DC  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5826  0104E0  C07B  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5827                           
  5828                           ; BSR set to: 0
  5829                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5830  0104E4  0100               	movlb	0	; () banked
  5831  0104E6  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5832  0104E8  D003               	goto	l485
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5836  0104EA  010F               	movlb	15	; () banked
  5837  0104EC  8101               	bsf	1,0,b	;volatile
  5838  0104EE  D002               	goto	l486
  5839  0104F0                     l485:
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;inc\CANlib.h: 844: else
  5843                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5844  0104F0  010F               	movlb	15	; () banked
  5845  0104F2  9101               	bcf	1,0,b	;volatile
  5846  0104F4                     l486:
  5847                           
  5848                           ; BSR set to: 15
  5849                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5850  0104F4  0100               	movlb	0	; () banked
  5851  0104F6  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5852  0104F8  D003               	goto	l487
  5853                           
  5854                           ; BSR set to: 0
  5855                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5856  0104FA  010F               	movlb	15	; () banked
  5857  0104FC  8301               	bsf	1,1,b	;volatile
  5858  0104FE  D002               	goto	l488
  5859  010500                     l487:
  5860                           
  5861                           ; BSR set to: 0
  5862                           ;inc\CANlib.h: 849: else
  5863                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5864  010500  010F               	movlb	15	; () banked
  5865  010502  9301               	bcf	1,1,b	;volatile
  5866  010504                     l488:
  5867                           
  5868                           ; BSR set to: 15
  5869                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5870  010504  0100               	movlb	0	; () banked
  5871  010506  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5872  010508  D003               	goto	l489
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5876  01050A  010F               	movlb	15	; () banked
  5877  01050C  8B01               	bsf	1,5,b	;volatile
  5878  01050E  D002               	goto	l490
  5879  010510                     l489:
  5880                           
  5881                           ; BSR set to: 0
  5882                           ;inc\CANlib.h: 854: else
  5883                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5884  010510  010F               	movlb	15	; () banked
  5885  010512  9B01               	bcf	1,5,b	;volatile
  5886  010514                     l490:
  5887                           
  5888                           ; BSR set to: 15
  5889                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5890  010514  0100               	movlb	0	; () banked
  5891  010516  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5892  010518  D003               	goto	l491
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5896  01051A  010F               	movlb	15	; () banked
  5897  01051C  8D01               	bsf	1,6,b	;volatile
  5898  01051E  D002               	goto	l492
  5899  010520                     l491:
  5900                           
  5901                           ; BSR set to: 0
  5902                           ;inc\CANlib.h: 859: else
  5903                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5904  010520  010F               	movlb	15	; () banked
  5905  010522  9D01               	bcf	1,6,b	;volatile
  5906  010524                     l492:
  5907                           
  5908                           ; BSR set to: 15
  5909                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5910  010524  0100               	movlb	0	; () banked
  5911  010526  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5912  010528  D003               	goto	l493
  5913                           
  5914                           ; BSR set to: 0
  5915                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5916  01052A  010F               	movlb	15	; () banked
  5917  01052C  8F01               	bsf	1,7,b	;volatile
  5918  01052E  D002               	goto	l5741
  5919  010530                     l493:
  5920                           
  5921                           ; BSR set to: 0
  5922                           ;inc\CANlib.h: 864: else
  5923                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5924  010530  010F               	movlb	15	; () banked
  5925  010532  9F01               	bcf	1,7,b	;volatile
  5926  010534                     l5741:
  5927                           
  5928                           ; BSR set to: 15
  5929                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5930  010534  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5931  010538  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5932  01053C  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5933  010540  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5934  010544  0E16               	movlw	22
  5935  010546  D006               	goto	u6810
  5936  010548                     u6815:
  5937  010548  0100               	movlb	0	; () banked
  5938  01054A  90D8               	bcf	status,0,c
  5939  01054C  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5940  01054E  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5941  010550  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5942  010552  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5943  010554                     u6810:
  5944  010554  2EE8               	decfsz	wreg,f,c
  5945  010556  D7F8               	goto	u6815
  5946  010558  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5947  01055C  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5948  010560  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5949  010564  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5953  010568  0100               	movlb	0	; () banked
  5954  01056A  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5955  01056C  0100               	movlb	0	; () banked
  5956  01056E  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5957  010570  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5958  010572  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5959  010574  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5963  010576  C07B  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5964  01057A                     l5747:
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;inc\CANlib.h: 870: }
  5968                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5969  01057A  0100               	movlb	0	; () banked
  5970  01057C  057A               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5971  01057E  A4D8               	btfss	status,2,c
  5972  010580  D089               	goto	l5781
  5973                           
  5974                           ; BSR set to: 0
  5975  010582  0EF7               	movlw	247
  5976  010584  0100               	movlb	0	; () banked
  5977  010586  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5978  010588  A4D8               	btfss	status,2,c
  5979  01058A  D084               	goto	l5781
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;inc\CANlib.h: 873: {
  5983                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5984  01058C  010F               	movlb	15	; () banked
  5985  01058E  8705               	bsf	5,3,b	;volatile
  5986                           
  5987                           ; BSR set to: 15
  5988                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5989  010590  0100               	movlb	0	; () banked
  5990  010592  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5991  010594  0100               	movlb	0	; () banked
  5992  010596  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5993  010598  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5994  01059A  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5995  01059C  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5996                           
  5997                           ; BSR set to: 0
  5998                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5999  01059E  C07B  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  6003  0105A2  0E00               	movlw	0
  6004  0105A4  0100               	movlb	0	; () banked
  6005  0105A6  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  6006  0105A8  0100               	movlb	0	; () banked
  6007  0105AA  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6008  0105AC  0EFF               	movlw	255
  6009  0105AE  0100               	movlb	0	; () banked
  6010  0105B0  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6011  0105B2  0100               	movlb	0	; () banked
  6012  0105B4  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6013  0105B6  0E00               	movlw	0
  6014  0105B8  0100               	movlb	0	; () banked
  6015  0105BA  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6016  0105BC  0100               	movlb	0	; () banked
  6017  0105BE  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6018  0105C0  0E00               	movlw	0
  6019  0105C2  0100               	movlb	0	; () banked
  6020  0105C4  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6021  0105C6  0100               	movlb	0	; () banked
  6022  0105C8  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  6026  0105CA  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  6027  0105CE  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6028  0105D2  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6029  0105D6  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6030  0105DA  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  6031  0105DE  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6032  0105E2  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6033  0105E6  0100               	movlb	0	; () banked
  6034  0105E8  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  6035  0105EA  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6036  0105EE  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6037  0105F2  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6038  0105F6  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6039                           
  6040                           ; BSR set to: 0
  6041                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  6042  0105FA  C07B  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  6046  0105FE  0100               	movlb	0	; () banked
  6047  010600  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6048  010602  D003               	goto	l496
  6049                           
  6050                           ; BSR set to: 0
  6051                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  6052  010604  010F               	movlb	15	; () banked
  6053  010606  8105               	bsf	5,0,b	;volatile
  6054  010608  D002               	goto	l497
  6055  01060A                     l496:
  6056                           
  6057                           ; BSR set to: 0
  6058                           ;inc\CANlib.h: 885: else
  6059                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  6060  01060A  010F               	movlb	15	; () banked
  6061  01060C  9105               	bcf	5,0,b	;volatile
  6062  01060E                     l497:
  6063                           
  6064                           ; BSR set to: 15
  6065                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  6066  01060E  0100               	movlb	0	; () banked
  6067  010610  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6068  010612  D003               	goto	l498
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  6072  010614  010F               	movlb	15	; () banked
  6073  010616  8305               	bsf	5,1,b	;volatile
  6074  010618  D002               	goto	l499
  6075  01061A                     l498:
  6076                           
  6077                           ; BSR set to: 0
  6078                           ;inc\CANlib.h: 890: else
  6079                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  6080  01061A  010F               	movlb	15	; () banked
  6081  01061C  9305               	bcf	5,1,b	;volatile
  6082  01061E                     l499:
  6083                           
  6084                           ; BSR set to: 15
  6085                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  6086  01061E  0100               	movlb	0	; () banked
  6087  010620  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6088  010622  D003               	goto	l500
  6089                           
  6090                           ; BSR set to: 0
  6091                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  6092  010624  010F               	movlb	15	; () banked
  6093  010626  8B05               	bsf	5,5,b	;volatile
  6094  010628  D002               	goto	l501
  6095  01062A                     l500:
  6096                           
  6097                           ; BSR set to: 0
  6098                           ;inc\CANlib.h: 895: else
  6099                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  6100  01062A  010F               	movlb	15	; () banked
  6101  01062C  9B05               	bcf	5,5,b	;volatile
  6102  01062E                     l501:
  6103                           
  6104                           ; BSR set to: 15
  6105                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  6106  01062E  0100               	movlb	0	; () banked
  6107  010630  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6108  010632  D003               	goto	l502
  6109                           
  6110                           ; BSR set to: 0
  6111                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  6112  010634  010F               	movlb	15	; () banked
  6113  010636  8D05               	bsf	5,6,b	;volatile
  6114  010638  D002               	goto	l503
  6115  01063A                     l502:
  6116                           
  6117                           ; BSR set to: 0
  6118                           ;inc\CANlib.h: 900: else
  6119                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  6120  01063A  010F               	movlb	15	; () banked
  6121  01063C  9D05               	bcf	5,6,b	;volatile
  6122  01063E                     l503:
  6123                           
  6124                           ; BSR set to: 15
  6125                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  6126  01063E  0100               	movlb	0	; () banked
  6127  010640  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6128  010642  D003               	goto	l504
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  6132  010644  010F               	movlb	15	; () banked
  6133  010646  8F05               	bsf	5,7,b	;volatile
  6134  010648  D002               	goto	l5775
  6135  01064A                     l504:
  6136                           
  6137                           ; BSR set to: 0
  6138                           ;inc\CANlib.h: 905: else
  6139                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  6140  01064A  010F               	movlb	15	; () banked
  6141  01064C  9F05               	bcf	5,7,b	;volatile
  6142  01064E                     l5775:
  6143                           
  6144                           ; BSR set to: 15
  6145                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  6146  01064E  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  6147  010652  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6148  010656  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6149  01065A  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6150  01065E  0E16               	movlw	22
  6151  010660  D006               	goto	u6890
  6152  010662                     u6895:
  6153  010662  0100               	movlb	0	; () banked
  6154  010664  90D8               	bcf	status,0,c
  6155  010666  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6156  010668  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6157  01066A  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6158  01066C  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  6159  01066E                     u6890:
  6160  01066E  2EE8               	decfsz	wreg,f,c
  6161  010670  D7F8               	goto	u6895
  6162  010672  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6163  010676  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6164  01067A  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6165  01067E  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6166                           
  6167                           ; BSR set to: 0
  6168                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  6169  010682  0100               	movlb	0	; () banked
  6170  010684  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  6171  010686  0100               	movlb	0	; () banked
  6172  010688  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6173  01068A  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6174  01068C  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6175  01068E  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6176                           
  6177                           ; BSR set to: 0
  6178                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  6179  010690  C07B  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  6180  010694                     l5781:
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;inc\CANlib.h: 911: }
  6184                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  6185  010694  0E02               	movlw	2
  6186  010696  0100               	movlb	0	; () banked
  6187  010698  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6188  01069A  A4D8               	btfss	status,2,c
  6189  01069C  D089               	goto	l5815
  6190                           
  6191                           ; BSR set to: 0
  6192  01069E  0EF7               	movlw	247
  6193  0106A0  0100               	movlb	0	; () banked
  6194  0106A2  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  6195  0106A4  A4D8               	btfss	status,2,c
  6196  0106A6  D084               	goto	l5815
  6197                           
  6198                           ; BSR set to: 0
  6199                           ;inc\CANlib.h: 915: {
  6200                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  6201  0106A8  010F               	movlb	15	; () banked
  6202  0106AA  8709               	bsf	9,3,b	;volatile
  6203                           
  6204                           ; BSR set to: 15
  6205                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  6206  0106AC  0100               	movlb	0	; () banked
  6207  0106AE  5171               	movf	CANSetFilter@filter& (0+255),w,b
  6208  0106B0  0100               	movlb	0	; () banked
  6209  0106B2  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6210  0106B4  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6211  0106B6  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6212  0106B8  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6213                           
  6214                           ; BSR set to: 0
  6215                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  6216  0106BA  C07B  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  6217                           
  6218                           ; BSR set to: 0
  6219                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  6220  0106BE  0E00               	movlw	0
  6221  0106C0  0100               	movlb	0	; () banked
  6222  0106C2  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  6223  0106C4  0100               	movlb	0	; () banked
  6224  0106C6  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6225  0106C8  0EFF               	movlw	255
  6226  0106CA  0100               	movlb	0	; () banked
  6227  0106CC  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6228  0106CE  0100               	movlb	0	; () banked
  6229  0106D0  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6230  0106D2  0E00               	movlw	0
  6231  0106D4  0100               	movlb	0	; () banked
  6232  0106D6  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6233  0106D8  0100               	movlb	0	; () banked
  6234  0106DA  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6235  0106DC  0E00               	movlw	0
  6236  0106DE  0100               	movlb	0	; () banked
  6237  0106E0  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6238  0106E2  0100               	movlb	0	; () banked
  6239  0106E4  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6240                           
  6241                           ; BSR set to: 0
  6242                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  6243  0106E6  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  6244  0106EA  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6245  0106EE  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6246  0106F2  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6247  0106F6  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  6248  0106FA  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6249  0106FE  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6250  010702  0100               	movlb	0	; () banked
  6251  010704  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  6252  010706  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6253  01070A  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6254  01070E  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6255  010712  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6256                           
  6257                           ; BSR set to: 0
  6258                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  6259  010716  C07B  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  6263  01071A  0100               	movlb	0	; () banked
  6264  01071C  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6265  01071E  D003               	goto	l507
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  6269  010720  010F               	movlb	15	; () banked
  6270  010722  8109               	bsf	9,0,b	;volatile
  6271  010724  D002               	goto	l508
  6272  010726                     l507:
  6273                           
  6274                           ; BSR set to: 0
  6275                           ;inc\CANlib.h: 927: else
  6276                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  6277  010726  010F               	movlb	15	; () banked
  6278  010728  9109               	bcf	9,0,b	;volatile
  6279  01072A                     l508:
  6280                           
  6281                           ; BSR set to: 15
  6282                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  6283  01072A  0100               	movlb	0	; () banked
  6284  01072C  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6285  01072E  D003               	goto	l509
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  6289  010730  010F               	movlb	15	; () banked
  6290  010732  8309               	bsf	9,1,b	;volatile
  6291  010734  D002               	goto	l510
  6292  010736                     l509:
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;inc\CANlib.h: 932: else
  6296                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  6297  010736  010F               	movlb	15	; () banked
  6298  010738  9309               	bcf	9,1,b	;volatile
  6299  01073A                     l510:
  6300                           
  6301                           ; BSR set to: 15
  6302                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  6303  01073A  0100               	movlb	0	; () banked
  6304  01073C  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6305  01073E  D003               	goto	l511
  6306                           
  6307                           ; BSR set to: 0
  6308                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  6309  010740  010F               	movlb	15	; () banked
  6310  010742  8B09               	bsf	9,5,b	;volatile
  6311  010744  D002               	goto	l512
  6312  010746                     l511:
  6313                           
  6314                           ; BSR set to: 0
  6315                           ;inc\CANlib.h: 937: else
  6316                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  6317  010746  010F               	movlb	15	; () banked
  6318  010748  9B09               	bcf	9,5,b	;volatile
  6319  01074A                     l512:
  6320                           
  6321                           ; BSR set to: 15
  6322                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  6323  01074A  0100               	movlb	0	; () banked
  6324  01074C  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6325  01074E  D003               	goto	l513
  6326                           
  6327                           ; BSR set to: 0
  6328                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  6329  010750  010F               	movlb	15	; () banked
  6330  010752  8D09               	bsf	9,6,b	;volatile
  6331  010754  D002               	goto	l514
  6332  010756                     l513:
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;inc\CANlib.h: 942: else
  6336                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  6337  010756  010F               	movlb	15	; () banked
  6338  010758  9D09               	bcf	9,6,b	;volatile
  6339  01075A                     l514:
  6340                           
  6341                           ; BSR set to: 15
  6342                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  6343  01075A  0100               	movlb	0	; () banked
  6344  01075C  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6345  01075E  D003               	goto	l515
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  6349  010760  010F               	movlb	15	; () banked
  6350  010762  8F09               	bsf	9,7,b	;volatile
  6351  010764  D002               	goto	l5809
  6352  010766                     l515:
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;inc\CANlib.h: 947: else
  6356                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  6357  010766  010F               	movlb	15	; () banked
  6358  010768  9F09               	bcf	9,7,b	;volatile
  6359  01076A                     l5809:
  6360                           
  6361                           ; BSR set to: 15
  6362                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  6363  01076A  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  6364  01076E  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6365  010772  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6366  010776  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6367  01077A  0E16               	movlw	22
  6368  01077C  D006               	goto	u6970
  6369  01077E                     u6975:
  6370  01077E  0100               	movlb	0	; () banked
  6371  010780  90D8               	bcf	status,0,c
  6372  010782  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6373  010784  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6374  010786  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6375  010788  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  6376  01078A                     u6970:
  6377  01078A  2EE8               	decfsz	wreg,f,c
  6378  01078C  D7F8               	goto	u6975
  6379  01078E  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6380  010792  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6381  010796  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6382  01079A  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6383                           
  6384                           ; BSR set to: 0
  6385                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  6386  01079E  0100               	movlb	0	; () banked
  6387  0107A0  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  6388  0107A2  0100               	movlb	0	; () banked
  6389  0107A4  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6390  0107A6  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6391  0107A8  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6392  0107AA  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6393                           
  6394                           ; BSR set to: 0
  6395                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  6396  0107AC  C07B  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  6397  0107B0                     l5815:
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;inc\CANlib.h: 953: }
  6401                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  6402  0107B0  0E03               	movlw	3
  6403  0107B2  0100               	movlb	0	; () banked
  6404  0107B4  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6405  0107B6  A4D8               	btfss	status,2,c
  6406  0107B8  D089               	goto	l5849
  6407                           
  6408                           ; BSR set to: 0
  6409  0107BA  0EF7               	movlw	247
  6410  0107BC  0100               	movlb	0	; () banked
  6411  0107BE  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  6412  0107C0  A4D8               	btfss	status,2,c
  6413  0107C2  D084               	goto	l5849
  6414                           
  6415                           ; BSR set to: 0
  6416                           ;inc\CANlib.h: 956: {
  6417                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  6418  0107C4  010F               	movlb	15	; () banked
  6419  0107C6  870D               	bsf	13,3,b	;volatile
  6420                           
  6421                           ; BSR set to: 15
  6422                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  6423  0107C8  0100               	movlb	0	; () banked
  6424  0107CA  5171               	movf	CANSetFilter@filter& (0+255),w,b
  6425  0107CC  0100               	movlb	0	; () banked
  6426  0107CE  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6427  0107D0  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6428  0107D2  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6429  0107D4  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6430                           
  6431                           ; BSR set to: 0
  6432                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  6433  0107D6  C07B  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  6434                           
  6435                           ; BSR set to: 0
  6436                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  6437  0107DA  0E00               	movlw	0
  6438  0107DC  0100               	movlb	0	; () banked
  6439  0107DE  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  6440  0107E0  0100               	movlb	0	; () banked
  6441  0107E2  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6442  0107E4  0EFF               	movlw	255
  6443  0107E6  0100               	movlb	0	; () banked
  6444  0107E8  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6445  0107EA  0100               	movlb	0	; () banked
  6446  0107EC  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6447  0107EE  0E00               	movlw	0
  6448  0107F0  0100               	movlb	0	; () banked
  6449  0107F2  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6450  0107F4  0100               	movlb	0	; () banked
  6451  0107F6  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6452  0107F8  0E00               	movlw	0
  6453  0107FA  0100               	movlb	0	; () banked
  6454  0107FC  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6455  0107FE  0100               	movlb	0	; () banked
  6456  010800  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  6460  010802  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  6461  010806  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6462  01080A  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6463  01080E  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6464  010812  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  6465  010816  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6466  01081A  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6467  01081E  0100               	movlb	0	; () banked
  6468  010820  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  6469  010822  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6470  010826  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6471  01082A  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6472  01082E  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6473                           
  6474                           ; BSR set to: 0
  6475                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  6476  010832  C07B  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  6480  010836  0100               	movlb	0	; () banked
  6481  010838  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6482  01083A  D003               	goto	l518
  6483                           
  6484                           ; BSR set to: 0
  6485                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  6486  01083C  010F               	movlb	15	; () banked
  6487  01083E  810D               	bsf	13,0,b	;volatile
  6488  010840  D002               	goto	l519
  6489  010842                     l518:
  6490                           
  6491                           ; BSR set to: 0
  6492                           ;inc\CANlib.h: 968: else
  6493                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  6494  010842  010F               	movlb	15	; () banked
  6495  010844  910D               	bcf	13,0,b	;volatile
  6496  010846                     l519:
  6497                           
  6498                           ; BSR set to: 15
  6499                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  6500  010846  0100               	movlb	0	; () banked
  6501  010848  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6502  01084A  D003               	goto	l520
  6503                           
  6504                           ; BSR set to: 0
  6505                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  6506  01084C  010F               	movlb	15	; () banked
  6507  01084E  830D               	bsf	13,1,b	;volatile
  6508  010850  D002               	goto	l521
  6509  010852                     l520:
  6510                           
  6511                           ; BSR set to: 0
  6512                           ;inc\CANlib.h: 973: else
  6513                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  6514  010852  010F               	movlb	15	; () banked
  6515  010854  930D               	bcf	13,1,b	;volatile
  6516  010856                     l521:
  6517                           
  6518                           ; BSR set to: 15
  6519                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  6520  010856  0100               	movlb	0	; () banked
  6521  010858  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6522  01085A  D003               	goto	l522
  6523                           
  6524                           ; BSR set to: 0
  6525                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  6526  01085C  010F               	movlb	15	; () banked
  6527  01085E  8B0D               	bsf	13,5,b	;volatile
  6528  010860  D002               	goto	l523
  6529  010862                     l522:
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;inc\CANlib.h: 978: else
  6533                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  6534  010862  010F               	movlb	15	; () banked
  6535  010864  9B0D               	bcf	13,5,b	;volatile
  6536  010866                     l523:
  6537                           
  6538                           ; BSR set to: 15
  6539                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  6540  010866  0100               	movlb	0	; () banked
  6541  010868  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6542  01086A  D003               	goto	l524
  6543                           
  6544                           ; BSR set to: 0
  6545                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  6546  01086C  010F               	movlb	15	; () banked
  6547  01086E  8D0D               	bsf	13,6,b	;volatile
  6548  010870  D002               	goto	l525
  6549  010872                     l524:
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;inc\CANlib.h: 983: else
  6553                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  6554  010872  010F               	movlb	15	; () banked
  6555  010874  9D0D               	bcf	13,6,b	;volatile
  6556  010876                     l525:
  6557                           
  6558                           ; BSR set to: 15
  6559                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  6560  010876  0100               	movlb	0	; () banked
  6561  010878  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6562  01087A  D003               	goto	l526
  6563                           
  6564                           ; BSR set to: 0
  6565                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  6566  01087C  010F               	movlb	15	; () banked
  6567  01087E  8F0D               	bsf	13,7,b	;volatile
  6568  010880  D002               	goto	l5843
  6569  010882                     l526:
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;inc\CANlib.h: 988: else
  6573                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6574  010882  010F               	movlb	15	; () banked
  6575  010884  9F0D               	bcf	13,7,b	;volatile
  6576  010886                     l5843:
  6577                           
  6578                           ; BSR set to: 15
  6579                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  6580  010886  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  6581  01088A  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6582  01088E  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6583  010892  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6584  010896  0E16               	movlw	22
  6585  010898  D006               	goto	u7050
  6586  01089A                     u7055:
  6587  01089A  0100               	movlb	0	; () banked
  6588  01089C  90D8               	bcf	status,0,c
  6589  01089E  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6590  0108A0  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6591  0108A2  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6592  0108A4  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  6593  0108A6                     u7050:
  6594  0108A6  2EE8               	decfsz	wreg,f,c
  6595  0108A8  D7F8               	goto	u7055
  6596  0108AA  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6597  0108AE  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6598  0108B2  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6599  0108B6  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6600                           
  6601                           ; BSR set to: 0
  6602                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  6603  0108BA  0100               	movlb	0	; () banked
  6604  0108BC  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  6605  0108BE  0100               	movlb	0	; () banked
  6606  0108C0  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6607  0108C2  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6608  0108C4  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6609  0108C6  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6613  0108C8  C07B  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6614  0108CC                     l5849:
  6615                           
  6616                           ; BSR set to: 0
  6617                           ;inc\CANlib.h: 994: }
  6618                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6619  0108CC  0E04               	movlw	4
  6620  0108CE  0100               	movlb	0	; () banked
  6621  0108D0  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6622  0108D2  A4D8               	btfss	status,2,c
  6623  0108D4  D089               	goto	l5883
  6624                           
  6625                           ; BSR set to: 0
  6626  0108D6  0EF7               	movlw	247
  6627  0108D8  0100               	movlb	0	; () banked
  6628  0108DA  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  6629  0108DC  A4D8               	btfss	status,2,c
  6630  0108DE  D084               	goto	l5883
  6631                           
  6632                           ; BSR set to: 0
  6633                           ;inc\CANlib.h: 997: {
  6634                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6635  0108E0  010F               	movlb	15	; () banked
  6636  0108E2  8711               	bsf	17,3,b	;volatile
  6637                           
  6638                           ; BSR set to: 15
  6639                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6640  0108E4  0100               	movlb	0	; () banked
  6641  0108E6  5171               	movf	CANSetFilter@filter& (0+255),w,b
  6642  0108E8  0100               	movlb	0	; () banked
  6643  0108EA  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6644  0108EC  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6645  0108EE  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6646  0108F0  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6650  0108F2  C07B  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6651                           
  6652                           ; BSR set to: 0
  6653                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6654  0108F6  0E00               	movlw	0
  6655  0108F8  0100               	movlb	0	; () banked
  6656  0108FA  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  6657  0108FC  0100               	movlb	0	; () banked
  6658  0108FE  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6659  010900  0EFF               	movlw	255
  6660  010902  0100               	movlb	0	; () banked
  6661  010904  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6662  010906  0100               	movlb	0	; () banked
  6663  010908  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6664  01090A  0E00               	movlw	0
  6665  01090C  0100               	movlb	0	; () banked
  6666  01090E  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6667  010910  0100               	movlb	0	; () banked
  6668  010912  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6669  010914  0E00               	movlw	0
  6670  010916  0100               	movlb	0	; () banked
  6671  010918  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6672  01091A  0100               	movlb	0	; () banked
  6673  01091C  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6677  01091E  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  6678  010922  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6679  010926  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6680  01092A  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6681  01092E  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  6682  010932  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6683  010936  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6684  01093A  0100               	movlb	0	; () banked
  6685  01093C  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  6686  01093E  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6687  010942  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6688  010946  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6689  01094A  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6690                           
  6691                           ; BSR set to: 0
  6692                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6693  01094E  C07B  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6697  010952  0100               	movlb	0	; () banked
  6698  010954  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6699  010956  D003               	goto	l529
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6703  010958  010F               	movlb	15	; () banked
  6704  01095A  8111               	bsf	17,0,b	;volatile
  6705  01095C  D002               	goto	l530
  6706  01095E                     l529:
  6707                           
  6708                           ; BSR set to: 0
  6709                           ;inc\CANlib.h: 1009: else
  6710                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6711  01095E  010F               	movlb	15	; () banked
  6712  010960  9111               	bcf	17,0,b	;volatile
  6713  010962                     l530:
  6714                           
  6715                           ; BSR set to: 15
  6716                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6717  010962  0100               	movlb	0	; () banked
  6718  010964  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6719  010966  D003               	goto	l531
  6720                           
  6721                           ; BSR set to: 0
  6722                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6723  010968  010F               	movlb	15	; () banked
  6724  01096A  8311               	bsf	17,1,b	;volatile
  6725  01096C  D002               	goto	l532
  6726  01096E                     l531:
  6727                           
  6728                           ; BSR set to: 0
  6729                           ;inc\CANlib.h: 1014: else
  6730                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6731  01096E  010F               	movlb	15	; () banked
  6732  010970  9311               	bcf	17,1,b	;volatile
  6733  010972                     l532:
  6734                           
  6735                           ; BSR set to: 15
  6736                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6737  010972  0100               	movlb	0	; () banked
  6738  010974  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6739  010976  D003               	goto	l533
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6743  010978  010F               	movlb	15	; () banked
  6744  01097A  8B11               	bsf	17,5,b	;volatile
  6745  01097C  D002               	goto	l534
  6746  01097E                     l533:
  6747                           
  6748                           ; BSR set to: 0
  6749                           ;inc\CANlib.h: 1019: else
  6750                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6751  01097E  010F               	movlb	15	; () banked
  6752  010980  9B11               	bcf	17,5,b	;volatile
  6753  010982                     l534:
  6754                           
  6755                           ; BSR set to: 15
  6756                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6757  010982  0100               	movlb	0	; () banked
  6758  010984  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6759  010986  D003               	goto	l535
  6760                           
  6761                           ; BSR set to: 0
  6762                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6763  010988  010F               	movlb	15	; () banked
  6764  01098A  8D11               	bsf	17,6,b	;volatile
  6765  01098C  D002               	goto	l536
  6766  01098E                     l535:
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;inc\CANlib.h: 1024: else
  6770                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6771  01098E  010F               	movlb	15	; () banked
  6772  010990  9D11               	bcf	17,6,b	;volatile
  6773  010992                     l536:
  6774                           
  6775                           ; BSR set to: 15
  6776                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6777  010992  0100               	movlb	0	; () banked
  6778  010994  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6779  010996  D003               	goto	l537
  6780                           
  6781                           ; BSR set to: 0
  6782                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6783  010998  010F               	movlb	15	; () banked
  6784  01099A  8F11               	bsf	17,7,b	;volatile
  6785  01099C  D002               	goto	l5877
  6786  01099E                     l537:
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;inc\CANlib.h: 1029: else
  6790                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6791  01099E  010F               	movlb	15	; () banked
  6792  0109A0  9F11               	bcf	17,7,b	;volatile
  6793  0109A2                     l5877:
  6794                           
  6795                           ; BSR set to: 15
  6796                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6797  0109A2  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  6798  0109A6  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6799  0109AA  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6800  0109AE  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6801  0109B2  0E16               	movlw	22
  6802  0109B4  D006               	goto	u7130
  6803  0109B6                     u7135:
  6804  0109B6  0100               	movlb	0	; () banked
  6805  0109B8  90D8               	bcf	status,0,c
  6806  0109BA  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6807  0109BC  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6808  0109BE  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6809  0109C0  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  6810  0109C2                     u7130:
  6811  0109C2  2EE8               	decfsz	wreg,f,c
  6812  0109C4  D7F8               	goto	u7135
  6813  0109C6  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6814  0109CA  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6815  0109CE  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6816  0109D2  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6817                           
  6818                           ; BSR set to: 0
  6819                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6820  0109D6  0100               	movlb	0	; () banked
  6821  0109D8  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  6822  0109DA  0100               	movlb	0	; () banked
  6823  0109DC  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6824  0109DE  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6825  0109E0  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6826  0109E2  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6830  0109E4  C07B  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6831  0109E8                     l5883:
  6832                           
  6833                           ; BSR set to: 0
  6834                           ;inc\CANlib.h: 1035: }
  6835                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6836  0109E8  0E05               	movlw	5
  6837  0109EA  0100               	movlb	0	; () banked
  6838  0109EC  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6839  0109EE  A4D8               	btfss	status,2,c
  6840  0109F0  0012               	return	
  6841                           
  6842                           ; BSR set to: 0
  6843  0109F2  0EF7               	movlw	247
  6844  0109F4  0100               	movlb	0	; () banked
  6845  0109F6  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  6846  0109F8  A4D8               	btfss	status,2,c
  6847  0109FA  0012               	return	
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;inc\CANlib.h: 1038: {
  6851                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6852  0109FC  010F               	movlb	15	; () banked
  6853  0109FE  8715               	bsf	21,3,b	;volatile
  6854                           
  6855                           ; BSR set to: 15
  6856                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6857  010A00  0100               	movlb	0	; () banked
  6858  010A02  5171               	movf	CANSetFilter@filter& (0+255),w,b
  6859  010A04  0100               	movlb	0	; () banked
  6860  010A06  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6861  010A08  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6862  010A0A  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6863  010A0C  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6864                           
  6865                           ; BSR set to: 0
  6866                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6867  010A0E  C07B  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6868                           
  6869                           ; BSR set to: 0
  6870                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6871  010A12  0E00               	movlw	0
  6872  010A14  0100               	movlb	0	; () banked
  6873  010A16  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  6874  010A18  0100               	movlb	0	; () banked
  6875  010A1A  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6876  010A1C  0EFF               	movlw	255
  6877  010A1E  0100               	movlb	0	; () banked
  6878  010A20  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6879  010A22  0100               	movlb	0	; () banked
  6880  010A24  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6881  010A26  0E00               	movlw	0
  6882  010A28  0100               	movlb	0	; () banked
  6883  010A2A  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6884  010A2C  0100               	movlb	0	; () banked
  6885  010A2E  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6886  010A30  0E00               	movlw	0
  6887  010A32  0100               	movlb	0	; () banked
  6888  010A34  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6889  010A36  0100               	movlb	0	; () banked
  6890  010A38  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6891                           
  6892                           ; BSR set to: 0
  6893                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6894  010A3A  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  6895  010A3E  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6896  010A42  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6897  010A46  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6898  010A4A  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  6899  010A4E  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6900  010A52  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6901  010A56  0100               	movlb	0	; () banked
  6902  010A58  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  6903  010A5A  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6904  010A5E  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6905  010A62  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6906  010A66  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6910  010A6A  C07B  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6914  010A6E  0100               	movlb	0	; () banked
  6915  010A70  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6916  010A72  D003               	goto	l540
  6917                           
  6918                           ; BSR set to: 0
  6919                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6920  010A74  010F               	movlb	15	; () banked
  6921  010A76  8115               	bsf	21,0,b	;volatile
  6922  010A78  D002               	goto	l541
  6923  010A7A                     l540:
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;inc\CANlib.h: 1050: else
  6927                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6928  010A7A  010F               	movlb	15	; () banked
  6929  010A7C  9115               	bcf	21,0,b	;volatile
  6930  010A7E                     l541:
  6931                           
  6932                           ; BSR set to: 15
  6933                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6934  010A7E  0100               	movlb	0	; () banked
  6935  010A80  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6936  010A82  D003               	goto	l542
  6937                           
  6938                           ; BSR set to: 0
  6939                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6940  010A84  010F               	movlb	15	; () banked
  6941  010A86  8315               	bsf	21,1,b	;volatile
  6942  010A88  D002               	goto	l543
  6943  010A8A                     l542:
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;inc\CANlib.h: 1055: else
  6947                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6948  010A8A  010F               	movlb	15	; () banked
  6949  010A8C  9315               	bcf	21,1,b	;volatile
  6950  010A8E                     l543:
  6951                           
  6952                           ; BSR set to: 15
  6953                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6954  010A8E  0100               	movlb	0	; () banked
  6955  010A90  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6956  010A92  D003               	goto	l544
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6960  010A94  010F               	movlb	15	; () banked
  6961  010A96  8B15               	bsf	21,5,b	;volatile
  6962  010A98  D002               	goto	l545
  6963  010A9A                     l544:
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;inc\CANlib.h: 1060: else
  6967                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6968  010A9A  010F               	movlb	15	; () banked
  6969  010A9C  9B15               	bcf	21,5,b	;volatile
  6970  010A9E                     l545:
  6971                           
  6972                           ; BSR set to: 15
  6973                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6974  010A9E  0100               	movlb	0	; () banked
  6975  010AA0  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6976  010AA2  D003               	goto	l546
  6977                           
  6978                           ; BSR set to: 0
  6979                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6980  010AA4  010F               	movlb	15	; () banked
  6981  010AA6  8D15               	bsf	21,6,b	;volatile
  6982  010AA8  D002               	goto	l547
  6983  010AAA                     l546:
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;inc\CANlib.h: 1065: else
  6987                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6988  010AAA  010F               	movlb	15	; () banked
  6989  010AAC  9D15               	bcf	21,6,b	;volatile
  6990  010AAE                     l547:
  6991                           
  6992                           ; BSR set to: 15
  6993                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6994  010AAE  0100               	movlb	0	; () banked
  6995  010AB0  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6996  010AB2  D003               	goto	l548
  6997                           
  6998                           ; BSR set to: 0
  6999                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  7000  010AB4  010F               	movlb	15	; () banked
  7001  010AB6  8F15               	bsf	21,7,b	;volatile
  7002  010AB8  D002               	goto	l5911
  7003  010ABA                     l548:
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;inc\CANlib.h: 1070: else
  7007                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  7008  010ABA  010F               	movlb	15	; () banked
  7009  010ABC  9F15               	bcf	21,7,b	;volatile
  7010  010ABE                     l5911:
  7011                           
  7012                           ; BSR set to: 15
  7013                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  7014  010ABE  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  7015  010AC2  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  7016  010AC6  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  7017  010ACA  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  7018  010ACE  0E16               	movlw	22
  7019  010AD0  D006               	goto	u7210
  7020  010AD2                     u7215:
  7021  010AD2  0100               	movlb	0	; () banked
  7022  010AD4  90D8               	bcf	status,0,c
  7023  010AD6  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  7024  010AD8  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  7025  010ADA  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  7026  010ADC  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  7027  010ADE                     u7210:
  7028  010ADE  2EE8               	decfsz	wreg,f,c
  7029  010AE0  D7F8               	goto	u7215
  7030  010AE2  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  7031  010AE6  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  7032  010AEA  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  7033  010AEE  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  7034                           
  7035                           ; BSR set to: 0
  7036                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  7037  010AF2  0100               	movlb	0	; () banked
  7038  010AF4  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  7039  010AF6  0100               	movlb	0	; () banked
  7040  010AF8  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  7041  010AFA  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  7042  010AFC  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  7043  010AFE  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  7044                           
  7045                           ; BSR set to: 0
  7046                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  7047  010B00  C07B  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  7048  010B04  0012               	return	
  7049  010B06                     __end_of_CANSetFilter:
  7050                           	opt stack 0
  7051                           tblptru	equ	0xFF8
  7052                           tblptrh	equ	0xFF7
  7053                           tblptrl	equ	0xFF6
  7054                           tablat	equ	0xFF5
  7055                           prodh	equ	0xFF4
  7056                           prodl	equ	0xFF3
  7057                           intcon	equ	0xFF2
  7058                           postinc0	equ	0xFEE
  7059                           wreg	equ	0xFE8
  7060                           postinc2	equ	0xFDE
  7061                           fsr2h	equ	0xFDA
  7062                           fsr2l	equ	0xFD9
  7063                           status	equ	0xFD8
  7064                           
  7065 ;; *************** function _CANOperationMode *****************
  7066 ;; Defined at:
  7067 ;;		line 206 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;  mode            1    wreg     enum E16743
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  mode            1   17[BANK0 ] enum E16743
  7072 ;; Return value:  Size  Location     Type
  7073 ;;                  1    wreg      void 
  7074 ;; Registers used:
  7075 ;;		wreg, status,2, status,0
  7076 ;; Tracked objects:
  7077 ;;		On entry : 0/0
  7078 ;;		On exit  : 0/0
  7079 ;;		Unchanged: 0/0
  7080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7082 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7084 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7085 ;;Total ram usage:        1 bytes
  7086 ;; Hardware stack levels used:    1
  7087 ;; Hardware stack levels required when called:    3
  7088 ;; This function calls:
  7089 ;;		Nothing
  7090 ;; This function is called by:
  7091 ;;		_CANInitialize
  7092 ;; This function uses a non-reentrant model
  7093 ;;
  7094                           
  7095                           	psect	text5
  7096  01687C                     __ptext5:
  7097                           	opt stack 0
  7098  01687C                     _CANOperationMode:
  7099                           	opt stack 25
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;incstack = 0
  7103                           ;CANOperationMode@mode stored from wreg
  7104  01687C  0100               	movlb	0	; () banked
  7105  01687E  6F71               	movwf	CANOperationMode@mode& (0+255),b
  7106                           
  7107                           ;inc\CANlib.h: 208: CANCON = mode;
  7108  016880  C071  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  7109  016884                     l5507:
  7110  016884  506E               	movf	3950,w,c	;volatile
  7111  016886  0BE0               	andlw	224
  7112  016888  0100               	movlb	0	; () banked
  7113  01688A  1971               	xorwf	CANOperationMode@mode& (0+255),w,b
  7114  01688C  B4D8               	btfsc	status,2,c
  7115  01688E  0012               	return	
  7116  016890  D7F9               	goto	l5507
  7117  016892                     __end_of_CANOperationMode:
  7118                           	opt stack 0
  7119                           tblptru	equ	0xFF8
  7120                           tblptrh	equ	0xFF7
  7121                           tblptrl	equ	0xFF6
  7122                           tablat	equ	0xFF5
  7123                           prodh	equ	0xFF4
  7124                           prodl	equ	0xFF3
  7125                           intcon	equ	0xFF2
  7126                           postinc0	equ	0xFEE
  7127                           wreg	equ	0xFE8
  7128                           postinc2	equ	0xFDE
  7129                           fsr2h	equ	0xFDA
  7130                           fsr2l	equ	0xFD9
  7131                           status	equ	0xFD8
  7132                           
  7133 ;; *************** function _PWR_Button_Polling *****************
  7134 ;; Defined at:
  7135 ;;		line 655 in file "RemoteCan.c"
  7136 ;; Parameters:    Size  Location     Type
  7137 ;;		None
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;		None
  7140 ;; Return value:  Size  Location     Type
  7141 ;;                  1    wreg      void 
  7142 ;; Registers used:
  7143 ;;		None
  7144 ;; Tracked objects:
  7145 ;;		On entry : 0/0
  7146 ;;		On exit  : 0/0
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7153 ;;Total ram usage:        0 bytes
  7154 ;; Hardware stack levels used:    1
  7155 ;; Hardware stack levels required when called:    3
  7156 ;; This function calls:
  7157 ;;		Nothing
  7158 ;; This function is called by:
  7159 ;;		_main
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           
  7163                           	psect	text6
  7164  01680C                     __ptext6:
  7165                           	opt stack 0
  7166  01680C                     _PWR_Button_Polling:
  7167                           	opt stack 27
  7168                           
  7169                           ;RemoteCan.c: 656: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;incstack = 0
  7173  01680C  AA81               	btfss	3969,5,c	;volatile
  7174  01680E  D002               	goto	l954
  7175  016810  B44A               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  7176  016812  0012               	return	
  7177  016814                     l954:
  7178                           
  7179                           ;RemoteCan.c: 657: wait_low_1 = 0;
  7180  016814  944A               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  7181                           
  7182                           ;RemoteCan.c: 658: if (PORTBbits.RB5 == 1) {
  7183  016816  AA81               	btfss	3969,5,c	;volatile
  7184  016818  0012               	return	
  7185                           
  7186                           ;RemoteCan.c: 659: power_switch = ~power_switch;
  7187  01681A  B649               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  7188  01681C  D002               	goto	u9210
  7189  01681E  8649               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  7190  016820  D001               	goto	u9225
  7191  016822                     u9210:
  7192  016822  9649               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  7193  016824                     u9225:
  7194                           
  7195                           ;RemoteCan.c: 660: wait_low_1 = 1;
  7196  016824  844A               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  7197  016826  0012               	return	
  7198  016828                     __end_of_PWR_Button_Polling:
  7199                           	opt stack 0
  7200                           tblptru	equ	0xFF8
  7201                           tblptrh	equ	0xFF7
  7202                           tblptrl	equ	0xFF6
  7203                           tablat	equ	0xFF5
  7204                           prodh	equ	0xFF4
  7205                           prodl	equ	0xFF3
  7206                           intcon	equ	0xFF2
  7207                           postinc0	equ	0xFEE
  7208                           wreg	equ	0xFE8
  7209                           postinc2	equ	0xFDE
  7210                           fsr2h	equ	0xFDA
  7211                           fsr2l	equ	0xFD9
  7212                           status	equ	0xFD8
  7213                           
  7214 ;; *************** function _LCD_Parking *****************
  7215 ;; Defined at:
  7216 ;;		line 596 in file "RemoteCan.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;		None
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;		None
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  1    wreg      void 
  7223 ;; Registers used:
  7224 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7234 ;;Total ram usage:        0 bytes
  7235 ;; Hardware stack levels used:    1
  7236 ;; Hardware stack levels required when called:    9
  7237 ;; This function calls:
  7238 ;;		_LCD_clear
  7239 ;;		_LCD_goto_line
  7240 ;;		_LCD_initialize
  7241 ;;		_LCD_write_message
  7242 ;; This function is called by:
  7243 ;;		_main
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text7
  7248  016212                     __ptext7:
  7249                           	opt stack 0
  7250  016212                     _LCD_Parking:
  7251                           	opt stack 21
  7252                           
  7253                           ;RemoteCan.c: 597: LCD_initialize(16);
  7254                           
  7255                           ;incstack = 0
  7256  016212  0E10               	movlw	16
  7257  016214  EC1D  F0AC         	call	_LCD_initialize
  7258                           
  7259                           ;RemoteCan.c: 598: LCD_clear();
  7260  016218  EC93  F0B3         	call	_LCD_clear	;wreg free
  7261                           
  7262                           ;RemoteCan.c: 599: LCD_goto_line(1);
  7263  01621C  0E01               	movlw	1
  7264  01621E  EC5A  F0AD         	call	_LCD_goto_line
  7265                           
  7266                           ;RemoteCan.c: 600: LCD_write_message("= PARKING MESSAGES =");
  7267  016222  0E16               	movlw	low STR_21
  7268  016224  0100               	movlb	0	; () banked
  7269  016226  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7270  016228  0EFF               	movlw	high STR_21
  7271  01622A  0100               	movlb	0	; () banked
  7272  01622C  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7273  01622E  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7274                           
  7275                           ;RemoteCan.c: 601: LCD_goto_line(2);
  7276  016232  0E02               	movlw	2
  7277  016234  EC5A  F0AD         	call	_LCD_goto_line
  7278                           
  7279                           ;RemoteCan.c: 602: LCD_write_message("=    Parking in    =");
  7280  016238  0EEC               	movlw	low STR_30
  7281  01623A  0100               	movlb	0	; () banked
  7282  01623C  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7283  01623E  0EFE               	movlw	high STR_30
  7284  016240  0100               	movlb	0	; () banked
  7285  016242  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7286  016244  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7287                           
  7288                           ;RemoteCan.c: 603: LCD_goto_line(3);
  7289  016248  0E03               	movlw	3
  7290  01624A  EC5A  F0AD         	call	_LCD_goto_line
  7291                           
  7292                           ;RemoteCan.c: 604: LCD_write_message("=    progress...   =");
  7293  01624E  0E01               	movlw	low STR_31
  7294  016250  0100               	movlb	0	; () banked
  7295  016252  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7296  016254  0EFF               	movlw	high STR_31
  7297  016256  0100               	movlb	0	; () banked
  7298  016258  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7299  01625A  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7300                           
  7301                           ;RemoteCan.c: 605: LCD_goto_line(4);
  7302  01625E  0E04               	movlw	4
  7303  016260  EC5A  F0AD         	call	_LCD_goto_line
  7304                           
  7305                           ;RemoteCan.c: 606: LCD_write_message("====================");
  7306  016264  0E6A               	movlw	low STR_1
  7307  016266  0100               	movlb	0	; () banked
  7308  016268  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7309  01626A  0EFF               	movlw	high STR_1
  7310  01626C  0100               	movlb	0	; () banked
  7311  01626E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7312  016270  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7313  016274  0012               	return		;funcret
  7314  016276                     __end_of_LCD_Parking:
  7315                           	opt stack 0
  7316                           tblptru	equ	0xFF8
  7317                           tblptrh	equ	0xFF7
  7318                           tblptrl	equ	0xFF6
  7319                           tablat	equ	0xFF5
  7320                           prodh	equ	0xFF4
  7321                           prodl	equ	0xFF3
  7322                           intcon	equ	0xFF2
  7323                           postinc0	equ	0xFEE
  7324                           wreg	equ	0xFE8
  7325                           postinc2	equ	0xFDE
  7326                           fsr2h	equ	0xFDA
  7327                           fsr2l	equ	0xFD9
  7328                           status	equ	0xFD8
  7329                           
  7330 ;; *************** function _LCD_Park *****************
  7331 ;; Defined at:
  7332 ;;		line 583 in file "RemoteCan.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;		None
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;		None
  7337 ;; Return value:  Size  Location     Type
  7338 ;;                  1    wreg      void 
  7339 ;; Registers used:
  7340 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7341 ;; Tracked objects:
  7342 ;;		On entry : 0/0
  7343 ;;		On exit  : 0/0
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7350 ;;Total ram usage:        0 bytes
  7351 ;; Hardware stack levels used:    1
  7352 ;; Hardware stack levels required when called:    9
  7353 ;; This function calls:
  7354 ;;		_LCD_clear
  7355 ;;		_LCD_goto_line
  7356 ;;		_LCD_initialize
  7357 ;;		_LCD_write_message
  7358 ;; This function is called by:
  7359 ;;		_main
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           	psect	text8
  7364  016276                     __ptext8:
  7365                           	opt stack 0
  7366  016276                     _LCD_Park:
  7367                           	opt stack 21
  7368                           
  7369                           ;RemoteCan.c: 584: LCD_initialize(16);
  7370                           
  7371                           ;incstack = 0
  7372  016276  0E10               	movlw	16
  7373  016278  EC1D  F0AC         	call	_LCD_initialize
  7374                           
  7375                           ;RemoteCan.c: 585: LCD_clear();
  7376  01627C  EC93  F0B3         	call	_LCD_clear	;wreg free
  7377                           
  7378                           ;RemoteCan.c: 586: LCD_goto_line(1);
  7379  016280  0E01               	movlw	1
  7380  016282  EC5A  F0AD         	call	_LCD_goto_line
  7381                           
  7382                           ;RemoteCan.c: 587: LCD_write_message("= PARKING MESSAGES =");
  7383  016286  0E16               	movlw	low STR_21
  7384  016288  0100               	movlb	0	; () banked
  7385  01628A  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7386  01628C  0EFF               	movlw	high STR_21
  7387  01628E  0100               	movlb	0	; () banked
  7388  016290  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7389  016292  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7390                           
  7391                           ;RemoteCan.c: 588: LCD_goto_line(2);
  7392  016296  0E02               	movlw	2
  7393  016298  EC5A  F0AD         	call	_LCD_goto_line
  7394                           
  7395                           ;RemoteCan.c: 589: LCD_write_message("- Distance REACHED -");
  7396  01629C  0EAD               	movlw	low STR_26
  7397  01629E  0100               	movlb	0	; () banked
  7398  0162A0  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7399  0162A2  0EFE               	movlw	high STR_26
  7400  0162A4  0100               	movlb	0	; () banked
  7401  0162A6  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7402  0162A8  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7403                           
  7404                           ;RemoteCan.c: 590: LCD_goto_line(3);
  7405  0162AC  0E03               	movlw	3
  7406  0162AE  EC5A  F0AD         	call	_LCD_goto_line
  7407                           
  7408                           ;RemoteCan.c: 591: LCD_write_message("Press the BUTTON to ");
  7409  0162B2  0E6E               	movlw	low STR_27
  7410  0162B4  0100               	movlb	0	; () banked
  7411  0162B6  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7412  0162B8  0EFE               	movlw	high STR_27
  7413  0162BA  0100               	movlb	0	; () banked
  7414  0162BC  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7415  0162BE  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7416                           
  7417                           ;RemoteCan.c: 592: LCD_goto_line(4);
  7418  0162C2  0E04               	movlw	4
  7419  0162C4  EC5A  F0AD         	call	_LCD_goto_line
  7420                           
  7421                           ;RemoteCan.c: 593: LCD_write_message("   start parking    ");
  7422  0162C8  0EDB               	movlw	low STR_28
  7423  0162CA  0100               	movlb	0	; () banked
  7424  0162CC  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7425  0162CE  0EFD               	movlw	high STR_28
  7426  0162D0  0100               	movlb	0	; () banked
  7427  0162D2  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7428  0162D4  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7429  0162D8  0012               	return		;funcret
  7430  0162DA                     __end_of_LCD_Park:
  7431                           	opt stack 0
  7432                           tblptru	equ	0xFF8
  7433                           tblptrh	equ	0xFF7
  7434                           tblptrl	equ	0xFF6
  7435                           tablat	equ	0xFF5
  7436                           prodh	equ	0xFF4
  7437                           prodl	equ	0xFF3
  7438                           intcon	equ	0xFF2
  7439                           postinc0	equ	0xFEE
  7440                           wreg	equ	0xFE8
  7441                           postinc2	equ	0xFDE
  7442                           fsr2h	equ	0xFDA
  7443                           fsr2l	equ	0xFD9
  7444                           status	equ	0xFD8
  7445                           
  7446 ;; *************** function _LCD_Handler *****************
  7447 ;; Defined at:
  7448 ;;		line 491 in file "RemoteCan.c"
  7449 ;; Parameters:    Size  Location     Type
  7450 ;;		None
  7451 ;; Auto vars:     Size  Location     Type
  7452 ;;		None
  7453 ;; Return value:  Size  Location     Type
  7454 ;;                  1    wreg      void 
  7455 ;; Registers used:
  7456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7457 ;; Tracked objects:
  7458 ;;		On entry : 0/0
  7459 ;;		On exit  : 0/0
  7460 ;;		Unchanged: 0/0
  7461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7466 ;;Total ram usage:        0 bytes
  7467 ;; Hardware stack levels used:    1
  7468 ;; Hardware stack levels required when called:   10
  7469 ;; This function calls:
  7470 ;;		_CANisTxReady
  7471 ;;		_CANsendMessage
  7472 ;;		_LCD_clear
  7473 ;;		_LCD_goto_line
  7474 ;;		_LCD_goto_xy
  7475 ;;		_LCD_initialize
  7476 ;;		_LCD_write_integer
  7477 ;;		_LCD_write_message
  7478 ;;		_LCD_write_string
  7479 ;;		___fldiv
  7480 ;;		___xxtofl
  7481 ;;		_sprintf
  7482 ;; This function is called by:
  7483 ;;		_main
  7484 ;; This function uses a non-reentrant model
  7485 ;;
  7486                           
  7487                           	psect	text9
  7488  014940                     __ptext9:
  7489                           	opt stack 0
  7490  014940                     _LCD_Handler:
  7491                           	opt stack 20
  7492  014940                     l9399:
  7493  014940  ECD4  F0B3         	call	_CANisTxReady	;wreg free
  7494  014944  06E8               	decf	wreg,f,c
  7495  014946  A4D8               	btfss	status,2,c
  7496  014948  D7FB               	goto	l9399
  7497                           
  7498                           ;RemoteCan.c: 493: CANsendMessage(0b00000001000, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  7499  01494A  0E08               	movlw	8
  7500  01494C  0100               	movlb	0	; () banked
  7501  01494E  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  7502  014950  0E00               	movlw	0
  7503  014952  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  7504  014954  0E00               	movlw	0
  7505  014956  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  7506  014958  0E00               	movlw	0
  7507  01495A  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  7508  01495C  0E35               	movlw	low _data_speed
  7509  01495E  0100               	movlb	0	; () banked
  7510  014960  6F75               	movwf	CANsendMessage@data& (0+255),b
  7511  014962  0E01               	movlw	high _data_speed
  7512  014964  0100               	movlb	0	; () banked
  7513  014966  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  7514  014968  0E08               	movlw	8
  7515  01496A  0100               	movlb	0	; () banked
  7516  01496C  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  7517  01496E  0EFC               	movlw	252
  7518  014970  0100               	movlb	0	; () banked
  7519  014972  6F78               	movwf	CANsendMessage@flags& (0+255),b
  7520  014974  ECAE  F08E         	call	_CANsendMessage	;wreg free
  7521                           
  7522                           ;RemoteCan.c: 495: actual_speed_kmh = ((actual_speed) / 278.0);
  7523  014978  C0DF  F071         	movff	_actual_speed,___xxtofl@val	;volatile
  7524  01497C  C0E0  F072         	movff	_actual_speed+1,___xxtofl@val+1	;volatile
  7525  014980  0100               	movlb	0	; () banked
  7526  014982  6B73               	clrf	(___xxtofl@val+2)& (0+255),b
  7527  014984  6B74               	clrf	(___xxtofl@val+3)& (0+255),b
  7528  014986  0E00               	movlw	0
  7529  014988  EC18  F0A7         	call	___xxtofl
  7530  01498C  C071  F07F         	movff	?___xxtofl,___fldiv@b
  7531  014990  C072  F080         	movff	?___xxtofl+1,___fldiv@b+1
  7532  014994  C073  F081         	movff	?___xxtofl+2,___fldiv@b+2
  7533  014998  C074  F082         	movff	?___xxtofl+3,___fldiv@b+3
  7534  01499C  0E00               	movlw	0
  7535  01499E  0100               	movlb	0	; () banked
  7536  0149A0  6F83               	movwf	___fldiv@a& (0+255),b
  7537  0149A2  0E00               	movlw	0
  7538  0149A4  6F84               	movwf	(___fldiv@a+1)& (0+255),b
  7539  0149A6  0E8B               	movlw	139
  7540  0149A8  6F85               	movwf	(___fldiv@a+2)& (0+255),b
  7541  0149AA  0E43               	movlw	67
  7542  0149AC  6F86               	movwf	(___fldiv@a+3)& (0+255),b
  7543  0149AE  EC76  F09F         	call	___fldiv	;wreg free
  7544  0149B2  C07F  F001         	movff	?___fldiv,_actual_speed_kmh	;volatile
  7545  0149B6  C080  F002         	movff	?___fldiv+1,_actual_speed_kmh+1	;volatile
  7546  0149BA  C081  F003         	movff	?___fldiv+2,_actual_speed_kmh+2	;volatile
  7547  0149BE  C082  F004         	movff	?___fldiv+3,_actual_speed_kmh+3	;volatile
  7548                           
  7549                           ;RemoteCan.c: 496: sprintf(str, "%.2f", actual_speed_kmh);
  7550  0149C2  0E19               	movlw	low _str
  7551  0149C4  0100               	movlb	0	; () banked
  7552  0149C6  6FC3               	movwf	sprintf@sp& (0+255),b
  7553  0149C8  0E01               	movlw	high _str
  7554  0149CA  0100               	movlb	0	; () banked
  7555  0149CC  6FC4               	movwf	(sprintf@sp+1)& (0+255),b
  7556  0149CE  0EFA               	movlw	low STR_5
  7557  0149D0  0100               	movlb	0	; () banked
  7558  0149D2  6FC5               	movwf	sprintf@f& (0+255),b
  7559  0149D4  0EFF               	movlw	high STR_5
  7560  0149D6  0100               	movlb	0	; () banked
  7561  0149D8  6FC6               	movwf	(sprintf@f+1)& (0+255),b
  7562  0149DA  C001  F0C7         	movff	_actual_speed_kmh,?_sprintf+4	;volatile
  7563  0149DE  C002  F0C8         	movff	_actual_speed_kmh+1,?_sprintf+5	;volatile
  7564  0149E2  C003  F0C9         	movff	_actual_speed_kmh+2,?_sprintf+6	;volatile
  7565  0149E6  C004  F0CA         	movff	_actual_speed_kmh+3,?_sprintf+7	;volatile
  7566  0149EA  EC64  F08A         	call	_sprintf	;wreg free
  7567                           
  7568                           ;RemoteCan.c: 497: str[11] = '\0';
  7569  0149EE  0E00               	movlw	0
  7570  0149F0  0101               	movlb	1	; () banked
  7571  0149F2  6F24               	movwf	(_str+11)& (0+255),b	;volatile
  7572                           
  7573                           ; BSR set to: 1
  7574                           ;RemoteCan.c: 499: if (display_refresh == 1) {
  7575  0149F4  AE48               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  7576  0149F6  D03D               	goto	l9429
  7577                           
  7578                           ; BSR set to: 1
  7579                           ;RemoteCan.c: 500: LCD_initialize(16);
  7580  0149F8  0E10               	movlw	16
  7581  0149FA  EC1D  F0AC         	call	_LCD_initialize
  7582                           
  7583                           ;RemoteCan.c: 501: LCD_clear();
  7584  0149FE  EC93  F0B3         	call	_LCD_clear	;wreg free
  7585                           
  7586                           ;RemoteCan.c: 502: LCD_goto_line(1);
  7587  014A02  0E01               	movlw	1
  7588  014A04  EC5A  F0AD         	call	_LCD_goto_line
  7589                           
  7590                           ;RemoteCan.c: 503: LCD_write_message("=== VEHICLE DATA ===");
  7591  014A08  0E55               	movlw	low STR_6
  7592  014A0A  0100               	movlb	0	; () banked
  7593  014A0C  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7594  014A0E  0EFF               	movlw	high STR_6
  7595  014A10  0100               	movlb	0	; () banked
  7596  014A12  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7597  014A14  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7598                           
  7599                           ;RemoteCan.c: 504: LCD_goto_line(2);
  7600  014A18  0E02               	movlw	2
  7601  014A1A  EC5A  F0AD         	call	_LCD_goto_line
  7602                           
  7603                           ;RemoteCan.c: 505: LCD_write_message("Direction: ");
  7604  014A1E  0EC8               	movlw	low STR_7
  7605  014A20  0100               	movlb	0	; () banked
  7606  014A22  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7607  014A24  0EFF               	movlw	high STR_7
  7608  014A26  0100               	movlb	0	; () banked
  7609  014A28  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7610  014A2A  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7611                           
  7612                           ;RemoteCan.c: 506: LCD_goto_line(3);
  7613  014A2E  0E03               	movlw	3
  7614  014A30  EC5A  F0AD         	call	_LCD_goto_line
  7615                           
  7616                           ;RemoteCan.c: 507: LCD_write_message("Speed: 0.00 Km/h");
  7617  014A34  0EA9               	movlw	low STR_8
  7618  014A36  0100               	movlb	0	; () banked
  7619  014A38  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7620  014A3A  0EFF               	movlw	high STR_8
  7621  014A3C  0100               	movlb	0	; () banked
  7622  014A3E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7623  014A40  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7624                           
  7625                           ;RemoteCan.c: 508: LCD_goto_line(4);
  7626  014A44  0E04               	movlw	4
  7627  014A46  EC5A  F0AD         	call	_LCD_goto_line
  7628                           
  7629                           ;RemoteCan.c: 509: if (LCD_4TH_ROW_MODE == 0) {
  7630  014A4A  B648               	btfsc	_LCD_4TH_ROW_MODE/(0+8),_LCD_4TH_ROW_MODE& (0+7),c	;volatile
  7631  014A4C  D009               	goto	l9425
  7632                           
  7633                           ;RemoteCan.c: 510: LCD_write_message("Park assist: ");
  7634  014A4E  0EBA               	movlw	low STR_9
  7635  014A50  0100               	movlb	0	; () banked
  7636  014A52  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7637  014A54  0EFF               	movlw	high STR_9
  7638  014A56  0100               	movlb	0	; () banked
  7639  014A58  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7640  014A5A  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7641                           
  7642                           ;RemoteCan.c: 511: } else {
  7643  014A5E  D008               	goto	l9427
  7644  014A60                     l9425:
  7645                           
  7646                           ;RemoteCan.c: 512: LCD_write_message("Data: ");
  7647  014A60  0EE4               	movlw	low STR_10
  7648  014A62  0100               	movlb	0	; () banked
  7649  014A64  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7650  014A66  0EFF               	movlw	high STR_10
  7651  014A68  0100               	movlb	0	; () banked
  7652  014A6A  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7653  014A6C  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7654  014A70                     l9427:
  7655                           
  7656                           ;RemoteCan.c: 513: }
  7657                           ;RemoteCan.c: 514: display_refresh = 0;
  7658  014A70  9E48               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  7659  014A72                     l9429:
  7660                           
  7661                           ;RemoteCan.c: 515: }
  7662                           ;RemoteCan.c: 517: if (collision_msg == 0) {
  7663  014A72  BC48               	btfsc	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  7664  014A74  D037               	goto	l914
  7665                           
  7666                           ;RemoteCan.c: 518: if (row_refresh == 1) {
  7667  014A76  AA49               	btfss	_row_refresh/(0+8),_row_refresh& (0+7),c	;volatile
  7668  014A78  D00C               	goto	l9439
  7669                           
  7670                           ;RemoteCan.c: 519: LCD_goto_line(2);
  7671  014A7A  0E02               	movlw	2
  7672  014A7C  EC5A  F0AD         	call	_LCD_goto_line
  7673                           
  7674                           ;RemoteCan.c: 520: LCD_write_message("Direction:          ");
  7675  014A80  0E5D               	movlw	low STR_11
  7676  014A82  0100               	movlb	0	; () banked
  7677  014A84  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7678  014A86  0EFD               	movlw	high STR_11
  7679  014A88  0100               	movlb	0	; () banked
  7680  014A8A  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7681  014A8C  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7682                           
  7683                           ;RemoteCan.c: 521: row_refresh = 0;
  7684  014A90  9A49               	bcf	_row_refresh/(0+8),_row_refresh& (0+7),c	;volatile
  7685  014A92                     l9439:
  7686                           
  7687                           ;RemoteCan.c: 522: }
  7688                           ;RemoteCan.c: 524: LCD_goto_xy(12, 2);
  7689  014A92  0E02               	movlw	2
  7690  014A94  0100               	movlb	0	; () banked
  7691  014A96  6F80               	movwf	LCD_goto_xy@y& (0+255),b
  7692  014A98  0E0C               	movlw	12
  7693  014A9A  EC14  F0B4         	call	_LCD_goto_xy
  7694                           
  7695                           ;RemoteCan.c: 525: if (switch_position != 0) {
  7696  014A9E  0100               	movlb	0	; () banked
  7697  014AA0  51EB               	movf	_switch_position& (0+255),w,b	;volatile
  7698  014AA2  B4D8               	btfsc	status,2,c
  7699  014AA4  D016               	goto	l9449
  7700                           
  7701                           ; BSR set to: 0
  7702                           ;RemoteCan.c: 526: if (dir == 1) {
  7703  014AA6  0100               	movlb	0	; () banked
  7704  014AA8  05E7               	decf	_dir& (0+255),w,b	;volatile
  7705  014AAA  A4D8               	btfss	status,2,c
  7706  014AAC  D009               	goto	l9447
  7707                           
  7708                           ; BSR set to: 0
  7709                           ;RemoteCan.c: 527: LCD_write_message("FWD ");
  7710  014AAE  0EF0               	movlw	low STR_12
  7711  014AB0  0100               	movlb	0	; () banked
  7712  014AB2  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7713  014AB4  0EFF               	movlw	high STR_12
  7714  014AB6  0100               	movlb	0	; () banked
  7715  014AB8  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7716  014ABA  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7717                           
  7718                           ;RemoteCan.c: 528: } else {
  7719  014ABE  D01E               	goto	l9455
  7720  014AC0                     l9447:
  7721                           
  7722                           ;RemoteCan.c: 529: LCD_write_message("BKWD");
  7723  014AC0  0EF5               	movlw	low STR_13
  7724  014AC2  0100               	movlb	0	; () banked
  7725  014AC4  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7726  014AC6  0EFF               	movlw	high STR_13
  7727  014AC8  0100               	movlb	0	; () banked
  7728  014ACA  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7729  014ACC  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7730                           
  7731                           ;RemoteCan.c: 530: }
  7732                           ;RemoteCan.c: 531: } else {
  7733  014AD0  D015               	goto	l9455
  7734  014AD2                     l9449:
  7735                           
  7736                           ;RemoteCan.c: 532: LCD_write_message("P   ");
  7737  014AD2  0EEB               	movlw	low STR_14
  7738  014AD4  0100               	movlb	0	; () banked
  7739  014AD6  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7740  014AD8  0EFF               	movlw	high STR_14
  7741  014ADA  0100               	movlb	0	; () banked
  7742  014ADC  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7743  014ADE  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7744                           
  7745                           ;RemoteCan.c: 533: }
  7746                           ;RemoteCan.c: 534: } else {
  7747  014AE2  D00C               	goto	l9455
  7748  014AE4                     l914:
  7749                           
  7750                           ;RemoteCan.c: 535: row_refresh = 1;
  7751  014AE4  8A49               	bsf	_row_refresh/(0+8),_row_refresh& (0+7),c	;volatile
  7752                           
  7753                           ;RemoteCan.c: 536: LCD_goto_line(2);
  7754  014AE6  0E02               	movlw	2
  7755  014AE8  EC5A  F0AD         	call	_LCD_goto_line
  7756                           
  7757                           ;RemoteCan.c: 537: LCD_write_message("-> Safety brake ON<-");
  7758  014AEC  0ED7               	movlw	low STR_15
  7759  014AEE  0100               	movlb	0	; () banked
  7760  014AF0  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7761  014AF2  0EFE               	movlw	high STR_15
  7762  014AF4  0100               	movlb	0	; () banked
  7763  014AF6  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7764  014AF8  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7765  014AFC                     l9455:
  7766                           
  7767                           ;RemoteCan.c: 538: }
  7768                           ;RemoteCan.c: 541: LCD_goto_xy(8, 3);
  7769  014AFC  0E03               	movlw	3
  7770  014AFE  0100               	movlb	0	; () banked
  7771  014B00  6F80               	movwf	LCD_goto_xy@y& (0+255),b
  7772  014B02  0E08               	movlw	8
  7773  014B04  EC14  F0B4         	call	_LCD_goto_xy
  7774                           
  7775                           ;RemoteCan.c: 542: LCD_write_string(str);
  7776  014B08  0E19               	movlw	low _str
  7777  014B0A  0100               	movlb	0	; () banked
  7778  014B0C  6F82               	movwf	LCD_write_string@buffer& (0+255),b
  7779  014B0E  0E01               	movlw	high _str
  7780  014B10  0100               	movlb	0	; () banked
  7781  014B12  6F83               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  7782  014B14  ECC1  F0B3         	call	_LCD_write_string	;wreg free
  7783                           
  7784                           ;RemoteCan.c: 544: if ((low_battery == 0) && (battery_charging == 0)) {
  7785  014B18  A049               	btfss	_low_battery/(0+8),_low_battery& (0+7),c	;volatile
  7786  014B1A  BA48               	btfsc	_battery_charging/(0+8),_battery_charging& (0+7),c	;volatile
  7787  014B1C  D03C               	goto	l9481
  7788                           
  7789                           ;RemoteCan.c: 545: if (LCD_4TH_ROW_MODE == 0) {
  7790  014B1E  B648               	btfsc	_LCD_4TH_ROW_MODE/(0+8),_LCD_4TH_ROW_MODE& (0+7),c	;volatile
  7791  014B20  D027               	goto	l9477
  7792                           
  7793                           ;RemoteCan.c: 546: LCD_goto_line(4);
  7794  014B22  0E04               	movlw	4
  7795  014B24  EC5A  F0AD         	call	_LCD_goto_line
  7796                           
  7797                           ;RemoteCan.c: 547: LCD_write_message("Park assist: ");
  7798  014B28  0EBA               	movlw	low STR_9
  7799  014B2A  0100               	movlb	0	; () banked
  7800  014B2C  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7801  014B2E  0EFF               	movlw	high STR_9
  7802  014B30  0100               	movlb	0	; () banked
  7803  014B32  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7804  014B34  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7805                           
  7806                           ;RemoteCan.c: 549: LCD_goto_xy(14, 4);
  7807  014B38  0E04               	movlw	4
  7808  014B3A  0100               	movlb	0	; () banked
  7809  014B3C  6F80               	movwf	LCD_goto_xy@y& (0+255),b
  7810  014B3E  0E0E               	movlw	14
  7811  014B40  EC14  F0B4         	call	_LCD_goto_xy
  7812                           
  7813                           ;RemoteCan.c: 550: if (parking_state == 0) {
  7814  014B44  0100               	movlb	0	; () banked
  7815  014B46  51E9               	movf	_parking_state& (0+255),w,b	;volatile
  7816  014B48  A4D8               	btfss	status,2,c
  7817  014B4A  D009               	goto	l9475
  7818                           
  7819                           ; BSR set to: 0
  7820                           ;RemoteCan.c: 551: LCD_write_message("OFF    ");
  7821  014B4C  0ED4               	movlw	low STR_17
  7822  014B4E  0100               	movlb	0	; () banked
  7823  014B50  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7824  014B52  0EFF               	movlw	high STR_17
  7825  014B54  0100               	movlb	0	; () banked
  7826  014B56  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7827  014B58  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7828                           
  7829                           ;RemoteCan.c: 552: } else {
  7830  014B5C  0012               	return	
  7831  014B5E                     l9475:
  7832                           
  7833                           ;RemoteCan.c: 553: LCD_write_message("SEARCH ");
  7834  014B5E  0EDC               	movlw	low STR_18
  7835  014B60  0100               	movlb	0	; () banked
  7836  014B62  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7837  014B64  0EFF               	movlw	high STR_18
  7838  014B66  0100               	movlb	0	; () banked
  7839  014B68  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7840  014B6A  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7841                           
  7842                           ;RemoteCan.c: 554: }
  7843                           ;RemoteCan.c: 555: } else {
  7844  014B6E  0012               	return	
  7845  014B70                     l9477:
  7846                           
  7847                           ;RemoteCan.c: 557: LCD_goto_xy(7, 4);
  7848  014B70  0E04               	movlw	4
  7849  014B72  0100               	movlb	0	; () banked
  7850  014B74  6F80               	movwf	LCD_goto_xy@y& (0+255),b
  7851  014B76  0E07               	movlw	7
  7852  014B78  EC14  F0B4         	call	_LCD_goto_xy
  7853                           
  7854                           ;RemoteCan.c: 558: LCD_write_integer(user_data, 0, 0x01);
  7855  014B7C  C023  F089         	movff	_user_data,LCD_write_integer@value	;volatile
  7856  014B80  C024  F08A         	movff	_user_data+1,LCD_write_integer@value+1	;volatile
  7857  014B84  0E00               	movlw	0
  7858  014B86  0100               	movlb	0	; () banked
  7859  014B88  6F8B               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  7860  014B8A  0E01               	movlw	1
  7861  014B8C  0100               	movlb	0	; () banked
  7862  014B8E  6F8C               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  7863  014B90  ECE2  F0A8         	call	_LCD_write_integer	;wreg free
  7864                           
  7865                           ;RemoteCan.c: 559: }
  7866                           ;RemoteCan.c: 560: } else {
  7867  014B94  0012               	return	
  7868  014B96                     l9481:
  7869                           
  7870                           ;RemoteCan.c: 561: LCD_goto_line(4);
  7871  014B96  0E04               	movlw	4
  7872  014B98  EC5A  F0AD         	call	_LCD_goto_line
  7873                           
  7874                           ;RemoteCan.c: 562: if (battery_charging == 1) {
  7875  014B9C  AA48               	btfss	_battery_charging/(0+8),_battery_charging& (0+7),c	;volatile
  7876  014B9E  D009               	goto	l9487
  7877                           
  7878                           ;RemoteCan.c: 563: LCD_write_message("Battery charging... ");
  7879  014BA0  0E44               	movlw	low STR_19
  7880  014BA2  0100               	movlb	0	; () banked
  7881  014BA4  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7882  014BA6  0EFE               	movlw	high STR_19
  7883  014BA8  0100               	movlb	0	; () banked
  7884  014BAA  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7885  014BAC  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7886                           
  7887                           ;RemoteCan.c: 564: } else {
  7888  014BB0  0012               	return	
  7889  014BB2                     l9487:
  7890                           
  7891                           ;RemoteCan.c: 565: LCD_write_message("[!]  Low battery [!]");
  7892  014BB2  0E94               	movlw	low STR_20
  7893  014BB4  0100               	movlb	0	; () banked
  7894  014BB6  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  7895  014BB8  0EFF               	movlw	high STR_20
  7896  014BBA  0100               	movlb	0	; () banked
  7897  014BBC  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7898  014BBE  EC60  F0B3         	call	_LCD_write_message	;wreg free
  7899  014BC2  0012               	return	
  7900  014BC4                     __end_of_LCD_Handler:
  7901                           	opt stack 0
  7902                           tblptru	equ	0xFF8
  7903                           tblptrh	equ	0xFF7
  7904                           tblptrl	equ	0xFF6
  7905                           tablat	equ	0xFF5
  7906                           prodh	equ	0xFF4
  7907                           prodl	equ	0xFF3
  7908                           intcon	equ	0xFF2
  7909                           postinc0	equ	0xFEE
  7910                           wreg	equ	0xFE8
  7911                           postinc2	equ	0xFDE
  7912                           fsr2h	equ	0xFDA
  7913                           fsr2l	equ	0xFD9
  7914                           status	equ	0xFD8
  7915                           
  7916 ;; *************** function _sprintf *****************
  7917 ;; Defined at:
  7918 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  7919 ;; Parameters:    Size  Location     Type
  7920 ;;  sp              2   99[BANK0 ] PTR unsigned char 
  7921 ;;		 -> str(12), 
  7922 ;;  f               2  101[BANK0 ] PTR const unsigned char 
  7923 ;;		 -> STR_5(5), 
  7924 ;; Auto vars:     Size  Location     Type
  7925 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  7926 ;;  tmpval          4   14[BANK1 ] struct .
  7927 ;;  val             4    8[BANK1 ] unsigned long 
  7928 ;;  cp              3    0        PTR const unsigned char 
  7929 ;;  prec            2   18[BANK1 ] int 
  7930 ;;  exp             2   12[BANK1 ] int 
  7931 ;;  flag            2    6[BANK1 ] unsigned short 
  7932 ;;  ap              2    4[BANK1 ] PTR void [1]
  7933 ;;		 -> ?_sprintf(2), 
  7934 ;;  len             2    0        unsigned int 
  7935 ;;  width           2    0        int 
  7936 ;;  c               1   24[BANK1 ] char 
  7937 ;;  d               1    0        unsigned char 
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  2   99[BANK0 ] int 
  7940 ;; Registers used:
  7941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7947 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7948 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  7949 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7950 ;;      Totals:         0      10      25       0       0       0       0       0       0       0       0       0       
      +0       0
  7951 ;;Total ram usage:       35 bytes
  7952 ;; Hardware stack levels used:    1
  7953 ;; Hardware stack levels required when called:    5
  7954 ;; This function calls:
  7955 ;;		___awdiv
  7956 ;;		___fladd
  7957 ;;		___flge
  7958 ;;		___flmul
  7959 ;;		___flneg
  7960 ;;		___flsub
  7961 ;;		___fltol
  7962 ;;		___lldiv
  7963 ;;		___llmod
  7964 ;;		___wmul
  7965 ;;		___xxtofl
  7966 ;;		__div_to_l_
  7967 ;;		__tdiv_to_l_
  7968 ;;		_fround
  7969 ;;		_isdigit
  7970 ;;		_scale
  7971 ;; This function is called by:
  7972 ;;		_LCD_Handler
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text10
  7977  0114C8                     __ptext10:
  7978                           	opt stack 0
  7979  0114C8                     _sprintf:
  7980                           	opt stack 24
  7981                           
  7982                           ;doprnt.c: 494: va_list ap;
  7983                           ;doprnt.c: 499: signed char c;
  7984                           ;doprnt.c: 501: int width;
  7985                           ;doprnt.c: 504: int prec;
  7986                           ;doprnt.c: 508: unsigned short flag;
  7987                           ;doprnt.c: 515: char d;
  7988                           ;doprnt.c: 516: double fval;
  7989                           ;doprnt.c: 517: int exp;
  7990                           ;doprnt.c: 523: union {
  7991                           ;doprnt.c: 524: unsigned long vd;
  7992                           ;doprnt.c: 525: double integ;
  7993                           ;doprnt.c: 526: } tmpval;
  7994                           ;doprnt.c: 528: unsigned long val;
  7995                           ;doprnt.c: 529: unsigned len;
  7996                           ;doprnt.c: 530: const char * cp;
  7997                           ;doprnt.c: 533: *ap = __va_start();
  7998                           
  7999                           ;incstack = 0
  8000  0114C8  0EC7               	movlw	low (?_sprintf+4)
  8001  0114CA  0101               	movlb	1	; () banked
  8002  0114CC  6F51               	movwf	sprintf@ap& (0+255),b
  8003  0114CE  0E00               	movlw	high (?_sprintf+4)
  8004  0114D0  0101               	movlb	1	; () banked
  8005  0114D2  6F52               	movwf	(sprintf@ap+1)& (0+255),b
  8006                           
  8007                           ;doprnt.c: 536: while(c = *f++) {
  8008  0114D4  EF96  F08E         	goto	l9273
  8009  0114D8                     l9075:
  8010                           
  8011                           ; BSR set to: 1
  8012                           ;doprnt.c: 538: if(c != '%')
  8013  0114D8  0E25               	movlw	37
  8014  0114DA  0101               	movlb	1	; () banked
  8015  0114DC  1965               	xorwf	sprintf@c& (0+255),w,b
  8016  0114DE  B4D8               	btfsc	status,2,c
  8017  0114E0  D008               	goto	l9081
  8018                           
  8019                           ; BSR set to: 1
  8020                           ;doprnt.c: 540: {
  8021                           ;doprnt.c: 541: ((*sp++ = (c)));
  8022  0114E2  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8023  0114E6  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8024  0114EA  C165  FFDF         	movff	sprintf@c,indf2
  8025  0114EE  EF93  F08E         	goto	l9271
  8026  0114F2                     l9081:
  8027                           
  8028                           ;doprnt.c: 543: }
  8029                           ;doprnt.c: 548: flag = 0;
  8030  0114F2  0E00               	movlw	0
  8031  0114F4  0101               	movlb	1	; () banked
  8032  0114F6  6F54               	movwf	(sprintf@flag+1)& (0+255),b
  8033  0114F8  0E00               	movlw	0
  8034  0114FA  6F53               	movwf	sprintf@flag& (0+255),b
  8035                           
  8036                           ; BSR set to: 1
  8037                           ;doprnt.c: 611: if(*f == '.') {
  8038  0114FC  C0C5  FFF6         	movff	sprintf@f,tblptrl
  8039  011500  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  8040  011504                     	if	0	;tblptru may be non-zero
  8041  011504                     	endif
  8042  011504                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8043  011504  0E00               	movlw	low (__mediumconst shr (0+16))
  8044  011506  6EF8               	movwf	tblptru,c
  8045  011508                     	endif
  8046  011508  0008               	tblrd		*
  8047  01150A  50F5               	movf	tablat,w,c
  8048  01150C  0A2E               	xorlw	46
  8049  01150E  A4D8               	btfss	status,2,c
  8050  011510  D03D               	goto	l9095
  8051                           
  8052                           ; BSR set to: 1
  8053                           ;doprnt.c: 612: flag |= 0x4000;
  8054  011512  0101               	movlb	1	; () banked
  8055  011514  8D54               	bsf	(sprintf@flag+1)& (0+255),6,b
  8056                           
  8057                           ;doprnt.c: 613: f++;
  8058  011516  0100               	movlb	0	; () banked
  8059  011518  4BC5               	infsnz	sprintf@f& (0+255),f,b
  8060  01151A  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;doprnt.c: 620: {
  8064                           ;doprnt.c: 621: prec = 0;
  8065  01151C  0E00               	movlw	0
  8066  01151E  0101               	movlb	1	; () banked
  8067  011520  6F60               	movwf	(sprintf@prec+1)& (0+255),b
  8068  011522  0E00               	movlw	0
  8069  011524  6F5F               	movwf	sprintf@prec& (0+255),b
  8070                           
  8071                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  8072  011526  D025               	goto	l9093
  8073  011528                     l9089:
  8074                           
  8075                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  8076  011528  C15F  F071         	movff	sprintf@prec,___wmul@multiplier
  8077  01152C  C160  F072         	movff	sprintf@prec+1,___wmul@multiplier+1
  8078  011530  0E00               	movlw	0
  8079  011532  0100               	movlb	0	; () banked
  8080  011534  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8081  011536  0E0A               	movlw	10
  8082  011538  6F73               	movwf	___wmul@multiplicand& (0+255),b
  8083  01153A  EC45  F0B3         	call	___wmul	;wreg free
  8084  01153E  C0C5  FFF6         	movff	sprintf@f,tblptrl
  8085  011542  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  8086  011546                     	if	0	;tblptru may be non-zero
  8087  011546                     	endif
  8088  011546                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8089  011546  0E00               	movlw	low (__mediumconst shr (0+16))
  8090  011548  6EF8               	movwf	tblptru,c
  8091  01154A                     	endif
  8092  01154A  0008               	tblrd		*
  8093  01154C  50F5               	movf	tablat,w,c
  8094  01154E  0100               	movlb	0	; () banked
  8095  011550  2771               	addwf	?___wmul& (0+255),f,b
  8096  011552  0E00               	movlw	0
  8097  011554  0100               	movlb	0	; () banked
  8098  011556  2372               	addwfc	(?___wmul+1)& (0+255),f,b
  8099  011558  0ED0               	movlw	208
  8100  01155A  0100               	movlb	0	; () banked
  8101  01155C  2571               	addwf	?___wmul& (0+255),w,b
  8102  01155E  0101               	movlb	1	; () banked
  8103  011560  6F5F               	movwf	sprintf@prec& (0+255),b
  8104  011562  0EFF               	movlw	255
  8105  011564  0100               	movlb	0	; () banked
  8106  011566  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  8107  011568  0101               	movlb	1	; () banked
  8108  01156A  6F60               	movwf	(sprintf@prec+1)& (0+255),b
  8109                           
  8110                           ; BSR set to: 1
  8111  01156C  0100               	movlb	0	; () banked
  8112  01156E  4BC5               	infsnz	sprintf@f& (0+255),f,b
  8113  011570  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  8114  011572                     l9093:
  8115  011572  C0C5  FFF6         	movff	sprintf@f,tblptrl
  8116  011576  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  8117  01157A                     	if	0	;tblptru may be non-zero
  8118  01157A                     	endif
  8119  01157A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8120  01157A  0E00               	movlw	low (__mediumconst shr (0+16))
  8121  01157C  6EF8               	movwf	tblptru,c
  8122  01157E                     	endif
  8123  01157E  0008               	tblrd		*
  8124  011580  50F5               	movf	tablat,w,c
  8125  011582  ECAC  F0B3         	call	_isdigit
  8126  011586  A0D8               	btfss	status,0,c
  8127  011588  D00C               	goto	l9103
  8128  01158A  D7CE               	goto	l9089
  8129  01158C                     l9095:
  8130                           
  8131                           ;doprnt.c: 626: prec = 0;
  8132  01158C  0E00               	movlw	0
  8133  01158E  0101               	movlb	1	; () banked
  8134  011590  6F60               	movwf	(sprintf@prec+1)& (0+255),b
  8135  011592  0E00               	movlw	0
  8136  011594  6F5F               	movwf	sprintf@prec& (0+255),b
  8137                           
  8138                           ; BSR set to: 1
  8139                           ;doprnt.c: 628: flag |= 0x1000;
  8140  011596  0101               	movlb	1	; () banked
  8141  011598  8954               	bsf	(sprintf@flag+1)& (0+255),4,b
  8142                           
  8143                           ; BSR set to: 1
  8144                           ;doprnt.c: 630: }
  8145                           ;doprnt.c: 635: switch(c = *f++) {
  8146  01159A  D003               	goto	l9103
  8147  01159C                     l9099:
  8148                           
  8149                           ; BSR set to: 1
  8150                           ;doprnt.c: 663: flag |= 0x400;
  8151  01159C  0101               	movlb	1	; () banked
  8152  01159E  8554               	bsf	(sprintf@flag+1)& (0+255),2,b
  8153                           
  8154                           ;doprnt.c: 664: break;
  8155  0115A0  D015               	goto	l9105
  8156  0115A2                     l9103:
  8157  0115A2  C0C5  FFF6         	movff	sprintf@f,tblptrl
  8158  0115A6  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  8159  0115AA  0100               	movlb	0	; () banked
  8160  0115AC  4BC5               	infsnz	sprintf@f& (0+255),f,b
  8161  0115AE  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  8162  0115B0                     	if	0	;tblptru may be non-zero
  8163  0115B0                     	endif
  8164  0115B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8165  0115B0  0E00               	movlw	low (__mediumconst shr (0+16))
  8166  0115B2  6EF8               	movwf	tblptru,c
  8167  0115B4                     	endif
  8168  0115B4  0008               	tblrd		*
  8169  0115B6  CFF5 F165          	movff	tablat,sprintf@c
  8170  0115BA  0101               	movlb	1	; () banked
  8171  0115BC  5165               	movf	sprintf@c& (0+255),w,b
  8172                           
  8173                           ; Switch size 1, requested type "space"
  8174                           ; Number of cases is 2, Range of values is 0 to 102
  8175                           ; switch strategies available:
  8176                           ; Name         Instructions Cycles
  8177                           ; simple_byte            7     4 (average)
  8178                           ;	Chosen strategy is simple_byte
  8179  0115BE  0A00               	xorlw	0	; case 0
  8180  0115C0  B4D8               	btfsc	status,2,c
  8181  0115C2  D3C5               	goto	l9275
  8182  0115C4  0A66               	xorlw	102	; case 102
  8183  0115C6  B4D8               	btfsc	status,2,c
  8184  0115C8  D7E9               	goto	l9099
  8185  0115CA  D3B0               	goto	l9273
  8186  0115CC                     l9105:
  8187                           
  8188                           ; BSR set to: 1
  8189                           ;doprnt.c: 825: if(flag & (0x700)) {
  8190  0115CC  0E07               	movlw	7
  8191  0115CE  0101               	movlb	1	; () banked
  8192  0115D0  1554               	andwf	(sprintf@flag+1)& (0+255),w,b
  8193  0115D2  B4D8               	btfsc	status,2,c
  8194  0115D4  D353               	goto	l9253
  8195                           
  8196                           ; BSR set to: 1
  8197                           ;doprnt.c: 827: if(flag & 0x1000)
  8198  0115D6  0101               	movlb	1	; () banked
  8199  0115D8  A954               	btfss	(sprintf@flag+1)& (0+255),4,b
  8200  0115DA  D005               	goto	l9111
  8201                           
  8202                           ; BSR set to: 1
  8203                           ;doprnt.c: 829: prec = 6;
  8204  0115DC  0E00               	movlw	0
  8205  0115DE  0101               	movlb	1	; () banked
  8206  0115E0  6F60               	movwf	(sprintf@prec+1)& (0+255),b
  8207  0115E2  0E06               	movlw	6
  8208  0115E4  6F5F               	movwf	sprintf@prec& (0+255),b
  8209  0115E6                     l9111:
  8210                           
  8211                           ; BSR set to: 1
  8212                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  8213  0115E6  C151  FFD9         	movff	sprintf@ap,fsr2l
  8214  0115EA  C152  FFDA         	movff	sprintf@ap+1,fsr2h
  8215  0115EE  CFDE F161          	movff	postinc2,sprintf@fval
  8216  0115F2  CFDE F162          	movff	postinc2,sprintf@fval+1
  8217  0115F6  CFDE F163          	movff	postinc2,sprintf@fval+2
  8218  0115FA  CFDE F164          	movff	postinc2,sprintf@fval+3
  8219                           
  8220                           ; BSR set to: 1
  8221  0115FE  0E04               	movlw	4
  8222  011600  0101               	movlb	1	; () banked
  8223  011602  2751               	addwf	sprintf@ap& (0+255),f,b
  8224  011604  0E00               	movlw	0
  8225  011606  2352               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8226                           
  8227                           ; BSR set to: 1
  8228                           ;doprnt.c: 831: if(fval < 0.0) {
  8229  011608  0101               	movlb	1	; () banked
  8230  01160A  AF64               	btfss	(sprintf@fval+3)& (0+255),7,b
  8231  01160C  D015               	goto	l9121
  8232                           
  8233                           ; BSR set to: 1
  8234                           ;doprnt.c: 832: fval = -fval;
  8235  01160E  C161  F098         	movff	sprintf@fval,___flneg@f1
  8236  011612  C162  F099         	movff	sprintf@fval+1,___flneg@f1+1
  8237  011616  C163  F09A         	movff	sprintf@fval+2,___flneg@f1+2
  8238  01161A  C164  F09B         	movff	sprintf@fval+3,___flneg@f1+3
  8239  01161E  EC29  F0B3         	call	___flneg	;wreg free
  8240  011622  C098  F161         	movff	?___flneg,sprintf@fval
  8241  011626  C099  F162         	movff	?___flneg+1,sprintf@fval+1
  8242  01162A  C09A  F163         	movff	?___flneg+2,sprintf@fval+2
  8243  01162E  C09B  F164         	movff	?___flneg+3,sprintf@fval+3
  8244                           
  8245                           ;doprnt.c: 833: flag |= 0x03;
  8246  011632  0E03               	movlw	3
  8247  011634  0101               	movlb	1	; () banked
  8248  011636  1353               	iorwf	sprintf@flag& (0+255),f,b
  8249  011638                     l9121:
  8250                           
  8251                           ; BSR set to: 1
  8252                           ;doprnt.c: 834: }
  8253                           ;doprnt.c: 835: exp = 0;
  8254  011638  0E00               	movlw	0
  8255  01163A  0101               	movlb	1	; () banked
  8256  01163C  6F5A               	movwf	(sprintf@exp+1)& (0+255),b
  8257  01163E  0E00               	movlw	0
  8258  011640  6F59               	movwf	sprintf@exp& (0+255),b
  8259                           
  8260                           ; BSR set to: 1
  8261                           ;doprnt.c: 836: if( fval!=0) {
  8262  011642  0101               	movlb	1	; () banked
  8263  011644  5161               	movf	sprintf@fval& (0+255),w,b
  8264  011646  0101               	movlb	1	; () banked
  8265  011648  1162               	iorwf	(sprintf@fval+1)& (0+255),w,b
  8266  01164A  0101               	movlb	1	; () banked
  8267  01164C  1163               	iorwf	(sprintf@fval+2)& (0+255),w,b
  8268  01164E  0101               	movlb	1	; () banked
  8269  011650  1164               	iorwf	(sprintf@fval+3)& (0+255),w,b
  8270  011652  B4D8               	btfsc	status,2,c
  8271  011654  D08E               	goto	l9149
  8272                           
  8273                           ; BSR set to: 1
  8274                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  8275  011656  0101               	movlb	1	; () banked
  8276  011658  3563               	rlcf	(sprintf@fval+2)& (0+255),w,b
  8277  01165A  3564               	rlcf	(sprintf@fval+3)& (0+255),w,b
  8278  01165C  0F82               	addlw	130
  8279  01165E  0101               	movlb	1	; () banked
  8280  011660  6F59               	movwf	sprintf@exp& (0+255),b
  8281  011662  0101               	movlb	1	; () banked
  8282  011664  6B5A               	clrf	(sprintf@exp+1)& (0+255),b
  8283  011666  0EFF               	movlw	255
  8284  011668  235A               	addwfc	(sprintf@exp+1)& (0+255),f,b
  8285                           
  8286                           ; BSR set to: 1
  8287                           ;doprnt.c: 838: exp--;
  8288  01166A  0101               	movlb	1	; () banked
  8289  01166C  0759               	decf	sprintf@exp& (0+255),f,b
  8290  01166E  A0D8               	btfss	status,0,c
  8291  011670  075A               	decf	(sprintf@exp+1)& (0+255),f,b
  8292                           
  8293                           ; BSR set to: 1
  8294                           ;doprnt.c: 839: exp *= 3;
  8295  011672  C159  F071         	movff	sprintf@exp,___wmul@multiplier
  8296  011676  C15A  F072         	movff	sprintf@exp+1,___wmul@multiplier+1
  8297  01167A  0E00               	movlw	0
  8298  01167C  0100               	movlb	0	; () banked
  8299  01167E  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8300  011680  0E03               	movlw	3
  8301  011682  6F73               	movwf	___wmul@multiplicand& (0+255),b
  8302  011684  EC45  F0B3         	call	___wmul	;wreg free
  8303  011688  C071  F159         	movff	?___wmul,sprintf@exp
  8304  01168C  C072  F15A         	movff	?___wmul+1,sprintf@exp+1
  8305                           
  8306                           ;doprnt.c: 840: exp /= 10;
  8307  011690  C159  F077         	movff	sprintf@exp,___awdiv@dividend
  8308  011694  C15A  F078         	movff	sprintf@exp+1,___awdiv@dividend+1
  8309  011698  0E00               	movlw	0
  8310  01169A  0100               	movlb	0	; () banked
  8311  01169C  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8312  01169E  0E0A               	movlw	10
  8313  0116A0  6F79               	movwf	___awdiv@divisor& (0+255),b
  8314  0116A2  ECD0  F0AD         	call	___awdiv	;wreg free
  8315  0116A6  C077  F159         	movff	?___awdiv,sprintf@exp
  8316  0116AA  C078  F15A         	movff	?___awdiv+1,sprintf@exp+1
  8317                           
  8318                           ;doprnt.c: 841: if(exp < 0)
  8319  0116AE  0101               	movlb	1	; () banked
  8320  0116B0  AF5A               	btfss	(sprintf@exp+1)& (0+255),7,b
  8321  0116B2  D004               	goto	l9137
  8322                           
  8323                           ; BSR set to: 1
  8324                           ;doprnt.c: 842: exp--;
  8325  0116B4  0101               	movlb	1	; () banked
  8326  0116B6  0759               	decf	sprintf@exp& (0+255),f,b
  8327  0116B8  A0D8               	btfss	status,0,c
  8328  0116BA  075A               	decf	(sprintf@exp+1)& (0+255),f,b
  8329  0116BC                     l9137:
  8330                           
  8331                           ; BSR set to: 1
  8332                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  8333  0116BC  0101               	movlb	1	; () banked
  8334  0116BE  5159               	movf	sprintf@exp& (0+255),w,b
  8335  0116C0  0800               	sublw	0
  8336  0116C2  ECBC  F095         	call	_scale
  8337  0116C6  C098  F15B         	movff	?_scale,sprintf@tmpval
  8338  0116CA  C099  F15C         	movff	?_scale+1,sprintf@tmpval+1
  8339  0116CE  C09A  F15D         	movff	?_scale+2,sprintf@tmpval+2
  8340  0116D2  C09B  F15E         	movff	?_scale+3,sprintf@tmpval+3
  8341                           
  8342                           ;doprnt.c: 847: tmpval.integ *= fval;
  8343  0116D6  C15B  F07F         	movff	sprintf@tmpval,___flmul@b
  8344  0116DA  C15C  F080         	movff	sprintf@tmpval+1,___flmul@b+1
  8345  0116DE  C15D  F081         	movff	sprintf@tmpval+2,___flmul@b+2
  8346  0116E2  C15E  F082         	movff	sprintf@tmpval+3,___flmul@b+3
  8347  0116E6  C161  F083         	movff	sprintf@fval,___flmul@a
  8348  0116EA  C162  F084         	movff	sprintf@fval+1,___flmul@a+1
  8349  0116EE  C163  F085         	movff	sprintf@fval+2,___flmul@a+2
  8350  0116F2  C164  F086         	movff	sprintf@fval+3,___flmul@a+3
  8351  0116F6  EC23  F09D         	call	___flmul	;wreg free
  8352  0116FA  C07F  F15B         	movff	?___flmul,sprintf@tmpval
  8353  0116FE  C080  F15C         	movff	?___flmul+1,sprintf@tmpval+1
  8354  011702  C081  F15D         	movff	?___flmul+2,sprintf@tmpval+2
  8355  011706  C082  F15E         	movff	?___flmul+3,sprintf@tmpval+3
  8356                           
  8357                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  8358  01170A  C15B  F071         	movff	sprintf@tmpval,___flge@ff1
  8359  01170E  C15C  F072         	movff	sprintf@tmpval+1,___flge@ff1+1
  8360  011712  C15D  F073         	movff	sprintf@tmpval+2,___flge@ff1+2
  8361  011716  C15E  F074         	movff	sprintf@tmpval+3,___flge@ff1+3
  8362  01171A  0E00               	movlw	0
  8363  01171C  0100               	movlb	0	; () banked
  8364  01171E  6F75               	movwf	___flge@ff2& (0+255),b
  8365  011720  0E00               	movlw	0
  8366  011722  6F76               	movwf	(___flge@ff2+1)& (0+255),b
  8367  011724  0E80               	movlw	128
  8368  011726  6F77               	movwf	(___flge@ff2+2)& (0+255),b
  8369  011728  0E3F               	movlw	63
  8370  01172A  6F78               	movwf	(___flge@ff2+3)& (0+255),b
  8371  01172C  EC91  F0AA         	call	___flge	;wreg free
  8372  011730  0100               	movlb	0	; () banked
  8373  011732  B0D8               	btfsc	status,0,c
  8374  011734  D005               	goto	l9145
  8375                           
  8376                           ; BSR set to: 0
  8377                           ;doprnt.c: 849: exp--;
  8378  011736  0101               	movlb	1	; () banked
  8379  011738  0759               	decf	sprintf@exp& (0+255),f,b
  8380  01173A  A0D8               	btfss	status,0,c
  8381  01173C  075A               	decf	(sprintf@exp+1)& (0+255),f,b
  8382  01173E  D019               	goto	l9149
  8383  011740                     l9145:
  8384                           
  8385                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  8386  011740  C15B  F071         	movff	sprintf@tmpval,___flge@ff1
  8387  011744  C15C  F072         	movff	sprintf@tmpval+1,___flge@ff1+1
  8388  011748  C15D  F073         	movff	sprintf@tmpval+2,___flge@ff1+2
  8389  01174C  C15E  F074         	movff	sprintf@tmpval+3,___flge@ff1+3
  8390  011750  0E00               	movlw	0
  8391  011752  0100               	movlb	0	; () banked
  8392  011754  6F75               	movwf	___flge@ff2& (0+255),b
  8393  011756  0E00               	movlw	0
  8394  011758  6F76               	movwf	(___flge@ff2+1)& (0+255),b
  8395  01175A  0E20               	movlw	32
  8396  01175C  6F77               	movwf	(___flge@ff2+2)& (0+255),b
  8397  01175E  0E41               	movlw	65
  8398  011760  6F78               	movwf	(___flge@ff2+3)& (0+255),b
  8399  011762  EC91  F0AA         	call	___flge	;wreg free
  8400  011766  0100               	movlb	0	; () banked
  8401  011768  A0D8               	btfss	status,0,c
  8402  01176A  D003               	goto	l9149
  8403                           
  8404                           ; BSR set to: 0
  8405                           ;doprnt.c: 851: exp++;
  8406  01176C  0101               	movlb	1	; () banked
  8407  01176E  4B59               	infsnz	sprintf@exp& (0+255),f,b
  8408  011770  2B5A               	incf	(sprintf@exp+1)& (0+255),f,b
  8409  011772                     l9149:
  8410                           
  8411                           ;doprnt.c: 852: }
  8412                           ;doprnt.c: 1112: if(prec <= 12)
  8413  011772  0101               	movlb	1	; () banked
  8414  011774  BF60               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8415  011776  D008               	goto	l9151
  8416  011778  0101               	movlb	1	; () banked
  8417  01177A  5160               	movf	(sprintf@prec+1)& (0+255),w,b
  8418  01177C  E123               	bnz	l9153
  8419  01177E  0E0D               	movlw	13
  8420  011780  0101               	movlb	1	; () banked
  8421  011782  5D5F               	subwf	sprintf@prec& (0+255),w,b
  8422  011784  B0D8               	btfsc	status,0,c
  8423  011786  D01E               	goto	l9153
  8424  011788                     l9151:
  8425                           
  8426                           ; BSR set to: 1
  8427                           ;doprnt.c: 1113: fval += fround(prec);
  8428  011788  C161  F0A5         	movff	sprintf@fval,___fladd@b
  8429  01178C  C162  F0A6         	movff	sprintf@fval+1,___fladd@b+1
  8430  011790  C163  F0A7         	movff	sprintf@fval+2,___fladd@b+2
  8431  011794  C164  F0A8         	movff	sprintf@fval+3,___fladd@b+3
  8432  011798  0101               	movlb	1	; () banked
  8433  01179A  515F               	movf	sprintf@prec& (0+255),w,b
  8434  01179C  EC25  F0A3         	call	_fround
  8435  0117A0  C098  F0A9         	movff	?_fround,___fladd@a
  8436  0117A4  C099  F0AA         	movff	?_fround+1,___fladd@a+1
  8437  0117A8  C09A  F0AB         	movff	?_fround+2,___fladd@a+2
  8438  0117AC  C09B  F0AC         	movff	?_fround+3,___fladd@a+3
  8439  0117B0  ECCF  F09A         	call	___fladd	;wreg free
  8440  0117B4  C0A5  F161         	movff	?___fladd,sprintf@fval
  8441  0117B8  C0A6  F162         	movff	?___fladd+1,sprintf@fval+1
  8442  0117BC  C0A7  F163         	movff	?___fladd+2,sprintf@fval+2
  8443  0117C0  C0A8  F164         	movff	?___fladd+3,sprintf@fval+3
  8444  0117C4                     l9153:
  8445                           
  8446                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  8447  0117C4  0101               	movlb	1	; () banked
  8448  0117C6  BF5A               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8449  0117C8  D008               	goto	l9155
  8450  0117CA  0101               	movlb	1	; () banked
  8451  0117CC  515A               	movf	(sprintf@exp+1)& (0+255),w,b
  8452  0117CE  E12E               	bnz	l9161
  8453  0117D0  0E0A               	movlw	10
  8454  0117D2  0101               	movlb	1	; () banked
  8455  0117D4  5D59               	subwf	sprintf@exp& (0+255),w,b
  8456  0117D6  B0D8               	btfsc	status,0,c
  8457  0117D8  D029               	goto	l9161
  8458  0117DA                     l9155:
  8459                           
  8460                           ; BSR set to: 1
  8461  0117DA  0101               	movlb	1	; () banked
  8462  0117DC  5161               	movf	sprintf@fval& (0+255),w,b
  8463  0117DE  0101               	movlb	1	; () banked
  8464  0117E0  1162               	iorwf	(sprintf@fval+1)& (0+255),w,b
  8465  0117E2  0101               	movlb	1	; () banked
  8466  0117E4  1163               	iorwf	(sprintf@fval+2)& (0+255),w,b
  8467  0117E6  0101               	movlb	1	; () banked
  8468  0117E8  1164               	iorwf	(sprintf@fval+3)& (0+255),w,b
  8469  0117EA  B4D8               	btfsc	status,2,c
  8470  0117EC  D06D               	goto	l9175
  8471                           
  8472                           ; BSR set to: 1
  8473  0117EE  C161  F0B9         	movff	sprintf@fval,___fltol@f1
  8474  0117F2  C162  F0BA         	movff	sprintf@fval+1,___fltol@f1+1
  8475  0117F6  C163  F0BB         	movff	sprintf@fval+2,___fltol@f1+2
  8476  0117FA  C164  F0BC         	movff	sprintf@fval+3,___fltol@f1+3
  8477  0117FE  ECD4  F0AC         	call	___fltol	;wreg free
  8478  011802  0100               	movlb	0	; () banked
  8479  011804  51B9               	movf	?___fltol& (0+255),w,b
  8480  011806  0100               	movlb	0	; () banked
  8481  011808  11BA               	iorwf	(?___fltol+1)& (0+255),w,b
  8482  01180A  0100               	movlb	0	; () banked
  8483  01180C  11BB               	iorwf	(?___fltol+2)& (0+255),w,b
  8484  01180E  0100               	movlb	0	; () banked
  8485  011810  11BC               	iorwf	(?___fltol+3)& (0+255),w,b
  8486  011812  A4D8               	btfss	status,2,c
  8487  011814  D059               	goto	l9175
  8488                           
  8489                           ; BSR set to: 0
  8490  011816  0101               	movlb	1	; () banked
  8491  011818  BF5A               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8492  01181A  D056               	goto	l9175
  8493  01181C  0101               	movlb	1	; () banked
  8494  01181E  515A               	movf	(sprintf@exp+1)& (0+255),w,b
  8495  011820  E105               	bnz	l9161
  8496  011822  0E02               	movlw	2
  8497  011824  0101               	movlb	1	; () banked
  8498  011826  5D59               	subwf	sprintf@exp& (0+255),w,b
  8499  011828  A0D8               	btfss	status,0,c
  8500  01182A  D04E               	goto	l9175
  8501  01182C                     l9161:
  8502                           
  8503                           ; BSR set to: 1
  8504                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  8505  01182C  C15B  F071         	movff	sprintf@tmpval,___flge@ff1
  8506  011830  C15C  F072         	movff	sprintf@tmpval+1,___flge@ff1+1
  8507  011834  C15D  F073         	movff	sprintf@tmpval+2,___flge@ff1+2
  8508  011838  C15E  F074         	movff	sprintf@tmpval+3,___flge@ff1+3
  8509  01183C  0E5F               	movlw	95
  8510  01183E  0100               	movlb	0	; () banked
  8511  011840  6F75               	movwf	___flge@ff2& (0+255),b
  8512  011842  0E70               	movlw	112
  8513  011844  6F76               	movwf	(___flge@ff2+1)& (0+255),b
  8514  011846  0E89               	movlw	137
  8515  011848  6F77               	movwf	(___flge@ff2+2)& (0+255),b
  8516  01184A  0E40               	movlw	64
  8517  01184C  6F78               	movwf	(___flge@ff2+3)& (0+255),b
  8518  01184E  EC91  F0AA         	call	___flge	;wreg free
  8519  011852  0100               	movlb	0	; () banked
  8520  011854  B0D8               	btfsc	status,0,c
  8521  011856  D003               	goto	l9165
  8522                           
  8523                           ; BSR set to: 0
  8524                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  8525  011858  0101               	movlb	1	; () banked
  8526  01185A  0EF7               	movlw	247
  8527  01185C  D002               	goto	L6
  8528  01185E                     l9165:
  8529                           
  8530                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  8531  01185E  0101               	movlb	1	; () banked
  8532  011860  0EF8               	movlw	248
  8533  011862                     L6:
  8534  011862  2759               	addwf	sprintf@exp& (0+255),f,b
  8535  011864  0EFF               	movlw	255
  8536  011866  235A               	addwfc	(sprintf@exp+1)& (0+255),f,b
  8537                           
  8538                           ; BSR set to: 1
  8539                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  8540                           
  8541                           ; BSR set to: 1
  8542  011868  0101               	movlb	1	; () banked
  8543  01186A  5159               	movf	sprintf@exp& (0+255),w,b
  8544  01186C  ECBC  F095         	call	_scale
  8545  011870  C098  F15B         	movff	?_scale,sprintf@tmpval
  8546  011874  C099  F15C         	movff	?_scale+1,sprintf@tmpval+1
  8547  011878  C09A  F15D         	movff	?_scale+2,sprintf@tmpval+2
  8548  01187C  C09B  F15E         	movff	?_scale+3,sprintf@tmpval+3
  8549  011880  C161  F071         	movff	sprintf@fval,__div_to_l_@f1
  8550  011884  C162  F072         	movff	sprintf@fval+1,__div_to_l_@f1+1
  8551  011888  C163  F073         	movff	sprintf@fval+2,__div_to_l_@f1+2
  8552  01188C  C164  F074         	movff	sprintf@fval+3,__div_to_l_@f1+3
  8553  011890  C15B  F075         	movff	sprintf@tmpval,__div_to_l_@f2
  8554  011894  C15C  F076         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  8555  011898  C15D  F077         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  8556  01189C  C15E  F078         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  8557  0118A0  EC59  F0AB         	call	__div_to_l_	;wreg free
  8558  0118A4  C071  F155         	movff	?__div_to_l_,sprintf@val
  8559  0118A8  C072  F156         	movff	?__div_to_l_+1,sprintf@val+1
  8560  0118AC  C073  F157         	movff	?__div_to_l_+2,sprintf@val+2
  8561  0118B0  C074  F158         	movff	?__div_to_l_+3,sprintf@val+3
  8562                           
  8563                           ;doprnt.c: 1129: fval = 0.0;
  8564  0118B4  0E00               	movlw	0
  8565  0118B6  0101               	movlb	1	; () banked
  8566  0118B8  6F61               	movwf	sprintf@fval& (0+255),b
  8567  0118BA  0E00               	movlw	0
  8568  0118BC  6F62               	movwf	(sprintf@fval+1)& (0+255),b
  8569  0118BE  0E00               	movlw	0
  8570  0118C0  6F63               	movwf	(sprintf@fval+2)& (0+255),b
  8571  0118C2  0E00               	movlw	0
  8572  0118C4  6F64               	movwf	(sprintf@fval+3)& (0+255),b
  8573                           
  8574                           ;doprnt.c: 1130: } else {
  8575  0118C6  D03C               	goto	l9179
  8576  0118C8                     l9175:
  8577                           
  8578                           ;doprnt.c: 1131: val = (unsigned long)fval;
  8579  0118C8  C161  F0B9         	movff	sprintf@fval,___fltol@f1
  8580  0118CC  C162  F0BA         	movff	sprintf@fval+1,___fltol@f1+1
  8581  0118D0  C163  F0BB         	movff	sprintf@fval+2,___fltol@f1+2
  8582  0118D4  C164  F0BC         	movff	sprintf@fval+3,___fltol@f1+3
  8583  0118D8  ECD4  F0AC         	call	___fltol	;wreg free
  8584  0118DC  C0B9  F155         	movff	?___fltol,sprintf@val
  8585  0118E0  C0BA  F156         	movff	?___fltol+1,sprintf@val+1
  8586  0118E4  C0BB  F157         	movff	?___fltol+2,sprintf@val+2
  8587  0118E8  C0BC  F158         	movff	?___fltol+3,sprintf@val+3
  8588                           
  8589                           ;doprnt.c: 1132: fval -= (double)val;
  8590  0118EC  C161  F0B9         	movff	sprintf@fval,___flsub@b
  8591  0118F0  C162  F0BA         	movff	sprintf@fval+1,___flsub@b+1
  8592  0118F4  C163  F0BB         	movff	sprintf@fval+2,___flsub@b+2
  8593  0118F8  C164  F0BC         	movff	sprintf@fval+3,___flsub@b+3
  8594  0118FC  C155  F071         	movff	sprintf@val,___xxtofl@val
  8595  011900  C156  F072         	movff	sprintf@val+1,___xxtofl@val+1
  8596  011904  C157  F073         	movff	sprintf@val+2,___xxtofl@val+2
  8597  011908  C158  F074         	movff	sprintf@val+3,___xxtofl@val+3
  8598  01190C  0E00               	movlw	0
  8599  01190E  EC18  F0A7         	call	___xxtofl
  8600  011912  C071  F0BD         	movff	?___xxtofl,___flsub@a
  8601  011916  C072  F0BE         	movff	?___xxtofl+1,___flsub@a+1
  8602  01191A  C073  F0BF         	movff	?___xxtofl+2,___flsub@a+2
  8603  01191E  C074  F0C0         	movff	?___xxtofl+3,___flsub@a+3
  8604  011922  EC84  F0B2         	call	___flsub	;wreg free
  8605  011926  C0B9  F161         	movff	?___flsub,sprintf@fval
  8606  01192A  C0BA  F162         	movff	?___flsub+1,sprintf@fval+1
  8607  01192E  C0BB  F163         	movff	?___flsub+2,sprintf@fval+2
  8608  011932  C0BC  F164         	movff	?___flsub+3,sprintf@fval+3
  8609                           
  8610                           ;doprnt.c: 1133: exp = 0;
  8611  011936  0E00               	movlw	0
  8612  011938  0101               	movlb	1	; () banked
  8613  01193A  6F5A               	movwf	(sprintf@exp+1)& (0+255),b
  8614  01193C  0E00               	movlw	0
  8615  01193E  6F59               	movwf	sprintf@exp& (0+255),b
  8616  011940                     l9179:
  8617                           
  8618                           ; BSR set to: 1
  8619                           ;doprnt.c: 1134: }
  8620                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8621  011940  0E01               	movlw	1
  8622  011942  0101               	movlb	1	; () banked
  8623  011944  6F65               	movwf	sprintf@c& (0+255),b
  8624  011946                     l9181:
  8625                           
  8626                           ; BSR set to: 1
  8627  011946  0E0A               	movlw	10
  8628  011948  0101               	movlb	1	; () banked
  8629  01194A  1965               	xorwf	sprintf@c& (0+255),w,b
  8630  01194C  B4D8               	btfsc	status,2,c
  8631  01194E  D021               	goto	l9193
  8632                           
  8633                           ; BSR set to: 1
  8634                           ;doprnt.c: 1137: if(val < dpowers[c])
  8635                           
  8636                           ; BSR set to: 1
  8637                           
  8638                           ; BSR set to: 1
  8639  011950  0101               	movlb	1	; () banked
  8640  011952  5165               	movf	sprintf@c& (0+255),w,b
  8641  011954  0D04               	mullw	4
  8642  011956  0E35               	movlw	low _dpowers
  8643  011958  24F3               	addwf	prodl,w,c
  8644  01195A  6EF6               	movwf	tblptrl,c
  8645  01195C  0EFD               	movlw	high _dpowers
  8646  01195E  20F4               	addwfc	prodh,w,c
  8647  011960  6EF7               	movwf	tblptrh,c
  8648  011962                     	if	1	;There are 3 active tblptr bytes
  8649  011962  6AF8               	clrf	tblptru,c
  8650  011964  0E00               	movlw	low (__mediumconst shr (0+16))
  8651  011966  22F8               	addwfc	tblptru,f,c
  8652  011968                     	endif
  8653  011968  0009               	tblrd		*+
  8654  01196A  50F5               	movf	tablat,w,c
  8655  01196C  0101               	movlb	1	; () banked
  8656  01196E  5D55               	subwf	sprintf@val& (0+255),w,b
  8657  011970  0009               	tblrd		*+
  8658  011972  50F5               	movf	tablat,w,c
  8659  011974  0101               	movlb	1	; () banked
  8660  011976  5956               	subwfb	(sprintf@val+1)& (0+255),w,b
  8661  011978  0009               	tblrd		*+
  8662  01197A  50F5               	movf	tablat,w,c
  8663  01197C  0101               	movlb	1	; () banked
  8664  01197E  5957               	subwfb	(sprintf@val+2)& (0+255),w,b
  8665  011980  0009               	tblrd		*+
  8666  011982  50F5               	movf	tablat,w,c
  8667  011984  0101               	movlb	1	; () banked
  8668  011986  5958               	subwfb	(sprintf@val+3)& (0+255),w,b
  8669  011988  A0D8               	btfss	status,0,c
  8670  01198A  D003               	goto	l9193
  8671                           
  8672                           ; BSR set to: 1
  8673                           
  8674                           ; BSR set to: 1
  8675                           
  8676                           ; BSR set to: 1
  8677                           ;doprnt.c: 1138: break;
  8678  01198C  0101               	movlb	1	; () banked
  8679  01198E  2B65               	incf	sprintf@c& (0+255),f,b
  8680  011990  D7DA               	goto	l9181
  8681  011992                     l9193:
  8682                           
  8683                           ; BSR set to: 1
  8684                           ;doprnt.c: 1175: {
  8685                           ;doprnt.c: 1188: if(flag & 0x03)
  8686  011992  0E03               	movlw	3
  8687  011994  0101               	movlb	1	; () banked
  8688  011996  1553               	andwf	sprintf@flag& (0+255),w,b
  8689  011998  0100               	movlb	0	; () banked
  8690  01199A  6FCB               	movwf	??_sprintf& (0+255),b
  8691  01199C  0E00               	movlw	0
  8692  01199E  0101               	movlb	1	; () banked
  8693  0119A0  1554               	andwf	(sprintf@flag+1)& (0+255),w,b
  8694  0119A2  0100               	movlb	0	; () banked
  8695  0119A4  6FCC               	movwf	(??_sprintf+1)& (0+255),b
  8696  0119A6  0100               	movlb	0	; () banked
  8697  0119A8  51CB               	movf	??_sprintf& (0+255),w,b
  8698  0119AA  0100               	movlb	0	; () banked
  8699  0119AC  11CC               	iorwf	(??_sprintf+1)& (0+255),w,b
  8700  0119AE  B4D8               	btfsc	status,2,c
  8701  0119B0  D058               	goto	l9207
  8702                           
  8703                           ; BSR set to: 0
  8704                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  8705  0119B2  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8706  0119B6  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8707  0119BA  0E2D               	movlw	45
  8708  0119BC  D050               	goto	L7
  8709  0119BE                     l9197:
  8710                           
  8711                           ; BSR set to: 0
  8712  0119BE  0100               	movlb	0	; () banked
  8713  0119C0  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  8714  0119C2  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8715                           
  8716                           ; BSR set to: 0
  8717                           ;doprnt.c: 1195: }
  8718                           ;doprnt.c: 1196: while(c--) {
  8719  0119C4  D04E               	goto	l9207
  8720  0119C6                     l9199:
  8721                           
  8722                           ;doprnt.c: 1200: {
  8723                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  8724  0119C6  C155  F071         	movff	sprintf@val,___lldiv@dividend
  8725  0119CA  C156  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  8726  0119CE  C157  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  8727  0119D2  C158  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  8728  0119D6  0101               	movlb	1	; () banked
  8729  0119D8  5165               	movf	sprintf@c& (0+255),w,b
  8730  0119DA  0D04               	mullw	4
  8731  0119DC  0E35               	movlw	low _dpowers
  8732  0119DE  24F3               	addwf	prodl,w,c
  8733  0119E0  6EF6               	movwf	tblptrl,c
  8734  0119E2  0EFD               	movlw	high _dpowers
  8735  0119E4  20F4               	addwfc	prodh,w,c
  8736  0119E6  6EF7               	movwf	tblptrh,c
  8737  0119E8                     	if	1	;There are 3 active tblptr bytes
  8738  0119E8  6AF8               	clrf	tblptru,c
  8739  0119EA  0E00               	movlw	low (__mediumconst shr (0+16))
  8740  0119EC  22F8               	addwfc	tblptru,f,c
  8741  0119EE                     	endif
  8742  0119EE  0009               	tblrd		*+
  8743  0119F0  CFF5 F075          	movff	tablat,___lldiv@divisor
  8744  0119F4  0009               	tblrd		*+
  8745  0119F6  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  8746  0119FA  0009               	tblrd		*+
  8747  0119FC  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  8748  011A00  000A               	tblrd		*-
  8749  011A02  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  8750  011A06  EC8E  F0AE         	call	___lldiv	;wreg free
  8751  011A0A  C071  F15B         	movff	?___lldiv,sprintf@tmpval
  8752  011A0E  C072  F15C         	movff	?___lldiv+1,sprintf@tmpval+1
  8753  011A12  C073  F15D         	movff	?___lldiv+2,sprintf@tmpval+2
  8754  011A16  C074  F15E         	movff	?___lldiv+3,sprintf@tmpval+3
  8755                           
  8756                           ;doprnt.c: 1202: tmpval.vd %= 10;
  8757  011A1A  C15B  F071         	movff	sprintf@tmpval,___llmod@dividend
  8758  011A1E  C15C  F072         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8759  011A22  C15D  F073         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8760  011A26  C15E  F074         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8761  011A2A  0E0A               	movlw	10
  8762  011A2C  0100               	movlb	0	; () banked
  8763  011A2E  6F75               	movwf	___llmod@divisor& (0+255),b
  8764  011A30  0E00               	movlw	0
  8765  011A32  6F76               	movwf	(___llmod@divisor+1)& (0+255),b
  8766  011A34  0E00               	movlw	0
  8767  011A36  6F77               	movwf	(___llmod@divisor+2)& (0+255),b
  8768  011A38  0E00               	movlw	0
  8769  011A3A  6F78               	movwf	(___llmod@divisor+3)& (0+255),b
  8770  011A3C  ECEC  F0AF         	call	___llmod	;wreg free
  8771  011A40  C071  F15B         	movff	?___llmod,sprintf@tmpval
  8772  011A44  C072  F15C         	movff	?___llmod+1,sprintf@tmpval+1
  8773  011A48  C073  F15D         	movff	?___llmod+2,sprintf@tmpval+2
  8774  011A4C  C074  F15E         	movff	?___llmod+3,sprintf@tmpval+3
  8775                           
  8776                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  8777  011A50  0101               	movlb	1	; () banked
  8778  011A52  515B               	movf	sprintf@tmpval& (0+255),w,b
  8779  011A54  0F30               	addlw	48
  8780  011A56  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8781  011A5A  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8782  011A5E                     L7:
  8783  011A5E  6EDF               	movwf	indf2,c
  8784  011A60  D7AE               	goto	l9197
  8785  011A62                     l9207:
  8786                           
  8787                           ; BSR set to: 0
  8788  011A62  0101               	movlb	1	; () banked
  8789  011A64  0765               	decf	sprintf@c& (0+255),f,b
  8790  011A66  0101               	movlb	1	; () banked
  8791  011A68  2965               	incf	sprintf@c& (0+255),w,b
  8792  011A6A  B4D8               	btfsc	status,2,c
  8793  011A6C  D00E               	goto	l9215
  8794  011A6E  D7AB               	goto	l9199
  8795  011A70                     l9209:
  8796                           
  8797                           ; BSR set to: 1
  8798                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  8799  011A70  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8800  011A74  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8801  011A78  0E30               	movlw	48
  8802  011A7A  6EDF               	movwf	indf2,c
  8803                           
  8804                           ; BSR set to: 1
  8805  011A7C  0100               	movlb	0	; () banked
  8806  011A7E  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  8807  011A80  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;doprnt.c: 1209: exp--;
  8811  011A82  0101               	movlb	1	; () banked
  8812  011A84  0759               	decf	sprintf@exp& (0+255),f,b
  8813  011A86  A0D8               	btfss	status,0,c
  8814  011A88  075A               	decf	(sprintf@exp+1)& (0+255),f,b
  8815  011A8A                     l9215:
  8816                           
  8817                           ; BSR set to: 1
  8818  011A8A  0101               	movlb	1	; () banked
  8819  011A8C  BF5A               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8820  011A8E  D007               	goto	l9217
  8821  011A90  0101               	movlb	1	; () banked
  8822  011A92  515A               	movf	(sprintf@exp+1)& (0+255),w,b
  8823  011A94  E1ED               	bnz	l9209
  8824  011A96  0101               	movlb	1	; () banked
  8825  011A98  0559               	decf	sprintf@exp& (0+255),w,b
  8826  011A9A  B0D8               	btfsc	status,0,c
  8827  011A9C  D7E9               	goto	l9209
  8828  011A9E                     l9217:
  8829                           
  8830                           ; BSR set to: 1
  8831                           ;doprnt.c: 1210: }
  8832                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  8833  011A9E  0101               	movlb	1	; () banked
  8834  011AA0  BF60               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8835  011AA2  D00C               	goto	l1071
  8836  011AA4  0101               	movlb	1	; () banked
  8837  011AA6  5160               	movf	(sprintf@prec+1)& (0+255),w,b
  8838  011AA8  E105               	bnz	u12400
  8839  011AAA  0E09               	movlw	9
  8840  011AAC  0101               	movlb	1	; () banked
  8841  011AAE  5D5F               	subwf	sprintf@prec& (0+255),w,b
  8842  011AB0  A0D8               	btfss	status,0,c
  8843  011AB2  D004               	goto	l1071
  8844  011AB4                     u12400:
  8845                           
  8846                           ; BSR set to: 1
  8847                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  8848  011AB4  0E08               	movlw	8
  8849  011AB6  0101               	movlb	1	; () banked
  8850  011AB8  6F65               	movwf	sprintf@c& (0+255),b
  8851  011ABA  D002               	goto	l9221
  8852  011ABC                     l1071:
  8853                           
  8854                           ; BSR set to: 1
  8855                           ;doprnt.c: 1213: else
  8856                           ;doprnt.c: 1214: c = prec;
  8857  011ABC  C15F  F165         	movff	sprintf@prec,sprintf@c
  8858  011AC0                     l9221:
  8859                           
  8860                           ; BSR set to: 1
  8861                           ;doprnt.c: 1215: prec -= c;
  8862  011AC0  0101               	movlb	1	; () banked
  8863  011AC2  5165               	movf	sprintf@c& (0+255),w,b
  8864  011AC4  0101               	movlb	1	; () banked
  8865  011AC6  5F5F               	subwf	sprintf@prec& (0+255),f,b
  8866  011AC8  0E00               	movlw	0
  8867  011ACA  0101               	movlb	1	; () banked
  8868  011ACC  BF65               	btfsc	sprintf@c& (0+255),7,b
  8869  011ACE  0EFF               	movlw	255
  8870  011AD0  0101               	movlb	1	; () banked
  8871  011AD2  5B60               	subwfb	(sprintf@prec+1)& (0+255),f,b
  8872                           
  8873                           ; BSR set to: 1
  8874                           ;doprnt.c: 1219: if(c)
  8875  011AD4  0101               	movlb	1	; () banked
  8876  011AD6  5165               	movf	sprintf@c& (0+255),w,b
  8877  011AD8  0101               	movlb	1	; () banked
  8878  011ADA  B4D8               	btfsc	status,2,c
  8879  011ADC  D009               	goto	l9229
  8880                           
  8881                           ; BSR set to: 1
  8882                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  8883  011ADE  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8884  011AE2  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8885  011AE6  0E2E               	movlw	46
  8886  011AE8  6EDF               	movwf	indf2,c
  8887                           
  8888                           ; BSR set to: 1
  8889  011AEA  0100               	movlb	0	; () banked
  8890  011AEC  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  8891  011AEE  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8892  011AF0                     l9229:
  8893                           
  8894                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8895  011AF0  0101               	movlb	1	; () banked
  8896  011AF2  5165               	movf	sprintf@c& (0+255),w,b
  8897  011AF4  ECBC  F095         	call	_scale
  8898  011AF8  C098  F14D         	movff	?_scale,_sprintf$4194
  8899  011AFC  C099  F14E         	movff	?_scale+1,_sprintf$4194+1
  8900  011B00  C09A  F14F         	movff	?_scale+2,_sprintf$4194+2
  8901  011B04  C09B  F150         	movff	?_scale+3,_sprintf$4194+3
  8902                           
  8903                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8904  011B08  C161  F083         	movff	sprintf@fval,___flmul@a
  8905  011B0C  C162  F084         	movff	sprintf@fval+1,___flmul@a+1
  8906  011B10  C163  F085         	movff	sprintf@fval+2,___flmul@a+2
  8907  011B14  C164  F086         	movff	sprintf@fval+3,___flmul@a+3
  8908  011B18  C14D  F07F         	movff	_sprintf$4194,___flmul@b
  8909  011B1C  C14E  F080         	movff	_sprintf$4194+1,___flmul@b+1
  8910  011B20  C14F  F081         	movff	_sprintf$4194+2,___flmul@b+2
  8911  011B24  C150  F082         	movff	_sprintf$4194+3,___flmul@b+3
  8912  011B28  EC23  F09D         	call	___flmul	;wreg free
  8913  011B2C  C07F  F0B9         	movff	?___flmul,___fltol@f1
  8914  011B30  C080  F0BA         	movff	?___flmul+1,___fltol@f1+1
  8915  011B34  C081  F0BB         	movff	?___flmul+2,___fltol@f1+2
  8916  011B38  C082  F0BC         	movff	?___flmul+3,___fltol@f1+3
  8917  011B3C  ECD4  F0AC         	call	___fltol	;wreg free
  8918  011B40  C0B9  F155         	movff	?___fltol,sprintf@val
  8919  011B44  C0BA  F156         	movff	?___fltol+1,sprintf@val+1
  8920  011B48  C0BB  F157         	movff	?___fltol+2,sprintf@val+2
  8921  011B4C  C0BC  F158         	movff	?___fltol+3,sprintf@val+3
  8922                           
  8923                           ;doprnt.c: 1228: while(c--) {
  8924  011B50  D07A               	goto	l9243
  8925  011B52                     l9233:
  8926                           
  8927                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  8928  011B52  C155  F071         	movff	sprintf@val,___lldiv@dividend
  8929  011B56  C156  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  8930  011B5A  C157  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  8931  011B5E  C158  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  8932  011B62  0101               	movlb	1	; () banked
  8933  011B64  5165               	movf	sprintf@c& (0+255),w,b
  8934  011B66  0D04               	mullw	4
  8935  011B68  0E35               	movlw	low _dpowers
  8936  011B6A  24F3               	addwf	prodl,w,c
  8937  011B6C  6EF6               	movwf	tblptrl,c
  8938  011B6E  0EFD               	movlw	high _dpowers
  8939  011B70  20F4               	addwfc	prodh,w,c
  8940  011B72  6EF7               	movwf	tblptrh,c
  8941  011B74                     	if	1	;There are 3 active tblptr bytes
  8942  011B74  6AF8               	clrf	tblptru,c
  8943  011B76  0E00               	movlw	low (__mediumconst shr (0+16))
  8944  011B78  22F8               	addwfc	tblptru,f,c
  8945  011B7A                     	endif
  8946  011B7A  0009               	tblrd		*+
  8947  011B7C  CFF5 F075          	movff	tablat,___lldiv@divisor
  8948  011B80  0009               	tblrd		*+
  8949  011B82  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  8950  011B86  0009               	tblrd		*+
  8951  011B88  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  8952  011B8C  000A               	tblrd		*-
  8953  011B8E  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  8954  011B92  EC8E  F0AE         	call	___lldiv	;wreg free
  8955  011B96  C071  F15B         	movff	?___lldiv,sprintf@tmpval
  8956  011B9A  C072  F15C         	movff	?___lldiv+1,sprintf@tmpval+1
  8957  011B9E  C073  F15D         	movff	?___lldiv+2,sprintf@tmpval+2
  8958  011BA2  C074  F15E         	movff	?___lldiv+3,sprintf@tmpval+3
  8959                           
  8960                           ;doprnt.c: 1230: tmpval.vd %= 10;
  8961  011BA6  C15B  F071         	movff	sprintf@tmpval,___llmod@dividend
  8962  011BAA  C15C  F072         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8963  011BAE  C15D  F073         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8964  011BB2  C15E  F074         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8965  011BB6  0E0A               	movlw	10
  8966  011BB8  0100               	movlb	0	; () banked
  8967  011BBA  6F75               	movwf	___llmod@divisor& (0+255),b
  8968  011BBC  0E00               	movlw	0
  8969  011BBE  6F76               	movwf	(___llmod@divisor+1)& (0+255),b
  8970  011BC0  0E00               	movlw	0
  8971  011BC2  6F77               	movwf	(___llmod@divisor+2)& (0+255),b
  8972  011BC4  0E00               	movlw	0
  8973  011BC6  6F78               	movwf	(___llmod@divisor+3)& (0+255),b
  8974  011BC8  ECEC  F0AF         	call	___llmod	;wreg free
  8975  011BCC  C071  F15B         	movff	?___llmod,sprintf@tmpval
  8976  011BD0  C072  F15C         	movff	?___llmod+1,sprintf@tmpval+1
  8977  011BD4  C073  F15D         	movff	?___llmod+2,sprintf@tmpval+2
  8978  011BD8  C074  F15E         	movff	?___llmod+3,sprintf@tmpval+3
  8979                           
  8980                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  8981  011BDC  0101               	movlb	1	; () banked
  8982  011BDE  515B               	movf	sprintf@tmpval& (0+255),w,b
  8983  011BE0  0F30               	addlw	48
  8984  011BE2  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  8985  011BE6  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  8986  011BEA  6EDF               	movwf	indf2,c
  8987                           
  8988                           ; BSR set to: 1
  8989  011BEC  0100               	movlb	0	; () banked
  8990  011BEE  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  8991  011BF0  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  8992                           
  8993                           ; BSR set to: 0
  8994                           ;doprnt.c: 1232: val %= dpowers[c];
  8995  011BF2  C155  F071         	movff	sprintf@val,___llmod@dividend
  8996  011BF6  C156  F072         	movff	sprintf@val+1,___llmod@dividend+1
  8997  011BFA  C157  F073         	movff	sprintf@val+2,___llmod@dividend+2
  8998  011BFE  C158  F074         	movff	sprintf@val+3,___llmod@dividend+3
  8999  011C02  0101               	movlb	1	; () banked
  9000  011C04  5165               	movf	sprintf@c& (0+255),w,b
  9001  011C06  0D04               	mullw	4
  9002  011C08  0E35               	movlw	low _dpowers
  9003  011C0A  24F3               	addwf	prodl,w,c
  9004  011C0C  6EF6               	movwf	tblptrl,c
  9005  011C0E  0EFD               	movlw	high _dpowers
  9006  011C10  20F4               	addwfc	prodh,w,c
  9007  011C12  6EF7               	movwf	tblptrh,c
  9008  011C14                     	if	1	;There are 3 active tblptr bytes
  9009  011C14  6AF8               	clrf	tblptru,c
  9010  011C16  0E00               	movlw	low (__mediumconst shr (0+16))
  9011  011C18  22F8               	addwfc	tblptru,f,c
  9012  011C1A                     	endif
  9013  011C1A  0009               	tblrd		*+
  9014  011C1C  CFF5 F075          	movff	tablat,___llmod@divisor
  9015  011C20  0009               	tblrd		*+
  9016  011C22  CFF5 F076          	movff	tablat,___llmod@divisor+1
  9017  011C26  0009               	tblrd		*+
  9018  011C28  CFF5 F077          	movff	tablat,___llmod@divisor+2
  9019  011C2C  000A               	tblrd		*-
  9020  011C2E  CFF5 F078          	movff	tablat,___llmod@divisor+3
  9021  011C32  ECEC  F0AF         	call	___llmod	;wreg free
  9022  011C36  C071  F155         	movff	?___llmod,sprintf@val
  9023  011C3A  C072  F156         	movff	?___llmod+1,sprintf@val+1
  9024  011C3E  C073  F157         	movff	?___llmod+2,sprintf@val+2
  9025  011C42  C074  F158         	movff	?___llmod+3,sprintf@val+3
  9026  011C46                     l9243:
  9027  011C46  0101               	movlb	1	; () banked
  9028  011C48  0765               	decf	sprintf@c& (0+255),f,b
  9029  011C4A  0101               	movlb	1	; () banked
  9030  011C4C  2965               	incf	sprintf@c& (0+255),w,b
  9031  011C4E  B4D8               	btfsc	status,2,c
  9032  011C50  D00E               	goto	l9251
  9033  011C52  D77F               	goto	l9233
  9034  011C54                     l9245:
  9035                           
  9036                           ; BSR set to: 1
  9037                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  9038  011C54  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  9039  011C58  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  9040  011C5C  0E30               	movlw	48
  9041  011C5E  6EDF               	movwf	indf2,c
  9042                           
  9043                           ; BSR set to: 1
  9044  011C60  0100               	movlb	0	; () banked
  9045  011C62  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  9046  011C64  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  9047                           
  9048                           ; BSR set to: 0
  9049                           ;doprnt.c: 1237: prec--;
  9050  011C66  0101               	movlb	1	; () banked
  9051  011C68  075F               	decf	sprintf@prec& (0+255),f,b
  9052  011C6A  A0D8               	btfss	status,0,c
  9053  011C6C  0760               	decf	(sprintf@prec+1)& (0+255),f,b
  9054  011C6E                     l9251:
  9055                           
  9056                           ; BSR set to: 1
  9057  011C6E  0101               	movlb	1	; () banked
  9058  011C70  515F               	movf	sprintf@prec& (0+255),w,b
  9059  011C72  0101               	movlb	1	; () banked
  9060  011C74  1160               	iorwf	(sprintf@prec+1)& (0+255),w,b
  9061  011C76  B4D8               	btfsc	status,2,c
  9062  011C78  D059               	goto	l9273
  9063  011C7A  D7EC               	goto	l9245
  9064  011C7C                     l9253:
  9065                           
  9066                           ; BSR set to: 1
  9067                           ;doprnt.c: 1246: }
  9068                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  9069  011C7C  0101               	movlb	1	; () banked
  9070  011C7E  515F               	movf	sprintf@prec& (0+255),w,b
  9071  011C80  0101               	movlb	1	; () banked
  9072  011C82  1160               	iorwf	(sprintf@prec+1)& (0+255),w,b
  9073  011C84  A4D8               	btfss	status,2,c
  9074  011C86  D00D               	goto	l9259
  9075                           
  9076                           ; BSR set to: 1
  9077  011C88  0101               	movlb	1	; () banked
  9078  011C8A  5155               	movf	sprintf@val& (0+255),w,b
  9079  011C8C  0101               	movlb	1	; () banked
  9080  011C8E  1156               	iorwf	(sprintf@val+1)& (0+255),w,b
  9081  011C90  0101               	movlb	1	; () banked
  9082  011C92  1157               	iorwf	(sprintf@val+2)& (0+255),w,b
  9083  011C94  0101               	movlb	1	; () banked
  9084  011C96  1158               	iorwf	(sprintf@val+3)& (0+255),w,b
  9085  011C98  A4D8               	btfss	status,2,c
  9086  011C9A  D003               	goto	l9259
  9087                           
  9088                           ; BSR set to: 1
  9089                           ;doprnt.c: 1291: prec++;
  9090  011C9C  0101               	movlb	1	; () banked
  9091  011C9E  4B5F               	infsnz	sprintf@prec& (0+255),f,b
  9092  011CA0  2B60               	incf	(sprintf@prec+1)& (0+255),f,b
  9093  011CA2                     l9259:
  9094                           
  9095                           ; BSR set to: 1
  9096                           ;doprnt.c: 1339: if(c < prec)
  9097  011CA2  0E80               	movlw	128
  9098  011CA4  0101               	movlb	1	; () banked
  9099  011CA6  BF65               	btfsc	sprintf@c& (0+255),7,b
  9100  011CA8  0E7F               	movlw	127
  9101  011CAA  0100               	movlb	0	; () banked
  9102  011CAC  6FCB               	movwf	??_sprintf& (0+255),b
  9103  011CAE  0101               	movlb	1	; () banked
  9104  011CB0  515F               	movf	sprintf@prec& (0+255),w,b
  9105  011CB2  0101               	movlb	1	; () banked
  9106  011CB4  5D65               	subwf	sprintf@c& (0+255),w,b
  9107  011CB6  0101               	movlb	1	; () banked
  9108  011CB8  5160               	movf	(sprintf@prec+1)& (0+255),w,b
  9109  011CBA  0A80               	xorlw	128
  9110  011CBC  0100               	movlb	0	; () banked
  9111  011CBE  59CB               	subwfb	??_sprintf& (0+255),w,b
  9112  011CC0  B0D8               	btfsc	status,0,c
  9113  011CC2  D003               	goto	l9263
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;doprnt.c: 1340: c = prec;
  9117  011CC4  C15F  F165         	movff	sprintf@prec,sprintf@c
  9118  011CC8  D018               	goto	l9267
  9119  011CCA                     l9263:
  9120                           
  9121                           ; BSR set to: 0
  9122                           ;doprnt.c: 1341: else if(prec < c)
  9123  011CCA  0101               	movlb	1	; () banked
  9124  011CCC  5160               	movf	(sprintf@prec+1)& (0+255),w,b
  9125  011CCE  0A80               	xorlw	128
  9126  011CD0  0100               	movlb	0	; () banked
  9127  011CD2  6FCB               	movwf	??_sprintf& (0+255),b
  9128  011CD4  0101               	movlb	1	; () banked
  9129  011CD6  5165               	movf	sprintf@c& (0+255),w,b
  9130  011CD8  0101               	movlb	1	; () banked
  9131  011CDA  5D5F               	subwf	sprintf@prec& (0+255),w,b
  9132  011CDC  0E80               	movlw	128
  9133  011CDE  0101               	movlb	1	; () banked
  9134  011CE0  BF65               	btfsc	sprintf@c& (0+255),7,b
  9135  011CE2  0E7F               	movlw	127
  9136  011CE4  0100               	movlb	0	; () banked
  9137  011CE6  59CB               	subwfb	??_sprintf& (0+255),w,b
  9138  011CE8  B0D8               	btfsc	status,0,c
  9139  011CEA  D007               	goto	l9267
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;doprnt.c: 1342: prec = c;
  9143  011CEC  0101               	movlb	1	; () banked
  9144  011CEE  5165               	movf	sprintf@c& (0+255),w,b
  9145  011CF0  0101               	movlb	1	; () banked
  9146  011CF2  6F5F               	movwf	sprintf@prec& (0+255),b
  9147  011CF4  6B60               	clrf	(sprintf@prec+1)& (0+255),b
  9148  011CF6  BF5F               	btfsc	sprintf@prec& (0+255),7,b
  9149  011CF8  0760               	decf	(sprintf@prec+1)& (0+255),f,b
  9150  011CFA                     l9267:
  9151                           
  9152                           ;doprnt.c: 1422: {
  9153                           ;doprnt.c: 1438: if(flag & 0x03)
  9154  011CFA  0E03               	movlw	3
  9155  011CFC  0101               	movlb	1	; () banked
  9156  011CFE  1553               	andwf	sprintf@flag& (0+255),w,b
  9157  011D00  0100               	movlb	0	; () banked
  9158  011D02  6FCB               	movwf	??_sprintf& (0+255),b
  9159  011D04  0E00               	movlw	0
  9160  011D06  0101               	movlb	1	; () banked
  9161  011D08  1554               	andwf	(sprintf@flag+1)& (0+255),w,b
  9162  011D0A  0100               	movlb	0	; () banked
  9163  011D0C  6FCC               	movwf	(??_sprintf+1)& (0+255),b
  9164  011D0E  0100               	movlb	0	; () banked
  9165  011D10  51CB               	movf	??_sprintf& (0+255),w,b
  9166  011D12  0100               	movlb	0	; () banked
  9167  011D14  11CC               	iorwf	(??_sprintf+1)& (0+255),w,b
  9168  011D16  B4D8               	btfsc	status,2,c
  9169  011D18  D009               	goto	l9273
  9170                           
  9171                           ; BSR set to: 0
  9172                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  9173  011D1A  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  9174  011D1E  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  9175  011D22  0E2D               	movlw	45
  9176  011D24  6EDF               	movwf	indf2,c
  9177  011D26                     l9271:
  9178                           
  9179                           ; BSR set to: 0
  9180  011D26  0100               	movlb	0	; () banked
  9181  011D28  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  9182  011D2A  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  9183  011D2C                     l9273:
  9184  011D2C  C0C5  FFF6         	movff	sprintf@f,tblptrl
  9185  011D30  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  9186  011D34  0100               	movlb	0	; () banked
  9187  011D36  4BC5               	infsnz	sprintf@f& (0+255),f,b
  9188  011D38  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  9189  011D3A                     	if	0	;tblptru may be non-zero
  9190  011D3A                     	endif
  9191  011D3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9192  011D3A  0E00               	movlw	low (__mediumconst shr (0+16))
  9193  011D3C  6EF8               	movwf	tblptru,c
  9194  011D3E                     	endif
  9195  011D3E  0008               	tblrd		*
  9196  011D40  CFF5 F165          	movff	tablat,sprintf@c
  9197  011D44  0101               	movlb	1	; () banked
  9198  011D46  5165               	movf	sprintf@c& (0+255),w,b
  9199  011D48  A4D8               	btfss	status,2,c
  9200  011D4A  EF6C  F08A         	goto	l9075
  9201  011D4E                     l9275:
  9202                           
  9203                           ; BSR set to: 1
  9204                           ;doprnt.c: 1538: *sp = 0;
  9205  011D4E  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  9206  011D52  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  9207  011D56  0E00               	movlw	0
  9208  011D58  6EDF               	movwf	indf2,c
  9209  011D5A  0012               	return	
  9210  011D5C                     __end_of_sprintf:
  9211                           	opt stack 0
  9212                           tblptru	equ	0xFF8
  9213                           tblptrh	equ	0xFF7
  9214                           tblptrl	equ	0xFF6
  9215                           tablat	equ	0xFF5
  9216                           prodh	equ	0xFF4
  9217                           prodl	equ	0xFF3
  9218                           intcon	equ	0xFF2
  9219                           postinc0	equ	0xFEE
  9220                           wreg	equ	0xFE8
  9221                           indf2	equ	0xFDF
  9222                           postinc2	equ	0xFDE
  9223                           fsr2h	equ	0xFDA
  9224                           fsr2l	equ	0xFD9
  9225                           status	equ	0xFD8
  9226                           
  9227 ;; *************** function _scale *****************
  9228 ;; Defined at:
  9229 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  9230 ;; Parameters:    Size  Location     Type
  9231 ;;  scl             1    wreg     char 
  9232 ;; Auto vars:     Size  Location     Type
  9233 ;;  scl             1   64[BANK0 ] char 
  9234 ;; Return value:  Size  Location     Type
  9235 ;;                  4   56[BANK0 ] char 
  9236 ;; Registers used:
  9237 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9238 ;; Tracked objects:
  9239 ;;		On entry : 0/0
  9240 ;;		On exit  : 0/0
  9241 ;;		Unchanged: 0/0
  9242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9243 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9244 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9246 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9247 ;;Total ram usage:        9 bytes
  9248 ;; Hardware stack levels used:    1
  9249 ;; Hardware stack levels required when called:    4
  9250 ;; This function calls:
  9251 ;;		___awdiv
  9252 ;;		___awmod
  9253 ;;		___flmul
  9254 ;; This function is called by:
  9255 ;;		_sprintf
  9256 ;; This function uses a non-reentrant model
  9257 ;;
  9258                           
  9259                           	psect	text11
  9260  012B78                     __ptext11:
  9261                           	opt stack 0
  9262  012B78                     _scale:
  9263                           	opt stack 24
  9264                           
  9265                           ; BSR set to: 1
  9266                           ;incstack = 0
  9267                           ;scale@scl stored from wreg
  9268  012B78  0100               	movlb	0	; () banked
  9269  012B7A  6FA0               	movwf	scale@scl& (0+255),b
  9270                           
  9271                           ;doprnt.c: 428: if(scl < 0) {
  9272  012B7C  0100               	movlb	0	; () banked
  9273  012B7E  AFA0               	btfss	scale@scl& (0+255),7,b
  9274  012B80  D145               	goto	l8683
  9275                           
  9276                           ; BSR set to: 0
  9277                           ;doprnt.c: 429: scl = -scl;
  9278  012B82  0100               	movlb	0	; () banked
  9279  012B84  6DA0               	negf	scale@scl& (0+255),b
  9280                           
  9281                           ;doprnt.c: 430: if(scl>=110)
  9282  012B86  0100               	movlb	0	; () banked
  9283  012B88  51A0               	movf	scale@scl& (0+255),w,b
  9284  012B8A  0A80               	xorlw	128
  9285  012B8C  0F12               	addlw	-238
  9286  012B8E  A0D8               	btfss	status,0,c
  9287  012B90  D0BB               	goto	l8673
  9288                           
  9289                           ; BSR set to: 0
  9290                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9291  012B92  0E00               	movlw	0
  9292  012B94  0100               	movlb	0	; () banked
  9293  012B96  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9294  012B98  0E0A               	movlw	10
  9295  012B9A  6F79               	movwf	___awdiv@divisor& (0+255),b
  9296  012B9C  0E00               	movlw	0
  9297  012B9E  0100               	movlb	0	; () banked
  9298  012BA0  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9299  012BA2  0E64               	movlw	100
  9300  012BA4  6F73               	movwf	___awmod@divisor& (0+255),b
  9301  012BA6  0100               	movlb	0	; () banked
  9302  012BA8  51A0               	movf	scale@scl& (0+255),w,b
  9303  012BAA  0100               	movlb	0	; () banked
  9304  012BAC  6F71               	movwf	___awmod@dividend& (0+255),b
  9305  012BAE  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9306  012BB0  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  9307  012BB2  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  9308  012BB4  EC9B  F0AF         	call	___awmod	;wreg free
  9309  012BB8  C071  F077         	movff	?___awmod,___awdiv@dividend
  9310  012BBC  C072  F078         	movff	?___awmod+1,___awdiv@dividend+1
  9311  012BC0  ECD0  F0AD         	call	___awdiv	;wreg free
  9312  012BC4  0100               	movlb	0	; () banked
  9313  012BC6  90D8               	bcf	status,0,c
  9314  012BC8  3777               	rlcf	?___awdiv& (0+255),f,b
  9315  012BCA  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9316  012BCC  0100               	movlb	0	; () banked
  9317  012BCE  90D8               	bcf	status,0,c
  9318  012BD0  3777               	rlcf	?___awdiv& (0+255),f,b
  9319  012BD2  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9320  012BD4  0E24               	movlw	36
  9321  012BD6  0100               	movlb	0	; () banked
  9322  012BD8  2777               	addwf	?___awdiv& (0+255),f,b
  9323  012BDA  0E00               	movlw	0
  9324  012BDC  0100               	movlb	0	; () banked
  9325  012BDE  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9326  012BE0  0ECD               	movlw	low __npowers_
  9327  012BE2  0100               	movlb	0	; () banked
  9328  012BE4  2577               	addwf	?___awdiv& (0+255),w,b
  9329  012BE6  6EF6               	movwf	tblptrl,c
  9330  012BE8  0EFC               	movlw	high __npowers_
  9331  012BEA  0100               	movlb	0	; () banked
  9332  012BEC  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9333  012BEE  6EF7               	movwf	tblptrh,c
  9334  012BF0                     	if	1	;There are 3 active tblptr bytes
  9335  012BF0  6AF8               	clrf	tblptru,c
  9336  012BF2  0E00               	movlw	low (__mediumconst shr (0+16))
  9337  012BF4  22F8               	addwfc	tblptru,f,c
  9338  012BF6                     	endif
  9339  012BF6  0009               	tblrd		*+
  9340  012BF8  CFF5 F083          	movff	tablat,___flmul@a
  9341  012BFC  0009               	tblrd		*+
  9342  012BFE  CFF5 F084          	movff	tablat,___flmul@a+1
  9343  012C02  0009               	tblrd		*+
  9344  012C04  CFF5 F085          	movff	tablat,___flmul@a+2
  9345  012C08  000A               	tblrd		*-
  9346  012C0A  CFF5 F086          	movff	tablat,___flmul@a+3
  9347  012C0E  0E00               	movlw	0
  9348  012C10  0100               	movlb	0	; () banked
  9349  012C12  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9350  012C14  0E64               	movlw	100
  9351  012C16  6F79               	movwf	___awdiv@divisor& (0+255),b
  9352  012C18  0100               	movlb	0	; () banked
  9353  012C1A  51A0               	movf	scale@scl& (0+255),w,b
  9354  012C1C  0100               	movlb	0	; () banked
  9355  012C1E  6F77               	movwf	___awdiv@dividend& (0+255),b
  9356  012C20  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  9357  012C22  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  9358  012C24  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9359  012C26  ECD0  F0AD         	call	___awdiv	;wreg free
  9360  012C2A  0100               	movlb	0	; () banked
  9361  012C2C  90D8               	bcf	status,0,c
  9362  012C2E  3777               	rlcf	?___awdiv& (0+255),f,b
  9363  012C30  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9364  012C32  0100               	movlb	0	; () banked
  9365  012C34  90D8               	bcf	status,0,c
  9366  012C36  3777               	rlcf	?___awdiv& (0+255),f,b
  9367  012C38  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9368  012C3A  0E48               	movlw	72
  9369  012C3C  0100               	movlb	0	; () banked
  9370  012C3E  2777               	addwf	?___awdiv& (0+255),f,b
  9371  012C40  0E00               	movlw	0
  9372  012C42  0100               	movlb	0	; () banked
  9373  012C44  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9374  012C46  0ECD               	movlw	low __npowers_
  9375  012C48  0100               	movlb	0	; () banked
  9376  012C4A  2577               	addwf	?___awdiv& (0+255),w,b
  9377  012C4C  6EF6               	movwf	tblptrl,c
  9378  012C4E  0EFC               	movlw	high __npowers_
  9379  012C50  0100               	movlb	0	; () banked
  9380  012C52  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9381  012C54  6EF7               	movwf	tblptrh,c
  9382  012C56                     	if	1	;There are 3 active tblptr bytes
  9383  012C56  6AF8               	clrf	tblptru,c
  9384  012C58  0E00               	movlw	low (__mediumconst shr (0+16))
  9385  012C5A  22F8               	addwfc	tblptru,f,c
  9386  012C5C                     	endif
  9387  012C5C  0009               	tblrd		*+
  9388  012C5E  CFF5 F07F          	movff	tablat,___flmul@b
  9389  012C62  0009               	tblrd		*+
  9390  012C64  CFF5 F080          	movff	tablat,___flmul@b+1
  9391  012C68  0009               	tblrd		*+
  9392  012C6A  CFF5 F081          	movff	tablat,___flmul@b+2
  9393  012C6E  000A               	tblrd		*-
  9394  012C70  CFF5 F082          	movff	tablat,___flmul@b+3
  9395  012C74  EC23  F09D         	call	___flmul	;wreg free
  9396  012C78  C07F  F09C         	movff	?___flmul,_scale$4193
  9397  012C7C  C080  F09D         	movff	?___flmul+1,_scale$4193+1
  9398  012C80  C081  F09E         	movff	?___flmul+2,_scale$4193+2
  9399  012C84  C082  F09F         	movff	?___flmul+3,_scale$4193+3
  9400                           
  9401                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9402  012C88  C09C  F07F         	movff	_scale$4193,___flmul@b
  9403  012C8C  C09D  F080         	movff	_scale$4193+1,___flmul@b+1
  9404  012C90  C09E  F081         	movff	_scale$4193+2,___flmul@b+2
  9405  012C94  C09F  F082         	movff	_scale$4193+3,___flmul@b+3
  9406  012C98  0E00               	movlw	0
  9407  012C9A  0100               	movlb	0	; () banked
  9408  012C9C  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9409  012C9E  0E0A               	movlw	10
  9410  012CA0  6F73               	movwf	___awmod@divisor& (0+255),b
  9411  012CA2  0100               	movlb	0	; () banked
  9412  012CA4  51A0               	movf	scale@scl& (0+255),w,b
  9413  012CA6  0100               	movlb	0	; () banked
  9414  012CA8  6F71               	movwf	___awmod@dividend& (0+255),b
  9415  012CAA  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9416  012CAC  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  9417  012CAE  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  9418  012CB0  EC9B  F0AF         	call	___awmod	;wreg free
  9419  012CB4  0100               	movlb	0	; () banked
  9420  012CB6  90D8               	bcf	status,0,c
  9421  012CB8  3771               	rlcf	?___awmod& (0+255),f,b
  9422  012CBA  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9423  012CBC  0100               	movlb	0	; () banked
  9424  012CBE  90D8               	bcf	status,0,c
  9425  012CC0  3771               	rlcf	?___awmod& (0+255),f,b
  9426  012CC2  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9427  012CC4  0ECD               	movlw	low __npowers_
  9428  012CC6  0100               	movlb	0	; () banked
  9429  012CC8  2571               	addwf	?___awmod& (0+255),w,b
  9430  012CCA  6EF6               	movwf	tblptrl,c
  9431  012CCC  0EFC               	movlw	high __npowers_
  9432  012CCE  0100               	movlb	0	; () banked
  9433  012CD0  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  9434  012CD2  6EF7               	movwf	tblptrh,c
  9435  012CD4                     	if	1	;There are 3 active tblptr bytes
  9436  012CD4  6AF8               	clrf	tblptru,c
  9437  012CD6  0E00               	movlw	low (__mediumconst shr (0+16))
  9438  012CD8  22F8               	addwfc	tblptru,f,c
  9439  012CDA                     	endif
  9440  012CDA  0009               	tblrd		*+
  9441  012CDC  CFF5 F083          	movff	tablat,___flmul@a
  9442  012CE0  0009               	tblrd		*+
  9443  012CE2  CFF5 F084          	movff	tablat,___flmul@a+1
  9444  012CE6  0009               	tblrd		*+
  9445  012CE8  CFF5 F085          	movff	tablat,___flmul@a+2
  9446  012CEC  000A               	tblrd		*-
  9447  012CEE  CFF5 F086          	movff	tablat,___flmul@a+3
  9448  012CF2  EC23  F09D         	call	___flmul	;wreg free
  9449  012CF6  C07F  F098         	movff	?___flmul,?_scale
  9450  012CFA  C080  F099         	movff	?___flmul+1,?_scale+1
  9451  012CFE  C081  F09A         	movff	?___flmul+2,?_scale+2
  9452  012D02  C082  F09B         	movff	?___flmul+3,?_scale+3
  9453  012D06  0012               	return	
  9454  012D08                     l8673:
  9455                           
  9456                           ;doprnt.c: 432: else if(scl > 10)
  9457  012D08  0100               	movlb	0	; () banked
  9458  012D0A  51A0               	movf	scale@scl& (0+255),w,b
  9459  012D0C  0A80               	xorlw	128
  9460  012D0E  0F75               	addlw	-139
  9461  012D10  A0D8               	btfss	status,0,c
  9462  012D12  D063               	goto	l8679
  9463                           
  9464                           ; BSR set to: 0
  9465                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  9466  012D14  0E00               	movlw	0
  9467  012D16  0100               	movlb	0	; () banked
  9468  012D18  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9469  012D1A  0E0A               	movlw	10
  9470  012D1C  6F79               	movwf	___awdiv@divisor& (0+255),b
  9471  012D1E  0100               	movlb	0	; () banked
  9472  012D20  51A0               	movf	scale@scl& (0+255),w,b
  9473  012D22  0100               	movlb	0	; () banked
  9474  012D24  6F77               	movwf	___awdiv@dividend& (0+255),b
  9475  012D26  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  9476  012D28  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  9477  012D2A  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9478  012D2C  ECD0  F0AD         	call	___awdiv	;wreg free
  9479  012D30  0100               	movlb	0	; () banked
  9480  012D32  90D8               	bcf	status,0,c
  9481  012D34  3777               	rlcf	?___awdiv& (0+255),f,b
  9482  012D36  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9483  012D38  0100               	movlb	0	; () banked
  9484  012D3A  90D8               	bcf	status,0,c
  9485  012D3C  3777               	rlcf	?___awdiv& (0+255),f,b
  9486  012D3E  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9487  012D40  0E24               	movlw	36
  9488  012D42  0100               	movlb	0	; () banked
  9489  012D44  2777               	addwf	?___awdiv& (0+255),f,b
  9490  012D46  0E00               	movlw	0
  9491  012D48  0100               	movlb	0	; () banked
  9492  012D4A  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9493  012D4C  0ECD               	movlw	low __npowers_
  9494  012D4E  0100               	movlb	0	; () banked
  9495  012D50  2577               	addwf	?___awdiv& (0+255),w,b
  9496  012D52  6EF6               	movwf	tblptrl,c
  9497  012D54  0EFC               	movlw	high __npowers_
  9498  012D56  0100               	movlb	0	; () banked
  9499  012D58  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9500  012D5A  6EF7               	movwf	tblptrh,c
  9501  012D5C                     	if	1	;There are 3 active tblptr bytes
  9502  012D5C  6AF8               	clrf	tblptru,c
  9503  012D5E  0E00               	movlw	low (__mediumconst shr (0+16))
  9504  012D60  22F8               	addwfc	tblptru,f,c
  9505  012D62                     	endif
  9506  012D62  0009               	tblrd		*+
  9507  012D64  CFF5 F07F          	movff	tablat,___flmul@b
  9508  012D68  0009               	tblrd		*+
  9509  012D6A  CFF5 F080          	movff	tablat,___flmul@b+1
  9510  012D6E  0009               	tblrd		*+
  9511  012D70  CFF5 F081          	movff	tablat,___flmul@b+2
  9512  012D74  000A               	tblrd		*-
  9513  012D76  CFF5 F082          	movff	tablat,___flmul@b+3
  9514  012D7A  0E00               	movlw	0
  9515  012D7C  0100               	movlb	0	; () banked
  9516  012D7E  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9517  012D80  0E0A               	movlw	10
  9518  012D82  6F73               	movwf	___awmod@divisor& (0+255),b
  9519  012D84  0100               	movlb	0	; () banked
  9520  012D86  51A0               	movf	scale@scl& (0+255),w,b
  9521  012D88  0100               	movlb	0	; () banked
  9522  012D8A  6F71               	movwf	___awmod@dividend& (0+255),b
  9523  012D8C  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9524  012D8E  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  9525  012D90  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  9526  012D92  EC9B  F0AF         	call	___awmod	;wreg free
  9527  012D96  0100               	movlb	0	; () banked
  9528  012D98  90D8               	bcf	status,0,c
  9529  012D9A  3771               	rlcf	?___awmod& (0+255),f,b
  9530  012D9C  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9531  012D9E  0100               	movlb	0	; () banked
  9532  012DA0  90D8               	bcf	status,0,c
  9533  012DA2  3771               	rlcf	?___awmod& (0+255),f,b
  9534  012DA4  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9535  012DA6  0ECD               	movlw	low __npowers_
  9536  012DA8  0100               	movlb	0	; () banked
  9537  012DAA  2571               	addwf	?___awmod& (0+255),w,b
  9538  012DAC  6EF6               	movwf	tblptrl,c
  9539  012DAE  0EFC               	movlw	high __npowers_
  9540  012DB0  0100               	movlb	0	; () banked
  9541  012DB2  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  9542  012DB4  6EF7               	movwf	tblptrh,c
  9543  012DB6                     	if	1	;There are 3 active tblptr bytes
  9544  012DB6  6AF8               	clrf	tblptru,c
  9545  012DB8  0E00               	movlw	low (__mediumconst shr (0+16))
  9546  012DBA  22F8               	addwfc	tblptru,f,c
  9547  012DBC                     	endif
  9548  012DBC  0009               	tblrd		*+
  9549  012DBE  CFF5 F083          	movff	tablat,___flmul@a
  9550  012DC2  0009               	tblrd		*+
  9551  012DC4  CFF5 F084          	movff	tablat,___flmul@a+1
  9552  012DC8  0009               	tblrd		*+
  9553  012DCA  CFF5 F085          	movff	tablat,___flmul@a+2
  9554  012DCE  000A               	tblrd		*-
  9555  012DD0  CFF5 F086          	movff	tablat,___flmul@a+3
  9556  012DD4  EC23  F09D         	call	___flmul	;wreg free
  9557  012DD8  D78E               	goto	L8
  9558  012DDA                     l8679:
  9559                           
  9560                           ;doprnt.c: 434: return _npowers_[scl];
  9561  012DDA  0100               	movlb	0	; () banked
  9562  012DDC  51A0               	movf	scale@scl& (0+255),w,b
  9563  012DDE  0D04               	mullw	4
  9564  012DE0  0ECD               	movlw	low __npowers_
  9565  012DE2  24F3               	addwf	prodl,w,c
  9566  012DE4  6EF6               	movwf	tblptrl,c
  9567  012DE6  0EFC               	movlw	high __npowers_
  9568  012DE8  20F4               	addwfc	prodh,w,c
  9569  012DEA  6EF7               	movwf	tblptrh,c
  9570  012DEC                     	if	1	;There are 3 active tblptr bytes
  9571  012DEC  6AF8               	clrf	tblptru,c
  9572  012DEE  0E00               	movlw	low (__mediumconst shr (0+16))
  9573  012DF0  22F8               	addwfc	tblptru,f,c
  9574  012DF2                     	endif
  9575  012DF2  0009               	tblrd		*+
  9576  012DF4  CFF5 F098          	movff	tablat,?_scale
  9577  012DF8  0009               	tblrd		*+
  9578  012DFA  CFF5 F099          	movff	tablat,?_scale+1
  9579  012DFE  0009               	tblrd		*+
  9580  012E00  CFF5 F09A          	movff	tablat,?_scale+2
  9581  012E04  000A               	tblrd		*-
  9582  012E06  CFF5 F09B          	movff	tablat,?_scale+3
  9583                           
  9584                           ; BSR set to: 0
  9585  012E0A  0012               	return	
  9586  012E0C                     l8683:
  9587                           
  9588                           ; BSR set to: 0
  9589                           ;doprnt.c: 435: }
  9590                           ;doprnt.c: 436: if(scl>=110)
  9591  012E0C  0100               	movlb	0	; () banked
  9592  012E0E  51A0               	movf	scale@scl& (0+255),w,b
  9593  012E10  0A80               	xorlw	128
  9594  012E12  0F12               	addlw	-238
  9595  012E14  A0D8               	btfss	status,0,c
  9596  012E16  D0BB               	goto	l8691
  9597                           
  9598                           ; BSR set to: 0
  9599                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9600  012E18  0E00               	movlw	0
  9601  012E1A  0100               	movlb	0	; () banked
  9602  012E1C  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9603  012E1E  0E0A               	movlw	10
  9604  012E20  6F79               	movwf	___awdiv@divisor& (0+255),b
  9605  012E22  0E00               	movlw	0
  9606  012E24  0100               	movlb	0	; () banked
  9607  012E26  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9608  012E28  0E64               	movlw	100
  9609  012E2A  6F73               	movwf	___awmod@divisor& (0+255),b
  9610  012E2C  0100               	movlb	0	; () banked
  9611  012E2E  51A0               	movf	scale@scl& (0+255),w,b
  9612  012E30  0100               	movlb	0	; () banked
  9613  012E32  6F71               	movwf	___awmod@dividend& (0+255),b
  9614  012E34  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9615  012E36  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  9616  012E38  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  9617  012E3A  EC9B  F0AF         	call	___awmod	;wreg free
  9618  012E3E  C071  F077         	movff	?___awmod,___awdiv@dividend
  9619  012E42  C072  F078         	movff	?___awmod+1,___awdiv@dividend+1
  9620  012E46  ECD0  F0AD         	call	___awdiv	;wreg free
  9621  012E4A  0100               	movlb	0	; () banked
  9622  012E4C  90D8               	bcf	status,0,c
  9623  012E4E  3777               	rlcf	?___awdiv& (0+255),f,b
  9624  012E50  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9625  012E52  0100               	movlb	0	; () banked
  9626  012E54  90D8               	bcf	status,0,c
  9627  012E56  3777               	rlcf	?___awdiv& (0+255),f,b
  9628  012E58  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9629  012E5A  0E24               	movlw	36
  9630  012E5C  0100               	movlb	0	; () banked
  9631  012E5E  2777               	addwf	?___awdiv& (0+255),f,b
  9632  012E60  0E00               	movlw	0
  9633  012E62  0100               	movlb	0	; () banked
  9634  012E64  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9635  012E66  0E01               	movlw	low __powers_
  9636  012E68  0100               	movlb	0	; () banked
  9637  012E6A  2577               	addwf	?___awdiv& (0+255),w,b
  9638  012E6C  6EF6               	movwf	tblptrl,c
  9639  012E6E  0EFD               	movlw	high __powers_
  9640  012E70  0100               	movlb	0	; () banked
  9641  012E72  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9642  012E74  6EF7               	movwf	tblptrh,c
  9643  012E76                     	if	1	;There are 3 active tblptr bytes
  9644  012E76  6AF8               	clrf	tblptru,c
  9645  012E78  0E00               	movlw	low (__mediumconst shr (0+16))
  9646  012E7A  22F8               	addwfc	tblptru,f,c
  9647  012E7C                     	endif
  9648  012E7C  0009               	tblrd		*+
  9649  012E7E  CFF5 F083          	movff	tablat,___flmul@a
  9650  012E82  0009               	tblrd		*+
  9651  012E84  CFF5 F084          	movff	tablat,___flmul@a+1
  9652  012E88  0009               	tblrd		*+
  9653  012E8A  CFF5 F085          	movff	tablat,___flmul@a+2
  9654  012E8E  000A               	tblrd		*-
  9655  012E90  CFF5 F086          	movff	tablat,___flmul@a+3
  9656  012E94  0E00               	movlw	0
  9657  012E96  0100               	movlb	0	; () banked
  9658  012E98  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9659  012E9A  0E64               	movlw	100
  9660  012E9C  6F79               	movwf	___awdiv@divisor& (0+255),b
  9661  012E9E  0100               	movlb	0	; () banked
  9662  012EA0  51A0               	movf	scale@scl& (0+255),w,b
  9663  012EA2  0100               	movlb	0	; () banked
  9664  012EA4  6F77               	movwf	___awdiv@dividend& (0+255),b
  9665  012EA6  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  9666  012EA8  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  9667  012EAA  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9668  012EAC  ECD0  F0AD         	call	___awdiv	;wreg free
  9669  012EB0  0100               	movlb	0	; () banked
  9670  012EB2  90D8               	bcf	status,0,c
  9671  012EB4  3777               	rlcf	?___awdiv& (0+255),f,b
  9672  012EB6  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9673  012EB8  0100               	movlb	0	; () banked
  9674  012EBA  90D8               	bcf	status,0,c
  9675  012EBC  3777               	rlcf	?___awdiv& (0+255),f,b
  9676  012EBE  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9677  012EC0  0E48               	movlw	72
  9678  012EC2  0100               	movlb	0	; () banked
  9679  012EC4  2777               	addwf	?___awdiv& (0+255),f,b
  9680  012EC6  0E00               	movlw	0
  9681  012EC8  0100               	movlb	0	; () banked
  9682  012ECA  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9683  012ECC  0E01               	movlw	low __powers_
  9684  012ECE  0100               	movlb	0	; () banked
  9685  012ED0  2577               	addwf	?___awdiv& (0+255),w,b
  9686  012ED2  6EF6               	movwf	tblptrl,c
  9687  012ED4  0EFD               	movlw	high __powers_
  9688  012ED6  0100               	movlb	0	; () banked
  9689  012ED8  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9690  012EDA  6EF7               	movwf	tblptrh,c
  9691  012EDC                     	if	1	;There are 3 active tblptr bytes
  9692  012EDC  6AF8               	clrf	tblptru,c
  9693  012EDE  0E00               	movlw	low (__mediumconst shr (0+16))
  9694  012EE0  22F8               	addwfc	tblptru,f,c
  9695  012EE2                     	endif
  9696  012EE2  0009               	tblrd		*+
  9697  012EE4  CFF5 F07F          	movff	tablat,___flmul@b
  9698  012EE8  0009               	tblrd		*+
  9699  012EEA  CFF5 F080          	movff	tablat,___flmul@b+1
  9700  012EEE  0009               	tblrd		*+
  9701  012EF0  CFF5 F081          	movff	tablat,___flmul@b+2
  9702  012EF4  000A               	tblrd		*-
  9703  012EF6  CFF5 F082          	movff	tablat,___flmul@b+3
  9704  012EFA  EC23  F09D         	call	___flmul	;wreg free
  9705  012EFE  C07F  F09C         	movff	?___flmul,_scale$4193
  9706  012F02  C080  F09D         	movff	?___flmul+1,_scale$4193+1
  9707  012F06  C081  F09E         	movff	?___flmul+2,_scale$4193+2
  9708  012F0A  C082  F09F         	movff	?___flmul+3,_scale$4193+3
  9709                           
  9710                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9711  012F0E  C09C  F07F         	movff	_scale$4193,___flmul@b
  9712  012F12  C09D  F080         	movff	_scale$4193+1,___flmul@b+1
  9713  012F16  C09E  F081         	movff	_scale$4193+2,___flmul@b+2
  9714  012F1A  C09F  F082         	movff	_scale$4193+3,___flmul@b+3
  9715  012F1E  0E00               	movlw	0
  9716  012F20  0100               	movlb	0	; () banked
  9717  012F22  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9718  012F24  0E0A               	movlw	10
  9719  012F26  6F73               	movwf	___awmod@divisor& (0+255),b
  9720  012F28  0100               	movlb	0	; () banked
  9721  012F2A  51A0               	movf	scale@scl& (0+255),w,b
  9722  012F2C  0100               	movlb	0	; () banked
  9723  012F2E  6F71               	movwf	___awmod@dividend& (0+255),b
  9724  012F30  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9725  012F32  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  9726  012F34  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  9727  012F36  EC9B  F0AF         	call	___awmod	;wreg free
  9728  012F3A  0100               	movlb	0	; () banked
  9729  012F3C  90D8               	bcf	status,0,c
  9730  012F3E  3771               	rlcf	?___awmod& (0+255),f,b
  9731  012F40  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9732  012F42  0100               	movlb	0	; () banked
  9733  012F44  90D8               	bcf	status,0,c
  9734  012F46  3771               	rlcf	?___awmod& (0+255),f,b
  9735  012F48  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9736  012F4A  0E01               	movlw	low __powers_
  9737  012F4C  0100               	movlb	0	; () banked
  9738  012F4E  2571               	addwf	?___awmod& (0+255),w,b
  9739  012F50  6EF6               	movwf	tblptrl,c
  9740  012F52  0EFD               	movlw	high __powers_
  9741  012F54  0100               	movlb	0	; () banked
  9742  012F56  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  9743  012F58  6EF7               	movwf	tblptrh,c
  9744  012F5A                     	if	1	;There are 3 active tblptr bytes
  9745  012F5A  6AF8               	clrf	tblptru,c
  9746  012F5C  0E00               	movlw	low (__mediumconst shr (0+16))
  9747  012F5E  22F8               	addwfc	tblptru,f,c
  9748  012F60                     	endif
  9749  012F60  0009               	tblrd		*+
  9750  012F62  CFF5 F083          	movff	tablat,___flmul@a
  9751  012F66  0009               	tblrd		*+
  9752  012F68  CFF5 F084          	movff	tablat,___flmul@a+1
  9753  012F6C  0009               	tblrd		*+
  9754  012F6E  CFF5 F085          	movff	tablat,___flmul@a+2
  9755  012F72  000A               	tblrd		*-
  9756  012F74  CFF5 F086          	movff	tablat,___flmul@a+3
  9757  012F78  EC23  F09D         	call	___flmul	;wreg free
  9758  012F7C  C07F  F098         	movff	?___flmul,?_scale
  9759  012F80  C080  F099         	movff	?___flmul+1,?_scale+1
  9760  012F84  C081  F09A         	movff	?___flmul+2,?_scale+2
  9761  012F88  C082  F09B         	movff	?___flmul+3,?_scale+3
  9762  012F8C  0012               	return	
  9763  012F8E                     l8691:
  9764                           
  9765                           ;doprnt.c: 438: else if(scl > 10)
  9766  012F8E  0100               	movlb	0	; () banked
  9767  012F90  51A0               	movf	scale@scl& (0+255),w,b
  9768  012F92  0A80               	xorlw	128
  9769  012F94  0F75               	addlw	-139
  9770  012F96  A0D8               	btfss	status,0,c
  9771  012F98  D063               	goto	l8697
  9772                           
  9773                           ; BSR set to: 0
  9774                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  9775  012F9A  0E00               	movlw	0
  9776  012F9C  0100               	movlb	0	; () banked
  9777  012F9E  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  9778  012FA0  0E0A               	movlw	10
  9779  012FA2  6F79               	movwf	___awdiv@divisor& (0+255),b
  9780  012FA4  0100               	movlb	0	; () banked
  9781  012FA6  51A0               	movf	scale@scl& (0+255),w,b
  9782  012FA8  0100               	movlb	0	; () banked
  9783  012FAA  6F77               	movwf	___awdiv@dividend& (0+255),b
  9784  012FAC  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  9785  012FAE  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  9786  012FB0  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9787  012FB2  ECD0  F0AD         	call	___awdiv	;wreg free
  9788  012FB6  0100               	movlb	0	; () banked
  9789  012FB8  90D8               	bcf	status,0,c
  9790  012FBA  3777               	rlcf	?___awdiv& (0+255),f,b
  9791  012FBC  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9792  012FBE  0100               	movlb	0	; () banked
  9793  012FC0  90D8               	bcf	status,0,c
  9794  012FC2  3777               	rlcf	?___awdiv& (0+255),f,b
  9795  012FC4  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  9796  012FC6  0E24               	movlw	36
  9797  012FC8  0100               	movlb	0	; () banked
  9798  012FCA  2777               	addwf	?___awdiv& (0+255),f,b
  9799  012FCC  0E00               	movlw	0
  9800  012FCE  0100               	movlb	0	; () banked
  9801  012FD0  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  9802  012FD2  0E01               	movlw	low __powers_
  9803  012FD4  0100               	movlb	0	; () banked
  9804  012FD6  2577               	addwf	?___awdiv& (0+255),w,b
  9805  012FD8  6EF6               	movwf	tblptrl,c
  9806  012FDA  0EFD               	movlw	high __powers_
  9807  012FDC  0100               	movlb	0	; () banked
  9808  012FDE  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9809  012FE0  6EF7               	movwf	tblptrh,c
  9810  012FE2                     	if	1	;There are 3 active tblptr bytes
  9811  012FE2  6AF8               	clrf	tblptru,c
  9812  012FE4  0E00               	movlw	low (__mediumconst shr (0+16))
  9813  012FE6  22F8               	addwfc	tblptru,f,c
  9814  012FE8                     	endif
  9815  012FE8  0009               	tblrd		*+
  9816  012FEA  CFF5 F07F          	movff	tablat,___flmul@b
  9817  012FEE  0009               	tblrd		*+
  9818  012FF0  CFF5 F080          	movff	tablat,___flmul@b+1
  9819  012FF4  0009               	tblrd		*+
  9820  012FF6  CFF5 F081          	movff	tablat,___flmul@b+2
  9821  012FFA  000A               	tblrd		*-
  9822  012FFC  CFF5 F082          	movff	tablat,___flmul@b+3
  9823  013000  0E00               	movlw	0
  9824  013002  0100               	movlb	0	; () banked
  9825  013004  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  9826  013006  0E0A               	movlw	10
  9827  013008  6F73               	movwf	___awmod@divisor& (0+255),b
  9828  01300A  0100               	movlb	0	; () banked
  9829  01300C  51A0               	movf	scale@scl& (0+255),w,b
  9830  01300E  0100               	movlb	0	; () banked
  9831  013010  6F71               	movwf	___awmod@dividend& (0+255),b
  9832  013012  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  9833  013014  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  9834  013016  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  9835  013018  EC9B  F0AF         	call	___awmod	;wreg free
  9836  01301C  0100               	movlb	0	; () banked
  9837  01301E  90D8               	bcf	status,0,c
  9838  013020  3771               	rlcf	?___awmod& (0+255),f,b
  9839  013022  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9840  013024  0100               	movlb	0	; () banked
  9841  013026  90D8               	bcf	status,0,c
  9842  013028  3771               	rlcf	?___awmod& (0+255),f,b
  9843  01302A  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  9844  01302C  0E01               	movlw	low __powers_
  9845  01302E  0100               	movlb	0	; () banked
  9846  013030  2571               	addwf	?___awmod& (0+255),w,b
  9847  013032  6EF6               	movwf	tblptrl,c
  9848  013034  0EFD               	movlw	high __powers_
  9849  013036  0100               	movlb	0	; () banked
  9850  013038  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  9851  01303A  6EF7               	movwf	tblptrh,c
  9852  01303C                     	if	1	;There are 3 active tblptr bytes
  9853  01303C  6AF8               	clrf	tblptru,c
  9854  01303E  0E00               	movlw	low (__mediumconst shr (0+16))
  9855  013040  22F8               	addwfc	tblptru,f,c
  9856  013042                     	endif
  9857  013042  0009               	tblrd		*+
  9858  013044  CFF5 F083          	movff	tablat,___flmul@a
  9859  013048  0009               	tblrd		*+
  9860  01304A  CFF5 F084          	movff	tablat,___flmul@a+1
  9861  01304E  0009               	tblrd		*+
  9862  013050  CFF5 F085          	movff	tablat,___flmul@a+2
  9863  013054  000A               	tblrd		*-
  9864  013056  CFF5 F086          	movff	tablat,___flmul@a+3
  9865  01305A  EC23  F09D         	call	___flmul	;wreg free
  9866  01305E  D78E               	goto	L9
  9867  013060                     l8697:
  9868                           
  9869                           ;doprnt.c: 440: return _powers_[scl];
  9870  013060  0100               	movlb	0	; () banked
  9871  013062  51A0               	movf	scale@scl& (0+255),w,b
  9872  013064  0D04               	mullw	4
  9873  013066  0E01               	movlw	low __powers_
  9874  013068  24F3               	addwf	prodl,w,c
  9875  01306A  6EF6               	movwf	tblptrl,c
  9876  01306C  0EFD               	movlw	high __powers_
  9877  01306E  20F4               	addwfc	prodh,w,c
  9878  013070  6EF7               	movwf	tblptrh,c
  9879  013072                     	if	1	;There are 3 active tblptr bytes
  9880  013072  6AF8               	clrf	tblptru,c
  9881  013074  0E00               	movlw	low (__mediumconst shr (0+16))
  9882  013076  22F8               	addwfc	tblptru,f,c
  9883  013078                     	endif
  9884  013078  0009               	tblrd		*+
  9885  01307A  CFF5 F098          	movff	tablat,?_scale
  9886  01307E  0009               	tblrd		*+
  9887  013080  CFF5 F099          	movff	tablat,?_scale+1
  9888  013084  0009               	tblrd		*+
  9889  013086  CFF5 F09A          	movff	tablat,?_scale+2
  9890  01308A  000A               	tblrd		*-
  9891  01308C  CFF5 F09B          	movff	tablat,?_scale+3
  9892  013090  0012               	return	
  9893  013092                     __end_of_scale:
  9894                           	opt stack 0
  9895                           tblptru	equ	0xFF8
  9896                           tblptrh	equ	0xFF7
  9897                           tblptrl	equ	0xFF6
  9898                           tablat	equ	0xFF5
  9899                           prodh	equ	0xFF4
  9900                           prodl	equ	0xFF3
  9901                           intcon	equ	0xFF2
  9902                           postinc0	equ	0xFEE
  9903                           wreg	equ	0xFE8
  9904                           indf2	equ	0xFDF
  9905                           postinc2	equ	0xFDE
  9906                           fsr2h	equ	0xFDA
  9907                           fsr2l	equ	0xFD9
  9908                           status	equ	0xFD8
  9909                           
  9910 ;; *************** function _isdigit *****************
  9911 ;; Defined at:
  9912 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
  9913 ;; Parameters:    Size  Location     Type
  9914 ;;  c               1    wreg     unsigned char 
  9915 ;; Auto vars:     Size  Location     Type
  9916 ;;  c               1   19[BANK0 ] unsigned char 
  9917 ;; Return value:  Size  Location     Type
  9918 ;;		None               void
  9919 ;; Registers used:
  9920 ;;		wreg, status,2, status,0
  9921 ;; Tracked objects:
  9922 ;;		On entry : 0/0
  9923 ;;		On exit  : 0/0
  9924 ;;		Unchanged: 0/0
  9925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9927 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9928 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9929 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9930 ;;Total ram usage:        3 bytes
  9931 ;; Hardware stack levels used:    1
  9932 ;; Hardware stack levels required when called:    3
  9933 ;; This function calls:
  9934 ;;		Nothing
  9935 ;; This function is called by:
  9936 ;;		_sprintf
  9937 ;; This function uses a non-reentrant model
  9938 ;;
  9939                           
  9940                           	psect	text12
  9941  016758                     __ptext12:
  9942                           	opt stack 0
  9943  016758                     _isdigit:
  9944                           	opt stack 25
  9945                           
  9946                           ;incstack = 0
  9947                           ;isdigit@c stored from wreg
  9948  016758  0100               	movlb	0	; () banked
  9949  01675A  6F73               	movwf	isdigit@c& (0+255),b
  9950  01675C  0E00               	movlw	0
  9951  01675E  0100               	movlb	0	; () banked
  9952  016760  6F72               	movwf	_isdigit$3774& (0+255),b
  9953                           
  9954                           ; BSR set to: 0
  9955  016762  0E3A               	movlw	58
  9956  016764  0100               	movlb	0	; () banked
  9957  016766  6173               	cpfslt	isdigit@c& (0+255),b
  9958  016768  D007               	goto	l8709
  9959                           
  9960                           ; BSR set to: 0
  9961  01676A  0E2F               	movlw	47
  9962  01676C  0100               	movlb	0	; () banked
  9963  01676E  6573               	cpfsgt	isdigit@c& (0+255),b
  9964  016770  D003               	goto	l8709
  9965                           
  9966                           ; BSR set to: 0
  9967  016772  0E01               	movlw	1
  9968  016774  0100               	movlb	0	; () banked
  9969  016776  6F72               	movwf	_isdigit$3774& (0+255),b
  9970  016778                     l8709:
  9971                           
  9972                           ; BSR set to: 0
  9973  016778  C072  F071         	movff	_isdigit$3774,??_isdigit
  9974  01677C  0100               	movlb	0	; () banked
  9975  01677E  3171               	rrcf	??_isdigit& (0+255),w,b
  9976  016780  0012               	return	
  9977  016782                     __end_of_isdigit:
  9978                           	opt stack 0
  9979                           tblptru	equ	0xFF8
  9980                           tblptrh	equ	0xFF7
  9981                           tblptrl	equ	0xFF6
  9982                           tablat	equ	0xFF5
  9983                           prodh	equ	0xFF4
  9984                           prodl	equ	0xFF3
  9985                           intcon	equ	0xFF2
  9986                           postinc0	equ	0xFEE
  9987                           wreg	equ	0xFE8
  9988                           indf2	equ	0xFDF
  9989                           postinc2	equ	0xFDE
  9990                           fsr2h	equ	0xFDA
  9991                           fsr2l	equ	0xFD9
  9992                           status	equ	0xFD8
  9993                           
  9994 ;; *************** function _fround *****************
  9995 ;; Defined at:
  9996 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;  prec            1    wreg     unsigned char 
  9999 ;; Auto vars:     Size  Location     Type
 10000 ;;  prec            1   68[BANK0 ] unsigned char 
 10001 ;; Return value:  Size  Location     Type
 10002 ;;                  4   56[BANK0 ] unsigned char 
 10003 ;; Registers used:
 10004 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10005 ;; Tracked objects:
 10006 ;;		On entry : 0/0
 10007 ;;		On exit  : 0/0
 10008 ;;		Unchanged: 0/0
 10009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10010 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10011 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10013 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10014 ;;Total ram usage:       13 bytes
 10015 ;; Hardware stack levels used:    1
 10016 ;; Hardware stack levels required when called:    4
 10017 ;; This function calls:
 10018 ;;		___awdiv
 10019 ;;		___awmod
 10020 ;;		___flmul
 10021 ;; This function is called by:
 10022 ;;		_sprintf
 10023 ;; This function uses a non-reentrant model
 10024 ;;
 10025                           
 10026                           	psect	text13
 10027  01464A                     __ptext13:
 10028                           	opt stack 0
 10029  01464A                     _fround:
 10030                           	opt stack 24
 10031                           
 10032                           ; BSR set to: 0
 10033                           ;incstack = 0
 10034                           ;fround@prec stored from wreg
 10035  01464A  0100               	movlb	0	; () banked
 10036  01464C  6FA4               	movwf	fround@prec& (0+255),b
 10037                           
 10038                           ;doprnt.c: 413: if(prec>=110)
 10039  01464E  0E6D               	movlw	109
 10040  014650  0100               	movlb	0	; () banked
 10041  014652  65A4               	cpfsgt	fround@prec& (0+255),b
 10042  014654  D0CD               	goto	l8651
 10043                           
 10044                           ; BSR set to: 0
 10045                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10046  014656  0E00               	movlw	0
 10047  014658  0100               	movlb	0	; () banked
 10048  01465A  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
 10049  01465C  0E0A               	movlw	10
 10050  01465E  6F79               	movwf	___awdiv@divisor& (0+255),b
 10051  014660  0E00               	movlw	0
 10052  014662  0100               	movlb	0	; () banked
 10053  014664  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
 10054  014666  0E64               	movlw	100
 10055  014668  6F73               	movwf	___awmod@divisor& (0+255),b
 10056  01466A  C0A4  F071         	movff	fround@prec,___awmod@dividend
 10057  01466E  0100               	movlb	0	; () banked
 10058  014670  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
 10059  014672  EC9B  F0AF         	call	___awmod	;wreg free
 10060  014676  C071  F077         	movff	?___awmod,___awdiv@dividend
 10061  01467A  C072  F078         	movff	?___awmod+1,___awdiv@dividend+1
 10062  01467E  ECD0  F0AD         	call	___awdiv	;wreg free
 10063  014682  0100               	movlb	0	; () banked
 10064  014684  90D8               	bcf	status,0,c
 10065  014686  3777               	rlcf	?___awdiv& (0+255),f,b
 10066  014688  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
 10067  01468A  0100               	movlb	0	; () banked
 10068  01468C  90D8               	bcf	status,0,c
 10069  01468E  3777               	rlcf	?___awdiv& (0+255),f,b
 10070  014690  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
 10071  014692  0E24               	movlw	36
 10072  014694  0100               	movlb	0	; () banked
 10073  014696  2777               	addwf	?___awdiv& (0+255),f,b
 10074  014698  0E00               	movlw	0
 10075  01469A  0100               	movlb	0	; () banked
 10076  01469C  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
 10077  01469E  0ECD               	movlw	low __npowers_
 10078  0146A0  0100               	movlb	0	; () banked
 10079  0146A2  2577               	addwf	?___awdiv& (0+255),w,b
 10080  0146A4  6EF6               	movwf	tblptrl,c
 10081  0146A6  0EFC               	movlw	high __npowers_
 10082  0146A8  0100               	movlb	0	; () banked
 10083  0146AA  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
 10084  0146AC  6EF7               	movwf	tblptrh,c
 10085  0146AE                     	if	1	;There are 3 active tblptr bytes
 10086  0146AE  6AF8               	clrf	tblptru,c
 10087  0146B0  0E00               	movlw	low (__mediumconst shr (0+16))
 10088  0146B2  22F8               	addwfc	tblptru,f,c
 10089  0146B4                     	endif
 10090  0146B4  0009               	tblrd		*+
 10091  0146B6  CFF5 F083          	movff	tablat,___flmul@a
 10092  0146BA  0009               	tblrd		*+
 10093  0146BC  CFF5 F084          	movff	tablat,___flmul@a+1
 10094  0146C0  0009               	tblrd		*+
 10095  0146C2  CFF5 F085          	movff	tablat,___flmul@a+2
 10096  0146C6  000A               	tblrd		*-
 10097  0146C8  CFF5 F086          	movff	tablat,___flmul@a+3
 10098  0146CC  0E00               	movlw	0
 10099  0146CE  0100               	movlb	0	; () banked
 10100  0146D0  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
 10101  0146D2  0E64               	movlw	100
 10102  0146D4  6F79               	movwf	___awdiv@divisor& (0+255),b
 10103  0146D6  C0A4  F077         	movff	fround@prec,___awdiv@dividend
 10104  0146DA  0100               	movlb	0	; () banked
 10105  0146DC  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
 10106  0146DE  ECD0  F0AD         	call	___awdiv	;wreg free
 10107  0146E2  0100               	movlb	0	; () banked
 10108  0146E4  90D8               	bcf	status,0,c
 10109  0146E6  3777               	rlcf	?___awdiv& (0+255),f,b
 10110  0146E8  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
 10111  0146EA  0100               	movlb	0	; () banked
 10112  0146EC  90D8               	bcf	status,0,c
 10113  0146EE  3777               	rlcf	?___awdiv& (0+255),f,b
 10114  0146F0  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
 10115  0146F2  0E48               	movlw	72
 10116  0146F4  0100               	movlb	0	; () banked
 10117  0146F6  2777               	addwf	?___awdiv& (0+255),f,b
 10118  0146F8  0E00               	movlw	0
 10119  0146FA  0100               	movlb	0	; () banked
 10120  0146FC  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
 10121  0146FE  0ECD               	movlw	low __npowers_
 10122  014700  0100               	movlb	0	; () banked
 10123  014702  2577               	addwf	?___awdiv& (0+255),w,b
 10124  014704  6EF6               	movwf	tblptrl,c
 10125  014706  0EFC               	movlw	high __npowers_
 10126  014708  0100               	movlb	0	; () banked
 10127  01470A  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
 10128  01470C  6EF7               	movwf	tblptrh,c
 10129  01470E                     	if	1	;There are 3 active tblptr bytes
 10130  01470E  6AF8               	clrf	tblptru,c
 10131  014710  0E00               	movlw	low (__mediumconst shr (0+16))
 10132  014712  22F8               	addwfc	tblptru,f,c
 10133  014714                     	endif
 10134  014714  0009               	tblrd		*+
 10135  014716  CFF5 F07F          	movff	tablat,___flmul@b
 10136  01471A  0009               	tblrd		*+
 10137  01471C  CFF5 F080          	movff	tablat,___flmul@b+1
 10138  014720  0009               	tblrd		*+
 10139  014722  CFF5 F081          	movff	tablat,___flmul@b+2
 10140  014726  000A               	tblrd		*-
 10141  014728  CFF5 F082          	movff	tablat,___flmul@b+3
 10142  01472C  EC23  F09D         	call	___flmul	;wreg free
 10143  014730  C07F  F0A0         	movff	?___flmul,_fround$4191
 10144  014734  C080  F0A1         	movff	?___flmul+1,_fround$4191+1
 10145  014738  C081  F0A2         	movff	?___flmul+2,_fround$4191+2
 10146  01473C  C082  F0A3         	movff	?___flmul+3,_fround$4191+3
 10147                           
 10148                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10149  014740  0E00               	movlw	0
 10150  014742  0100               	movlb	0	; () banked
 10151  014744  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
 10152  014746  0E0A               	movlw	10
 10153  014748  6F73               	movwf	___awmod@divisor& (0+255),b
 10154  01474A  C0A4  F071         	movff	fround@prec,___awmod@dividend
 10155  01474E  0100               	movlb	0	; () banked
 10156  014750  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
 10157  014752  EC9B  F0AF         	call	___awmod	;wreg free
 10158  014756  0100               	movlb	0	; () banked
 10159  014758  90D8               	bcf	status,0,c
 10160  01475A  3771               	rlcf	?___awmod& (0+255),f,b
 10161  01475C  3772               	rlcf	(?___awmod+1)& (0+255),f,b
 10162  01475E  0100               	movlb	0	; () banked
 10163  014760  90D8               	bcf	status,0,c
 10164  014762  3771               	rlcf	?___awmod& (0+255),f,b
 10165  014764  3772               	rlcf	(?___awmod+1)& (0+255),f,b
 10166  014766  0ECD               	movlw	low __npowers_
 10167  014768  0100               	movlb	0	; () banked
 10168  01476A  2571               	addwf	?___awmod& (0+255),w,b
 10169  01476C  6EF6               	movwf	tblptrl,c
 10170  01476E  0EFC               	movlw	high __npowers_
 10171  014770  0100               	movlb	0	; () banked
 10172  014772  2172               	addwfc	(?___awmod+1)& (0+255),w,b
 10173  014774  6EF7               	movwf	tblptrh,c
 10174  014776                     	if	1	;There are 3 active tblptr bytes
 10175  014776  6AF8               	clrf	tblptru,c
 10176  014778  0E00               	movlw	low (__mediumconst shr (0+16))
 10177  01477A  22F8               	addwfc	tblptru,f,c
 10178  01477C                     	endif
 10179  01477C  0009               	tblrd		*+
 10180  01477E  CFF5 F083          	movff	tablat,___flmul@a
 10181  014782  0009               	tblrd		*+
 10182  014784  CFF5 F084          	movff	tablat,___flmul@a+1
 10183  014788  0009               	tblrd		*+
 10184  01478A  CFF5 F085          	movff	tablat,___flmul@a+2
 10185  01478E  000A               	tblrd		*-
 10186  014790  CFF5 F086          	movff	tablat,___flmul@a+3
 10187  014794  C0A0  F07F         	movff	_fround$4191,___flmul@b
 10188  014798  C0A1  F080         	movff	_fround$4191+1,___flmul@b+1
 10189  01479C  C0A2  F081         	movff	_fround$4191+2,___flmul@b+2
 10190  0147A0  C0A3  F082         	movff	_fround$4191+3,___flmul@b+3
 10191  0147A4  EC23  F09D         	call	___flmul	;wreg free
 10192  0147A8  C07F  F09C         	movff	?___flmul,_fround$4192
 10193  0147AC  C080  F09D         	movff	?___flmul+1,_fround$4192+1
 10194  0147B0  C081  F09E         	movff	?___flmul+2,_fround$4192+2
 10195  0147B4  C082  F09F         	movff	?___flmul+3,_fround$4192+3
 10196                           
 10197                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10198  0147B8  C09C  F07F         	movff	_fround$4192,___flmul@b
 10199  0147BC  C09D  F080         	movff	_fround$4192+1,___flmul@b+1
 10200  0147C0  C09E  F081         	movff	_fround$4192+2,___flmul@b+2
 10201  0147C4  C09F  F082         	movff	_fround$4192+3,___flmul@b+3
 10202  0147C8  0E00               	movlw	0
 10203  0147CA  0100               	movlb	0	; () banked
 10204  0147CC  6F83               	movwf	___flmul@a& (0+255),b
 10205  0147CE  0E00               	movlw	0
 10206  0147D0  6F84               	movwf	(___flmul@a+1)& (0+255),b
 10207  0147D2  0E00               	movlw	0
 10208  0147D4  6F85               	movwf	(___flmul@a+2)& (0+255),b
 10209  0147D6  0E3F               	movlw	63
 10210  0147D8  6F86               	movwf	(___flmul@a+3)& (0+255),b
 10211  0147DA  EC23  F09D         	call	___flmul	;wreg free
 10212  0147DE  C07F  F098         	movff	?___flmul,?_fround
 10213  0147E2  C080  F099         	movff	?___flmul+1,?_fround+1
 10214  0147E6  C081  F09A         	movff	?___flmul+2,?_fround+2
 10215  0147EA  C082  F09B         	movff	?___flmul+3,?_fround+3
 10216  0147EE  0012               	return	
 10217  0147F0                     l8651:
 10218                           
 10219                           ;doprnt.c: 415: else if(prec > 10)
 10220  0147F0  0E0A               	movlw	10
 10221  0147F2  0100               	movlb	0	; () banked
 10222  0147F4  65A4               	cpfsgt	fround@prec& (0+255),b
 10223  0147F6  D078               	goto	l8659
 10224                           
 10225                           ; BSR set to: 0
 10226                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 10227  0147F8  0E00               	movlw	0
 10228  0147FA  0100               	movlb	0	; () banked
 10229  0147FC  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
 10230  0147FE  0E0A               	movlw	10
 10231  014800  6F73               	movwf	___awmod@divisor& (0+255),b
 10232  014802  C0A4  F071         	movff	fround@prec,___awmod@dividend
 10233  014806  0100               	movlb	0	; () banked
 10234  014808  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
 10235  01480A  EC9B  F0AF         	call	___awmod	;wreg free
 10236  01480E  0100               	movlb	0	; () banked
 10237  014810  90D8               	bcf	status,0,c
 10238  014812  3771               	rlcf	?___awmod& (0+255),f,b
 10239  014814  3772               	rlcf	(?___awmod+1)& (0+255),f,b
 10240  014816  0100               	movlb	0	; () banked
 10241  014818  90D8               	bcf	status,0,c
 10242  01481A  3771               	rlcf	?___awmod& (0+255),f,b
 10243  01481C  3772               	rlcf	(?___awmod+1)& (0+255),f,b
 10244  01481E  0ECD               	movlw	low __npowers_
 10245  014820  0100               	movlb	0	; () banked
 10246  014822  2571               	addwf	?___awmod& (0+255),w,b
 10247  014824  6EF6               	movwf	tblptrl,c
 10248  014826  0EFC               	movlw	high __npowers_
 10249  014828  0100               	movlb	0	; () banked
 10250  01482A  2172               	addwfc	(?___awmod+1)& (0+255),w,b
 10251  01482C  6EF7               	movwf	tblptrh,c
 10252  01482E                     	if	1	;There are 3 active tblptr bytes
 10253  01482E  6AF8               	clrf	tblptru,c
 10254  014830  0E00               	movlw	low (__mediumconst shr (0+16))
 10255  014832  22F8               	addwfc	tblptru,f,c
 10256  014834                     	endif
 10257  014834  0009               	tblrd		*+
 10258  014836  CFF5 F083          	movff	tablat,___flmul@a
 10259  01483A  0009               	tblrd		*+
 10260  01483C  CFF5 F084          	movff	tablat,___flmul@a+1
 10261  014840  0009               	tblrd		*+
 10262  014842  CFF5 F085          	movff	tablat,___flmul@a+2
 10263  014846  000A               	tblrd		*-
 10264  014848  CFF5 F086          	movff	tablat,___flmul@a+3
 10265  01484C  0E00               	movlw	0
 10266  01484E  0100               	movlb	0	; () banked
 10267  014850  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
 10268  014852  0E0A               	movlw	10
 10269  014854  6F79               	movwf	___awdiv@divisor& (0+255),b
 10270  014856  C0A4  F077         	movff	fround@prec,___awdiv@dividend
 10271  01485A  0100               	movlb	0	; () banked
 10272  01485C  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
 10273  01485E  ECD0  F0AD         	call	___awdiv	;wreg free
 10274  014862  0100               	movlb	0	; () banked
 10275  014864  90D8               	bcf	status,0,c
 10276  014866  3777               	rlcf	?___awdiv& (0+255),f,b
 10277  014868  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
 10278  01486A  0100               	movlb	0	; () banked
 10279  01486C  90D8               	bcf	status,0,c
 10280  01486E  3777               	rlcf	?___awdiv& (0+255),f,b
 10281  014870  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
 10282  014872  0E24               	movlw	36
 10283  014874  0100               	movlb	0	; () banked
 10284  014876  2777               	addwf	?___awdiv& (0+255),f,b
 10285  014878  0E00               	movlw	0
 10286  01487A  0100               	movlb	0	; () banked
 10287  01487C  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
 10288  01487E  0ECD               	movlw	low __npowers_
 10289  014880  0100               	movlb	0	; () banked
 10290  014882  2577               	addwf	?___awdiv& (0+255),w,b
 10291  014884  6EF6               	movwf	tblptrl,c
 10292  014886  0EFC               	movlw	high __npowers_
 10293  014888  0100               	movlb	0	; () banked
 10294  01488A  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
 10295  01488C  6EF7               	movwf	tblptrh,c
 10296  01488E                     	if	1	;There are 3 active tblptr bytes
 10297  01488E  6AF8               	clrf	tblptru,c
 10298  014890  0E00               	movlw	low (__mediumconst shr (0+16))
 10299  014892  22F8               	addwfc	tblptru,f,c
 10300  014894                     	endif
 10301  014894  0009               	tblrd		*+
 10302  014896  CFF5 F07F          	movff	tablat,___flmul@b
 10303  01489A  0009               	tblrd		*+
 10304  01489C  CFF5 F080          	movff	tablat,___flmul@b+1
 10305  0148A0  0009               	tblrd		*+
 10306  0148A2  CFF5 F081          	movff	tablat,___flmul@b+2
 10307  0148A6  000A               	tblrd		*-
 10308  0148A8  CFF5 F082          	movff	tablat,___flmul@b+3
 10309  0148AC  EC23  F09D         	call	___flmul	;wreg free
 10310  0148B0  C07F  F0A0         	movff	?___flmul,_fround$4191
 10311  0148B4  C080  F0A1         	movff	?___flmul+1,_fround$4191+1
 10312  0148B8  C081  F0A2         	movff	?___flmul+2,_fround$4191+2
 10313  0148BC  C082  F0A3         	movff	?___flmul+3,_fround$4191+3
 10314                           
 10315                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 10316  0148C0  C0A0  F07F         	movff	_fround$4191,___flmul@b
 10317  0148C4  C0A1  F080         	movff	_fround$4191+1,___flmul@b+1
 10318  0148C8  C0A2  F081         	movff	_fround$4191+2,___flmul@b+2
 10319  0148CC  C0A3  F082         	movff	_fround$4191+3,___flmul@b+3
 10320  0148D0  0E00               	movlw	0
 10321  0148D2  0100               	movlb	0	; () banked
 10322  0148D4  6F83               	movwf	___flmul@a& (0+255),b
 10323  0148D6  0E00               	movlw	0
 10324  0148D8  6F84               	movwf	(___flmul@a+1)& (0+255),b
 10325  0148DA  0E00               	movlw	0
 10326  0148DC  6F85               	movwf	(___flmul@a+2)& (0+255),b
 10327  0148DE  0E3F               	movlw	63
 10328  0148E0  6F86               	movwf	(___flmul@a+3)& (0+255),b
 10329  0148E2  EC23  F09D         	call	___flmul	;wreg free
 10330  0148E6  D77B               	goto	L10
 10331  0148E8                     l8659:
 10332                           
 10333                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 10334  0148E8  0100               	movlb	0	; () banked
 10335  0148EA  51A4               	movf	fround@prec& (0+255),w,b
 10336  0148EC  0D04               	mullw	4
 10337  0148EE  0ECD               	movlw	low __npowers_
 10338  0148F0  24F3               	addwf	prodl,w,c
 10339  0148F2  6EF6               	movwf	tblptrl,c
 10340  0148F4  0EFC               	movlw	high __npowers_
 10341  0148F6  20F4               	addwfc	prodh,w,c
 10342  0148F8  6EF7               	movwf	tblptrh,c
 10343  0148FA                     	if	1	;There are 3 active tblptr bytes
 10344  0148FA  6AF8               	clrf	tblptru,c
 10345  0148FC  0E00               	movlw	low (__mediumconst shr (0+16))
 10346  0148FE  22F8               	addwfc	tblptru,f,c
 10347  014900                     	endif
 10348  014900  0009               	tblrd		*+
 10349  014902  CFF5 F07F          	movff	tablat,___flmul@b
 10350  014906  0009               	tblrd		*+
 10351  014908  CFF5 F080          	movff	tablat,___flmul@b+1
 10352  01490C  0009               	tblrd		*+
 10353  01490E  CFF5 F081          	movff	tablat,___flmul@b+2
 10354  014912  000A               	tblrd		*-
 10355  014914  CFF5 F082          	movff	tablat,___flmul@b+3
 10356  014918  0E00               	movlw	0
 10357  01491A  0100               	movlb	0	; () banked
 10358  01491C  6F83               	movwf	___flmul@a& (0+255),b
 10359  01491E  0E00               	movlw	0
 10360  014920  6F84               	movwf	(___flmul@a+1)& (0+255),b
 10361  014922  0E00               	movlw	0
 10362  014924  6F85               	movwf	(___flmul@a+2)& (0+255),b
 10363  014926  0E3F               	movlw	63
 10364  014928  6F86               	movwf	(___flmul@a+3)& (0+255),b
 10365  01492A  EC23  F09D         	call	___flmul	;wreg free
 10366  01492E  C07F  F098         	movff	?___flmul,?_fround
 10367  014932  C080  F099         	movff	?___flmul+1,?_fround+1
 10368  014936  C081  F09A         	movff	?___flmul+2,?_fround+2
 10369  01493A  C082  F09B         	movff	?___flmul+3,?_fround+3
 10370  01493E  0012               	return	
 10371  014940                     __end_of_fround:
 10372                           	opt stack 0
 10373                           tblptru	equ	0xFF8
 10374                           tblptrh	equ	0xFF7
 10375                           tblptrl	equ	0xFF6
 10376                           tablat	equ	0xFF5
 10377                           prodh	equ	0xFF4
 10378                           prodl	equ	0xFF3
 10379                           intcon	equ	0xFF2
 10380                           postinc0	equ	0xFEE
 10381                           wreg	equ	0xFE8
 10382                           indf2	equ	0xFDF
 10383                           postinc2	equ	0xFDE
 10384                           fsr2h	equ	0xFDA
 10385                           fsr2l	equ	0xFD9
 10386                           status	equ	0xFD8
 10387                           
 10388 ;; *************** function ___flmul *****************
 10389 ;; Defined at:
 10390 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcmul.c"
 10391 ;; Parameters:    Size  Location     Type
 10392 ;;  b               4   31[BANK0 ] unsigned char 
 10393 ;;  a               4   35[BANK0 ] unsigned char 
 10394 ;; Auto vars:     Size  Location     Type
 10395 ;;  prod            4   50[BANK0 ] struct .
 10396 ;;  grs             4   45[BANK0 ] unsigned long 
 10397 ;;  temp            2   54[BANK0 ] struct .
 10398 ;;  bexp            1   49[BANK0 ] unsigned char 
 10399 ;;  aexp            1   44[BANK0 ] unsigned char 
 10400 ;;  sign            1   43[BANK0 ] unsigned char 
 10401 ;; Return value:  Size  Location     Type
 10402 ;;                  4   31[BANK0 ] unsigned char 
 10403 ;; Registers used:
 10404 ;;		wreg, status,2, status,0, prodl, prodh
 10405 ;; Tracked objects:
 10406 ;;		On entry : 0/0
 10407 ;;		On exit  : 0/0
 10408 ;;		Unchanged: 0/0
 10409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10410 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10411 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10412 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10413 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10414 ;;Total ram usage:       25 bytes
 10415 ;; Hardware stack levels used:    1
 10416 ;; Hardware stack levels required when called:    3
 10417 ;; This function calls:
 10418 ;;		Nothing
 10419 ;; This function is called by:
 10420 ;;		_main
 10421 ;;		_fround
 10422 ;;		_scale
 10423 ;;		_sprintf
 10424 ;; This function uses a non-reentrant model
 10425 ;;
 10426                           
 10427                           	psect	text14
 10428  013A46                     __ptext14:
 10429                           	opt stack 0
 10430  013A46                     ___flmul:
 10431                           	opt stack 27
 10432                           
 10433                           ;incstack = 0
 10434  013A46  0100               	movlb	0	; () banked
 10435  013A48  5182               	movf	(___flmul@b+3)& (0+255),w,b
 10436  013A4A  0B80               	andlw	128
 10437  013A4C  0100               	movlb	0	; () banked
 10438  013A4E  6F8B               	movwf	___flmul@sign& (0+255),b
 10439  013A50  0100               	movlb	0	; () banked
 10440  013A52  5182               	movf	(___flmul@b+3)& (0+255),w,b
 10441  013A54  2582               	addwf	(___flmul@b+3)& (0+255),w,b
 10442  013A56  0100               	movlb	0	; () banked
 10443  013A58  6F91               	movwf	___flmul@bexp& (0+255),b
 10444                           
 10445                           ; BSR set to: 0
 10446  013A5A  0100               	movlb	0	; () banked
 10447  013A5C  AF81               	btfss	(___flmul@b+2)& (0+255),7,b
 10448  013A5E  D002               	goto	l8405
 10449                           
 10450                           ; BSR set to: 0
 10451  013A60  0100               	movlb	0	; () banked
 10452  013A62  8191               	bsf	___flmul@bexp& (0+255),0,b
 10453  013A64                     l8405:
 10454                           
 10455                           ; BSR set to: 0
 10456  013A64  0100               	movlb	0	; () banked
 10457  013A66  5191               	movf	___flmul@bexp& (0+255),w,b
 10458  013A68  0100               	movlb	0	; () banked
 10459  013A6A  B4D8               	btfsc	status,2,c
 10460  013A6C  D010               	goto	l8413
 10461                           
 10462                           ; BSR set to: 0
 10463  013A6E  0100               	movlb	0	; () banked
 10464  013A70  2991               	incf	___flmul@bexp& (0+255),w,b
 10465  013A72  A4D8               	btfss	status,2,c
 10466  013A74  D009               	goto	l8411
 10467                           
 10468                           ; BSR set to: 0
 10469  013A76  0E00               	movlw	0
 10470  013A78  0100               	movlb	0	; () banked
 10471  013A7A  6F7F               	movwf	___flmul@b& (0+255),b
 10472  013A7C  0E00               	movlw	0
 10473  013A7E  6F80               	movwf	(___flmul@b+1)& (0+255),b
 10474  013A80  0E00               	movlw	0
 10475  013A82  6F81               	movwf	(___flmul@b+2)& (0+255),b
 10476  013A84  0E00               	movlw	0
 10477  013A86  6F82               	movwf	(___flmul@b+3)& (0+255),b
 10478  013A88                     l8411:
 10479                           
 10480                           ; BSR set to: 0
 10481  013A88  0100               	movlb	0	; () banked
 10482  013A8A  8F81               	bsf	(___flmul@b+2)& (0+255),7,b
 10483  013A8C  D009               	goto	l8415
 10484  013A8E                     l8413:
 10485                           
 10486                           ; BSR set to: 0
 10487  013A8E  0E00               	movlw	0
 10488  013A90  0100               	movlb	0	; () banked
 10489  013A92  6F7F               	movwf	___flmul@b& (0+255),b
 10490  013A94  0E00               	movlw	0
 10491  013A96  6F80               	movwf	(___flmul@b+1)& (0+255),b
 10492  013A98  0E00               	movlw	0
 10493  013A9A  6F81               	movwf	(___flmul@b+2)& (0+255),b
 10494  013A9C  0E00               	movlw	0
 10495  013A9E  6F82               	movwf	(___flmul@b+3)& (0+255),b
 10496  013AA0                     l8415:
 10497                           
 10498                           ; BSR set to: 0
 10499  013AA0  0100               	movlb	0	; () banked
 10500  013AA2  5186               	movf	(___flmul@a+3)& (0+255),w,b
 10501  013AA4  0B80               	andlw	128
 10502  013AA6  0100               	movlb	0	; () banked
 10503  013AA8  1B8B               	xorwf	___flmul@sign& (0+255),f,b
 10504                           
 10505                           ; BSR set to: 0
 10506  013AAA  0100               	movlb	0	; () banked
 10507  013AAC  5186               	movf	(___flmul@a+3)& (0+255),w,b
 10508  013AAE  2586               	addwf	(___flmul@a+3)& (0+255),w,b
 10509  013AB0  0100               	movlb	0	; () banked
 10510  013AB2  6F8C               	movwf	___flmul@aexp& (0+255),b
 10511                           
 10512                           ; BSR set to: 0
 10513  013AB4  0100               	movlb	0	; () banked
 10514  013AB6  AF85               	btfss	(___flmul@a+2)& (0+255),7,b
 10515  013AB8  D002               	goto	l8423
 10516                           
 10517                           ; BSR set to: 0
 10518  013ABA  0100               	movlb	0	; () banked
 10519  013ABC  818C               	bsf	___flmul@aexp& (0+255),0,b
 10520  013ABE                     l8423:
 10521                           
 10522                           ; BSR set to: 0
 10523  013ABE  0100               	movlb	0	; () banked
 10524  013AC0  518C               	movf	___flmul@aexp& (0+255),w,b
 10525  013AC2  0100               	movlb	0	; () banked
 10526  013AC4  B4D8               	btfsc	status,2,c
 10527  013AC6  D010               	goto	l8431
 10528                           
 10529                           ; BSR set to: 0
 10530  013AC8  0100               	movlb	0	; () banked
 10531  013ACA  298C               	incf	___flmul@aexp& (0+255),w,b
 10532  013ACC  A4D8               	btfss	status,2,c
 10533  013ACE  D009               	goto	l8429
 10534                           
 10535                           ; BSR set to: 0
 10536  013AD0  0E00               	movlw	0
 10537  013AD2  0100               	movlb	0	; () banked
 10538  013AD4  6F83               	movwf	___flmul@a& (0+255),b
 10539  013AD6  0E00               	movlw	0
 10540  013AD8  6F84               	movwf	(___flmul@a+1)& (0+255),b
 10541  013ADA  0E00               	movlw	0
 10542  013ADC  6F85               	movwf	(___flmul@a+2)& (0+255),b
 10543  013ADE  0E00               	movlw	0
 10544  013AE0  6F86               	movwf	(___flmul@a+3)& (0+255),b
 10545  013AE2                     l8429:
 10546                           
 10547                           ; BSR set to: 0
 10548  013AE2  0100               	movlb	0	; () banked
 10549  013AE4  8F85               	bsf	(___flmul@a+2)& (0+255),7,b
 10550  013AE6  D009               	goto	l1669
 10551  013AE8                     l8431:
 10552                           
 10553                           ; BSR set to: 0
 10554  013AE8  0E00               	movlw	0
 10555  013AEA  0100               	movlb	0	; () banked
 10556  013AEC  6F83               	movwf	___flmul@a& (0+255),b
 10557  013AEE  0E00               	movlw	0
 10558  013AF0  6F84               	movwf	(___flmul@a+1)& (0+255),b
 10559  013AF2  0E00               	movlw	0
 10560  013AF4  6F85               	movwf	(___flmul@a+2)& (0+255),b
 10561  013AF6  0E00               	movlw	0
 10562  013AF8  6F86               	movwf	(___flmul@a+3)& (0+255),b
 10563  013AFA                     l1669:
 10564                           
 10565                           ; BSR set to: 0
 10566  013AFA  0100               	movlb	0	; () banked
 10567  013AFC  518C               	movf	___flmul@aexp& (0+255),w,b
 10568  013AFE  0100               	movlb	0	; () banked
 10569  013B00  B4D8               	btfsc	status,2,c
 10570  013B02  D005               	goto	l8435
 10571                           
 10572                           ; BSR set to: 0
 10573  013B04  0100               	movlb	0	; () banked
 10574  013B06  5191               	movf	___flmul@bexp& (0+255),w,b
 10575  013B08  0100               	movlb	0	; () banked
 10576  013B0A  A4D8               	btfss	status,2,c
 10577  013B0C  D00A               	goto	l8439
 10578  013B0E                     l8435:
 10579                           
 10580                           ; BSR set to: 0
 10581  013B0E  0E00               	movlw	0
 10582  013B10  0100               	movlb	0	; () banked
 10583  013B12  6F7F               	movwf	?___flmul& (0+255),b
 10584  013B14  0E00               	movlw	0
 10585  013B16  6F80               	movwf	(?___flmul+1)& (0+255),b
 10586  013B18  0E00               	movlw	0
 10587  013B1A  6F81               	movwf	(?___flmul+2)& (0+255),b
 10588  013B1C  0E00               	movlw	0
 10589  013B1E  6F82               	movwf	(?___flmul+3)& (0+255),b
 10590                           
 10591                           ; BSR set to: 0
 10592  013B20  0012               	return	
 10593  013B22                     l8439:
 10594                           
 10595                           ; BSR set to: 0
 10596  013B22  0100               	movlb	0	; () banked
 10597  013B24  5185               	movf	(___flmul@a+2)& (0+255),w,b
 10598  013B26  0100               	movlb	0	; () banked
 10599  013B28  037F               	mulwf	___flmul@b& (0+255),b
 10600  013B2A  CFF3 F096          	movff	prodl,___flmul@temp
 10601  013B2E  CFF4 F097          	movff	prodh,___flmul@temp+1
 10602                           
 10603                           ; BSR set to: 0
 10604  013B32  0100               	movlb	0	; () banked
 10605  013B34  5196               	movf	___flmul@temp& (0+255),w,b
 10606  013B36  0100               	movlb	0	; () banked
 10607  013B38  6F8D               	movwf	___flmul@grs& (0+255),b
 10608  013B3A  6B8E               	clrf	(___flmul@grs+1)& (0+255),b
 10609  013B3C  6B8F               	clrf	(___flmul@grs+2)& (0+255),b
 10610  013B3E  6B90               	clrf	(___flmul@grs+3)& (0+255),b
 10611                           
 10612                           ; BSR set to: 0
 10613  013B40  0100               	movlb	0	; () banked
 10614  013B42  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10615  013B44  0100               	movlb	0	; () banked
 10616  013B46  6F92               	movwf	___flmul@prod& (0+255),b
 10617  013B48  6B93               	clrf	(___flmul@prod+1)& (0+255),b
 10618  013B4A  6B94               	clrf	(___flmul@prod+2)& (0+255),b
 10619  013B4C  6B95               	clrf	(___flmul@prod+3)& (0+255),b
 10620  013B4E  0100               	movlb	0	; () banked
 10621  013B50  5184               	movf	(___flmul@a+1)& (0+255),w,b
 10622  013B52  0100               	movlb	0	; () banked
 10623  013B54  0380               	mulwf	(___flmul@b+1)& (0+255),b
 10624  013B56  CFF3 F096          	movff	prodl,___flmul@temp
 10625  013B5A  CFF4 F097          	movff	prodh,___flmul@temp+1
 10626                           
 10627                           ; BSR set to: 0
 10628  013B5E  0100               	movlb	0	; () banked
 10629  013B60  5196               	movf	___flmul@temp& (0+255),w,b
 10630  013B62  0100               	movlb	0	; () banked
 10631  013B64  278D               	addwf	___flmul@grs& (0+255),f,b
 10632  013B66  0E00               	movlw	0
 10633  013B68  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10634  013B6A  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10635  013B6C  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10636                           
 10637                           ; BSR set to: 0
 10638  013B6E  0100               	movlb	0	; () banked
 10639  013B70  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10640  013B72  0100               	movlb	0	; () banked
 10641  013B74  2792               	addwf	___flmul@prod& (0+255),f,b
 10642  013B76  0E00               	movlw	0
 10643  013B78  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10644  013B7A  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10645  013B7C  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10646  013B7E  0100               	movlb	0	; () banked
 10647  013B80  5183               	movf	___flmul@a& (0+255),w,b
 10648  013B82  0100               	movlb	0	; () banked
 10649  013B84  0381               	mulwf	(___flmul@b+2)& (0+255),b
 10650  013B86  CFF3 F096          	movff	prodl,___flmul@temp
 10651  013B8A  CFF4 F097          	movff	prodh,___flmul@temp+1
 10652                           
 10653                           ; BSR set to: 0
 10654  013B8E  0100               	movlb	0	; () banked
 10655  013B90  5196               	movf	___flmul@temp& (0+255),w,b
 10656  013B92  0100               	movlb	0	; () banked
 10657  013B94  278D               	addwf	___flmul@grs& (0+255),f,b
 10658  013B96  0E00               	movlw	0
 10659  013B98  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10660  013B9A  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10661  013B9C  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10662                           
 10663                           ; BSR set to: 0
 10664  013B9E  0100               	movlb	0	; () banked
 10665  013BA0  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10666  013BA2  0100               	movlb	0	; () banked
 10667  013BA4  2792               	addwf	___flmul@prod& (0+255),f,b
 10668  013BA6  0E00               	movlw	0
 10669  013BA8  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10670  013BAA  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10671  013BAC  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10672                           
 10673                           ; BSR set to: 0
 10674  013BAE  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
 10675  013BB2  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
 10676  013BB6  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
 10677  013BBA  0100               	movlb	0	; () banked
 10678  013BBC  6B8D               	clrf	___flmul@grs& (0+255),b
 10679                           
 10680                           ; BSR set to: 0
 10681  013BBE  0100               	movlb	0	; () banked
 10682  013BC0  5183               	movf	___flmul@a& (0+255),w,b
 10683  013BC2  0100               	movlb	0	; () banked
 10684  013BC4  0380               	mulwf	(___flmul@b+1)& (0+255),b
 10685  013BC6  CFF3 F096          	movff	prodl,___flmul@temp
 10686  013BCA  CFF4 F097          	movff	prodh,___flmul@temp+1
 10687                           
 10688                           ; BSR set to: 0
 10689  013BCE  0100               	movlb	0	; () banked
 10690  013BD0  5196               	movf	___flmul@temp& (0+255),w,b
 10691  013BD2  0100               	movlb	0	; () banked
 10692  013BD4  278D               	addwf	___flmul@grs& (0+255),f,b
 10693  013BD6  0100               	movlb	0	; () banked
 10694  013BD8  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10695  013BDA  0100               	movlb	0	; () banked
 10696  013BDC  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10697  013BDE  0E00               	movlw	0
 10698  013BE0  0100               	movlb	0	; () banked
 10699  013BE2  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10700  013BE4  0E00               	movlw	0
 10701  013BE6  0100               	movlb	0	; () banked
 10702  013BE8  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10703                           
 10704                           ; BSR set to: 0
 10705  013BEA  0100               	movlb	0	; () banked
 10706  013BEC  5184               	movf	(___flmul@a+1)& (0+255),w,b
 10707  013BEE  0100               	movlb	0	; () banked
 10708  013BF0  037F               	mulwf	___flmul@b& (0+255),b
 10709  013BF2  CFF3 F096          	movff	prodl,___flmul@temp
 10710  013BF6  CFF4 F097          	movff	prodh,___flmul@temp+1
 10711                           
 10712                           ; BSR set to: 0
 10713  013BFA  0100               	movlb	0	; () banked
 10714  013BFC  5196               	movf	___flmul@temp& (0+255),w,b
 10715  013BFE  0100               	movlb	0	; () banked
 10716  013C00  278D               	addwf	___flmul@grs& (0+255),f,b
 10717  013C02  0100               	movlb	0	; () banked
 10718  013C04  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10719  013C06  0100               	movlb	0	; () banked
 10720  013C08  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10721  013C0A  0E00               	movlw	0
 10722  013C0C  0100               	movlb	0	; () banked
 10723  013C0E  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10724  013C10  0E00               	movlw	0
 10725  013C12  0100               	movlb	0	; () banked
 10726  013C14  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10727                           
 10728                           ; BSR set to: 0
 10729  013C16  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
 10730  013C1A  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
 10731  013C1E  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
 10732  013C22  0100               	movlb	0	; () banked
 10733  013C24  6B8D               	clrf	___flmul@grs& (0+255),b
 10734  013C26  0100               	movlb	0	; () banked
 10735  013C28  5183               	movf	___flmul@a& (0+255),w,b
 10736  013C2A  0100               	movlb	0	; () banked
 10737  013C2C  037F               	mulwf	___flmul@b& (0+255),b
 10738  013C2E  CFF3 F096          	movff	prodl,___flmul@temp
 10739  013C32  CFF4 F097          	movff	prodh,___flmul@temp+1
 10740                           
 10741                           ; BSR set to: 0
 10742  013C36  0100               	movlb	0	; () banked
 10743  013C38  5196               	movf	___flmul@temp& (0+255),w,b
 10744  013C3A  0100               	movlb	0	; () banked
 10745  013C3C  278D               	addwf	___flmul@grs& (0+255),f,b
 10746  013C3E  0100               	movlb	0	; () banked
 10747  013C40  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10748  013C42  0100               	movlb	0	; () banked
 10749  013C44  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 10750  013C46  0E00               	movlw	0
 10751  013C48  0100               	movlb	0	; () banked
 10752  013C4A  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 10753  013C4C  0E00               	movlw	0
 10754  013C4E  0100               	movlb	0	; () banked
 10755  013C50  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
 10756                           
 10757                           ; BSR set to: 0
 10758  013C52  0100               	movlb	0	; () banked
 10759  013C54  5185               	movf	(___flmul@a+2)& (0+255),w,b
 10760  013C56  0100               	movlb	0	; () banked
 10761  013C58  0380               	mulwf	(___flmul@b+1)& (0+255),b
 10762  013C5A  CFF3 F096          	movff	prodl,___flmul@temp
 10763  013C5E  CFF4 F097          	movff	prodh,___flmul@temp+1
 10764  013C62  0100               	movlb	0	; () banked
 10765  013C64  5196               	movf	___flmul@temp& (0+255),w,b
 10766  013C66  0100               	movlb	0	; () banked
 10767  013C68  2792               	addwf	___flmul@prod& (0+255),f,b
 10768  013C6A  0100               	movlb	0	; () banked
 10769  013C6C  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10770  013C6E  0100               	movlb	0	; () banked
 10771  013C70  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10772  013C72  0E00               	movlw	0
 10773  013C74  0100               	movlb	0	; () banked
 10774  013C76  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10775  013C78  0E00               	movlw	0
 10776  013C7A  0100               	movlb	0	; () banked
 10777  013C7C  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10778                           
 10779                           ; BSR set to: 0
 10780  013C7E  0100               	movlb	0	; () banked
 10781  013C80  5184               	movf	(___flmul@a+1)& (0+255),w,b
 10782  013C82  0100               	movlb	0	; () banked
 10783  013C84  0381               	mulwf	(___flmul@b+2)& (0+255),b
 10784  013C86  CFF3 F096          	movff	prodl,___flmul@temp
 10785  013C8A  CFF4 F097          	movff	prodh,___flmul@temp+1
 10786                           
 10787                           ; BSR set to: 0
 10788  013C8E  0100               	movlb	0	; () banked
 10789  013C90  5196               	movf	___flmul@temp& (0+255),w,b
 10790  013C92  0100               	movlb	0	; () banked
 10791  013C94  2792               	addwf	___flmul@prod& (0+255),f,b
 10792  013C96  0100               	movlb	0	; () banked
 10793  013C98  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10794  013C9A  0100               	movlb	0	; () banked
 10795  013C9C  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10796  013C9E  0E00               	movlw	0
 10797  013CA0  0100               	movlb	0	; () banked
 10798  013CA2  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10799  013CA4  0E00               	movlw	0
 10800  013CA6  0100               	movlb	0	; () banked
 10801  013CA8  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10802  013CAA  0100               	movlb	0	; () banked
 10803  013CAC  5185               	movf	(___flmul@a+2)& (0+255),w,b
 10804  013CAE  0100               	movlb	0	; () banked
 10805  013CB0  0381               	mulwf	(___flmul@b+2)& (0+255),b
 10806  013CB2  CFF3 F096          	movff	prodl,___flmul@temp
 10807  013CB6  CFF4 F097          	movff	prodh,___flmul@temp+1
 10808                           
 10809                           ; BSR set to: 0
 10810  013CBA  0100               	movlb	0	; () banked
 10811  013CBC  5196               	movf	___flmul@temp& (0+255),w,b
 10812  013CBE  0100               	movlb	0	; () banked
 10813  013CC0  6F87               	movwf	??___flmul& (0+255),b
 10814  013CC2  0100               	movlb	0	; () banked
 10815  013CC4  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 10816  013CC6  0100               	movlb	0	; () banked
 10817  013CC8  6F88               	movwf	(??___flmul+1)& (0+255),b
 10818  013CCA  0100               	movlb	0	; () banked
 10819  013CCC  6B89               	clrf	(??___flmul+2)& (0+255),b
 10820  013CCE  0100               	movlb	0	; () banked
 10821  013CD0  6B8A               	clrf	(??___flmul+3)& (0+255),b
 10822  013CD2  C089  F08A         	movff	??___flmul+2,??___flmul+3
 10823  013CD6  C088  F089         	movff	??___flmul+1,??___flmul+2
 10824  013CDA  C087  F088         	movff	??___flmul,??___flmul+1
 10825  013CDE  0100               	movlb	0	; () banked
 10826  013CE0  6B87               	clrf	??___flmul& (0+255),b
 10827  013CE2  0100               	movlb	0	; () banked
 10828  013CE4  5187               	movf	??___flmul& (0+255),w,b
 10829  013CE6  0100               	movlb	0	; () banked
 10830  013CE8  2792               	addwf	___flmul@prod& (0+255),f,b
 10831  013CEA  0100               	movlb	0	; () banked
 10832  013CEC  5188               	movf	(??___flmul+1)& (0+255),w,b
 10833  013CEE  0100               	movlb	0	; () banked
 10834  013CF0  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10835  013CF2  0100               	movlb	0	; () banked
 10836  013CF4  5189               	movf	(??___flmul+2)& (0+255),w,b
 10837  013CF6  0100               	movlb	0	; () banked
 10838  013CF8  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10839  013CFA  0100               	movlb	0	; () banked
 10840  013CFC  518A               	movf	(??___flmul+3)& (0+255),w,b
 10841  013CFE  0100               	movlb	0	; () banked
 10842  013D00  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10843                           
 10844                           ; BSR set to: 0
 10845  013D02  C08D  F087         	movff	___flmul@grs,??___flmul
 10846  013D06  C08E  F088         	movff	___flmul@grs+1,??___flmul+1
 10847  013D0A  C08F  F089         	movff	___flmul@grs+2,??___flmul+2
 10848  013D0E  C090  F08A         	movff	___flmul@grs+3,??___flmul+3
 10849  013D12  0E19               	movlw	25
 10850  013D14  D006               	goto	u11310
 10851  013D16                     u11315:
 10852  013D16  0100               	movlb	0	; () banked
 10853  013D18  90D8               	bcf	status,0,c
 10854  013D1A  338A               	rrcf	(??___flmul+3)& (0+255),f,b
 10855  013D1C  3389               	rrcf	(??___flmul+2)& (0+255),f,b
 10856  013D1E  3388               	rrcf	(??___flmul+1)& (0+255),f,b
 10857  013D20  3387               	rrcf	??___flmul& (0+255),f,b
 10858  013D22                     u11310:
 10859  013D22  2EE8               	decfsz	wreg,f,c
 10860  013D24  D7F8               	goto	u11315
 10861  013D26  0100               	movlb	0	; () banked
 10862  013D28  5187               	movf	??___flmul& (0+255),w,b
 10863  013D2A  0100               	movlb	0	; () banked
 10864  013D2C  2792               	addwf	___flmul@prod& (0+255),f,b
 10865  013D2E  0100               	movlb	0	; () banked
 10866  013D30  5188               	movf	(??___flmul+1)& (0+255),w,b
 10867  013D32  0100               	movlb	0	; () banked
 10868  013D34  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 10869  013D36  0100               	movlb	0	; () banked
 10870  013D38  5189               	movf	(??___flmul+2)& (0+255),w,b
 10871  013D3A  0100               	movlb	0	; () banked
 10872  013D3C  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 10873  013D3E  0100               	movlb	0	; () banked
 10874  013D40  518A               	movf	(??___flmul+3)& (0+255),w,b
 10875  013D42  0100               	movlb	0	; () banked
 10876  013D44  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 10877                           
 10878                           ; BSR set to: 0
 10879  013D46  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
 10880  013D4A  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
 10881  013D4E  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
 10882  013D52  0100               	movlb	0	; () banked
 10883  013D54  6B8D               	clrf	___flmul@grs& (0+255),b
 10884                           
 10885                           ; BSR set to: 0
 10886  013D56  0100               	movlb	0	; () banked
 10887  013D58  518C               	movf	___flmul@aexp& (0+255),w,b
 10888  013D5A  C091  F087         	movff	___flmul@bexp,??___flmul
 10889  013D5E  0100               	movlb	0	; () banked
 10890  013D60  6B88               	clrf	(??___flmul+1)& (0+255),b
 10891  013D62  0100               	movlb	0	; () banked
 10892  013D64  2787               	addwf	??___flmul& (0+255),f,b
 10893  013D66  0E00               	movlw	0
 10894  013D68  2388               	addwfc	(??___flmul+1)& (0+255),f,b
 10895  013D6A  0E82               	movlw	130
 10896  013D6C  0100               	movlb	0	; () banked
 10897  013D6E  2587               	addwf	??___flmul& (0+255),w,b
 10898  013D70  0100               	movlb	0	; () banked
 10899  013D72  6F96               	movwf	___flmul@temp& (0+255),b
 10900  013D74  0EFF               	movlw	255
 10901  013D76  0100               	movlb	0	; () banked
 10902  013D78  2188               	addwfc	(??___flmul+1)& (0+255),w,b
 10903  013D7A  0100               	movlb	0	; () banked
 10904  013D7C  6F97               	movwf	(___flmul@temp+1)& (0+255),b
 10905  013D7E  D015               	goto	l8487
 10906  013D80                     l8481:
 10907                           
 10908                           ; BSR set to: 0
 10909  013D80  0100               	movlb	0	; () banked
 10910  013D82  90D8               	bcf	status,0,c
 10911  013D84  3792               	rlcf	___flmul@prod& (0+255),f,b
 10912  013D86  3793               	rlcf	(___flmul@prod+1)& (0+255),f,b
 10913  013D88  3794               	rlcf	(___flmul@prod+2)& (0+255),f,b
 10914  013D8A  3795               	rlcf	(___flmul@prod+3)& (0+255),f,b
 10915                           
 10916                           ; BSR set to: 0
 10917  013D8C  0100               	movlb	0	; () banked
 10918  013D8E  AF90               	btfss	(___flmul@grs+3)& (0+255),7,b
 10919  013D90  D002               	goto	l1676
 10920                           
 10921                           ; BSR set to: 0
 10922  013D92  0100               	movlb	0	; () banked
 10923  013D94  8192               	bsf	___flmul@prod& (0+255),0,b
 10924  013D96                     l1676:
 10925                           
 10926                           ; BSR set to: 0
 10927  013D96  0100               	movlb	0	; () banked
 10928  013D98  90D8               	bcf	status,0,c
 10929  013D9A  378D               	rlcf	___flmul@grs& (0+255),f,b
 10930  013D9C  378E               	rlcf	(___flmul@grs+1)& (0+255),f,b
 10931  013D9E  378F               	rlcf	(___flmul@grs+2)& (0+255),f,b
 10932  013DA0  3790               	rlcf	(___flmul@grs+3)& (0+255),f,b
 10933  013DA2  0100               	movlb	0	; () banked
 10934  013DA4  0796               	decf	___flmul@temp& (0+255),f,b
 10935  013DA6  A0D8               	btfss	status,0,c
 10936  013DA8  0797               	decf	(___flmul@temp+1)& (0+255),f,b
 10937  013DAA                     l8487:
 10938                           
 10939                           ; BSR set to: 0
 10940  013DAA  0100               	movlb	0	; () banked
 10941  013DAC  AF94               	btfss	(___flmul@prod+2)& (0+255),7,b
 10942  013DAE  D7E8               	goto	l8481
 10943                           
 10944                           ; BSR set to: 0
 10945                           
 10946                           ; BSR set to: 0
 10947  013DB0  0E00               	movlw	0
 10948  013DB2  0100               	movlb	0	; () banked
 10949  013DB4  6F8C               	movwf	___flmul@aexp& (0+255),b
 10950                           
 10951                           ; BSR set to: 0
 10952  013DB6  0100               	movlb	0	; () banked
 10953  013DB8  AF90               	btfss	(___flmul@grs+3)& (0+255),7,b
 10954  013DBA  D024               	goto	l1678
 10955                           
 10956                           ; BSR set to: 0
 10957  013DBC  0EFF               	movlw	255
 10958  013DBE  0100               	movlb	0	; () banked
 10959  013DC0  158D               	andwf	___flmul@grs& (0+255),w,b
 10960  013DC2  0100               	movlb	0	; () banked
 10961  013DC4  6F87               	movwf	??___flmul& (0+255),b
 10962  013DC6  0EFF               	movlw	255
 10963  013DC8  0100               	movlb	0	; () banked
 10964  013DCA  158E               	andwf	(___flmul@grs+1)& (0+255),w,b
 10965  013DCC  0100               	movlb	0	; () banked
 10966  013DCE  6F88               	movwf	(??___flmul+1)& (0+255),b
 10967  013DD0  0EFF               	movlw	255
 10968  013DD2  0100               	movlb	0	; () banked
 10969  013DD4  158F               	andwf	(___flmul@grs+2)& (0+255),w,b
 10970  013DD6  0100               	movlb	0	; () banked
 10971  013DD8  6F89               	movwf	(??___flmul+2)& (0+255),b
 10972  013DDA  0E7F               	movlw	127
 10973  013DDC  0100               	movlb	0	; () banked
 10974  013DDE  1590               	andwf	(___flmul@grs+3)& (0+255),w,b
 10975  013DE0  0100               	movlb	0	; () banked
 10976  013DE2  6F8A               	movwf	(??___flmul+3)& (0+255),b
 10977  013DE4  0100               	movlb	0	; () banked
 10978  013DE6  5187               	movf	??___flmul& (0+255),w,b
 10979  013DE8  0100               	movlb	0	; () banked
 10980  013DEA  1188               	iorwf	(??___flmul+1)& (0+255),w,b
 10981  013DEC  0100               	movlb	0	; () banked
 10982  013DEE  1189               	iorwf	(??___flmul+2)& (0+255),w,b
 10983  013DF0  0100               	movlb	0	; () banked
 10984  013DF2  118A               	iorwf	(??___flmul+3)& (0+255),w,b
 10985  013DF4  A4D8               	btfss	status,2,c
 10986  013DF6  D003               	goto	l8497
 10987                           
 10988                           ; BSR set to: 0
 10989                           
 10990                           ; BSR set to: 0
 10991  013DF8  0100               	movlb	0	; () banked
 10992  013DFA  A192               	btfss	___flmul@prod& (0+255),0,b
 10993  013DFC  D003               	goto	l1678
 10994  013DFE                     l8497:
 10995                           
 10996                           ; BSR set to: 0
 10997  013DFE  0E01               	movlw	1
 10998  013E00  0100               	movlb	0	; () banked
 10999  013E02  6F8C               	movwf	___flmul@aexp& (0+255),b
 11000  013E04                     l1678:
 11001                           
 11002                           ; BSR set to: 0
 11003  013E04  0100               	movlb	0	; () banked
 11004  013E06  518C               	movf	___flmul@aexp& (0+255),w,b
 11005  013E08  0100               	movlb	0	; () banked
 11006  013E0A  B4D8               	btfsc	status,2,c
 11007  013E0C  D023               	goto	l8507
 11008                           
 11009                           ; BSR set to: 0
 11010  013E0E  0E01               	movlw	1
 11011  013E10  0100               	movlb	0	; () banked
 11012  013E12  2792               	addwf	___flmul@prod& (0+255),f,b
 11013  013E14  0E00               	movlw	0
 11014  013E16  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11015  013E18  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11016  013E1A  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11017                           
 11018                           ; BSR set to: 0
 11019  013E1C  0100               	movlb	0	; () banked
 11020  013E1E  A195               	btfss	(___flmul@prod+3)& (0+255),0,b
 11021  013E20  D019               	goto	l8507
 11022                           
 11023                           ; BSR set to: 0
 11024  013E22  C092  F087         	movff	___flmul@prod,??___flmul
 11025  013E26  C093  F088         	movff	___flmul@prod+1,??___flmul+1
 11026  013E2A  C094  F089         	movff	___flmul@prod+2,??___flmul+2
 11027  013E2E  C095  F08A         	movff	___flmul@prod+3,??___flmul+3
 11028  013E32  0100               	movlb	0	; () banked
 11029  013E34  358A               	rlcf	(??___flmul+3)& (0+255),w,b
 11030  013E36  338A               	rrcf	(??___flmul+3)& (0+255),f,b
 11031  013E38  3389               	rrcf	(??___flmul+2)& (0+255),f,b
 11032  013E3A  3388               	rrcf	(??___flmul+1)& (0+255),f,b
 11033  013E3C  3387               	rrcf	??___flmul& (0+255),f,b
 11034  013E3E  C087  F092         	movff	??___flmul,___flmul@prod
 11035  013E42  C088  F093         	movff	??___flmul+1,___flmul@prod+1
 11036  013E46  C089  F094         	movff	??___flmul+2,___flmul@prod+2
 11037  013E4A  C08A  F095         	movff	??___flmul+3,___flmul@prod+3
 11038                           
 11039                           ; BSR set to: 0
 11040  013E4E  0100               	movlb	0	; () banked
 11041  013E50  4B96               	infsnz	___flmul@temp& (0+255),f,b
 11042  013E52  2B97               	incf	(___flmul@temp+1)& (0+255),f,b
 11043  013E54                     l8507:
 11044                           
 11045                           ; BSR set to: 0
 11046  013E54  0100               	movlb	0	; () banked
 11047  013E56  BF97               	btfsc	(___flmul@temp+1)& (0+255),7,b
 11048  013E58  D010               	goto	l8511
 11049  013E5A  0100               	movlb	0	; () banked
 11050  013E5C  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 11051  013E5E  E104               	bnz	u11390
 11052  013E60  0100               	movlb	0	; () banked
 11053  013E62  2996               	incf	___flmul@temp& (0+255),w,b
 11054  013E64  A0D8               	btfss	status,0,c
 11055  013E66  D009               	goto	l8511
 11056  013E68                     u11390:
 11057                           
 11058                           ; BSR set to: 0
 11059  013E68  0E00               	movlw	0
 11060  013E6A  0100               	movlb	0	; () banked
 11061  013E6C  6F92               	movwf	___flmul@prod& (0+255),b
 11062  013E6E  0E00               	movlw	0
 11063  013E70  6F93               	movwf	(___flmul@prod+1)& (0+255),b
 11064  013E72  0E80               	movlw	128
 11065  013E74  6F94               	movwf	(___flmul@prod+2)& (0+255),b
 11066  013E76  0E7F               	movlw	127
 11067  013E78  D02B               	goto	L11
 11068  013E7A                     l8511:
 11069                           
 11070                           ; BSR set to: 0
 11071  013E7A  0100               	movlb	0	; () banked
 11072  013E7C  BF97               	btfsc	(___flmul@temp+1)& (0+255),7,b
 11073  013E7E  D007               	goto	l8513
 11074  013E80  0100               	movlb	0	; () banked
 11075  013E82  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 11076  013E84  E111               	bnz	l1686
 11077  013E86  0100               	movlb	0	; () banked
 11078  013E88  0596               	decf	___flmul@temp& (0+255),w,b
 11079  013E8A  B0D8               	btfsc	status,0,c
 11080  013E8C  D00D               	goto	l1686
 11081  013E8E                     l8513:
 11082                           
 11083                           ; BSR set to: 0
 11084  013E8E  0E00               	movlw	0
 11085  013E90  0100               	movlb	0	; () banked
 11086  013E92  6F92               	movwf	___flmul@prod& (0+255),b
 11087  013E94  0E00               	movlw	0
 11088  013E96  6F93               	movwf	(___flmul@prod+1)& (0+255),b
 11089  013E98  0E00               	movlw	0
 11090  013E9A  6F94               	movwf	(___flmul@prod+2)& (0+255),b
 11091  013E9C  0E00               	movlw	0
 11092  013E9E  6F95               	movwf	(___flmul@prod+3)& (0+255),b
 11093  013EA0  0E00               	movlw	0
 11094  013EA2  0100               	movlb	0	; () banked
 11095  013EA4  6F8B               	movwf	___flmul@sign& (0+255),b
 11096  013EA6  D015               	goto	l8523
 11097  013EA8                     l1686:
 11098                           
 11099                           ; BSR set to: 0
 11100  013EA8  C096  F091         	movff	___flmul@temp,___flmul@bexp
 11101                           
 11102                           ; BSR set to: 0
 11103  013EAC  0EFF               	movlw	255
 11104  013EAE  0100               	movlb	0	; () banked
 11105  013EB0  1792               	andwf	___flmul@prod& (0+255),f,b
 11106  013EB2  0EFF               	movlw	255
 11107  013EB4  1793               	andwf	(___flmul@prod+1)& (0+255),f,b
 11108  013EB6  0E7F               	movlw	127
 11109  013EB8  1794               	andwf	(___flmul@prod+2)& (0+255),f,b
 11110  013EBA  0E00               	movlw	0
 11111  013EBC  1795               	andwf	(___flmul@prod+3)& (0+255),f,b
 11112                           
 11113                           ; BSR set to: 0
 11114  013EBE  0100               	movlb	0	; () banked
 11115  013EC0  A191               	btfss	___flmul@bexp& (0+255),0,b
 11116  013EC2  D002               	goto	l8521
 11117                           
 11118                           ; BSR set to: 0
 11119  013EC4  0100               	movlb	0	; () banked
 11120  013EC6  8F94               	bsf	(___flmul@prod+2)& (0+255),7,b
 11121  013EC8                     l8521:
 11122                           
 11123                           ; BSR set to: 0
 11124  013EC8  0100               	movlb	0	; () banked
 11125  013ECA  90D8               	bcf	status,0,c
 11126  013ECC  3191               	rrcf	___flmul@bexp& (0+255),w,b
 11127  013ECE  0100               	movlb	0	; () banked
 11128  013ED0                     L11:
 11129  013ED0  6F95               	movwf	(___flmul@prod+3)& (0+255),b
 11130  013ED2                     l8523:
 11131                           
 11132                           ; BSR set to: 0
 11133  013ED2  0100               	movlb	0	; () banked
 11134  013ED4  518B               	movf	___flmul@sign& (0+255),w,b
 11135  013ED6  0100               	movlb	0	; () banked
 11136  013ED8  1395               	iorwf	(___flmul@prod+3)& (0+255),f,b
 11137                           
 11138                           ; BSR set to: 0
 11139  013EDA  C092  F07F         	movff	___flmul@prod,?___flmul
 11140  013EDE  C093  F080         	movff	___flmul@prod+1,?___flmul+1
 11141  013EE2  C094  F081         	movff	___flmul@prod+2,?___flmul+2
 11142  013EE6  C095  F082         	movff	___flmul@prod+3,?___flmul+3
 11143  013EEA  0012               	return	
 11144  013EEC                     __end_of___flmul:
 11145                           	opt stack 0
 11146                           tblptru	equ	0xFF8
 11147                           tblptrh	equ	0xFF7
 11148                           tblptrl	equ	0xFF6
 11149                           tablat	equ	0xFF5
 11150                           prodh	equ	0xFF4
 11151                           prodl	equ	0xFF3
 11152                           intcon	equ	0xFF2
 11153                           postinc0	equ	0xFEE
 11154                           wreg	equ	0xFE8
 11155                           indf2	equ	0xFDF
 11156                           postinc2	equ	0xFDE
 11157                           fsr2h	equ	0xFDA
 11158                           fsr2l	equ	0xFD9
 11159                           status	equ	0xFD8
 11160                           
 11161 ;; *************** function ___awmod *****************
 11162 ;; Defined at:
 11163 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
 11164 ;; Parameters:    Size  Location     Type
 11165 ;;  dividend        2   17[BANK0 ] int 
 11166 ;;  divisor         2   19[BANK0 ] int 
 11167 ;; Auto vars:     Size  Location     Type
 11168 ;;  sign            1   22[BANK0 ] unsigned char 
 11169 ;;  counter         1   21[BANK0 ] unsigned char 
 11170 ;; Return value:  Size  Location     Type
 11171 ;;                  2   17[BANK0 ] int 
 11172 ;; Registers used:
 11173 ;;		wreg, status,2, status,0
 11174 ;; Tracked objects:
 11175 ;;		On entry : 0/0
 11176 ;;		On exit  : 0/0
 11177 ;;		Unchanged: 0/0
 11178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11179 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11180 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11182 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11183 ;;Total ram usage:        6 bytes
 11184 ;; Hardware stack levels used:    1
 11185 ;; Hardware stack levels required when called:    3
 11186 ;; This function calls:
 11187 ;;		Nothing
 11188 ;; This function is called by:
 11189 ;;		_fround
 11190 ;;		_scale
 11191 ;; This function uses a non-reentrant model
 11192 ;;
 11193                           
 11194                           	psect	text15
 11195  015F36                     __ptext15:
 11196                           	opt stack 0
 11197  015F36                     ___awmod:
 11198                           	opt stack 24
 11199                           
 11200                           ; BSR set to: 0
 11201                           ;incstack = 0
 11202  015F36  0E00               	movlw	0
 11203  015F38  0100               	movlb	0	; () banked
 11204  015F3A  6F76               	movwf	___awmod@sign& (0+255),b
 11205                           
 11206                           ; BSR set to: 0
 11207  015F3C  0100               	movlb	0	; () banked
 11208  015F3E  AF72               	btfss	(___awmod@dividend+1)& (0+255),7,b
 11209  015F40  D008               	goto	l8581
 11210                           
 11211                           ; BSR set to: 0
 11212  015F42  0100               	movlb	0	; () banked
 11213  015F44  6D71               	negf	___awmod@dividend& (0+255),b
 11214  015F46  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
 11215  015F48  B0D8               	btfsc	status,0,c
 11216  015F4A  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
 11217                           
 11218                           ; BSR set to: 0
 11219  015F4C  0E01               	movlw	1
 11220  015F4E  0100               	movlb	0	; () banked
 11221  015F50  6F76               	movwf	___awmod@sign& (0+255),b
 11222  015F52                     l8581:
 11223                           
 11224                           ; BSR set to: 0
 11225  015F52  0100               	movlb	0	; () banked
 11226  015F54  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11227  015F56  D005               	goto	l8585
 11228                           
 11229                           ; BSR set to: 0
 11230  015F58  0100               	movlb	0	; () banked
 11231  015F5A  6D73               	negf	___awmod@divisor& (0+255),b
 11232  015F5C  1F74               	comf	(___awmod@divisor+1)& (0+255),f,b
 11233  015F5E  B0D8               	btfsc	status,0,c
 11234  015F60  2B74               	incf	(___awmod@divisor+1)& (0+255),f,b
 11235  015F62                     l8585:
 11236                           
 11237                           ; BSR set to: 0
 11238  015F62  0100               	movlb	0	; () banked
 11239  015F64  5173               	movf	___awmod@divisor& (0+255),w,b
 11240  015F66  0100               	movlb	0	; () banked
 11241  015F68  1174               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11242  015F6A  B4D8               	btfsc	status,2,c
 11243  015F6C  D026               	goto	l8601
 11244                           
 11245                           ; BSR set to: 0
 11246  015F6E  0E01               	movlw	1
 11247  015F70  0100               	movlb	0	; () banked
 11248  015F72  6F75               	movwf	___awmod@counter& (0+255),b
 11249  015F74  D006               	goto	l8591
 11250  015F76                     l8589:
 11251                           
 11252                           ; BSR set to: 0
 11253  015F76  0100               	movlb	0	; () banked
 11254  015F78  90D8               	bcf	status,0,c
 11255  015F7A  3773               	rlcf	___awmod@divisor& (0+255),f,b
 11256  015F7C  3774               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11257  015F7E  0100               	movlb	0	; () banked
 11258  015F80  2B75               	incf	___awmod@counter& (0+255),f,b
 11259  015F82                     l8591:
 11260                           
 11261                           ; BSR set to: 0
 11262  015F82  0100               	movlb	0	; () banked
 11263  015F84  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11264  015F86  D7F7               	goto	l8589
 11265  015F88                     l8593:
 11266                           
 11267                           ; BSR set to: 0
 11268  015F88  0100               	movlb	0	; () banked
 11269  015F8A  5173               	movf	___awmod@divisor& (0+255),w,b
 11270  015F8C  0100               	movlb	0	; () banked
 11271  015F8E  5D71               	subwf	___awmod@dividend& (0+255),w,b
 11272  015F90  0100               	movlb	0	; () banked
 11273  015F92  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
 11274  015F94  0100               	movlb	0	; () banked
 11275  015F96  5972               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11276  015F98  A0D8               	btfss	status,0,c
 11277  015F9A  D008               	goto	l8597
 11278                           
 11279                           ; BSR set to: 0
 11280  015F9C  0100               	movlb	0	; () banked
 11281  015F9E  5173               	movf	___awmod@divisor& (0+255),w,b
 11282  015FA0  0100               	movlb	0	; () banked
 11283  015FA2  5F71               	subwf	___awmod@dividend& (0+255),f,b
 11284  015FA4  0100               	movlb	0	; () banked
 11285  015FA6  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
 11286  015FA8  0100               	movlb	0	; () banked
 11287  015FAA  5B72               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11288  015FAC                     l8597:
 11289                           
 11290                           ; BSR set to: 0
 11291  015FAC  0100               	movlb	0	; () banked
 11292  015FAE  90D8               	bcf	status,0,c
 11293  015FB0  3374               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11294  015FB2  3373               	rrcf	___awmod@divisor& (0+255),f,b
 11295                           
 11296                           ; BSR set to: 0
 11297  015FB4  0100               	movlb	0	; () banked
 11298  015FB6  2F75               	decfsz	___awmod@counter& (0+255),f,b
 11299  015FB8  D7E7               	goto	l8593
 11300  015FBA                     l8601:
 11301                           
 11302                           ; BSR set to: 0
 11303  015FBA  0100               	movlb	0	; () banked
 11304  015FBC  5176               	movf	___awmod@sign& (0+255),w,b
 11305  015FBE  0100               	movlb	0	; () banked
 11306  015FC0  B4D8               	btfsc	status,2,c
 11307  015FC2  D005               	goto	l8605
 11308                           
 11309                           ; BSR set to: 0
 11310  015FC4  0100               	movlb	0	; () banked
 11311  015FC6  6D71               	negf	___awmod@dividend& (0+255),b
 11312  015FC8  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
 11313  015FCA  B0D8               	btfsc	status,0,c
 11314  015FCC  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
 11315  015FCE                     l8605:
 11316                           
 11317                           ; BSR set to: 0
 11318  015FCE  C071  F071         	movff	___awmod@dividend,?___awmod
 11319  015FD2  C072  F072         	movff	___awmod@dividend+1,?___awmod+1
 11320  015FD6  0012               	return	
 11321  015FD8                     __end_of___awmod:
 11322                           	opt stack 0
 11323                           tblptru	equ	0xFF8
 11324                           tblptrh	equ	0xFF7
 11325                           tblptrl	equ	0xFF6
 11326                           tablat	equ	0xFF5
 11327                           prodh	equ	0xFF4
 11328                           prodl	equ	0xFF3
 11329                           intcon	equ	0xFF2
 11330                           postinc0	equ	0xFEE
 11331                           wreg	equ	0xFE8
 11332                           indf2	equ	0xFDF
 11333                           postinc2	equ	0xFDE
 11334                           fsr2h	equ	0xFDA
 11335                           fsr2l	equ	0xFD9
 11336                           status	equ	0xFD8
 11337                           
 11338 ;; *************** function ___awdiv *****************
 11339 ;; Defined at:
 11340 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
 11341 ;; Parameters:    Size  Location     Type
 11342 ;;  dividend        2   23[BANK0 ] int 
 11343 ;;  divisor         2   25[BANK0 ] int 
 11344 ;; Auto vars:     Size  Location     Type
 11345 ;;  quotient        2   29[BANK0 ] int 
 11346 ;;  sign            1   28[BANK0 ] unsigned char 
 11347 ;;  counter         1   27[BANK0 ] unsigned char 
 11348 ;; Return value:  Size  Location     Type
 11349 ;;                  2   23[BANK0 ] int 
 11350 ;; Registers used:
 11351 ;;		wreg, status,2, status,0
 11352 ;; Tracked objects:
 11353 ;;		On entry : 0/0
 11354 ;;		On exit  : 0/0
 11355 ;;		Unchanged: 0/0
 11356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11357 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11358 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11360 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11361 ;;Total ram usage:        8 bytes
 11362 ;; Hardware stack levels used:    1
 11363 ;; Hardware stack levels required when called:    3
 11364 ;; This function calls:
 11365 ;;		Nothing
 11366 ;; This function is called by:
 11367 ;;		_main
 11368 ;;		_fround
 11369 ;;		_scale
 11370 ;;		_sprintf
 11371 ;; This function uses a non-reentrant model
 11372 ;;
 11373                           
 11374                           	psect	text16
 11375  015BA0                     __ptext16:
 11376                           	opt stack 0
 11377  015BA0                     ___awdiv:
 11378                           	opt stack 27
 11379                           
 11380                           ; BSR set to: 0
 11381                           ;incstack = 0
 11382  015BA0  0E00               	movlw	0
 11383  015BA2  0100               	movlb	0	; () banked
 11384  015BA4  6F7C               	movwf	___awdiv@sign& (0+255),b
 11385                           
 11386                           ; BSR set to: 0
 11387  015BA6  0100               	movlb	0	; () banked
 11388  015BA8  AF7A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11389  015BAA  D008               	goto	l8537
 11390                           
 11391                           ; BSR set to: 0
 11392  015BAC  0100               	movlb	0	; () banked
 11393  015BAE  6D79               	negf	___awdiv@divisor& (0+255),b
 11394  015BB0  1F7A               	comf	(___awdiv@divisor+1)& (0+255),f,b
 11395  015BB2  B0D8               	btfsc	status,0,c
 11396  015BB4  2B7A               	incf	(___awdiv@divisor+1)& (0+255),f,b
 11397                           
 11398                           ; BSR set to: 0
 11399  015BB6  0E01               	movlw	1
 11400  015BB8  0100               	movlb	0	; () banked
 11401  015BBA  6F7C               	movwf	___awdiv@sign& (0+255),b
 11402  015BBC                     l8537:
 11403                           
 11404                           ; BSR set to: 0
 11405  015BBC  0100               	movlb	0	; () banked
 11406  015BBE  AF78               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 11407  015BC0  D008               	goto	l8543
 11408                           
 11409                           ; BSR set to: 0
 11410  015BC2  0100               	movlb	0	; () banked
 11411  015BC4  6D77               	negf	___awdiv@dividend& (0+255),b
 11412  015BC6  1F78               	comf	(___awdiv@dividend+1)& (0+255),f,b
 11413  015BC8  B0D8               	btfsc	status,0,c
 11414  015BCA  2B78               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11415                           
 11416                           ; BSR set to: 0
 11417  015BCC  0E01               	movlw	1
 11418  015BCE  0100               	movlb	0	; () banked
 11419  015BD0  1B7C               	xorwf	___awdiv@sign& (0+255),f,b
 11420  015BD2                     l8543:
 11421                           
 11422                           ; BSR set to: 0
 11423  015BD2  0E00               	movlw	0
 11424  015BD4  0100               	movlb	0	; () banked
 11425  015BD6  6F7E               	movwf	(___awdiv@quotient+1)& (0+255),b
 11426  015BD8  0E00               	movlw	0
 11427  015BDA  6F7D               	movwf	___awdiv@quotient& (0+255),b
 11428                           
 11429                           ; BSR set to: 0
 11430  015BDC  0100               	movlb	0	; () banked
 11431  015BDE  5179               	movf	___awdiv@divisor& (0+255),w,b
 11432  015BE0  0100               	movlb	0	; () banked
 11433  015BE2  117A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 11434  015BE4  B4D8               	btfsc	status,2,c
 11435  015BE6  D02C               	goto	l8565
 11436                           
 11437                           ; BSR set to: 0
 11438  015BE8  0E01               	movlw	1
 11439  015BEA  0100               	movlb	0	; () banked
 11440  015BEC  6F7B               	movwf	___awdiv@counter& (0+255),b
 11441  015BEE  D006               	goto	l8551
 11442  015BF0                     l8549:
 11443                           
 11444                           ; BSR set to: 0
 11445  015BF0  0100               	movlb	0	; () banked
 11446  015BF2  90D8               	bcf	status,0,c
 11447  015BF4  3779               	rlcf	___awdiv@divisor& (0+255),f,b
 11448  015BF6  377A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 11449  015BF8  0100               	movlb	0	; () banked
 11450  015BFA  2B7B               	incf	___awdiv@counter& (0+255),f,b
 11451  015BFC                     l8551:
 11452                           
 11453                           ; BSR set to: 0
 11454  015BFC  0100               	movlb	0	; () banked
 11455  015BFE  AF7A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11456  015C00  D7F7               	goto	l8549
 11457  015C02                     l8553:
 11458                           
 11459                           ; BSR set to: 0
 11460  015C02  0100               	movlb	0	; () banked
 11461  015C04  90D8               	bcf	status,0,c
 11462  015C06  377D               	rlcf	___awdiv@quotient& (0+255),f,b
 11463  015C08  377E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 11464                           
 11465                           ; BSR set to: 0
 11466  015C0A  0100               	movlb	0	; () banked
 11467  015C0C  5179               	movf	___awdiv@divisor& (0+255),w,b
 11468  015C0E  0100               	movlb	0	; () banked
 11469  015C10  5D77               	subwf	___awdiv@dividend& (0+255),w,b
 11470  015C12  0100               	movlb	0	; () banked
 11471  015C14  517A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11472  015C16  0100               	movlb	0	; () banked
 11473  015C18  5978               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 11474  015C1A  A0D8               	btfss	status,0,c
 11475  015C1C  D00A               	goto	l8561
 11476                           
 11477                           ; BSR set to: 0
 11478  015C1E  0100               	movlb	0	; () banked
 11479  015C20  5179               	movf	___awdiv@divisor& (0+255),w,b
 11480  015C22  0100               	movlb	0	; () banked
 11481  015C24  5F77               	subwf	___awdiv@dividend& (0+255),f,b
 11482  015C26  0100               	movlb	0	; () banked
 11483  015C28  517A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11484  015C2A  0100               	movlb	0	; () banked
 11485  015C2C  5B78               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 11486                           
 11487                           ; BSR set to: 0
 11488  015C2E  0100               	movlb	0	; () banked
 11489  015C30  817D               	bsf	___awdiv@quotient& (0+255),0,b
 11490  015C32                     l8561:
 11491                           
 11492                           ; BSR set to: 0
 11493  015C32  0100               	movlb	0	; () banked
 11494  015C34  90D8               	bcf	status,0,c
 11495  015C36  337A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 11496  015C38  3379               	rrcf	___awdiv@divisor& (0+255),f,b
 11497                           
 11498                           ; BSR set to: 0
 11499  015C3A  0100               	movlb	0	; () banked
 11500  015C3C  2F7B               	decfsz	___awdiv@counter& (0+255),f,b
 11501  015C3E  D7E1               	goto	l8553
 11502  015C40                     l8565:
 11503                           
 11504                           ; BSR set to: 0
 11505  015C40  0100               	movlb	0	; () banked
 11506  015C42  517C               	movf	___awdiv@sign& (0+255),w,b
 11507  015C44  0100               	movlb	0	; () banked
 11508  015C46  B4D8               	btfsc	status,2,c
 11509  015C48  D005               	goto	l8569
 11510                           
 11511                           ; BSR set to: 0
 11512  015C4A  0100               	movlb	0	; () banked
 11513  015C4C  6D7D               	negf	___awdiv@quotient& (0+255),b
 11514  015C4E  1F7E               	comf	(___awdiv@quotient+1)& (0+255),f,b
 11515  015C50  B0D8               	btfsc	status,0,c
 11516  015C52  2B7E               	incf	(___awdiv@quotient+1)& (0+255),f,b
 11517  015C54                     l8569:
 11518                           
 11519                           ; BSR set to: 0
 11520  015C54  C07D  F077         	movff	___awdiv@quotient,?___awdiv
 11521  015C58  C07E  F078         	movff	___awdiv@quotient+1,?___awdiv+1
 11522  015C5C  0012               	return	
 11523  015C5E                     __end_of___awdiv:
 11524                           	opt stack 0
 11525                           tblptru	equ	0xFF8
 11526                           tblptrh	equ	0xFF7
 11527                           tblptrl	equ	0xFF6
 11528                           tablat	equ	0xFF5
 11529                           prodh	equ	0xFF4
 11530                           prodl	equ	0xFF3
 11531                           intcon	equ	0xFF2
 11532                           postinc0	equ	0xFEE
 11533                           wreg	equ	0xFE8
 11534                           indf2	equ	0xFDF
 11535                           postinc2	equ	0xFDE
 11536                           fsr2h	equ	0xFDA
 11537                           fsr2l	equ	0xFD9
 11538                           status	equ	0xFD8
 11539                           
 11540 ;; *************** function __tdiv_to_l_ *****************
 11541 ;; Defined at:
 11542 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdivl.c"
 11543 ;; Parameters:    Size  Location     Type
 11544 ;;  f1              4   17[BANK0 ] float 
 11545 ;;  f2              4   21[BANK0 ] float 
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;  quot            4   28[BANK0 ] unsigned long 
 11548 ;;  exp1            1   33[BANK0 ] unsigned char 
 11549 ;;  cntr            1   32[BANK0 ] unsigned char 
 11550 ;; Return value:  Size  Location     Type
 11551 ;;                  4   17[BANK0 ] unsigned long 
 11552 ;; Registers used:
 11553 ;;		wreg, status,2, status,0
 11554 ;; Tracked objects:
 11555 ;;		On entry : 0/0
 11556 ;;		On exit  : 0/0
 11557 ;;		Unchanged: 0/0
 11558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11559 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11560 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11561 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11562 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11563 ;;Total ram usage:       17 bytes
 11564 ;; Hardware stack levels used:    1
 11565 ;; Hardware stack levels required when called:    3
 11566 ;; This function calls:
 11567 ;;		Nothing
 11568 ;; This function is called by:
 11569 ;;		_sprintf
 11570 ;; This function uses a non-reentrant model
 11571 ;;
 11572                           
 11573                           	psect	text17
 11574  015384                     __ptext17:
 11575                           	opt stack 0
 11576  015384                     __tdiv_to_l_:
 11577                           	opt stack 25
 11578                           
 11579                           ; BSR set to: 0
 11580                           ;incstack = 0
 11581  015384  C073  F079         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 11582  015388  0100               	movlb	0	; () banked
 11583  01538A  6B7A               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 11584  01538C  6B7B               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 11585  01538E  0100               	movlb	0	; () banked
 11586  015390  3572               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 11587  015392  0100               	movlb	0	; () banked
 11588  015394  3779               	rlcf	??__tdiv_to_l_& (0+255),f,b
 11589  015396  E301               	bnc	u11651
 11590  015398  817A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 11591  01539A                     u11651:
 11592  01539A  0100               	movlb	0	; () banked
 11593  01539C  5179               	movf	??__tdiv_to_l_& (0+255),w,b
 11594  01539E  0100               	movlb	0	; () banked
 11595  0153A0  6F81               	movwf	__tdiv_to_l_@exp1& (0+255),b
 11596  0153A2  0100               	movlb	0	; () banked
 11597  0153A4  5181               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11598  0153A6  A4D8               	btfss	status,2,c
 11599  0153A8  D00A               	goto	l8719
 11600                           
 11601                           ; BSR set to: 0
 11602  0153AA  0E00               	movlw	0
 11603  0153AC  0100               	movlb	0	; () banked
 11604  0153AE  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 11605  0153B0  0E00               	movlw	0
 11606  0153B2  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11607  0153B4  0E00               	movlw	0
 11608  0153B6  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11609  0153B8  0E00               	movlw	0
 11610  0153BA  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11611                           
 11612                           ; BSR set to: 0
 11613  0153BC  0012               	return	
 11614  0153BE                     l8719:
 11615                           
 11616                           ; BSR set to: 0
 11617  0153BE  C077  F079         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 11618  0153C2  0100               	movlb	0	; () banked
 11619  0153C4  6B7A               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 11620  0153C6  6B7B               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 11621  0153C8  0100               	movlb	0	; () banked
 11622  0153CA  3576               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11623  0153CC  0100               	movlb	0	; () banked
 11624  0153CE  3779               	rlcf	??__tdiv_to_l_& (0+255),f,b
 11625  0153D0  E301               	bnc	u11671
 11626  0153D2  817A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 11627  0153D4                     u11671:
 11628  0153D4  0100               	movlb	0	; () banked
 11629  0153D6  5179               	movf	??__tdiv_to_l_& (0+255),w,b
 11630  0153D8  0100               	movlb	0	; () banked
 11631  0153DA  6F80               	movwf	__tdiv_to_l_@cntr& (0+255),b
 11632  0153DC  0100               	movlb	0	; () banked
 11633  0153DE  5180               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 11634  0153E0  A4D8               	btfss	status,2,c
 11635  0153E2  D00A               	goto	l8725
 11636                           
 11637                           ; BSR set to: 0
 11638  0153E4  0E00               	movlw	0
 11639  0153E6  0100               	movlb	0	; () banked
 11640  0153E8  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 11641  0153EA  0E00               	movlw	0
 11642  0153EC  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11643  0153EE  0E00               	movlw	0
 11644  0153F0  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11645  0153F2  0E00               	movlw	0
 11646  0153F4  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11647                           
 11648                           ; BSR set to: 0
 11649  0153F6  0012               	return	
 11650  0153F8                     l8725:
 11651                           
 11652                           ; BSR set to: 0
 11653  0153F8  0100               	movlb	0	; () banked
 11654  0153FA  8F72               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 11655                           
 11656                           ; BSR set to: 0
 11657  0153FC  0EFF               	movlw	255
 11658  0153FE  0100               	movlb	0	; () banked
 11659  015400  1771               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 11660  015402  0EFF               	movlw	255
 11661  015404  0100               	movlb	0	; () banked
 11662  015406  1772               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11663  015408  0E00               	movlw	0
 11664  01540A  0100               	movlb	0	; () banked
 11665  01540C  1773               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11666  01540E  0100               	movlb	0	; () banked
 11667  015410  8F76               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 11668                           
 11669                           ; BSR set to: 0
 11670  015412  0EFF               	movlw	255
 11671  015414  0100               	movlb	0	; () banked
 11672  015416  1775               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 11673  015418  0EFF               	movlw	255
 11674  01541A  0100               	movlb	0	; () banked
 11675  01541C  1776               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 11676  01541E  0E00               	movlw	0
 11677  015420  0100               	movlb	0	; () banked
 11678  015422  1777               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 11679                           
 11680                           ; BSR set to: 0
 11681  015424  0E00               	movlw	0
 11682  015426  0100               	movlb	0	; () banked
 11683  015428  6F7C               	movwf	__tdiv_to_l_@quot& (0+255),b
 11684  01542A  0E00               	movlw	0
 11685  01542C  6F7D               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 11686  01542E  0E00               	movlw	0
 11687  015430  6F7E               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 11688  015432  0E00               	movlw	0
 11689  015434  6F7F               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 11690                           
 11691                           ; BSR set to: 0
 11692  015436  0E7F               	movlw	127
 11693  015438  0100               	movlb	0	; () banked
 11694  01543A  5F81               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 11695                           
 11696                           ; BSR set to: 0
 11697  01543C  0100               	movlb	0	; () banked
 11698  01543E  5180               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 11699  015440  0F98               	addlw	152
 11700  015442  0100               	movlb	0	; () banked
 11701  015444  5F81               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 11702                           
 11703                           ; BSR set to: 0
 11704  015446  0E18               	movlw	24
 11705  015448  0100               	movlb	0	; () banked
 11706  01544A  6F80               	movwf	__tdiv_to_l_@cntr& (0+255),b
 11707  01544C                     l1393:
 11708                           
 11709                           ; BSR set to: 0
 11710  01544C  0100               	movlb	0	; () banked
 11711  01544E  90D8               	bcf	status,0,c
 11712  015450  377C               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 11713  015452  377D               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11714  015454  377E               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11715  015456  377F               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11716                           
 11717                           ; BSR set to: 0
 11718  015458  0100               	movlb	0	; () banked
 11719  01545A  5175               	movf	__tdiv_to_l_@f2& (0+255),w,b
 11720  01545C  0100               	movlb	0	; () banked
 11721  01545E  5D71               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 11722  015460  0100               	movlb	0	; () banked
 11723  015462  5176               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11724  015464  0100               	movlb	0	; () banked
 11725  015466  5972               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 11726  015468  0100               	movlb	0	; () banked
 11727  01546A  5177               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 11728  01546C  0100               	movlb	0	; () banked
 11729  01546E  5973               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 11730  015470  A0D8               	btfss	status,0,c
 11731  015472  D00E               	goto	l1394
 11732                           
 11733                           ; BSR set to: 0
 11734  015474  0100               	movlb	0	; () banked
 11735  015476  5175               	movf	__tdiv_to_l_@f2& (0+255),w,b
 11736  015478  0100               	movlb	0	; () banked
 11737  01547A  5F71               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 11738  01547C  0100               	movlb	0	; () banked
 11739  01547E  5176               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11740  015480  0100               	movlb	0	; () banked
 11741  015482  5B72               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11742  015484  0100               	movlb	0	; () banked
 11743  015486  5177               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 11744  015488  0100               	movlb	0	; () banked
 11745  01548A  5B73               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11746                           
 11747                           ; BSR set to: 0
 11748  01548C  0100               	movlb	0	; () banked
 11749  01548E  817C               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 11750  015490                     l1394:
 11751                           
 11752                           ; BSR set to: 0
 11753  015490  0100               	movlb	0	; () banked
 11754  015492  90D8               	bcf	status,0,c
 11755  015494  3771               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 11756  015496  3772               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11757  015498  3773               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11758                           
 11759                           ; BSR set to: 0
 11760  01549A  0100               	movlb	0	; () banked
 11761  01549C  2F80               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 11762  01549E  D7D6               	goto	l1393
 11763                           
 11764                           ; BSR set to: 0
 11765                           
 11766                           ; BSR set to: 0
 11767  0154A0  0100               	movlb	0	; () banked
 11768  0154A2  AF81               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 11769  0154A4  D01A               	goto	l8759
 11770                           
 11771                           ; BSR set to: 0
 11772  0154A6  0100               	movlb	0	; () banked
 11773  0154A8  5181               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11774  0154AA  0A80               	xorlw	128
 11775  0154AC  0F97               	addlw	151
 11776  0154AE  B0D8               	btfsc	status,0,c
 11777  0154B0  D00A               	goto	l8755
 11778                           
 11779                           ; BSR set to: 0
 11780  0154B2  0E00               	movlw	0
 11781  0154B4  0100               	movlb	0	; () banked
 11782  0154B6  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 11783  0154B8  0E00               	movlw	0
 11784  0154BA  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11785  0154BC  0E00               	movlw	0
 11786  0154BE  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11787  0154C0  0E00               	movlw	0
 11788  0154C2  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11789                           
 11790                           ; BSR set to: 0
 11791  0154C4  0012               	return	
 11792  0154C6                     l8755:
 11793                           
 11794                           ; BSR set to: 0
 11795  0154C6  0100               	movlb	0	; () banked
 11796  0154C8  90D8               	bcf	status,0,c
 11797  0154CA  337F               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11798  0154CC  337E               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11799  0154CE  337D               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11800  0154D0  337C               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 11801                           
 11802                           ; BSR set to: 0
 11803  0154D2  0100               	movlb	0	; () banked
 11804  0154D4  3F81               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 11805  0154D6  D7F7               	goto	l8755
 11806                           
 11807                           ; BSR set to: 0
 11808  0154D8  D01B               	goto	l1400
 11809  0154DA                     l8759:
 11810                           
 11811                           ; BSR set to: 0
 11812  0154DA  0E17               	movlw	23
 11813  0154DC  0100               	movlb	0	; () banked
 11814  0154DE  6581               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 11815  0154E0  D012               	goto	l8767
 11816                           
 11817                           ; BSR set to: 0
 11818  0154E2  0E00               	movlw	0
 11819  0154E4  0100               	movlb	0	; () banked
 11820  0154E6  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 11821  0154E8  0E00               	movlw	0
 11822  0154EA  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11823  0154EC  0E00               	movlw	0
 11824  0154EE  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11825  0154F0  0E00               	movlw	0
 11826  0154F2  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11827                           
 11828                           ; BSR set to: 0
 11829  0154F4  0012               	return	
 11830  0154F6                     l8765:
 11831                           
 11832                           ; BSR set to: 0
 11833  0154F6  0100               	movlb	0	; () banked
 11834  0154F8  90D8               	bcf	status,0,c
 11835  0154FA  377C               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 11836  0154FC  377D               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11837  0154FE  377E               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11838  015500  377F               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11839  015502  0100               	movlb	0	; () banked
 11840  015504  0781               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 11841  015506                     l8767:
 11842                           
 11843                           ; BSR set to: 0
 11844  015506  0100               	movlb	0	; () banked
 11845  015508  5181               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11846  01550A  0100               	movlb	0	; () banked
 11847  01550C  A4D8               	btfss	status,2,c
 11848  01550E  D7F3               	goto	l8765
 11849  015510                     l1400:
 11850                           
 11851                           ; BSR set to: 0
 11852  015510  C07C  F071         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 11853  015514  C07D  F072         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 11854  015518  C07E  F073         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 11855  01551C  C07F  F074         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 11856                           
 11857                           ; BSR set to: 0
 11858  015520  0012               	return		;funcret
 11859  015522                     __end_of__tdiv_to_l_:
 11860                           	opt stack 0
 11861                           tblptru	equ	0xFF8
 11862                           tblptrh	equ	0xFF7
 11863                           tblptrl	equ	0xFF6
 11864                           tablat	equ	0xFF5
 11865                           prodh	equ	0xFF4
 11866                           prodl	equ	0xFF3
 11867                           intcon	equ	0xFF2
 11868                           postinc0	equ	0xFEE
 11869                           wreg	equ	0xFE8
 11870                           indf2	equ	0xFDF
 11871                           postinc2	equ	0xFDE
 11872                           fsr2h	equ	0xFDA
 11873                           fsr2l	equ	0xFD9
 11874                           status	equ	0xFD8
 11875                           
 11876 ;; *************** function __div_to_l_ *****************
 11877 ;; Defined at:
 11878 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fldivl.c"
 11879 ;; Parameters:    Size  Location     Type
 11880 ;;  f1              4   17[BANK0 ] unsigned long 
 11881 ;;  f2              4   21[BANK0 ] unsigned long 
 11882 ;; Auto vars:     Size  Location     Type
 11883 ;;  quot            4   25[BANK0 ] unsigned long 
 11884 ;;  exp1            1   30[BANK0 ] unsigned char 
 11885 ;;  cntr            1   29[BANK0 ] unsigned char 
 11886 ;; Return value:  Size  Location     Type
 11887 ;;                  4   17[BANK0 ] unsigned long 
 11888 ;; Registers used:
 11889 ;;		wreg, status,2, status,0
 11890 ;; Tracked objects:
 11891 ;;		On entry : 0/0
 11892 ;;		On exit  : 0/0
 11893 ;;		Unchanged: 0/0
 11894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11895 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11896 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11898 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11899 ;;Total ram usage:       14 bytes
 11900 ;; Hardware stack levels used:    1
 11901 ;; Hardware stack levels required when called:    3
 11902 ;; This function calls:
 11903 ;;		Nothing
 11904 ;; This function is called by:
 11905 ;;		_sprintf
 11906 ;; This function uses a non-reentrant model
 11907 ;;
 11908                           
 11909                           	psect	text18
 11910  0156B2                     __ptext18:
 11911                           	opt stack 0
 11912  0156B2                     __div_to_l_:
 11913                           	opt stack 25
 11914                           
 11915                           ; BSR set to: 0
 11916                           ;incstack = 0
 11917  0156B2  0100               	movlb	0	; () banked
 11918  0156B4  3573               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 11919  0156B6  3574               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 11920  0156B8  0100               	movlb	0	; () banked
 11921  0156BA  6F7E               	movwf	__div_to_l_@exp1& (0+255),b
 11922  0156BC  0100               	movlb	0	; () banked
 11923  0156BE  517E               	movf	__div_to_l_@exp1& (0+255),w,b
 11924  0156C0  A4D8               	btfss	status,2,c
 11925  0156C2  D00A               	goto	l8775
 11926                           
 11927                           ; BSR set to: 0
 11928  0156C4  0E00               	movlw	0
 11929  0156C6  0100               	movlb	0	; () banked
 11930  0156C8  6F71               	movwf	?__div_to_l_& (0+255),b
 11931  0156CA  0E00               	movlw	0
 11932  0156CC  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 11933  0156CE  0E00               	movlw	0
 11934  0156D0  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 11935  0156D2  0E00               	movlw	0
 11936  0156D4  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 11937                           
 11938                           ; BSR set to: 0
 11939  0156D6  0012               	return	
 11940  0156D8                     l8775:
 11941                           
 11942                           ; BSR set to: 0
 11943  0156D8  0100               	movlb	0	; () banked
 11944  0156DA  3577               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 11945  0156DC  3578               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 11946  0156DE  0100               	movlb	0	; () banked
 11947  0156E0  6F7D               	movwf	__div_to_l_@cntr& (0+255),b
 11948  0156E2  0100               	movlb	0	; () banked
 11949  0156E4  517D               	movf	__div_to_l_@cntr& (0+255),w,b
 11950  0156E6  A4D8               	btfss	status,2,c
 11951  0156E8  D00A               	goto	l8781
 11952                           
 11953                           ; BSR set to: 0
 11954  0156EA  0E00               	movlw	0
 11955  0156EC  0100               	movlb	0	; () banked
 11956  0156EE  6F71               	movwf	?__div_to_l_& (0+255),b
 11957  0156F0  0E00               	movlw	0
 11958  0156F2  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 11959  0156F4  0E00               	movlw	0
 11960  0156F6  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 11961  0156F8  0E00               	movlw	0
 11962  0156FA  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 11963                           
 11964                           ; BSR set to: 0
 11965  0156FC  0012               	return	
 11966  0156FE                     l8781:
 11967                           
 11968                           ; BSR set to: 0
 11969  0156FE  0100               	movlb	0	; () banked
 11970  015700  8F73               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 11971                           
 11972                           ; BSR set to: 0
 11973  015702  0EFF               	movlw	255
 11974  015704  0100               	movlb	0	; () banked
 11975  015706  1771               	andwf	__div_to_l_@f1& (0+255),f,b
 11976  015708  0EFF               	movlw	255
 11977  01570A  1772               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 11978  01570C  0EFF               	movlw	255
 11979  01570E  1773               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 11980  015710  0E00               	movlw	0
 11981  015712  1774               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 11982                           
 11983                           ; BSR set to: 0
 11984  015714  0100               	movlb	0	; () banked
 11985  015716  8F77               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 11986  015718  0EFF               	movlw	255
 11987  01571A  0100               	movlb	0	; () banked
 11988  01571C  1775               	andwf	__div_to_l_@f2& (0+255),f,b
 11989  01571E  0EFF               	movlw	255
 11990  015720  1776               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 11991  015722  0EFF               	movlw	255
 11992  015724  1777               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 11993  015726  0E00               	movlw	0
 11994  015728  1778               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 11995                           
 11996                           ; BSR set to: 0
 11997  01572A  0E00               	movlw	0
 11998  01572C  0100               	movlb	0	; () banked
 11999  01572E  6F79               	movwf	__div_to_l_@quot& (0+255),b
 12000  015730  0E00               	movlw	0
 12001  015732  6F7A               	movwf	(__div_to_l_@quot+1)& (0+255),b
 12002  015734  0E00               	movlw	0
 12003  015736  6F7B               	movwf	(__div_to_l_@quot+2)& (0+255),b
 12004  015738  0E00               	movlw	0
 12005  01573A  6F7C               	movwf	(__div_to_l_@quot+3)& (0+255),b
 12006                           
 12007                           ; BSR set to: 0
 12008  01573C  0E7F               	movlw	127
 12009  01573E  0100               	movlb	0	; () banked
 12010  015740  5F7E               	subwf	__div_to_l_@exp1& (0+255),f,b
 12011                           
 12012                           ; BSR set to: 0
 12013  015742  0100               	movlb	0	; () banked
 12014  015744  517D               	movf	__div_to_l_@cntr& (0+255),w,b
 12015  015746  0FA0               	addlw	160
 12016  015748  0100               	movlb	0	; () banked
 12017  01574A  5F7E               	subwf	__div_to_l_@exp1& (0+255),f,b
 12018                           
 12019                           ; BSR set to: 0
 12020  01574C  0E20               	movlw	32
 12021  01574E  0100               	movlb	0	; () banked
 12022  015750  6F7D               	movwf	__div_to_l_@cntr& (0+255),b
 12023  015752                     l8795:
 12024                           
 12025                           ; BSR set to: 0
 12026  015752  0100               	movlb	0	; () banked
 12027  015754  90D8               	bcf	status,0,c
 12028  015756  3779               	rlcf	__div_to_l_@quot& (0+255),f,b
 12029  015758  377A               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 12030  01575A  377B               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 12031  01575C  377C               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 12032                           
 12033                           ; BSR set to: 0
 12034  01575E  0100               	movlb	0	; () banked
 12035  015760  5175               	movf	__div_to_l_@f2& (0+255),w,b
 12036  015762  0100               	movlb	0	; () banked
 12037  015764  5D71               	subwf	__div_to_l_@f1& (0+255),w,b
 12038  015766  0100               	movlb	0	; () banked
 12039  015768  5176               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 12040  01576A  0100               	movlb	0	; () banked
 12041  01576C  5972               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 12042  01576E  0100               	movlb	0	; () banked
 12043  015770  5177               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 12044  015772  0100               	movlb	0	; () banked
 12045  015774  5973               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 12046  015776  0100               	movlb	0	; () banked
 12047  015778  5178               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 12048  01577A  0100               	movlb	0	; () banked
 12049  01577C  5974               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 12050  01577E  A0D8               	btfss	status,0,c
 12051  015780  D012               	goto	l8803
 12052                           
 12053                           ; BSR set to: 0
 12054  015782  0100               	movlb	0	; () banked
 12055  015784  5175               	movf	__div_to_l_@f2& (0+255),w,b
 12056  015786  0100               	movlb	0	; () banked
 12057  015788  5F71               	subwf	__div_to_l_@f1& (0+255),f,b
 12058  01578A  0100               	movlb	0	; () banked
 12059  01578C  5176               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 12060  01578E  0100               	movlb	0	; () banked
 12061  015790  5B72               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 12062  015792  0100               	movlb	0	; () banked
 12063  015794  5177               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 12064  015796  0100               	movlb	0	; () banked
 12065  015798  5B73               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 12066  01579A  0100               	movlb	0	; () banked
 12067  01579C  5178               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 12068  01579E  0100               	movlb	0	; () banked
 12069  0157A0  5B74               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 12070                           
 12071                           ; BSR set to: 0
 12072  0157A2  0100               	movlb	0	; () banked
 12073  0157A4  8179               	bsf	__div_to_l_@quot& (0+255),0,b
 12074  0157A6                     l8803:
 12075                           
 12076                           ; BSR set to: 0
 12077  0157A6  0100               	movlb	0	; () banked
 12078  0157A8  90D8               	bcf	status,0,c
 12079  0157AA  3771               	rlcf	__div_to_l_@f1& (0+255),f,b
 12080  0157AC  3772               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 12081  0157AE  3773               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 12082  0157B0  3774               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 12083                           
 12084                           ; BSR set to: 0
 12085  0157B2  0100               	movlb	0	; () banked
 12086  0157B4  2F7D               	decfsz	__div_to_l_@cntr& (0+255),f,b
 12087  0157B6  D7CD               	goto	l8795
 12088                           
 12089                           ; BSR set to: 0
 12090                           
 12091                           ; BSR set to: 0
 12092  0157B8  0100               	movlb	0	; () banked
 12093  0157BA  AF7E               	btfss	__div_to_l_@exp1& (0+255),7,b
 12094  0157BC  D01A               	goto	l8819
 12095                           
 12096                           ; BSR set to: 0
 12097  0157BE  0100               	movlb	0	; () banked
 12098  0157C0  517E               	movf	__div_to_l_@exp1& (0+255),w,b
 12099  0157C2  0A80               	xorlw	128
 12100  0157C4  0F9F               	addlw	159
 12101  0157C6  B0D8               	btfsc	status,0,c
 12102  0157C8  D00A               	goto	l8815
 12103                           
 12104                           ; BSR set to: 0
 12105  0157CA  0E00               	movlw	0
 12106  0157CC  0100               	movlb	0	; () banked
 12107  0157CE  6F71               	movwf	?__div_to_l_& (0+255),b
 12108  0157D0  0E00               	movlw	0
 12109  0157D2  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 12110  0157D4  0E00               	movlw	0
 12111  0157D6  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 12112  0157D8  0E00               	movlw	0
 12113  0157DA  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 12114                           
 12115                           ; BSR set to: 0
 12116  0157DC  0012               	return	
 12117  0157DE                     l8815:
 12118                           
 12119                           ; BSR set to: 0
 12120  0157DE  0100               	movlb	0	; () banked
 12121  0157E0  90D8               	bcf	status,0,c
 12122  0157E2  337C               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 12123  0157E4  337B               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 12124  0157E6  337A               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 12125  0157E8  3379               	rrcf	__div_to_l_@quot& (0+255),f,b
 12126                           
 12127                           ; BSR set to: 0
 12128  0157EA  0100               	movlb	0	; () banked
 12129  0157EC  3F7E               	incfsz	__div_to_l_@exp1& (0+255),f,b
 12130  0157EE  D7F7               	goto	l8815
 12131                           
 12132                           ; BSR set to: 0
 12133  0157F0  D01B               	goto	l1296
 12134  0157F2                     l8819:
 12135                           
 12136                           ; BSR set to: 0
 12137  0157F2  0E1F               	movlw	31
 12138  0157F4  0100               	movlb	0	; () banked
 12139  0157F6  657E               	cpfsgt	__div_to_l_@exp1& (0+255),b
 12140  0157F8  D012               	goto	l8827
 12141                           
 12142                           ; BSR set to: 0
 12143  0157FA  0E00               	movlw	0
 12144  0157FC  0100               	movlb	0	; () banked
 12145  0157FE  6F71               	movwf	?__div_to_l_& (0+255),b
 12146  015800  0E00               	movlw	0
 12147  015802  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 12148  015804  0E00               	movlw	0
 12149  015806  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 12150  015808  0E00               	movlw	0
 12151  01580A  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 12152                           
 12153                           ; BSR set to: 0
 12154  01580C  0012               	return	
 12155  01580E                     l8825:
 12156                           
 12157                           ; BSR set to: 0
 12158  01580E  0100               	movlb	0	; () banked
 12159  015810  90D8               	bcf	status,0,c
 12160  015812  3779               	rlcf	__div_to_l_@quot& (0+255),f,b
 12161  015814  377A               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 12162  015816  377B               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 12163  015818  377C               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 12164  01581A  0100               	movlb	0	; () banked
 12165  01581C  077E               	decf	__div_to_l_@exp1& (0+255),f,b
 12166  01581E                     l8827:
 12167                           
 12168                           ; BSR set to: 0
 12169  01581E  0100               	movlb	0	; () banked
 12170  015820  517E               	movf	__div_to_l_@exp1& (0+255),w,b
 12171  015822  0100               	movlb	0	; () banked
 12172  015824  A4D8               	btfss	status,2,c
 12173  015826  D7F3               	goto	l8825
 12174  015828                     l1296:
 12175                           
 12176                           ; BSR set to: 0
 12177  015828  C079  F071         	movff	__div_to_l_@quot,?__div_to_l_
 12178  01582C  C07A  F072         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 12179  015830  C07B  F073         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 12180  015834  C07C  F074         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 12181                           
 12182                           ; BSR set to: 0
 12183  015838  0012               	return		;funcret
 12184  01583A                     __end_of__div_to_l_:
 12185                           	opt stack 0
 12186                           tblptru	equ	0xFF8
 12187                           tblptrh	equ	0xFF7
 12188                           tblptrl	equ	0xFF6
 12189                           tablat	equ	0xFF5
 12190                           prodh	equ	0xFF4
 12191                           prodl	equ	0xFF3
 12192                           intcon	equ	0xFF2
 12193                           postinc0	equ	0xFEE
 12194                           wreg	equ	0xFE8
 12195                           indf2	equ	0xFDF
 12196                           postinc2	equ	0xFDE
 12197                           fsr2h	equ	0xFDA
 12198                           fsr2l	equ	0xFD9
 12199                           status	equ	0xFD8
 12200                           
 12201 ;; *************** function ___xxtofl *****************
 12202 ;; Defined at:
 12203 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\xxtofl.c"
 12204 ;; Parameters:    Size  Location     Type
 12205 ;;  sign            1    wreg     unsigned char 
 12206 ;;  val             4   17[BANK0 ] long 
 12207 ;; Auto vars:     Size  Location     Type
 12208 ;;  sign            1   25[BANK0 ] unsigned char 
 12209 ;;  arg             4   27[BANK0 ] unsigned long 
 12210 ;;  exp             1   26[BANK0 ] unsigned char 
 12211 ;; Return value:  Size  Location     Type
 12212 ;;                  4   17[BANK0 ] unsigned char 
 12213 ;; Registers used:
 12214 ;;		wreg, status,2, status,0
 12215 ;; Tracked objects:
 12216 ;;		On entry : 0/0
 12217 ;;		On exit  : 0/0
 12218 ;;		Unchanged: 0/0
 12219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12220 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12221 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12222 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12223 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12224 ;;Total ram usage:       14 bytes
 12225 ;; Hardware stack levels used:    1
 12226 ;; Hardware stack levels required when called:    3
 12227 ;; This function calls:
 12228 ;;		Nothing
 12229 ;; This function is called by:
 12230 ;;		_main
 12231 ;;		_LCD_Handler
 12232 ;;		_sprintf
 12233 ;; This function uses a non-reentrant model
 12234 ;;
 12235                           
 12236                           	psect	text19
 12237  014E30                     __ptext19:
 12238                           	opt stack 0
 12239  014E30                     ___xxtofl:
 12240                           	opt stack 27
 12241                           
 12242                           ; BSR set to: 0
 12243                           ;incstack = 0
 12244                           ;___xxtofl@sign stored from wreg
 12245  014E30  0100               	movlb	0	; () banked
 12246  014E32  6F79               	movwf	___xxtofl@sign& (0+255),b
 12247  014E34  0100               	movlb	0	; () banked
 12248  014E36  5179               	movf	___xxtofl@sign& (0+255),w,b
 12249  014E38  0100               	movlb	0	; () banked
 12250  014E3A  B4D8               	btfsc	status,2,c
 12251  014E3C  D01E               	goto	l1691
 12252                           
 12253                           ; BSR set to: 0
 12254  014E3E  0100               	movlb	0	; () banked
 12255  014E40  AF74               	btfss	(___xxtofl@val+3)& (0+255),7,b
 12256  014E42  D01B               	goto	l1691
 12257                           
 12258                           ; BSR set to: 0
 12259  014E44  C071  F075         	movff	___xxtofl@val,??___xxtofl
 12260  014E48  C072  F076         	movff	___xxtofl@val+1,??___xxtofl+1
 12261  014E4C  C073  F077         	movff	___xxtofl@val+2,??___xxtofl+2
 12262  014E50  C074  F078         	movff	___xxtofl@val+3,??___xxtofl+3
 12263  014E54  0100               	movlb	0	; () banked
 12264  014E56  1F75               	comf	??___xxtofl& (0+255),f,b
 12265  014E58  1F76               	comf	(??___xxtofl+1)& (0+255),f,b
 12266  014E5A  1F77               	comf	(??___xxtofl+2)& (0+255),f,b
 12267  014E5C  1F78               	comf	(??___xxtofl+3)& (0+255),f,b
 12268  014E5E  2B75               	incf	??___xxtofl& (0+255),f,b
 12269  014E60  0E00               	movlw	0
 12270  014E62  2376               	addwfc	(??___xxtofl+1)& (0+255),f,b
 12271  014E64  2377               	addwfc	(??___xxtofl+2)& (0+255),f,b
 12272  014E66  2378               	addwfc	(??___xxtofl+3)& (0+255),f,b
 12273  014E68  C075  F07B         	movff	??___xxtofl,___xxtofl@arg
 12274  014E6C  C076  F07C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12275  014E70  C077  F07D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12276  014E74  C078  F07E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12277  014E78  D008               	goto	l8953
 12278  014E7A                     l1691:
 12279                           
 12280                           ; BSR set to: 0
 12281  014E7A  C071  F07B         	movff	___xxtofl@val,___xxtofl@arg
 12282  014E7E  C072  F07C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12283  014E82  C073  F07D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12284  014E86  C074  F07E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12285  014E8A                     l8953:
 12286                           
 12287                           ; BSR set to: 0
 12288  014E8A  0100               	movlb	0	; () banked
 12289  014E8C  5171               	movf	___xxtofl@val& (0+255),w,b
 12290  014E8E  0100               	movlb	0	; () banked
 12291  014E90  1172               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 12292  014E92  0100               	movlb	0	; () banked
 12293  014E94  1173               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 12294  014E96  0100               	movlb	0	; () banked
 12295  014E98  1174               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 12296  014E9A  A4D8               	btfss	status,2,c
 12297  014E9C  D00A               	goto	l8959
 12298                           
 12299                           ; BSR set to: 0
 12300  014E9E  0E00               	movlw	0
 12301  014EA0  0100               	movlb	0	; () banked
 12302  014EA2  6F71               	movwf	?___xxtofl& (0+255),b
 12303  014EA4  0E00               	movlw	0
 12304  014EA6  6F72               	movwf	(?___xxtofl+1)& (0+255),b
 12305  014EA8  0E00               	movlw	0
 12306  014EAA  6F73               	movwf	(?___xxtofl+2)& (0+255),b
 12307  014EAC  0E00               	movlw	0
 12308  014EAE  6F74               	movwf	(?___xxtofl+3)& (0+255),b
 12309                           
 12310                           ; BSR set to: 0
 12311  014EB0  0012               	return	
 12312  014EB2                     l8959:
 12313                           
 12314                           ; BSR set to: 0
 12315  014EB2  0E96               	movlw	150
 12316  014EB4  0100               	movlb	0	; () banked
 12317  014EB6  6F7A               	movwf	___xxtofl@exp& (0+255),b
 12318  014EB8  D008               	goto	l8963
 12319  014EBA                     l8961:
 12320                           
 12321                           ; BSR set to: 0
 12322  014EBA  0100               	movlb	0	; () banked
 12323  014EBC  2B7A               	incf	___xxtofl@exp& (0+255),f,b
 12324  014EBE  0100               	movlb	0	; () banked
 12325  014EC0  90D8               	bcf	status,0,c
 12326  014EC2  337E               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 12327  014EC4  337D               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 12328  014EC6  337C               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 12329  014EC8  337B               	rrcf	___xxtofl@arg& (0+255),f,b
 12330  014ECA                     l8963:
 12331                           
 12332                           ; BSR set to: 0
 12333  014ECA  0E00               	movlw	0
 12334  014ECC  0100               	movlb	0	; () banked
 12335  014ECE  157B               	andwf	___xxtofl@arg& (0+255),w,b
 12336  014ED0  0100               	movlb	0	; () banked
 12337  014ED2  6F75               	movwf	??___xxtofl& (0+255),b
 12338  014ED4  0E00               	movlw	0
 12339  014ED6  0100               	movlb	0	; () banked
 12340  014ED8  157C               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 12341  014EDA  0100               	movlb	0	; () banked
 12342  014EDC  6F76               	movwf	(??___xxtofl+1)& (0+255),b
 12343  014EDE  0E00               	movlw	0
 12344  014EE0  0100               	movlb	0	; () banked
 12345  014EE2  157D               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 12346  014EE4  0100               	movlb	0	; () banked
 12347  014EE6  6F77               	movwf	(??___xxtofl+2)& (0+255),b
 12348  014EE8  0EFE               	movlw	254
 12349  014EEA  0100               	movlb	0	; () banked
 12350  014EEC  157E               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 12351  014EEE  0100               	movlb	0	; () banked
 12352  014EF0  6F78               	movwf	(??___xxtofl+3)& (0+255),b
 12353  014EF2  0100               	movlb	0	; () banked
 12354  014EF4  5175               	movf	??___xxtofl& (0+255),w,b
 12355  014EF6  0100               	movlb	0	; () banked
 12356  014EF8  1176               	iorwf	(??___xxtofl+1)& (0+255),w,b
 12357  014EFA  0100               	movlb	0	; () banked
 12358  014EFC  1177               	iorwf	(??___xxtofl+2)& (0+255),w,b
 12359  014EFE  0100               	movlb	0	; () banked
 12360  014F00  1178               	iorwf	(??___xxtofl+3)& (0+255),w,b
 12361  014F02  B4D8               	btfsc	status,2,c
 12362  014F04  D010               	goto	l1698
 12363  014F06  D7D9               	goto	l8961
 12364  014F08                     l8965:
 12365                           
 12366                           ; BSR set to: 0
 12367  014F08  0100               	movlb	0	; () banked
 12368  014F0A  2B7A               	incf	___xxtofl@exp& (0+255),f,b
 12369                           
 12370                           ; BSR set to: 0
 12371  014F0C  0E01               	movlw	1
 12372  014F0E  0100               	movlb	0	; () banked
 12373  014F10  277B               	addwf	___xxtofl@arg& (0+255),f,b
 12374  014F12  0E00               	movlw	0
 12375  014F14  237C               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 12376  014F16  237D               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 12377  014F18  237E               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 12378                           
 12379                           ; BSR set to: 0
 12380  014F1A  0100               	movlb	0	; () banked
 12381  014F1C  90D8               	bcf	status,0,c
 12382  014F1E  337E               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 12383  014F20  337D               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 12384  014F22  337C               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 12385  014F24  337B               	rrcf	___xxtofl@arg& (0+255),f,b
 12386  014F26                     l1698:
 12387                           
 12388                           ; BSR set to: 0
 12389  014F26  0E00               	movlw	0
 12390  014F28  0100               	movlb	0	; () banked
 12391  014F2A  157B               	andwf	___xxtofl@arg& (0+255),w,b
 12392  014F2C  0100               	movlb	0	; () banked
 12393  014F2E  6F75               	movwf	??___xxtofl& (0+255),b
 12394  014F30  0E00               	movlw	0
 12395  014F32  0100               	movlb	0	; () banked
 12396  014F34  157C               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 12397  014F36  0100               	movlb	0	; () banked
 12398  014F38  6F76               	movwf	(??___xxtofl+1)& (0+255),b
 12399  014F3A  0E00               	movlw	0
 12400  014F3C  0100               	movlb	0	; () banked
 12401  014F3E  157D               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 12402  014F40  0100               	movlb	0	; () banked
 12403  014F42  6F77               	movwf	(??___xxtofl+2)& (0+255),b
 12404  014F44  0EFF               	movlw	255
 12405  014F46  0100               	movlb	0	; () banked
 12406  014F48  157E               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 12407  014F4A  0100               	movlb	0	; () banked
 12408  014F4C  6F78               	movwf	(??___xxtofl+3)& (0+255),b
 12409  014F4E  0100               	movlb	0	; () banked
 12410  014F50  5175               	movf	??___xxtofl& (0+255),w,b
 12411  014F52  0100               	movlb	0	; () banked
 12412  014F54  1176               	iorwf	(??___xxtofl+1)& (0+255),w,b
 12413  014F56  0100               	movlb	0	; () banked
 12414  014F58  1177               	iorwf	(??___xxtofl+2)& (0+255),w,b
 12415  014F5A  0100               	movlb	0	; () banked
 12416  014F5C  1178               	iorwf	(??___xxtofl+3)& (0+255),w,b
 12417  014F5E  B4D8               	btfsc	status,2,c
 12418  014F60  D009               	goto	l8973
 12419  014F62  D7D2               	goto	l8965
 12420  014F64                     l8971:
 12421                           
 12422                           ; BSR set to: 0
 12423  014F64  0100               	movlb	0	; () banked
 12424  014F66  077A               	decf	___xxtofl@exp& (0+255),f,b
 12425  014F68  0100               	movlb	0	; () banked
 12426  014F6A  90D8               	bcf	status,0,c
 12427  014F6C  377B               	rlcf	___xxtofl@arg& (0+255),f,b
 12428  014F6E  377C               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 12429  014F70  377D               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 12430  014F72  377E               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 12431  014F74                     l8973:
 12432                           
 12433                           ; BSR set to: 0
 12434  014F74  0100               	movlb	0	; () banked
 12435  014F76  BF7D               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 12436  014F78  D004               	goto	l1705
 12437                           
 12438                           ; BSR set to: 0
 12439  014F7A  0E02               	movlw	2
 12440  014F7C  0100               	movlb	0	; () banked
 12441  014F7E  617A               	cpfslt	___xxtofl@exp& (0+255),b
 12442  014F80  D7F1               	goto	l8971
 12443  014F82                     l1705:
 12444                           
 12445                           ; BSR set to: 0
 12446  014F82  0100               	movlb	0	; () banked
 12447  014F84  B17A               	btfsc	___xxtofl@exp& (0+255),0,b
 12448  014F86  D009               	goto	l1706
 12449                           
 12450                           ; BSR set to: 0
 12451  014F88  0EFF               	movlw	255
 12452  014F8A  0100               	movlb	0	; () banked
 12453  014F8C  177B               	andwf	___xxtofl@arg& (0+255),f,b
 12454  014F8E  0EFF               	movlw	255
 12455  014F90  177C               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 12456  014F92  0E7F               	movlw	127
 12457  014F94  177D               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 12458  014F96  0EFF               	movlw	255
 12459  014F98  177E               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 12460  014F9A                     l1706:
 12461                           
 12462                           ; BSR set to: 0
 12463  014F9A  0100               	movlb	0	; () banked
 12464  014F9C  90D8               	bcf	status,0,c
 12465  014F9E  337A               	rrcf	___xxtofl@exp& (0+255),f,b
 12466  014FA0  C07A  F075         	movff	___xxtofl@exp,??___xxtofl
 12467  014FA4  0100               	movlb	0	; () banked
 12468  014FA6  6B76               	clrf	(??___xxtofl+1)& (0+255),b
 12469  014FA8  6B77               	clrf	(??___xxtofl+2)& (0+255),b
 12470  014FAA  6B78               	clrf	(??___xxtofl+3)& (0+255),b
 12471  014FAC  C075  F078         	movff	??___xxtofl,??___xxtofl+3
 12472  014FB0  0100               	movlb	0	; () banked
 12473  014FB2  6B77               	clrf	(??___xxtofl+2)& (0+255),b
 12474  014FB4  6B76               	clrf	(??___xxtofl+1)& (0+255),b
 12475  014FB6  6B75               	clrf	??___xxtofl& (0+255),b
 12476  014FB8  0100               	movlb	0	; () banked
 12477  014FBA  5175               	movf	??___xxtofl& (0+255),w,b
 12478  014FBC  0100               	movlb	0	; () banked
 12479  014FBE  137B               	iorwf	___xxtofl@arg& (0+255),f,b
 12480  014FC0  0100               	movlb	0	; () banked
 12481  014FC2  5176               	movf	(??___xxtofl+1)& (0+255),w,b
 12482  014FC4  0100               	movlb	0	; () banked
 12483  014FC6  137C               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 12484  014FC8  0100               	movlb	0	; () banked
 12485  014FCA  5177               	movf	(??___xxtofl+2)& (0+255),w,b
 12486  014FCC  0100               	movlb	0	; () banked
 12487  014FCE  137D               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 12488  014FD0  0100               	movlb	0	; () banked
 12489  014FD2  5178               	movf	(??___xxtofl+3)& (0+255),w,b
 12490  014FD4  0100               	movlb	0	; () banked
 12491  014FD6  137E               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 12492                           
 12493                           ; BSR set to: 0
 12494  014FD8  0100               	movlb	0	; () banked
 12495  014FDA  5179               	movf	___xxtofl@sign& (0+255),w,b
 12496  014FDC  0100               	movlb	0	; () banked
 12497  014FDE  B4D8               	btfsc	status,2,c
 12498  014FE0  D005               	goto	l8985
 12499                           
 12500                           ; BSR set to: 0
 12501  014FE2  0100               	movlb	0	; () banked
 12502  014FE4  AF74               	btfss	(___xxtofl@val+3)& (0+255),7,b
 12503  014FE6  D002               	goto	l8985
 12504                           
 12505                           ; BSR set to: 0
 12506  014FE8  0100               	movlb	0	; () banked
 12507  014FEA  8F7E               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 12508  014FEC                     l8985:
 12509                           
 12510                           ; BSR set to: 0
 12511  014FEC  C07B  F071         	movff	___xxtofl@arg,?___xxtofl
 12512  014FF0  C07C  F072         	movff	___xxtofl@arg+1,?___xxtofl+1
 12513  014FF4  C07D  F073         	movff	___xxtofl@arg+2,?___xxtofl+2
 12514  014FF8  C07E  F074         	movff	___xxtofl@arg+3,?___xxtofl+3
 12515  014FFC  0012               	return	
 12516  014FFE                     __end_of___xxtofl:
 12517                           	opt stack 0
 12518                           tblptru	equ	0xFF8
 12519                           tblptrh	equ	0xFF7
 12520                           tblptrl	equ	0xFF6
 12521                           tablat	equ	0xFF5
 12522                           prodh	equ	0xFF4
 12523                           prodl	equ	0xFF3
 12524                           intcon	equ	0xFF2
 12525                           postinc0	equ	0xFEE
 12526                           wreg	equ	0xFE8
 12527                           indf2	equ	0xFDF
 12528                           postinc2	equ	0xFDE
 12529                           fsr2h	equ	0xFDA
 12530                           fsr2l	equ	0xFD9
 12531                           status	equ	0xFD8
 12532                           
 12533 ;; *************** function ___llmod *****************
 12534 ;; Defined at:
 12535 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\llmod.c"
 12536 ;; Parameters:    Size  Location     Type
 12537 ;;  dividend        4   17[BANK0 ] unsigned long 
 12538 ;;  divisor         4   21[BANK0 ] unsigned long 
 12539 ;; Auto vars:     Size  Location     Type
 12540 ;;  counter         1   25[BANK0 ] unsigned char 
 12541 ;; Return value:  Size  Location     Type
 12542 ;;                  4   17[BANK0 ] unsigned long 
 12543 ;; Registers used:
 12544 ;;		wreg, status,2, status,0
 12545 ;; Tracked objects:
 12546 ;;		On entry : 0/0
 12547 ;;		On exit  : 0/0
 12548 ;;		Unchanged: 0/0
 12549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12550 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12551 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12553 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12554 ;;Total ram usage:        9 bytes
 12555 ;; Hardware stack levels used:    1
 12556 ;; Hardware stack levels required when called:    3
 12557 ;; This function calls:
 12558 ;;		Nothing
 12559 ;; This function is called by:
 12560 ;;		_sprintf
 12561 ;; This function uses a non-reentrant model
 12562 ;;
 12563                           
 12564                           	psect	text20
 12565  015FD8                     __ptext20:
 12566                           	opt stack 0
 12567  015FD8                     ___llmod:
 12568                           	opt stack 25
 12569                           
 12570                           ; BSR set to: 0
 12571                           ;incstack = 0
 12572  015FD8  0100               	movlb	0	; () banked
 12573  015FDA  5175               	movf	___llmod@divisor& (0+255),w,b
 12574  015FDC  0100               	movlb	0	; () banked
 12575  015FDE  1176               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 12576  015FE0  0100               	movlb	0	; () banked
 12577  015FE2  1177               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 12578  015FE4  0100               	movlb	0	; () banked
 12579  015FE6  1178               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 12580  015FE8  B4D8               	btfsc	status,2,c
 12581  015FEA  D03A               	goto	l1499
 12582                           
 12583                           ; BSR set to: 0
 12584  015FEC  0E01               	movlw	1
 12585  015FEE  0100               	movlb	0	; () banked
 12586  015FF0  6F79               	movwf	___llmod@counter& (0+255),b
 12587  015FF2  D008               	goto	l8937
 12588  015FF4                     l8935:
 12589                           
 12590                           ; BSR set to: 0
 12591  015FF4  0100               	movlb	0	; () banked
 12592  015FF6  90D8               	bcf	status,0,c
 12593  015FF8  3775               	rlcf	___llmod@divisor& (0+255),f,b
 12594  015FFA  3776               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 12595  015FFC  3777               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 12596  015FFE  3778               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 12597  016000  0100               	movlb	0	; () banked
 12598  016002  2B79               	incf	___llmod@counter& (0+255),f,b
 12599  016004                     l8937:
 12600                           
 12601                           ; BSR set to: 0
 12602  016004  0100               	movlb	0	; () banked
 12603  016006  AF78               	btfss	(___llmod@divisor+3)& (0+255),7,b
 12604  016008  D7F5               	goto	l8935
 12605  01600A                     l8939:
 12606                           
 12607                           ; BSR set to: 0
 12608  01600A  0100               	movlb	0	; () banked
 12609  01600C  5175               	movf	___llmod@divisor& (0+255),w,b
 12610  01600E  0100               	movlb	0	; () banked
 12611  016010  5D71               	subwf	___llmod@dividend& (0+255),w,b
 12612  016012  0100               	movlb	0	; () banked
 12613  016014  5176               	movf	(___llmod@divisor+1)& (0+255),w,b
 12614  016016  0100               	movlb	0	; () banked
 12615  016018  5972               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 12616  01601A  0100               	movlb	0	; () banked
 12617  01601C  5177               	movf	(___llmod@divisor+2)& (0+255),w,b
 12618  01601E  0100               	movlb	0	; () banked
 12619  016020  5973               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 12620  016022  0100               	movlb	0	; () banked
 12621  016024  5178               	movf	(___llmod@divisor+3)& (0+255),w,b
 12622  016026  0100               	movlb	0	; () banked
 12623  016028  5974               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 12624  01602A  A0D8               	btfss	status,0,c
 12625  01602C  D010               	goto	l8943
 12626                           
 12627                           ; BSR set to: 0
 12628  01602E  0100               	movlb	0	; () banked
 12629  016030  5175               	movf	___llmod@divisor& (0+255),w,b
 12630  016032  0100               	movlb	0	; () banked
 12631  016034  5F71               	subwf	___llmod@dividend& (0+255),f,b
 12632  016036  0100               	movlb	0	; () banked
 12633  016038  5176               	movf	(___llmod@divisor+1)& (0+255),w,b
 12634  01603A  0100               	movlb	0	; () banked
 12635  01603C  5B72               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 12636  01603E  0100               	movlb	0	; () banked
 12637  016040  5177               	movf	(___llmod@divisor+2)& (0+255),w,b
 12638  016042  0100               	movlb	0	; () banked
 12639  016044  5B73               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 12640  016046  0100               	movlb	0	; () banked
 12641  016048  5178               	movf	(___llmod@divisor+3)& (0+255),w,b
 12642  01604A  0100               	movlb	0	; () banked
 12643  01604C  5B74               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 12644  01604E                     l8943:
 12645                           
 12646                           ; BSR set to: 0
 12647  01604E  0100               	movlb	0	; () banked
 12648  016050  90D8               	bcf	status,0,c
 12649  016052  3378               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 12650  016054  3377               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 12651  016056  3376               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 12652  016058  3375               	rrcf	___llmod@divisor& (0+255),f,b
 12653                           
 12654                           ; BSR set to: 0
 12655  01605A  0100               	movlb	0	; () banked
 12656  01605C  2F79               	decfsz	___llmod@counter& (0+255),f,b
 12657  01605E  D7D5               	goto	l8939
 12658  016060                     l1499:
 12659                           
 12660                           ; BSR set to: 0
 12661  016060  C071  F071         	movff	___llmod@dividend,?___llmod
 12662  016064  C072  F072         	movff	___llmod@dividend+1,?___llmod+1
 12663  016068  C073  F073         	movff	___llmod@dividend+2,?___llmod+2
 12664  01606C  C074  F074         	movff	___llmod@dividend+3,?___llmod+3
 12665                           
 12666                           ; BSR set to: 0
 12667  016070  0012               	return		;funcret
 12668  016072                     __end_of___llmod:
 12669                           	opt stack 0
 12670                           tblptru	equ	0xFF8
 12671                           tblptrh	equ	0xFF7
 12672                           tblptrl	equ	0xFF6
 12673                           tablat	equ	0xFF5
 12674                           prodh	equ	0xFF4
 12675                           prodl	equ	0xFF3
 12676                           intcon	equ	0xFF2
 12677                           postinc0	equ	0xFEE
 12678                           wreg	equ	0xFE8
 12679                           indf2	equ	0xFDF
 12680                           postinc2	equ	0xFDE
 12681                           fsr2h	equ	0xFDA
 12682                           fsr2l	equ	0xFD9
 12683                           status	equ	0xFD8
 12684                           
 12685 ;; *************** function ___lldiv *****************
 12686 ;; Defined at:
 12687 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lldiv.c"
 12688 ;; Parameters:    Size  Location     Type
 12689 ;;  dividend        4   17[BANK0 ] unsigned long 
 12690 ;;  divisor         4   21[BANK0 ] unsigned long 
 12691 ;; Auto vars:     Size  Location     Type
 12692 ;;  quotient        4   25[BANK0 ] unsigned long 
 12693 ;;  counter         1   29[BANK0 ] unsigned char 
 12694 ;; Return value:  Size  Location     Type
 12695 ;;                  4   17[BANK0 ] unsigned long 
 12696 ;; Registers used:
 12697 ;;		wreg, status,2, status,0
 12698 ;; Tracked objects:
 12699 ;;		On entry : 0/0
 12700 ;;		On exit  : 0/0
 12701 ;;		Unchanged: 0/0
 12702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12703 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12704 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12706 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12707 ;;Total ram usage:       13 bytes
 12708 ;; Hardware stack levels used:    1
 12709 ;; Hardware stack levels required when called:    3
 12710 ;; This function calls:
 12711 ;;		Nothing
 12712 ;; This function is called by:
 12713 ;;		_sprintf
 12714 ;; This function uses a non-reentrant model
 12715 ;;
 12716                           
 12717                           	psect	text21
 12718  015D1C                     __ptext21:
 12719                           	opt stack 0
 12720  015D1C                     ___lldiv:
 12721                           	opt stack 25
 12722                           
 12723                           ; BSR set to: 0
 12724                           ;incstack = 0
 12725  015D1C  0E00               	movlw	0
 12726  015D1E  0100               	movlb	0	; () banked
 12727  015D20  6F79               	movwf	___lldiv@quotient& (0+255),b
 12728  015D22  0E00               	movlw	0
 12729  015D24  6F7A               	movwf	(___lldiv@quotient+1)& (0+255),b
 12730  015D26  0E00               	movlw	0
 12731  015D28  6F7B               	movwf	(___lldiv@quotient+2)& (0+255),b
 12732  015D2A  0E00               	movlw	0
 12733  015D2C  6F7C               	movwf	(___lldiv@quotient+3)& (0+255),b
 12734                           
 12735                           ; BSR set to: 0
 12736  015D2E  0100               	movlb	0	; () banked
 12737  015D30  5175               	movf	___lldiv@divisor& (0+255),w,b
 12738  015D32  0100               	movlb	0	; () banked
 12739  015D34  1176               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12740  015D36  0100               	movlb	0	; () banked
 12741  015D38  1177               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12742  015D3A  0100               	movlb	0	; () banked
 12743  015D3C  1178               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12744  015D3E  B4D8               	btfsc	status,2,c
 12745  015D40  D042               	goto	l1489
 12746                           
 12747                           ; BSR set to: 0
 12748  015D42  0E01               	movlw	1
 12749  015D44  0100               	movlb	0	; () banked
 12750  015D46  6F7D               	movwf	___lldiv@counter& (0+255),b
 12751  015D48  D008               	goto	l8917
 12752  015D4A                     l8915:
 12753                           
 12754                           ; BSR set to: 0
 12755  015D4A  0100               	movlb	0	; () banked
 12756  015D4C  90D8               	bcf	status,0,c
 12757  015D4E  3775               	rlcf	___lldiv@divisor& (0+255),f,b
 12758  015D50  3776               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12759  015D52  3777               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12760  015D54  3778               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12761  015D56  0100               	movlb	0	; () banked
 12762  015D58  2B7D               	incf	___lldiv@counter& (0+255),f,b
 12763  015D5A                     l8917:
 12764                           
 12765                           ; BSR set to: 0
 12766  015D5A  0100               	movlb	0	; () banked
 12767  015D5C  AF78               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12768  015D5E  D7F5               	goto	l8915
 12769  015D60                     l8919:
 12770                           
 12771                           ; BSR set to: 0
 12772  015D60  0100               	movlb	0	; () banked
 12773  015D62  90D8               	bcf	status,0,c
 12774  015D64  3779               	rlcf	___lldiv@quotient& (0+255),f,b
 12775  015D66  377A               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12776  015D68  377B               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12777  015D6A  377C               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12778                           
 12779                           ; BSR set to: 0
 12780  015D6C  0100               	movlb	0	; () banked
 12781  015D6E  5175               	movf	___lldiv@divisor& (0+255),w,b
 12782  015D70  0100               	movlb	0	; () banked
 12783  015D72  5D71               	subwf	___lldiv@dividend& (0+255),w,b
 12784  015D74  0100               	movlb	0	; () banked
 12785  015D76  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12786  015D78  0100               	movlb	0	; () banked
 12787  015D7A  5972               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12788  015D7C  0100               	movlb	0	; () banked
 12789  015D7E  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12790  015D80  0100               	movlb	0	; () banked
 12791  015D82  5973               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12792  015D84  0100               	movlb	0	; () banked
 12793  015D86  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12794  015D88  0100               	movlb	0	; () banked
 12795  015D8A  5974               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12796  015D8C  A0D8               	btfss	status,0,c
 12797  015D8E  D012               	goto	l8927
 12798                           
 12799                           ; BSR set to: 0
 12800  015D90  0100               	movlb	0	; () banked
 12801  015D92  5175               	movf	___lldiv@divisor& (0+255),w,b
 12802  015D94  0100               	movlb	0	; () banked
 12803  015D96  5F71               	subwf	___lldiv@dividend& (0+255),f,b
 12804  015D98  0100               	movlb	0	; () banked
 12805  015D9A  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12806  015D9C  0100               	movlb	0	; () banked
 12807  015D9E  5B72               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12808  015DA0  0100               	movlb	0	; () banked
 12809  015DA2  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12810  015DA4  0100               	movlb	0	; () banked
 12811  015DA6  5B73               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12812  015DA8  0100               	movlb	0	; () banked
 12813  015DAA  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12814  015DAC  0100               	movlb	0	; () banked
 12815  015DAE  5B74               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12816                           
 12817                           ; BSR set to: 0
 12818  015DB0  0100               	movlb	0	; () banked
 12819  015DB2  8179               	bsf	___lldiv@quotient& (0+255),0,b
 12820  015DB4                     l8927:
 12821                           
 12822                           ; BSR set to: 0
 12823  015DB4  0100               	movlb	0	; () banked
 12824  015DB6  90D8               	bcf	status,0,c
 12825  015DB8  3378               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12826  015DBA  3377               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12827  015DBC  3376               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12828  015DBE  3375               	rrcf	___lldiv@divisor& (0+255),f,b
 12829                           
 12830                           ; BSR set to: 0
 12831  015DC0  0100               	movlb	0	; () banked
 12832  015DC2  2F7D               	decfsz	___lldiv@counter& (0+255),f,b
 12833  015DC4  D7CD               	goto	l8919
 12834  015DC6                     l1489:
 12835                           
 12836                           ; BSR set to: 0
 12837  015DC6  C079  F071         	movff	___lldiv@quotient,?___lldiv
 12838  015DCA  C07A  F072         	movff	___lldiv@quotient+1,?___lldiv+1
 12839  015DCE  C07B  F073         	movff	___lldiv@quotient+2,?___lldiv+2
 12840  015DD2  C07C  F074         	movff	___lldiv@quotient+3,?___lldiv+3
 12841                           
 12842                           ; BSR set to: 0
 12843  015DD6  0012               	return		;funcret
 12844  015DD8                     __end_of___lldiv:
 12845                           	opt stack 0
 12846                           tblptru	equ	0xFF8
 12847                           tblptrh	equ	0xFF7
 12848                           tblptrl	equ	0xFF6
 12849                           tablat	equ	0xFF5
 12850                           prodh	equ	0xFF4
 12851                           prodl	equ	0xFF3
 12852                           intcon	equ	0xFF2
 12853                           postinc0	equ	0xFEE
 12854                           wreg	equ	0xFE8
 12855                           indf2	equ	0xFDF
 12856                           postinc2	equ	0xFDE
 12857                           fsr2h	equ	0xFDA
 12858                           fsr2l	equ	0xFD9
 12859                           status	equ	0xFD8
 12860                           
 12861 ;; *************** function ___fltol *****************
 12862 ;; Defined at:
 12863 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fltol.c"
 12864 ;; Parameters:    Size  Location     Type
 12865 ;;  f1              4   89[BANK0 ] unsigned long 
 12866 ;; Auto vars:     Size  Location     Type
 12867 ;;  exp1            1   98[BANK0 ] unsigned char 
 12868 ;;  sign1           1   97[BANK0 ] unsigned char 
 12869 ;; Return value:  Size  Location     Type
 12870 ;;                  4   89[BANK0 ] long 
 12871 ;; Registers used:
 12872 ;;		wreg, status,2, status,0
 12873 ;; Tracked objects:
 12874 ;;		On entry : 0/0
 12875 ;;		On exit  : 0/0
 12876 ;;		Unchanged: 0/0
 12877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12878 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12879 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12880 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12881 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12882 ;;Total ram usage:       10 bytes
 12883 ;; Hardware stack levels used:    1
 12884 ;; Hardware stack levels required when called:    3
 12885 ;; This function calls:
 12886 ;;		Nothing
 12887 ;; This function is called by:
 12888 ;;		_main
 12889 ;;		_sprintf
 12890 ;; This function uses a non-reentrant model
 12891 ;;
 12892                           
 12893                           	psect	text22
 12894  0159A8                     __ptext22:
 12895                           	opt stack 0
 12896  0159A8                     ___fltol:
 12897                           	opt stack 27
 12898                           
 12899                           ; BSR set to: 0
 12900                           ;incstack = 0
 12901  0159A8  0100               	movlb	0	; () banked
 12902  0159AA  35BB               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12903  0159AC  35BC               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12904  0159AE  0100               	movlb	0	; () banked
 12905  0159B0  6FC2               	movwf	___fltol@exp1& (0+255),b
 12906  0159B2  0100               	movlb	0	; () banked
 12907  0159B4  51C2               	movf	___fltol@exp1& (0+255),w,b
 12908  0159B6  A4D8               	btfss	status,2,c
 12909  0159B8  D00A               	goto	l8871
 12910                           
 12911                           ; BSR set to: 0
 12912  0159BA  0E00               	movlw	0
 12913  0159BC  0100               	movlb	0	; () banked
 12914  0159BE  6FB9               	movwf	?___fltol& (0+255),b
 12915  0159C0  0E00               	movlw	0
 12916  0159C2  6FBA               	movwf	(?___fltol+1)& (0+255),b
 12917  0159C4  0E00               	movlw	0
 12918  0159C6  6FBB               	movwf	(?___fltol+2)& (0+255),b
 12919  0159C8  0E00               	movlw	0
 12920  0159CA  6FBC               	movwf	(?___fltol+3)& (0+255),b
 12921                           
 12922                           ; BSR set to: 0
 12923  0159CC  0012               	return	
 12924  0159CE                     l8871:
 12925                           
 12926                           ; BSR set to: 0
 12927  0159CE  C0B9  F0BD         	movff	___fltol@f1,??___fltol
 12928  0159D2  C0BA  F0BE         	movff	___fltol@f1+1,??___fltol+1
 12929  0159D6  C0BB  F0BF         	movff	___fltol@f1+2,??___fltol+2
 12930  0159DA  C0BC  F0C0         	movff	___fltol@f1+3,??___fltol+3
 12931  0159DE  0E20               	movlw	32
 12932  0159E0  D006               	goto	u11880
 12933  0159E2                     u11885:
 12934  0159E2  0100               	movlb	0	; () banked
 12935  0159E4  90D8               	bcf	status,0,c
 12936  0159E6  33C0               	rrcf	(??___fltol+3)& (0+255),f,b
 12937  0159E8  33BF               	rrcf	(??___fltol+2)& (0+255),f,b
 12938  0159EA  33BE               	rrcf	(??___fltol+1)& (0+255),f,b
 12939  0159EC  33BD               	rrcf	??___fltol& (0+255),f,b
 12940  0159EE                     u11880:
 12941  0159EE  2EE8               	decfsz	wreg,f,c
 12942  0159F0  D7F8               	goto	u11885
 12943  0159F2  0100               	movlb	0	; () banked
 12944  0159F4  51BD               	movf	??___fltol& (0+255),w,b
 12945  0159F6  0100               	movlb	0	; () banked
 12946  0159F8  6FC1               	movwf	___fltol@sign1& (0+255),b
 12947                           
 12948                           ; BSR set to: 0
 12949  0159FA  0100               	movlb	0	; () banked
 12950  0159FC  8FBB               	bsf	(___fltol@f1+2)& (0+255),7,b
 12951                           
 12952                           ; BSR set to: 0
 12953  0159FE  0EFF               	movlw	255
 12954  015A00  0100               	movlb	0	; () banked
 12955  015A02  17B9               	andwf	___fltol@f1& (0+255),f,b
 12956  015A04  0EFF               	movlw	255
 12957  015A06  17BA               	andwf	(___fltol@f1+1)& (0+255),f,b
 12958  015A08  0EFF               	movlw	255
 12959  015A0A  17BB               	andwf	(___fltol@f1+2)& (0+255),f,b
 12960  015A0C  0E00               	movlw	0
 12961  015A0E  17BC               	andwf	(___fltol@f1+3)& (0+255),f,b
 12962                           
 12963                           ; BSR set to: 0
 12964  015A10  0E96               	movlw	150
 12965  015A12  0100               	movlb	0	; () banked
 12966  015A14  5FC2               	subwf	___fltol@exp1& (0+255),f,b
 12967                           
 12968                           ; BSR set to: 0
 12969  015A16  0100               	movlb	0	; () banked
 12970  015A18  AFC2               	btfss	___fltol@exp1& (0+255),7,b
 12971  015A1A  D01A               	goto	l8891
 12972                           
 12973                           ; BSR set to: 0
 12974  015A1C  0100               	movlb	0	; () banked
 12975  015A1E  51C2               	movf	___fltol@exp1& (0+255),w,b
 12976  015A20  0A80               	xorlw	128
 12977  015A22  0F97               	addlw	151
 12978  015A24  B0D8               	btfsc	status,0,c
 12979  015A26  D00A               	goto	l8887
 12980                           
 12981                           ; BSR set to: 0
 12982  015A28  0E00               	movlw	0
 12983  015A2A  0100               	movlb	0	; () banked
 12984  015A2C  6FB9               	movwf	?___fltol& (0+255),b
 12985  015A2E  0E00               	movlw	0
 12986  015A30  6FBA               	movwf	(?___fltol+1)& (0+255),b
 12987  015A32  0E00               	movlw	0
 12988  015A34  6FBB               	movwf	(?___fltol+2)& (0+255),b
 12989  015A36  0E00               	movlw	0
 12990  015A38  6FBC               	movwf	(?___fltol+3)& (0+255),b
 12991                           
 12992                           ; BSR set to: 0
 12993  015A3A  0012               	return	
 12994  015A3C                     l8887:
 12995                           
 12996                           ; BSR set to: 0
 12997  015A3C  0100               	movlb	0	; () banked
 12998  015A3E  90D8               	bcf	status,0,c
 12999  015A40  33BC               	rrcf	(___fltol@f1+3)& (0+255),f,b
 13000  015A42  33BB               	rrcf	(___fltol@f1+2)& (0+255),f,b
 13001  015A44  33BA               	rrcf	(___fltol@f1+1)& (0+255),f,b
 13002  015A46  33B9               	rrcf	___fltol@f1& (0+255),f,b
 13003                           
 13004                           ; BSR set to: 0
 13005  015A48  0100               	movlb	0	; () banked
 13006  015A4A  3FC2               	incfsz	___fltol@exp1& (0+255),f,b
 13007  015A4C  D7F7               	goto	l8887
 13008                           
 13009                           ; BSR set to: 0
 13010  015A4E  D01B               	goto	l8901
 13011  015A50                     l8891:
 13012                           
 13013                           ; BSR set to: 0
 13014  015A50  0E1F               	movlw	31
 13015  015A52  0100               	movlb	0	; () banked
 13016  015A54  65C2               	cpfsgt	___fltol@exp1& (0+255),b
 13017  015A56  D012               	goto	l8899
 13018                           
 13019                           ; BSR set to: 0
 13020  015A58  0E00               	movlw	0
 13021  015A5A  0100               	movlb	0	; () banked
 13022  015A5C  6FB9               	movwf	?___fltol& (0+255),b
 13023  015A5E  0E00               	movlw	0
 13024  015A60  6FBA               	movwf	(?___fltol+1)& (0+255),b
 13025  015A62  0E00               	movlw	0
 13026  015A64  6FBB               	movwf	(?___fltol+2)& (0+255),b
 13027  015A66  0E00               	movlw	0
 13028  015A68  6FBC               	movwf	(?___fltol+3)& (0+255),b
 13029                           
 13030                           ; BSR set to: 0
 13031  015A6A  0012               	return	
 13032  015A6C                     l8897:
 13033                           
 13034                           ; BSR set to: 0
 13035  015A6C  0100               	movlb	0	; () banked
 13036  015A6E  90D8               	bcf	status,0,c
 13037  015A70  37B9               	rlcf	___fltol@f1& (0+255),f,b
 13038  015A72  37BA               	rlcf	(___fltol@f1+1)& (0+255),f,b
 13039  015A74  37BB               	rlcf	(___fltol@f1+2)& (0+255),f,b
 13040  015A76  37BC               	rlcf	(___fltol@f1+3)& (0+255),f,b
 13041  015A78  0100               	movlb	0	; () banked
 13042  015A7A  07C2               	decf	___fltol@exp1& (0+255),f,b
 13043  015A7C                     l8899:
 13044                           
 13045                           ; BSR set to: 0
 13046  015A7C  0100               	movlb	0	; () banked
 13047  015A7E  51C2               	movf	___fltol@exp1& (0+255),w,b
 13048  015A80  0100               	movlb	0	; () banked
 13049  015A82  A4D8               	btfss	status,2,c
 13050  015A84  D7F3               	goto	l8897
 13051  015A86                     l8901:
 13052                           
 13053                           ; BSR set to: 0
 13054  015A86  0100               	movlb	0	; () banked
 13055  015A88  51C1               	movf	___fltol@sign1& (0+255),w,b
 13056  015A8A  0100               	movlb	0	; () banked
 13057  015A8C  B4D8               	btfsc	status,2,c
 13058  015A8E  D009               	goto	l8905
 13059                           
 13060                           ; BSR set to: 0
 13061  015A90  0100               	movlb	0	; () banked
 13062  015A92  1FBC               	comf	(___fltol@f1+3)& (0+255),f,b
 13063  015A94  1FBB               	comf	(___fltol@f1+2)& (0+255),f,b
 13064  015A96  1FBA               	comf	(___fltol@f1+1)& (0+255),f,b
 13065  015A98  6DB9               	negf	___fltol@f1& (0+255),b
 13066  015A9A  0E00               	movlw	0
 13067  015A9C  23BA               	addwfc	(___fltol@f1+1)& (0+255),f,b
 13068  015A9E  23BB               	addwfc	(___fltol@f1+2)& (0+255),f,b
 13069  015AA0  23BC               	addwfc	(___fltol@f1+3)& (0+255),f,b
 13070  015AA2                     l8905:
 13071                           
 13072                           ; BSR set to: 0
 13073  015AA2  C0B9  F0B9         	movff	___fltol@f1,?___fltol
 13074  015AA6  C0BA  F0BA         	movff	___fltol@f1+1,?___fltol+1
 13075  015AAA  C0BB  F0BB         	movff	___fltol@f1+2,?___fltol+2
 13076  015AAE  C0BC  F0BC         	movff	___fltol@f1+3,?___fltol+3
 13077  015AB2  0012               	return	
 13078  015AB4                     __end_of___fltol:
 13079                           	opt stack 0
 13080                           tblptru	equ	0xFF8
 13081                           tblptrh	equ	0xFF7
 13082                           tblptrl	equ	0xFF6
 13083                           tablat	equ	0xFF5
 13084                           prodh	equ	0xFF4
 13085                           prodl	equ	0xFF3
 13086                           intcon	equ	0xFF2
 13087                           postinc0	equ	0xFEE
 13088                           wreg	equ	0xFE8
 13089                           indf2	equ	0xFDF
 13090                           postinc2	equ	0xFDE
 13091                           fsr2h	equ	0xFDA
 13092                           fsr2l	equ	0xFD9
 13093                           status	equ	0xFD8
 13094                           
 13095 ;; *************** function ___flsub *****************
 13096 ;; Defined at:
 13097 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
 13098 ;; Parameters:    Size  Location     Type
 13099 ;;  b               4   89[BANK0 ] long 
 13100 ;;  a               4   93[BANK0 ] long 
 13101 ;; Auto vars:     Size  Location     Type
 13102 ;;		None
 13103 ;; Return value:  Size  Location     Type
 13104 ;;                  4   89[BANK0 ] long 
 13105 ;; Registers used:
 13106 ;;		wreg, status,2, status,0, cstack
 13107 ;; Tracked objects:
 13108 ;;		On entry : 0/0
 13109 ;;		On exit  : 0/0
 13110 ;;		Unchanged: 0/0
 13111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13112 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13115 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13116 ;;Total ram usage:        8 bytes
 13117 ;; Hardware stack levels used:    1
 13118 ;; Hardware stack levels required when called:    4
 13119 ;; This function calls:
 13120 ;;		___fladd
 13121 ;; This function is called by:
 13122 ;;		_sprintf
 13123 ;; This function uses a non-reentrant model
 13124 ;;
 13125                           
 13126                           	psect	text23
 13127  016508                     __ptext23:
 13128                           	opt stack 0
 13129  016508                     ___flsub:
 13130                           	opt stack 24
 13131                           
 13132                           ; BSR set to: 0
 13133                           ;incstack = 0
 13134  016508  0E00               	movlw	0
 13135  01650A  0100               	movlb	0	; () banked
 13136  01650C  1BBD               	xorwf	___flsub@a& (0+255),f,b
 13137  01650E  0E00               	movlw	0
 13138  016510  1BBE               	xorwf	(___flsub@a+1)& (0+255),f,b
 13139  016512  0E00               	movlw	0
 13140  016514  1BBF               	xorwf	(___flsub@a+2)& (0+255),f,b
 13141  016516  0E80               	movlw	128
 13142  016518  1BC0               	xorwf	(___flsub@a+3)& (0+255),f,b
 13143                           
 13144                           ; BSR set to: 0
 13145  01651A  C0B9  F0A5         	movff	___flsub@b,___fladd@b
 13146  01651E  C0BA  F0A6         	movff	___flsub@b+1,___fladd@b+1
 13147  016522  C0BB  F0A7         	movff	___flsub@b+2,___fladd@b+2
 13148  016526  C0BC  F0A8         	movff	___flsub@b+3,___fladd@b+3
 13149  01652A  C0BD  F0A9         	movff	___flsub@a,___fladd@a
 13150  01652E  C0BE  F0AA         	movff	___flsub@a+1,___fladd@a+1
 13151  016532  C0BF  F0AB         	movff	___flsub@a+2,___fladd@a+2
 13152  016536  C0C0  F0AC         	movff	___flsub@a+3,___fladd@a+3
 13153  01653A  ECCF  F09A         	call	___fladd	;wreg free
 13154  01653E  C0A5  F0B9         	movff	?___fladd,?___flsub
 13155  016542  C0A6  F0BA         	movff	?___fladd+1,?___flsub+1
 13156  016546  C0A7  F0BB         	movff	?___fladd+2,?___flsub+2
 13157  01654A  C0A8  F0BC         	movff	?___fladd+3,?___flsub+3
 13158  01654E  0012               	return	
 13159  016550                     __end_of___flsub:
 13160                           	opt stack 0
 13161                           tblptru	equ	0xFF8
 13162                           tblptrh	equ	0xFF7
 13163                           tblptrl	equ	0xFF6
 13164                           tablat	equ	0xFF5
 13165                           prodh	equ	0xFF4
 13166                           prodl	equ	0xFF3
 13167                           intcon	equ	0xFF2
 13168                           postinc0	equ	0xFEE
 13169                           wreg	equ	0xFE8
 13170                           indf2	equ	0xFDF
 13171                           postinc2	equ	0xFDE
 13172                           fsr2h	equ	0xFDA
 13173                           fsr2l	equ	0xFD9
 13174                           status	equ	0xFD8
 13175                           
 13176 ;; *************** function ___fladd *****************
 13177 ;; Defined at:
 13178 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcadd.c"
 13179 ;; Parameters:    Size  Location     Type
 13180 ;;  b               4   69[BANK0 ] long 
 13181 ;;  a               4   73[BANK0 ] long 
 13182 ;; Auto vars:     Size  Location     Type
 13183 ;;  grs             1   88[BANK0 ] unsigned char 
 13184 ;;  bexp            1   87[BANK0 ] unsigned char 
 13185 ;;  aexp            1   86[BANK0 ] unsigned char 
 13186 ;;  signs           1   85[BANK0 ] unsigned char 
 13187 ;; Return value:  Size  Location     Type
 13188 ;;                  4   69[BANK0 ] unsigned char 
 13189 ;; Registers used:
 13190 ;;		wreg, status,2, status,0
 13191 ;; Tracked objects:
 13192 ;;		On entry : 0/0
 13193 ;;		On exit  : 0/0
 13194 ;;		Unchanged: 0/0
 13195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13196 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13197 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13198 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13199 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13200 ;;Total ram usage:       20 bytes
 13201 ;; Hardware stack levels used:    1
 13202 ;; Hardware stack levels required when called:    3
 13203 ;; This function calls:
 13204 ;;		Nothing
 13205 ;; This function is called by:
 13206 ;;		_main
 13207 ;;		_sprintf
 13208 ;;		___flsub
 13209 ;; This function uses a non-reentrant model
 13210 ;;
 13211                           
 13212                           	psect	text24
 13213  01359E                     __ptext24:
 13214                           	opt stack 0
 13215  01359E                     ___fladd:
 13216                           	opt stack 27
 13217                           
 13218                           ;incstack = 0
 13219  01359E  0100               	movlb	0	; () banked
 13220  0135A0  51A8               	movf	(___fladd@b+3)& (0+255),w,b
 13221  0135A2  0B80               	andlw	128
 13222  0135A4  0100               	movlb	0	; () banked
 13223  0135A6  6FB5               	movwf	___fladd@signs& (0+255),b
 13224  0135A8  0100               	movlb	0	; () banked
 13225  0135AA  51A8               	movf	(___fladd@b+3)& (0+255),w,b
 13226  0135AC  25A8               	addwf	(___fladd@b+3)& (0+255),w,b
 13227  0135AE  0100               	movlb	0	; () banked
 13228  0135B0  6FB7               	movwf	___fladd@bexp& (0+255),b
 13229                           
 13230                           ; BSR set to: 0
 13231  0135B2  0100               	movlb	0	; () banked
 13232  0135B4  AFA7               	btfss	(___fladd@b+2)& (0+255),7,b
 13233  0135B6  D002               	goto	l8203
 13234                           
 13235                           ; BSR set to: 0
 13236  0135B8  0100               	movlb	0	; () banked
 13237  0135BA  81B7               	bsf	___fladd@bexp& (0+255),0,b
 13238  0135BC                     l8203:
 13239                           
 13240                           ; BSR set to: 0
 13241  0135BC  0100               	movlb	0	; () banked
 13242  0135BE  51B7               	movf	___fladd@bexp& (0+255),w,b
 13243  0135C0  0100               	movlb	0	; () banked
 13244  0135C2  B4D8               	btfsc	status,2,c
 13245  0135C4  D012               	goto	l8213
 13246                           
 13247                           ; BSR set to: 0
 13248  0135C6  0100               	movlb	0	; () banked
 13249  0135C8  29B7               	incf	___fladd@bexp& (0+255),w,b
 13250  0135CA  A4D8               	btfss	status,2,c
 13251  0135CC  D009               	goto	l8209
 13252                           
 13253                           ; BSR set to: 0
 13254  0135CE  0E00               	movlw	0
 13255  0135D0  0100               	movlb	0	; () banked
 13256  0135D2  6FA5               	movwf	___fladd@b& (0+255),b
 13257  0135D4  0E00               	movlw	0
 13258  0135D6  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 13259  0135D8  0E00               	movlw	0
 13260  0135DA  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 13261  0135DC  0E00               	movlw	0
 13262  0135DE  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 13263  0135E0                     l8209:
 13264                           
 13265                           ; BSR set to: 0
 13266  0135E0  0100               	movlb	0	; () banked
 13267  0135E2  8FA7               	bsf	(___fladd@b+2)& (0+255),7,b
 13268                           
 13269                           ; BSR set to: 0
 13270  0135E4  0E00               	movlw	0
 13271  0135E6  0100               	movlb	0	; () banked
 13272  0135E8  D008               	goto	L12
 13273  0135EA                     l8213:
 13274                           
 13275                           ; BSR set to: 0
 13276  0135EA  0E00               	movlw	0
 13277  0135EC  0100               	movlb	0	; () banked
 13278  0135EE  6FA5               	movwf	___fladd@b& (0+255),b
 13279  0135F0  0E00               	movlw	0
 13280  0135F2  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 13281  0135F4  0E00               	movlw	0
 13282  0135F6  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 13283  0135F8  0E00               	movlw	0
 13284  0135FA                     L12:
 13285  0135FA  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 13286                           
 13287                           ; BSR set to: 0
 13288                           
 13289                           ; BSR set to: 0
 13290  0135FC  0100               	movlb	0	; () banked
 13291  0135FE  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 13292  013600  0B80               	andlw	128
 13293  013602  0100               	movlb	0	; () banked
 13294  013604  6FB6               	movwf	___fladd@aexp& (0+255),b
 13295                           
 13296                           ; BSR set to: 0
 13297  013606  0100               	movlb	0	; () banked
 13298  013608  51B5               	movf	___fladd@signs& (0+255),w,b
 13299  01360A  0100               	movlb	0	; () banked
 13300  01360C  19B6               	xorwf	___fladd@aexp& (0+255),w,b
 13301  01360E  B4D8               	btfsc	status,2,c
 13302  013610  D002               	goto	l8221
 13303                           
 13304                           ; BSR set to: 0
 13305  013612  0100               	movlb	0	; () banked
 13306  013614  8DB5               	bsf	___fladd@signs& (0+255),6,b
 13307  013616                     l8221:
 13308                           
 13309                           ; BSR set to: 0
 13310  013616  0100               	movlb	0	; () banked
 13311  013618  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 13312  01361A  25AC               	addwf	(___fladd@a+3)& (0+255),w,b
 13313  01361C  0100               	movlb	0	; () banked
 13314  01361E  6FB6               	movwf	___fladd@aexp& (0+255),b
 13315                           
 13316                           ; BSR set to: 0
 13317  013620  0100               	movlb	0	; () banked
 13318  013622  AFAB               	btfss	(___fladd@a+2)& (0+255),7,b
 13319  013624  D002               	goto	l8227
 13320                           
 13321                           ; BSR set to: 0
 13322  013626  0100               	movlb	0	; () banked
 13323  013628  81B6               	bsf	___fladd@aexp& (0+255),0,b
 13324  01362A                     l8227:
 13325                           
 13326                           ; BSR set to: 0
 13327  01362A  0100               	movlb	0	; () banked
 13328  01362C  51B6               	movf	___fladd@aexp& (0+255),w,b
 13329  01362E  0100               	movlb	0	; () banked
 13330  013630  B4D8               	btfsc	status,2,c
 13331  013632  D012               	goto	l8237
 13332                           
 13333                           ; BSR set to: 0
 13334  013634  0100               	movlb	0	; () banked
 13335  013636  29B6               	incf	___fladd@aexp& (0+255),w,b
 13336  013638  A4D8               	btfss	status,2,c
 13337  01363A  D009               	goto	l8233
 13338                           
 13339                           ; BSR set to: 0
 13340  01363C  0E00               	movlw	0
 13341  01363E  0100               	movlb	0	; () banked
 13342  013640  6FA9               	movwf	___fladd@a& (0+255),b
 13343  013642  0E00               	movlw	0
 13344  013644  6FAA               	movwf	(___fladd@a+1)& (0+255),b
 13345  013646  0E00               	movlw	0
 13346  013648  6FAB               	movwf	(___fladd@a+2)& (0+255),b
 13347  01364A  0E00               	movlw	0
 13348  01364C  6FAC               	movwf	(___fladd@a+3)& (0+255),b
 13349  01364E                     l8233:
 13350                           
 13351                           ; BSR set to: 0
 13352  01364E  0100               	movlb	0	; () banked
 13353  013650  8FAB               	bsf	(___fladd@a+2)& (0+255),7,b
 13354                           
 13355                           ; BSR set to: 0
 13356  013652  0E00               	movlw	0
 13357  013654  0100               	movlb	0	; () banked
 13358  013656  D008               	goto	L13
 13359  013658                     l8237:
 13360                           
 13361                           ; BSR set to: 0
 13362  013658  0E00               	movlw	0
 13363  01365A  0100               	movlb	0	; () banked
 13364  01365C  6FA9               	movwf	___fladd@a& (0+255),b
 13365  01365E  0E00               	movlw	0
 13366  013660  6FAA               	movwf	(___fladd@a+1)& (0+255),b
 13367  013662  0E00               	movlw	0
 13368  013664  6FAB               	movwf	(___fladd@a+2)& (0+255),b
 13369  013666  0E00               	movlw	0
 13370  013668                     L13:
 13371  013668  6FAC               	movwf	(___fladd@a+3)& (0+255),b
 13372                           
 13373                           ; BSR set to: 0
 13374                           
 13375                           ; BSR set to: 0
 13376  01366A  0100               	movlb	0	; () banked
 13377  01366C  51B7               	movf	___fladd@bexp& (0+255),w,b
 13378  01366E  0100               	movlb	0	; () banked
 13379  013670  5DB6               	subwf	___fladd@aexp& (0+255),w,b
 13380  013672  B0D8               	btfsc	status,0,c
 13381  013674  D024               	goto	l8275
 13382                           
 13383                           ; BSR set to: 0
 13384  013676  0100               	movlb	0	; () banked
 13385  013678  ADB5               	btfss	___fladd@signs& (0+255),6,b
 13386  01367A  D003               	goto	l8245
 13387                           
 13388                           ; BSR set to: 0
 13389  01367C  0E80               	movlw	128
 13390  01367E  0100               	movlb	0	; () banked
 13391  013680  1BB5               	xorwf	___fladd@signs& (0+255),f,b
 13392  013682                     l8245:
 13393                           
 13394                           ; BSR set to: 0
 13395  013682  C0B7  F0B8         	movff	___fladd@bexp,___fladd@grs
 13396                           
 13397                           ; BSR set to: 0
 13398  013686  C0B6  F0B7         	movff	___fladd@aexp,___fladd@bexp
 13399                           
 13400                           ; BSR set to: 0
 13401  01368A  C0B8  F0B6         	movff	___fladd@grs,___fladd@aexp
 13402                           
 13403                           ; BSR set to: 0
 13404  01368E  C0A5  F0B8         	movff	___fladd@b,___fladd@grs
 13405                           
 13406                           ; BSR set to: 0
 13407  013692  C0A9  F0A5         	movff	___fladd@a,___fladd@b
 13408                           
 13409                           ; BSR set to: 0
 13410  013696  C0B8  F0A9         	movff	___fladd@grs,___fladd@a
 13411                           
 13412                           ; BSR set to: 0
 13413  01369A  C0A6  F0B8         	movff	___fladd@b+1,___fladd@grs
 13414                           
 13415                           ; BSR set to: 0
 13416  01369E  C0AA  F0A6         	movff	___fladd@a+1,___fladd@b+1
 13417                           
 13418                           ; BSR set to: 0
 13419  0136A2  C0B8  F0AA         	movff	___fladd@grs,___fladd@a+1
 13420                           
 13421                           ; BSR set to: 0
 13422  0136A6  C0A7  F0B8         	movff	___fladd@b+2,___fladd@grs
 13423                           
 13424                           ; BSR set to: 0
 13425  0136AA  C0AB  F0A7         	movff	___fladd@a+2,___fladd@b+2
 13426                           
 13427                           ; BSR set to: 0
 13428  0136AE  C0B8  F0AB         	movff	___fladd@grs,___fladd@a+2
 13429                           
 13430                           ; BSR set to: 0
 13431  0136B2  C0A8  F0B8         	movff	___fladd@b+3,___fladd@grs
 13432                           
 13433                           ; BSR set to: 0
 13434  0136B6  C0AC  F0A8         	movff	___fladd@a+3,___fladd@b+3
 13435                           
 13436                           ; BSR set to: 0
 13437  0136BA  C0B8  F0AC         	movff	___fladd@grs,___fladd@a+3
 13438  0136BE                     l8275:
 13439                           
 13440                           ; BSR set to: 0
 13441  0136BE  0E00               	movlw	0
 13442  0136C0  0100               	movlb	0	; () banked
 13443  0136C2  6FB8               	movwf	___fladd@grs& (0+255),b
 13444                           
 13445                           ; BSR set to: 0
 13446  0136C4  0100               	movlb	0	; () banked
 13447  0136C6  51B7               	movf	___fladd@bexp& (0+255),w,b
 13448  0136C8  0100               	movlb	0	; () banked
 13449  0136CA  6FAD               	movwf	??___fladd& (0+255),b
 13450  0136CC  6BAE               	clrf	(??___fladd+1)& (0+255),b
 13451  0136CE  0100               	movlb	0	; () banked
 13452  0136D0  1FAD               	comf	??___fladd& (0+255),f,b
 13453  0136D2  1FAE               	comf	(??___fladd+1)& (0+255),f,b
 13454  0136D4  4BAD               	infsnz	??___fladd& (0+255),f,b
 13455  0136D6  2BAE               	incf	(??___fladd+1)& (0+255),f,b
 13456  0136D8  0100               	movlb	0	; () banked
 13457  0136DA  51B6               	movf	___fladd@aexp& (0+255),w,b
 13458  0136DC  0100               	movlb	0	; () banked
 13459  0136DE  6FAF               	movwf	(??___fladd+2)& (0+255),b
 13460  0136E0  6BB0               	clrf	(??___fladd+3)& (0+255),b
 13461  0136E2  0100               	movlb	0	; () banked
 13462  0136E4  51AD               	movf	??___fladd& (0+255),w,b
 13463  0136E6  0100               	movlb	0	; () banked
 13464  0136E8  27AF               	addwf	(??___fladd+2)& (0+255),f,b
 13465  0136EA  0100               	movlb	0	; () banked
 13466  0136EC  51AE               	movf	(??___fladd+1)& (0+255),w,b
 13467  0136EE  0100               	movlb	0	; () banked
 13468  0136F0  23B0               	addwfc	(??___fladd+3)& (0+255),f,b
 13469  0136F2  0100               	movlb	0	; () banked
 13470  0136F4  BFB0               	btfsc	(??___fladd+3)& (0+255),7,b
 13471  0136F6  D03D               	goto	l1584
 13472  0136F8  0100               	movlb	0	; () banked
 13473  0136FA  51B0               	movf	(??___fladd+3)& (0+255),w,b
 13474  0136FC  E105               	bnz	u10930
 13475  0136FE  0E1A               	movlw	26
 13476  013700  0100               	movlb	0	; () banked
 13477  013702  5DAF               	subwf	(??___fladd+2)& (0+255),w,b
 13478  013704  A0D8               	btfss	status,0,c
 13479  013706  D035               	goto	l1584
 13480  013708                     u10930:
 13481                           
 13482                           ; BSR set to: 0
 13483  013708  0100               	movlb	0	; () banked
 13484  01370A  51A5               	movf	___fladd@b& (0+255),w,b
 13485  01370C  0100               	movlb	0	; () banked
 13486  01370E  11A6               	iorwf	(___fladd@b+1)& (0+255),w,b
 13487  013710  0100               	movlb	0	; () banked
 13488  013712  11A7               	iorwf	(___fladd@b+2)& (0+255),w,b
 13489  013714  0100               	movlb	0	; () banked
 13490  013716  11A8               	iorwf	(___fladd@b+3)& (0+255),w,b
 13491  013718  B4D8               	btfsc	status,2,c
 13492  01371A  D002               	goto	u10940
 13493  01371C  0E01               	movlw	1
 13494  01371E  D001               	goto	u10950
 13495  013720                     u10940:
 13496  013720  0E00               	movlw	0
 13497  013722                     u10950:
 13498  013722  0100               	movlb	0	; () banked
 13499  013724  6FB8               	movwf	___fladd@grs& (0+255),b
 13500                           
 13501                           ; BSR set to: 0
 13502  013726  0E00               	movlw	0
 13503  013728  0100               	movlb	0	; () banked
 13504  01372A  6FA5               	movwf	___fladd@b& (0+255),b
 13505  01372C  0E00               	movlw	0
 13506  01372E  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 13507  013730  0E00               	movlw	0
 13508  013732  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 13509  013734  0E00               	movlw	0
 13510  013736  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 13511                           
 13512                           ; BSR set to: 0
 13513  013738  C0B6  F0B7         	movff	___fladd@aexp,___fladd@bexp
 13514  01373C  D020               	goto	l1583
 13515  01373E                     l1585:
 13516                           
 13517                           ; BSR set to: 0
 13518  01373E  0100               	movlb	0	; () banked
 13519  013740  A1B8               	btfss	___fladd@grs& (0+255),0,b
 13520  013742  D007               	goto	l8287
 13521                           
 13522                           ; BSR set to: 0
 13523  013744  0100               	movlb	0	; () banked
 13524  013746  90D8               	bcf	status,0,c
 13525  013748  31B8               	rrcf	___fladd@grs& (0+255),w,b
 13526  01374A  0901               	iorlw	1
 13527  01374C  0100               	movlb	0	; () banked
 13528  01374E  6FB8               	movwf	___fladd@grs& (0+255),b
 13529  013750  D003               	goto	l8289
 13530  013752                     l8287:
 13531                           
 13532                           ; BSR set to: 0
 13533  013752  0100               	movlb	0	; () banked
 13534  013754  90D8               	bcf	status,0,c
 13535  013756  33B8               	rrcf	___fladd@grs& (0+255),f,b
 13536  013758                     l8289:
 13537                           
 13538                           ; BSR set to: 0
 13539  013758  0100               	movlb	0	; () banked
 13540  01375A  A1A5               	btfss	___fladd@b& (0+255),0,b
 13541  01375C  D002               	goto	l8293
 13542                           
 13543                           ; BSR set to: 0
 13544  01375E  0100               	movlb	0	; () banked
 13545  013760  8FB8               	bsf	___fladd@grs& (0+255),7,b
 13546  013762                     l8293:
 13547                           
 13548                           ; BSR set to: 0
 13549  013762  0100               	movlb	0	; () banked
 13550  013764  35A8               	rlcf	(___fladd@b+3)& (0+255),w,b
 13551  013766  33A8               	rrcf	(___fladd@b+3)& (0+255),f,b
 13552  013768  33A7               	rrcf	(___fladd@b+2)& (0+255),f,b
 13553  01376A  33A6               	rrcf	(___fladd@b+1)& (0+255),f,b
 13554  01376C  33A5               	rrcf	___fladd@b& (0+255),f,b
 13555                           
 13556                           ; BSR set to: 0
 13557  01376E  0100               	movlb	0	; () banked
 13558  013770  2BB7               	incf	___fladd@bexp& (0+255),f,b
 13559  013772                     l1584:
 13560                           
 13561                           ; BSR set to: 0
 13562  013772  0100               	movlb	0	; () banked
 13563  013774  51B6               	movf	___fladd@aexp& (0+255),w,b
 13564  013776  0100               	movlb	0	; () banked
 13565  013778  5DB7               	subwf	___fladd@bexp& (0+255),w,b
 13566  01377A  A0D8               	btfss	status,0,c
 13567  01377C  D7E0               	goto	l1585
 13568  01377E                     l1583:
 13569                           
 13570                           ; BSR set to: 0
 13571  01377E  0100               	movlb	0	; () banked
 13572  013780  BDB5               	btfsc	___fladd@signs& (0+255),6,b
 13573  013782  D03F               	goto	l8321
 13574                           
 13575                           ; BSR set to: 0
 13576  013784  0100               	movlb	0	; () banked
 13577  013786  51B7               	movf	___fladd@bexp& (0+255),w,b
 13578  013788  0100               	movlb	0	; () banked
 13579  01378A  A4D8               	btfss	status,2,c
 13580  01378C  D00A               	goto	l8303
 13581                           
 13582                           ; BSR set to: 0
 13583  01378E  0E00               	movlw	0
 13584  013790  0100               	movlb	0	; () banked
 13585  013792  6FA5               	movwf	?___fladd& (0+255),b
 13586  013794  0E00               	movlw	0
 13587  013796  6FA6               	movwf	(?___fladd+1)& (0+255),b
 13588  013798  0E00               	movlw	0
 13589  01379A  6FA7               	movwf	(?___fladd+2)& (0+255),b
 13590  01379C  0E00               	movlw	0
 13591  01379E  6FA8               	movwf	(?___fladd+3)& (0+255),b
 13592                           
 13593                           ; BSR set to: 0
 13594  0137A0  0012               	return	
 13595  0137A2                     l8303:
 13596                           
 13597                           ; BSR set to: 0
 13598  0137A2  0100               	movlb	0	; () banked
 13599  0137A4  51A9               	movf	___fladd@a& (0+255),w,b
 13600  0137A6  0100               	movlb	0	; () banked
 13601  0137A8  27A5               	addwf	___fladd@b& (0+255),f,b
 13602  0137AA  0100               	movlb	0	; () banked
 13603  0137AC  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 13604  0137AE  0100               	movlb	0	; () banked
 13605  0137B0  23A6               	addwfc	(___fladd@b+1)& (0+255),f,b
 13606  0137B2  0100               	movlb	0	; () banked
 13607  0137B4  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 13608  0137B6  0100               	movlb	0	; () banked
 13609  0137B8  23A7               	addwfc	(___fladd@b+2)& (0+255),f,b
 13610  0137BA  0100               	movlb	0	; () banked
 13611  0137BC  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 13612  0137BE  0100               	movlb	0	; () banked
 13613  0137C0  23A8               	addwfc	(___fladd@b+3)& (0+255),f,b
 13614                           
 13615                           ; BSR set to: 0
 13616  0137C2  0100               	movlb	0	; () banked
 13617  0137C4  A1A8               	btfss	(___fladd@b+3)& (0+255),0,b
 13618  0137C6  D0CC               	goto	l8357
 13619                           
 13620                           ; BSR set to: 0
 13621  0137C8  0100               	movlb	0	; () banked
 13622  0137CA  A1B8               	btfss	___fladd@grs& (0+255),0,b
 13623  0137CC  D009               	goto	l8311
 13624                           
 13625                           ; BSR set to: 0
 13626  0137CE  0100               	movlb	0	; () banked
 13627  0137D0  90D8               	bcf	status,0,c
 13628  0137D2  33B8               	rrcf	___fladd@grs& (0+255),f,b
 13629  0137D4  0100               	movlb	0	; () banked
 13630  0137D6  51B8               	movf	___fladd@grs& (0+255),w,b
 13631  0137D8  0901               	iorlw	1
 13632  0137DA  0100               	movlb	0	; () banked
 13633  0137DC  6FB8               	movwf	___fladd@grs& (0+255),b
 13634  0137DE  D003               	goto	l8313
 13635  0137E0                     l8311:
 13636                           
 13637                           ; BSR set to: 0
 13638  0137E0  0100               	movlb	0	; () banked
 13639  0137E2  90D8               	bcf	status,0,c
 13640  0137E4  33B8               	rrcf	___fladd@grs& (0+255),f,b
 13641  0137E6                     l8313:
 13642                           
 13643                           ; BSR set to: 0
 13644  0137E6  0100               	movlb	0	; () banked
 13645  0137E8  A1A5               	btfss	___fladd@b& (0+255),0,b
 13646  0137EA  D002               	goto	l8317
 13647                           
 13648                           ; BSR set to: 0
 13649  0137EC  0100               	movlb	0	; () banked
 13650  0137EE  8FB8               	bsf	___fladd@grs& (0+255),7,b
 13651  0137F0                     l8317:
 13652                           
 13653                           ; BSR set to: 0
 13654  0137F0  0100               	movlb	0	; () banked
 13655  0137F2  35A8               	rlcf	(___fladd@b+3)& (0+255),w,b
 13656  0137F4  33A8               	rrcf	(___fladd@b+3)& (0+255),f,b
 13657  0137F6  33A7               	rrcf	(___fladd@b+2)& (0+255),f,b
 13658  0137F8  33A6               	rrcf	(___fladd@b+1)& (0+255),f,b
 13659  0137FA  33A5               	rrcf	___fladd@b& (0+255),f,b
 13660                           
 13661                           ; BSR set to: 0
 13662  0137FC  0100               	movlb	0	; () banked
 13663  0137FE  2BB7               	incf	___fladd@bexp& (0+255),f,b
 13664                           
 13665                           ; BSR set to: 0
 13666  013800  D0AF               	goto	l8357
 13667  013802                     l8321:
 13668                           
 13669                           ; BSR set to: 0
 13670  013802  0100               	movlb	0	; () banked
 13671  013804  51A9               	movf	___fladd@a& (0+255),w,b
 13672  013806  0100               	movlb	0	; () banked
 13673  013808  5DA5               	subwf	___fladd@b& (0+255),w,b
 13674  01380A  0100               	movlb	0	; () banked
 13675  01380C  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 13676  01380E  0100               	movlb	0	; () banked
 13677  013810  59A6               	subwfb	(___fladd@b+1)& (0+255),w,b
 13678  013812  0100               	movlb	0	; () banked
 13679  013814  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 13680  013816  0100               	movlb	0	; () banked
 13681  013818  59A7               	subwfb	(___fladd@b+2)& (0+255),w,b
 13682  01381A  0100               	movlb	0	; () banked
 13683  01381C  51A8               	movf	(___fladd@b+3)& (0+255),w,b
 13684  01381E  0A80               	xorlw	128
 13685  013820  0100               	movlb	0	; () banked
 13686  013822  6FAD               	movwf	??___fladd& (0+255),b
 13687  013824  0100               	movlb	0	; () banked
 13688  013826  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 13689  013828  0A80               	xorlw	128
 13690  01382A  0100               	movlb	0	; () banked
 13691  01382C  59AD               	subwfb	??___fladd& (0+255),w,b
 13692  01382E  B0D8               	btfsc	status,0,c
 13693  013830  D050               	goto	l8331
 13694                           
 13695                           ; BSR set to: 0
 13696  013832  C0A5  F0AD         	movff	___fladd@b,??___fladd
 13697  013836  C0A6  F0AE         	movff	___fladd@b+1,??___fladd+1
 13698  01383A  C0A7  F0AF         	movff	___fladd@b+2,??___fladd+2
 13699  01383E  C0A8  F0B0         	movff	___fladd@b+3,??___fladd+3
 13700  013842  0100               	movlb	0	; () banked
 13701  013844  1FAD               	comf	??___fladd& (0+255),f,b
 13702  013846  1FAE               	comf	(??___fladd+1)& (0+255),f,b
 13703  013848  1FAF               	comf	(??___fladd+2)& (0+255),f,b
 13704  01384A  1FB0               	comf	(??___fladd+3)& (0+255),f,b
 13705  01384C  2BAD               	incf	??___fladd& (0+255),f,b
 13706  01384E  0E00               	movlw	0
 13707  013850  23AE               	addwfc	(??___fladd+1)& (0+255),f,b
 13708  013852  23AF               	addwfc	(??___fladd+2)& (0+255),f,b
 13709  013854  23B0               	addwfc	(??___fladd+3)& (0+255),f,b
 13710  013856  0100               	movlb	0	; () banked
 13711  013858  51A9               	movf	___fladd@a& (0+255),w,b
 13712  01385A  0100               	movlb	0	; () banked
 13713  01385C  25AD               	addwf	??___fladd& (0+255),w,b
 13714  01385E  0100               	movlb	0	; () banked
 13715  013860  6FB1               	movwf	(??___fladd+4)& (0+255),b
 13716  013862  0100               	movlb	0	; () banked
 13717  013864  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 13718  013866  0100               	movlb	0	; () banked
 13719  013868  21AE               	addwfc	(??___fladd+1)& (0+255),w,b
 13720  01386A  0100               	movlb	0	; () banked
 13721  01386C  6FB2               	movwf	(??___fladd+5)& (0+255),b
 13722  01386E  0100               	movlb	0	; () banked
 13723  013870  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 13724  013872  0100               	movlb	0	; () banked
 13725  013874  21AF               	addwfc	(??___fladd+2)& (0+255),w,b
 13726  013876  0100               	movlb	0	; () banked
 13727  013878  6FB3               	movwf	(??___fladd+6)& (0+255),b
 13728  01387A  0100               	movlb	0	; () banked
 13729  01387C  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 13730  01387E  0100               	movlb	0	; () banked
 13731  013880  21B0               	addwfc	(??___fladd+3)& (0+255),w,b
 13732  013882  0100               	movlb	0	; () banked
 13733  013884  6FB4               	movwf	(??___fladd+7)& (0+255),b
 13734  013886  0EFF               	movlw	255
 13735  013888  0100               	movlb	0	; () banked
 13736  01388A  25B1               	addwf	(??___fladd+4)& (0+255),w,b
 13737  01388C  0100               	movlb	0	; () banked
 13738  01388E  6FA5               	movwf	___fladd@b& (0+255),b
 13739  013890  0EFF               	movlw	255
 13740  013892  0100               	movlb	0	; () banked
 13741  013894  21B2               	addwfc	(??___fladd+5)& (0+255),w,b
 13742  013896  0100               	movlb	0	; () banked
 13743  013898  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 13744  01389A  0EFF               	movlw	255
 13745  01389C  0100               	movlb	0	; () banked
 13746  01389E  21B3               	addwfc	(??___fladd+6)& (0+255),w,b
 13747  0138A0  0100               	movlb	0	; () banked
 13748  0138A2  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 13749  0138A4  0EFF               	movlw	255
 13750  0138A6  0100               	movlb	0	; () banked
 13751  0138A8  21B4               	addwfc	(??___fladd+7)& (0+255),w,b
 13752  0138AA  0100               	movlb	0	; () banked
 13753  0138AC  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 13754  0138AE  0E80               	movlw	128
 13755  0138B0  0100               	movlb	0	; () banked
 13756  0138B2  1BB5               	xorwf	___fladd@signs& (0+255),f,b
 13757                           
 13758                           ; BSR set to: 0
 13759  0138B4  0100               	movlb	0	; () banked
 13760  0138B6  6DB8               	negf	___fladd@grs& (0+255),b
 13761                           
 13762                           ; BSR set to: 0
 13763  0138B8  0100               	movlb	0	; () banked
 13764  0138BA  51B8               	movf	___fladd@grs& (0+255),w,b
 13765  0138BC  0100               	movlb	0	; () banked
 13766  0138BE  A4D8               	btfss	status,2,c
 13767  0138C0  D018               	goto	l1600
 13768                           
 13769                           ; BSR set to: 0
 13770  0138C2  0E01               	movlw	1
 13771  0138C4  0100               	movlb	0	; () banked
 13772  0138C6  27A5               	addwf	___fladd@b& (0+255),f,b
 13773  0138C8  0E00               	movlw	0
 13774  0138CA  23A6               	addwfc	(___fladd@b+1)& (0+255),f,b
 13775  0138CC  23A7               	addwfc	(___fladd@b+2)& (0+255),f,b
 13776  0138CE  23A8               	addwfc	(___fladd@b+3)& (0+255),f,b
 13777                           
 13778                           ; BSR set to: 0
 13779  0138D0  D010               	goto	l1600
 13780  0138D2                     l8331:
 13781                           
 13782                           ; BSR set to: 0
 13783  0138D2  0100               	movlb	0	; () banked
 13784  0138D4  51A9               	movf	___fladd@a& (0+255),w,b
 13785  0138D6  0100               	movlb	0	; () banked
 13786  0138D8  5FA5               	subwf	___fladd@b& (0+255),f,b
 13787  0138DA  0100               	movlb	0	; () banked
 13788  0138DC  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 13789  0138DE  0100               	movlb	0	; () banked
 13790  0138E0  5BA6               	subwfb	(___fladd@b+1)& (0+255),f,b
 13791  0138E2  0100               	movlb	0	; () banked
 13792  0138E4  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 13793  0138E6  0100               	movlb	0	; () banked
 13794  0138E8  5BA7               	subwfb	(___fladd@b+2)& (0+255),f,b
 13795  0138EA  0100               	movlb	0	; () banked
 13796  0138EC  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 13797  0138EE  0100               	movlb	0	; () banked
 13798  0138F0  5BA8               	subwfb	(___fladd@b+3)& (0+255),f,b
 13799  0138F2                     l1600:
 13800                           
 13801                           ; BSR set to: 0
 13802  0138F2  0100               	movlb	0	; () banked
 13803  0138F4  51A5               	movf	___fladd@b& (0+255),w,b
 13804  0138F6  0100               	movlb	0	; () banked
 13805  0138F8  11A6               	iorwf	(___fladd@b+1)& (0+255),w,b
 13806  0138FA  0100               	movlb	0	; () banked
 13807  0138FC  11A7               	iorwf	(___fladd@b+2)& (0+255),w,b
 13808  0138FE  0100               	movlb	0	; () banked
 13809  013900  11A8               	iorwf	(___fladd@b+3)& (0+255),w,b
 13810  013902  A4D8               	btfss	status,2,c
 13811  013904  D02A               	goto	l8355
 13812                           
 13813                           ; BSR set to: 0
 13814  013906  0100               	movlb	0	; () banked
 13815  013908  51B8               	movf	___fladd@grs& (0+255),w,b
 13816  01390A  0100               	movlb	0	; () banked
 13817  01390C  A4D8               	btfss	status,2,c
 13818  01390E  D025               	goto	l8355
 13819                           
 13820                           ; BSR set to: 0
 13821  013910  0E00               	movlw	0
 13822  013912  0100               	movlb	0	; () banked
 13823  013914  6FA5               	movwf	?___fladd& (0+255),b
 13824  013916  0E00               	movlw	0
 13825  013918  6FA6               	movwf	(?___fladd+1)& (0+255),b
 13826  01391A  0E00               	movlw	0
 13827  01391C  6FA7               	movwf	(?___fladd+2)& (0+255),b
 13828  01391E  0E00               	movlw	0
 13829  013920  6FA8               	movwf	(?___fladd+3)& (0+255),b
 13830                           
 13831                           ; BSR set to: 0
 13832  013922  0012               	return	
 13833  013924                     l8339:
 13834                           
 13835                           ; BSR set to: 0
 13836  013924  0100               	movlb	0	; () banked
 13837  013926  90D8               	bcf	status,0,c
 13838  013928  37A5               	rlcf	___fladd@b& (0+255),f,b
 13839  01392A  37A6               	rlcf	(___fladd@b+1)& (0+255),f,b
 13840  01392C  37A7               	rlcf	(___fladd@b+2)& (0+255),f,b
 13841  01392E  37A8               	rlcf	(___fladd@b+3)& (0+255),f,b
 13842                           
 13843                           ; BSR set to: 0
 13844  013930  0100               	movlb	0	; () banked
 13845  013932  AFB8               	btfss	___fladd@grs& (0+255),7,b
 13846  013934  D002               	goto	l8345
 13847                           
 13848                           ; BSR set to: 0
 13849  013936  0100               	movlb	0	; () banked
 13850  013938  81A5               	bsf	___fladd@b& (0+255),0,b
 13851  01393A                     l8345:
 13852                           
 13853                           ; BSR set to: 0
 13854  01393A  0100               	movlb	0	; () banked
 13855  01393C  A1B8               	btfss	___fladd@grs& (0+255),0,b
 13856  01393E  D003               	goto	l8349
 13857                           
 13858                           ; BSR set to: 0
 13859  013940  80D8               	bsf	status,0,c
 13860  013942  0100               	movlb	0	; () banked
 13861  013944  D002               	goto	L14
 13862  013946                     l8349:
 13863                           
 13864                           ; BSR set to: 0
 13865  013946  0100               	movlb	0	; () banked
 13866  013948  90D8               	bcf	status,0,c
 13867  01394A                     L14:
 13868  01394A  37B8               	rlcf	___fladd@grs& (0+255),f,b
 13869                           
 13870                           ; BSR set to: 0
 13871                           
 13872                           ; BSR set to: 0
 13873  01394C  0100               	movlb	0	; () banked
 13874  01394E  51B7               	movf	___fladd@bexp& (0+255),w,b
 13875  013950  0100               	movlb	0	; () banked
 13876  013952  B4D8               	btfsc	status,2,c
 13877  013954  D002               	goto	l8355
 13878                           
 13879                           ; BSR set to: 0
 13880  013956  0100               	movlb	0	; () banked
 13881  013958  07B7               	decf	___fladd@bexp& (0+255),f,b
 13882  01395A                     l8355:
 13883                           
 13884                           ; BSR set to: 0
 13885  01395A  0100               	movlb	0	; () banked
 13886  01395C  AFA7               	btfss	(___fladd@b+2)& (0+255),7,b
 13887  01395E  D7E2               	goto	l8339
 13888  013960                     l8357:
 13889                           
 13890                           ; BSR set to: 0
 13891  013960  0E00               	movlw	0
 13892  013962  0100               	movlb	0	; () banked
 13893  013964  6FB6               	movwf	___fladd@aexp& (0+255),b
 13894                           
 13895                           ; BSR set to: 0
 13896  013966  0100               	movlb	0	; () banked
 13897  013968  AFB8               	btfss	___fladd@grs& (0+255),7,b
 13898  01396A  D00D               	goto	l1609
 13899                           
 13900                           ; BSR set to: 0
 13901  01396C  C0B8  F0AD         	movff	___fladd@grs,??___fladd
 13902  013970  0E7F               	movlw	127
 13903  013972  0100               	movlb	0	; () banked
 13904  013974  17AD               	andwf	??___fladd& (0+255),f,b
 13905  013976  A4D8               	btfss	status,2,c
 13906  013978  D003               	goto	l8365
 13907                           
 13908                           ; BSR set to: 0
 13909                           
 13910                           ; BSR set to: 0
 13911  01397A  0100               	movlb	0	; () banked
 13912  01397C  A1A5               	btfss	___fladd@b& (0+255),0,b
 13913  01397E  D003               	goto	l1609
 13914  013980                     l8365:
 13915                           
 13916                           ; BSR set to: 0
 13917  013980  0E01               	movlw	1
 13918  013982  0100               	movlb	0	; () banked
 13919  013984  6FB6               	movwf	___fladd@aexp& (0+255),b
 13920  013986                     l1609:
 13921                           
 13922                           ; BSR set to: 0
 13923  013986  0100               	movlb	0	; () banked
 13924  013988  51B6               	movf	___fladd@aexp& (0+255),w,b
 13925  01398A  0100               	movlb	0	; () banked
 13926  01398C  B4D8               	btfsc	status,2,c
 13927  01398E  D026               	goto	l8375
 13928                           
 13929                           ; BSR set to: 0
 13930  013990  0E01               	movlw	1
 13931  013992  0100               	movlb	0	; () banked
 13932  013994  27A5               	addwf	___fladd@b& (0+255),f,b
 13933  013996  0E00               	movlw	0
 13934  013998  23A6               	addwfc	(___fladd@b+1)& (0+255),f,b
 13935  01399A  23A7               	addwfc	(___fladd@b+2)& (0+255),f,b
 13936  01399C  23A8               	addwfc	(___fladd@b+3)& (0+255),f,b
 13937                           
 13938                           ; BSR set to: 0
 13939  01399E  0100               	movlb	0	; () banked
 13940  0139A0  A1A8               	btfss	(___fladd@b+3)& (0+255),0,b
 13941  0139A2  D01C               	goto	l8375
 13942                           
 13943                           ; BSR set to: 0
 13944  0139A4  C0A5  F0AD         	movff	___fladd@b,??___fladd
 13945  0139A8  C0A6  F0AE         	movff	___fladd@b+1,??___fladd+1
 13946  0139AC  C0A7  F0AF         	movff	___fladd@b+2,??___fladd+2
 13947  0139B0  C0A8  F0B0         	movff	___fladd@b+3,??___fladd+3
 13948  0139B4  0100               	movlb	0	; () banked
 13949  0139B6  35B0               	rlcf	(??___fladd+3)& (0+255),w,b
 13950  0139B8  33B0               	rrcf	(??___fladd+3)& (0+255),f,b
 13951  0139BA  33AF               	rrcf	(??___fladd+2)& (0+255),f,b
 13952  0139BC  33AE               	rrcf	(??___fladd+1)& (0+255),f,b
 13953  0139BE  33AD               	rrcf	??___fladd& (0+255),f,b
 13954  0139C0  C0AD  F0A5         	movff	??___fladd,___fladd@b
 13955  0139C4  C0AE  F0A6         	movff	??___fladd+1,___fladd@b+1
 13956  0139C8  C0AF  F0A7         	movff	??___fladd+2,___fladd@b+2
 13957  0139CC  C0B0  F0A8         	movff	??___fladd+3,___fladd@b+3
 13958  0139D0  0100               	movlb	0	; () banked
 13959  0139D2  29B7               	incf	___fladd@bexp& (0+255),w,b
 13960  0139D4  B4D8               	btfsc	status,2,c
 13961  0139D6  D002               	goto	l8375
 13962                           
 13963                           ; BSR set to: 0
 13964  0139D8  0100               	movlb	0	; () banked
 13965  0139DA  2BB7               	incf	___fladd@bexp& (0+255),f,b
 13966  0139DC                     l8375:
 13967                           
 13968                           ; BSR set to: 0
 13969  0139DC  0100               	movlb	0	; () banked
 13970  0139DE  29B7               	incf	___fladd@bexp& (0+255),w,b
 13971  0139E0  B4D8               	btfsc	status,2,c
 13972  0139E2  D005               	goto	l8379
 13973                           
 13974                           ; BSR set to: 0
 13975  0139E4  0100               	movlb	0	; () banked
 13976  0139E6  51B7               	movf	___fladd@bexp& (0+255),w,b
 13977  0139E8  0100               	movlb	0	; () banked
 13978  0139EA  A4D8               	btfss	status,2,c
 13979  0139EC  D011               	goto	l8383
 13980  0139EE                     l8379:
 13981                           
 13982                           ; BSR set to: 0
 13983  0139EE  0E00               	movlw	0
 13984  0139F0  0100               	movlb	0	; () banked
 13985  0139F2  6FA5               	movwf	___fladd@b& (0+255),b
 13986  0139F4  0E00               	movlw	0
 13987  0139F6  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 13988  0139F8  0E00               	movlw	0
 13989  0139FA  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 13990  0139FC  0E00               	movlw	0
 13991  0139FE  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 13992  013A00  0100               	movlb	0	; () banked
 13993  013A02  51B7               	movf	___fladd@bexp& (0+255),w,b
 13994  013A04  0100               	movlb	0	; () banked
 13995  013A06  A4D8               	btfss	status,2,c
 13996  013A08  D003               	goto	l8383
 13997                           
 13998                           ; BSR set to: 0
 13999  013A0A  0E00               	movlw	0
 14000  013A0C  0100               	movlb	0	; () banked
 14001  013A0E  6FB5               	movwf	___fladd@signs& (0+255),b
 14002  013A10                     l8383:
 14003                           
 14004                           ; BSR set to: 0
 14005  013A10  0100               	movlb	0	; () banked
 14006  013A12  A1B7               	btfss	___fladd@bexp& (0+255),0,b
 14007  013A14  D003               	goto	l8387
 14008                           
 14009                           ; BSR set to: 0
 14010  013A16  0100               	movlb	0	; () banked
 14011  013A18  8FA7               	bsf	(___fladd@b+2)& (0+255),7,b
 14012  013A1A  D002               	goto	l8389
 14013  013A1C                     l8387:
 14014                           
 14015                           ; BSR set to: 0
 14016  013A1C  0100               	movlb	0	; () banked
 14017  013A1E  9FA7               	bcf	(___fladd@b+2)& (0+255),7,b
 14018  013A20                     l8389:
 14019                           
 14020                           ; BSR set to: 0
 14021  013A20  0100               	movlb	0	; () banked
 14022  013A22  90D8               	bcf	status,0,c
 14023  013A24  31B7               	rrcf	___fladd@bexp& (0+255),w,b
 14024  013A26  0100               	movlb	0	; () banked
 14025  013A28  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 14026                           
 14027                           ; BSR set to: 0
 14028  013A2A  0100               	movlb	0	; () banked
 14029  013A2C  AFB5               	btfss	___fladd@signs& (0+255),7,b
 14030  013A2E  D002               	goto	l8395
 14031                           
 14032                           ; BSR set to: 0
 14033  013A30  0100               	movlb	0	; () banked
 14034  013A32  8FA8               	bsf	(___fladd@b+3)& (0+255),7,b
 14035  013A34                     l8395:
 14036                           
 14037                           ; BSR set to: 0
 14038  013A34  C0A5  F0A5         	movff	___fladd@b,?___fladd
 14039  013A38  C0A6  F0A6         	movff	___fladd@b+1,?___fladd+1
 14040  013A3C  C0A7  F0A7         	movff	___fladd@b+2,?___fladd+2
 14041  013A40  C0A8  F0A8         	movff	___fladd@b+3,?___fladd+3
 14042  013A44  0012               	return	
 14043  013A46                     __end_of___fladd:
 14044                           	opt stack 0
 14045                           tblptru	equ	0xFF8
 14046                           tblptrh	equ	0xFF7
 14047                           tblptrl	equ	0xFF6
 14048                           tablat	equ	0xFF5
 14049                           prodh	equ	0xFF4
 14050                           prodl	equ	0xFF3
 14051                           intcon	equ	0xFF2
 14052                           postinc0	equ	0xFEE
 14053                           wreg	equ	0xFE8
 14054                           indf2	equ	0xFDF
 14055                           postinc2	equ	0xFDE
 14056                           fsr2h	equ	0xFDA
 14057                           fsr2l	equ	0xFD9
 14058                           status	equ	0xFD8
 14059                           
 14060 ;; *************** function ___flneg *****************
 14061 ;; Defined at:
 14062 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flneg.c"
 14063 ;; Parameters:    Size  Location     Type
 14064 ;;  f1              4   56[BANK0 ] unsigned char 
 14065 ;; Auto vars:     Size  Location     Type
 14066 ;;		None
 14067 ;; Return value:  Size  Location     Type
 14068 ;;                  4   56[BANK0 ] unsigned char 
 14069 ;; Registers used:
 14070 ;;		wreg, status,2, status,0
 14071 ;; Tracked objects:
 14072 ;;		On entry : 0/0
 14073 ;;		On exit  : 0/0
 14074 ;;		Unchanged: 0/0
 14075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14076 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14079 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14080 ;;Total ram usage:        4 bytes
 14081 ;; Hardware stack levels used:    1
 14082 ;; Hardware stack levels required when called:    3
 14083 ;; This function calls:
 14084 ;;		Nothing
 14085 ;; This function is called by:
 14086 ;;		_main
 14087 ;;		_sprintf
 14088 ;; This function uses a non-reentrant model
 14089 ;;
 14090                           
 14091                           	psect	text25
 14092  016652                     __ptext25:
 14093                           	opt stack 0
 14094  016652                     ___flneg:
 14095                           	opt stack 27
 14096                           
 14097                           ; BSR set to: 0
 14098                           ;incstack = 0
 14099  016652  0100               	movlb	0	; () banked
 14100  016654  5198               	movf	___flneg@f1& (0+255),w,b
 14101  016656  0100               	movlb	0	; () banked
 14102  016658  1199               	iorwf	(___flneg@f1+1)& (0+255),w,b
 14103  01665A  0100               	movlb	0	; () banked
 14104  01665C  119A               	iorwf	(___flneg@f1+2)& (0+255),w,b
 14105  01665E  0100               	movlb	0	; () banked
 14106  016660  119B               	iorwf	(___flneg@f1+3)& (0+255),w,b
 14107  016662  B4D8               	btfsc	status,2,c
 14108  016664  D009               	goto	l8861
 14109                           
 14110                           ; BSR set to: 0
 14111  016666  0E00               	movlw	0
 14112  016668  0100               	movlb	0	; () banked
 14113  01666A  1B98               	xorwf	___flneg@f1& (0+255),f,b
 14114  01666C  0E00               	movlw	0
 14115  01666E  1B99               	xorwf	(___flneg@f1+1)& (0+255),f,b
 14116  016670  0E00               	movlw	0
 14117  016672  1B9A               	xorwf	(___flneg@f1+2)& (0+255),f,b
 14118  016674  0E80               	movlw	128
 14119  016676  1B9B               	xorwf	(___flneg@f1+3)& (0+255),f,b
 14120  016678                     l8861:
 14121                           
 14122                           ; BSR set to: 0
 14123  016678  C098  F098         	movff	___flneg@f1,?___flneg
 14124  01667C  C099  F099         	movff	___flneg@f1+1,?___flneg+1
 14125  016680  C09A  F09A         	movff	___flneg@f1+2,?___flneg+2
 14126  016684  C09B  F09B         	movff	___flneg@f1+3,?___flneg+3
 14127  016688  0012               	return	
 14128  01668A                     __end_of___flneg:
 14129                           	opt stack 0
 14130                           tblptru	equ	0xFF8
 14131                           tblptrh	equ	0xFF7
 14132                           tblptrl	equ	0xFF6
 14133                           tablat	equ	0xFF5
 14134                           prodh	equ	0xFF4
 14135                           prodl	equ	0xFF3
 14136                           intcon	equ	0xFF2
 14137                           postinc0	equ	0xFEE
 14138                           wreg	equ	0xFE8
 14139                           indf2	equ	0xFDF
 14140                           postinc2	equ	0xFDE
 14141                           fsr2h	equ	0xFDA
 14142                           fsr2l	equ	0xFD9
 14143                           status	equ	0xFD8
 14144                           
 14145 ;; *************** function ___flge *****************
 14146 ;; Defined at:
 14147 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\flge.c"
 14148 ;; Parameters:    Size  Location     Type
 14149 ;;  ff1             4   17[BANK0 ] unsigned char 
 14150 ;;  ff2             4   21[BANK0 ] unsigned char 
 14151 ;; Auto vars:     Size  Location     Type
 14152 ;;		None
 14153 ;; Return value:  Size  Location     Type
 14154 ;;		None               void
 14155 ;; Registers used:
 14156 ;;		wreg, status,2, status,0
 14157 ;; Tracked objects:
 14158 ;;		On entry : 0/0
 14159 ;;		On exit  : 0/0
 14160 ;;		Unchanged: 0/0
 14161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14162 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14164 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14165 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14166 ;;Total ram usage:       12 bytes
 14167 ;; Hardware stack levels used:    1
 14168 ;; Hardware stack levels required when called:    3
 14169 ;; This function calls:
 14170 ;;		Nothing
 14171 ;; This function is called by:
 14172 ;;		_sprintf
 14173 ;; This function uses a non-reentrant model
 14174 ;;
 14175                           
 14176                           	psect	text26
 14177  015522                     __ptext26:
 14178                           	opt stack 0
 14179  015522                     ___flge:
 14180                           	opt stack 25
 14181                           
 14182                           ; BSR set to: 0
 14183                           ;incstack = 0
 14184  015522  0E00               	movlw	0
 14185  015524  0100               	movlb	0	; () banked
 14186  015526  1571               	andwf	___flge@ff1& (0+255),w,b
 14187  015528  0100               	movlb	0	; () banked
 14188  01552A  6F79               	movwf	??___flge& (0+255),b
 14189  01552C  0E00               	movlw	0
 14190  01552E  0100               	movlb	0	; () banked
 14191  015530  1572               	andwf	(___flge@ff1+1)& (0+255),w,b
 14192  015532  0100               	movlb	0	; () banked
 14193  015534  6F7A               	movwf	(??___flge+1)& (0+255),b
 14194  015536  0E80               	movlw	128
 14195  015538  0100               	movlb	0	; () banked
 14196  01553A  1573               	andwf	(___flge@ff1+2)& (0+255),w,b
 14197  01553C  0100               	movlb	0	; () banked
 14198  01553E  6F7B               	movwf	(??___flge+2)& (0+255),b
 14199  015540  0E7F               	movlw	127
 14200  015542  0100               	movlb	0	; () banked
 14201  015544  1574               	andwf	(___flge@ff1+3)& (0+255),w,b
 14202  015546  0100               	movlb	0	; () banked
 14203  015548  6F7C               	movwf	(??___flge+3)& (0+255),b
 14204  01554A  0100               	movlb	0	; () banked
 14205  01554C  5179               	movf	??___flge& (0+255),w,b
 14206  01554E  0100               	movlb	0	; () banked
 14207  015550  117A               	iorwf	(??___flge+1)& (0+255),w,b
 14208  015552  0100               	movlb	0	; () banked
 14209  015554  117B               	iorwf	(??___flge+2)& (0+255),w,b
 14210  015556  0100               	movlb	0	; () banked
 14211  015558  117C               	iorwf	(??___flge+3)& (0+255),w,b
 14212  01555A  A4D8               	btfss	status,2,c
 14213  01555C  D009               	goto	l8839
 14214                           
 14215                           ; BSR set to: 0
 14216  01555E  0E00               	movlw	0
 14217  015560  0100               	movlb	0	; () banked
 14218  015562  6F71               	movwf	___flge@ff1& (0+255),b
 14219  015564  0E00               	movlw	0
 14220  015566  6F72               	movwf	(___flge@ff1+1)& (0+255),b
 14221  015568  0E00               	movlw	0
 14222  01556A  6F73               	movwf	(___flge@ff1+2)& (0+255),b
 14223  01556C  0E00               	movlw	0
 14224  01556E  6F74               	movwf	(___flge@ff1+3)& (0+255),b
 14225  015570                     l8839:
 14226                           
 14227                           ; BSR set to: 0
 14228  015570  0E00               	movlw	0
 14229  015572  0100               	movlb	0	; () banked
 14230  015574  1575               	andwf	___flge@ff2& (0+255),w,b
 14231  015576  0100               	movlb	0	; () banked
 14232  015578  6F79               	movwf	??___flge& (0+255),b
 14233  01557A  0E00               	movlw	0
 14234  01557C  0100               	movlb	0	; () banked
 14235  01557E  1576               	andwf	(___flge@ff2+1)& (0+255),w,b
 14236  015580  0100               	movlb	0	; () banked
 14237  015582  6F7A               	movwf	(??___flge+1)& (0+255),b
 14238  015584  0E80               	movlw	128
 14239  015586  0100               	movlb	0	; () banked
 14240  015588  1577               	andwf	(___flge@ff2+2)& (0+255),w,b
 14241  01558A  0100               	movlb	0	; () banked
 14242  01558C  6F7B               	movwf	(??___flge+2)& (0+255),b
 14243  01558E  0E7F               	movlw	127
 14244  015590  0100               	movlb	0	; () banked
 14245  015592  1578               	andwf	(___flge@ff2+3)& (0+255),w,b
 14246  015594  0100               	movlb	0	; () banked
 14247  015596  6F7C               	movwf	(??___flge+3)& (0+255),b
 14248  015598  0100               	movlb	0	; () banked
 14249  01559A  5179               	movf	??___flge& (0+255),w,b
 14250  01559C  0100               	movlb	0	; () banked
 14251  01559E  117A               	iorwf	(??___flge+1)& (0+255),w,b
 14252  0155A0  0100               	movlb	0	; () banked
 14253  0155A2  117B               	iorwf	(??___flge+2)& (0+255),w,b
 14254  0155A4  0100               	movlb	0	; () banked
 14255  0155A6  117C               	iorwf	(??___flge+3)& (0+255),w,b
 14256  0155A8  A4D8               	btfss	status,2,c
 14257  0155AA  D009               	goto	l8843
 14258                           
 14259                           ; BSR set to: 0
 14260  0155AC  0E00               	movlw	0
 14261  0155AE  0100               	movlb	0	; () banked
 14262  0155B0  6F75               	movwf	___flge@ff2& (0+255),b
 14263  0155B2  0E00               	movlw	0
 14264  0155B4  6F76               	movwf	(___flge@ff2+1)& (0+255),b
 14265  0155B6  0E00               	movlw	0
 14266  0155B8  6F77               	movwf	(___flge@ff2+2)& (0+255),b
 14267  0155BA  0E00               	movlw	0
 14268  0155BC  6F78               	movwf	(___flge@ff2+3)& (0+255),b
 14269  0155BE                     l8843:
 14270                           
 14271                           ; BSR set to: 0
 14272  0155BE  0100               	movlb	0	; () banked
 14273  0155C0  AF74               	btfss	(___flge@ff1+3)& (0+255),7,b
 14274  0155C2  D026               	goto	l8847
 14275                           
 14276                           ; BSR set to: 0
 14277  0155C4  C071  F079         	movff	___flge@ff1,??___flge
 14278  0155C8  C072  F07A         	movff	___flge@ff1+1,??___flge+1
 14279  0155CC  C073  F07B         	movff	___flge@ff1+2,??___flge+2
 14280  0155D0  C074  F07C         	movff	___flge@ff1+3,??___flge+3
 14281  0155D4  0100               	movlb	0	; () banked
 14282  0155D6  1F79               	comf	??___flge& (0+255),f,b
 14283  0155D8  1F7A               	comf	(??___flge+1)& (0+255),f,b
 14284  0155DA  1F7B               	comf	(??___flge+2)& (0+255),f,b
 14285  0155DC  1F7C               	comf	(??___flge+3)& (0+255),f,b
 14286  0155DE  2B79               	incf	??___flge& (0+255),f,b
 14287  0155E0  0E00               	movlw	0
 14288  0155E2  237A               	addwfc	(??___flge+1)& (0+255),f,b
 14289  0155E4  237B               	addwfc	(??___flge+2)& (0+255),f,b
 14290  0155E6  237C               	addwfc	(??___flge+3)& (0+255),f,b
 14291  0155E8  0E00               	movlw	0
 14292  0155EA  0100               	movlb	0	; () banked
 14293  0155EC  2579               	addwf	??___flge& (0+255),w,b
 14294  0155EE  0100               	movlb	0	; () banked
 14295  0155F0  6F71               	movwf	___flge@ff1& (0+255),b
 14296  0155F2  0E00               	movlw	0
 14297  0155F4  0100               	movlb	0	; () banked
 14298  0155F6  217A               	addwfc	(??___flge+1)& (0+255),w,b
 14299  0155F8  0100               	movlb	0	; () banked
 14300  0155FA  6F72               	movwf	(___flge@ff1+1)& (0+255),b
 14301  0155FC  0E00               	movlw	0
 14302  0155FE  0100               	movlb	0	; () banked
 14303  015600  217B               	addwfc	(??___flge+2)& (0+255),w,b
 14304  015602  0100               	movlb	0	; () banked
 14305  015604  6F73               	movwf	(___flge@ff1+2)& (0+255),b
 14306  015606  0E80               	movlw	128
 14307  015608  0100               	movlb	0	; () banked
 14308  01560A  217C               	addwfc	(??___flge+3)& (0+255),w,b
 14309  01560C  0100               	movlb	0	; () banked
 14310  01560E  6F74               	movwf	(___flge@ff1+3)& (0+255),b
 14311  015610                     l8847:
 14312                           
 14313                           ; BSR set to: 0
 14314  015610  0100               	movlb	0	; () banked
 14315  015612  AF78               	btfss	(___flge@ff2+3)& (0+255),7,b
 14316  015614  D026               	goto	l1306
 14317                           
 14318                           ; BSR set to: 0
 14319  015616  C075  F079         	movff	___flge@ff2,??___flge
 14320  01561A  C076  F07A         	movff	___flge@ff2+1,??___flge+1
 14321  01561E  C077  F07B         	movff	___flge@ff2+2,??___flge+2
 14322  015622  C078  F07C         	movff	___flge@ff2+3,??___flge+3
 14323  015626  0100               	movlb	0	; () banked
 14324  015628  1F79               	comf	??___flge& (0+255),f,b
 14325  01562A  1F7A               	comf	(??___flge+1)& (0+255),f,b
 14326  01562C  1F7B               	comf	(??___flge+2)& (0+255),f,b
 14327  01562E  1F7C               	comf	(??___flge+3)& (0+255),f,b
 14328  015630  2B79               	incf	??___flge& (0+255),f,b
 14329  015632  0E00               	movlw	0
 14330  015634  237A               	addwfc	(??___flge+1)& (0+255),f,b
 14331  015636  237B               	addwfc	(??___flge+2)& (0+255),f,b
 14332  015638  237C               	addwfc	(??___flge+3)& (0+255),f,b
 14333  01563A  0E00               	movlw	0
 14334  01563C  0100               	movlb	0	; () banked
 14335  01563E  2579               	addwf	??___flge& (0+255),w,b
 14336  015640  0100               	movlb	0	; () banked
 14337  015642  6F75               	movwf	___flge@ff2& (0+255),b
 14338  015644  0E00               	movlw	0
 14339  015646  0100               	movlb	0	; () banked
 14340  015648  217A               	addwfc	(??___flge+1)& (0+255),w,b
 14341  01564A  0100               	movlb	0	; () banked
 14342  01564C  6F76               	movwf	(___flge@ff2+1)& (0+255),b
 14343  01564E  0E00               	movlw	0
 14344  015650  0100               	movlb	0	; () banked
 14345  015652  217B               	addwfc	(??___flge+2)& (0+255),w,b
 14346  015654  0100               	movlb	0	; () banked
 14347  015656  6F77               	movwf	(___flge@ff2+2)& (0+255),b
 14348  015658  0E80               	movlw	128
 14349  01565A  0100               	movlb	0	; () banked
 14350  01565C  217C               	addwfc	(??___flge+3)& (0+255),w,b
 14351  01565E  0100               	movlb	0	; () banked
 14352  015660  6F78               	movwf	(___flge@ff2+3)& (0+255),b
 14353  015662                     l1306:
 14354                           
 14355                           ; BSR set to: 0
 14356  015662  0E00               	movlw	0
 14357  015664  0100               	movlb	0	; () banked
 14358  015666  1B71               	xorwf	___flge@ff1& (0+255),f,b
 14359  015668  0E00               	movlw	0
 14360  01566A  1B72               	xorwf	(___flge@ff1+1)& (0+255),f,b
 14361  01566C  0E00               	movlw	0
 14362  01566E  1B73               	xorwf	(___flge@ff1+2)& (0+255),f,b
 14363  015670  0E80               	movlw	128
 14364  015672  1B74               	xorwf	(___flge@ff1+3)& (0+255),f,b
 14365  015674  0E00               	movlw	0
 14366  015676  0100               	movlb	0	; () banked
 14367  015678  1B75               	xorwf	___flge@ff2& (0+255),f,b
 14368  01567A  0E00               	movlw	0
 14369  01567C  1B76               	xorwf	(___flge@ff2+1)& (0+255),f,b
 14370  01567E  0E00               	movlw	0
 14371  015680  1B77               	xorwf	(___flge@ff2+2)& (0+255),f,b
 14372  015682  0E80               	movlw	128
 14373  015684  1B78               	xorwf	(___flge@ff2+3)& (0+255),f,b
 14374  015686  0100               	movlb	0	; () banked
 14375  015688  5175               	movf	___flge@ff2& (0+255),w,b
 14376  01568A  0100               	movlb	0	; () banked
 14377  01568C  5D71               	subwf	___flge@ff1& (0+255),w,b
 14378  01568E  0100               	movlb	0	; () banked
 14379  015690  5176               	movf	(___flge@ff2+1)& (0+255),w,b
 14380  015692  0100               	movlb	0	; () banked
 14381  015694  5972               	subwfb	(___flge@ff1+1)& (0+255),w,b
 14382  015696  0100               	movlb	0	; () banked
 14383  015698  5177               	movf	(___flge@ff2+2)& (0+255),w,b
 14384  01569A  0100               	movlb	0	; () banked
 14385  01569C  5973               	subwfb	(___flge@ff1+2)& (0+255),w,b
 14386  01569E  0100               	movlb	0	; () banked
 14387  0156A0  5178               	movf	(___flge@ff2+3)& (0+255),w,b
 14388  0156A2  0100               	movlb	0	; () banked
 14389  0156A4  5974               	subwfb	(___flge@ff1+3)& (0+255),w,b
 14390  0156A6  B0D8               	btfsc	status,0,c
 14391  0156A8  D002               	goto	l8853
 14392                           
 14393                           ; BSR set to: 0
 14394  0156AA  90D8               	bcf	status,0,c
 14395  0156AC  0012               	return	
 14396  0156AE                     l8853:
 14397                           
 14398                           ; BSR set to: 0
 14399  0156AE  80D8               	bsf	status,0,c
 14400                           
 14401                           ; BSR set to: 0
 14402  0156B0  0012               	return	
 14403  0156B2                     __end_of___flge:
 14404                           	opt stack 0
 14405                           tblptru	equ	0xFF8
 14406                           tblptrh	equ	0xFF7
 14407                           tblptrl	equ	0xFF6
 14408                           tablat	equ	0xFF5
 14409                           prodh	equ	0xFF4
 14410                           prodl	equ	0xFF3
 14411                           intcon	equ	0xFF2
 14412                           postinc0	equ	0xFEE
 14413                           wreg	equ	0xFE8
 14414                           indf2	equ	0xFDF
 14415                           postinc2	equ	0xFDE
 14416                           fsr2h	equ	0xFDA
 14417                           fsr2l	equ	0xFD9
 14418                           status	equ	0xFD8
 14419                           
 14420 ;; *************** function ___fldiv *****************
 14421 ;; Defined at:
 14422 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\sprcdiv.c"
 14423 ;; Parameters:    Size  Location     Type
 14424 ;;  b               4   31[BANK0 ] unsigned char 
 14425 ;;  a               4   35[BANK0 ] unsigned char 
 14426 ;; Auto vars:     Size  Location     Type
 14427 ;;  grs             4   50[BANK0 ] unsigned long 
 14428 ;;  rem             4   44[BANK0 ] unsigned long 
 14429 ;;  new_exp         2   48[BANK0 ] int 
 14430 ;;  aexp            1   55[BANK0 ] unsigned char 
 14431 ;;  bexp            1   54[BANK0 ] unsigned char 
 14432 ;;  sign            1   43[BANK0 ] unsigned char 
 14433 ;; Return value:  Size  Location     Type
 14434 ;;                  4   31[BANK0 ] unsigned char 
 14435 ;; Registers used:
 14436 ;;		wreg, status,2, status,0
 14437 ;; Tracked objects:
 14438 ;;		On entry : 0/0
 14439 ;;		On exit  : 0/0
 14440 ;;		Unchanged: 0/0
 14441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14442 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14443 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14444 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14445 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14446 ;;Total ram usage:       25 bytes
 14447 ;; Hardware stack levels used:    1
 14448 ;; Hardware stack levels required when called:    3
 14449 ;; This function calls:
 14450 ;;		Nothing
 14451 ;; This function is called by:
 14452 ;;		_LCD_Handler
 14453 ;; This function uses a non-reentrant model
 14454 ;;
 14455                           
 14456                           	psect	text27
 14457  013EEC                     __ptext27:
 14458                           	opt stack 0
 14459  013EEC                     ___fldiv:
 14460                           	opt stack 26
 14461                           
 14462                           ; BSR set to: 0
 14463                           ;incstack = 0
 14464  013EEC  0100               	movlb	0	; () banked
 14465  013EEE  5182               	movf	(___fldiv@b+3)& (0+255),w,b
 14466  013EF0  0B80               	andlw	128
 14467  013EF2  0100               	movlb	0	; () banked
 14468  013EF4  6F8B               	movwf	___fldiv@sign& (0+255),b
 14469  013EF6  0100               	movlb	0	; () banked
 14470  013EF8  5182               	movf	(___fldiv@b+3)& (0+255),w,b
 14471  013EFA  2582               	addwf	(___fldiv@b+3)& (0+255),w,b
 14472  013EFC  0100               	movlb	0	; () banked
 14473  013EFE  6F96               	movwf	___fldiv@bexp& (0+255),b
 14474                           
 14475                           ; BSR set to: 0
 14476  013F00  0100               	movlb	0	; () banked
 14477  013F02  AF81               	btfss	(___fldiv@b+2)& (0+255),7,b
 14478  013F04  D002               	goto	l6901
 14479                           
 14480                           ; BSR set to: 0
 14481  013F06  0100               	movlb	0	; () banked
 14482  013F08  8196               	bsf	___fldiv@bexp& (0+255),0,b
 14483  013F0A                     l6901:
 14484                           
 14485                           ; BSR set to: 0
 14486  013F0A  0100               	movlb	0	; () banked
 14487  013F0C  5196               	movf	___fldiv@bexp& (0+255),w,b
 14488  013F0E  0100               	movlb	0	; () banked
 14489  013F10  B4D8               	btfsc	status,2,c
 14490  013F12  D012               	goto	l6911
 14491                           
 14492                           ; BSR set to: 0
 14493  013F14  0100               	movlb	0	; () banked
 14494  013F16  2996               	incf	___fldiv@bexp& (0+255),w,b
 14495  013F18  A4D8               	btfss	status,2,c
 14496  013F1A  D009               	goto	l6907
 14497                           
 14498                           ; BSR set to: 0
 14499  013F1C  0E00               	movlw	0
 14500  013F1E  0100               	movlb	0	; () banked
 14501  013F20  6F7F               	movwf	___fldiv@b& (0+255),b
 14502  013F22  0E00               	movlw	0
 14503  013F24  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 14504  013F26  0E00               	movlw	0
 14505  013F28  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 14506  013F2A  0E00               	movlw	0
 14507  013F2C  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14508  013F2E                     l6907:
 14509                           
 14510                           ; BSR set to: 0
 14511  013F2E  0100               	movlb	0	; () banked
 14512  013F30  8F81               	bsf	(___fldiv@b+2)& (0+255),7,b
 14513                           
 14514                           ; BSR set to: 0
 14515  013F32  0E00               	movlw	0
 14516  013F34  0100               	movlb	0	; () banked
 14517  013F36  D008               	goto	L15
 14518  013F38                     l6911:
 14519                           
 14520                           ; BSR set to: 0
 14521  013F38  0E00               	movlw	0
 14522  013F3A  0100               	movlb	0	; () banked
 14523  013F3C  6F7F               	movwf	___fldiv@b& (0+255),b
 14524  013F3E  0E00               	movlw	0
 14525  013F40  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 14526  013F42  0E00               	movlw	0
 14527  013F44  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 14528  013F46  0E00               	movlw	0
 14529  013F48                     L15:
 14530  013F48  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14531                           
 14532                           ; BSR set to: 0
 14533                           
 14534                           ; BSR set to: 0
 14535  013F4A  0100               	movlb	0	; () banked
 14536  013F4C  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 14537  013F4E  0B80               	andlw	128
 14538  013F50  0100               	movlb	0	; () banked
 14539  013F52  1B8B               	xorwf	___fldiv@sign& (0+255),f,b
 14540                           
 14541                           ; BSR set to: 0
 14542  013F54  0100               	movlb	0	; () banked
 14543  013F56  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 14544  013F58  2586               	addwf	(___fldiv@a+3)& (0+255),w,b
 14545  013F5A  0100               	movlb	0	; () banked
 14546  013F5C  6F97               	movwf	___fldiv@aexp& (0+255),b
 14547                           
 14548                           ; BSR set to: 0
 14549  013F5E  0100               	movlb	0	; () banked
 14550  013F60  AF85               	btfss	(___fldiv@a+2)& (0+255),7,b
 14551  013F62  D002               	goto	l6921
 14552                           
 14553                           ; BSR set to: 0
 14554  013F64  0100               	movlb	0	; () banked
 14555  013F66  8197               	bsf	___fldiv@aexp& (0+255),0,b
 14556  013F68                     l6921:
 14557                           
 14558                           ; BSR set to: 0
 14559  013F68  0100               	movlb	0	; () banked
 14560  013F6A  5197               	movf	___fldiv@aexp& (0+255),w,b
 14561  013F6C  0100               	movlb	0	; () banked
 14562  013F6E  B4D8               	btfsc	status,2,c
 14563  013F70  D012               	goto	l6931
 14564                           
 14565                           ; BSR set to: 0
 14566  013F72  0100               	movlb	0	; () banked
 14567  013F74  2997               	incf	___fldiv@aexp& (0+255),w,b
 14568  013F76  A4D8               	btfss	status,2,c
 14569  013F78  D009               	goto	l6927
 14570                           
 14571                           ; BSR set to: 0
 14572  013F7A  0E00               	movlw	0
 14573  013F7C  0100               	movlb	0	; () banked
 14574  013F7E  6F83               	movwf	___fldiv@a& (0+255),b
 14575  013F80  0E00               	movlw	0
 14576  013F82  6F84               	movwf	(___fldiv@a+1)& (0+255),b
 14577  013F84  0E00               	movlw	0
 14578  013F86  6F85               	movwf	(___fldiv@a+2)& (0+255),b
 14579  013F88  0E00               	movlw	0
 14580  013F8A  6F86               	movwf	(___fldiv@a+3)& (0+255),b
 14581  013F8C                     l6927:
 14582                           
 14583                           ; BSR set to: 0
 14584  013F8C  0100               	movlb	0	; () banked
 14585  013F8E  8F85               	bsf	(___fldiv@a+2)& (0+255),7,b
 14586                           
 14587                           ; BSR set to: 0
 14588  013F90  0E00               	movlw	0
 14589  013F92  0100               	movlb	0	; () banked
 14590  013F94  D008               	goto	L16
 14591  013F96                     l6931:
 14592                           
 14593                           ; BSR set to: 0
 14594  013F96  0E00               	movlw	0
 14595  013F98  0100               	movlb	0	; () banked
 14596  013F9A  6F83               	movwf	___fldiv@a& (0+255),b
 14597  013F9C  0E00               	movlw	0
 14598  013F9E  6F84               	movwf	(___fldiv@a+1)& (0+255),b
 14599  013FA0  0E00               	movlw	0
 14600  013FA2  6F85               	movwf	(___fldiv@a+2)& (0+255),b
 14601  013FA4  0E00               	movlw	0
 14602  013FA6                     L16:
 14603  013FA6  6F86               	movwf	(___fldiv@a+3)& (0+255),b
 14604                           
 14605                           ; BSR set to: 0
 14606                           
 14607                           ; BSR set to: 0
 14608  013FA8  0100               	movlb	0	; () banked
 14609  013FAA  5183               	movf	___fldiv@a& (0+255),w,b
 14610  013FAC  0100               	movlb	0	; () banked
 14611  013FAE  1184               	iorwf	(___fldiv@a+1)& (0+255),w,b
 14612  013FB0  0100               	movlb	0	; () banked
 14613  013FB2  1185               	iorwf	(___fldiv@a+2)& (0+255),w,b
 14614  013FB4  0100               	movlb	0	; () banked
 14615  013FB6  1186               	iorwf	(___fldiv@a+3)& (0+255),w,b
 14616  013FB8  A4D8               	btfss	status,2,c
 14617  013FBA  D017               	goto	l6943
 14618                           
 14619                           ; BSR set to: 0
 14620  013FBC  0E00               	movlw	0
 14621  013FBE  0100               	movlb	0	; () banked
 14622  013FC0  6F7F               	movwf	___fldiv@b& (0+255),b
 14623  013FC2  0E00               	movlw	0
 14624  013FC4  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 14625  013FC6  0E00               	movlw	0
 14626  013FC8  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 14627  013FCA  0E00               	movlw	0
 14628  013FCC  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14629                           
 14630                           ; BSR set to: 0
 14631  013FCE  0100               	movlb	0	; () banked
 14632  013FD0  0E80               	movlw	128
 14633  013FD2  1381               	iorwf	(___fldiv@b+2)& (0+255),f,b
 14634  013FD4  0E7F               	movlw	127
 14635  013FD6  1382               	iorwf	(___fldiv@b+3)& (0+255),f,b
 14636                           
 14637                           ; BSR set to: 0
 14638  013FD8  C07F  F07F         	movff	___fldiv@b,?___fldiv
 14639  013FDC  C080  F080         	movff	___fldiv@b+1,?___fldiv+1
 14640  013FE0  C081  F081         	movff	___fldiv@b+2,?___fldiv+2
 14641  013FE4  C082  F082         	movff	___fldiv@b+3,?___fldiv+3
 14642                           
 14643                           ; BSR set to: 0
 14644  013FE8  0012               	return	
 14645  013FEA                     l6943:
 14646                           
 14647                           ; BSR set to: 0
 14648  013FEA  0100               	movlb	0	; () banked
 14649  013FEC  5196               	movf	___fldiv@bexp& (0+255),w,b
 14650  013FEE  0100               	movlb	0	; () banked
 14651  013FF0  A4D8               	btfss	status,2,c
 14652  013FF2  D012               	goto	l6951
 14653                           
 14654                           ; BSR set to: 0
 14655  013FF4  0E00               	movlw	0
 14656  013FF6  0100               	movlb	0	; () banked
 14657  013FF8  6F7F               	movwf	___fldiv@b& (0+255),b
 14658  013FFA  0E00               	movlw	0
 14659  013FFC  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 14660  013FFE  0E00               	movlw	0
 14661  014000  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 14662  014002  0E00               	movlw	0
 14663  014004  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14664                           
 14665                           ; BSR set to: 0
 14666  014006  C07F  F07F         	movff	___fldiv@b,?___fldiv
 14667  01400A  C080  F080         	movff	___fldiv@b+1,?___fldiv+1
 14668  01400E  C081  F081         	movff	___fldiv@b+2,?___fldiv+2
 14669  014012  C082  F082         	movff	___fldiv@b+3,?___fldiv+3
 14670                           
 14671                           ; BSR set to: 0
 14672  014016  0012               	return	
 14673  014018                     l6951:
 14674                           
 14675                           ; BSR set to: 0
 14676  014018  0100               	movlb	0	; () banked
 14677  01401A  5197               	movf	___fldiv@aexp& (0+255),w,b
 14678  01401C  0100               	movlb	0	; () banked
 14679  01401E  6F87               	movwf	??___fldiv& (0+255),b
 14680  014020  6B88               	clrf	(??___fldiv+1)& (0+255),b
 14681  014022  0100               	movlb	0	; () banked
 14682  014024  1F87               	comf	??___fldiv& (0+255),f,b
 14683  014026  1F88               	comf	(??___fldiv+1)& (0+255),f,b
 14684  014028  4B87               	infsnz	??___fldiv& (0+255),f,b
 14685  01402A  2B88               	incf	(??___fldiv+1)& (0+255),f,b
 14686  01402C  0100               	movlb	0	; () banked
 14687  01402E  5196               	movf	___fldiv@bexp& (0+255),w,b
 14688  014030  0100               	movlb	0	; () banked
 14689  014032  6F89               	movwf	(??___fldiv+2)& (0+255),b
 14690  014034  6B8A               	clrf	(??___fldiv+3)& (0+255),b
 14691  014036  0100               	movlb	0	; () banked
 14692  014038  5187               	movf	??___fldiv& (0+255),w,b
 14693  01403A  0100               	movlb	0	; () banked
 14694  01403C  2789               	addwf	(??___fldiv+2)& (0+255),f,b
 14695  01403E  0100               	movlb	0	; () banked
 14696  014040  5188               	movf	(??___fldiv+1)& (0+255),w,b
 14697  014042  0100               	movlb	0	; () banked
 14698  014044  238A               	addwfc	(??___fldiv+3)& (0+255),f,b
 14699  014046  0E7F               	movlw	127
 14700  014048  0100               	movlb	0	; () banked
 14701  01404A  2589               	addwf	(??___fldiv+2)& (0+255),w,b
 14702  01404C  0100               	movlb	0	; () banked
 14703  01404E  6F90               	movwf	___fldiv@new_exp& (0+255),b
 14704  014050  0E00               	movlw	0
 14705  014052  0100               	movlb	0	; () banked
 14706  014054  218A               	addwfc	(??___fldiv+3)& (0+255),w,b
 14707  014056  0100               	movlb	0	; () banked
 14708  014058  6F91               	movwf	(___fldiv@new_exp+1)& (0+255),b
 14709                           
 14710                           ; BSR set to: 0
 14711  01405A  C07F  F08C         	movff	___fldiv@b,___fldiv@rem
 14712  01405E  C080  F08D         	movff	___fldiv@b+1,___fldiv@rem+1
 14713  014062  C081  F08E         	movff	___fldiv@b+2,___fldiv@rem+2
 14714  014066  C082  F08F         	movff	___fldiv@b+3,___fldiv@rem+3
 14715                           
 14716                           ; BSR set to: 0
 14717  01406A  0E00               	movlw	0
 14718  01406C  0100               	movlb	0	; () banked
 14719  01406E  6F7F               	movwf	___fldiv@b& (0+255),b
 14720  014070  0E00               	movlw	0
 14721  014072  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 14722  014074  0E00               	movlw	0
 14723  014076  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 14724  014078  0E00               	movlw	0
 14725  01407A  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 14726                           
 14727                           ; BSR set to: 0
 14728  01407C  0E00               	movlw	0
 14729  01407E  0100               	movlb	0	; () banked
 14730  014080  6F92               	movwf	___fldiv@grs& (0+255),b
 14731  014082  0E00               	movlw	0
 14732  014084  6F93               	movwf	(___fldiv@grs+1)& (0+255),b
 14733  014086  0E00               	movlw	0
 14734  014088  6F94               	movwf	(___fldiv@grs+2)& (0+255),b
 14735  01408A  0E00               	movlw	0
 14736  01408C  6F95               	movwf	(___fldiv@grs+3)& (0+255),b
 14737                           
 14738                           ; BSR set to: 0
 14739  01408E  0E00               	movlw	0
 14740  014090  0100               	movlb	0	; () banked
 14741  014092  6F97               	movwf	___fldiv@aexp& (0+255),b
 14742  014094  D042               	goto	l1639
 14743  014096                     l6961:
 14744                           
 14745                           ; BSR set to: 0
 14746  014096  0100               	movlb	0	; () banked
 14747  014098  5197               	movf	___fldiv@aexp& (0+255),w,b
 14748  01409A  0100               	movlb	0	; () banked
 14749  01409C  B4D8               	btfsc	status,2,c
 14750  01409E  D017               	goto	l6969
 14751                           
 14752                           ; BSR set to: 0
 14753  0140A0  0100               	movlb	0	; () banked
 14754  0140A2  90D8               	bcf	status,0,c
 14755  0140A4  378C               	rlcf	___fldiv@rem& (0+255),f,b
 14756  0140A6  378D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 14757  0140A8  378E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 14758  0140AA  378F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 14759  0140AC  0100               	movlb	0	; () banked
 14760  0140AE  90D8               	bcf	status,0,c
 14761  0140B0  377F               	rlcf	___fldiv@b& (0+255),f,b
 14762  0140B2  3780               	rlcf	(___fldiv@b+1)& (0+255),f,b
 14763  0140B4  3781               	rlcf	(___fldiv@b+2)& (0+255),f,b
 14764  0140B6  3782               	rlcf	(___fldiv@b+3)& (0+255),f,b
 14765                           
 14766                           ; BSR set to: 0
 14767  0140B8  0100               	movlb	0	; () banked
 14768  0140BA  AF95               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14769  0140BC  D002               	goto	l1642
 14770                           
 14771                           ; BSR set to: 0
 14772  0140BE  0100               	movlb	0	; () banked
 14773  0140C0  817F               	bsf	___fldiv@b& (0+255),0,b
 14774  0140C2                     l1642:
 14775                           
 14776                           ; BSR set to: 0
 14777  0140C2  0100               	movlb	0	; () banked
 14778  0140C4  90D8               	bcf	status,0,c
 14779  0140C6  3792               	rlcf	___fldiv@grs& (0+255),f,b
 14780  0140C8  3793               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14781  0140CA  3794               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14782  0140CC  3795               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14783  0140CE                     l6969:
 14784                           
 14785                           ; BSR set to: 0
 14786  0140CE  0100               	movlb	0	; () banked
 14787  0140D0  5183               	movf	___fldiv@a& (0+255),w,b
 14788  0140D2  0100               	movlb	0	; () banked
 14789  0140D4  5D8C               	subwf	___fldiv@rem& (0+255),w,b
 14790  0140D6  0100               	movlb	0	; () banked
 14791  0140D8  5184               	movf	(___fldiv@a+1)& (0+255),w,b
 14792  0140DA  0100               	movlb	0	; () banked
 14793  0140DC  598D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 14794  0140DE  0100               	movlb	0	; () banked
 14795  0140E0  5185               	movf	(___fldiv@a+2)& (0+255),w,b
 14796  0140E2  0100               	movlb	0	; () banked
 14797  0140E4  598E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 14798  0140E6  0100               	movlb	0	; () banked
 14799  0140E8  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 14800  0140EA  0100               	movlb	0	; () banked
 14801  0140EC  598F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 14802  0140EE  A0D8               	btfss	status,0,c
 14803  0140F0  D012               	goto	l6975
 14804                           
 14805                           ; BSR set to: 0
 14806  0140F2  0100               	movlb	0	; () banked
 14807  0140F4  8D95               	bsf	(___fldiv@grs+3)& (0+255),6,b
 14808                           
 14809                           ; BSR set to: 0
 14810  0140F6  0100               	movlb	0	; () banked
 14811  0140F8  5183               	movf	___fldiv@a& (0+255),w,b
 14812  0140FA  0100               	movlb	0	; () banked
 14813  0140FC  5F8C               	subwf	___fldiv@rem& (0+255),f,b
 14814  0140FE  0100               	movlb	0	; () banked
 14815  014100  5184               	movf	(___fldiv@a+1)& (0+255),w,b
 14816  014102  0100               	movlb	0	; () banked
 14817  014104  5B8D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 14818  014106  0100               	movlb	0	; () banked
 14819  014108  5185               	movf	(___fldiv@a+2)& (0+255),w,b
 14820  01410A  0100               	movlb	0	; () banked
 14821  01410C  5B8E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 14822  01410E  0100               	movlb	0	; () banked
 14823  014110  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 14824  014112  0100               	movlb	0	; () banked
 14825  014114  5B8F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 14826  014116                     l6975:
 14827                           
 14828                           ; BSR set to: 0
 14829  014116  0100               	movlb	0	; () banked
 14830  014118  2B97               	incf	___fldiv@aexp& (0+255),f,b
 14831  01411A                     l1639:
 14832                           
 14833                           ; BSR set to: 0
 14834  01411A  0E19               	movlw	25
 14835  01411C  0100               	movlb	0	; () banked
 14836  01411E  6597               	cpfsgt	___fldiv@aexp& (0+255),b
 14837  014120  D7BA               	goto	l6961
 14838                           
 14839                           ; BSR set to: 0
 14840                           
 14841                           ; BSR set to: 0
 14842  014122  0100               	movlb	0	; () banked
 14843  014124  518C               	movf	___fldiv@rem& (0+255),w,b
 14844  014126  0100               	movlb	0	; () banked
 14845  014128  118D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 14846  01412A  0100               	movlb	0	; () banked
 14847  01412C  118E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 14848  01412E  0100               	movlb	0	; () banked
 14849  014130  118F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 14850  014132  B4D8               	btfsc	status,2,c
 14851  014134  D018               	goto	l6987
 14852                           
 14853                           ; BSR set to: 0
 14854  014136  0100               	movlb	0	; () banked
 14855  014138  8192               	bsf	___fldiv@grs& (0+255),0,b
 14856                           
 14857                           ; BSR set to: 0
 14858  01413A  D015               	goto	l6987
 14859  01413C                     l6981:
 14860                           
 14861                           ; BSR set to: 0
 14862  01413C  0100               	movlb	0	; () banked
 14863  01413E  90D8               	bcf	status,0,c
 14864  014140  377F               	rlcf	___fldiv@b& (0+255),f,b
 14865  014142  3780               	rlcf	(___fldiv@b+1)& (0+255),f,b
 14866  014144  3781               	rlcf	(___fldiv@b+2)& (0+255),f,b
 14867  014146  3782               	rlcf	(___fldiv@b+3)& (0+255),f,b
 14868                           
 14869                           ; BSR set to: 0
 14870  014148  0100               	movlb	0	; () banked
 14871  01414A  AF95               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14872  01414C  D002               	goto	l1648
 14873                           
 14874                           ; BSR set to: 0
 14875  01414E  0100               	movlb	0	; () banked
 14876  014150  817F               	bsf	___fldiv@b& (0+255),0,b
 14877  014152                     l1648:
 14878                           
 14879                           ; BSR set to: 0
 14880  014152  0100               	movlb	0	; () banked
 14881  014154  90D8               	bcf	status,0,c
 14882  014156  3792               	rlcf	___fldiv@grs& (0+255),f,b
 14883  014158  3793               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 14884  01415A  3794               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 14885  01415C  3795               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 14886  01415E  0100               	movlb	0	; () banked
 14887  014160  0790               	decf	___fldiv@new_exp& (0+255),f,b
 14888  014162  A0D8               	btfss	status,0,c
 14889  014164  0791               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 14890  014166                     l6987:
 14891                           
 14892                           ; BSR set to: 0
 14893  014166  0100               	movlb	0	; () banked
 14894  014168  AF81               	btfss	(___fldiv@b+2)& (0+255),7,b
 14895  01416A  D7E8               	goto	l6981
 14896                           
 14897                           ; BSR set to: 0
 14898                           
 14899                           ; BSR set to: 0
 14900  01416C  0E00               	movlw	0
 14901  01416E  0100               	movlb	0	; () banked
 14902  014170  6F97               	movwf	___fldiv@aexp& (0+255),b
 14903                           
 14904                           ; BSR set to: 0
 14905  014172  0100               	movlb	0	; () banked
 14906  014174  AF95               	btfss	(___fldiv@grs+3)& (0+255),7,b
 14907  014176  D024               	goto	l1650
 14908                           
 14909                           ; BSR set to: 0
 14910  014178  0EFF               	movlw	255
 14911  01417A  0100               	movlb	0	; () banked
 14912  01417C  1592               	andwf	___fldiv@grs& (0+255),w,b
 14913  01417E  0100               	movlb	0	; () banked
 14914  014180  6F87               	movwf	??___fldiv& (0+255),b
 14915  014182  0EFF               	movlw	255
 14916  014184  0100               	movlb	0	; () banked
 14917  014186  1593               	andwf	(___fldiv@grs+1)& (0+255),w,b
 14918  014188  0100               	movlb	0	; () banked
 14919  01418A  6F88               	movwf	(??___fldiv+1)& (0+255),b
 14920  01418C  0EFF               	movlw	255
 14921  01418E  0100               	movlb	0	; () banked
 14922  014190  1594               	andwf	(___fldiv@grs+2)& (0+255),w,b
 14923  014192  0100               	movlb	0	; () banked
 14924  014194  6F89               	movwf	(??___fldiv+2)& (0+255),b
 14925  014196  0E7F               	movlw	127
 14926  014198  0100               	movlb	0	; () banked
 14927  01419A  1595               	andwf	(___fldiv@grs+3)& (0+255),w,b
 14928  01419C  0100               	movlb	0	; () banked
 14929  01419E  6F8A               	movwf	(??___fldiv+3)& (0+255),b
 14930  0141A0  0100               	movlb	0	; () banked
 14931  0141A2  5187               	movf	??___fldiv& (0+255),w,b
 14932  0141A4  0100               	movlb	0	; () banked
 14933  0141A6  1188               	iorwf	(??___fldiv+1)& (0+255),w,b
 14934  0141A8  0100               	movlb	0	; () banked
 14935  0141AA  1189               	iorwf	(??___fldiv+2)& (0+255),w,b
 14936  0141AC  0100               	movlb	0	; () banked
 14937  0141AE  118A               	iorwf	(??___fldiv+3)& (0+255),w,b
 14938  0141B0  A4D8               	btfss	status,2,c
 14939  0141B2  D003               	goto	l6997
 14940                           
 14941                           ; BSR set to: 0
 14942                           
 14943                           ; BSR set to: 0
 14944  0141B4  0100               	movlb	0	; () banked
 14945  0141B6  A17F               	btfss	___fldiv@b& (0+255),0,b
 14946  0141B8  D003               	goto	l1650
 14947  0141BA                     l6997:
 14948                           
 14949                           ; BSR set to: 0
 14950  0141BA  0E01               	movlw	1
 14951  0141BC  0100               	movlb	0	; () banked
 14952  0141BE  6F97               	movwf	___fldiv@aexp& (0+255),b
 14953  0141C0                     l1650:
 14954                           
 14955                           ; BSR set to: 0
 14956  0141C0  0100               	movlb	0	; () banked
 14957  0141C2  5197               	movf	___fldiv@aexp& (0+255),w,b
 14958  0141C4  0100               	movlb	0	; () banked
 14959  0141C6  B4D8               	btfsc	status,2,c
 14960  0141C8  D023               	goto	l7007
 14961                           
 14962                           ; BSR set to: 0
 14963  0141CA  0E01               	movlw	1
 14964  0141CC  0100               	movlb	0	; () banked
 14965  0141CE  277F               	addwf	___fldiv@b& (0+255),f,b
 14966  0141D0  0E00               	movlw	0
 14967  0141D2  2380               	addwfc	(___fldiv@b+1)& (0+255),f,b
 14968  0141D4  2381               	addwfc	(___fldiv@b+2)& (0+255),f,b
 14969  0141D6  2382               	addwfc	(___fldiv@b+3)& (0+255),f,b
 14970                           
 14971                           ; BSR set to: 0
 14972  0141D8  0100               	movlb	0	; () banked
 14973  0141DA  A182               	btfss	(___fldiv@b+3)& (0+255),0,b
 14974  0141DC  D019               	goto	l7007
 14975                           
 14976                           ; BSR set to: 0
 14977  0141DE  C07F  F087         	movff	___fldiv@b,??___fldiv
 14978  0141E2  C080  F088         	movff	___fldiv@b+1,??___fldiv+1
 14979  0141E6  C081  F089         	movff	___fldiv@b+2,??___fldiv+2
 14980  0141EA  C082  F08A         	movff	___fldiv@b+3,??___fldiv+3
 14981  0141EE  0100               	movlb	0	; () banked
 14982  0141F0  358A               	rlcf	(??___fldiv+3)& (0+255),w,b
 14983  0141F2  338A               	rrcf	(??___fldiv+3)& (0+255),f,b
 14984  0141F4  3389               	rrcf	(??___fldiv+2)& (0+255),f,b
 14985  0141F6  3388               	rrcf	(??___fldiv+1)& (0+255),f,b
 14986  0141F8  3387               	rrcf	??___fldiv& (0+255),f,b
 14987  0141FA  C087  F07F         	movff	??___fldiv,___fldiv@b
 14988  0141FE  C088  F080         	movff	??___fldiv+1,___fldiv@b+1
 14989  014202  C089  F081         	movff	??___fldiv+2,___fldiv@b+2
 14990  014206  C08A  F082         	movff	??___fldiv+3,___fldiv@b+3
 14991                           
 14992                           ; BSR set to: 0
 14993  01420A  0100               	movlb	0	; () banked
 14994  01420C  4B90               	infsnz	___fldiv@new_exp& (0+255),f,b
 14995  01420E  2B91               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 14996  014210                     l7007:
 14997                           
 14998                           ; BSR set to: 0
 14999  014210  0100               	movlb	0	; () banked
 15000  014212  BF91               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15001  014214  D014               	goto	l7011
 15002  014216  0100               	movlb	0	; () banked
 15003  014218  5191               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15004  01421A  E104               	bnz	u8850
 15005  01421C  0100               	movlb	0	; () banked
 15006  01421E  2990               	incf	___fldiv@new_exp& (0+255),w,b
 15007  014220  A0D8               	btfss	status,0,c
 15008  014222  D00D               	goto	l7011
 15009  014224                     u8850:
 15010                           
 15011                           ; BSR set to: 0
 15012  014224  0E00               	movlw	0
 15013  014226  0100               	movlb	0	; () banked
 15014  014228  6F91               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15015  01422A  6990               	setf	___fldiv@new_exp& (0+255),b
 15016  01422C  0E00               	movlw	0
 15017  01422E  0100               	movlb	0	; () banked
 15018  014230  6F7F               	movwf	___fldiv@b& (0+255),b
 15019  014232  0E00               	movlw	0
 15020  014234  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 15021  014236  0E00               	movlw	0
 15022  014238  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 15023  01423A  0E00               	movlw	0
 15024  01423C  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 15025  01423E                     l7011:
 15026                           
 15027                           ; BSR set to: 0
 15028  01423E  0100               	movlb	0	; () banked
 15029  014240  BF91               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15030  014242  D007               	goto	l7013
 15031  014244  0100               	movlb	0	; () banked
 15032  014246  5191               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15033  014248  E115               	bnz	l7015
 15034  01424A  0100               	movlb	0	; () banked
 15035  01424C  0590               	decf	___fldiv@new_exp& (0+255),w,b
 15036  01424E  B0D8               	btfsc	status,0,c
 15037  014250  D011               	goto	l7015
 15038  014252                     l7013:
 15039                           
 15040                           ; BSR set to: 0
 15041  014252  0E00               	movlw	0
 15042  014254  0100               	movlb	0	; () banked
 15043  014256  6F91               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15044  014258  0E00               	movlw	0
 15045  01425A  6F90               	movwf	___fldiv@new_exp& (0+255),b
 15046  01425C  0E00               	movlw	0
 15047  01425E  0100               	movlb	0	; () banked
 15048  014260  6F7F               	movwf	___fldiv@b& (0+255),b
 15049  014262  0E00               	movlw	0
 15050  014264  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 15051  014266  0E00               	movlw	0
 15052  014268  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 15053  01426A  0E00               	movlw	0
 15054  01426C  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 15055  01426E  0E00               	movlw	0
 15056  014270  0100               	movlb	0	; () banked
 15057  014272  6F8B               	movwf	___fldiv@sign& (0+255),b
 15058  014274                     l7015:
 15059                           
 15060                           ; BSR set to: 0
 15061  014274  C090  F096         	movff	___fldiv@new_exp,___fldiv@bexp
 15062                           
 15063                           ; BSR set to: 0
 15064  014278  0100               	movlb	0	; () banked
 15065  01427A  A196               	btfss	___fldiv@bexp& (0+255),0,b
 15066  01427C  D003               	goto	l7021
 15067                           
 15068                           ; BSR set to: 0
 15069  01427E  0100               	movlb	0	; () banked
 15070  014280  8F81               	bsf	(___fldiv@b+2)& (0+255),7,b
 15071  014282  D002               	goto	l7023
 15072  014284                     l7021:
 15073                           
 15074                           ; BSR set to: 0
 15075  014284  0100               	movlb	0	; () banked
 15076  014286  9F81               	bcf	(___fldiv@b+2)& (0+255),7,b
 15077  014288                     l7023:
 15078                           
 15079                           ; BSR set to: 0
 15080  014288  0100               	movlb	0	; () banked
 15081  01428A  90D8               	bcf	status,0,c
 15082  01428C  3196               	rrcf	___fldiv@bexp& (0+255),w,b
 15083  01428E  0100               	movlb	0	; () banked
 15084  014290  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 15085                           
 15086                           ; BSR set to: 0
 15087  014292  0100               	movlb	0	; () banked
 15088  014294  518B               	movf	___fldiv@sign& (0+255),w,b
 15089  014296  0100               	movlb	0	; () banked
 15090  014298  1382               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15091                           
 15092                           ; BSR set to: 0
 15093  01429A  C07F  F07F         	movff	___fldiv@b,?___fldiv
 15094  01429E  C080  F080         	movff	___fldiv@b+1,?___fldiv+1
 15095  0142A2  C081  F081         	movff	___fldiv@b+2,?___fldiv+2
 15096  0142A6  C082  F082         	movff	___fldiv@b+3,?___fldiv+3
 15097  0142AA  0012               	return	
 15098  0142AC                     __end_of___fldiv:
 15099                           	opt stack 0
 15100                           tblptru	equ	0xFF8
 15101                           tblptrh	equ	0xFF7
 15102                           tblptrl	equ	0xFF6
 15103                           tablat	equ	0xFF5
 15104                           prodh	equ	0xFF4
 15105                           prodl	equ	0xFF3
 15106                           intcon	equ	0xFF2
 15107                           postinc0	equ	0xFEE
 15108                           wreg	equ	0xFE8
 15109                           indf2	equ	0xFDF
 15110                           postinc2	equ	0xFDE
 15111                           fsr2h	equ	0xFDA
 15112                           fsr2l	equ	0xFD9
 15113                           status	equ	0xFD8
 15114                           
 15115 ;; *************** function _LCD_write_integer *****************
 15116 ;; Defined at:
 15117 ;;		line 210 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15118 ;; Parameters:    Size  Location     Type
 15119 ;;  value           2   41[BANK0 ] int 
 15120 ;;  number_of_di    1   43[BANK0 ] unsigned char 
 15121 ;;  zero_cleanin    1   44[BANK0 ] unsigned char 
 15122 ;; Auto vars:     Size  Location     Type
 15123 ;;  convertedInt    6   50[BANK0 ] unsigned char [6]
 15124 ;;  index           1   56[BANK0 ] unsigned char 
 15125 ;; Return value:  Size  Location     Type
 15126 ;;                  1    wreg      void 
 15127 ;; Registers used:
 15128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15129 ;; Tracked objects:
 15130 ;;		On entry : 0/0
 15131 ;;		On exit  : 0/0
 15132 ;;		Unchanged: 0/0
 15133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15134 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15135 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15136 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15137 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15138 ;;Total ram usage:       16 bytes
 15139 ;; Hardware stack levels used:    1
 15140 ;; Hardware stack levels required when called:    9
 15141 ;; This function calls:
 15142 ;;		_LCD_write_string
 15143 ;;		_itoa
 15144 ;; This function is called by:
 15145 ;;		_LCD_Handler
 15146 ;; This function uses a non-reentrant model
 15147 ;;
 15148                           
 15149                           	psect	text28
 15150  0151C4                     __ptext28:
 15151                           	opt stack 0
 15152  0151C4                     _LCD_write_integer:
 15153                           	opt stack 20
 15154                           
 15155                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 15156                           
 15157                           ; BSR set to: 0
 15158                           ;incstack = 0
 15159  0151C4  EE21  F000         	lfsr	2,LCD_write_integer@F17134
 15160  0151C8  EE10  F092         	lfsr	1,LCD_write_integer@convertedInt
 15161  0151CC  0E05               	movlw	5
 15162  0151CE                     u12111:
 15163  0151CE  CFDB FFE3          	movff	plusw2,plusw1
 15164  0151D2  06E8               	decf	wreg,f,c
 15165  0151D4  E2FC               	bc	u12111
 15166                           
 15167                           ;src\LCD_44780.c: 216: unsigned char index;
 15168                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 15169  0151D6  0E92               	movlw	low LCD_write_integer@convertedInt
 15170  0151D8  0100               	movlb	0	; () banked
 15171  0151DA  6F81               	movwf	itoa@buf& (0+255),b
 15172  0151DC  0E00               	movlw	high LCD_write_integer@convertedInt
 15173  0151DE  0100               	movlb	0	; () banked
 15174  0151E0  6F82               	movwf	(itoa@buf+1)& (0+255),b
 15175  0151E2  C089  F083         	movff	LCD_write_integer@value,itoa@val
 15176  0151E6  C08A  F084         	movff	LCD_write_integer@value+1,itoa@val+1
 15177  0151EA  0E00               	movlw	0
 15178  0151EC  0100               	movlb	0	; () banked
 15179  0151EE  6F86               	movwf	(itoa@base+1)& (0+255),b
 15180  0151F0  0E0A               	movlw	10
 15181  0151F2  6F85               	movwf	itoa@base& (0+255),b
 15182  0151F4  ECA8  F0B2         	call	_itoa	;wreg free
 15183                           
 15184                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 15185  0151F8  0100               	movlb	0	; () banked
 15186  0151FA  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 15187  0151FC  0100               	movlb	0	; () banked
 15188  0151FE  B4D8               	btfsc	status,2,c
 15189  015200  D0B8               	goto	l9029
 15190                           
 15191                           ; BSR set to: 0
 15192                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 15193  015202  0100               	movlb	0	; () banked
 15194  015204  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 15195  015206  0D01               	mullw	1
 15196  015208  0E92               	movlw	low LCD_write_integer@convertedInt
 15197  01520A  24F3               	addwf	prodl,w,c
 15198  01520C  6ED9               	movwf	fsr2l,c
 15199  01520E  0E00               	movlw	high LCD_write_integer@convertedInt
 15200  015210  20F4               	addwfc	prodh,w,c
 15201  015212  6EDA               	movwf	fsr2h,c
 15202  015214  0E00               	movlw	0
 15203  015216  6EDF               	movwf	indf2,c
 15204                           
 15205                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 15206  015218  D070               	goto	l9025
 15207  01521A                     l9007:
 15208                           
 15209                           ; BSR set to: 0
 15210                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 15211  01521A  0100               	movlb	0	; () banked
 15212  01521C  058B               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 15213  01521E  0100               	movlb	0	; () banked
 15214  015220  6F98               	movwf	LCD_write_integer@index& (0+255),b
 15215  015222                     l9009:
 15216                           
 15217                           ; BSR set to: 0
 15218  015222  0100               	movlb	0	; () banked
 15219  015224  5198               	movf	LCD_write_integer@index& (0+255),w,b
 15220  015226  0100               	movlb	0	; () banked
 15221  015228  B4D8               	btfsc	status,2,c
 15222  01522A  D067               	goto	l9025
 15223                           
 15224                           ; BSR set to: 0
 15225                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 15226                           
 15227                           ; BSR set to: 0
 15228                           
 15229                           ; BSR set to: 0
 15230  01522C  0EFF               	movlw	255
 15231  01522E  0100               	movlb	0	; () banked
 15232  015230  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 15233  015232  0EFF               	movlw	255
 15234  015234  0100               	movlb	0	; () banked
 15235  015236  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 15236  015238  0100               	movlb	0	; () banked
 15237  01523A  5198               	movf	LCD_write_integer@index& (0+255),w,b
 15238  01523C  0100               	movlb	0	; () banked
 15239  01523E  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 15240  015240  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 15241  015242  0100               	movlb	0	; () banked
 15242  015244  518D               	movf	??_LCD_write_integer& (0+255),w,b
 15243  015246  0100               	movlb	0	; () banked
 15244  015248  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 15245  01524A  0100               	movlb	0	; () banked
 15246  01524C  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 15247  01524E  0100               	movlb	0	; () banked
 15248  015250  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 15249  015252  0E92               	movlw	low LCD_write_integer@convertedInt
 15250  015254  0100               	movlb	0	; () banked
 15251  015256  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 15252  015258  6ED9               	movwf	fsr2l,c
 15253  01525A  0E00               	movlw	high LCD_write_integer@convertedInt
 15254  01525C  0100               	movlb	0	; () banked
 15255  01525E  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 15256  015260  6EDA               	movwf	fsr2h,c
 15257  015262  0100               	movlb	0	; () banked
 15258  015264  5198               	movf	LCD_write_integer@index& (0+255),w,b
 15259  015266  0D01               	mullw	1
 15260  015268  0E92               	movlw	low LCD_write_integer@convertedInt
 15261  01526A  24F3               	addwf	prodl,w,c
 15262  01526C  6EE1               	movwf	fsr1l,c
 15263  01526E  0E00               	movlw	high LCD_write_integer@convertedInt
 15264  015270  20F4               	addwfc	prodh,w,c
 15265  015272  6EE2               	movwf	fsr1h,c
 15266  015274  CFDF FFE7          	movff	indf2,indf1
 15267                           
 15268                           ; BSR set to: 0
 15269                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 15270  015278  0100               	movlb	0	; () banked
 15271  01527A  058C               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 15272  01527C  A4D8               	btfss	status,2,c
 15273  01527E  D01D               	goto	l9019
 15274                           
 15275                           ; BSR set to: 0
 15276                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 15277  015280  0EFF               	movlw	255
 15278  015282  0100               	movlb	0	; () banked
 15279  015284  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 15280  015286  0EFF               	movlw	255
 15281  015288  0100               	movlb	0	; () banked
 15282  01528A  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 15283  01528C  0100               	movlb	0	; () banked
 15284  01528E  5198               	movf	LCD_write_integer@index& (0+255),w,b
 15285  015290  0100               	movlb	0	; () banked
 15286  015292  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 15287  015294  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 15288  015296  0100               	movlb	0	; () banked
 15289  015298  518D               	movf	??_LCD_write_integer& (0+255),w,b
 15290  01529A  0100               	movlb	0	; () banked
 15291  01529C  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 15292  01529E  0100               	movlb	0	; () banked
 15293  0152A0  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 15294  0152A2  0100               	movlb	0	; () banked
 15295  0152A4  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 15296  0152A6  0E92               	movlw	low LCD_write_integer@convertedInt
 15297  0152A8  0100               	movlb	0	; () banked
 15298  0152AA  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 15299  0152AC  6ED9               	movwf	fsr2l,c
 15300  0152AE  0E00               	movlw	high LCD_write_integer@convertedInt
 15301  0152B0  0100               	movlb	0	; () banked
 15302  0152B2  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 15303  0152B4  6EDA               	movwf	fsr2h,c
 15304  0152B6  0E20               	movlw	32
 15305  0152B8  D01C               	goto	L17
 15306  0152BA                     l9019:
 15307                           
 15308                           ; BSR set to: 0
 15309                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 15310  0152BA  0EFF               	movlw	255
 15311  0152BC  0100               	movlb	0	; () banked
 15312  0152BE  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 15313  0152C0  0EFF               	movlw	255
 15314  0152C2  0100               	movlb	0	; () banked
 15315  0152C4  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 15316  0152C6  0100               	movlb	0	; () banked
 15317  0152C8  5198               	movf	LCD_write_integer@index& (0+255),w,b
 15318  0152CA  0100               	movlb	0	; () banked
 15319  0152CC  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 15320  0152CE  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 15321  0152D0  0100               	movlb	0	; () banked
 15322  0152D2  518D               	movf	??_LCD_write_integer& (0+255),w,b
 15323  0152D4  0100               	movlb	0	; () banked
 15324  0152D6  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 15325  0152D8  0100               	movlb	0	; () banked
 15326  0152DA  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 15327  0152DC  0100               	movlb	0	; () banked
 15328  0152DE  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 15329  0152E0  0E92               	movlw	low LCD_write_integer@convertedInt
 15330  0152E2  0100               	movlb	0	; () banked
 15331  0152E4  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 15332  0152E6  6ED9               	movwf	fsr2l,c
 15333  0152E8  0E00               	movlw	high LCD_write_integer@convertedInt
 15334  0152EA  0100               	movlb	0	; () banked
 15335  0152EC  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 15336  0152EE  6EDA               	movwf	fsr2h,c
 15337  0152F0  0E30               	movlw	48
 15338  0152F2                     L17:
 15339  0152F2  6EDF               	movwf	indf2,c
 15340                           
 15341                           ; BSR set to: 0
 15342                           
 15343                           ; BSR set to: 0
 15344  0152F4  0100               	movlb	0	; () banked
 15345  0152F6  0798               	decf	LCD_write_integer@index& (0+255),f,b
 15346  0152F8  D794               	goto	l9009
 15347  0152FA                     l9025:
 15348                           
 15349                           ; BSR set to: 0
 15350  0152FA  0EFF               	movlw	255
 15351  0152FC  0100               	movlb	0	; () banked
 15352  0152FE  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 15353  015300  0EFF               	movlw	255
 15354  015302  0100               	movlb	0	; () banked
 15355  015304  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 15356  015306  0100               	movlb	0	; () banked
 15357  015308  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 15358  01530A  0100               	movlb	0	; () banked
 15359  01530C  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 15360  01530E  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 15361  015310  0100               	movlb	0	; () banked
 15362  015312  518D               	movf	??_LCD_write_integer& (0+255),w,b
 15363  015314  0100               	movlb	0	; () banked
 15364  015316  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 15365  015318  0100               	movlb	0	; () banked
 15366  01531A  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 15367  01531C  0100               	movlb	0	; () banked
 15368  01531E  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 15369  015320  0E92               	movlw	low LCD_write_integer@convertedInt
 15370  015322  0100               	movlb	0	; () banked
 15371  015324  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 15372  015326  6ED9               	movwf	fsr2l,c
 15373  015328  0E00               	movlw	high LCD_write_integer@convertedInt
 15374  01532A  0100               	movlb	0	; () banked
 15375  01532C  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 15376  01532E  6EDA               	movwf	fsr2h,c
 15377  015330  0E3A               	movlw	58
 15378  015332  60DF               	cpfslt	indf2,c
 15379  015334  D772               	goto	l9007
 15380                           
 15381                           ; BSR set to: 0
 15382  015336  0EFF               	movlw	255
 15383  015338  0100               	movlb	0	; () banked
 15384  01533A  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 15385  01533C  0EFF               	movlw	255
 15386  01533E  0100               	movlb	0	; () banked
 15387  015340  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 15388  015342  0100               	movlb	0	; () banked
 15389  015344  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 15390  015346  0100               	movlb	0	; () banked
 15391  015348  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 15392  01534A  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 15393  01534C  0100               	movlb	0	; () banked
 15394  01534E  518D               	movf	??_LCD_write_integer& (0+255),w,b
 15395  015350  0100               	movlb	0	; () banked
 15396  015352  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 15397  015354  0100               	movlb	0	; () banked
 15398  015356  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 15399  015358  0100               	movlb	0	; () banked
 15400  01535A  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 15401  01535C  0E92               	movlw	low LCD_write_integer@convertedInt
 15402  01535E  0100               	movlb	0	; () banked
 15403  015360  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 15404  015362  6ED9               	movwf	fsr2l,c
 15405  015364  0E00               	movlw	high LCD_write_integer@convertedInt
 15406  015366  0100               	movlb	0	; () banked
 15407  015368  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 15408  01536A  6EDA               	movwf	fsr2h,c
 15409  01536C  0E2F               	movlw	47
 15410  01536E  64DF               	cpfsgt	indf2,c
 15411  015370  D754               	goto	l9007
 15412  015372                     l9029:
 15413                           
 15414                           ; BSR set to: 0
 15415                           ;src\LCD_44780.c: 243: }
 15416                           ;src\LCD_44780.c: 245: }
 15417                           ;src\LCD_44780.c: 246: }
 15418                           ;src\LCD_44780.c: 247: }
 15419                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 15420  015372  0E92               	movlw	low LCD_write_integer@convertedInt
 15421  015374  0100               	movlb	0	; () banked
 15422  015376  6F82               	movwf	LCD_write_string@buffer& (0+255),b
 15423  015378  0E00               	movlw	high LCD_write_integer@convertedInt
 15424  01537A  0100               	movlb	0	; () banked
 15425  01537C  6F83               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 15426  01537E  ECC1  F0B3         	call	_LCD_write_string	;wreg free
 15427  015382  0012               	return		;funcret
 15428  015384                     __end_of_LCD_write_integer:
 15429                           	opt stack 0
 15430                           tblptru	equ	0xFF8
 15431                           tblptrh	equ	0xFF7
 15432                           tblptrl	equ	0xFF6
 15433                           tablat	equ	0xFF5
 15434                           prodh	equ	0xFF4
 15435                           prodl	equ	0xFF3
 15436                           intcon	equ	0xFF2
 15437                           postinc0	equ	0xFEE
 15438                           wreg	equ	0xFE8
 15439                           indf1	equ	0xFE7
 15440                           plusw1	equ	0xFE3
 15441                           fsr1h	equ	0xFE2
 15442                           fsr1l	equ	0xFE1
 15443                           indf2	equ	0xFDF
 15444                           postinc2	equ	0xFDE
 15445                           plusw2	equ	0xFDB
 15446                           fsr2h	equ	0xFDA
 15447                           fsr2l	equ	0xFD9
 15448                           status	equ	0xFD8
 15449                           
 15450 ;; *************** function _itoa *****************
 15451 ;; Defined at:
 15452 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
 15453 ;; Parameters:    Size  Location     Type
 15454 ;;  buf             2   33[BANK0 ] PTR unsigned char 
 15455 ;;		 -> LCD_write_integer@convertedInt(6), 
 15456 ;;  val             2   35[BANK0 ] int 
 15457 ;;  base            2   37[BANK0 ] int 
 15458 ;; Auto vars:     Size  Location     Type
 15459 ;;  cp              2   39[BANK0 ] PTR unsigned char 
 15460 ;;		 -> LCD_write_integer@convertedInt(6), 
 15461 ;; Return value:  Size  Location     Type
 15462 ;;                  2   33[BANK0 ] PTR unsigned char 
 15463 ;; Registers used:
 15464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15465 ;; Tracked objects:
 15466 ;;		On entry : 0/0
 15467 ;;		On exit  : 0/0
 15468 ;;		Unchanged: 0/0
 15469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15470 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15471 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15473 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15474 ;;Total ram usage:        8 bytes
 15475 ;; Hardware stack levels used:    1
 15476 ;; Hardware stack levels required when called:    5
 15477 ;; This function calls:
 15478 ;;		_utoa
 15479 ;; This function is called by:
 15480 ;;		_LCD_write_integer
 15481 ;; This function uses a non-reentrant model
 15482 ;;
 15483                           
 15484                           	psect	text29
 15485  016550                     __ptext29:
 15486                           	opt stack 0
 15487  016550                     _itoa:
 15488                           	opt stack 23
 15489                           
 15490                           ;incstack = 0
 15491  016550  C081  F087         	movff	itoa@buf,itoa@cp
 15492  016554  C082  F088         	movff	itoa@buf+1,itoa@cp+1
 15493  016558  0100               	movlb	0	; () banked
 15494  01655A  AF84               	btfss	(itoa@val+1)& (0+255),7,b
 15495  01655C  D00E               	goto	l5955
 15496                           
 15497                           ; BSR set to: 0
 15498  01655E  C081  FFD9         	movff	itoa@buf,fsr2l
 15499  016562  C082  FFDA         	movff	itoa@buf+1,fsr2h
 15500  016566  0E2D               	movlw	45
 15501  016568  6EDF               	movwf	indf2,c
 15502                           
 15503                           ; BSR set to: 0
 15504  01656A  0100               	movlb	0	; () banked
 15505  01656C  4B81               	infsnz	itoa@buf& (0+255),f,b
 15506  01656E  2B82               	incf	(itoa@buf+1)& (0+255),f,b
 15507                           
 15508                           ; BSR set to: 0
 15509  016570  0100               	movlb	0	; () banked
 15510  016572  6D83               	negf	itoa@val& (0+255),b
 15511  016574  1F84               	comf	(itoa@val+1)& (0+255),f,b
 15512  016576  B0D8               	btfsc	status,0,c
 15513  016578  2B84               	incf	(itoa@val+1)& (0+255),f,b
 15514  01657A                     l5955:
 15515                           
 15516                           ; BSR set to: 0
 15517  01657A  C081  F078         	movff	itoa@buf,utoa@buf
 15518  01657E  C082  F079         	movff	itoa@buf+1,utoa@buf+1
 15519  016582  C083  F07A         	movff	itoa@val,utoa@val
 15520  016586  C084  F07B         	movff	itoa@val+1,utoa@val+1
 15521  01658A  C085  F07C         	movff	itoa@base,utoa@base
 15522  01658E  C086  F07D         	movff	itoa@base+1,utoa@base+1
 15523  016592  EC2F  F0AE         	call	_utoa	;wreg free
 15524  016596  0012               	return	
 15525  016598                     __end_of_itoa:
 15526                           	opt stack 0
 15527                           tblptru	equ	0xFF8
 15528                           tblptrh	equ	0xFF7
 15529                           tblptrl	equ	0xFF6
 15530                           tablat	equ	0xFF5
 15531                           prodh	equ	0xFF4
 15532                           prodl	equ	0xFF3
 15533                           intcon	equ	0xFF2
 15534                           postinc0	equ	0xFEE
 15535                           wreg	equ	0xFE8
 15536                           indf1	equ	0xFE7
 15537                           plusw1	equ	0xFE3
 15538                           fsr1h	equ	0xFE2
 15539                           fsr1l	equ	0xFE1
 15540                           indf2	equ	0xFDF
 15541                           postinc2	equ	0xFDE
 15542                           plusw2	equ	0xFDB
 15543                           fsr2h	equ	0xFDA
 15544                           fsr2l	equ	0xFD9
 15545                           status	equ	0xFD8
 15546                           
 15547 ;; *************** function _utoa *****************
 15548 ;; Defined at:
 15549 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\itoa.c"
 15550 ;; Parameters:    Size  Location     Type
 15551 ;;  buf             2   24[BANK0 ] PTR unsigned char 
 15552 ;;		 -> LCD_write_integer@convertedInt(6), 
 15553 ;;  val             2   26[BANK0 ] unsigned int 
 15554 ;;  base            2   28[BANK0 ] int 
 15555 ;; Auto vars:     Size  Location     Type
 15556 ;;  v               2   30[BANK0 ] unsigned int 
 15557 ;;  c               1   32[BANK0 ] unsigned char 
 15558 ;; Return value:  Size  Location     Type
 15559 ;;                  2   24[BANK0 ] PTR unsigned char 
 15560 ;; Registers used:
 15561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15562 ;; Tracked objects:
 15563 ;;		On entry : 0/0
 15564 ;;		On exit  : 0/0
 15565 ;;		Unchanged: 0/0
 15566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15567 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15568 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15570 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15571 ;;Total ram usage:        9 bytes
 15572 ;; Hardware stack levels used:    1
 15573 ;; Hardware stack levels required when called:    4
 15574 ;; This function calls:
 15575 ;;		___lwdiv
 15576 ;;		___lwmod
 15577 ;; This function is called by:
 15578 ;;		_itoa
 15579 ;; This function uses a non-reentrant model
 15580 ;;
 15581                           
 15582                           	psect	text30
 15583  015C5E                     __ptext30:
 15584                           	opt stack 0
 15585  015C5E                     _utoa:
 15586                           	opt stack 23
 15587                           
 15588                           ;incstack = 0
 15589  015C5E  C07A  F07E         	movff	utoa@val,utoa@v
 15590  015C62  C07B  F07F         	movff	utoa@val+1,utoa@v+1
 15591  015C66                     l5477:
 15592  015C66  C07E  F071         	movff	utoa@v,___lwdiv@dividend
 15593  015C6A  C07F  F072         	movff	utoa@v+1,___lwdiv@dividend+1
 15594  015C6E  C07C  F073         	movff	utoa@base,___lwdiv@divisor
 15595  015C72  C07D  F074         	movff	utoa@base+1,___lwdiv@divisor+1
 15596  015C76  ECCD  F0B0         	call	___lwdiv	;wreg free
 15597  015C7A  C071  F07E         	movff	?___lwdiv,utoa@v
 15598  015C7E  C072  F07F         	movff	?___lwdiv+1,utoa@v+1
 15599  015C82  0100               	movlb	0	; () banked
 15600  015C84  4B78               	infsnz	utoa@buf& (0+255),f,b
 15601  015C86  2B79               	incf	(utoa@buf+1)& (0+255),f,b
 15602                           
 15603                           ; BSR set to: 0
 15604  015C88  0100               	movlb	0	; () banked
 15605  015C8A  517E               	movf	utoa@v& (0+255),w,b
 15606  015C8C  0100               	movlb	0	; () banked
 15607  015C8E  117F               	iorwf	(utoa@v+1)& (0+255),w,b
 15608  015C90  A4D8               	btfss	status,2,c
 15609  015C92  D7E9               	goto	l5477
 15610                           
 15611                           ; BSR set to: 0
 15612                           
 15613                           ; BSR set to: 0
 15614  015C94  C078  FFD9         	movff	utoa@buf,fsr2l
 15615  015C98  C079  FFDA         	movff	utoa@buf+1,fsr2h
 15616  015C9C  0E00               	movlw	0
 15617  015C9E  6EDF               	movwf	indf2,c
 15618                           
 15619                           ; BSR set to: 0
 15620  015CA0  0100               	movlb	0	; () banked
 15621  015CA2  0778               	decf	utoa@buf& (0+255),f,b
 15622  015CA4  A0D8               	btfss	status,0,c
 15623  015CA6  0779               	decf	(utoa@buf+1)& (0+255),f,b
 15624  015CA8                     l5487:
 15625                           
 15626                           ; BSR set to: 0
 15627  015CA8  C07A  F071         	movff	utoa@val,___lwmod@dividend
 15628  015CAC  C07B  F072         	movff	utoa@val+1,___lwmod@dividend+1
 15629  015CB0  C07C  F073         	movff	utoa@base,___lwmod@divisor
 15630  015CB4  C07D  F074         	movff	utoa@base+1,___lwmod@divisor+1
 15631  015CB8  EC03  F0B2         	call	___lwmod	;wreg free
 15632  015CBC  0100               	movlb	0	; () banked
 15633  015CBE  5171               	movf	?___lwmod& (0+255),w,b
 15634  015CC0  0100               	movlb	0	; () banked
 15635  015CC2  6F80               	movwf	utoa@c& (0+255),b
 15636                           
 15637                           ; BSR set to: 0
 15638  015CC4  C07A  F071         	movff	utoa@val,___lwdiv@dividend
 15639  015CC8  C07B  F072         	movff	utoa@val+1,___lwdiv@dividend+1
 15640  015CCC  C07C  F073         	movff	utoa@base,___lwdiv@divisor
 15641  015CD0  C07D  F074         	movff	utoa@base+1,___lwdiv@divisor+1
 15642  015CD4  ECCD  F0B0         	call	___lwdiv	;wreg free
 15643  015CD8  C071  F07A         	movff	?___lwdiv,utoa@val
 15644  015CDC  C072  F07B         	movff	?___lwdiv+1,utoa@val+1
 15645  015CE0  0E09               	movlw	9
 15646  015CE2  0100               	movlb	0	; () banked
 15647  015CE4  6580               	cpfsgt	utoa@c& (0+255),b
 15648  015CE6  D003               	goto	l1463
 15649                           
 15650                           ; BSR set to: 0
 15651  015CE8  0E07               	movlw	7
 15652  015CEA  0100               	movlb	0	; () banked
 15653  015CEC  2780               	addwf	utoa@c& (0+255),f,b
 15654  015CEE                     l1463:
 15655                           
 15656                           ; BSR set to: 0
 15657  015CEE  0E30               	movlw	48
 15658  015CF0  0100               	movlb	0	; () banked
 15659  015CF2  2780               	addwf	utoa@c& (0+255),f,b
 15660                           
 15661                           ; BSR set to: 0
 15662  015CF4  C078  FFD9         	movff	utoa@buf,fsr2l
 15663  015CF8  C079  FFDA         	movff	utoa@buf+1,fsr2h
 15664  015CFC  C080  FFDF         	movff	utoa@c,indf2
 15665                           
 15666                           ; BSR set to: 0
 15667  015D00  0100               	movlb	0	; () banked
 15668  015D02  0778               	decf	utoa@buf& (0+255),f,b
 15669  015D04  A0D8               	btfss	status,0,c
 15670  015D06  0779               	decf	(utoa@buf+1)& (0+255),f,b
 15671                           
 15672                           ; BSR set to: 0
 15673  015D08  0100               	movlb	0	; () banked
 15674  015D0A  517A               	movf	utoa@val& (0+255),w,b
 15675  015D0C  0100               	movlb	0	; () banked
 15676  015D0E  117B               	iorwf	(utoa@val+1)& (0+255),w,b
 15677  015D10  A4D8               	btfss	status,2,c
 15678  015D12  D7CA               	goto	l5487
 15679                           
 15680                           ; BSR set to: 0
 15681                           ;	Return value of _utoa is never used
 15682                           
 15683                           ; BSR set to: 0
 15684  015D14  0100               	movlb	0	; () banked
 15685  015D16  4B78               	infsnz	utoa@buf& (0+255),f,b
 15686  015D18  2B79               	incf	(utoa@buf+1)& (0+255),f,b
 15687  015D1A  0012               	return	
 15688  015D1C                     __end_of_utoa:
 15689                           	opt stack 0
 15690                           tblptru	equ	0xFF8
 15691                           tblptrh	equ	0xFF7
 15692                           tblptrl	equ	0xFF6
 15693                           tablat	equ	0xFF5
 15694                           prodh	equ	0xFF4
 15695                           prodl	equ	0xFF3
 15696                           intcon	equ	0xFF2
 15697                           postinc0	equ	0xFEE
 15698                           wreg	equ	0xFE8
 15699                           indf1	equ	0xFE7
 15700                           plusw1	equ	0xFE3
 15701                           fsr1h	equ	0xFE2
 15702                           fsr1l	equ	0xFE1
 15703                           indf2	equ	0xFDF
 15704                           postinc2	equ	0xFDE
 15705                           plusw2	equ	0xFDB
 15706                           fsr2h	equ	0xFDA
 15707                           fsr2l	equ	0xFD9
 15708                           status	equ	0xFD8
 15709                           
 15710 ;; *************** function ___lwmod *****************
 15711 ;; Defined at:
 15712 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
 15713 ;; Parameters:    Size  Location     Type
 15714 ;;  dividend        2   17[BANK0 ] unsigned int 
 15715 ;;  divisor         2   19[BANK0 ] unsigned int 
 15716 ;; Auto vars:     Size  Location     Type
 15717 ;;  counter         1   21[BANK0 ] unsigned char 
 15718 ;; Return value:  Size  Location     Type
 15719 ;;                  2   17[BANK0 ] unsigned int 
 15720 ;; Registers used:
 15721 ;;		wreg, status,2, status,0
 15722 ;; Tracked objects:
 15723 ;;		On entry : 0/0
 15724 ;;		On exit  : 0/0
 15725 ;;		Unchanged: 0/0
 15726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15727 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15728 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15730 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15731 ;;Total ram usage:        5 bytes
 15732 ;; Hardware stack levels used:    1
 15733 ;; Hardware stack levels required when called:    3
 15734 ;; This function calls:
 15735 ;;		Nothing
 15736 ;; This function is called by:
 15737 ;;		_utoa
 15738 ;; This function uses a non-reentrant model
 15739 ;;
 15740                           
 15741                           	psect	text31
 15742  016406                     __ptext31:
 15743                           	opt stack 0
 15744  016406                     ___lwmod:
 15745                           	opt stack 23
 15746                           
 15747                           ; BSR set to: 0
 15748                           ;incstack = 0
 15749  016406  0100               	movlb	0	; () banked
 15750  016408  5173               	movf	___lwmod@divisor& (0+255),w,b
 15751  01640A  0100               	movlb	0	; () banked
 15752  01640C  1174               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 15753  01640E  B4D8               	btfsc	status,2,c
 15754  016410  D026               	goto	l1552
 15755                           
 15756                           ; BSR set to: 0
 15757  016412  0E01               	movlw	1
 15758  016414  0100               	movlb	0	; () banked
 15759  016416  6F75               	movwf	___lwmod@counter& (0+255),b
 15760  016418  D006               	goto	l5035
 15761  01641A                     l5033:
 15762                           
 15763                           ; BSR set to: 0
 15764  01641A  0100               	movlb	0	; () banked
 15765  01641C  90D8               	bcf	status,0,c
 15766  01641E  3773               	rlcf	___lwmod@divisor& (0+255),f,b
 15767  016420  3774               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 15768  016422  0100               	movlb	0	; () banked
 15769  016424  2B75               	incf	___lwmod@counter& (0+255),f,b
 15770  016426                     l5035:
 15771                           
 15772                           ; BSR set to: 0
 15773  016426  0100               	movlb	0	; () banked
 15774  016428  AF74               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 15775  01642A  D7F7               	goto	l5033
 15776  01642C                     l5037:
 15777                           
 15778                           ; BSR set to: 0
 15779  01642C  0100               	movlb	0	; () banked
 15780  01642E  5173               	movf	___lwmod@divisor& (0+255),w,b
 15781  016430  0100               	movlb	0	; () banked
 15782  016432  5D71               	subwf	___lwmod@dividend& (0+255),w,b
 15783  016434  0100               	movlb	0	; () banked
 15784  016436  5174               	movf	(___lwmod@divisor+1)& (0+255),w,b
 15785  016438  0100               	movlb	0	; () banked
 15786  01643A  5972               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 15787  01643C  A0D8               	btfss	status,0,c
 15788  01643E  D008               	goto	l5041
 15789                           
 15790                           ; BSR set to: 0
 15791  016440  0100               	movlb	0	; () banked
 15792  016442  5173               	movf	___lwmod@divisor& (0+255),w,b
 15793  016444  0100               	movlb	0	; () banked
 15794  016446  5F71               	subwf	___lwmod@dividend& (0+255),f,b
 15795  016448  0100               	movlb	0	; () banked
 15796  01644A  5174               	movf	(___lwmod@divisor+1)& (0+255),w,b
 15797  01644C  0100               	movlb	0	; () banked
 15798  01644E  5B72               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 15799  016450                     l5041:
 15800                           
 15801                           ; BSR set to: 0
 15802  016450  0100               	movlb	0	; () banked
 15803  016452  90D8               	bcf	status,0,c
 15804  016454  3374               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 15805  016456  3373               	rrcf	___lwmod@divisor& (0+255),f,b
 15806                           
 15807                           ; BSR set to: 0
 15808  016458  0100               	movlb	0	; () banked
 15809  01645A  2F75               	decfsz	___lwmod@counter& (0+255),f,b
 15810  01645C  D7E7               	goto	l5037
 15811  01645E                     l1552:
 15812                           
 15813                           ; BSR set to: 0
 15814  01645E  C071  F071         	movff	___lwmod@dividend,?___lwmod
 15815  016462  C072  F072         	movff	___lwmod@dividend+1,?___lwmod+1
 15816                           
 15817                           ; BSR set to: 0
 15818  016466  0012               	return		;funcret
 15819  016468                     __end_of___lwmod:
 15820                           	opt stack 0
 15821                           tblptru	equ	0xFF8
 15822                           tblptrh	equ	0xFF7
 15823                           tblptrl	equ	0xFF6
 15824                           tablat	equ	0xFF5
 15825                           prodh	equ	0xFF4
 15826                           prodl	equ	0xFF3
 15827                           intcon	equ	0xFF2
 15828                           postinc0	equ	0xFEE
 15829                           wreg	equ	0xFE8
 15830                           indf1	equ	0xFE7
 15831                           plusw1	equ	0xFE3
 15832                           fsr1h	equ	0xFE2
 15833                           fsr1l	equ	0xFE1
 15834                           indf2	equ	0xFDF
 15835                           postinc2	equ	0xFDE
 15836                           plusw2	equ	0xFDB
 15837                           fsr2h	equ	0xFDA
 15838                           fsr2l	equ	0xFD9
 15839                           status	equ	0xFD8
 15840                           
 15841 ;; *************** function ___lwdiv *****************
 15842 ;; Defined at:
 15843 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 15844 ;; Parameters:    Size  Location     Type
 15845 ;;  dividend        2   17[BANK0 ] unsigned int 
 15846 ;;  divisor         2   19[BANK0 ] unsigned int 
 15847 ;; Auto vars:     Size  Location     Type
 15848 ;;  quotient        2   21[BANK0 ] unsigned int 
 15849 ;;  counter         1   23[BANK0 ] unsigned char 
 15850 ;; Return value:  Size  Location     Type
 15851 ;;                  2   17[BANK0 ] unsigned int 
 15852 ;; Registers used:
 15853 ;;		wreg, status,2, status,0
 15854 ;; Tracked objects:
 15855 ;;		On entry : 0/0
 15856 ;;		On exit  : 0/0
 15857 ;;		Unchanged: 0/0
 15858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15859 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15860 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15862 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15863 ;;Total ram usage:        7 bytes
 15864 ;; Hardware stack levels used:    1
 15865 ;; Hardware stack levels required when called:    3
 15866 ;; This function calls:
 15867 ;;		Nothing
 15868 ;; This function is called by:
 15869 ;;		_utoa
 15870 ;; This function uses a non-reentrant model
 15871 ;;
 15872                           
 15873                           	psect	text32
 15874  01619A                     __ptext32:
 15875                           	opt stack 0
 15876  01619A                     ___lwdiv:
 15877                           	opt stack 23
 15878                           
 15879                           ; BSR set to: 0
 15880                           ;incstack = 0
 15881  01619A  0E00               	movlw	0
 15882  01619C  0100               	movlb	0	; () banked
 15883  01619E  6F76               	movwf	(___lwdiv@quotient+1)& (0+255),b
 15884  0161A0  0E00               	movlw	0
 15885  0161A2  6F75               	movwf	___lwdiv@quotient& (0+255),b
 15886                           
 15887                           ; BSR set to: 0
 15888  0161A4  0100               	movlb	0	; () banked
 15889  0161A6  5173               	movf	___lwdiv@divisor& (0+255),w,b
 15890  0161A8  0100               	movlb	0	; () banked
 15891  0161AA  1174               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 15892  0161AC  B4D8               	btfsc	status,2,c
 15893  0161AE  D02C               	goto	l1542
 15894                           
 15895                           ; BSR set to: 0
 15896  0161B0  0E01               	movlw	1
 15897  0161B2  0100               	movlb	0	; () banked
 15898  0161B4  6F77               	movwf	___lwdiv@counter& (0+255),b
 15899  0161B6  D006               	goto	l5015
 15900  0161B8                     l5013:
 15901                           
 15902                           ; BSR set to: 0
 15903  0161B8  0100               	movlb	0	; () banked
 15904  0161BA  90D8               	bcf	status,0,c
 15905  0161BC  3773               	rlcf	___lwdiv@divisor& (0+255),f,b
 15906  0161BE  3774               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 15907  0161C0  0100               	movlb	0	; () banked
 15908  0161C2  2B77               	incf	___lwdiv@counter& (0+255),f,b
 15909  0161C4                     l5015:
 15910                           
 15911                           ; BSR set to: 0
 15912  0161C4  0100               	movlb	0	; () banked
 15913  0161C6  AF74               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 15914  0161C8  D7F7               	goto	l5013
 15915  0161CA                     l5017:
 15916                           
 15917                           ; BSR set to: 0
 15918  0161CA  0100               	movlb	0	; () banked
 15919  0161CC  90D8               	bcf	status,0,c
 15920  0161CE  3775               	rlcf	___lwdiv@quotient& (0+255),f,b
 15921  0161D0  3776               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 15922                           
 15923                           ; BSR set to: 0
 15924  0161D2  0100               	movlb	0	; () banked
 15925  0161D4  5173               	movf	___lwdiv@divisor& (0+255),w,b
 15926  0161D6  0100               	movlb	0	; () banked
 15927  0161D8  5D71               	subwf	___lwdiv@dividend& (0+255),w,b
 15928  0161DA  0100               	movlb	0	; () banked
 15929  0161DC  5174               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15930  0161DE  0100               	movlb	0	; () banked
 15931  0161E0  5972               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 15932  0161E2  A0D8               	btfss	status,0,c
 15933  0161E4  D00A               	goto	l5025
 15934                           
 15935                           ; BSR set to: 0
 15936  0161E6  0100               	movlb	0	; () banked
 15937  0161E8  5173               	movf	___lwdiv@divisor& (0+255),w,b
 15938  0161EA  0100               	movlb	0	; () banked
 15939  0161EC  5F71               	subwf	___lwdiv@dividend& (0+255),f,b
 15940  0161EE  0100               	movlb	0	; () banked
 15941  0161F0  5174               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15942  0161F2  0100               	movlb	0	; () banked
 15943  0161F4  5B72               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 15944                           
 15945                           ; BSR set to: 0
 15946  0161F6  0100               	movlb	0	; () banked
 15947  0161F8  8175               	bsf	___lwdiv@quotient& (0+255),0,b
 15948  0161FA                     l5025:
 15949                           
 15950                           ; BSR set to: 0
 15951  0161FA  0100               	movlb	0	; () banked
 15952  0161FC  90D8               	bcf	status,0,c
 15953  0161FE  3374               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 15954  016200  3373               	rrcf	___lwdiv@divisor& (0+255),f,b
 15955                           
 15956                           ; BSR set to: 0
 15957  016202  0100               	movlb	0	; () banked
 15958  016204  2F77               	decfsz	___lwdiv@counter& (0+255),f,b
 15959  016206  D7E1               	goto	l5017
 15960  016208                     l1542:
 15961                           
 15962                           ; BSR set to: 0
 15963  016208  C075  F071         	movff	___lwdiv@quotient,?___lwdiv
 15964  01620C  C076  F072         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15965                           
 15966                           ; BSR set to: 0
 15967  016210  0012               	return		;funcret
 15968  016212                     __end_of___lwdiv:
 15969                           	opt stack 0
 15970                           tblptru	equ	0xFF8
 15971                           tblptrh	equ	0xFF7
 15972                           tblptrl	equ	0xFF6
 15973                           tablat	equ	0xFF5
 15974                           prodh	equ	0xFF4
 15975                           prodl	equ	0xFF3
 15976                           intcon	equ	0xFF2
 15977                           postinc0	equ	0xFEE
 15978                           wreg	equ	0xFE8
 15979                           indf1	equ	0xFE7
 15980                           plusw1	equ	0xFE3
 15981                           fsr1h	equ	0xFE2
 15982                           fsr1l	equ	0xFE1
 15983                           indf2	equ	0xFDF
 15984                           postinc2	equ	0xFDE
 15985                           plusw2	equ	0xFDB
 15986                           fsr2h	equ	0xFDA
 15987                           fsr2l	equ	0xFD9
 15988                           status	equ	0xFD8
 15989                           
 15990 ;; *************** function _LCD_write_string *****************
 15991 ;; Defined at:
 15992 ;;		line 194 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15993 ;; Parameters:    Size  Location     Type
 15994 ;;  buffer          2   34[BANK0 ] PTR unsigned char 
 15995 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 15996 ;; Auto vars:     Size  Location     Type
 15997 ;;		None
 15998 ;; Return value:  Size  Location     Type
 15999 ;;                  1    wreg      void 
 16000 ;; Registers used:
 16001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16002 ;; Tracked objects:
 16003 ;;		On entry : 0/0
 16004 ;;		On exit  : 0/0
 16005 ;;		Unchanged: 0/0
 16006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16007 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16010 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16011 ;;Total ram usage:        2 bytes
 16012 ;; Hardware stack levels used:    1
 16013 ;; Hardware stack levels required when called:    8
 16014 ;; This function calls:
 16015 ;;		_LCD_write_char
 16016 ;; This function is called by:
 16017 ;;		_LCD_write_integer
 16018 ;;		_LCD_Handler
 16019 ;; This function uses a non-reentrant model
 16020 ;;
 16021                           
 16022                           	psect	text33
 16023  016782                     __ptext33:
 16024                           	opt stack 0
 16025  016782                     _LCD_write_string:
 16026                           	opt stack 21
 16027                           
 16028                           ;src\LCD_44780.c: 197: while(*buffer){
 16029                           
 16030                           ; BSR set to: 0
 16031                           ;incstack = 0
 16032  016782  D00A               	goto	l8635
 16033  016784                     l8631:
 16034                           
 16035                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 16036  016784  C082  FFD9         	movff	LCD_write_string@buffer,fsr2l
 16037  016788  C083  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 16038  01678C  50DF               	movf	indf2,w,c
 16039  01678E  EC39  F0B0         	call	_LCD_write_char
 16040                           
 16041                           ;src\LCD_44780.c: 202: buffer++;
 16042  016792  0100               	movlb	0	; () banked
 16043  016794  4B82               	infsnz	LCD_write_string@buffer& (0+255),f,b
 16044  016796  2B83               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 16045  016798                     l8635:
 16046  016798  C082  FFD9         	movff	LCD_write_string@buffer,fsr2l
 16047  01679C  C083  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 16048  0167A0  50DF               	movf	indf2,w,c
 16049  0167A2  B4D8               	btfsc	status,2,c
 16050  0167A4  0012               	return	
 16051  0167A6  D7EE               	goto	l8631
 16052  0167A8                     __end_of_LCD_write_string:
 16053                           	opt stack 0
 16054                           tblptru	equ	0xFF8
 16055                           tblptrh	equ	0xFF7
 16056                           tblptrl	equ	0xFF6
 16057                           tablat	equ	0xFF5
 16058                           prodh	equ	0xFF4
 16059                           prodl	equ	0xFF3
 16060                           intcon	equ	0xFF2
 16061                           postinc0	equ	0xFEE
 16062                           wreg	equ	0xFE8
 16063                           indf1	equ	0xFE7
 16064                           plusw1	equ	0xFE3
 16065                           fsr1h	equ	0xFE2
 16066                           fsr1l	equ	0xFE1
 16067                           indf2	equ	0xFDF
 16068                           postinc2	equ	0xFDE
 16069                           plusw2	equ	0xFDB
 16070                           fsr2h	equ	0xFDA
 16071                           fsr2l	equ	0xFD9
 16072                           status	equ	0xFD8
 16073                           
 16074 ;; *************** function _LCD_goto_xy *****************
 16075 ;; Defined at:
 16076 ;;		line 136 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16077 ;; Parameters:    Size  Location     Type
 16078 ;;  x               1    wreg     unsigned char 
 16079 ;;  y               1   32[BANK0 ] unsigned char 
 16080 ;; Auto vars:     Size  Location     Type
 16081 ;;  x               1   33[BANK0 ] unsigned char 
 16082 ;; Return value:  Size  Location     Type
 16083 ;;                  1    wreg      void 
 16084 ;; Registers used:
 16085 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16086 ;; Tracked objects:
 16087 ;;		On entry : 0/0
 16088 ;;		On exit  : 0/0
 16089 ;;		Unchanged: 0/0
 16090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16091 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16094 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16095 ;;Total ram usage:        2 bytes
 16096 ;; Hardware stack levels used:    1
 16097 ;; Hardware stack levels required when called:    8
 16098 ;; This function calls:
 16099 ;;		_LCD_goto_line
 16100 ;;		_LCD_shift_cursor
 16101 ;; This function is called by:
 16102 ;;		_LCD_Handler
 16103 ;; This function uses a non-reentrant model
 16104 ;;
 16105                           
 16106                           	psect	text34
 16107  016828                     __ptext34:
 16108                           	opt stack 0
 16109  016828                     _LCD_goto_xy:
 16110                           	opt stack 21
 16111                           
 16112                           ;incstack = 0
 16113                           ;LCD_goto_xy@x stored from wreg
 16114  016828  0100               	movlb	0	; () banked
 16115  01682A  6F81               	movwf	LCD_goto_xy@x& (0+255),b
 16116                           
 16117                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 16118  01682C  0100               	movlb	0	; () banked
 16119  01682E  5180               	movf	LCD_goto_xy@y& (0+255),w,b
 16120  016830  EC5A  F0AD         	call	_LCD_goto_line
 16121                           
 16122                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 16123  016834  0100               	movlb	0	; () banked
 16124  016836  0581               	decf	LCD_goto_xy@x& (0+255),w,b
 16125  016838  0100               	movlb	0	; () banked
 16126  01683A  6F7D               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 16127  01683C  0E01               	movlw	1
 16128  01683E  EC5E  F0B2         	call	_LCD_shift_cursor
 16129  016842  0012               	return		;funcret
 16130  016844                     __end_of_LCD_goto_xy:
 16131                           	opt stack 0
 16132                           tblptru	equ	0xFF8
 16133                           tblptrh	equ	0xFF7
 16134                           tblptrl	equ	0xFF6
 16135                           tablat	equ	0xFF5
 16136                           prodh	equ	0xFF4
 16137                           prodl	equ	0xFF3
 16138                           intcon	equ	0xFF2
 16139                           postinc0	equ	0xFEE
 16140                           wreg	equ	0xFE8
 16141                           indf1	equ	0xFE7
 16142                           plusw1	equ	0xFE3
 16143                           fsr1h	equ	0xFE2
 16144                           fsr1l	equ	0xFE1
 16145                           indf2	equ	0xFDF
 16146                           postinc2	equ	0xFDE
 16147                           plusw2	equ	0xFDB
 16148                           fsr2h	equ	0xFDA
 16149                           fsr2l	equ	0xFD9
 16150                           status	equ	0xFD8
 16151                           
 16152 ;; *************** function _LCD_shift_cursor *****************
 16153 ;; Defined at:
 16154 ;;		line 98 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16155 ;; Parameters:    Size  Location     Type
 16156 ;;  shift           1    wreg     unsigned char 
 16157 ;;  number_of_sh    1   29[BANK0 ] unsigned char 
 16158 ;; Auto vars:     Size  Location     Type
 16159 ;;  shift           1   30[BANK0 ] unsigned char 
 16160 ;;  i               1   31[BANK0 ] unsigned char 
 16161 ;; Return value:  Size  Location     Type
 16162 ;;                  1    wreg      void 
 16163 ;; Registers used:
 16164 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16165 ;; Tracked objects:
 16166 ;;		On entry : 0/0
 16167 ;;		On exit  : 0/0
 16168 ;;		Unchanged: 0/0
 16169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16170 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16171 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16173 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16174 ;;Total ram usage:        3 bytes
 16175 ;; Hardware stack levels used:    1
 16176 ;; Hardware stack levels required when called:    7
 16177 ;; This function calls:
 16178 ;;		_LCD_send_command
 16179 ;; This function is called by:
 16180 ;;		_LCD_goto_xy
 16181 ;; This function uses a non-reentrant model
 16182 ;;
 16183                           
 16184                           	psect	text35
 16185  0164BC                     __ptext35:
 16186                           	opt stack 0
 16187  0164BC                     _LCD_shift_cursor:
 16188                           	opt stack 21
 16189                           
 16190                           ;incstack = 0
 16191                           ;LCD_shift_cursor@shift stored from wreg
 16192  0164BC  0100               	movlb	0	; () banked
 16193  0164BE  6F7E               	movwf	LCD_shift_cursor@shift& (0+255),b
 16194                           
 16195                           ;src\LCD_44780.c: 100: unsigned char i;
 16196                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 16197  0164C0  0E00               	movlw	0
 16198  0164C2  0100               	movlb	0	; () banked
 16199  0164C4  6F7F               	movwf	LCD_shift_cursor@i& (0+255),b
 16200  0164C6  D019               	goto	l8615
 16201  0164C8                     l8611:
 16202                           
 16203                           ; BSR set to: 0
 16204                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 16205  0164C8  0E00               	movlw	0
 16206  0164CA  0100               	movlb	0	; () banked
 16207  0164CC  6F79               	movwf	LCD_send_command@D2& (0+255),b
 16208  0164CE  0E00               	movlw	0
 16209  0164D0  0100               	movlb	0	; () banked
 16210  0164D2  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16211  0164D4  0E01               	movlw	1
 16212  0164D6  0100               	movlb	0	; () banked
 16213  0164D8  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16214  0164DA  0E00               	movlw	0
 16215  0164DC  ECEF  F0B2         	call	_LCD_send_command
 16216                           
 16217                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 16218  0164E0  C07E  F079         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 16219  0164E4  0E00               	movlw	0
 16220  0164E6  0100               	movlb	0	; () banked
 16221  0164E8  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 16222  0164EA  0E00               	movlw	0
 16223  0164EC  0100               	movlb	0	; () banked
 16224  0164EE  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 16225  0164F0  0E00               	movlw	0
 16226  0164F2  ECEF  F0B2         	call	_LCD_send_command
 16227  0164F6  0100               	movlb	0	; () banked
 16228  0164F8  2B7F               	incf	LCD_shift_cursor@i& (0+255),f,b
 16229  0164FA                     l8615:
 16230                           
 16231                           ; BSR set to: 0
 16232  0164FA  0100               	movlb	0	; () banked
 16233  0164FC  517D               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 16234  0164FE  0100               	movlb	0	; () banked
 16235  016500  5D7F               	subwf	LCD_shift_cursor@i& (0+255),w,b
 16236  016502  B0D8               	btfsc	status,0,c
 16237  016504  0012               	return	
 16238  016506  D7E0               	goto	l8611
 16239  016508                     __end_of_LCD_shift_cursor:
 16240                           	opt stack 0
 16241                           tblptru	equ	0xFF8
 16242                           tblptrh	equ	0xFF7
 16243                           tblptrl	equ	0xFF6
 16244                           tablat	equ	0xFF5
 16245                           prodh	equ	0xFF4
 16246                           prodl	equ	0xFF3
 16247                           intcon	equ	0xFF2
 16248                           postinc0	equ	0xFEE
 16249                           wreg	equ	0xFE8
 16250                           indf1	equ	0xFE7
 16251                           plusw1	equ	0xFE3
 16252                           fsr1h	equ	0xFE2
 16253                           fsr1l	equ	0xFE1
 16254                           indf2	equ	0xFDF
 16255                           postinc2	equ	0xFDE
 16256                           plusw2	equ	0xFDB
 16257                           fsr2h	equ	0xFDA
 16258                           fsr2l	equ	0xFD9
 16259                           status	equ	0xFD8
 16260                           
 16261 ;; *************** function _LCD_Gap *****************
 16262 ;; Defined at:
 16263 ;;		line 570 in file "RemoteCan.c"
 16264 ;; Parameters:    Size  Location     Type
 16265 ;;		None
 16266 ;; Auto vars:     Size  Location     Type
 16267 ;;		None
 16268 ;; Return value:  Size  Location     Type
 16269 ;;                  1    wreg      void 
 16270 ;; Registers used:
 16271 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16272 ;; Tracked objects:
 16273 ;;		On entry : 0/0
 16274 ;;		On exit  : 0/0
 16275 ;;		Unchanged: 0/0
 16276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16281 ;;Total ram usage:        0 bytes
 16282 ;; Hardware stack levels used:    1
 16283 ;; Hardware stack levels required when called:    9
 16284 ;; This function calls:
 16285 ;;		_LCD_clear
 16286 ;;		_LCD_goto_line
 16287 ;;		_LCD_initialize
 16288 ;;		_LCD_write_message
 16289 ;; This function is called by:
 16290 ;;		_main
 16291 ;; This function uses a non-reentrant model
 16292 ;;
 16293                           
 16294                           	psect	text36
 16295  0162DA                     __ptext36:
 16296                           	opt stack 0
 16297  0162DA                     _LCD_Gap:
 16298                           	opt stack 21
 16299                           
 16300                           ;RemoteCan.c: 571: LCD_initialize(16);
 16301                           
 16302                           ; BSR set to: 0
 16303                           ;incstack = 0
 16304  0162DA  0E10               	movlw	16
 16305  0162DC  EC1D  F0AC         	call	_LCD_initialize
 16306                           
 16307                           ;RemoteCan.c: 572: LCD_clear();
 16308  0162E0  EC93  F0B3         	call	_LCD_clear	;wreg free
 16309                           
 16310                           ;RemoteCan.c: 573: LCD_goto_line(1);
 16311  0162E4  0E01               	movlw	1
 16312  0162E6  EC5A  F0AD         	call	_LCD_goto_line
 16313                           
 16314                           ;RemoteCan.c: 574: LCD_write_message("= PARKING MESSAGES =");
 16315  0162EA  0E16               	movlw	low STR_21
 16316  0162EC  0100               	movlb	0	; () banked
 16317  0162EE  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16318  0162F0  0EFF               	movlw	high STR_21
 16319  0162F2  0100               	movlb	0	; () banked
 16320  0162F4  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16321  0162F6  EC60  F0B3         	call	_LCD_write_message	;wreg free
 16322                           
 16323                           ;RemoteCan.c: 575: LCD_goto_line(2);
 16324  0162FA  0E02               	movlw	2
 16325  0162FC  EC5A  F0AD         	call	_LCD_goto_line
 16326                           
 16327                           ;RemoteCan.c: 576: LCD_write_message(" Parking space FOUND");
 16328  016300  0E7F               	movlw	low STR_22
 16329  016302  0100               	movlb	0	; () banked
 16330  016304  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16331  016306  0EFF               	movlw	high STR_22
 16332  016308  0100               	movlb	0	; () banked
 16333  01630A  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16334  01630C  EC60  F0B3         	call	_LCD_write_message	;wreg free
 16335                           
 16336                           ;RemoteCan.c: 577: LCD_goto_line(3);
 16337  016310  0E03               	movlw	3
 16338  016312  EC5A  F0AD         	call	_LCD_goto_line
 16339                           
 16340                           ;RemoteCan.c: 578: LCD_write_message("->  KEEP MOVING   <-");
 16341  016316  0EC2               	movlw	low STR_23
 16342  016318  0100               	movlb	0	; () banked
 16343  01631A  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16344  01631C  0EFE               	movlw	high STR_23
 16345  01631E  0100               	movlb	0	; () banked
 16346  016320  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16347  016322  EC60  F0B3         	call	_LCD_write_message	;wreg free
 16348                           
 16349                           ;RemoteCan.c: 579: LCD_goto_line(4);
 16350  016326  0E04               	movlw	4
 16351  016328  EC5A  F0AD         	call	_LCD_goto_line
 16352                           
 16353                           ;RemoteCan.c: 580: LCD_write_message(" until next message ");
 16354  01632C  0E59               	movlw	low STR_24
 16355  01632E  0100               	movlb	0	; () banked
 16356  016330  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16357  016332  0EFE               	movlw	high STR_24
 16358  016334  0100               	movlb	0	; () banked
 16359  016336  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16360  016338  EC60  F0B3         	call	_LCD_write_message	;wreg free
 16361  01633C  0012               	return		;funcret
 16362  01633E                     __end_of_LCD_Gap:
 16363                           	opt stack 0
 16364                           tblptru	equ	0xFF8
 16365                           tblptrh	equ	0xFF7
 16366                           tblptrl	equ	0xFF6
 16367                           tablat	equ	0xFF5
 16368                           prodh	equ	0xFF4
 16369                           prodl	equ	0xFF3
 16370                           intcon	equ	0xFF2
 16371                           postinc0	equ	0xFEE
 16372                           wreg	equ	0xFE8
 16373                           indf1	equ	0xFE7
 16374                           plusw1	equ	0xFE3
 16375                           fsr1h	equ	0xFE2
 16376                           fsr1l	equ	0xFE1
 16377                           indf2	equ	0xFDF
 16378                           postinc2	equ	0xFDE
 16379                           plusw2	equ	0xFDB
 16380                           fsr2h	equ	0xFDA
 16381                           fsr2l	equ	0xFD9
 16382                           status	equ	0xFD8
 16383                           
 16384 ;; *************** function _LCD_Error *****************
 16385 ;; Defined at:
 16386 ;;		line 622 in file "RemoteCan.c"
 16387 ;; Parameters:    Size  Location     Type
 16388 ;;		None
 16389 ;; Auto vars:     Size  Location     Type
 16390 ;;		None
 16391 ;; Return value:  Size  Location     Type
 16392 ;;                  1    wreg      void 
 16393 ;; Registers used:
 16394 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16395 ;; Tracked objects:
 16396 ;;		On entry : 0/0
 16397 ;;		On exit  : 0/0
 16398 ;;		Unchanged: 0/0
 16399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16404 ;;Total ram usage:        0 bytes
 16405 ;; Hardware stack levels used:    1
 16406 ;; Hardware stack levels required when called:    9
 16407 ;; This function calls:
 16408 ;;		_LCD_clear
 16409 ;;		_LCD_goto_line
 16410 ;;		_LCD_initialize
 16411 ;;		_LCD_write_message
 16412 ;; This function is called by:
 16413 ;;		_main
 16414 ;; This function uses a non-reentrant model
 16415 ;;
 16416                           
 16417                           	psect	text37
 16418  016108                     __ptext37:
 16419                           	opt stack 0
 16420  016108                     _LCD_Error:
 16421                           	opt stack 21
 16422                           
 16423                           ;RemoteCan.c: 623: LCD_initialize(16);
 16424                           
 16425                           ;incstack = 0
 16426  016108  0E10               	movlw	16
 16427  01610A  EC1D  F0AC         	call	_LCD_initialize
 16428                           
 16429                           ;RemoteCan.c: 624: LCD_clear();
 16430  01610E  EC93  F0B3         	call	_LCD_clear	;wreg free
 16431                           
 16432                           ;RemoteCan.c: 625: LCD_goto_line(1);
 16433  016112  0E01               	movlw	1
 16434  016114  EC5A  F0AD         	call	_LCD_goto_line
 16435                           
 16436                           ;RemoteCan.c: 626: LCD_write_message("= PARKING MESSAGES =");
 16437  016118  0E16               	movlw	low STR_21
 16438  01611A  0100               	movlb	0	; () banked
 16439  01611C  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16440  01611E  0EFF               	movlw	high STR_21
 16441  016120  0100               	movlb	0	; () banked
 16442  016122  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16443  016124  EC60  F0B3         	call	_LCD_write_message	;wreg free
 16444                           
 16445                           ;RemoteCan.c: 627: LCD_goto_line(2);
 16446  016128  0E02               	movlw	2
 16447  01612A  EC5A  F0AD         	call	_LCD_goto_line
 16448                           
 16449                           ;RemoteCan.c: 628: LCD_write_message(" Parking procedures ");
 16450  01612E  0E98               	movlw	low STR_34
 16451  016130  0100               	movlb	0	; () banked
 16452  016132  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16453  016134  0EFE               	movlw	high STR_34
 16454  016136  0100               	movlb	0	; () banked
 16455  016138  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16456  01613A  EC60  F0B3         	call	_LCD_write_message	;wreg free
 16457                           
 16458                           ;RemoteCan.c: 629: LCD_goto_line(3);
 16459  01613E  0E03               	movlw	3
 16460  016140  EC5A  F0AD         	call	_LCD_goto_line
 16461                           
 16462                           ;RemoteCan.c: 630: if (user_stop == 0) {
 16463  016144  B24A               	btfsc	_user_stop/(0+8),_user_stop& (0+7),c	;volatile
 16464  016146  D014               	goto	l944
 16465                           
 16466                           ;RemoteCan.c: 631: LCD_write_message("       FAILED!      ");
 16467  016148  0E72               	movlw	low STR_39
 16468  01614A  0100               	movlb	0	; () banked
 16469  01614C  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16470  01614E  0EFD               	movlw	high STR_39
 16471  016150  0100               	movlb	0	; () banked
 16472  016152  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16473  016154  EC60  F0B3         	call	_LCD_write_message	;wreg free
 16474                           
 16475                           ;RemoteCan.c: 632: LCD_goto_line(4);
 16476  016158  0E04               	movlw	4
 16477  01615A  EC5A  F0AD         	call	_LCD_goto_line
 16478                           
 16479                           ;RemoteCan.c: 633: LCD_write_message("   due to an error  ");
 16480  01615E  0E2F               	movlw	low STR_40
 16481  016160  0100               	movlb	0	; () banked
 16482  016162  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16483  016164  0EFE               	movlw	high STR_40
 16484  016166  0100               	movlb	0	; () banked
 16485  016168  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16486  01616A  EC60  F0B3         	call	_LCD_write_message	;wreg free
 16487                           
 16488                           ;RemoteCan.c: 634: } else {
 16489  01616E  0012               	return	
 16490  016170                     l944:
 16491                           
 16492                           ;RemoteCan.c: 635: user_stop = 0;
 16493  016170  924A               	bcf	_user_stop/(0+8),_user_stop& (0+7),c	;volatile
 16494                           
 16495                           ;RemoteCan.c: 636: LCD_write_message("      STOPPED!      ");
 16496  016172  0E87               	movlw	low STR_41
 16497  016174  0100               	movlb	0	; () banked
 16498  016176  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16499  016178  0EFD               	movlw	high STR_41
 16500  01617A  0100               	movlb	0	; () banked
 16501  01617C  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16502  01617E  EC60  F0B3         	call	_LCD_write_message	;wreg free
 16503                           
 16504                           ;RemoteCan.c: 637: LCD_goto_line(4);
 16505  016182  0E04               	movlw	4
 16506  016184  EC5A  F0AD         	call	_LCD_goto_line
 16507                           
 16508                           ;RemoteCan.c: 638: LCD_write_message("    by the USER     ");
 16509  016188  0EB1               	movlw	low STR_42
 16510  01618A  0100               	movlb	0	; () banked
 16511  01618C  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16512  01618E  0EFD               	movlw	high STR_42
 16513  016190  0100               	movlb	0	; () banked
 16514  016192  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16515  016194  EC60  F0B3         	call	_LCD_write_message	;wreg free
 16516  016198  0012               	return	
 16517  01619A                     __end_of_LCD_Error:
 16518                           	opt stack 0
 16519                           tblptru	equ	0xFF8
 16520                           tblptrh	equ	0xFF7
 16521                           tblptrl	equ	0xFF6
 16522                           tablat	equ	0xFF5
 16523                           prodh	equ	0xFF4
 16524                           prodl	equ	0xFF3
 16525                           intcon	equ	0xFF2
 16526                           postinc0	equ	0xFEE
 16527                           wreg	equ	0xFE8
 16528                           indf1	equ	0xFE7
 16529                           plusw1	equ	0xFE3
 16530                           fsr1h	equ	0xFE2
 16531                           fsr1l	equ	0xFE1
 16532                           indf2	equ	0xFDF
 16533                           postinc2	equ	0xFDE
 16534                           plusw2	equ	0xFDB
 16535                           fsr2h	equ	0xFDA
 16536                           fsr2l	equ	0xFD9
 16537                           status	equ	0xFD8
 16538                           
 16539 ;; *************** function _LCD_End *****************
 16540 ;; Defined at:
 16541 ;;		line 609 in file "RemoteCan.c"
 16542 ;; Parameters:    Size  Location     Type
 16543 ;;		None
 16544 ;; Auto vars:     Size  Location     Type
 16545 ;;		None
 16546 ;; Return value:  Size  Location     Type
 16547 ;;                  1    wreg      void 
 16548 ;; Registers used:
 16549 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16550 ;; Tracked objects:
 16551 ;;		On entry : 0/0
 16552 ;;		On exit  : 0/0
 16553 ;;		Unchanged: 0/0
 16554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16559 ;;Total ram usage:        0 bytes
 16560 ;; Hardware stack levels used:    1
 16561 ;; Hardware stack levels required when called:    9
 16562 ;; This function calls:
 16563 ;;		_LCD_clear
 16564 ;;		_LCD_goto_line
 16565 ;;		_LCD_initialize
 16566 ;;		_LCD_write_message
 16567 ;; This function is called by:
 16568 ;;		_main
 16569 ;; This function uses a non-reentrant model
 16570 ;;
 16571                           
 16572                           	psect	text38
 16573  01633E                     __ptext38:
 16574                           	opt stack 0
 16575  01633E                     _LCD_End:
 16576                           	opt stack 21
 16577                           
 16578                           ;RemoteCan.c: 610: LCD_initialize(16);
 16579                           
 16580                           ;incstack = 0
 16581  01633E  0E10               	movlw	16
 16582  016340  EC1D  F0AC         	call	_LCD_initialize
 16583                           
 16584                           ;RemoteCan.c: 611: LCD_clear();
 16585  016344  EC93  F0B3         	call	_LCD_clear	;wreg free
 16586                           
 16587                           ;RemoteCan.c: 612: LCD_goto_line(1);
 16588  016348  0E01               	movlw	1
 16589  01634A  EC5A  F0AD         	call	_LCD_goto_line
 16590                           
 16591                           ;RemoteCan.c: 613: LCD_write_message("= PARKING MESSAGES =");
 16592  01634E  0E16               	movlw	low STR_21
 16593  016350  0100               	movlb	0	; () banked
 16594  016352  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16595  016354  0EFF               	movlw	high STR_21
 16596  016356  0100               	movlb	0	; () banked
 16597  016358  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16598  01635A  EC60  F0B3         	call	_LCD_write_message	;wreg free
 16599                           
 16600                           ;RemoteCan.c: 614: LCD_goto_line(2);
 16601  01635E  0E02               	movlw	2
 16602  016360  EC5A  F0AD         	call	_LCD_goto_line
 16603                           
 16604                           ;RemoteCan.c: 615: LCD_write_message(" Parking procedures ");
 16605  016364  0E98               	movlw	low STR_34
 16606  016366  0100               	movlb	0	; () banked
 16607  016368  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16608  01636A  0EFE               	movlw	high STR_34
 16609  01636C  0100               	movlb	0	; () banked
 16610  01636E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16611  016370  EC60  F0B3         	call	_LCD_write_message	;wreg free
 16612                           
 16613                           ;RemoteCan.c: 616: LCD_goto_line(3);
 16614  016374  0E03               	movlw	3
 16615  016376  EC5A  F0AD         	call	_LCD_goto_line
 16616                           
 16617                           ;RemoteCan.c: 617: LCD_write_message("    SUCCESSFULLY    ");
 16618  01637A  0EC6               	movlw	low STR_35
 16619  01637C  0100               	movlb	0	; () banked
 16620  01637E  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16621  016380  0EFD               	movlw	high STR_35
 16622  016382  0100               	movlb	0	; () banked
 16623  016384  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16624  016386  EC60  F0B3         	call	_LCD_write_message	;wreg free
 16625                           
 16626                           ;RemoteCan.c: 618: LCD_goto_line(4);
 16627  01638A  0E04               	movlw	4
 16628  01638C  EC5A  F0AD         	call	_LCD_goto_line
 16629                           
 16630                           ;RemoteCan.c: 619: LCD_write_message("     COMPLETED!     ");
 16631  016390  0E9C               	movlw	low STR_36
 16632  016392  0100               	movlb	0	; () banked
 16633  016394  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 16634  016396  0EFD               	movlw	high STR_36
 16635  016398  0100               	movlb	0	; () banked
 16636  01639A  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 16637  01639C  EC60  F0B3         	call	_LCD_write_message	;wreg free
 16638  0163A0  0012               	return		;funcret
 16639  0163A2                     __end_of_LCD_End:
 16640                           	opt stack 0
 16641                           tblptru	equ	0xFF8
 16642                           tblptrh	equ	0xFF7
 16643                           tblptrl	equ	0xFF6
 16644                           tablat	equ	0xFF5
 16645                           prodh	equ	0xFF4
 16646                           prodl	equ	0xFF3
 16647                           intcon	equ	0xFF2
 16648                           postinc0	equ	0xFEE
 16649                           wreg	equ	0xFE8
 16650                           indf1	equ	0xFE7
 16651                           plusw1	equ	0xFE3
 16652                           fsr1h	equ	0xFE2
 16653                           fsr1l	equ	0xFE1
 16654                           indf2	equ	0xFDF
 16655                           postinc2	equ	0xFDE
 16656                           plusw2	equ	0xFDB
 16657                           fsr2h	equ	0xFDA
 16658                           fsr2l	equ	0xFD9
 16659                           status	equ	0xFD8
 16660                           
 16661 ;; *************** function _Joystick_Polling *****************
 16662 ;; Defined at:
 16663 ;;		line 685 in file "RemoteCan.c"
 16664 ;; Parameters:    Size  Location     Type
 16665 ;;		None
 16666 ;; Auto vars:     Size  Location     Type
 16667 ;;  i               1   18[BANK0 ] unsigned char 
 16668 ;; Return value:  Size  Location     Type
 16669 ;;                  1    wreg      void 
 16670 ;; Registers used:
 16671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16672 ;; Tracked objects:
 16673 ;;		On entry : 0/0
 16674 ;;		On exit  : 0/0
 16675 ;;		Unchanged: 0/0
 16676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16678 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16679 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16680 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16681 ;;Total ram usage:        2 bytes
 16682 ;; Hardware stack levels used:    1
 16683 ;; Hardware stack levels required when called:    3
 16684 ;; This function calls:
 16685 ;;		Nothing
 16686 ;; This function is called by:
 16687 ;;		_main
 16688 ;; This function uses a non-reentrant model
 16689 ;;
 16690                           
 16691                           	psect	text39
 16692  016468                     __ptext39:
 16693                           	opt stack 0
 16694  016468                     _Joystick_Polling:
 16695                           	opt stack 27
 16696                           
 16697                           ;RemoteCan.c: 686: for (unsigned char i = 0; i < 2; i++) {
 16698                           
 16699                           ;incstack = 0
 16700  016468  0E00               	movlw	0
 16701  01646A  0100               	movlb	0	; () banked
 16702  01646C  6F72               	movwf	Joystick_Polling@i& (0+255),b
 16703  01646E                     l7249:
 16704                           
 16705                           ; BSR set to: 0
 16706  01646E  0E01               	movlw	1
 16707  016470  0100               	movlb	0	; () banked
 16708  016472  6572               	cpfsgt	Joystick_Polling@i& (0+255),b
 16709  016474  D001               	goto	l973
 16710  016476  0012               	return	
 16711  016478                     l973:
 16712                           
 16713                           ; BSR set to: 0
 16714                           ;RemoteCan.c: 687: ADCON0bits.GO = 1;
 16715  016478  82C2               	bsf	4034,1,c	;volatile
 16716  01647A                     l975:
 16717  01647A  B2C2               	btfsc	4034,1,c	;volatile
 16718  01647C  D7FE               	goto	l975
 16719                           
 16720                           ;RemoteCan.c: 689: JoystickValues[i] = ADRESH;
 16721  01647E  0100               	movlb	0	; () banked
 16722  016480  5172               	movf	Joystick_Polling@i& (0+255),w,b
 16723  016482  0D01               	mullw	1
 16724  016484  0EDD               	movlw	low _JoystickValues
 16725  016486  24F3               	addwf	prodl,w,c
 16726  016488  6ED9               	movwf	fsr2l,c
 16727  01648A  0E00               	movlw	high _JoystickValues
 16728  01648C  20F4               	addwfc	prodh,w,c
 16729  01648E  6EDA               	movwf	fsr2h,c
 16730  016490  CFC4 FFDF          	movff	4036,indf2	;volatile
 16731                           
 16732                           ; BSR set to: 0
 16733                           ;RemoteCan.c: 690: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 16734  016494  A4C2               	btfss	4034,2,c	;volatile
 16735  016496  D002               	goto	u9160
 16736  016498  0E01               	movlw	1
 16737  01649A  D001               	goto	u9166
 16738  01649C                     u9160:
 16739  01649C  0E00               	movlw	0
 16740  01649E                     u9166:
 16741  01649E  0AFF               	xorlw	255
 16742  0164A0  0100               	movlb	0	; () banked
 16743  0164A2  6F71               	movwf	??_Joystick_Polling& (0+255),b
 16744  0164A4  0100               	movlb	0	; () banked
 16745  0164A6  4771               	rlncf	??_Joystick_Polling& (0+255),f,b
 16746  0164A8  4771               	rlncf	??_Joystick_Polling& (0+255),f,b
 16747  0164AA  50C2               	movf	4034,w,c	;volatile
 16748  0164AC  0100               	movlb	0	; () banked
 16749  0164AE  1971               	xorwf	??_Joystick_Polling& (0+255),w,b
 16750  0164B0  0BFB               	andlw	-5
 16751  0164B2  1971               	xorwf	??_Joystick_Polling& (0+255),w,b
 16752  0164B4  6EC2               	movwf	4034,c	;volatile
 16753                           
 16754                           ; BSR set to: 0
 16755  0164B6  0100               	movlb	0	; () banked
 16756  0164B8  2B72               	incf	Joystick_Polling@i& (0+255),f,b
 16757  0164BA  D7D9               	goto	l7249
 16758  0164BC                     __end_of_Joystick_Polling:
 16759                           	opt stack 0
 16760                           tblptru	equ	0xFF8
 16761                           tblptrh	equ	0xFF7
 16762                           tblptrl	equ	0xFF6
 16763                           tablat	equ	0xFF5
 16764                           prodh	equ	0xFF4
 16765                           prodl	equ	0xFF3
 16766                           intcon	equ	0xFF2
 16767                           postinc0	equ	0xFEE
 16768                           wreg	equ	0xFE8
 16769                           indf1	equ	0xFE7
 16770                           plusw1	equ	0xFE3
 16771                           fsr1h	equ	0xFE2
 16772                           fsr1l	equ	0xFE1
 16773                           indf2	equ	0xFDF
 16774                           postinc2	equ	0xFDE
 16775                           plusw2	equ	0xFDB
 16776                           fsr2h	equ	0xFDA
 16777                           fsr2l	equ	0xFD9
 16778                           status	equ	0xFD8
 16779                           
 16780 ;; *************** function _F2_Button_Polling *****************
 16781 ;; Defined at:
 16782 ;;		line 675 in file "RemoteCan.c"
 16783 ;; Parameters:    Size  Location     Type
 16784 ;;		None
 16785 ;; Auto vars:     Size  Location     Type
 16786 ;;		None
 16787 ;; Return value:  Size  Location     Type
 16788 ;;                  1    wreg      void 
 16789 ;; Registers used:
 16790 ;;		None
 16791 ;; Tracked objects:
 16792 ;;		On entry : 0/0
 16793 ;;		On exit  : 0/0
 16794 ;;		Unchanged: 0/0
 16795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16800 ;;Total ram usage:        0 bytes
 16801 ;; Hardware stack levels used:    1
 16802 ;; Hardware stack levels required when called:    3
 16803 ;; This function calls:
 16804 ;;		Nothing
 16805 ;; This function is called by:
 16806 ;;		_main
 16807 ;; This function uses a non-reentrant model
 16808 ;;
 16809                           
 16810                           	psect	text40
 16811  016844                     __ptext40:
 16812                           	opt stack 0
 16813  016844                     _F2_Button_Polling:
 16814                           	opt stack 27
 16815                           
 16816                           ;RemoteCan.c: 676: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 16817                           
 16818                           ; BSR set to: 0
 16819                           ;incstack = 0
 16820  016844  A281               	btfss	3969,1,c	;volatile
 16821  016846  D002               	goto	l968
 16822  016848  B84A               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16823  01684A  0012               	return	
 16824  01684C                     l968:
 16825                           
 16826                           ;RemoteCan.c: 677: wait_low_3 = 0;
 16827  01684C  984A               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16828                           
 16829                           ;RemoteCan.c: 678: if (PORTBbits.RB1 == 1) {
 16830  01684E  A281               	btfss	3969,1,c	;volatile
 16831  016850  0012               	return	
 16832                           
 16833                           ;RemoteCan.c: 679: F2_switch = ~F2_switch;
 16834  016852  B448               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16835  016854  D002               	goto	u9310
 16836  016856  8448               	bsf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16837  016858  D001               	goto	u9325
 16838  01685A                     u9310:
 16839  01685A  9448               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16840  01685C                     u9325:
 16841                           
 16842                           ;RemoteCan.c: 680: wait_low_3 = 1;
 16843  01685C  884A               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16844  01685E  0012               	return	
 16845  016860                     __end_of_F2_Button_Polling:
 16846                           	opt stack 0
 16847                           tblptru	equ	0xFF8
 16848                           tblptrh	equ	0xFF7
 16849                           tblptrl	equ	0xFF6
 16850                           tablat	equ	0xFF5
 16851                           prodh	equ	0xFF4
 16852                           prodl	equ	0xFF3
 16853                           intcon	equ	0xFF2
 16854                           postinc0	equ	0xFEE
 16855                           wreg	equ	0xFE8
 16856                           indf1	equ	0xFE7
 16857                           plusw1	equ	0xFE3
 16858                           fsr1h	equ	0xFE2
 16859                           fsr1l	equ	0xFE1
 16860                           indf2	equ	0xFDF
 16861                           postinc2	equ	0xFDE
 16862                           plusw2	equ	0xFDB
 16863                           fsr2h	equ	0xFDA
 16864                           fsr2l	equ	0xFD9
 16865                           status	equ	0xFD8
 16866                           
 16867 ;; *************** function _F1_Button_Polling *****************
 16868 ;; Defined at:
 16869 ;;		line 665 in file "RemoteCan.c"
 16870 ;; Parameters:    Size  Location     Type
 16871 ;;		None
 16872 ;; Auto vars:     Size  Location     Type
 16873 ;;		None
 16874 ;; Return value:  Size  Location     Type
 16875 ;;                  1    wreg      void 
 16876 ;; Registers used:
 16877 ;;		None
 16878 ;; Tracked objects:
 16879 ;;		On entry : 0/0
 16880 ;;		On exit  : 0/0
 16881 ;;		Unchanged: 0/0
 16882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16887 ;;Total ram usage:        0 bytes
 16888 ;; Hardware stack levels used:    1
 16889 ;; Hardware stack levels required when called:    3
 16890 ;; This function calls:
 16891 ;;		Nothing
 16892 ;; This function is called by:
 16893 ;;		_main
 16894 ;; This function uses a non-reentrant model
 16895 ;;
 16896                           
 16897                           	psect	text41
 16898  016860                     __ptext41:
 16899                           	opt stack 0
 16900  016860                     _F1_Button_Polling:
 16901                           	opt stack 27
 16902                           
 16903                           ;RemoteCan.c: 666: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 16904                           
 16905                           ;incstack = 0
 16906  016860  A881               	btfss	3969,4,c	;volatile
 16907  016862  D002               	goto	l961
 16908  016864  B64A               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16909  016866  0012               	return	
 16910  016868                     l961:
 16911                           
 16912                           ;RemoteCan.c: 667: wait_low_2 = 0;
 16913  016868  964A               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16914                           
 16915                           ;RemoteCan.c: 668: if (PORTBbits.RB4 == 1) {
 16916  01686A  A881               	btfss	3969,4,c	;volatile
 16917  01686C  0012               	return	
 16918                           
 16919                           ;RemoteCan.c: 669: F1_switch = ~F1_switch;
 16920  01686E  B248               	btfsc	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16921  016870  D002               	goto	u9260
 16922  016872  8248               	bsf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16923  016874  D001               	goto	u9275
 16924  016876                     u9260:
 16925  016876  9248               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16926  016878                     u9275:
 16927                           
 16928                           ;RemoteCan.c: 670: wait_low_2 = 1;
 16929  016878  864A               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16930  01687A  0012               	return	
 16931  01687C                     __end_of_F1_Button_Polling:
 16932                           	opt stack 0
 16933                           tblptru	equ	0xFF8
 16934                           tblptrh	equ	0xFF7
 16935                           tblptrl	equ	0xFF6
 16936                           tablat	equ	0xFF5
 16937                           prodh	equ	0xFF4
 16938                           prodl	equ	0xFF3
 16939                           intcon	equ	0xFF2
 16940                           postinc0	equ	0xFEE
 16941                           wreg	equ	0xFE8
 16942                           indf1	equ	0xFE7
 16943                           plusw1	equ	0xFE3
 16944                           fsr1h	equ	0xFE2
 16945                           fsr1l	equ	0xFE1
 16946                           indf2	equ	0xFDF
 16947                           postinc2	equ	0xFDE
 16948                           plusw2	equ	0xFDB
 16949                           fsr2h	equ	0xFDA
 16950                           fsr2l	equ	0xFD9
 16951                           status	equ	0xFD8
 16952                           
 16953 ;; *************** function _Credits *****************
 16954 ;; Defined at:
 16955 ;;		line 642 in file "RemoteCan.c"
 16956 ;; Parameters:    Size  Location     Type
 16957 ;;		None
 16958 ;; Auto vars:     Size  Location     Type
 16959 ;;		None
 16960 ;; Return value:  Size  Location     Type
 16961 ;;                  1    wreg      void 
 16962 ;; Registers used:
 16963 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16964 ;; Tracked objects:
 16965 ;;		On entry : 0/0
 16966 ;;		On exit  : 0/0
 16967 ;;		Unchanged: 0/0
 16968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16973 ;;Total ram usage:        0 bytes
 16974 ;; Hardware stack levels used:    1
 16975 ;; Hardware stack levels required when called:    9
 16976 ;; This function calls:
 16977 ;;		_LCD_clear
 16978 ;;		_LCD_goto_line
 16979 ;;		_LCD_initialize
 16980 ;;		_LCD_write_message
 16981 ;; This function is called by:
 16982 ;;		_main
 16983 ;; This function uses a non-reentrant model
 16984 ;;
 16985                           
 16986                           	psect	text42
 16987  0163A2                     __ptext42:
 16988                           	opt stack 0
 16989  0163A2                     _Credits:
 16990                           	opt stack 21
 16991                           
 16992                           ;RemoteCan.c: 643: LCD_initialize(16);
 16993                           
 16994                           ;incstack = 0
 16995  0163A2  0E10               	movlw	16
 16996  0163A4  EC1D  F0AC         	call	_LCD_initialize
 16997                           
 16998                           ;RemoteCan.c: 644: LCD_clear();
 16999  0163A8  EC93  F0B3         	call	_LCD_clear	;wreg free
 17000                           
 17001                           ;RemoteCan.c: 645: LCD_goto_line(1);
 17002  0163AC  0E01               	movlw	1
 17003  0163AE  EC5A  F0AD         	call	_LCD_goto_line
 17004                           
 17005                           ;RemoteCan.c: 646: LCD_write_message("=>    CREDITS!    <=");
 17006  0163B2  0E2B               	movlw	low STR_43
 17007  0163B4  0100               	movlb	0	; () banked
 17008  0163B6  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 17009  0163B8  0EFF               	movlw	high STR_43
 17010  0163BA  0100               	movlb	0	; () banked
 17011  0163BC  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 17012  0163BE  EC60  F0B3         	call	_LCD_write_message	;wreg free
 17013                           
 17014                           ;RemoteCan.c: 647: LCD_goto_line(2);
 17015  0163C2  0E02               	movlw	2
 17016  0163C4  EC5A  F0AD         	call	_LCD_goto_line
 17017                           
 17018                           ;RemoteCan.c: 648: LCD_write_message("  Massimo Clementi  ");
 17019  0163C8  0E05               	movlw	low STR_44
 17020  0163CA  0100               	movlb	0	; () banked
 17021  0163CC  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 17022  0163CE  0EFE               	movlw	high STR_44
 17023  0163D0  0100               	movlb	0	; () banked
 17024  0163D2  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 17025  0163D4  EC60  F0B3         	call	_LCD_write_message	;wreg free
 17026                           
 17027                           ;RemoteCan.c: 649: LCD_goto_line(3);
 17028  0163D8  0E03               	movlw	3
 17029  0163DA  EC5A  F0AD         	call	_LCD_goto_line
 17030                           
 17031                           ;RemoteCan.c: 650: LCD_write_message("  Gianlorenzo Moser ");
 17032  0163DE  0E83               	movlw	low STR_45
 17033  0163E0  0100               	movlb	0	; () banked
 17034  0163E2  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 17035  0163E4  0EFE               	movlw	high STR_45
 17036  0163E6  0100               	movlb	0	; () banked
 17037  0163E8  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 17038  0163EA  EC60  F0B3         	call	_LCD_write_message	;wreg free
 17039                           
 17040                           ;RemoteCan.c: 651: LCD_goto_line(4);
 17041  0163EE  0E04               	movlw	4
 17042  0163F0  EC5A  F0AD         	call	_LCD_goto_line
 17043                           
 17044                           ;RemoteCan.c: 652: LCD_write_message("  Simone Righetti   ");
 17045  0163F4  0EF0               	movlw	low STR_46
 17046  0163F6  0100               	movlb	0	; () banked
 17047  0163F8  6F82               	movwf	LCD_write_message@buffer& (0+255),b
 17048  0163FA  0EFD               	movlw	high STR_46
 17049  0163FC  0100               	movlb	0	; () banked
 17050  0163FE  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 17051  016400  EC60  F0B3         	call	_LCD_write_message	;wreg free
 17052  016404  0012               	return		;funcret
 17053  016406                     __end_of_Credits:
 17054                           	opt stack 0
 17055                           tblptru	equ	0xFF8
 17056                           tblptrh	equ	0xFF7
 17057                           tblptrl	equ	0xFF6
 17058                           tablat	equ	0xFF5
 17059                           prodh	equ	0xFF4
 17060                           prodl	equ	0xFF3
 17061                           intcon	equ	0xFF2
 17062                           postinc0	equ	0xFEE
 17063                           wreg	equ	0xFE8
 17064                           indf1	equ	0xFE7
 17065                           plusw1	equ	0xFE3
 17066                           fsr1h	equ	0xFE2
 17067                           fsr1l	equ	0xFE1
 17068                           indf2	equ	0xFDF
 17069                           postinc2	equ	0xFDE
 17070                           plusw2	equ	0xFDB
 17071                           fsr2h	equ	0xFDA
 17072                           fsr2l	equ	0xFD9
 17073                           status	equ	0xFD8
 17074                           
 17075 ;; *************** function _LCD_write_message *****************
 17076 ;; Defined at:
 17077 ;;		line 178 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 17078 ;; Parameters:    Size  Location     Type
 17079 ;;  buffer          2   34[BANK0 ] PTR const unsigned char 
 17080 ;;		 -> STR_46(21), STR_45(21), STR_44(21), STR_43(21), 
 17081 ;;		 -> STR_42(21), STR_41(21), STR_40(21), STR_39(21), 
 17082 ;;		 -> STR_38(21), STR_37(21), STR_36(21), STR_35(21), 
 17083 ;;		 -> STR_34(21), STR_33(21), STR_32(21), STR_31(21), 
 17084 ;;		 -> STR_30(21), STR_29(21), STR_28(21), STR_27(21), 
 17085 ;;		 -> STR_26(21), STR_25(21), STR_24(21), STR_23(21), 
 17086 ;;		 -> STR_22(21), STR_21(21), STR_20(21), STR_19(21), 
 17087 ;;		 -> STR_18(8), STR_17(8), STR_16(14), STR_15(21), 
 17088 ;;		 -> STR_14(5), STR_13(5), STR_12(5), STR_11(21), 
 17089 ;;		 -> STR_10(7), STR_9(14), STR_8(17), STR_7(12), 
 17090 ;;		 -> STR_6(21), STR_4(21), STR_3(21), STR_2(21), 
 17091 ;;		 -> STR_1(21), 
 17092 ;; Auto vars:     Size  Location     Type
 17093 ;;		None
 17094 ;; Return value:  Size  Location     Type
 17095 ;;                  1    wreg      void 
 17096 ;; Registers used:
 17097 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17098 ;; Tracked objects:
 17099 ;;		On entry : 0/0
 17100 ;;		On exit  : 0/0
 17101 ;;		Unchanged: 0/0
 17102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17103 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17106 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17107 ;;Total ram usage:        2 bytes
 17108 ;; Hardware stack levels used:    1
 17109 ;; Hardware stack levels required when called:    8
 17110 ;; This function calls:
 17111 ;;		_LCD_write_char
 17112 ;; This function is called by:
 17113 ;;		_main
 17114 ;;		_LCD_Handler
 17115 ;;		_LCD_Gap
 17116 ;;		_LCD_Park
 17117 ;;		_LCD_Parking
 17118 ;;		_LCD_End
 17119 ;;		_LCD_Error
 17120 ;;		_Credits
 17121 ;; This function uses a non-reentrant model
 17122 ;;
 17123                           
 17124                           	psect	text43
 17125  0166C0                     __ptext43:
 17126                           	opt stack 0
 17127  0166C0                     _LCD_write_message:
 17128                           	opt stack 22
 17129                           
 17130                           ;src\LCD_44780.c: 181: while(*buffer) {
 17131                           
 17132                           ;incstack = 0
 17133  0166C0  D00D               	goto	l8997
 17134  0166C2                     l8993:
 17135                           
 17136                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 17137  0166C2  C082  FFF6         	movff	LCD_write_message@buffer,tblptrl
 17138  0166C6  C083  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 17139  0166CA                     	if	0	;tblptru may be non-zero
 17140  0166CA                     	endif
 17141  0166CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17142  0166CA  0E00               	movlw	low (__mediumconst shr (0+16))
 17143  0166CC  6EF8               	movwf	tblptru,c
 17144  0166CE                     	endif
 17145  0166CE  0008               	tblrd		*
 17146  0166D0  50F5               	movf	tablat,w,c
 17147  0166D2  EC39  F0B0         	call	_LCD_write_char
 17148                           
 17149                           ;src\LCD_44780.c: 186: buffer++;
 17150  0166D6  0100               	movlb	0	; () banked
 17151  0166D8  4B82               	infsnz	LCD_write_message@buffer& (0+255),f,b
 17152  0166DA  2B83               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 17153  0166DC                     l8997:
 17154  0166DC  C082  FFF6         	movff	LCD_write_message@buffer,tblptrl
 17155  0166E0  C083  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 17156  0166E4                     	if	0	;tblptru may be non-zero
 17157  0166E4                     	endif
 17158  0166E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17159  0166E4  0E00               	movlw	low (__mediumconst shr (0+16))
 17160  0166E6  6EF8               	movwf	tblptru,c
 17161  0166E8                     	endif
 17162  0166E8  0008               	tblrd		*
 17163  0166EA  50F5               	movf	tablat,w,c
 17164  0166EC  0900               	iorlw	0
 17165  0166EE  B4D8               	btfsc	status,2,c
 17166  0166F0  0012               	return	
 17167  0166F2  D7E7               	goto	l8993
 17168  0166F4                     __end_of_LCD_write_message:
 17169                           	opt stack 0
 17170                           tblptru	equ	0xFF8
 17171                           tblptrh	equ	0xFF7
 17172                           tblptrl	equ	0xFF6
 17173                           tablat	equ	0xFF5
 17174                           prodh	equ	0xFF4
 17175                           prodl	equ	0xFF3
 17176                           intcon	equ	0xFF2
 17177                           postinc0	equ	0xFEE
 17178                           wreg	equ	0xFE8
 17179                           indf1	equ	0xFE7
 17180                           plusw1	equ	0xFE3
 17181                           fsr1h	equ	0xFE2
 17182                           fsr1l	equ	0xFE1
 17183                           indf2	equ	0xFDF
 17184                           postinc2	equ	0xFDE
 17185                           plusw2	equ	0xFDB
 17186                           fsr2h	equ	0xFDA
 17187                           fsr2l	equ	0xFD9
 17188                           status	equ	0xFD8
 17189                           
 17190 ;; *************** function _LCD_write_char *****************
 17191 ;; Defined at:
 17192 ;;		line 145 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 17193 ;; Parameters:    Size  Location     Type
 17194 ;;  value           1    wreg     unsigned char 
 17195 ;; Auto vars:     Size  Location     Type
 17196 ;;  value           1   33[BANK0 ] unsigned char 
 17197 ;;  D0              1   32[BANK0 ] unsigned char 
 17198 ;;  D1              1   31[BANK0 ] unsigned char 
 17199 ;;  D2              1   30[BANK0 ] unsigned char 
 17200 ;;  D3              1   29[BANK0 ] unsigned char 
 17201 ;; Return value:  Size  Location     Type
 17202 ;;                  1    wreg      void 
 17203 ;; Registers used:
 17204 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17205 ;; Tracked objects:
 17206 ;;		On entry : 0/0
 17207 ;;		On exit  : 0/0
 17208 ;;		Unchanged: 0/0
 17209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17211 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17213 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17214 ;;Total ram usage:        5 bytes
 17215 ;; Hardware stack levels used:    1
 17216 ;; Hardware stack levels required when called:    7
 17217 ;; This function calls:
 17218 ;;		_LCD_send_command
 17219 ;; This function is called by:
 17220 ;;		_LCD_write_message
 17221 ;;		_LCD_write_string
 17222 ;; This function uses a non-reentrant model
 17223 ;;
 17224                           
 17225                           	psect	text44
 17226  016072                     __ptext44:
 17227                           	opt stack 0
 17228  016072                     _LCD_write_char:
 17229                           	opt stack 22
 17230                           
 17231                           ;incstack = 0
 17232                           ;LCD_write_char@value stored from wreg
 17233  016072  0100               	movlb	0	; () banked
 17234  016074  6F81               	movwf	LCD_write_char@value& (0+255),b
 17235                           
 17236                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 17237                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 17238  016076  848D               	bsf	3981,2,c	;volatile
 17239                           
 17240                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 17241  016078  0100               	movlb	0	; () banked
 17242  01607A  4581               	rlncf	LCD_write_char@value& (0+255),w,b
 17243  01607C  0B01               	andlw	1
 17244  01607E  0100               	movlb	0	; () banked
 17245  016080  6F7D               	movwf	LCD_write_char@D3& (0+255),b
 17246                           
 17247                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 17248  016082  0100               	movlb	0	; () banked
 17249  016084  4581               	rlncf	LCD_write_char@value& (0+255),w,b
 17250  016086  46E8               	rlncf	wreg,f,c
 17251  016088  0B03               	andlw	3
 17252  01608A  0B01               	andlw	1
 17253  01608C  0100               	movlb	0	; () banked
 17254  01608E  6F7E               	movwf	LCD_write_char@D2& (0+255),b
 17255                           
 17256                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 17257  016090  0100               	movlb	0	; () banked
 17258  016092  3981               	swapf	LCD_write_char@value& (0+255),w,b
 17259  016094  42E8               	rrncf	wreg,f,c
 17260  016096  0B07               	andlw	7
 17261  016098  0B01               	andlw	1
 17262  01609A  0100               	movlb	0	; () banked
 17263  01609C  6F7F               	movwf	LCD_write_char@D1& (0+255),b
 17264                           
 17265                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 17266  01609E  0100               	movlb	0	; () banked
 17267  0160A0  3981               	swapf	LCD_write_char@value& (0+255),w,b
 17268  0160A2  0B0F               	andlw	15
 17269  0160A4  0B01               	andlw	1
 17270  0160A6  0100               	movlb	0	; () banked
 17271  0160A8  6F80               	movwf	LCD_write_char@D0& (0+255),b
 17272                           
 17273                           ; BSR set to: 0
 17274                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 17275  0160AA  C07E  F079         	movff	LCD_write_char@D2,LCD_send_command@D2
 17276  0160AE  C07F  F07A         	movff	LCD_write_char@D1,LCD_send_command@D1
 17277  0160B2  C080  F07B         	movff	LCD_write_char@D0,LCD_send_command@D0
 17278  0160B6  0100               	movlb	0	; () banked
 17279  0160B8  517D               	movf	LCD_write_char@D3& (0+255),w,b
 17280  0160BA  ECEF  F0B2         	call	_LCD_send_command
 17281                           
 17282                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 17283  0160BE  0100               	movlb	0	; () banked
 17284  0160C0  3981               	swapf	LCD_write_char@value& (0+255),w,b
 17285  0160C2  46E8               	rlncf	wreg,f,c
 17286  0160C4  0B1F               	andlw	31
 17287  0160C6  0B01               	andlw	1
 17288  0160C8  0100               	movlb	0	; () banked
 17289  0160CA  6F7D               	movwf	LCD_write_char@D3& (0+255),b
 17290                           
 17291                           ; BSR set to: 0
 17292                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 17293  0160CC  0100               	movlb	0	; () banked
 17294  0160CE  4181               	rrncf	LCD_write_char@value& (0+255),w,b
 17295  0160D0  42E8               	rrncf	wreg,f,c
 17296  0160D2  0B3F               	andlw	63
 17297  0160D4  0B01               	andlw	1
 17298  0160D6  0100               	movlb	0	; () banked
 17299  0160D8  6F7E               	movwf	LCD_write_char@D2& (0+255),b
 17300                           
 17301                           ; BSR set to: 0
 17302                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 17303  0160DA  0100               	movlb	0	; () banked
 17304  0160DC  90D8               	bcf	status,0,c
 17305  0160DE  3181               	rrcf	LCD_write_char@value& (0+255),w,b
 17306  0160E0  0B01               	andlw	1
 17307  0160E2  0100               	movlb	0	; () banked
 17308  0160E4  6F7F               	movwf	LCD_write_char@D1& (0+255),b
 17309                           
 17310                           ; BSR set to: 0
 17311                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 17312  0160E6  0100               	movlb	0	; () banked
 17313  0160E8  5181               	movf	LCD_write_char@value& (0+255),w,b
 17314  0160EA  0B01               	andlw	1
 17315  0160EC  0100               	movlb	0	; () banked
 17316  0160EE  6F80               	movwf	LCD_write_char@D0& (0+255),b
 17317                           
 17318                           ; BSR set to: 0
 17319                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 17320  0160F0  C07E  F079         	movff	LCD_write_char@D2,LCD_send_command@D2
 17321  0160F4  C07F  F07A         	movff	LCD_write_char@D1,LCD_send_command@D1
 17322  0160F8  C080  F07B         	movff	LCD_write_char@D0,LCD_send_command@D0
 17323  0160FC  0100               	movlb	0	; () banked
 17324  0160FE  517D               	movf	LCD_write_char@D3& (0+255),w,b
 17325  016100  ECEF  F0B2         	call	_LCD_send_command
 17326                           
 17327                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 17328  016104  948D               	bcf	3981,2,c	;volatile
 17329  016106  0012               	return		;funcret
 17330  016108                     __end_of_LCD_write_char:
 17331                           	opt stack 0
 17332                           tblptru	equ	0xFF8
 17333                           tblptrh	equ	0xFF7
 17334                           tblptrl	equ	0xFF6
 17335                           tablat	equ	0xFF5
 17336                           prodh	equ	0xFF4
 17337                           prodl	equ	0xFF3
 17338                           intcon	equ	0xFF2
 17339                           postinc0	equ	0xFEE
 17340                           wreg	equ	0xFE8
 17341                           indf1	equ	0xFE7
 17342                           plusw1	equ	0xFE3
 17343                           fsr1h	equ	0xFE2
 17344                           fsr1l	equ	0xFE1
 17345                           indf2	equ	0xFDF
 17346                           postinc2	equ	0xFDE
 17347                           plusw2	equ	0xFDB
 17348                           fsr2h	equ	0xFDA
 17349                           fsr2l	equ	0xFD9
 17350                           status	equ	0xFD8
 17351                           
 17352 ;; *************** function _LCD_initialize *****************
 17353 ;; Defined at:
 17354 ;;		line 283 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 17355 ;; Parameters:    Size  Location     Type
 17356 ;;  quartz_frequ    1    wreg     unsigned char 
 17357 ;; Auto vars:     Size  Location     Type
 17358 ;;  quartz_frequ    1   31[BANK0 ] unsigned char 
 17359 ;; Return value:  Size  Location     Type
 17360 ;;                  1    wreg      void 
 17361 ;; Registers used:
 17362 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17363 ;; Tracked objects:
 17364 ;;		On entry : 0/0
 17365 ;;		On exit  : 0/0
 17366 ;;		Unchanged: 0/0
 17367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17369 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17371 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17372 ;;Total ram usage:        1 bytes
 17373 ;; Hardware stack levels used:    1
 17374 ;; Hardware stack levels required when called:    8
 17375 ;; This function calls:
 17376 ;;		_LCD_clear
 17377 ;;		_LCD_cursor
 17378 ;;		_LCD_send_command
 17379 ;;		_delay_ms
 17380 ;;		_delay_set_quartz
 17381 ;; This function is called by:
 17382 ;;		_main
 17383 ;;		_LCD_Handler
 17384 ;;		_LCD_Gap
 17385 ;;		_LCD_Park
 17386 ;;		_LCD_Parking
 17387 ;;		_LCD_End
 17388 ;;		_LCD_Error
 17389 ;;		_Credits
 17390 ;;		_board_initialization
 17391 ;; This function uses a non-reentrant model
 17392 ;;
 17393                           
 17394                           	psect	text45
 17395  01583A                     __ptext45:
 17396                           	opt stack 0
 17397  01583A                     _LCD_initialize:
 17398                           	opt stack 21
 17399                           
 17400                           ;incstack = 0
 17401                           ;LCD_initialize@quartz_frequency stored from wreg
 17402  01583A  0100               	movlb	0	; () banked
 17403  01583C  6F7F               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 17404                           
 17405                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 17406  01583E  0100               	movlb	0	; () banked
 17407  015840  517F               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 17408  015842  EC54  F0B4         	call	_delay_set_quartz
 17409                           
 17410                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 17411  015846  948D               	bcf	3981,2,c	;volatile
 17412                           
 17413                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 17414  015848  928B               	bcf	3979,1,c	;volatile
 17415                           
 17416                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 17417  01584A  908B               	bcf	3979,0,c	;volatile
 17418                           
 17419                           ;src\LCD_44780.c: 291: delay_ms (100);
 17420  01584C  0E00               	movlw	0
 17421  01584E  0100               	movlb	0	; () banked
 17422  015850  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 17423  015852  0E64               	movlw	100
 17424  015854  6F77               	movwf	delay_ms@value_ms& (0+255),b
 17425  015856  EC0C  F0B3         	call	_delay_ms	;wreg free
 17426                           
 17427                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 17428  01585A  0E00               	movlw	0
 17429  01585C  0100               	movlb	0	; () banked
 17430  01585E  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17431  015860  0E01               	movlw	1
 17432  015862  0100               	movlb	0	; () banked
 17433  015864  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17434  015866  0E01               	movlw	1
 17435  015868  0100               	movlb	0	; () banked
 17436  01586A  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17437  01586C  0E00               	movlw	0
 17438  01586E  ECEF  F0B2         	call	_LCD_send_command
 17439                           
 17440                           ;src\LCD_44780.c: 293: delay_ms (100);
 17441  015872  0E00               	movlw	0
 17442  015874  0100               	movlb	0	; () banked
 17443  015876  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 17444  015878  0E64               	movlw	100
 17445  01587A  6F77               	movwf	delay_ms@value_ms& (0+255),b
 17446  01587C  EC0C  F0B3         	call	_delay_ms	;wreg free
 17447                           
 17448                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 17449  015880  0E00               	movlw	0
 17450  015882  0100               	movlb	0	; () banked
 17451  015884  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17452  015886  0E01               	movlw	1
 17453  015888  0100               	movlb	0	; () banked
 17454  01588A  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17455  01588C  0E01               	movlw	1
 17456  01588E  0100               	movlb	0	; () banked
 17457  015890  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17458  015892  0E00               	movlw	0
 17459  015894  ECEF  F0B2         	call	_LCD_send_command
 17460                           
 17461                           ;src\LCD_44780.c: 295: delay_ms (10);
 17462  015898  0E00               	movlw	0
 17463  01589A  0100               	movlb	0	; () banked
 17464  01589C  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 17465  01589E  0E0A               	movlw	10
 17466  0158A0  6F77               	movwf	delay_ms@value_ms& (0+255),b
 17467  0158A2  EC0C  F0B3         	call	_delay_ms	;wreg free
 17468                           
 17469                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 17470  0158A6  0E00               	movlw	0
 17471  0158A8  0100               	movlb	0	; () banked
 17472  0158AA  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17473  0158AC  0E01               	movlw	1
 17474  0158AE  0100               	movlb	0	; () banked
 17475  0158B0  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17476  0158B2  0E01               	movlw	1
 17477  0158B4  0100               	movlb	0	; () banked
 17478  0158B6  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17479  0158B8  0E00               	movlw	0
 17480  0158BA  ECEF  F0B2         	call	_LCD_send_command
 17481                           
 17482                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 17483  0158BE  0E00               	movlw	0
 17484  0158C0  0100               	movlb	0	; () banked
 17485  0158C2  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17486  0158C4  0E01               	movlw	1
 17487  0158C6  0100               	movlb	0	; () banked
 17488  0158C8  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17489  0158CA  0E00               	movlw	0
 17490  0158CC  0100               	movlb	0	; () banked
 17491  0158CE  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17492  0158D0  0E00               	movlw	0
 17493  0158D2  ECEF  F0B2         	call	_LCD_send_command
 17494                           
 17495                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 17496  0158D6  0E00               	movlw	0
 17497  0158D8  0100               	movlb	0	; () banked
 17498  0158DA  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17499  0158DC  0E01               	movlw	1
 17500  0158DE  0100               	movlb	0	; () banked
 17501  0158E0  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17502  0158E2  0E00               	movlw	0
 17503  0158E4  0100               	movlb	0	; () banked
 17504  0158E6  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17505  0158E8  0E00               	movlw	0
 17506  0158EA  ECEF  F0B2         	call	_LCD_send_command
 17507                           
 17508                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 17509  0158EE  0E00               	movlw	0
 17510  0158F0  0100               	movlb	0	; () banked
 17511  0158F2  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17512  0158F4  0E00               	movlw	0
 17513  0158F6  0100               	movlb	0	; () banked
 17514  0158F8  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17515  0158FA  0E00               	movlw	0
 17516  0158FC  0100               	movlb	0	; () banked
 17517  0158FE  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17518  015900  0E01               	movlw	1
 17519  015902  ECEF  F0B2         	call	_LCD_send_command
 17520                           
 17521                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 17522  015906  0E00               	movlw	0
 17523  015908  0100               	movlb	0	; () banked
 17524  01590A  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17525  01590C  0E00               	movlw	0
 17526  01590E  0100               	movlb	0	; () banked
 17527  015910  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17528  015912  0E00               	movlw	0
 17529  015914  0100               	movlb	0	; () banked
 17530  015916  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17531  015918  0E00               	movlw	0
 17532  01591A  ECEF  F0B2         	call	_LCD_send_command
 17533                           
 17534                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 17535  01591E  0E00               	movlw	0
 17536  015920  0100               	movlb	0	; () banked
 17537  015922  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17538  015924  0E00               	movlw	0
 17539  015926  0100               	movlb	0	; () banked
 17540  015928  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17541  01592A  0E00               	movlw	0
 17542  01592C  0100               	movlb	0	; () banked
 17543  01592E  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17544  015930  0E01               	movlw	1
 17545  015932  ECEF  F0B2         	call	_LCD_send_command
 17546                           
 17547                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 17548  015936  0E00               	movlw	0
 17549  015938  0100               	movlb	0	; () banked
 17550  01593A  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17551  01593C  0E00               	movlw	0
 17552  01593E  0100               	movlb	0	; () banked
 17553  015940  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17554  015942  0E00               	movlw	0
 17555  015944  0100               	movlb	0	; () banked
 17556  015946  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17557  015948  0E00               	movlw	0
 17558  01594A  ECEF  F0B2         	call	_LCD_send_command
 17559                           
 17560                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 17561  01594E  0E00               	movlw	0
 17562  015950  0100               	movlb	0	; () banked
 17563  015952  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17564  015954  0E00               	movlw	0
 17565  015956  0100               	movlb	0	; () banked
 17566  015958  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17567  01595A  0E01               	movlw	1
 17568  01595C  0100               	movlb	0	; () banked
 17569  01595E  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17570  015960  0E00               	movlw	0
 17571  015962  ECEF  F0B2         	call	_LCD_send_command
 17572                           
 17573                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 17574  015966  0E00               	movlw	0
 17575  015968  0100               	movlb	0	; () banked
 17576  01596A  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17577  01596C  0E00               	movlw	0
 17578  01596E  0100               	movlb	0	; () banked
 17579  015970  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17580  015972  0E00               	movlw	0
 17581  015974  0100               	movlb	0	; () banked
 17582  015976  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17583  015978  0E00               	movlw	0
 17584  01597A  ECEF  F0B2         	call	_LCD_send_command
 17585                           
 17586                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 17587  01597E  0E01               	movlw	1
 17588  015980  0100               	movlb	0	; () banked
 17589  015982  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17590  015984  0E01               	movlw	1
 17591  015986  0100               	movlb	0	; () banked
 17592  015988  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17593  01598A  0E00               	movlw	0
 17594  01598C  0100               	movlb	0	; () banked
 17595  01598E  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17596  015990  0E00               	movlw	0
 17597  015992  ECEF  F0B2         	call	_LCD_send_command
 17598                           
 17599                           ;src\LCD_44780.c: 312: LCD_clear ();
 17600  015996  EC93  F0B3         	call	_LCD_clear	;wreg free
 17601                           
 17602                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 17603  01599A  0E00               	movlw	0
 17604  01599C  0100               	movlb	0	; () banked
 17605  01599E  6F7D               	movwf	LCD_cursor@blinking& (0+255),b
 17606  0159A0  0E00               	movlw	0
 17607  0159A2  EC7A  F0B3         	call	_LCD_cursor
 17608  0159A6  0012               	return		;funcret
 17609  0159A8                     __end_of_LCD_initialize:
 17610                           	opt stack 0
 17611                           tblptru	equ	0xFF8
 17612                           tblptrh	equ	0xFF7
 17613                           tblptrl	equ	0xFF6
 17614                           tablat	equ	0xFF5
 17615                           prodh	equ	0xFF4
 17616                           prodl	equ	0xFF3
 17617                           intcon	equ	0xFF2
 17618                           postinc0	equ	0xFEE
 17619                           wreg	equ	0xFE8
 17620                           indf1	equ	0xFE7
 17621                           plusw1	equ	0xFE3
 17622                           fsr1h	equ	0xFE2
 17623                           fsr1l	equ	0xFE1
 17624                           indf2	equ	0xFDF
 17625                           postinc2	equ	0xFDE
 17626                           plusw2	equ	0xFDB
 17627                           fsr2h	equ	0xFDA
 17628                           fsr2l	equ	0xFD9
 17629                           status	equ	0xFD8
 17630                           
 17631 ;; *************** function _delay_set_quartz *****************
 17632 ;; Defined at:
 17633 ;;		line 115 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 17634 ;; Parameters:    Size  Location     Type
 17635 ;;  frequency       1    wreg     unsigned char 
 17636 ;; Auto vars:     Size  Location     Type
 17637 ;;  frequency       1   17[BANK0 ] unsigned char 
 17638 ;; Return value:  Size  Location     Type
 17639 ;;                  1    wreg      void 
 17640 ;; Registers used:
 17641 ;;		wreg
 17642 ;; Tracked objects:
 17643 ;;		On entry : 0/0
 17644 ;;		On exit  : 0/0
 17645 ;;		Unchanged: 0/0
 17646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17648 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17650 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17651 ;;Total ram usage:        1 bytes
 17652 ;; Hardware stack levels used:    1
 17653 ;; Hardware stack levels required when called:    3
 17654 ;; This function calls:
 17655 ;;		Nothing
 17656 ;; This function is called by:
 17657 ;;		_LCD_initialize
 17658 ;; This function uses a non-reentrant model
 17659 ;;
 17660                           
 17661                           	psect	text46
 17662  0168A8                     __ptext46:
 17663                           	opt stack 0
 17664  0168A8                     _delay_set_quartz:
 17665                           	opt stack 25
 17666                           
 17667                           ;incstack = 0
 17668                           ;delay_set_quartz@frequency stored from wreg
 17669  0168A8  0100               	movlb	0	; () banked
 17670  0168AA  6F71               	movwf	delay_set_quartz@frequency& (0+255),b
 17671                           
 17672                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 17673  0168AC  C071  F0EC         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 17674  0168B0  0012               	return		;funcret
 17675  0168B2                     __end_of_delay_set_quartz:
 17676                           	opt stack 0
 17677                           tblptru	equ	0xFF8
 17678                           tblptrh	equ	0xFF7
 17679                           tblptrl	equ	0xFF6
 17680                           tablat	equ	0xFF5
 17681                           prodh	equ	0xFF4
 17682                           prodl	equ	0xFF3
 17683                           intcon	equ	0xFF2
 17684                           postinc0	equ	0xFEE
 17685                           wreg	equ	0xFE8
 17686                           indf1	equ	0xFE7
 17687                           plusw1	equ	0xFE3
 17688                           fsr1h	equ	0xFE2
 17689                           fsr1l	equ	0xFE1
 17690                           indf2	equ	0xFDF
 17691                           postinc2	equ	0xFDE
 17692                           plusw2	equ	0xFDB
 17693                           fsr2h	equ	0xFDA
 17694                           fsr2l	equ	0xFD9
 17695                           status	equ	0xFD8
 17696                           
 17697 ;; *************** function _LCD_cursor *****************
 17698 ;; Defined at:
 17699 ;;		line 266 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 17700 ;; Parameters:    Size  Location     Type
 17701 ;;  active          1    wreg     unsigned char 
 17702 ;;  blinking        1   29[BANK0 ] unsigned char 
 17703 ;; Auto vars:     Size  Location     Type
 17704 ;;  active          1   30[BANK0 ] unsigned char 
 17705 ;; Return value:  Size  Location     Type
 17706 ;;                  1    wreg      void 
 17707 ;; Registers used:
 17708 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17709 ;; Tracked objects:
 17710 ;;		On entry : 0/0
 17711 ;;		On exit  : 0/0
 17712 ;;		Unchanged: 0/0
 17713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17714 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17715 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17717 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17718 ;;Total ram usage:        2 bytes
 17719 ;; Hardware stack levels used:    1
 17720 ;; Hardware stack levels required when called:    7
 17721 ;; This function calls:
 17722 ;;		_LCD_send_command
 17723 ;; This function is called by:
 17724 ;;		_LCD_initialize
 17725 ;; This function uses a non-reentrant model
 17726 ;;
 17727                           
 17728                           	psect	text47
 17729  0166F4                     __ptext47:
 17730                           	opt stack 0
 17731  0166F4                     _LCD_cursor:
 17732                           	opt stack 21
 17733                           
 17734                           ;incstack = 0
 17735                           ;LCD_cursor@active stored from wreg
 17736  0166F4  0100               	movlb	0	; () banked
 17737  0166F6  6F7E               	movwf	LCD_cursor@active& (0+255),b
 17738                           
 17739                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 17740  0166F8  0E00               	movlw	0
 17741  0166FA  0100               	movlb	0	; () banked
 17742  0166FC  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17743  0166FE  0E00               	movlw	0
 17744  016700  0100               	movlb	0	; () banked
 17745  016702  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17746  016704  0E00               	movlw	0
 17747  016706  0100               	movlb	0	; () banked
 17748  016708  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17749  01670A  0E00               	movlw	0
 17750  01670C  ECEF  F0B2         	call	_LCD_send_command
 17751                           
 17752                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 17753  016710  0E01               	movlw	1
 17754  016712  0100               	movlb	0	; () banked
 17755  016714  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17756  016716  C07E  F07A         	movff	LCD_cursor@active,LCD_send_command@D1
 17757  01671A  C07D  F07B         	movff	LCD_cursor@blinking,LCD_send_command@D0
 17758  01671E  0E01               	movlw	1
 17759  016720  ECEF  F0B2         	call	_LCD_send_command
 17760  016724  0012               	return		;funcret
 17761  016726                     __end_of_LCD_cursor:
 17762                           	opt stack 0
 17763                           tblptru	equ	0xFF8
 17764                           tblptrh	equ	0xFF7
 17765                           tblptrl	equ	0xFF6
 17766                           tablat	equ	0xFF5
 17767                           prodh	equ	0xFF4
 17768                           prodl	equ	0xFF3
 17769                           intcon	equ	0xFF2
 17770                           postinc0	equ	0xFEE
 17771                           wreg	equ	0xFE8
 17772                           indf1	equ	0xFE7
 17773                           plusw1	equ	0xFE3
 17774                           fsr1h	equ	0xFE2
 17775                           fsr1l	equ	0xFE1
 17776                           indf2	equ	0xFDF
 17777                           postinc2	equ	0xFDE
 17778                           plusw2	equ	0xFDB
 17779                           fsr2h	equ	0xFDA
 17780                           fsr2l	equ	0xFD9
 17781                           status	equ	0xFD8
 17782                           
 17783 ;; *************** function _LCD_clear *****************
 17784 ;; Defined at:
 17785 ;;		line 257 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 17786 ;; Parameters:    Size  Location     Type
 17787 ;;		None
 17788 ;; Auto vars:     Size  Location     Type
 17789 ;;		None
 17790 ;; Return value:  Size  Location     Type
 17791 ;;                  1    wreg      void 
 17792 ;; Registers used:
 17793 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17794 ;; Tracked objects:
 17795 ;;		On entry : 0/0
 17796 ;;		On exit  : 0/0
 17797 ;;		Unchanged: 0/0
 17798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17803 ;;Total ram usage:        0 bytes
 17804 ;; Hardware stack levels used:    1
 17805 ;; Hardware stack levels required when called:    7
 17806 ;; This function calls:
 17807 ;;		_LCD_send_command
 17808 ;; This function is called by:
 17809 ;;		_LCD_initialize
 17810 ;;		_LCD_Handler
 17811 ;;		_LCD_Gap
 17812 ;;		_LCD_Park
 17813 ;;		_LCD_Parking
 17814 ;;		_LCD_End
 17815 ;;		_LCD_Error
 17816 ;;		_Credits
 17817 ;;		_board_initialization
 17818 ;; This function uses a non-reentrant model
 17819 ;;
 17820                           
 17821                           	psect	text48
 17822  016726                     __ptext48:
 17823                           	opt stack 0
 17824  016726                     _LCD_clear:
 17825                           	opt stack 21
 17826                           
 17827                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 17828                           
 17829                           ;incstack = 0
 17830  016726  0E00               	movlw	0
 17831  016728  0100               	movlb	0	; () banked
 17832  01672A  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17833  01672C  0E00               	movlw	0
 17834  01672E  0100               	movlb	0	; () banked
 17835  016730  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17836  016732  0E00               	movlw	0
 17837  016734  0100               	movlb	0	; () banked
 17838  016736  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17839  016738  0E00               	movlw	0
 17840  01673A  ECEF  F0B2         	call	_LCD_send_command
 17841                           
 17842                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 17843  01673E  0E00               	movlw	0
 17844  016740  0100               	movlb	0	; () banked
 17845  016742  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17846  016744  0E00               	movlw	0
 17847  016746  0100               	movlb	0	; () banked
 17848  016748  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17849  01674A  0E01               	movlw	1
 17850  01674C  0100               	movlb	0	; () banked
 17851  01674E  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17852  016750  0E00               	movlw	0
 17853  016752  ECEF  F0B2         	call	_LCD_send_command
 17854  016756  0012               	return		;funcret
 17855  016758                     __end_of_LCD_clear:
 17856                           	opt stack 0
 17857                           tblptru	equ	0xFF8
 17858                           tblptrh	equ	0xFF7
 17859                           tblptrl	equ	0xFF6
 17860                           tablat	equ	0xFF5
 17861                           prodh	equ	0xFF4
 17862                           prodl	equ	0xFF3
 17863                           intcon	equ	0xFF2
 17864                           postinc0	equ	0xFEE
 17865                           wreg	equ	0xFE8
 17866                           indf1	equ	0xFE7
 17867                           plusw1	equ	0xFE3
 17868                           fsr1h	equ	0xFE2
 17869                           fsr1l	equ	0xFE1
 17870                           indf2	equ	0xFDF
 17871                           postinc2	equ	0xFDE
 17872                           plusw2	equ	0xFDB
 17873                           fsr2h	equ	0xFDA
 17874                           fsr2l	equ	0xFD9
 17875                           status	equ	0xFD8
 17876                           
 17877 ;; *************** function _LCD_goto_line *****************
 17878 ;; Defined at:
 17879 ;;		line 111 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 17880 ;; Parameters:    Size  Location     Type
 17881 ;;  line            1    wreg     unsigned char 
 17882 ;; Auto vars:     Size  Location     Type
 17883 ;;  line            1   29[BANK0 ] unsigned char 
 17884 ;; Return value:  Size  Location     Type
 17885 ;;                  1    wreg      void 
 17886 ;; Registers used:
 17887 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17888 ;; Tracked objects:
 17889 ;;		On entry : 0/0
 17890 ;;		On exit  : 0/0
 17891 ;;		Unchanged: 0/0
 17892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17894 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17896 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17897 ;;Total ram usage:        1 bytes
 17898 ;; Hardware stack levels used:    1
 17899 ;; Hardware stack levels required when called:    7
 17900 ;; This function calls:
 17901 ;;		_LCD_send_command
 17902 ;; This function is called by:
 17903 ;;		_LCD_goto_xy
 17904 ;;		_main
 17905 ;;		_LCD_Handler
 17906 ;;		_LCD_Gap
 17907 ;;		_LCD_Park
 17908 ;;		_LCD_Parking
 17909 ;;		_LCD_End
 17910 ;;		_LCD_Error
 17911 ;;		_Credits
 17912 ;;		_board_initialization
 17913 ;; This function uses a non-reentrant model
 17914 ;;
 17915                           
 17916                           	psect	text49
 17917  015AB4                     __ptext49:
 17918                           	opt stack 0
 17919  015AB4                     _LCD_goto_line:
 17920                           	opt stack 22
 17921                           
 17922                           ;incstack = 0
 17923                           ;LCD_goto_line@line stored from wreg
 17924  015AB4  0100               	movlb	0	; () banked
 17925  015AB6  6F7D               	movwf	LCD_goto_line@line& (0+255),b
 17926                           
 17927                           ;src\LCD_44780.c: 113: switch(line) {
 17928  015AB8  D064               	goto	l8627
 17929  015ABA                     l8619:
 17930  015ABA  0E00               	movlw	0
 17931  015ABC  0100               	movlb	0	; () banked
 17932  015ABE  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17933  015AC0  0E00               	movlw	0
 17934  015AC2  0100               	movlb	0	; () banked
 17935  015AC4  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17936  015AC6  0E00               	movlw	0
 17937  015AC8  0100               	movlb	0	; () banked
 17938  015ACA  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17939  015ACC  0E01               	movlw	1
 17940  015ACE  ECEF  F0B2         	call	_LCD_send_command
 17941                           
 17942                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 17943  015AD2  0E00               	movlw	0
 17944  015AD4  0100               	movlb	0	; () banked
 17945  015AD6  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17946  015AD8  0E00               	movlw	0
 17947  015ADA  0100               	movlb	0	; () banked
 17948  015ADC  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17949  015ADE  0E00               	movlw	0
 17950  015AE0  0100               	movlb	0	; () banked
 17951  015AE2  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17952  015AE4  0E00               	movlw	0
 17953  015AE6  ECEF  F0B2         	call	_LCD_send_command
 17954                           
 17955                           ;src\LCD_44780.c: 117: break;
 17956  015AEA  0012               	return	
 17957  015AEC                     l8621:
 17958  015AEC  0E01               	movlw	1
 17959  015AEE  0100               	movlb	0	; () banked
 17960  015AF0  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17961  015AF2  0E00               	movlw	0
 17962  015AF4  0100               	movlb	0	; () banked
 17963  015AF6  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17964  015AF8  0E00               	movlw	0
 17965  015AFA  0100               	movlb	0	; () banked
 17966  015AFC  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17967  015AFE  0E01               	movlw	1
 17968  015B00  ECEF  F0B2         	call	_LCD_send_command
 17969                           
 17970                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 17971  015B04  0E00               	movlw	0
 17972  015B06  0100               	movlb	0	; () banked
 17973  015B08  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17974  015B0A  0E00               	movlw	0
 17975  015B0C  0100               	movlb	0	; () banked
 17976  015B0E  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17977  015B10  0E00               	movlw	0
 17978  015B12  0100               	movlb	0	; () banked
 17979  015B14  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17980  015B16  0E00               	movlw	0
 17981  015B18  ECEF  F0B2         	call	_LCD_send_command
 17982                           
 17983                           ;src\LCD_44780.c: 121: break;
 17984  015B1C  0012               	return	
 17985  015B1E                     l8623:
 17986  015B1E  0E00               	movlw	0
 17987  015B20  0100               	movlb	0	; () banked
 17988  015B22  6F79               	movwf	LCD_send_command@D2& (0+255),b
 17989  015B24  0E00               	movlw	0
 17990  015B26  0100               	movlb	0	; () banked
 17991  015B28  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 17992  015B2A  0E01               	movlw	1
 17993  015B2C  0100               	movlb	0	; () banked
 17994  015B2E  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 17995  015B30  0E01               	movlw	1
 17996  015B32  ECEF  F0B2         	call	_LCD_send_command
 17997                           
 17998                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 17999  015B36  0E01               	movlw	1
 18000  015B38  0100               	movlb	0	; () banked
 18001  015B3A  6F79               	movwf	LCD_send_command@D2& (0+255),b
 18002  015B3C  0E00               	movlw	0
 18003  015B3E  0100               	movlb	0	; () banked
 18004  015B40  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 18005  015B42  0E00               	movlw	0
 18006  015B44  0100               	movlb	0	; () banked
 18007  015B46  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 18008  015B48  0E00               	movlw	0
 18009  015B4A  ECEF  F0B2         	call	_LCD_send_command
 18010                           
 18011                           ;src\LCD_44780.c: 125: break;
 18012  015B4E  0012               	return	
 18013  015B50                     l8625:
 18014  015B50  0E01               	movlw	1
 18015  015B52  0100               	movlb	0	; () banked
 18016  015B54  6F79               	movwf	LCD_send_command@D2& (0+255),b
 18017  015B56  0E00               	movlw	0
 18018  015B58  0100               	movlb	0	; () banked
 18019  015B5A  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 18020  015B5C  0E01               	movlw	1
 18021  015B5E  0100               	movlb	0	; () banked
 18022  015B60  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 18023  015B62  0E01               	movlw	1
 18024  015B64  ECEF  F0B2         	call	_LCD_send_command
 18025                           
 18026                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 18027  015B68  0E01               	movlw	1
 18028  015B6A  0100               	movlb	0	; () banked
 18029  015B6C  6F79               	movwf	LCD_send_command@D2& (0+255),b
 18030  015B6E  0E00               	movlw	0
 18031  015B70  0100               	movlb	0	; () banked
 18032  015B72  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 18033  015B74  0E00               	movlw	0
 18034  015B76  0100               	movlb	0	; () banked
 18035  015B78  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 18036  015B7A  0E00               	movlw	0
 18037  015B7C  ECEF  F0B2         	call	_LCD_send_command
 18038                           
 18039                           ;src\LCD_44780.c: 129: }
 18040  015B80  0012               	return	
 18041  015B82                     l8627:
 18042  015B82  0100               	movlb	0	; () banked
 18043  015B84  517D               	movf	LCD_goto_line@line& (0+255),w,b
 18044                           
 18045                           ; Switch size 1, requested type "space"
 18046                           ; Number of cases is 4, Range of values is 1 to 4
 18047                           ; switch strategies available:
 18048                           ; Name         Instructions Cycles
 18049                           ; simple_byte           13     7 (average)
 18050                           ;	Chosen strategy is simple_byte
 18051  015B86  0A01               	xorlw	1	; case 1
 18052  015B88  B4D8               	btfsc	status,2,c
 18053  015B8A  D797               	goto	l8619
 18054  015B8C  0A03               	xorlw	3	; case 2
 18055  015B8E  B4D8               	btfsc	status,2,c
 18056  015B90  D7AD               	goto	l8621
 18057  015B92  0A01               	xorlw	1	; case 3
 18058  015B94  B4D8               	btfsc	status,2,c
 18059  015B96  D7C3               	goto	l8623
 18060  015B98  0A07               	xorlw	7	; case 4
 18061  015B9A  A4D8               	btfss	status,2,c
 18062  015B9C  0012               	return	
 18063  015B9E  D7D8               	goto	l8625
 18064  015BA0                     __end_of_LCD_goto_line:
 18065                           	opt stack 0
 18066                           tblptru	equ	0xFF8
 18067                           tblptrh	equ	0xFF7
 18068                           tblptrl	equ	0xFF6
 18069                           tablat	equ	0xFF5
 18070                           prodh	equ	0xFF4
 18071                           prodl	equ	0xFF3
 18072                           intcon	equ	0xFF2
 18073                           postinc0	equ	0xFEE
 18074                           wreg	equ	0xFE8
 18075                           indf1	equ	0xFE7
 18076                           plusw1	equ	0xFE3
 18077                           fsr1h	equ	0xFE2
 18078                           fsr1l	equ	0xFE1
 18079                           indf2	equ	0xFDF
 18080                           postinc2	equ	0xFDE
 18081                           plusw2	equ	0xFDB
 18082                           fsr2h	equ	0xFDA
 18083                           fsr2l	equ	0xFD9
 18084                           status	equ	0xFD8
 18085                           
 18086 ;; *************** function _LCD_send_command *****************
 18087 ;; Defined at:
 18088 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 18089 ;; Parameters:    Size  Location     Type
 18090 ;;  D3              1    wreg     unsigned char 
 18091 ;;  D2              1   25[BANK0 ] unsigned char 
 18092 ;;  D1              1   26[BANK0 ] unsigned char 
 18093 ;;  D0              1   27[BANK0 ] unsigned char 
 18094 ;; Auto vars:     Size  Location     Type
 18095 ;;  D3              1   28[BANK0 ] unsigned char 
 18096 ;; Return value:  Size  Location     Type
 18097 ;;                  1    wreg      void 
 18098 ;; Registers used:
 18099 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18100 ;; Tracked objects:
 18101 ;;		On entry : 0/0
 18102 ;;		On exit  : 0/0
 18103 ;;		Unchanged: 0/0
 18104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18105 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18106 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18108 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18109 ;;Total ram usage:        4 bytes
 18110 ;; Hardware stack levels used:    1
 18111 ;; Hardware stack levels required when called:    6
 18112 ;; This function calls:
 18113 ;;		_LCD_enable_pulse
 18114 ;; This function is called by:
 18115 ;;		_LCD_shift_cursor
 18116 ;;		_LCD_goto_line
 18117 ;;		_LCD_write_char
 18118 ;;		_LCD_clear
 18119 ;;		_LCD_cursor
 18120 ;;		_LCD_initialize
 18121 ;;		_LCD_home
 18122 ;;		_LCD_shift
 18123 ;; This function uses a non-reentrant model
 18124 ;;
 18125                           
 18126                           	psect	text50
 18127  0165DE                     __ptext50:
 18128                           	opt stack 0
 18129  0165DE                     _LCD_send_command:
 18130                           	opt stack 22
 18131                           
 18132                           ;incstack = 0
 18133                           ;LCD_send_command@D3 stored from wreg
 18134  0165DE  0100               	movlb	0	; () banked
 18135  0165E0  6F7C               	movwf	LCD_send_command@D3& (0+255),b
 18136                           
 18137                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 18138  0165E2  0100               	movlb	0	; () banked
 18139  0165E4  B17B               	btfsc	LCD_send_command@D0& (0+255),0,b
 18140  0165E6  D002               	bra	u10805
 18141  0165E8  948B               	bcf	3979,2,c	;volatile
 18142  0165EA  D001               	bra	u10806
 18143  0165EC                     u10805:
 18144  0165EC  848B               	bsf	3979,2,c	;volatile
 18145  0165EE                     u10806:
 18146                           
 18147                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 18148  0165EE  0100               	movlb	0	; () banked
 18149  0165F0  B17A               	btfsc	LCD_send_command@D1& (0+255),0,b
 18150  0165F2  D002               	bra	u10815
 18151  0165F4  968B               	bcf	3979,3,c	;volatile
 18152  0165F6  D001               	bra	u10816
 18153  0165F8                     u10815:
 18154  0165F8  868B               	bsf	3979,3,c	;volatile
 18155  0165FA                     u10816:
 18156                           
 18157                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 18158  0165FA  0100               	movlb	0	; () banked
 18159  0165FC  B179               	btfsc	LCD_send_command@D2& (0+255),0,b
 18160  0165FE  D002               	bra	u10825
 18161  016600  908C               	bcf	3980,0,c	;volatile
 18162  016602  D001               	bra	u10826
 18163  016604                     u10825:
 18164  016604  808C               	bsf	3980,0,c	;volatile
 18165  016606                     u10826:
 18166                           
 18167                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 18168  016606  0100               	movlb	0	; () banked
 18169  016608  B17C               	btfsc	LCD_send_command@D3& (0+255),0,b
 18170  01660A  D002               	bra	u10835
 18171  01660C  928C               	bcf	3980,1,c	;volatile
 18172  01660E  D001               	bra	u10836
 18173  016610                     u10835:
 18174  016610  828C               	bsf	3980,1,c	;volatile
 18175  016612                     u10836:
 18176                           
 18177                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 18178  016612  ECE6  F0B3         	call	_LCD_enable_pulse	;wreg free
 18179  016616  0012               	return		;funcret
 18180  016618                     __end_of_LCD_send_command:
 18181                           	opt stack 0
 18182                           tblptru	equ	0xFF8
 18183                           tblptrh	equ	0xFF7
 18184                           tblptrl	equ	0xFF6
 18185                           tablat	equ	0xFF5
 18186                           prodh	equ	0xFF4
 18187                           prodl	equ	0xFF3
 18188                           intcon	equ	0xFF2
 18189                           postinc0	equ	0xFEE
 18190                           wreg	equ	0xFE8
 18191                           indf1	equ	0xFE7
 18192                           plusw1	equ	0xFE3
 18193                           fsr1h	equ	0xFE2
 18194                           fsr1l	equ	0xFE1
 18195                           indf2	equ	0xFDF
 18196                           postinc2	equ	0xFDE
 18197                           plusw2	equ	0xFDB
 18198                           fsr2h	equ	0xFDA
 18199                           fsr2l	equ	0xFD9
 18200                           status	equ	0xFD8
 18201                           
 18202 ;; *************** function _LCD_enable_pulse *****************
 18203 ;; Defined at:
 18204 ;;		line 49 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 18205 ;; Parameters:    Size  Location     Type
 18206 ;;		None
 18207 ;; Auto vars:     Size  Location     Type
 18208 ;;		None
 18209 ;; Return value:  Size  Location     Type
 18210 ;;                  1    wreg      void 
 18211 ;; Registers used:
 18212 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18213 ;; Tracked objects:
 18214 ;;		On entry : 0/0
 18215 ;;		On exit  : 0/0
 18216 ;;		Unchanged: 0/0
 18217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18222 ;;Total ram usage:        0 bytes
 18223 ;; Hardware stack levels used:    1
 18224 ;; Hardware stack levels required when called:    5
 18225 ;; This function calls:
 18226 ;;		_delay_ms
 18227 ;; This function is called by:
 18228 ;;		_LCD_send_command
 18229 ;; This function uses a non-reentrant model
 18230 ;;
 18231                           
 18232                           	psect	text51
 18233  0167CC                     __ptext51:
 18234                           	opt stack 0
 18235  0167CC                     _LCD_enable_pulse:
 18236                           	opt stack 22
 18237                           
 18238                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 18239                           
 18240                           ;incstack = 0
 18241  0167CC  828B               	bsf	3979,1,c	;volatile
 18242                           
 18243                           ;src\LCD_44780.c: 52: delay_ms (1);
 18244  0167CE  0E00               	movlw	0
 18245  0167D0  0100               	movlb	0	; () banked
 18246  0167D2  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 18247  0167D4  0E01               	movlw	1
 18248  0167D6  6F77               	movwf	delay_ms@value_ms& (0+255),b
 18249  0167D8  EC0C  F0B3         	call	_delay_ms	;wreg free
 18250                           
 18251                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 18252  0167DC  928B               	bcf	3979,1,c	;volatile
 18253                           
 18254                           ;src\LCD_44780.c: 54: delay_ms (1);
 18255  0167DE  0E00               	movlw	0
 18256  0167E0  0100               	movlb	0	; () banked
 18257  0167E2  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 18258  0167E4  0E01               	movlw	1
 18259  0167E6  6F77               	movwf	delay_ms@value_ms& (0+255),b
 18260  0167E8  EC0C  F0B3         	call	_delay_ms	;wreg free
 18261  0167EC  0012               	return		;funcret
 18262  0167EE                     __end_of_LCD_enable_pulse:
 18263                           	opt stack 0
 18264                           tblptru	equ	0xFF8
 18265                           tblptrh	equ	0xFF7
 18266                           tblptrl	equ	0xFF6
 18267                           tablat	equ	0xFF5
 18268                           prodh	equ	0xFF4
 18269                           prodl	equ	0xFF3
 18270                           intcon	equ	0xFF2
 18271                           postinc0	equ	0xFEE
 18272                           wreg	equ	0xFE8
 18273                           indf1	equ	0xFE7
 18274                           plusw1	equ	0xFE3
 18275                           fsr1h	equ	0xFE2
 18276                           fsr1l	equ	0xFE1
 18277                           indf2	equ	0xFDF
 18278                           postinc2	equ	0xFDE
 18279                           plusw2	equ	0xFDB
 18280                           fsr2h	equ	0xFDA
 18281                           fsr2l	equ	0xFD9
 18282                           status	equ	0xFD8
 18283                           
 18284 ;; *************** function _delay_ms *****************
 18285 ;; Defined at:
 18286 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 18287 ;; Parameters:    Size  Location     Type
 18288 ;;  value_ms        2   23[BANK0 ] unsigned int 
 18289 ;; Auto vars:     Size  Location     Type
 18290 ;;		None
 18291 ;; Return value:  Size  Location     Type
 18292 ;;                  1    wreg      void 
 18293 ;; Registers used:
 18294 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18295 ;; Tracked objects:
 18296 ;;		On entry : 0/0
 18297 ;;		On exit  : 0/0
 18298 ;;		Unchanged: 0/0
 18299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18300 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18303 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18304 ;;Total ram usage:        2 bytes
 18305 ;; Hardware stack levels used:    1
 18306 ;; Hardware stack levels required when called:    4
 18307 ;; This function calls:
 18308 ;;		___wmul
 18309 ;; This function is called by:
 18310 ;;		_LCD_enable_pulse
 18311 ;;		_LCD_initialize
 18312 ;;		_main
 18313 ;;		_delay_s
 18314 ;; This function uses a non-reentrant model
 18315 ;;
 18316                           
 18317                           	psect	text52
 18318  016618                     __ptext52:
 18319                           	opt stack 0
 18320  016618                     _delay_ms:
 18321                           	opt stack 26
 18322                           
 18323                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 18324                           
 18325                           ;incstack = 0
 18326  016618  C0EC  F071         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 18327  01661C  0100               	movlb	0	; () banked
 18328  01661E  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 18329  016620  C077  F073         	movff	delay_ms@value_ms,___wmul@multiplicand
 18330  016624  C078  F074         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 18331  016628  EC45  F0B3         	call	___wmul	;wreg free
 18332  01662C  C071  F0E1         	movff	?___wmul,_clock_counter_reference	;volatile
 18333  016630  C072  F0E2         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 18334                           
 18335                           ;src\delay.c: 75: while (clock_counter_reference) {
 18336  016634  D007               	goto	l591
 18337  016636                     l8163:
 18338                           
 18339                           ;src\delay.c: 85: _delay(240);
 18340  016636  0E50               	movlw	80
 18341  016638                     u13287:
 18342  016638  2EE8               	decfsz	wreg,f,c
 18343  01663A  D7FE               	goto	u13287
 18344                           
 18345                           ;src\delay.c: 88: clock_counter_reference--;
 18346  01663C  0100               	movlb	0	; () banked
 18347  01663E  07E1               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 18348  016640  A0D8               	btfss	status,0,c
 18349  016642  07E2               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 18350  016644                     l591:
 18351  016644  0100               	movlb	0	; () banked
 18352  016646  51E1               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 18353  016648  0100               	movlb	0	; () banked
 18354  01664A  11E2               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 18355  01664C  B4D8               	btfsc	status,2,c
 18356  01664E  0012               	return	
 18357  016650  D7F2               	goto	l8163
 18358  016652                     __end_of_delay_ms:
 18359                           	opt stack 0
 18360                           tblptru	equ	0xFF8
 18361                           tblptrh	equ	0xFF7
 18362                           tblptrl	equ	0xFF6
 18363                           tablat	equ	0xFF5
 18364                           prodh	equ	0xFF4
 18365                           prodl	equ	0xFF3
 18366                           intcon	equ	0xFF2
 18367                           postinc0	equ	0xFEE
 18368                           wreg	equ	0xFE8
 18369                           indf1	equ	0xFE7
 18370                           plusw1	equ	0xFE3
 18371                           fsr1h	equ	0xFE2
 18372                           fsr1l	equ	0xFE1
 18373                           indf2	equ	0xFDF
 18374                           postinc2	equ	0xFDE
 18375                           plusw2	equ	0xFDB
 18376                           fsr2h	equ	0xFDA
 18377                           fsr2l	equ	0xFD9
 18378                           status	equ	0xFD8
 18379                           
 18380 ;; *************** function ___wmul *****************
 18381 ;; Defined at:
 18382 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 18383 ;; Parameters:    Size  Location     Type
 18384 ;;  multiplier      2   17[BANK0 ] unsigned int 
 18385 ;;  multiplicand    2   19[BANK0 ] unsigned int 
 18386 ;; Auto vars:     Size  Location     Type
 18387 ;;  product         2   21[BANK0 ] unsigned int 
 18388 ;; Return value:  Size  Location     Type
 18389 ;;                  2   17[BANK0 ] unsigned int 
 18390 ;; Registers used:
 18391 ;;		wreg, status,2, status,0, prodl, prodh
 18392 ;; Tracked objects:
 18393 ;;		On entry : 0/0
 18394 ;;		On exit  : 0/0
 18395 ;;		Unchanged: 0/0
 18396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18397 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18398 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18400 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18401 ;;Total ram usage:        6 bytes
 18402 ;; Hardware stack levels used:    1
 18403 ;; Hardware stack levels required when called:    3
 18404 ;; This function calls:
 18405 ;;		Nothing
 18406 ;; This function is called by:
 18407 ;;		_delay_ms
 18408 ;;		_sprintf
 18409 ;; This function uses a non-reentrant model
 18410 ;;
 18411                           
 18412                           	psect	text53
 18413  01668A                     __ptext53:
 18414                           	opt stack 0
 18415  01668A                     ___wmul:
 18416                           	opt stack 26
 18417                           
 18418                           ; BSR set to: 0
 18419                           ;incstack = 0
 18420  01668A  0100               	movlb	0	; () banked
 18421  01668C  5171               	movf	___wmul@multiplier& (0+255),w,b
 18422  01668E  0100               	movlb	0	; () banked
 18423  016690  0373               	mulwf	___wmul@multiplicand& (0+255),b
 18424  016692  CFF3 F075          	movff	prodl,___wmul@product
 18425  016696  CFF4 F076          	movff	prodh,___wmul@product+1
 18426  01669A  0100               	movlb	0	; () banked
 18427  01669C  5171               	movf	___wmul@multiplier& (0+255),w,b
 18428  01669E  0100               	movlb	0	; () banked
 18429  0166A0  0374               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 18430  0166A2  50F3               	movf	prodl,w,c
 18431  0166A4  0100               	movlb	0	; () banked
 18432  0166A6  2776               	addwf	(___wmul@product+1)& (0+255),f,b
 18433  0166A8  0100               	movlb	0	; () banked
 18434  0166AA  5172               	movf	(___wmul@multiplier+1)& (0+255),w,b
 18435  0166AC  0100               	movlb	0	; () banked
 18436  0166AE  0373               	mulwf	___wmul@multiplicand& (0+255),b
 18437  0166B0  50F3               	movf	prodl,w,c
 18438  0166B2  0100               	movlb	0	; () banked
 18439  0166B4  2776               	addwf	(___wmul@product+1)& (0+255),f,b
 18440                           
 18441                           ; BSR set to: 0
 18442  0166B6  C075  F071         	movff	___wmul@product,?___wmul
 18443  0166BA  C076  F072         	movff	___wmul@product+1,?___wmul+1
 18444  0166BE  0012               	return	
 18445  0166C0                     __end_of___wmul:
 18446                           	opt stack 0
 18447                           tblptru	equ	0xFF8
 18448                           tblptrh	equ	0xFF7
 18449                           tblptrl	equ	0xFF6
 18450                           tablat	equ	0xFF5
 18451                           prodh	equ	0xFF4
 18452                           prodl	equ	0xFF3
 18453                           intcon	equ	0xFF2
 18454                           postinc0	equ	0xFEE
 18455                           wreg	equ	0xFE8
 18456                           indf1	equ	0xFE7
 18457                           plusw1	equ	0xFE3
 18458                           fsr1h	equ	0xFE2
 18459                           fsr1l	equ	0xFE1
 18460                           indf2	equ	0xFDF
 18461                           postinc2	equ	0xFDE
 18462                           plusw2	equ	0xFDB
 18463                           fsr2h	equ	0xFDA
 18464                           fsr2l	equ	0xFD9
 18465                           status	equ	0xFD8
 18466                           
 18467 ;; *************** function _CAN_Tx *****************
 18468 ;; Defined at:
 18469 ;;		line 694 in file "RemoteCan.c"
 18470 ;; Parameters:    Size  Location     Type
 18471 ;;		None
 18472 ;; Auto vars:     Size  Location     Type
 18473 ;;		None
 18474 ;; Return value:  Size  Location     Type
 18475 ;;                  1    wreg      void 
 18476 ;; Registers used:
 18477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18478 ;; Tracked objects:
 18479 ;;		On entry : 0/0
 18480 ;;		On exit  : 0/0
 18481 ;;		Unchanged: 0/0
 18482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18487 ;;Total ram usage:        0 bytes
 18488 ;; Hardware stack levels used:    1
 18489 ;; Hardware stack levels required when called:    4
 18490 ;; This function calls:
 18491 ;;		_CANisTxReady
 18492 ;;		_CANsendMessage
 18493 ;; This function is called by:
 18494 ;;		_main
 18495 ;; This function uses a non-reentrant model
 18496 ;;
 18497                           
 18498                           	psect	text54
 18499  015DD8                     __ptext54:
 18500                           	opt stack 0
 18501  015DD8                     _CAN_Tx:
 18502                           	opt stack 26
 18503  015DD8                     l7281:
 18504  015DD8  ECD4  F0B3         	call	_CANisTxReady	;wreg free
 18505  015DDC  06E8               	decf	wreg,f,c
 18506  015DDE  A4D8               	btfss	status,2,c
 18507  015DE0  D7FB               	goto	l7281
 18508                           
 18509                           ;RemoteCan.c: 697: CANsendMessage(0b00000000111, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 18510  015DE2  0E07               	movlw	7
 18511  015DE4  0100               	movlb	0	; () banked
 18512  015DE6  6F71               	movwf	CANsendMessage@identifier& (0+255),b
 18513  015DE8  0E00               	movlw	0
 18514  015DEA  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 18515  015DEC  0E00               	movlw	0
 18516  015DEE  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 18517  015DF0  0E00               	movlw	0
 18518  015DF2  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 18519  015DF4  0E3D               	movlw	low _data_steering
 18520  015DF6  0100               	movlb	0	; () banked
 18521  015DF8  6F75               	movwf	CANsendMessage@data& (0+255),b
 18522  015DFA  0E01               	movlw	high _data_steering
 18523  015DFC  0100               	movlb	0	; () banked
 18524  015DFE  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
 18525  015E00  0E08               	movlw	8
 18526  015E02  0100               	movlb	0	; () banked
 18527  015E04  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
 18528  015E06  0EBC               	movlw	188
 18529  015E08  0100               	movlb	0	; () banked
 18530  015E0A  6F78               	movwf	CANsendMessage@flags& (0+255),b
 18531  015E0C  ECAE  F08E         	call	_CANsendMessage	;wreg free
 18532                           
 18533                           ;RemoteCan.c: 700: data_speed[0] = set_speed;
 18534  015E10  C0E3  F135         	movff	_set_speed,_data_speed	;volatile
 18535                           
 18536                           ;RemoteCan.c: 701: data_speed[1] = (set_speed >> 8);
 18537  015E14  0100               	movlb	0	; () banked
 18538  015E16  51E4               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 18539  015E18  0101               	movlb	1	; () banked
 18540  015E1A  6F36               	movwf	(_data_speed+1)& (0+255),b
 18541                           
 18542                           ; BSR set to: 1
 18543                           ;RemoteCan.c: 702: data_speed[2] = dir;
 18544  015E1C  C0E7  F137         	movff	_dir,_data_speed+2	;volatile
 18545  015E20                     l7291:
 18546  015E20  ECD4  F0B3         	call	_CANisTxReady	;wreg free
 18547  015E24  06E8               	decf	wreg,f,c
 18548  015E26  A4D8               	btfss	status,2,c
 18549  015E28  D7FB               	goto	l7291
 18550                           
 18551                           ;RemoteCan.c: 704: CANsendMessage(0b00000000101, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 18552  015E2A  0E05               	movlw	5
 18553  015E2C  0100               	movlb	0	; () banked
 18554  015E2E  6F71               	movwf	CANsendMessage@identifier& (0+255),b
 18555  015E30  0E00               	movlw	0
 18556  015E32  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 18557  015E34  0E00               	movlw	0
 18558  015E36  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 18559  015E38  0E00               	movlw	0
 18560  015E3A  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 18561  015E3C  0E35               	movlw	low _data_speed
 18562  015E3E  0100               	movlb	0	; () banked
 18563  015E40  6F75               	movwf	CANsendMessage@data& (0+255),b
 18564  015E42  0E01               	movlw	high _data_speed
 18565  015E44  0100               	movlb	0	; () banked
 18566  015E46  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
 18567  015E48  0E08               	movlw	8
 18568  015E4A  0100               	movlb	0	; () banked
 18569  015E4C  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
 18570  015E4E  0EBC               	movlw	188
 18571  015E50  0100               	movlb	0	; () banked
 18572  015E52  6F78               	movwf	CANsendMessage@flags& (0+255),b
 18573  015E54  ECAE  F08E         	call	_CANsendMessage	;wreg free
 18574  015E58                     l7295:
 18575  015E58  ECD4  F0B3         	call	_CANisTxReady	;wreg free
 18576  015E5C  06E8               	decf	wreg,f,c
 18577  015E5E  A4D8               	btfss	status,2,c
 18578  015E60  D7FB               	goto	l7295
 18579                           
 18580                           ;RemoteCan.c: 708: CANsendMessage(0b00000000110, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 18581  015E62  0E06               	movlw	6
 18582  015E64  0100               	movlb	0	; () banked
 18583  015E66  6F71               	movwf	CANsendMessage@identifier& (0+255),b
 18584  015E68  0E00               	movlw	0
 18585  015E6A  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 18586  015E6C  0E00               	movlw	0
 18587  015E6E  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 18588  015E70  0E00               	movlw	0
 18589  015E72  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 18590  015E74  0E2D               	movlw	low _data_brake
 18591  015E76  0100               	movlb	0	; () banked
 18592  015E78  6F75               	movwf	CANsendMessage@data& (0+255),b
 18593  015E7A  0E01               	movlw	high _data_brake
 18594  015E7C  0100               	movlb	0	; () banked
 18595  015E7E  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
 18596  015E80  0E08               	movlw	8
 18597  015E82  0100               	movlb	0	; () banked
 18598  015E84  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
 18599  015E86  0EBC               	movlw	188
 18600  015E88  0100               	movlb	0	; () banked
 18601  015E8A  6F78               	movwf	CANsendMessage@flags& (0+255),b
 18602  015E8C  ECAE  F08E         	call	_CANsendMessage	;wreg free
 18603  015E90  0012               	return		;funcret
 18604  015E92                     __end_of_CAN_Tx:
 18605                           	opt stack 0
 18606                           tblptru	equ	0xFF8
 18607                           tblptrh	equ	0xFF7
 18608                           tblptrl	equ	0xFF6
 18609                           tablat	equ	0xFF5
 18610                           prodh	equ	0xFF4
 18611                           prodl	equ	0xFF3
 18612                           intcon	equ	0xFF2
 18613                           postinc0	equ	0xFEE
 18614                           wreg	equ	0xFE8
 18615                           indf1	equ	0xFE7
 18616                           plusw1	equ	0xFE3
 18617                           fsr1h	equ	0xFE2
 18618                           fsr1l	equ	0xFE1
 18619                           indf2	equ	0xFDF
 18620                           postinc2	equ	0xFDE
 18621                           plusw2	equ	0xFDB
 18622                           fsr2h	equ	0xFDA
 18623                           fsr2l	equ	0xFD9
 18624                           status	equ	0xFD8
 18625                           
 18626 ;; *************** function _CANsendMessage *****************
 18627 ;; Defined at:
 18628 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 18629 ;; Parameters:    Size  Location     Type
 18630 ;;  identifier      4   17[BANK0 ] unsigned long 
 18631 ;;  data            2   21[BANK0 ] PTR unsigned char 
 18632 ;;		 -> data_speed(8), park_assist_state(8), data_steering(8), data_brake(8), 
 18633 ;;		 -> data(8), 
 18634 ;;  dataLength      1   23[BANK0 ] unsigned char 
 18635 ;;  flags           1   24[BANK0 ] enum E16771
 18636 ;; Auto vars:     Size  Location     Type
 18637 ;;  tamp            4   29[BANK0 ] unsigned long 
 18638 ;; Return value:  Size  Location     Type
 18639 ;;                  1    wreg      void 
 18640 ;; Registers used:
 18641 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18642 ;; Tracked objects:
 18643 ;;		On entry : 0/0
 18644 ;;		On exit  : 0/0
 18645 ;;		Unchanged: 0/0
 18646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18647 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18648 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18649 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18650 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18651 ;;Total ram usage:       16 bytes
 18652 ;; Hardware stack levels used:    1
 18653 ;; Hardware stack levels required when called:    3
 18654 ;; This function calls:
 18655 ;;		Nothing
 18656 ;; This function is called by:
 18657 ;;		_main
 18658 ;;		_LCD_Handler
 18659 ;;		_CAN_Tx
 18660 ;; This function uses a non-reentrant model
 18661 ;;
 18662                           
 18663                           	psect	text55
 18664  011D5C                     __ptext55:
 18665                           	opt stack 0
 18666  011D5C                     _CANsendMessage:
 18667                           	opt stack 26
 18668                           
 18669                           ;inc\CANlib.h: 296: unsigned long tamp;
 18670                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 18671                           
 18672                           ;incstack = 0
 18673  011D5C  010F               	movlb	15	; () banked
 18674  011D5E  B740               	btfsc	64,3,b	;volatile
 18675  011D60  D13F               	goto	l385
 18676                           
 18677                           ; BSR set to: 15
 18678                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 18679  011D62  C077  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 18680                           
 18681                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 18682  011D66  0100               	movlb	0	; () banked
 18683  011D68  AD78               	btfss	CANsendMessage@flags& (0+255),6,b
 18684  011D6A  D003               	goto	l386
 18685                           
 18686                           ; BSR set to: 0
 18687                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 18688  011D6C  010F               	movlb	15	; () banked
 18689  011D6E  8D45               	bsf	69,6,b	;volatile
 18690  011D70  D002               	goto	l387
 18691  011D72                     l386:
 18692                           
 18693                           ; BSR set to: 0
 18694                           ;inc\CANlib.h: 302: else
 18695                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 18696  011D72  010F               	movlb	15	; () banked
 18697  011D74  9D45               	bcf	69,6,b	;volatile
 18698  011D76                     l387:
 18699                           
 18700                           ; BSR set to: 15
 18701                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 18702  011D76  0100               	movlb	0	; () banked
 18703  011D78  A778               	btfss	CANsendMessage@flags& (0+255),3,b
 18704  011D7A  D079               	goto	l388
 18705                           
 18706                           ; BSR set to: 0
 18707                           ;inc\CANlib.h: 306: {
 18708                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 18709  011D7C  0100               	movlb	0	; () banked
 18710  011D7E  5171               	movf	CANsendMessage@identifier& (0+255),w,b
 18711  011D80  0100               	movlb	0	; () banked
 18712  011D82  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18713  011D84  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18714  011D86  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18715  011D88  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18716                           
 18717                           ; BSR set to: 0
 18718                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 18719  011D8A  C07D  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 18720                           
 18721                           ; BSR set to: 0
 18722                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 18723  011D8E  0E00               	movlw	0
 18724  011D90  0100               	movlb	0	; () banked
 18725  011D92  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 18726  011D94  0100               	movlb	0	; () banked
 18727  011D96  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18728  011D98  0EFF               	movlw	255
 18729  011D9A  0100               	movlb	0	; () banked
 18730  011D9C  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18731  011D9E  0100               	movlb	0	; () banked
 18732  011DA0  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18733  011DA2  0E00               	movlw	0
 18734  011DA4  0100               	movlb	0	; () banked
 18735  011DA6  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18736  011DA8  0100               	movlb	0	; () banked
 18737  011DAA  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18738  011DAC  0E00               	movlw	0
 18739  011DAE  0100               	movlb	0	; () banked
 18740  011DB0  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18741  011DB2  0100               	movlb	0	; () banked
 18742  011DB4  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18743                           
 18744                           ; BSR set to: 0
 18745                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 18746  011DB6  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 18747  011DBA  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18748  011DBE  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18749  011DC2  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18750  011DC6  C07A  F079         	movff	??_CANsendMessage+1,??_CANsendMessage
 18751  011DCA  C07B  F07A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 18752  011DCE  C07C  F07B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 18753  011DD2  0100               	movlb	0	; () banked
 18754  011DD4  6B7C               	clrf	(??_CANsendMessage+3)& (0+255),b
 18755  011DD6  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18756  011DDA  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18757  011DDE  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18758  011DE2  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18759                           
 18760                           ; BSR set to: 0
 18761                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 18762  011DE6  C07D  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 18763                           
 18764                           ; BSR set to: 0
 18765                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 18766  011DEA  0E00               	movlw	0
 18767  011DEC  010F               	movlb	15	; () banked
 18768  011DEE  6F42               	movwf	66,b	;volatile
 18769                           
 18770                           ; BSR set to: 15
 18771                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 18772  011DF0  010F               	movlb	15	; () banked
 18773  011DF2  8742               	bsf	66,3,b	;volatile
 18774                           
 18775                           ; BSR set to: 15
 18776                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 18777  011DF4  0100               	movlb	0	; () banked
 18778  011DF6  A173               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 18779  011DF8  D002               	goto	l389
 18780                           
 18781                           ; BSR set to: 0
 18782                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 18783  011DFA  010F               	movlb	15	; () banked
 18784  011DFC  8142               	bsf	66,0,b	;volatile
 18785  011DFE                     l389:
 18786                           
 18787                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 18788  011DFE  0100               	movlb	0	; () banked
 18789  011E00  A373               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 18790  011E02  D002               	goto	l390
 18791                           
 18792                           ; BSR set to: 0
 18793                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 18794  011E04  010F               	movlb	15	; () banked
 18795  011E06  8342               	bsf	66,1,b	;volatile
 18796  011E08                     l390:
 18797                           
 18798                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 18799  011E08  0100               	movlb	0	; () banked
 18800  011E0A  A573               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 18801  011E0C  D002               	goto	l391
 18802                           
 18803                           ; BSR set to: 0
 18804                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 18805  011E0E  010F               	movlb	15	; () banked
 18806  011E10  8B42               	bsf	66,5,b	;volatile
 18807  011E12                     l391:
 18808                           
 18809                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 18810  011E12  0100               	movlb	0	; () banked
 18811  011E14  A773               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 18812  011E16  D002               	goto	l392
 18813                           
 18814                           ; BSR set to: 0
 18815                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 18816  011E18  010F               	movlb	15	; () banked
 18817  011E1A  8D42               	bsf	66,6,b	;volatile
 18818  011E1C                     l392:
 18819                           
 18820                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 18821  011E1C  0100               	movlb	0	; () banked
 18822  011E1E  A973               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 18823  011E20  D002               	goto	l6395
 18824                           
 18825                           ; BSR set to: 0
 18826                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 18827  011E22  010F               	movlb	15	; () banked
 18828  011E24  8F42               	bsf	66,7,b	;volatile
 18829  011E26                     l6395:
 18830                           
 18831                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 18832  011E26  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 18833  011E2A  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18834  011E2E  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18835  011E32  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18836  011E36  0E16               	movlw	22
 18837  011E38  D006               	goto	u7910
 18838  011E3A                     u7915:
 18839  011E3A  0100               	movlb	0	; () banked
 18840  011E3C  90D8               	bcf	status,0,c
 18841  011E3E  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18842  011E40  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18843  011E42  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18844  011E44  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 18845  011E46                     u7910:
 18846  011E46  2EE8               	decfsz	wreg,f,c
 18847  011E48  D7F8               	goto	u7915
 18848  011E4A  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18849  011E4E  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18850  011E52  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18851  011E56  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18852                           
 18853                           ; BSR set to: 0
 18854                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 18855  011E5A  0100               	movlb	0	; () banked
 18856  011E5C  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 18857  011E5E  0100               	movlb	0	; () banked
 18858  011E60  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18859  011E62  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18860  011E64  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18861  011E66  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18862                           
 18863                           ; BSR set to: 0
 18864                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 18865  011E68  C07D  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 18866                           
 18867                           ;inc\CANlib.h: 332: }
 18868  011E6C  D059               	goto	l6415
 18869  011E6E                     l388:
 18870                           
 18871                           ; BSR set to: 0
 18872                           ;inc\CANlib.h: 334: else
 18873                           ;inc\CANlib.h: 336: {
 18874                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 18875  011E6E  010F               	movlb	15	; () banked
 18876  011E70  9742               	bcf	66,3,b	;volatile
 18877                           
 18878                           ; BSR set to: 15
 18879                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 18880  011E72  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 18881  011E76  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18882  011E7A  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18883  011E7E  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18884  011E82  0E04               	movlw	4
 18885  011E84  D006               	goto	u7920
 18886  011E86                     u7925:
 18887  011E86  0100               	movlb	0	; () banked
 18888  011E88  90D8               	bcf	status,0,c
 18889  011E8A  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18890  011E8C  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18891  011E8E  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18892  011E90  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 18893  011E92                     u7920:
 18894  011E92  2EE8               	decfsz	wreg,f,c
 18895  011E94  D7F8               	goto	u7925
 18896  011E96  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18897  011E9A  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18898  011E9E  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18899  011EA2  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18900                           
 18901                           ; BSR set to: 0
 18902                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 18903  011EA6  0100               	movlb	0	; () banked
 18904  011EA8  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 18905  011EAA  0100               	movlb	0	; () banked
 18906  011EAC  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18907  011EAE  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18908  011EB0  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18909  011EB2  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18910                           
 18911                           ; BSR set to: 0
 18912                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 18913  011EB4  C07D  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 18914                           
 18915                           ; BSR set to: 0
 18916                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 18917  011EB8  0E07               	movlw	7
 18918  011EBA  0100               	movlb	0	; () banked
 18919  011EBC  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 18920  011EBE  0100               	movlb	0	; () banked
 18921  011EC0  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 18922  011EC2  0E00               	movlw	0
 18923  011EC4  0100               	movlb	0	; () banked
 18924  011EC6  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18925  011EC8  0100               	movlb	0	; () banked
 18926  011ECA  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18927  011ECC  0E00               	movlw	0
 18928  011ECE  0100               	movlb	0	; () banked
 18929  011ED0  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18930  011ED2  0100               	movlb	0	; () banked
 18931  011ED4  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18932  011ED6  0E00               	movlw	0
 18933  011ED8  0100               	movlb	0	; () banked
 18934  011EDA  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18935  011EDC  0100               	movlb	0	; () banked
 18936  011EDE  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18937                           
 18938                           ; BSR set to: 0
 18939                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 18940  011EE0  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 18941  011EE4  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18942  011EE8  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18943  011EEC  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18944  011EF0  0E05               	movlw	5
 18945  011EF2                     u7935:
 18946  011EF2  90D8               	bcf	status,0,c
 18947  011EF4  0100               	movlb	0	; () banked
 18948  011EF6  3779               	rlcf	??_CANsendMessage& (0+255),f,b
 18949  011EF8  377A               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18950  011EFA  377B               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18951  011EFC  377C               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18952  011EFE  2EE8               	decfsz	wreg,f,c
 18953  011F00  D7F8               	goto	u7935
 18954  011F02  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 18955  011F06  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18956  011F0A  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18957  011F0E  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18958                           
 18959                           ; BSR set to: 0
 18960                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 18961  011F12  010F               	movlb	15	; () banked
 18962  011F14  5142               	movf	66,w,b	;volatile
 18963  011F16  0B1F               	andlw	31
 18964  011F18  010F               	movlb	15	; () banked
 18965  011F1A  6F42               	movwf	66,b	;volatile
 18966                           
 18967                           ; BSR set to: 15
 18968                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 18969  011F1C  C07D  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 18970  011F20                     l6415:
 18971                           
 18972                           ;inc\CANlib.h: 347: }
 18973                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 18974  011F20  0100               	movlb	0	; () banked
 18975  011F22  A178               	btfss	CANsendMessage@flags& (0+255),0,b
 18976  011F24  D003               	goto	l395
 18977                           
 18978                           ; BSR set to: 0
 18979                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 18980  011F26  010F               	movlb	15	; () banked
 18981  011F28  8140               	bsf	64,0,b	;volatile
 18982  011F2A  D002               	goto	l396
 18983  011F2C                     l395:
 18984                           
 18985                           ; BSR set to: 0
 18986                           ;inc\CANlib.h: 351: else
 18987                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 18988  011F2C  010F               	movlb	15	; () banked
 18989  011F2E  9140               	bcf	64,0,b	;volatile
 18990  011F30                     l396:
 18991                           
 18992                           ; BSR set to: 15
 18993                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 18994  011F30  0100               	movlb	0	; () banked
 18995  011F32  A378               	btfss	CANsendMessage@flags& (0+255),1,b
 18996  011F34  D003               	goto	l397
 18997                           
 18998                           ; BSR set to: 0
 18999                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 19000  011F36  010F               	movlb	15	; () banked
 19001  011F38  8340               	bsf	64,1,b	;volatile
 19002  011F3A  D002               	goto	l6421
 19003  011F3C                     l397:
 19004                           
 19005                           ; BSR set to: 0
 19006                           ;inc\CANlib.h: 355: else
 19007                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 19008  011F3C  010F               	movlb	15	; () banked
 19009  011F3E  9340               	bcf	64,1,b	;volatile
 19010  011F40                     l6421:
 19011                           
 19012                           ; BSR set to: 15
 19013                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 19014  011F40  C075  FFD9         	movff	CANsendMessage@data,fsr2l
 19015  011F44  C076  FFDA         	movff	CANsendMessage@data+1,fsr2h
 19016  011F48  50DF               	movf	indf2,w,c
 19017  011F4A  010F               	movlb	15	; () banked
 19018  011F4C  6F46               	movwf	70,b	;volatile
 19019                           
 19020                           ; BSR set to: 15
 19021                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 19022  011F4E  0100               	movlb	0	; () banked
 19023  011F50  EE20 F001          	lfsr	2,1
 19024  011F54  5175               	movf	CANsendMessage@data& (0+255),w,b
 19025  011F56  26D9               	addwf	fsr2l,f,c
 19026  011F58  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19027  011F5A  22DA               	addwfc	fsr2h,f,c
 19028  011F5C  50DF               	movf	indf2,w,c
 19029  011F5E  010F               	movlb	15	; () banked
 19030  011F60  6F47               	movwf	71,b	;volatile
 19031                           
 19032                           ; BSR set to: 15
 19033                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 19034  011F62  0100               	movlb	0	; () banked
 19035  011F64  EE20 F002          	lfsr	2,2
 19036  011F68  5175               	movf	CANsendMessage@data& (0+255),w,b
 19037  011F6A  26D9               	addwf	fsr2l,f,c
 19038  011F6C  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19039  011F6E  22DA               	addwfc	fsr2h,f,c
 19040  011F70  50DF               	movf	indf2,w,c
 19041  011F72  010F               	movlb	15	; () banked
 19042  011F74  6F48               	movwf	72,b	;volatile
 19043                           
 19044                           ; BSR set to: 15
 19045                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 19046  011F76  0100               	movlb	0	; () banked
 19047  011F78  EE20 F003          	lfsr	2,3
 19048  011F7C  5175               	movf	CANsendMessage@data& (0+255),w,b
 19049  011F7E  26D9               	addwf	fsr2l,f,c
 19050  011F80  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19051  011F82  22DA               	addwfc	fsr2h,f,c
 19052  011F84  50DF               	movf	indf2,w,c
 19053  011F86  010F               	movlb	15	; () banked
 19054  011F88  6F49               	movwf	73,b	;volatile
 19055                           
 19056                           ; BSR set to: 15
 19057                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 19058  011F8A  0100               	movlb	0	; () banked
 19059  011F8C  EE20 F004          	lfsr	2,4
 19060  011F90  5175               	movf	CANsendMessage@data& (0+255),w,b
 19061  011F92  26D9               	addwf	fsr2l,f,c
 19062  011F94  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19063  011F96  22DA               	addwfc	fsr2h,f,c
 19064  011F98  50DF               	movf	indf2,w,c
 19065  011F9A  010F               	movlb	15	; () banked
 19066  011F9C  6F4A               	movwf	74,b	;volatile
 19067                           
 19068                           ; BSR set to: 15
 19069                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 19070  011F9E  0100               	movlb	0	; () banked
 19071  011FA0  EE20 F005          	lfsr	2,5
 19072  011FA4  5175               	movf	CANsendMessage@data& (0+255),w,b
 19073  011FA6  26D9               	addwf	fsr2l,f,c
 19074  011FA8  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19075  011FAA  22DA               	addwfc	fsr2h,f,c
 19076  011FAC  50DF               	movf	indf2,w,c
 19077  011FAE  010F               	movlb	15	; () banked
 19078  011FB0  6F4B               	movwf	75,b	;volatile
 19079                           
 19080                           ; BSR set to: 15
 19081                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 19082  011FB2  0100               	movlb	0	; () banked
 19083  011FB4  EE20 F006          	lfsr	2,6
 19084  011FB8  5175               	movf	CANsendMessage@data& (0+255),w,b
 19085  011FBA  26D9               	addwf	fsr2l,f,c
 19086  011FBC  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19087  011FBE  22DA               	addwfc	fsr2h,f,c
 19088  011FC0  50DF               	movf	indf2,w,c
 19089  011FC2  010F               	movlb	15	; () banked
 19090  011FC4  6F4C               	movwf	76,b	;volatile
 19091                           
 19092                           ; BSR set to: 15
 19093                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 19094  011FC6  0100               	movlb	0	; () banked
 19095  011FC8  EE20 F007          	lfsr	2,7
 19096  011FCC  5175               	movf	CANsendMessage@data& (0+255),w,b
 19097  011FCE  26D9               	addwf	fsr2l,f,c
 19098  011FD0  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19099  011FD2  22DA               	addwfc	fsr2h,f,c
 19100  011FD4  50DF               	movf	indf2,w,c
 19101  011FD6  010F               	movlb	15	; () banked
 19102  011FD8  6F4D               	movwf	77,b	;volatile
 19103                           
 19104                           ; BSR set to: 15
 19105                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 19106  011FDA  010F               	movlb	15	; () banked
 19107  011FDC  8740               	bsf	64,3,b	;volatile
 19108                           
 19109                           ; BSR set to: 15
 19110                           ;inc\CANlib.h: 368: return;
 19111  011FDE  0012               	return	
 19112  011FE0                     l385:
 19113                           
 19114                           ; BSR set to: 15
 19115                           ;inc\CANlib.h: 369: }
 19116                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 19117  011FE0  010F               	movlb	15	; () banked
 19118  011FE2  B730               	btfsc	48,3,b	;volatile
 19119  011FE4  D13F               	goto	l400
 19120                           
 19121                           ; BSR set to: 15
 19122                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 19123  011FE6  C077  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 19124                           
 19125                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 19126  011FEA  0100               	movlb	0	; () banked
 19127  011FEC  AD78               	btfss	CANsendMessage@flags& (0+255),6,b
 19128  011FEE  D003               	goto	l401
 19129                           
 19130                           ; BSR set to: 0
 19131                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 19132  011FF0  010F               	movlb	15	; () banked
 19133  011FF2  8D35               	bsf	53,6,b	;volatile
 19134  011FF4  D002               	goto	l402
 19135  011FF6                     l401:
 19136                           
 19137                           ; BSR set to: 0
 19138                           ;inc\CANlib.h: 378: else
 19139                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 19140  011FF6  010F               	movlb	15	; () banked
 19141  011FF8  9D35               	bcf	53,6,b	;volatile
 19142  011FFA                     l402:
 19143                           
 19144                           ; BSR set to: 15
 19145                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 19146  011FFA  0100               	movlb	0	; () banked
 19147  011FFC  A778               	btfss	CANsendMessage@flags& (0+255),3,b
 19148  011FFE  D079               	goto	l403
 19149                           
 19150                           ; BSR set to: 0
 19151                           ;inc\CANlib.h: 382: {
 19152                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 19153  012000  0100               	movlb	0	; () banked
 19154  012002  5171               	movf	CANsendMessage@identifier& (0+255),w,b
 19155  012004  0100               	movlb	0	; () banked
 19156  012006  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19157  012008  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 19158  01200A  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 19159  01200C  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 19160                           
 19161                           ; BSR set to: 0
 19162                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 19163  01200E  C07D  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 19164                           
 19165                           ; BSR set to: 0
 19166                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 19167  012012  0E00               	movlw	0
 19168  012014  0100               	movlb	0	; () banked
 19169  012016  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 19170  012018  0100               	movlb	0	; () banked
 19171  01201A  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19172  01201C  0EFF               	movlw	255
 19173  01201E  0100               	movlb	0	; () banked
 19174  012020  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 19175  012022  0100               	movlb	0	; () banked
 19176  012024  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 19177  012026  0E00               	movlw	0
 19178  012028  0100               	movlb	0	; () banked
 19179  01202A  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 19180  01202C  0100               	movlb	0	; () banked
 19181  01202E  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 19182  012030  0E00               	movlw	0
 19183  012032  0100               	movlb	0	; () banked
 19184  012034  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 19185  012036  0100               	movlb	0	; () banked
 19186  012038  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 19187                           
 19188                           ; BSR set to: 0
 19189                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 19190  01203A  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 19191  01203E  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 19192  012042  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 19193  012046  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 19194  01204A  C07A  F079         	movff	??_CANsendMessage+1,??_CANsendMessage
 19195  01204E  C07B  F07A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 19196  012052  C07C  F07B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 19197  012056  0100               	movlb	0	; () banked
 19198  012058  6B7C               	clrf	(??_CANsendMessage+3)& (0+255),b
 19199  01205A  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 19200  01205E  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 19201  012062  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 19202  012066  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 19203                           
 19204                           ; BSR set to: 0
 19205                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 19206  01206A  C07D  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 19207                           
 19208                           ; BSR set to: 0
 19209                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 19210  01206E  0E00               	movlw	0
 19211  012070  010F               	movlb	15	; () banked
 19212  012072  6F32               	movwf	50,b	;volatile
 19213                           
 19214                           ; BSR set to: 15
 19215                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 19216  012074  010F               	movlb	15	; () banked
 19217  012076  8732               	bsf	50,3,b	;volatile
 19218                           
 19219                           ; BSR set to: 15
 19220                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 19221  012078  0100               	movlb	0	; () banked
 19222  01207A  A173               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 19223  01207C  D002               	goto	l404
 19224                           
 19225                           ; BSR set to: 0
 19226                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 19227  01207E  010F               	movlb	15	; () banked
 19228  012080  8132               	bsf	50,0,b	;volatile
 19229  012082                     l404:
 19230                           
 19231                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 19232  012082  0100               	movlb	0	; () banked
 19233  012084  A373               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 19234  012086  D002               	goto	l405
 19235                           
 19236                           ; BSR set to: 0
 19237                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 19238  012088  010F               	movlb	15	; () banked
 19239  01208A  8332               	bsf	50,1,b	;volatile
 19240  01208C                     l405:
 19241                           
 19242                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 19243  01208C  0100               	movlb	0	; () banked
 19244  01208E  A573               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 19245  012090  D002               	goto	l406
 19246                           
 19247                           ; BSR set to: 0
 19248                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 19249  012092  010F               	movlb	15	; () banked
 19250  012094  8B32               	bsf	50,5,b	;volatile
 19251  012096                     l406:
 19252                           
 19253                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 19254  012096  0100               	movlb	0	; () banked
 19255  012098  A773               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 19256  01209A  D002               	goto	l407
 19257                           
 19258                           ; BSR set to: 0
 19259                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 19260  01209C  010F               	movlb	15	; () banked
 19261  01209E  8D32               	bsf	50,6,b	;volatile
 19262  0120A0                     l407:
 19263                           
 19264                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 19265  0120A0  0100               	movlb	0	; () banked
 19266  0120A2  A973               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 19267  0120A4  D002               	goto	l6471
 19268                           
 19269                           ; BSR set to: 0
 19270                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 19271  0120A6  010F               	movlb	15	; () banked
 19272  0120A8  8F32               	bsf	50,7,b	;volatile
 19273  0120AA                     l6471:
 19274                           
 19275                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 19276  0120AA  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 19277  0120AE  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 19278  0120B2  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 19279  0120B6  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 19280  0120BA  0E16               	movlw	22
 19281  0120BC  D006               	goto	u8040
 19282  0120BE                     u8045:
 19283  0120BE  0100               	movlb	0	; () banked
 19284  0120C0  90D8               	bcf	status,0,c
 19285  0120C2  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 19286  0120C4  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 19287  0120C6  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 19288  0120C8  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 19289  0120CA                     u8040:
 19290  0120CA  2EE8               	decfsz	wreg,f,c
 19291  0120CC  D7F8               	goto	u8045
 19292  0120CE  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 19293  0120D2  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 19294  0120D6  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 19295  0120DA  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 19296                           
 19297                           ; BSR set to: 0
 19298                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 19299  0120DE  0100               	movlb	0	; () banked
 19300  0120E0  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 19301  0120E2  0100               	movlb	0	; () banked
 19302  0120E4  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19303  0120E6  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 19304  0120E8  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 19305  0120EA  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 19306                           
 19307                           ; BSR set to: 0
 19308                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 19309  0120EC  C07D  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 19310                           
 19311                           ;inc\CANlib.h: 407: }
 19312  0120F0  D059               	goto	l6491
 19313  0120F2                     l403:
 19314                           
 19315                           ; BSR set to: 0
 19316                           ;inc\CANlib.h: 409: else
 19317                           ;inc\CANlib.h: 411: {
 19318                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 19319  0120F2  010F               	movlb	15	; () banked
 19320  0120F4  9732               	bcf	50,3,b	;volatile
 19321                           
 19322                           ; BSR set to: 15
 19323                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 19324  0120F6  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 19325  0120FA  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 19326  0120FE  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 19327  012102  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 19328  012106  0E04               	movlw	4
 19329  012108  D006               	goto	u8050
 19330  01210A                     u8055:
 19331  01210A  0100               	movlb	0	; () banked
 19332  01210C  90D8               	bcf	status,0,c
 19333  01210E  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 19334  012110  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 19335  012112  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 19336  012114  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 19337  012116                     u8050:
 19338  012116  2EE8               	decfsz	wreg,f,c
 19339  012118  D7F8               	goto	u8055
 19340  01211A  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 19341  01211E  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 19342  012122  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 19343  012126  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 19344                           
 19345                           ; BSR set to: 0
 19346                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 19347  01212A  0100               	movlb	0	; () banked
 19348  01212C  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 19349  01212E  0100               	movlb	0	; () banked
 19350  012130  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19351  012132  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 19352  012134  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 19353  012136  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 19354                           
 19355                           ; BSR set to: 0
 19356                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 19357  012138  C07D  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 19358                           
 19359                           ; BSR set to: 0
 19360                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 19361  01213C  0E07               	movlw	7
 19362  01213E  0100               	movlb	0	; () banked
 19363  012140  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 19364  012142  0100               	movlb	0	; () banked
 19365  012144  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19366  012146  0E00               	movlw	0
 19367  012148  0100               	movlb	0	; () banked
 19368  01214A  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 19369  01214C  0100               	movlb	0	; () banked
 19370  01214E  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 19371  012150  0E00               	movlw	0
 19372  012152  0100               	movlb	0	; () banked
 19373  012154  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 19374  012156  0100               	movlb	0	; () banked
 19375  012158  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 19376  01215A  0E00               	movlw	0
 19377  01215C  0100               	movlb	0	; () banked
 19378  01215E  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 19379  012160  0100               	movlb	0	; () banked
 19380  012162  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 19381                           
 19382                           ; BSR set to: 0
 19383                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 19384  012164  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 19385  012168  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 19386  01216C  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 19387  012170  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 19388  012174  0E05               	movlw	5
 19389  012176                     u8065:
 19390  012176  90D8               	bcf	status,0,c
 19391  012178  0100               	movlb	0	; () banked
 19392  01217A  3779               	rlcf	??_CANsendMessage& (0+255),f,b
 19393  01217C  377A               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 19394  01217E  377B               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 19395  012180  377C               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 19396  012182  2EE8               	decfsz	wreg,f,c
 19397  012184  D7F8               	goto	u8065
 19398  012186  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 19399  01218A  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 19400  01218E  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 19401  012192  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 19402                           
 19403                           ; BSR set to: 0
 19404                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 19405  012196  010F               	movlb	15	; () banked
 19406  012198  5132               	movf	50,w,b	;volatile
 19407  01219A  0B1F               	andlw	31
 19408  01219C  010F               	movlb	15	; () banked
 19409  01219E  6F32               	movwf	50,b	;volatile
 19410                           
 19411                           ; BSR set to: 15
 19412                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 19413  0121A0  C07D  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 19414  0121A4                     l6491:
 19415                           
 19416                           ;inc\CANlib.h: 422: }
 19417                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 19418  0121A4  0100               	movlb	0	; () banked
 19419  0121A6  A178               	btfss	CANsendMessage@flags& (0+255),0,b
 19420  0121A8  D003               	goto	l410
 19421                           
 19422                           ; BSR set to: 0
 19423                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 19424  0121AA  010F               	movlb	15	; () banked
 19425  0121AC  8130               	bsf	48,0,b	;volatile
 19426  0121AE  D002               	goto	l411
 19427  0121B0                     l410:
 19428                           
 19429                           ; BSR set to: 0
 19430                           ;inc\CANlib.h: 426: else
 19431                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 19432  0121B0  010F               	movlb	15	; () banked
 19433  0121B2  9130               	bcf	48,0,b	;volatile
 19434  0121B4                     l411:
 19435                           
 19436                           ; BSR set to: 15
 19437                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 19438  0121B4  0100               	movlb	0	; () banked
 19439  0121B6  A378               	btfss	CANsendMessage@flags& (0+255),1,b
 19440  0121B8  D003               	goto	l412
 19441                           
 19442                           ; BSR set to: 0
 19443                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 19444  0121BA  010F               	movlb	15	; () banked
 19445  0121BC  8330               	bsf	48,1,b	;volatile
 19446  0121BE  D002               	goto	l6497
 19447  0121C0                     l412:
 19448                           
 19449                           ; BSR set to: 0
 19450                           ;inc\CANlib.h: 430: else
 19451                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 19452  0121C0  010F               	movlb	15	; () banked
 19453  0121C2  9330               	bcf	48,1,b	;volatile
 19454  0121C4                     l6497:
 19455                           
 19456                           ; BSR set to: 15
 19457                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 19458  0121C4  C075  FFD9         	movff	CANsendMessage@data,fsr2l
 19459  0121C8  C076  FFDA         	movff	CANsendMessage@data+1,fsr2h
 19460  0121CC  50DF               	movf	indf2,w,c
 19461  0121CE  010F               	movlb	15	; () banked
 19462  0121D0  6F36               	movwf	54,b	;volatile
 19463                           
 19464                           ; BSR set to: 15
 19465                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 19466  0121D2  0100               	movlb	0	; () banked
 19467  0121D4  EE20 F001          	lfsr	2,1
 19468  0121D8  5175               	movf	CANsendMessage@data& (0+255),w,b
 19469  0121DA  26D9               	addwf	fsr2l,f,c
 19470  0121DC  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19471  0121DE  22DA               	addwfc	fsr2h,f,c
 19472  0121E0  50DF               	movf	indf2,w,c
 19473  0121E2  010F               	movlb	15	; () banked
 19474  0121E4  6F37               	movwf	55,b	;volatile
 19475                           
 19476                           ; BSR set to: 15
 19477                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 19478  0121E6  0100               	movlb	0	; () banked
 19479  0121E8  EE20 F002          	lfsr	2,2
 19480  0121EC  5175               	movf	CANsendMessage@data& (0+255),w,b
 19481  0121EE  26D9               	addwf	fsr2l,f,c
 19482  0121F0  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19483  0121F2  22DA               	addwfc	fsr2h,f,c
 19484  0121F4  50DF               	movf	indf2,w,c
 19485  0121F6  010F               	movlb	15	; () banked
 19486  0121F8  6F38               	movwf	56,b	;volatile
 19487                           
 19488                           ; BSR set to: 15
 19489                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 19490  0121FA  0100               	movlb	0	; () banked
 19491  0121FC  EE20 F003          	lfsr	2,3
 19492  012200  5175               	movf	CANsendMessage@data& (0+255),w,b
 19493  012202  26D9               	addwf	fsr2l,f,c
 19494  012204  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19495  012206  22DA               	addwfc	fsr2h,f,c
 19496  012208  50DF               	movf	indf2,w,c
 19497  01220A  010F               	movlb	15	; () banked
 19498  01220C  6F39               	movwf	57,b	;volatile
 19499                           
 19500                           ; BSR set to: 15
 19501                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 19502  01220E  0100               	movlb	0	; () banked
 19503  012210  EE20 F004          	lfsr	2,4
 19504  012214  5175               	movf	CANsendMessage@data& (0+255),w,b
 19505  012216  26D9               	addwf	fsr2l,f,c
 19506  012218  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19507  01221A  22DA               	addwfc	fsr2h,f,c
 19508  01221C  50DF               	movf	indf2,w,c
 19509  01221E  010F               	movlb	15	; () banked
 19510  012220  6F3A               	movwf	58,b	;volatile
 19511                           
 19512                           ; BSR set to: 15
 19513                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 19514  012222  0100               	movlb	0	; () banked
 19515  012224  EE20 F005          	lfsr	2,5
 19516  012228  5175               	movf	CANsendMessage@data& (0+255),w,b
 19517  01222A  26D9               	addwf	fsr2l,f,c
 19518  01222C  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19519  01222E  22DA               	addwfc	fsr2h,f,c
 19520  012230  50DF               	movf	indf2,w,c
 19521  012232  010F               	movlb	15	; () banked
 19522  012234  6F3B               	movwf	59,b	;volatile
 19523                           
 19524                           ; BSR set to: 15
 19525                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 19526  012236  0100               	movlb	0	; () banked
 19527  012238  EE20 F006          	lfsr	2,6
 19528  01223C  5175               	movf	CANsendMessage@data& (0+255),w,b
 19529  01223E  26D9               	addwf	fsr2l,f,c
 19530  012240  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19531  012242  22DA               	addwfc	fsr2h,f,c
 19532  012244  50DF               	movf	indf2,w,c
 19533  012246  010F               	movlb	15	; () banked
 19534  012248  6F3C               	movwf	60,b	;volatile
 19535                           
 19536                           ; BSR set to: 15
 19537                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 19538  01224A  0100               	movlb	0	; () banked
 19539  01224C  EE20 F007          	lfsr	2,7
 19540  012250  5175               	movf	CANsendMessage@data& (0+255),w,b
 19541  012252  26D9               	addwf	fsr2l,f,c
 19542  012254  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19543  012256  22DA               	addwfc	fsr2h,f,c
 19544  012258  50DF               	movf	indf2,w,c
 19545  01225A  010F               	movlb	15	; () banked
 19546  01225C  6F3D               	movwf	61,b	;volatile
 19547                           
 19548                           ; BSR set to: 15
 19549                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 19550  01225E  010F               	movlb	15	; () banked
 19551  012260  8730               	bsf	48,3,b	;volatile
 19552                           
 19553                           ; BSR set to: 15
 19554                           ;inc\CANlib.h: 444: return;
 19555  012262  0012               	return	
 19556  012264                     l400:
 19557                           
 19558                           ; BSR set to: 15
 19559                           ;inc\CANlib.h: 445: }
 19560                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 19561  012264  010F               	movlb	15	; () banked
 19562  012266  B720               	btfsc	32,3,b	;volatile
 19563  012268  0012               	return	
 19564                           
 19565                           ; BSR set to: 15
 19566                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 19567  01226A  C077  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 19568                           
 19569                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 19570  01226E  0100               	movlb	0	; () banked
 19571  012270  AD78               	btfss	CANsendMessage@flags& (0+255),6,b
 19572  012272  D003               	goto	l415
 19573                           
 19574                           ; BSR set to: 0
 19575                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 19576  012274  010F               	movlb	15	; () banked
 19577  012276  8D25               	bsf	37,6,b	;volatile
 19578  012278  D002               	goto	l416
 19579  01227A                     l415:
 19580                           
 19581                           ; BSR set to: 0
 19582                           ;inc\CANlib.h: 454: else
 19583                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 19584  01227A  010F               	movlb	15	; () banked
 19585  01227C  9D25               	bcf	37,6,b	;volatile
 19586  01227E                     l416:
 19587                           
 19588                           ; BSR set to: 15
 19589                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 19590  01227E  0100               	movlb	0	; () banked
 19591  012280  A778               	btfss	CANsendMessage@flags& (0+255),3,b
 19592  012282  D079               	goto	l417
 19593                           
 19594                           ; BSR set to: 0
 19595                           ;inc\CANlib.h: 458: {
 19596                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 19597  012284  0100               	movlb	0	; () banked
 19598  012286  5171               	movf	CANsendMessage@identifier& (0+255),w,b
 19599  012288  0100               	movlb	0	; () banked
 19600  01228A  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19601  01228C  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 19602  01228E  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 19603  012290  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 19604                           
 19605                           ; BSR set to: 0
 19606                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 19607  012292  C07D  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 19608                           
 19609                           ; BSR set to: 0
 19610                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 19611  012296  0E00               	movlw	0
 19612  012298  0100               	movlb	0	; () banked
 19613  01229A  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 19614  01229C  0100               	movlb	0	; () banked
 19615  01229E  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19616  0122A0  0EFF               	movlw	255
 19617  0122A2  0100               	movlb	0	; () banked
 19618  0122A4  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 19619  0122A6  0100               	movlb	0	; () banked
 19620  0122A8  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 19621  0122AA  0E00               	movlw	0
 19622  0122AC  0100               	movlb	0	; () banked
 19623  0122AE  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 19624  0122B0  0100               	movlb	0	; () banked
 19625  0122B2  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 19626  0122B4  0E00               	movlw	0
 19627  0122B6  0100               	movlb	0	; () banked
 19628  0122B8  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 19629  0122BA  0100               	movlb	0	; () banked
 19630  0122BC  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 19631                           
 19632                           ; BSR set to: 0
 19633                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 19634  0122BE  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 19635  0122C2  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 19636  0122C6  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 19637  0122CA  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 19638  0122CE  C07A  F079         	movff	??_CANsendMessage+1,??_CANsendMessage
 19639  0122D2  C07B  F07A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 19640  0122D6  C07C  F07B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 19641  0122DA  0100               	movlb	0	; () banked
 19642  0122DC  6B7C               	clrf	(??_CANsendMessage+3)& (0+255),b
 19643  0122DE  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 19644  0122E2  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 19645  0122E6  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 19646  0122EA  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 19647                           
 19648                           ; BSR set to: 0
 19649                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 19650  0122EE  C07D  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 19651                           
 19652                           ; BSR set to: 0
 19653                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 19654  0122F2  0E00               	movlw	0
 19655  0122F4  010F               	movlb	15	; () banked
 19656  0122F6  6F22               	movwf	34,b	;volatile
 19657                           
 19658                           ; BSR set to: 15
 19659                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 19660  0122F8  010F               	movlb	15	; () banked
 19661  0122FA  8722               	bsf	34,3,b	;volatile
 19662                           
 19663                           ; BSR set to: 15
 19664                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 19665  0122FC  0100               	movlb	0	; () banked
 19666  0122FE  A173               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 19667  012300  D002               	goto	l418
 19668                           
 19669                           ; BSR set to: 0
 19670                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 19671  012302  010F               	movlb	15	; () banked
 19672  012304  8122               	bsf	34,0,b	;volatile
 19673  012306                     l418:
 19674                           
 19675                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 19676  012306  0100               	movlb	0	; () banked
 19677  012308  A373               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 19678  01230A  D002               	goto	l419
 19679                           
 19680                           ; BSR set to: 0
 19681                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 19682  01230C  010F               	movlb	15	; () banked
 19683  01230E  8322               	bsf	34,1,b	;volatile
 19684  012310                     l419:
 19685                           
 19686                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 19687  012310  0100               	movlb	0	; () banked
 19688  012312  A573               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 19689  012314  D002               	goto	l420
 19690                           
 19691                           ; BSR set to: 0
 19692                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 19693  012316  010F               	movlb	15	; () banked
 19694  012318  8B22               	bsf	34,5,b	;volatile
 19695  01231A                     l420:
 19696                           
 19697                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 19698  01231A  0100               	movlb	0	; () banked
 19699  01231C  A773               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 19700  01231E  D002               	goto	l421
 19701                           
 19702                           ; BSR set to: 0
 19703                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 19704  012320  010F               	movlb	15	; () banked
 19705  012322  8D22               	bsf	34,6,b	;volatile
 19706  012324                     l421:
 19707                           
 19708                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 19709  012324  0100               	movlb	0	; () banked
 19710  012326  A973               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 19711  012328  D002               	goto	l6547
 19712                           
 19713                           ; BSR set to: 0
 19714                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 19715  01232A  010F               	movlb	15	; () banked
 19716  01232C  8F22               	bsf	34,7,b	;volatile
 19717  01232E                     l6547:
 19718                           
 19719                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 19720  01232E  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 19721  012332  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 19722  012336  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 19723  01233A  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 19724  01233E  0E16               	movlw	22
 19725  012340  D006               	goto	u8170
 19726  012342                     u8175:
 19727  012342  0100               	movlb	0	; () banked
 19728  012344  90D8               	bcf	status,0,c
 19729  012346  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 19730  012348  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 19731  01234A  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 19732  01234C  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 19733  01234E                     u8170:
 19734  01234E  2EE8               	decfsz	wreg,f,c
 19735  012350  D7F8               	goto	u8175
 19736  012352  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 19737  012356  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 19738  01235A  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 19739  01235E  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 19740                           
 19741                           ; BSR set to: 0
 19742                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 19743  012362  0100               	movlb	0	; () banked
 19744  012364  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 19745  012366  0100               	movlb	0	; () banked
 19746  012368  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19747  01236A  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 19748  01236C  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 19749  01236E  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 19750                           
 19751                           ; BSR set to: 0
 19752                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 19753  012370  C07D  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 19754                           
 19755                           ;inc\CANlib.h: 483: }
 19756  012374  D059               	goto	l6567
 19757  012376                     l417:
 19758                           
 19759                           ; BSR set to: 0
 19760                           ;inc\CANlib.h: 485: else
 19761                           ;inc\CANlib.h: 487: {
 19762                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 19763  012376  010F               	movlb	15	; () banked
 19764  012378  9722               	bcf	34,3,b	;volatile
 19765                           
 19766                           ; BSR set to: 15
 19767                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 19768  01237A  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 19769  01237E  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 19770  012382  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 19771  012386  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 19772  01238A  0E04               	movlw	4
 19773  01238C  D006               	goto	u8180
 19774  01238E                     u8185:
 19775  01238E  0100               	movlb	0	; () banked
 19776  012390  90D8               	bcf	status,0,c
 19777  012392  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 19778  012394  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 19779  012396  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 19780  012398  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 19781  01239A                     u8180:
 19782  01239A  2EE8               	decfsz	wreg,f,c
 19783  01239C  D7F8               	goto	u8185
 19784  01239E  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 19785  0123A2  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 19786  0123A6  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 19787  0123AA  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 19788                           
 19789                           ; BSR set to: 0
 19790                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 19791  0123AE  0100               	movlb	0	; () banked
 19792  0123B0  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 19793  0123B2  0100               	movlb	0	; () banked
 19794  0123B4  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19795  0123B6  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 19796  0123B8  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 19797  0123BA  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 19798                           
 19799                           ; BSR set to: 0
 19800                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 19801  0123BC  C07D  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 19802                           
 19803                           ; BSR set to: 0
 19804                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 19805  0123C0  0E07               	movlw	7
 19806  0123C2  0100               	movlb	0	; () banked
 19807  0123C4  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 19808  0123C6  0100               	movlb	0	; () banked
 19809  0123C8  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 19810  0123CA  0E00               	movlw	0
 19811  0123CC  0100               	movlb	0	; () banked
 19812  0123CE  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 19813  0123D0  0100               	movlb	0	; () banked
 19814  0123D2  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 19815  0123D4  0E00               	movlw	0
 19816  0123D6  0100               	movlb	0	; () banked
 19817  0123D8  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 19818  0123DA  0100               	movlb	0	; () banked
 19819  0123DC  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 19820  0123DE  0E00               	movlw	0
 19821  0123E0  0100               	movlb	0	; () banked
 19822  0123E2  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 19823  0123E4  0100               	movlb	0	; () banked
 19824  0123E6  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 19825                           
 19826                           ; BSR set to: 0
 19827                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 19828  0123E8  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 19829  0123EC  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 19830  0123F0  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 19831  0123F4  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 19832  0123F8  0E05               	movlw	5
 19833  0123FA                     u8195:
 19834  0123FA  90D8               	bcf	status,0,c
 19835  0123FC  0100               	movlb	0	; () banked
 19836  0123FE  3779               	rlcf	??_CANsendMessage& (0+255),f,b
 19837  012400  377A               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 19838  012402  377B               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 19839  012404  377C               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 19840  012406  2EE8               	decfsz	wreg,f,c
 19841  012408  D7F8               	goto	u8195
 19842  01240A  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 19843  01240E  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 19844  012412  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 19845  012416  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 19846                           
 19847                           ; BSR set to: 0
 19848                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 19849  01241A  010F               	movlb	15	; () banked
 19850  01241C  5122               	movf	34,w,b	;volatile
 19851  01241E  0B1F               	andlw	31
 19852  012420  010F               	movlb	15	; () banked
 19853  012422  6F22               	movwf	34,b	;volatile
 19854                           
 19855                           ; BSR set to: 15
 19856                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 19857  012424  C07D  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 19858  012428                     l6567:
 19859                           
 19860                           ;inc\CANlib.h: 498: }
 19861                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 19862  012428  0100               	movlb	0	; () banked
 19863  01242A  A178               	btfss	CANsendMessage@flags& (0+255),0,b
 19864  01242C  D003               	goto	l424
 19865                           
 19866                           ; BSR set to: 0
 19867                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 19868  01242E  010F               	movlb	15	; () banked
 19869  012430  8120               	bsf	32,0,b	;volatile
 19870  012432  D002               	goto	l425
 19871  012434                     l424:
 19872                           
 19873                           ; BSR set to: 0
 19874                           ;inc\CANlib.h: 502: else
 19875                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 19876  012434  010F               	movlb	15	; () banked
 19877  012436  9120               	bcf	32,0,b	;volatile
 19878  012438                     l425:
 19879                           
 19880                           ; BSR set to: 15
 19881                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 19882  012438  0100               	movlb	0	; () banked
 19883  01243A  A378               	btfss	CANsendMessage@flags& (0+255),1,b
 19884  01243C  D003               	goto	l426
 19885                           
 19886                           ; BSR set to: 0
 19887                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 19888  01243E  010F               	movlb	15	; () banked
 19889  012440  8320               	bsf	32,1,b	;volatile
 19890  012442  D002               	goto	l6573
 19891  012444                     l426:
 19892                           
 19893                           ; BSR set to: 0
 19894                           ;inc\CANlib.h: 506: else
 19895                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 19896  012444  010F               	movlb	15	; () banked
 19897  012446  9320               	bcf	32,1,b	;volatile
 19898  012448                     l6573:
 19899                           
 19900                           ; BSR set to: 15
 19901                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 19902  012448  C075  FFD9         	movff	CANsendMessage@data,fsr2l
 19903  01244C  C076  FFDA         	movff	CANsendMessage@data+1,fsr2h
 19904  012450  50DF               	movf	indf2,w,c
 19905  012452  010F               	movlb	15	; () banked
 19906  012454  6F26               	movwf	38,b	;volatile
 19907                           
 19908                           ; BSR set to: 15
 19909                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 19910  012456  0100               	movlb	0	; () banked
 19911  012458  EE20 F001          	lfsr	2,1
 19912  01245C  5175               	movf	CANsendMessage@data& (0+255),w,b
 19913  01245E  26D9               	addwf	fsr2l,f,c
 19914  012460  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19915  012462  22DA               	addwfc	fsr2h,f,c
 19916  012464  50DF               	movf	indf2,w,c
 19917  012466  010F               	movlb	15	; () banked
 19918  012468  6F27               	movwf	39,b	;volatile
 19919                           
 19920                           ; BSR set to: 15
 19921                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 19922  01246A  0100               	movlb	0	; () banked
 19923  01246C  EE20 F002          	lfsr	2,2
 19924  012470  5175               	movf	CANsendMessage@data& (0+255),w,b
 19925  012472  26D9               	addwf	fsr2l,f,c
 19926  012474  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19927  012476  22DA               	addwfc	fsr2h,f,c
 19928  012478  50DF               	movf	indf2,w,c
 19929  01247A  010F               	movlb	15	; () banked
 19930  01247C  6F28               	movwf	40,b	;volatile
 19931                           
 19932                           ; BSR set to: 15
 19933                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 19934  01247E  0100               	movlb	0	; () banked
 19935  012480  EE20 F003          	lfsr	2,3
 19936  012484  5175               	movf	CANsendMessage@data& (0+255),w,b
 19937  012486  26D9               	addwf	fsr2l,f,c
 19938  012488  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19939  01248A  22DA               	addwfc	fsr2h,f,c
 19940  01248C  50DF               	movf	indf2,w,c
 19941  01248E  010F               	movlb	15	; () banked
 19942  012490  6F29               	movwf	41,b	;volatile
 19943                           
 19944                           ; BSR set to: 15
 19945                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 19946  012492  0100               	movlb	0	; () banked
 19947  012494  EE20 F004          	lfsr	2,4
 19948  012498  5175               	movf	CANsendMessage@data& (0+255),w,b
 19949  01249A  26D9               	addwf	fsr2l,f,c
 19950  01249C  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19951  01249E  22DA               	addwfc	fsr2h,f,c
 19952  0124A0  50DF               	movf	indf2,w,c
 19953  0124A2  010F               	movlb	15	; () banked
 19954  0124A4  6F2A               	movwf	42,b	;volatile
 19955                           
 19956                           ; BSR set to: 15
 19957                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 19958  0124A6  0100               	movlb	0	; () banked
 19959  0124A8  EE20 F005          	lfsr	2,5
 19960  0124AC  5175               	movf	CANsendMessage@data& (0+255),w,b
 19961  0124AE  26D9               	addwf	fsr2l,f,c
 19962  0124B0  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19963  0124B2  22DA               	addwfc	fsr2h,f,c
 19964  0124B4  50DF               	movf	indf2,w,c
 19965  0124B6  010F               	movlb	15	; () banked
 19966  0124B8  6F2B               	movwf	43,b	;volatile
 19967                           
 19968                           ; BSR set to: 15
 19969                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 19970  0124BA  0100               	movlb	0	; () banked
 19971  0124BC  EE20 F006          	lfsr	2,6
 19972  0124C0  5175               	movf	CANsendMessage@data& (0+255),w,b
 19973  0124C2  26D9               	addwf	fsr2l,f,c
 19974  0124C4  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19975  0124C6  22DA               	addwfc	fsr2h,f,c
 19976  0124C8  50DF               	movf	indf2,w,c
 19977  0124CA  010F               	movlb	15	; () banked
 19978  0124CC  6F2C               	movwf	44,b	;volatile
 19979                           
 19980                           ; BSR set to: 15
 19981                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 19982  0124CE  0100               	movlb	0	; () banked
 19983  0124D0  EE20 F007          	lfsr	2,7
 19984  0124D4  5175               	movf	CANsendMessage@data& (0+255),w,b
 19985  0124D6  26D9               	addwf	fsr2l,f,c
 19986  0124D8  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 19987  0124DA  22DA               	addwfc	fsr2h,f,c
 19988  0124DC  50DF               	movf	indf2,w,c
 19989  0124DE  010F               	movlb	15	; () banked
 19990  0124E0  6F2D               	movwf	45,b	;volatile
 19991                           
 19992                           ; BSR set to: 15
 19993                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 19994  0124E2  010F               	movlb	15	; () banked
 19995  0124E4  8720               	bsf	32,3,b	;volatile
 19996                           
 19997                           ; BSR set to: 15
 19998                           ;inc\CANlib.h: 520: return;
 19999  0124E6  0012               	return	
 20000  0124E8                     __end_of_CANsendMessage:
 20001                           	opt stack 0
 20002                           tblptru	equ	0xFF8
 20003                           tblptrh	equ	0xFF7
 20004                           tblptrl	equ	0xFF6
 20005                           tablat	equ	0xFF5
 20006                           prodh	equ	0xFF4
 20007                           prodl	equ	0xFF3
 20008                           intcon	equ	0xFF2
 20009                           postinc0	equ	0xFEE
 20010                           wreg	equ	0xFE8
 20011                           indf1	equ	0xFE7
 20012                           plusw1	equ	0xFE3
 20013                           fsr1h	equ	0xFE2
 20014                           fsr1l	equ	0xFE1
 20015                           indf2	equ	0xFDF
 20016                           postinc2	equ	0xFDE
 20017                           plusw2	equ	0xFDB
 20018                           fsr2h	equ	0xFDA
 20019                           fsr2l	equ	0xFD9
 20020                           status	equ	0xFD8
 20021                           
 20022 ;; *************** function _CANisTxReady *****************
 20023 ;; Defined at:
 20024 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 20025 ;; Parameters:    Size  Location     Type
 20026 ;;		None
 20027 ;; Auto vars:     Size  Location     Type
 20028 ;;		None
 20029 ;; Return value:  Size  Location     Type
 20030 ;;                  1    wreg      unsigned char 
 20031 ;; Registers used:
 20032 ;;		wreg, status,2
 20033 ;; Tracked objects:
 20034 ;;		On entry : 0/0
 20035 ;;		On exit  : 0/0
 20036 ;;		Unchanged: 0/0
 20037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20039 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20041 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20042 ;;Total ram usage:        1 bytes
 20043 ;; Hardware stack levels used:    1
 20044 ;; Hardware stack levels required when called:    3
 20045 ;; This function calls:
 20046 ;;		Nothing
 20047 ;; This function is called by:
 20048 ;;		_main
 20049 ;;		_LCD_Handler
 20050 ;;		_CAN_Tx
 20051 ;; This function uses a non-reentrant model
 20052 ;;
 20053                           
 20054                           	psect	text56
 20055  0167A8                     __ptext56:
 20056                           	opt stack 0
 20057  0167A8                     _CANisTxReady:
 20058                           	opt stack 26
 20059                           
 20060                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 20061                           
 20062                           ; BSR set to: 15
 20063                           ;incstack = 0
 20064  0167A8  0E01               	movlw	1
 20065  0167AA  0100               	movlb	0	; () banked
 20066  0167AC  6F71               	movwf	_CANisTxReady$3168& (0+255),b
 20067                           
 20068                           ; BSR set to: 0
 20069  0167AE  010F               	movlb	15	; () banked
 20070  0167B0  A740               	btfss	64,3,b	;volatile
 20071  0167B2  D009               	goto	l578
 20072                           
 20073                           ; BSR set to: 15
 20074  0167B4  010F               	movlb	15	; () banked
 20075  0167B6  A730               	btfss	48,3,b	;volatile
 20076  0167B8  D006               	goto	l578
 20077                           
 20078                           ; BSR set to: 15
 20079  0167BA  010F               	movlb	15	; () banked
 20080  0167BC  A720               	btfss	32,3,b	;volatile
 20081  0167BE  D003               	goto	l578
 20082                           
 20083                           ; BSR set to: 15
 20084  0167C0  0E00               	movlw	0
 20085  0167C2  0100               	movlb	0	; () banked
 20086  0167C4  6F71               	movwf	_CANisTxReady$3168& (0+255),b
 20087  0167C6                     l578:
 20088  0167C6  0100               	movlb	0	; () banked
 20089  0167C8  5171               	movf	_CANisTxReady$3168& (0+255),w,b
 20090  0167CA  0012               	return	
 20091  0167CC                     __end_of_CANisTxReady:
 20092                           	opt stack 0
 20093                           tblptru	equ	0xFF8
 20094                           tblptrh	equ	0xFF7
 20095                           tblptrl	equ	0xFF6
 20096                           tablat	equ	0xFF5
 20097                           prodh	equ	0xFF4
 20098                           prodl	equ	0xFF3
 20099                           intcon	equ	0xFF2
 20100                           postinc0	equ	0xFEE
 20101                           wreg	equ	0xFE8
 20102                           indf1	equ	0xFE7
 20103                           plusw1	equ	0xFE3
 20104                           fsr1h	equ	0xFE2
 20105                           fsr1l	equ	0xFE1
 20106                           indf2	equ	0xFDF
 20107                           postinc2	equ	0xFDE
 20108                           plusw2	equ	0xFDB
 20109                           fsr2h	equ	0xFDA
 20110                           fsr2l	equ	0xFD9
 20111                           status	equ	0xFD8
 20112                           
 20113 ;; *************** function _ISR_bassa *****************
 20114 ;; Defined at:
 20115 ;;		line 206 in file "RemoteCan.c"
 20116 ;; Parameters:    Size  Location     Type
 20117 ;;		None
 20118 ;; Auto vars:     Size  Location     Type
 20119 ;;		None
 20120 ;; Return value:  Size  Location     Type
 20121 ;;                  1    wreg      void 
 20122 ;; Registers used:
 20123 ;;		wreg, status,2, status,0
 20124 ;; Tracked objects:
 20125 ;;		On entry : 0/0
 20126 ;;		On exit  : 0/0
 20127 ;;		Unchanged: 0/0
 20128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20131 ;;      Temps:          0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20132 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20133 ;;Total ram usage:       17 bytes
 20134 ;; Hardware stack levels used:    1
 20135 ;; Hardware stack levels required when called:    2
 20136 ;; This function calls:
 20137 ;;		Nothing
 20138 ;; This function is called by:
 20139 ;;		Interrupt level 1
 20140 ;; This function uses a non-reentrant model
 20141 ;;
 20142                           
 20143                           	psect	intcodelo
 20144  000018                     __pintcodelo:
 20145                           	opt stack 0
 20146  000018                     _ISR_bassa:
 20147                           	opt stack 20
 20148                           
 20149                           ; BSR set to: 0
 20150                           ;incstack = 0
 20151  000018  804B               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 20152  00001A  CFD8 F060          	movff	status,??_ISR_bassa
 20153  00001E  CFE8 F061          	movff	wreg,??_ISR_bassa+1
 20154  000022  CFE0 F062          	movff	bsr,??_ISR_bassa+2
 20155  000026  CFFA F063          	movff	pclath,??_ISR_bassa+3
 20156  00002A  CFFB F064          	movff	pclatu,??_ISR_bassa+4
 20157  00002E  CFE9 F065          	movff	fsr0l,??_ISR_bassa+5
 20158  000032  CFEA F066          	movff	fsr0h,??_ISR_bassa+6
 20159  000036  CFE1 F067          	movff	fsr1l,??_ISR_bassa+7
 20160  00003A  CFE2 F068          	movff	fsr1h,??_ISR_bassa+8
 20161  00003E  CFD9 F069          	movff	fsr2l,??_ISR_bassa+9
 20162  000042  CFDA F06A          	movff	fsr2h,??_ISR_bassa+10
 20163  000046  CFF3 F06B          	movff	prodl,??_ISR_bassa+11
 20164  00004A  CFF4 F06C          	movff	prodh,??_ISR_bassa+12
 20165  00004E  CFF6 F06D          	movff	tblptrl,??_ISR_bassa+13
 20166  000052  CFF7 F06E          	movff	tblptrh,??_ISR_bassa+14
 20167  000056  CFF8 F06F          	movff	tblptru,??_ISR_bassa+15
 20168  00005A  CFF5 F070          	movff	tablat,??_ISR_bassa+16
 20169                           
 20170                           ;RemoteCan.c: 207: if (PIR2bits.TMR3IF == 1) {
 20171  00005E  A2A1               	btfss	4001,1,c	;volatile
 20172  000060  D00B               	goto	i1l817
 20173                           
 20174                           ;RemoteCan.c: 208: time_counter++;
 20175  000062  0E01               	movlw	1
 20176  000064  2619               	addwf	_time_counter,f,c	;volatile
 20177  000066  0E00               	movlw	0
 20178  000068  221A               	addwfc	_time_counter+1,f,c	;volatile
 20179  00006A  221B               	addwfc	_time_counter+2,f,c	;volatile
 20180  00006C  221C               	addwfc	_time_counter+3,f,c	;volatile
 20181                           
 20182                           ;RemoteCan.c: 209: TMR3H = 0x63;
 20183  00006E  0E63               	movlw	99
 20184  000070  6EB3               	movwf	4019,c	;volatile
 20185                           
 20186                           ;RemoteCan.c: 210: TMR3L = 0xC0;
 20187  000072  0EC0               	movlw	192
 20188  000074  6EB2               	movwf	4018,c	;volatile
 20189                           
 20190                           ;RemoteCan.c: 211: PIR2bits.TMR3IF = 0;
 20191  000076  92A1               	bcf	4001,1,c	;volatile
 20192  000078                     i1l817:
 20193  000078  C070  FFF5         	movff	??_ISR_bassa+16,tablat
 20194  00007C  C06F  FFF8         	movff	??_ISR_bassa+15,tblptru
 20195  000080  C06E  FFF7         	movff	??_ISR_bassa+14,tblptrh
 20196  000084  C06D  FFF6         	movff	??_ISR_bassa+13,tblptrl
 20197  000088  C06C  FFF4         	movff	??_ISR_bassa+12,prodh
 20198  00008C  C06B  FFF3         	movff	??_ISR_bassa+11,prodl
 20199  000090  C06A  FFDA         	movff	??_ISR_bassa+10,fsr2h
 20200  000094  C069  FFD9         	movff	??_ISR_bassa+9,fsr2l
 20201  000098  C068  FFE2         	movff	??_ISR_bassa+8,fsr1h
 20202  00009C  C067  FFE1         	movff	??_ISR_bassa+7,fsr1l
 20203  0000A0  C066  FFEA         	movff	??_ISR_bassa+6,fsr0h
 20204  0000A4  C065  FFE9         	movff	??_ISR_bassa+5,fsr0l
 20205  0000A8  C064  FFFB         	movff	??_ISR_bassa+4,pclatu
 20206  0000AC  C063  FFFA         	movff	??_ISR_bassa+3,pclath
 20207  0000B0  C062  FFE0         	movff	??_ISR_bassa+2,bsr
 20208  0000B4  C061  FFE8         	movff	??_ISR_bassa+1,wreg
 20209  0000B8  C060  FFD8         	movff	??_ISR_bassa,status
 20210  0000BC  904B               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 20211  0000BE  0010               	retfie	
 20212  0000C0                     __end_of_ISR_bassa:
 20213                           	opt stack 0
 20214                           pclatu	equ	0xFFB
 20215                           pclath	equ	0xFFA
 20216                           tblptru	equ	0xFF8
 20217                           tblptrh	equ	0xFF7
 20218                           tblptrl	equ	0xFF6
 20219                           tablat	equ	0xFF5
 20220                           prodh	equ	0xFF4
 20221                           prodl	equ	0xFF3
 20222                           intcon	equ	0xFF2
 20223                           postinc0	equ	0xFEE
 20224                           fsr0h	equ	0xFEA
 20225                           fsr0l	equ	0xFE9
 20226                           wreg	equ	0xFE8
 20227                           indf1	equ	0xFE7
 20228                           plusw1	equ	0xFE3
 20229                           fsr1h	equ	0xFE2
 20230                           fsr1l	equ	0xFE1
 20231                           bsr	equ	0xFE0
 20232                           indf2	equ	0xFDF
 20233                           postinc2	equ	0xFDE
 20234                           plusw2	equ	0xFDB
 20235                           fsr2h	equ	0xFDA
 20236                           fsr2l	equ	0xFD9
 20237                           status	equ	0xFD8
 20238                           
 20239 ;; *************** function _ISR_alta *****************
 20240 ;; Defined at:
 20241 ;;		line 123 in file "RemoteCan.c"
 20242 ;; Parameters:    Size  Location     Type
 20243 ;;		None
 20244 ;; Auto vars:     Size  Location     Type
 20245 ;;		None
 20246 ;; Return value:  Size  Location     Type
 20247 ;;                  1    wreg      void 
 20248 ;; Registers used:
 20249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20250 ;; Tracked objects:
 20251 ;;		On entry : 0/0
 20252 ;;		On exit  : 0/0
 20253 ;;		Unchanged: 0/0
 20254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20257 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20258 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20259 ;;Total ram usage:       18 bytes
 20260 ;; Hardware stack levels used:    1
 20261 ;; Hardware stack levels required when called:    1
 20262 ;; This function calls:
 20263 ;;		_CANisRxReady
 20264 ;;		_CANreceiveMessage
 20265 ;;		i2_CANisTxReady
 20266 ;;		i2_CANsendMessage
 20267 ;; This function is called by:
 20268 ;;		Interrupt level 2
 20269 ;; This function uses a non-reentrant model
 20270 ;;
 20271                           
 20272                           	psect	intcode
 20273  000008                     __pintcode:
 20274                           	opt stack 0
 20275  000008                     _ISR_alta:
 20276                           	opt stack 20
 20277                           
 20278                           ;incstack = 0
 20279  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 20280  00000A  CFFA F03A          	movff	pclath,??_ISR_alta+4
 20281  00000E  CFFB F03B          	movff	pclatu,??_ISR_alta+5
 20282  000012  EFE2  F0A5         	goto	int_func
 20283                           pclatu	equ	0xFFB
 20284                           pclath	equ	0xFFA
 20285                           tblptru	equ	0xFF8
 20286                           tblptrh	equ	0xFF7
 20287                           tblptrl	equ	0xFF6
 20288                           tablat	equ	0xFF5
 20289                           prodh	equ	0xFF4
 20290                           prodl	equ	0xFF3
 20291                           intcon	equ	0xFF2
 20292                           postinc0	equ	0xFEE
 20293                           fsr0h	equ	0xFEA
 20294                           fsr0l	equ	0xFE9
 20295                           wreg	equ	0xFE8
 20296                           indf1	equ	0xFE7
 20297                           plusw1	equ	0xFE3
 20298                           fsr1h	equ	0xFE2
 20299                           fsr1l	equ	0xFE1
 20300                           bsr	equ	0xFE0
 20301                           indf2	equ	0xFDF
 20302                           postinc2	equ	0xFDE
 20303                           plusw2	equ	0xFDB
 20304                           fsr2h	equ	0xFDA
 20305                           fsr2l	equ	0xFD9
 20306                           status	equ	0xFD8
 20307                           
 20308                           	psect	intcode_body
 20309  014BC4                     __pintcode_body:
 20310                           	opt stack 20
 20311  014BC4                     int_func:
 20312                           	opt stack 20
 20313  014BC4  CFE9 F03C          	movff	fsr0l,??_ISR_alta+6
 20314  014BC8  CFEA F03D          	movff	fsr0h,??_ISR_alta+7
 20315  014BCC  CFE1 F03E          	movff	fsr1l,??_ISR_alta+8
 20316  014BD0  CFE2 F03F          	movff	fsr1h,??_ISR_alta+9
 20317  014BD4  CFD9 F040          	movff	fsr2l,??_ISR_alta+10
 20318  014BD8  CFDA F041          	movff	fsr2h,??_ISR_alta+11
 20319  014BDC  CFF3 F042          	movff	prodl,??_ISR_alta+12
 20320  014BE0  CFF4 F043          	movff	prodh,??_ISR_alta+13
 20321  014BE4  CFF6 F044          	movff	tblptrl,??_ISR_alta+14
 20322  014BE8  CFF7 F045          	movff	tblptrh,??_ISR_alta+15
 20323  014BEC  CFF8 F046          	movff	tblptru,??_ISR_alta+16
 20324  014BF0  CFF5 F047          	movff	tablat,??_ISR_alta+17
 20325                           
 20326                           ;RemoteCan.c: 124: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 20327  014BF4  A2A4               	btfss	4004,1,c	;volatile
 20328  014BF6  B0A4               	btfsc	4004,0,c	;volatile
 20329  014BF8  D001               	goto	i2l7737
 20330  014BFA  D0FC               	goto	i2l813
 20331  014BFC                     i2l7737:
 20332                           
 20333                           ;RemoteCan.c: 125: if (CANisRxReady()) {
 20334  014BFC  EC49  F0B4         	call	_CANisRxReady	;wreg free
 20335  014C00  0900               	iorlw	0
 20336  014C02  B4D8               	btfsc	status,2,c
 20337  014C04  D0F5               	goto	i2l796
 20338                           
 20339                           ;RemoteCan.c: 126: CANreceiveMessage(&msg);
 20340  014C06  0E0A               	movlw	low _msg
 20341  014C08  6E26               	movwf	CANreceiveMessage@msg,c
 20342  014C0A  0E01               	movlw	high _msg
 20343  014C0C  6E27               	movwf	CANreceiveMessage@msg+1,c
 20344  014C0E  EC49  F098         	call	_CANreceiveMessage	;wreg free
 20345                           
 20346                           ;RemoteCan.c: 127: RTR_Flag = msg.RTR;
 20347  014C12  0101               	movlb	1	; () banked
 20348  014C14  A118               	btfss	(_msg+14)& (0+255),0,b
 20349  014C16  D002               	goto	i2u996_40
 20350  014C18  8848               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 20351  014C1A  D001               	goto	i2l7743
 20352  014C1C                     i2u996_40:
 20353  014C1C  9848               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 20354  014C1E                     i2l7743:
 20355                           
 20356                           ;RemoteCan.c: 128: id = msg.identifier;
 20357  014C1E  C10A  F005         	movff	_msg,_id	;volatile
 20358  014C22  C10B  F006         	movff	_msg+1,_id+1	;volatile
 20359  014C26  C10C  F007         	movff	_msg+2,_id+2	;volatile
 20360  014C2A  C10D  F008         	movff	_msg+3,_id+3	;volatile
 20361                           
 20362                           ;RemoteCan.c: 130: if (id == 0b00000001000) {
 20363  014C2E  0E08               	movlw	8
 20364  014C30  1805               	xorwf	_id,w,c	;volatile
 20365  014C32  1006               	iorwf	_id+1,w,c	;volatile
 20366  014C34  1007               	iorwf	_id+2,w,c	;volatile
 20367  014C36  1008               	iorwf	_id+3,w,c	;volatile
 20368  014C38  A4D8               	btfss	status,2,c
 20369  014C3A  D022               	goto	i2l7755
 20370                           
 20371                           ;RemoteCan.c: 131: left_speed = msg.data[1];
 20372  014C3C  C10F  F01F         	movff	_msg+5,_left_speed	;volatile
 20373  014C40  6A20               	clrf	_left_speed+1,c	;volatile
 20374                           
 20375                           ;RemoteCan.c: 132: left_speed = ((left_speed << 8) | (msg.data[0]));
 20376  014C42  501F               	movf	_left_speed,w,c	;volatile
 20377  014C44  6E36               	movwf	??_ISR_alta& (0+255),c
 20378  014C46  0101               	movlb	1	; () banked
 20379  014C48  510E               	movf	(_msg+4)& (0+255),w,b
 20380  014C4A  6E1F               	movwf	_left_speed,c	;volatile
 20381  014C4C  C036  F020         	movff	??_ISR_alta,_left_speed+1	;volatile
 20382                           
 20383                           ; BSR set to: 1
 20384                           ;RemoteCan.c: 133: right_speed = msg.data[3];
 20385  014C50  C111  F021         	movff	_msg+7,_right_speed	;volatile
 20386  014C54  6A22               	clrf	_right_speed+1,c	;volatile
 20387                           
 20388                           ;RemoteCan.c: 134: right_speed = ((right_speed << 8) | (msg.data[2]));
 20389  014C56  5021               	movf	_right_speed,w,c	;volatile
 20390  014C58  6E36               	movwf	??_ISR_alta& (0+255),c
 20391  014C5A  0101               	movlb	1	; () banked
 20392  014C5C  5110               	movf	(_msg+6)& (0+255),w,b
 20393  014C5E  6E21               	movwf	_right_speed,c	;volatile
 20394  014C60  C036  F022         	movff	??_ISR_alta,_right_speed+1	;volatile
 20395                           
 20396                           ; BSR set to: 1
 20397                           ;RemoteCan.c: 135: actual_speed = (right_speed + left_speed) / 2;
 20398  014C64  501F               	movf	_left_speed,w,c	;volatile
 20399  014C66  2421               	addwf	_right_speed,w,c	;volatile
 20400  014C68  6E36               	movwf	??_ISR_alta& (0+255),c
 20401  014C6A  5020               	movf	_left_speed+1,w,c	;volatile
 20402  014C6C  2022               	addwfc	_right_speed+1,w,c	;volatile
 20403  014C6E  6E37               	movwf	(??_ISR_alta+1)& (0+255),c
 20404  014C70  90D8               	bcf	status,0,c
 20405  014C72  3037               	rrcf	??_ISR_alta+1,w,c
 20406  014C74  6E38               	movwf	(??_ISR_alta+2)& (0+255),c
 20407  014C76  3036               	rrcf	??_ISR_alta,w,c
 20408  014C78  0100               	movlb	0	; () banked
 20409  014C7A  6FDF               	movwf	_actual_speed& (0+255),b	;volatile
 20410  014C7C  C038  F0E0         	movff	??_ISR_alta+2,_actual_speed+1	;volatile
 20411  014C80                     i2l7755:
 20412                           
 20413                           ;RemoteCan.c: 136: }
 20414                           ;RemoteCan.c: 138: if (id == 0b00000001101) {
 20415  014C80  0E0D               	movlw	13
 20416  014C82  1805               	xorwf	_id,w,c	;volatile
 20417  014C84  1006               	iorwf	_id+1,w,c	;volatile
 20418  014C86  1007               	iorwf	_id+2,w,c	;volatile
 20419  014C88  1008               	iorwf	_id+3,w,c	;volatile
 20420  014C8A  A4D8               	btfss	status,2,c
 20421  014C8C  D041               	goto	i2l7787
 20422                           
 20423                           ;RemoteCan.c: 139: if (msg.data[0] == 1) {
 20424  014C8E  0101               	movlb	1	; () banked
 20425  014C90  050E               	decf	(_msg+4)& (0+255),w,b
 20426  014C92  A4D8               	btfss	status,2,c
 20427  014C94  D007               	goto	i2l7763
 20428                           
 20429                           ; BSR set to: 1
 20430                           ;RemoteCan.c: 140: space_available = 1;
 20431  014C96  8C49               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 20432                           
 20433                           ;RemoteCan.c: 141: space_gap_reached = 0;
 20434  014C98  9E49               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 20435                           
 20436                           ;RemoteCan.c: 142: F2_switch = 0;
 20437  014C9A  9448               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 20438                           
 20439                           ;RemoteCan.c: 143: parking_message_E = 1;
 20440  014C9C  8449               	bsf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
 20441                           
 20442                           ; BSR set to: 1
 20443                           ;RemoteCan.c: 144: parking_message_ID = 0;
 20444  014C9E  0E00               	movlw	0
 20445  014CA0  0100               	movlb	0	; () banked
 20446  014CA2  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
 20447  014CA4                     i2l7763:
 20448                           
 20449                           ;RemoteCan.c: 145: }
 20450                           ;RemoteCan.c: 147: if (msg.data[0] == 2) {
 20451  014CA4  0E02               	movlw	2
 20452  014CA6  0101               	movlb	1	; () banked
 20453  014CA8  190E               	xorwf	(_msg+4)& (0+255),w,b
 20454  014CAA  A4D8               	btfss	status,2,c
 20455  014CAC  D006               	goto	i2l7769
 20456                           
 20457                           ; BSR set to: 1
 20458                           ;RemoteCan.c: 148: space_available = 1;
 20459  014CAE  8C49               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 20460                           
 20461                           ;RemoteCan.c: 149: space_gap_reached = 1;
 20462  014CB0  8E49               	bsf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 20463                           
 20464                           ;RemoteCan.c: 150: Can_Tx_Force = 1;
 20465  014CB2  8048               	bsf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
 20466                           
 20467                           ; BSR set to: 1
 20468                           ;RemoteCan.c: 151: parking_message_ID = 2;
 20469  014CB4  0E02               	movlw	2
 20470  014CB6  0100               	movlb	0	; () banked
 20471  014CB8  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
 20472  014CBA                     i2l7769:
 20473                           
 20474                           ;RemoteCan.c: 152: }
 20475                           ;RemoteCan.c: 154: if (msg.data[0] == 3) {
 20476  014CBA  0E03               	movlw	3
 20477  014CBC  0101               	movlb	1	; () banked
 20478  014CBE  190E               	xorwf	(_msg+4)& (0+255),w,b
 20479  014CC0  A4D8               	btfss	status,2,c
 20480  014CC2  D010               	goto	i2l7777
 20481                           
 20482                           ; BSR set to: 1
 20483                           ;RemoteCan.c: 155: parking_message_ID = 6;
 20484  014CC4  0E06               	movlw	6
 20485  014CC6  0100               	movlb	0	; () banked
 20486  014CC8  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
 20487                           
 20488                           ; BSR set to: 0
 20489                           ;RemoteCan.c: 156: F1_switch = 0;
 20490  014CCA  9248               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 20491                           
 20492                           ; BSR set to: 0
 20493                           ;RemoteCan.c: 157: pr_time_6 = time_counter + (2000 / 10);
 20494  014CCC  0EC8               	movlw	200
 20495  014CCE  2419               	addwf	_time_counter,w,c	;volatile
 20496  014CD0  6E15               	movwf	_pr_time_6,c	;volatile
 20497  014CD2  0E00               	movlw	0
 20498  014CD4  201A               	addwfc	_time_counter+1,w,c	;volatile
 20499  014CD6  6E16               	movwf	_pr_time_6+1,c	;volatile
 20500  014CD8  0E00               	movlw	0
 20501  014CDA  201B               	addwfc	_time_counter+2,w,c	;volatile
 20502  014CDC  6E17               	movwf	_pr_time_6+2,c	;volatile
 20503  014CDE  0E00               	movlw	0
 20504  014CE0  201C               	addwfc	_time_counter+3,w,c	;volatile
 20505  014CE2  6E18               	movwf	_pr_time_6+3,c	;volatile
 20506  014CE4                     i2l7777:
 20507                           
 20508                           ;RemoteCan.c: 158: }
 20509                           ;RemoteCan.c: 159: if (msg.data[0] == 4) {
 20510  014CE4  0E04               	movlw	4
 20511  014CE6  0101               	movlb	1	; () banked
 20512  014CE8  190E               	xorwf	(_msg+4)& (0+255),w,b
 20513  014CEA  A4D8               	btfss	status,2,c
 20514  014CEC  D011               	goto	i2l7787
 20515                           
 20516                           ; BSR set to: 1
 20517                           ;RemoteCan.c: 160: parking_message_ID = 6;
 20518  014CEE  0E06               	movlw	6
 20519  014CF0  0100               	movlb	0	; () banked
 20520  014CF2  6FE8               	movwf	_parking_message_ID& (0+255),b	;volatile
 20521                           
 20522                           ; BSR set to: 0
 20523                           ;RemoteCan.c: 161: parking_error = 1;
 20524  014CF4  8249               	bsf	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
 20525                           
 20526                           ; BSR set to: 0
 20527                           ;RemoteCan.c: 162: F1_switch = 0;
 20528  014CF6  9248               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 20529                           
 20530                           ; BSR set to: 0
 20531                           ;RemoteCan.c: 163: pr_time_6 = time_counter + (2000 / 10);
 20532  014CF8  0EC8               	movlw	200
 20533  014CFA  2419               	addwf	_time_counter,w,c	;volatile
 20534  014CFC  6E15               	movwf	_pr_time_6,c	;volatile
 20535  014CFE  0E00               	movlw	0
 20536  014D00  201A               	addwfc	_time_counter+1,w,c	;volatile
 20537  014D02  6E16               	movwf	_pr_time_6+1,c	;volatile
 20538  014D04  0E00               	movlw	0
 20539  014D06  201B               	addwfc	_time_counter+2,w,c	;volatile
 20540  014D08  6E17               	movwf	_pr_time_6+2,c	;volatile
 20541  014D0A  0E00               	movlw	0
 20542  014D0C  201C               	addwfc	_time_counter+3,w,c	;volatile
 20543  014D0E  6E18               	movwf	_pr_time_6+3,c	;volatile
 20544  014D10                     i2l7787:
 20545                           
 20546                           ;RemoteCan.c: 164: }
 20547                           ;RemoteCan.c: 165: }
 20548                           ;RemoteCan.c: 167: if (id == 0b00000010000) {
 20549  014D10  0E10               	movlw	16
 20550  014D12  1805               	xorwf	_id,w,c	;volatile
 20551  014D14  1006               	iorwf	_id+1,w,c	;volatile
 20552  014D16  1007               	iorwf	_id+2,w,c	;volatile
 20553  014D18  1008               	iorwf	_id+3,w,c	;volatile
 20554  014D1A  A4D8               	btfss	status,2,c
 20555  014D1C  D008               	goto	i2l7791
 20556                           
 20557                           ;RemoteCan.c: 168: steering_correction_dir = msg.data[1];
 20558  014D1E  0101               	movlb	1	; () banked
 20559  014D20  A10F               	btfss	(_msg+5)& (0+255),0,b
 20560  014D22  D002               	goto	i2u1005_40
 20561  014D24  804A               	bsf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 20562  014D26  D001               	goto	i2u1006_45
 20563  014D28                     i2u1005_40:
 20564  014D28  904A               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 20565  014D2A                     i2u1006_45:
 20566                           
 20567                           ;RemoteCan.c: 169: steering_correction = msg.data[0];
 20568  014D2A  C10E  F0EA         	movff	_msg+4,_steering_correction	;volatile
 20569  014D2E                     i2l7791:
 20570                           
 20571                           ;RemoteCan.c: 170: }
 20572                           ;RemoteCan.c: 172: if (id == 0b00000010001) {
 20573  014D2E  0E11               	movlw	17
 20574  014D30  1805               	xorwf	_id,w,c	;volatile
 20575  014D32  1006               	iorwf	_id+1,w,c	;volatile
 20576  014D34  1007               	iorwf	_id+2,w,c	;volatile
 20577  014D36  1008               	iorwf	_id+3,w,c	;volatile
 20578  014D38  A4D8               	btfss	status,2,c
 20579  014D3A  D004               	goto	i2l7795
 20580                           
 20581                           ;RemoteCan.c: 173: collision_sensor_distance[1] = msg.data[0];
 20582  014D3C  C10E  F01E         	movff	_msg+4,_collision_sensor_distance+1	;volatile
 20583                           
 20584                           ;RemoteCan.c: 174: collision_sensor_distance[0] = msg.data[1];
 20585  014D40  C10F  F01D         	movff	_msg+5,_collision_sensor_distance	;volatile
 20586  014D44                     i2l7795:
 20587                           
 20588                           ;RemoteCan.c: 175: }
 20589                           ;RemoteCan.c: 177: if (id == 0xAA) {
 20590  014D44  0EAA               	movlw	170
 20591  014D46  1805               	xorwf	_id,w,c	;volatile
 20592  014D48  1006               	iorwf	_id+1,w,c	;volatile
 20593  014D4A  1007               	iorwf	_id+2,w,c	;volatile
 20594  014D4C  1008               	iorwf	_id+3,w,c	;volatile
 20595  014D4E  A4D8               	btfss	status,2,c
 20596  014D50  D00A               	goto	i2l7801
 20597                           
 20598                           ;RemoteCan.c: 178: user_data = msg.data[1];
 20599  014D52  C10F  F023         	movff	_msg+5,_user_data	;volatile
 20600  014D56  6A24               	clrf	_user_data+1,c	;volatile
 20601                           
 20602                           ;RemoteCan.c: 179: user_data = ((user_data << 8) | msg.data[0]);
 20603  014D58  5023               	movf	_user_data,w,c	;volatile
 20604  014D5A  6E36               	movwf	??_ISR_alta& (0+255),c
 20605  014D5C  0101               	movlb	1	; () banked
 20606  014D5E  510E               	movf	(_msg+4)& (0+255),w,b
 20607  014D60  6E23               	movwf	_user_data,c	;volatile
 20608  014D62  C036  F024         	movff	??_ISR_alta,_user_data+1	;volatile
 20609  014D66                     i2l7801:
 20610                           
 20611                           ;RemoteCan.c: 180: }
 20612                           ;RemoteCan.c: 182: if (id == 0b00000000100) {
 20613  014D66  0E04               	movlw	4
 20614  014D68  1805               	xorwf	_id,w,c	;volatile
 20615  014D6A  1006               	iorwf	_id+1,w,c	;volatile
 20616  014D6C  1007               	iorwf	_id+2,w,c	;volatile
 20617  014D6E  1008               	iorwf	_id+3,w,c	;volatile
 20618  014D70  B4D8               	btfsc	status,2,c
 20619                           
 20620                           ;RemoteCan.c: 183: if (RTR_Flag == 1) {
 20621  014D72  A848               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 20622  014D74  D026               	goto	i2l7815
 20623                           
 20624                           ;RemoteCan.c: 184: pr_time_4 = time_counter;
 20625  014D76  C019  F106         	movff	_time_counter,_pr_time_4	;volatile
 20626  014D7A  C01A  F107         	movff	_time_counter+1,_pr_time_4+1	;volatile
 20627  014D7E  C01B  F108         	movff	_time_counter+2,_pr_time_4+2	;volatile
 20628  014D82  C01C  F109         	movff	_time_counter+3,_pr_time_4+3	;volatile
 20629                           
 20630                           ;RemoteCan.c: 185: data[0] = 0x03;
 20631  014D86  0E03               	movlw	3
 20632  014D88  0101               	movlb	1	; () banked
 20633  014D8A  6F25               	movwf	_data& (0+255),b
 20634                           
 20635                           ; BSR set to: 1
 20636                           ;RemoteCan.c: 186: _delay((unsigned long)((10)*(16000000/4000000.0)));
 20637  014D8C  0E0D               	movlw	13
 20638  014D8E                     i2u1329_47:
 20639  014D8E  2EE8               	decfsz	wreg,f,c
 20640  014D90  D7FE               	goto	i2u1329_47
 20641  014D92  F000               	nop	
 20642  014D94                     i2l7811:
 20643  014D94  ECF7  F0B3         	call	i2_CANisTxReady	;wreg free
 20644  014D98  06E8               	decf	wreg,f,c
 20645  014D9A  A4D8               	btfss	status,2,c
 20646  014D9C  D7FB               	goto	i2l7811
 20647                           
 20648                           ;RemoteCan.c: 188: CANsendMessage(0b00000000100, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 20649  014D9E  0E04               	movlw	4
 20650  014DA0  6E26               	movwf	i2CANsendMessage@identifier,c
 20651  014DA2  0E00               	movlw	0
 20652  014DA4  6E27               	movwf	i2CANsendMessage@identifier+1,c
 20653  014DA6  0E00               	movlw	0
 20654  014DA8  6E28               	movwf	i2CANsendMessage@identifier+2,c
 20655  014DAA  0E00               	movlw	0
 20656  014DAC  6E29               	movwf	i2CANsendMessage@identifier+3,c
 20657  014DAE  0E25               	movlw	low _data
 20658  014DB0  6E2A               	movwf	i2CANsendMessage@data,c
 20659  014DB2  0E01               	movlw	high _data
 20660  014DB4  6E2B               	movwf	i2CANsendMessage@data+1,c
 20661  014DB6  0E08               	movlw	8
 20662  014DB8  6E2C               	movwf	i2CANsendMessage@dataLength,c
 20663  014DBA  0EBC               	movlw	188
 20664  014DBC  6E2D               	movwf	i2CANsendMessage@flags,c
 20665  014DBE  EC74  F092         	call	i2_CANsendMessage	;wreg free
 20666  014DC2                     i2l7815:
 20667                           
 20668                           ;RemoteCan.c: 189: }
 20669                           ;RemoteCan.c: 190: }
 20670                           ;RemoteCan.c: 192: if ((id == 0b00000001011)&&(RTR_Flag == 1)) {
 20671  014DC2  0E0B               	movlw	11
 20672  014DC4  1805               	xorwf	_id,w,c	;volatile
 20673  014DC6  1006               	iorwf	_id+1,w,c	;volatile
 20674  014DC8  1007               	iorwf	_id+2,w,c	;volatile
 20675  014DCA  1008               	iorwf	_id+3,w,c	;volatile
 20676  014DCC  B4D8               	btfsc	status,2,c
 20677  014DCE  A848               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 20678  014DD0  D001               	goto	i2l7821
 20679                           
 20680                           ;RemoteCan.c: 193: low_battery = 1;
 20681  014DD2  8049               	bsf	_low_battery/(0+8),_low_battery& (0+7),c	;volatile
 20682  014DD4                     i2l7821:
 20683                           
 20684                           ;RemoteCan.c: 194: }
 20685                           ;RemoteCan.c: 196: if (id == 0b00000010010) {
 20686  014DD4  0E12               	movlw	18
 20687  014DD6  1805               	xorwf	_id,w,c	;volatile
 20688  014DD8  1006               	iorwf	_id+1,w,c	;volatile
 20689  014DDA  1007               	iorwf	_id+2,w,c	;volatile
 20690  014DDC  1008               	iorwf	_id+3,w,c	;volatile
 20691  014DDE  A4D8               	btfss	status,2,c
 20692  014DE0  D007               	goto	i2l796
 20693                           
 20694                           ;RemoteCan.c: 197: battery_charging = msg.data[0];
 20695  014DE2  0101               	movlb	1	; () banked
 20696  014DE4  A10E               	btfss	(_msg+4)& (0+255),0,b
 20697  014DE6  D002               	goto	i2u1015_40
 20698  014DE8  8A48               	bsf	_battery_charging/(0+8),_battery_charging& (0+7),c	;volatile
 20699  014DEA  D001               	goto	i2u1016_45
 20700  014DEC                     i2u1015_40:
 20701  014DEC  9A48               	bcf	_battery_charging/(0+8),_battery_charging& (0+7),c	;volatile
 20702  014DEE                     i2u1016_45:
 20703                           
 20704                           ;RemoteCan.c: 198: low_battery = 0;
 20705  014DEE  9049               	bcf	_low_battery/(0+8),_low_battery& (0+7),c	;volatile
 20706  014DF0                     i2l796:
 20707                           
 20708                           ;RemoteCan.c: 199: }
 20709                           ;RemoteCan.c: 200: }
 20710                           ;RemoteCan.c: 201: PIR3bits.RXB1IF = 0;
 20711  014DF0  92A4               	bcf	4004,1,c	;volatile
 20712                           
 20713                           ;RemoteCan.c: 202: PIR3bits.RXB0IF = 0;
 20714  014DF2  90A4               	bcf	4004,0,c	;volatile
 20715  014DF4                     i2l813:
 20716  014DF4  C047  FFF5         	movff	??_ISR_alta+17,tablat
 20717  014DF8  C046  FFF8         	movff	??_ISR_alta+16,tblptru
 20718  014DFC  C045  FFF7         	movff	??_ISR_alta+15,tblptrh
 20719  014E00  C044  FFF6         	movff	??_ISR_alta+14,tblptrl
 20720  014E04  C043  FFF4         	movff	??_ISR_alta+13,prodh
 20721  014E08  C042  FFF3         	movff	??_ISR_alta+12,prodl
 20722  014E0C  C041  FFDA         	movff	??_ISR_alta+11,fsr2h
 20723  014E10  C040  FFD9         	movff	??_ISR_alta+10,fsr2l
 20724  014E14  C03F  FFE2         	movff	??_ISR_alta+9,fsr1h
 20725  014E18  C03E  FFE1         	movff	??_ISR_alta+8,fsr1l
 20726  014E1C  C03D  FFEA         	movff	??_ISR_alta+7,fsr0h
 20727  014E20  C03C  FFE9         	movff	??_ISR_alta+6,fsr0l
 20728  014E24  C03B  FFFB         	movff	??_ISR_alta+5,pclatu
 20729  014E28  C03A  FFFA         	movff	??_ISR_alta+4,pclath
 20730  014E2C  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 20731  014E2E  0011               	retfie		f
 20732  014E30                     __end_of_ISR_alta:
 20733                           	opt stack 0
 20734                           pclatu	equ	0xFFB
 20735                           pclath	equ	0xFFA
 20736                           tblptru	equ	0xFF8
 20737                           tblptrh	equ	0xFF7
 20738                           tblptrl	equ	0xFF6
 20739                           tablat	equ	0xFF5
 20740                           prodh	equ	0xFF4
 20741                           prodl	equ	0xFF3
 20742                           intcon	equ	0xFF2
 20743                           postinc0	equ	0xFEE
 20744                           fsr0h	equ	0xFEA
 20745                           fsr0l	equ	0xFE9
 20746                           wreg	equ	0xFE8
 20747                           indf1	equ	0xFE7
 20748                           plusw1	equ	0xFE3
 20749                           fsr1h	equ	0xFE2
 20750                           fsr1l	equ	0xFE1
 20751                           bsr	equ	0xFE0
 20752                           indf2	equ	0xFDF
 20753                           postinc2	equ	0xFDE
 20754                           plusw2	equ	0xFDB
 20755                           fsr2h	equ	0xFDA
 20756                           fsr2l	equ	0xFD9
 20757                           status	equ	0xFD8
 20758                           
 20759 ;; *************** function i2_CANsendMessage *****************
 20760 ;; Defined at:
 20761 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 20762 ;; Parameters:    Size  Location     Type
 20763 ;;  identifier      4    0[COMRAM] unsigned long 
 20764 ;;  data            2    4[COMRAM] PTR unsigned char 
 20765 ;;		 -> data_speed(8), park_assist_state(8), data_steering(8), data_brake(8), 
 20766 ;;		 -> data(8), 
 20767 ;;  dataLength      1    6[COMRAM] unsigned char 
 20768 ;;  flags           1    7[COMRAM] enum E16771
 20769 ;; Auto vars:     Size  Location     Type
 20770 ;;  CANsendMessa    4   12[COMRAM] unsigned long 
 20771 ;; Return value:  Size  Location     Type
 20772 ;;                  1    wreg      void 
 20773 ;; Registers used:
 20774 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20775 ;; Tracked objects:
 20776 ;;		On entry : 0/0
 20777 ;;		On exit  : 0/0
 20778 ;;		Unchanged: 0/0
 20779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20780 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20781 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20782 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20783 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20784 ;;Total ram usage:       16 bytes
 20785 ;; Hardware stack levels used:    1
 20786 ;; This function calls:
 20787 ;;		Nothing
 20788 ;; This function is called by:
 20789 ;;		_ISR_alta
 20790 ;; This function uses a non-reentrant model
 20791 ;;
 20792                           
 20793                           	psect	text59
 20794  0124E8                     __ptext59:
 20795                           	opt stack 0
 20796  0124E8                     i2_CANsendMessage:
 20797                           	opt stack 20
 20798                           
 20799                           ;inc\CANlib.h: 296: unsigned long tamp;
 20800                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 20801                           
 20802                           ;incstack = 0
 20803  0124E8  010F               	movlb	15	; () banked
 20804  0124EA  B740               	btfsc	64,3,b	;volatile
 20805  0124EC  D115               	goto	i2l385
 20806                           
 20807                           ; BSR set to: 15
 20808                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 20809  0124EE  C02C  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 20810                           
 20811                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 20812  0124F2  AC2D               	btfss	i2CANsendMessage@flags,6,c
 20813  0124F4  D003               	goto	i2l386
 20814                           
 20815                           ; BSR set to: 15
 20816                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 20817  0124F6  010F               	movlb	15	; () banked
 20818  0124F8  8D45               	bsf	69,6,b	;volatile
 20819  0124FA  D002               	goto	i2l387
 20820  0124FC                     i2l386:
 20821                           
 20822                           ; BSR set to: 15
 20823                           ;inc\CANlib.h: 302: else
 20824                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 20825  0124FC  010F               	movlb	15	; () banked
 20826  0124FE  9D45               	bcf	69,6,b	;volatile
 20827  012500                     i2l387:
 20828                           
 20829                           ; BSR set to: 15
 20830                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 20831  012500  A62D               	btfss	i2CANsendMessage@flags,3,c
 20832  012502  D066               	goto	i2l388
 20833                           
 20834                           ; BSR set to: 15
 20835                           ;inc\CANlib.h: 306: {
 20836                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 20837  012504  5026               	movf	i2CANsendMessage@identifier,w,c
 20838  012506  6E32               	movwf	i2CANsendMessage@tamp,c
 20839  012508  6A33               	clrf	i2CANsendMessage@tamp+1,c
 20840  01250A  6A34               	clrf	i2CANsendMessage@tamp+2,c
 20841  01250C  6A35               	clrf	i2CANsendMessage@tamp+3,c
 20842                           
 20843                           ; BSR set to: 15
 20844                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 20845  01250E  C032  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 20846                           
 20847                           ; BSR set to: 15
 20848                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 20849  012512  0E00               	movlw	0
 20850  012514  1426               	andwf	i2CANsendMessage@identifier,w,c
 20851  012516  6E32               	movwf	i2CANsendMessage@tamp,c
 20852  012518  0EFF               	movlw	255
 20853  01251A  1427               	andwf	i2CANsendMessage@identifier+1,w,c
 20854  01251C  6E33               	movwf	i2CANsendMessage@tamp+1,c
 20855  01251E  0E00               	movlw	0
 20856  012520  1428               	andwf	i2CANsendMessage@identifier+2,w,c
 20857  012522  6E34               	movwf	i2CANsendMessage@tamp+2,c
 20858  012524  0E00               	movlw	0
 20859  012526  1429               	andwf	i2CANsendMessage@identifier+3,w,c
 20860  012528  6E35               	movwf	i2CANsendMessage@tamp+3,c
 20861                           
 20862                           ; BSR set to: 15
 20863                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 20864  01252A  C032  F02E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20865  01252E  C033  F02F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20866  012532  C034  F030         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20867  012536  C035  F031         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20868  01253A  C02F  F02E         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 20869  01253E  C030  F02F         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 20870  012542  C031  F030         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 20871  012546  6A31               	clrf	??i2_CANsendMessage+3,c
 20872  012548  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20873  01254C  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20874  012550  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20875  012554  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20876                           
 20877                           ; BSR set to: 15
 20878                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 20879  012558  C032  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 20880                           
 20881                           ; BSR set to: 15
 20882                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 20883  01255C  0E00               	movlw	0
 20884  01255E  010F               	movlb	15	; () banked
 20885  012560  6F42               	movwf	66,b	;volatile
 20886                           
 20887                           ; BSR set to: 15
 20888                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 20889  012562  010F               	movlb	15	; () banked
 20890  012564  8742               	bsf	66,3,b	;volatile
 20891                           
 20892                           ; BSR set to: 15
 20893                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 20894  012566  A028               	btfss	i2CANsendMessage@identifier+2,0,c
 20895  012568  D002               	goto	i2l389
 20896                           
 20897                           ; BSR set to: 15
 20898                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 20899  01256A  010F               	movlb	15	; () banked
 20900  01256C  8142               	bsf	66,0,b	;volatile
 20901  01256E                     i2l389:
 20902                           
 20903                           ; BSR set to: 15
 20904                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 20905  01256E  A228               	btfss	i2CANsendMessage@identifier+2,1,c
 20906  012570  D002               	goto	i2l390
 20907                           
 20908                           ; BSR set to: 15
 20909                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 20910  012572  010F               	movlb	15	; () banked
 20911  012574  8342               	bsf	66,1,b	;volatile
 20912  012576                     i2l390:
 20913                           
 20914                           ; BSR set to: 15
 20915                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 20916  012576  A428               	btfss	i2CANsendMessage@identifier+2,2,c
 20917  012578  D002               	goto	i2l391
 20918                           
 20919                           ; BSR set to: 15
 20920                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 20921  01257A  010F               	movlb	15	; () banked
 20922  01257C  8B42               	bsf	66,5,b	;volatile
 20923  01257E                     i2l391:
 20924                           
 20925                           ; BSR set to: 15
 20926                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 20927  01257E  A628               	btfss	i2CANsendMessage@identifier+2,3,c
 20928  012580  D002               	goto	i2l392
 20929                           
 20930                           ; BSR set to: 15
 20931                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 20932  012582  010F               	movlb	15	; () banked
 20933  012584  8D42               	bsf	66,6,b	;volatile
 20934  012586                     i2l392:
 20935                           
 20936                           ; BSR set to: 15
 20937                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 20938  012586  A828               	btfss	i2CANsendMessage@identifier+2,4,c
 20939  012588  D002               	goto	i2l7505
 20940                           
 20941                           ; BSR set to: 15
 20942                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 20943  01258A  010F               	movlb	15	; () banked
 20944  01258C  8F42               	bsf	66,7,b	;volatile
 20945  01258E                     i2l7505:
 20946                           
 20947                           ; BSR set to: 15
 20948                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 20949  01258E  C026  F02E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20950  012592  C027  F02F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20951  012596  C028  F030         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20952  01259A  C029  F031         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20953  01259E  0E16               	movlw	22
 20954  0125A0  D005               	goto	i2u957_40
 20955  0125A2                     i2u957_45:
 20956  0125A2  90D8               	bcf	status,0,c
 20957  0125A4  3231               	rrcf	??i2_CANsendMessage+3,f,c
 20958  0125A6  3230               	rrcf	??i2_CANsendMessage+2,f,c
 20959  0125A8  322F               	rrcf	??i2_CANsendMessage+1,f,c
 20960  0125AA  322E               	rrcf	??i2_CANsendMessage,f,c
 20961  0125AC                     i2u957_40:
 20962  0125AC  2EE8               	decfsz	wreg,f,c
 20963  0125AE  D7F9               	goto	i2u957_45
 20964  0125B0  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20965  0125B4  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20966  0125B8  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20967  0125BC  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20968                           
 20969                           ; BSR set to: 15
 20970                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 20971  0125C0  5032               	movf	i2CANsendMessage@tamp,w,c
 20972  0125C2  6E32               	movwf	i2CANsendMessage@tamp,c
 20973  0125C4  6A33               	clrf	i2CANsendMessage@tamp+1,c
 20974  0125C6  6A34               	clrf	i2CANsendMessage@tamp+2,c
 20975  0125C8  6A35               	clrf	i2CANsendMessage@tamp+3,c
 20976                           
 20977                           ; BSR set to: 15
 20978                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 20979  0125CA  C032  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 20980                           
 20981                           ;inc\CANlib.h: 332: }
 20982  0125CE  D04D               	goto	i2l7525
 20983  0125D0                     i2l388:
 20984                           
 20985                           ; BSR set to: 15
 20986                           ;inc\CANlib.h: 334: else
 20987                           ;inc\CANlib.h: 336: {
 20988                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 20989  0125D0  010F               	movlb	15	; () banked
 20990  0125D2  9742               	bcf	66,3,b	;volatile
 20991                           
 20992                           ; BSR set to: 15
 20993                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 20994  0125D4  C026  F02E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20995  0125D8  C027  F02F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20996  0125DC  C028  F030         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20997  0125E0  C029  F031         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20998  0125E4  0E04               	movlw	4
 20999  0125E6  D005               	goto	i2u958_40
 21000  0125E8                     i2u958_45:
 21001  0125E8  90D8               	bcf	status,0,c
 21002  0125EA  3231               	rrcf	??i2_CANsendMessage+3,f,c
 21003  0125EC  3230               	rrcf	??i2_CANsendMessage+2,f,c
 21004  0125EE  322F               	rrcf	??i2_CANsendMessage+1,f,c
 21005  0125F0  322E               	rrcf	??i2_CANsendMessage,f,c
 21006  0125F2                     i2u958_40:
 21007  0125F2  2EE8               	decfsz	wreg,f,c
 21008  0125F4  D7F9               	goto	i2u958_45
 21009  0125F6  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21010  0125FA  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21011  0125FE  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21012  012602  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21013                           
 21014                           ; BSR set to: 15
 21015                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 21016  012606  5032               	movf	i2CANsendMessage@tamp,w,c
 21017  012608  6E32               	movwf	i2CANsendMessage@tamp,c
 21018  01260A  6A33               	clrf	i2CANsendMessage@tamp+1,c
 21019  01260C  6A34               	clrf	i2CANsendMessage@tamp+2,c
 21020  01260E  6A35               	clrf	i2CANsendMessage@tamp+3,c
 21021                           
 21022                           ; BSR set to: 15
 21023                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 21024  012610  C032  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 21025                           
 21026                           ; BSR set to: 15
 21027                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 21028  012614  0E07               	movlw	7
 21029  012616  1426               	andwf	i2CANsendMessage@identifier,w,c
 21030  012618  6E32               	movwf	i2CANsendMessage@tamp,c
 21031  01261A  0E00               	movlw	0
 21032  01261C  1427               	andwf	i2CANsendMessage@identifier+1,w,c
 21033  01261E  6E33               	movwf	i2CANsendMessage@tamp+1,c
 21034  012620  0E00               	movlw	0
 21035  012622  1428               	andwf	i2CANsendMessage@identifier+2,w,c
 21036  012624  6E34               	movwf	i2CANsendMessage@tamp+2,c
 21037  012626  0E00               	movlw	0
 21038  012628  1429               	andwf	i2CANsendMessage@identifier+3,w,c
 21039  01262A  6E35               	movwf	i2CANsendMessage@tamp+3,c
 21040                           
 21041                           ; BSR set to: 15
 21042                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 21043  01262C  C032  F02E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 21044  012630  C033  F02F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 21045  012634  C034  F030         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 21046  012638  C035  F031         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 21047  01263C  0E05               	movlw	5
 21048  01263E                     i2u959_45:
 21049  01263E  90D8               	bcf	status,0,c
 21050  012640  362E               	rlcf	??i2_CANsendMessage,f,c
 21051  012642  362F               	rlcf	??i2_CANsendMessage+1,f,c
 21052  012644  3630               	rlcf	??i2_CANsendMessage+2,f,c
 21053  012646  3631               	rlcf	??i2_CANsendMessage+3,f,c
 21054  012648  2EE8               	decfsz	wreg,f,c
 21055  01264A  D7F9               	goto	i2u959_45
 21056  01264C  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21057  012650  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21058  012654  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21059  012658  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21060                           
 21061                           ; BSR set to: 15
 21062                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 21063  01265C  010F               	movlb	15	; () banked
 21064  01265E  5142               	movf	66,w,b	;volatile
 21065  012660  0B1F               	andlw	31
 21066  012662  010F               	movlb	15	; () banked
 21067  012664  6F42               	movwf	66,b	;volatile
 21068                           
 21069                           ; BSR set to: 15
 21070                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 21071  012666  C032  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 21072  01266A                     i2l7525:
 21073                           
 21074                           ; BSR set to: 15
 21075                           ;inc\CANlib.h: 347: }
 21076                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 21077  01266A  A02D               	btfss	i2CANsendMessage@flags,0,c
 21078  01266C  D003               	goto	i2l395
 21079                           
 21080                           ; BSR set to: 15
 21081                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 21082  01266E  010F               	movlb	15	; () banked
 21083  012670  8140               	bsf	64,0,b	;volatile
 21084  012672  D002               	goto	i2l396
 21085  012674                     i2l395:
 21086                           
 21087                           ; BSR set to: 15
 21088                           ;inc\CANlib.h: 351: else
 21089                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 21090  012674  010F               	movlb	15	; () banked
 21091  012676  9140               	bcf	64,0,b	;volatile
 21092  012678                     i2l396:
 21093                           
 21094                           ; BSR set to: 15
 21095                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 21096  012678  A22D               	btfss	i2CANsendMessage@flags,1,c
 21097  01267A  D003               	goto	i2l397
 21098                           
 21099                           ; BSR set to: 15
 21100                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 21101  01267C  010F               	movlb	15	; () banked
 21102  01267E  8340               	bsf	64,1,b	;volatile
 21103  012680  D002               	goto	i2l7531
 21104  012682                     i2l397:
 21105                           
 21106                           ; BSR set to: 15
 21107                           ;inc\CANlib.h: 355: else
 21108                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 21109  012682  010F               	movlb	15	; () banked
 21110  012684  9340               	bcf	64,1,b	;volatile
 21111  012686                     i2l7531:
 21112                           
 21113                           ; BSR set to: 15
 21114                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 21115  012686  C02A  FFD9         	movff	i2CANsendMessage@data,fsr2l
 21116  01268A  C02B  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 21117  01268E  50DF               	movf	indf2,w,c
 21118  012690  010F               	movlb	15	; () banked
 21119  012692  6F46               	movwf	70,b	;volatile
 21120                           
 21121                           ; BSR set to: 15
 21122                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 21123  012694  EE20 F001          	lfsr	2,1
 21124  012698  502A               	movf	i2CANsendMessage@data,w,c
 21125  01269A  26D9               	addwf	fsr2l,f,c
 21126  01269C  502B               	movf	i2CANsendMessage@data+1,w,c
 21127  01269E  22DA               	addwfc	fsr2h,f,c
 21128  0126A0  50DF               	movf	indf2,w,c
 21129  0126A2  010F               	movlb	15	; () banked
 21130  0126A4  6F47               	movwf	71,b	;volatile
 21131                           
 21132                           ; BSR set to: 15
 21133                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 21134  0126A6  EE20 F002          	lfsr	2,2
 21135  0126AA  502A               	movf	i2CANsendMessage@data,w,c
 21136  0126AC  26D9               	addwf	fsr2l,f,c
 21137  0126AE  502B               	movf	i2CANsendMessage@data+1,w,c
 21138  0126B0  22DA               	addwfc	fsr2h,f,c
 21139  0126B2  50DF               	movf	indf2,w,c
 21140  0126B4  010F               	movlb	15	; () banked
 21141  0126B6  6F48               	movwf	72,b	;volatile
 21142                           
 21143                           ; BSR set to: 15
 21144                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 21145  0126B8  EE20 F003          	lfsr	2,3
 21146  0126BC  502A               	movf	i2CANsendMessage@data,w,c
 21147  0126BE  26D9               	addwf	fsr2l,f,c
 21148  0126C0  502B               	movf	i2CANsendMessage@data+1,w,c
 21149  0126C2  22DA               	addwfc	fsr2h,f,c
 21150  0126C4  50DF               	movf	indf2,w,c
 21151  0126C6  010F               	movlb	15	; () banked
 21152  0126C8  6F49               	movwf	73,b	;volatile
 21153                           
 21154                           ; BSR set to: 15
 21155                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 21156  0126CA  EE20 F004          	lfsr	2,4
 21157  0126CE  502A               	movf	i2CANsendMessage@data,w,c
 21158  0126D0  26D9               	addwf	fsr2l,f,c
 21159  0126D2  502B               	movf	i2CANsendMessage@data+1,w,c
 21160  0126D4  22DA               	addwfc	fsr2h,f,c
 21161  0126D6  50DF               	movf	indf2,w,c
 21162  0126D8  010F               	movlb	15	; () banked
 21163  0126DA  6F4A               	movwf	74,b	;volatile
 21164                           
 21165                           ; BSR set to: 15
 21166                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 21167  0126DC  EE20 F005          	lfsr	2,5
 21168  0126E0  502A               	movf	i2CANsendMessage@data,w,c
 21169  0126E2  26D9               	addwf	fsr2l,f,c
 21170  0126E4  502B               	movf	i2CANsendMessage@data+1,w,c
 21171  0126E6  22DA               	addwfc	fsr2h,f,c
 21172  0126E8  50DF               	movf	indf2,w,c
 21173  0126EA  010F               	movlb	15	; () banked
 21174  0126EC  6F4B               	movwf	75,b	;volatile
 21175                           
 21176                           ; BSR set to: 15
 21177                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 21178  0126EE  EE20 F006          	lfsr	2,6
 21179  0126F2  502A               	movf	i2CANsendMessage@data,w,c
 21180  0126F4  26D9               	addwf	fsr2l,f,c
 21181  0126F6  502B               	movf	i2CANsendMessage@data+1,w,c
 21182  0126F8  22DA               	addwfc	fsr2h,f,c
 21183  0126FA  50DF               	movf	indf2,w,c
 21184  0126FC  010F               	movlb	15	; () banked
 21185  0126FE  6F4C               	movwf	76,b	;volatile
 21186                           
 21187                           ; BSR set to: 15
 21188                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 21189  012700  EE20 F007          	lfsr	2,7
 21190  012704  502A               	movf	i2CANsendMessage@data,w,c
 21191  012706  26D9               	addwf	fsr2l,f,c
 21192  012708  502B               	movf	i2CANsendMessage@data+1,w,c
 21193  01270A  22DA               	addwfc	fsr2h,f,c
 21194  01270C  50DF               	movf	indf2,w,c
 21195  01270E  010F               	movlb	15	; () banked
 21196  012710  6F4D               	movwf	77,b	;volatile
 21197                           
 21198                           ; BSR set to: 15
 21199                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 21200  012712  010F               	movlb	15	; () banked
 21201  012714  8740               	bsf	64,3,b	;volatile
 21202                           
 21203                           ; BSR set to: 15
 21204                           ;inc\CANlib.h: 368: return;
 21205  012716  0012               	return	
 21206  012718                     i2l385:
 21207                           
 21208                           ; BSR set to: 15
 21209                           ;inc\CANlib.h: 369: }
 21210                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 21211  012718  010F               	movlb	15	; () banked
 21212  01271A  B730               	btfsc	48,3,b	;volatile
 21213  01271C  D115               	goto	i2l400
 21214                           
 21215                           ; BSR set to: 15
 21216                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 21217  01271E  C02C  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 21218                           
 21219                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 21220  012722  AC2D               	btfss	i2CANsendMessage@flags,6,c
 21221  012724  D003               	goto	i2l401
 21222                           
 21223                           ; BSR set to: 15
 21224                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 21225  012726  010F               	movlb	15	; () banked
 21226  012728  8D35               	bsf	53,6,b	;volatile
 21227  01272A  D002               	goto	i2l402
 21228  01272C                     i2l401:
 21229                           
 21230                           ; BSR set to: 15
 21231                           ;inc\CANlib.h: 378: else
 21232                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 21233  01272C  010F               	movlb	15	; () banked
 21234  01272E  9D35               	bcf	53,6,b	;volatile
 21235  012730                     i2l402:
 21236                           
 21237                           ; BSR set to: 15
 21238                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 21239  012730  A62D               	btfss	i2CANsendMessage@flags,3,c
 21240  012732  D066               	goto	i2l403
 21241                           
 21242                           ; BSR set to: 15
 21243                           ;inc\CANlib.h: 382: {
 21244                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 21245  012734  5026               	movf	i2CANsendMessage@identifier,w,c
 21246  012736  6E32               	movwf	i2CANsendMessage@tamp,c
 21247  012738  6A33               	clrf	i2CANsendMessage@tamp+1,c
 21248  01273A  6A34               	clrf	i2CANsendMessage@tamp+2,c
 21249  01273C  6A35               	clrf	i2CANsendMessage@tamp+3,c
 21250                           
 21251                           ; BSR set to: 15
 21252                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 21253  01273E  C032  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 21254                           
 21255                           ; BSR set to: 15
 21256                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 21257  012742  0E00               	movlw	0
 21258  012744  1426               	andwf	i2CANsendMessage@identifier,w,c
 21259  012746  6E32               	movwf	i2CANsendMessage@tamp,c
 21260  012748  0EFF               	movlw	255
 21261  01274A  1427               	andwf	i2CANsendMessage@identifier+1,w,c
 21262  01274C  6E33               	movwf	i2CANsendMessage@tamp+1,c
 21263  01274E  0E00               	movlw	0
 21264  012750  1428               	andwf	i2CANsendMessage@identifier+2,w,c
 21265  012752  6E34               	movwf	i2CANsendMessage@tamp+2,c
 21266  012754  0E00               	movlw	0
 21267  012756  1429               	andwf	i2CANsendMessage@identifier+3,w,c
 21268  012758  6E35               	movwf	i2CANsendMessage@tamp+3,c
 21269                           
 21270                           ; BSR set to: 15
 21271                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 21272  01275A  C032  F02E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 21273  01275E  C033  F02F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 21274  012762  C034  F030         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 21275  012766  C035  F031         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 21276  01276A  C02F  F02E         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 21277  01276E  C030  F02F         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 21278  012772  C031  F030         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 21279  012776  6A31               	clrf	??i2_CANsendMessage+3,c
 21280  012778  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21281  01277C  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21282  012780  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21283  012784  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21284                           
 21285                           ; BSR set to: 15
 21286                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 21287  012788  C032  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 21288                           
 21289                           ; BSR set to: 15
 21290                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 21291  01278C  0E00               	movlw	0
 21292  01278E  010F               	movlb	15	; () banked
 21293  012790  6F32               	movwf	50,b	;volatile
 21294                           
 21295                           ; BSR set to: 15
 21296                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 21297  012792  010F               	movlb	15	; () banked
 21298  012794  8732               	bsf	50,3,b	;volatile
 21299                           
 21300                           ; BSR set to: 15
 21301                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 21302  012796  A028               	btfss	i2CANsendMessage@identifier+2,0,c
 21303  012798  D002               	goto	i2l404
 21304                           
 21305                           ; BSR set to: 15
 21306                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 21307  01279A  010F               	movlb	15	; () banked
 21308  01279C  8132               	bsf	50,0,b	;volatile
 21309  01279E                     i2l404:
 21310                           
 21311                           ; BSR set to: 15
 21312                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 21313  01279E  A228               	btfss	i2CANsendMessage@identifier+2,1,c
 21314  0127A0  D002               	goto	i2l405
 21315                           
 21316                           ; BSR set to: 15
 21317                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 21318  0127A2  010F               	movlb	15	; () banked
 21319  0127A4  8332               	bsf	50,1,b	;volatile
 21320  0127A6                     i2l405:
 21321                           
 21322                           ; BSR set to: 15
 21323                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 21324  0127A6  A428               	btfss	i2CANsendMessage@identifier+2,2,c
 21325  0127A8  D002               	goto	i2l406
 21326                           
 21327                           ; BSR set to: 15
 21328                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 21329  0127AA  010F               	movlb	15	; () banked
 21330  0127AC  8B32               	bsf	50,5,b	;volatile
 21331  0127AE                     i2l406:
 21332                           
 21333                           ; BSR set to: 15
 21334                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 21335  0127AE  A628               	btfss	i2CANsendMessage@identifier+2,3,c
 21336  0127B0  D002               	goto	i2l407
 21337                           
 21338                           ; BSR set to: 15
 21339                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 21340  0127B2  010F               	movlb	15	; () banked
 21341  0127B4  8D32               	bsf	50,6,b	;volatile
 21342  0127B6                     i2l407:
 21343                           
 21344                           ; BSR set to: 15
 21345                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 21346  0127B6  A828               	btfss	i2CANsendMessage@identifier+2,4,c
 21347  0127B8  D002               	goto	i2l7581
 21348                           
 21349                           ; BSR set to: 15
 21350                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 21351  0127BA  010F               	movlb	15	; () banked
 21352  0127BC  8F32               	bsf	50,7,b	;volatile
 21353  0127BE                     i2l7581:
 21354                           
 21355                           ; BSR set to: 15
 21356                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 21357  0127BE  C026  F02E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 21358  0127C2  C027  F02F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 21359  0127C6  C028  F030         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 21360  0127CA  C029  F031         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 21361  0127CE  0E16               	movlw	22
 21362  0127D0  D005               	goto	i2u970_40
 21363  0127D2                     i2u970_45:
 21364  0127D2  90D8               	bcf	status,0,c
 21365  0127D4  3231               	rrcf	??i2_CANsendMessage+3,f,c
 21366  0127D6  3230               	rrcf	??i2_CANsendMessage+2,f,c
 21367  0127D8  322F               	rrcf	??i2_CANsendMessage+1,f,c
 21368  0127DA  322E               	rrcf	??i2_CANsendMessage,f,c
 21369  0127DC                     i2u970_40:
 21370  0127DC  2EE8               	decfsz	wreg,f,c
 21371  0127DE  D7F9               	goto	i2u970_45
 21372  0127E0  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21373  0127E4  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21374  0127E8  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21375  0127EC  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21376                           
 21377                           ; BSR set to: 15
 21378                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 21379  0127F0  5032               	movf	i2CANsendMessage@tamp,w,c
 21380  0127F2  6E32               	movwf	i2CANsendMessage@tamp,c
 21381  0127F4  6A33               	clrf	i2CANsendMessage@tamp+1,c
 21382  0127F6  6A34               	clrf	i2CANsendMessage@tamp+2,c
 21383  0127F8  6A35               	clrf	i2CANsendMessage@tamp+3,c
 21384                           
 21385                           ; BSR set to: 15
 21386                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 21387  0127FA  C032  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 21388                           
 21389                           ;inc\CANlib.h: 407: }
 21390  0127FE  D04D               	goto	i2l7601
 21391  012800                     i2l403:
 21392                           
 21393                           ; BSR set to: 15
 21394                           ;inc\CANlib.h: 409: else
 21395                           ;inc\CANlib.h: 411: {
 21396                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 21397  012800  010F               	movlb	15	; () banked
 21398  012802  9732               	bcf	50,3,b	;volatile
 21399                           
 21400                           ; BSR set to: 15
 21401                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 21402  012804  C026  F02E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 21403  012808  C027  F02F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 21404  01280C  C028  F030         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 21405  012810  C029  F031         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 21406  012814  0E04               	movlw	4
 21407  012816  D005               	goto	i2u971_40
 21408  012818                     i2u971_45:
 21409  012818  90D8               	bcf	status,0,c
 21410  01281A  3231               	rrcf	??i2_CANsendMessage+3,f,c
 21411  01281C  3230               	rrcf	??i2_CANsendMessage+2,f,c
 21412  01281E  322F               	rrcf	??i2_CANsendMessage+1,f,c
 21413  012820  322E               	rrcf	??i2_CANsendMessage,f,c
 21414  012822                     i2u971_40:
 21415  012822  2EE8               	decfsz	wreg,f,c
 21416  012824  D7F9               	goto	i2u971_45
 21417  012826  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21418  01282A  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21419  01282E  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21420  012832  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21421                           
 21422                           ; BSR set to: 15
 21423                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 21424  012836  5032               	movf	i2CANsendMessage@tamp,w,c
 21425  012838  6E32               	movwf	i2CANsendMessage@tamp,c
 21426  01283A  6A33               	clrf	i2CANsendMessage@tamp+1,c
 21427  01283C  6A34               	clrf	i2CANsendMessage@tamp+2,c
 21428  01283E  6A35               	clrf	i2CANsendMessage@tamp+3,c
 21429                           
 21430                           ; BSR set to: 15
 21431                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 21432  012840  C032  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 21433                           
 21434                           ; BSR set to: 15
 21435                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 21436  012844  0E07               	movlw	7
 21437  012846  1426               	andwf	i2CANsendMessage@identifier,w,c
 21438  012848  6E32               	movwf	i2CANsendMessage@tamp,c
 21439  01284A  0E00               	movlw	0
 21440  01284C  1427               	andwf	i2CANsendMessage@identifier+1,w,c
 21441  01284E  6E33               	movwf	i2CANsendMessage@tamp+1,c
 21442  012850  0E00               	movlw	0
 21443  012852  1428               	andwf	i2CANsendMessage@identifier+2,w,c
 21444  012854  6E34               	movwf	i2CANsendMessage@tamp+2,c
 21445  012856  0E00               	movlw	0
 21446  012858  1429               	andwf	i2CANsendMessage@identifier+3,w,c
 21447  01285A  6E35               	movwf	i2CANsendMessage@tamp+3,c
 21448                           
 21449                           ; BSR set to: 15
 21450                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 21451  01285C  C032  F02E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 21452  012860  C033  F02F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 21453  012864  C034  F030         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 21454  012868  C035  F031         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 21455  01286C  0E05               	movlw	5
 21456  01286E                     i2u972_45:
 21457  01286E  90D8               	bcf	status,0,c
 21458  012870  362E               	rlcf	??i2_CANsendMessage,f,c
 21459  012872  362F               	rlcf	??i2_CANsendMessage+1,f,c
 21460  012874  3630               	rlcf	??i2_CANsendMessage+2,f,c
 21461  012876  3631               	rlcf	??i2_CANsendMessage+3,f,c
 21462  012878  2EE8               	decfsz	wreg,f,c
 21463  01287A  D7F9               	goto	i2u972_45
 21464  01287C  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21465  012880  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21466  012884  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21467  012888  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21468                           
 21469                           ; BSR set to: 15
 21470                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 21471  01288C  010F               	movlb	15	; () banked
 21472  01288E  5132               	movf	50,w,b	;volatile
 21473  012890  0B1F               	andlw	31
 21474  012892  010F               	movlb	15	; () banked
 21475  012894  6F32               	movwf	50,b	;volatile
 21476                           
 21477                           ; BSR set to: 15
 21478                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 21479  012896  C032  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 21480  01289A                     i2l7601:
 21481                           
 21482                           ; BSR set to: 15
 21483                           ;inc\CANlib.h: 422: }
 21484                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 21485  01289A  A02D               	btfss	i2CANsendMessage@flags,0,c
 21486  01289C  D003               	goto	i2l410
 21487                           
 21488                           ; BSR set to: 15
 21489                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 21490  01289E  010F               	movlb	15	; () banked
 21491  0128A0  8130               	bsf	48,0,b	;volatile
 21492  0128A2  D002               	goto	i2l411
 21493  0128A4                     i2l410:
 21494                           
 21495                           ; BSR set to: 15
 21496                           ;inc\CANlib.h: 426: else
 21497                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 21498  0128A4  010F               	movlb	15	; () banked
 21499  0128A6  9130               	bcf	48,0,b	;volatile
 21500  0128A8                     i2l411:
 21501                           
 21502                           ; BSR set to: 15
 21503                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 21504  0128A8  A22D               	btfss	i2CANsendMessage@flags,1,c
 21505  0128AA  D003               	goto	i2l412
 21506                           
 21507                           ; BSR set to: 15
 21508                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 21509  0128AC  010F               	movlb	15	; () banked
 21510  0128AE  8330               	bsf	48,1,b	;volatile
 21511  0128B0  D002               	goto	i2l7607
 21512  0128B2                     i2l412:
 21513                           
 21514                           ; BSR set to: 15
 21515                           ;inc\CANlib.h: 430: else
 21516                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 21517  0128B2  010F               	movlb	15	; () banked
 21518  0128B4  9330               	bcf	48,1,b	;volatile
 21519  0128B6                     i2l7607:
 21520                           
 21521                           ; BSR set to: 15
 21522                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 21523  0128B6  C02A  FFD9         	movff	i2CANsendMessage@data,fsr2l
 21524  0128BA  C02B  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 21525  0128BE  50DF               	movf	indf2,w,c
 21526  0128C0  010F               	movlb	15	; () banked
 21527  0128C2  6F36               	movwf	54,b	;volatile
 21528                           
 21529                           ; BSR set to: 15
 21530                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 21531  0128C4  EE20 F001          	lfsr	2,1
 21532  0128C8  502A               	movf	i2CANsendMessage@data,w,c
 21533  0128CA  26D9               	addwf	fsr2l,f,c
 21534  0128CC  502B               	movf	i2CANsendMessage@data+1,w,c
 21535  0128CE  22DA               	addwfc	fsr2h,f,c
 21536  0128D0  50DF               	movf	indf2,w,c
 21537  0128D2  010F               	movlb	15	; () banked
 21538  0128D4  6F37               	movwf	55,b	;volatile
 21539                           
 21540                           ; BSR set to: 15
 21541                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 21542  0128D6  EE20 F002          	lfsr	2,2
 21543  0128DA  502A               	movf	i2CANsendMessage@data,w,c
 21544  0128DC  26D9               	addwf	fsr2l,f,c
 21545  0128DE  502B               	movf	i2CANsendMessage@data+1,w,c
 21546  0128E0  22DA               	addwfc	fsr2h,f,c
 21547  0128E2  50DF               	movf	indf2,w,c
 21548  0128E4  010F               	movlb	15	; () banked
 21549  0128E6  6F38               	movwf	56,b	;volatile
 21550                           
 21551                           ; BSR set to: 15
 21552                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 21553  0128E8  EE20 F003          	lfsr	2,3
 21554  0128EC  502A               	movf	i2CANsendMessage@data,w,c
 21555  0128EE  26D9               	addwf	fsr2l,f,c
 21556  0128F0  502B               	movf	i2CANsendMessage@data+1,w,c
 21557  0128F2  22DA               	addwfc	fsr2h,f,c
 21558  0128F4  50DF               	movf	indf2,w,c
 21559  0128F6  010F               	movlb	15	; () banked
 21560  0128F8  6F39               	movwf	57,b	;volatile
 21561                           
 21562                           ; BSR set to: 15
 21563                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 21564  0128FA  EE20 F004          	lfsr	2,4
 21565  0128FE  502A               	movf	i2CANsendMessage@data,w,c
 21566  012900  26D9               	addwf	fsr2l,f,c
 21567  012902  502B               	movf	i2CANsendMessage@data+1,w,c
 21568  012904  22DA               	addwfc	fsr2h,f,c
 21569  012906  50DF               	movf	indf2,w,c
 21570  012908  010F               	movlb	15	; () banked
 21571  01290A  6F3A               	movwf	58,b	;volatile
 21572                           
 21573                           ; BSR set to: 15
 21574                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 21575  01290C  EE20 F005          	lfsr	2,5
 21576  012910  502A               	movf	i2CANsendMessage@data,w,c
 21577  012912  26D9               	addwf	fsr2l,f,c
 21578  012914  502B               	movf	i2CANsendMessage@data+1,w,c
 21579  012916  22DA               	addwfc	fsr2h,f,c
 21580  012918  50DF               	movf	indf2,w,c
 21581  01291A  010F               	movlb	15	; () banked
 21582  01291C  6F3B               	movwf	59,b	;volatile
 21583                           
 21584                           ; BSR set to: 15
 21585                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 21586  01291E  EE20 F006          	lfsr	2,6
 21587  012922  502A               	movf	i2CANsendMessage@data,w,c
 21588  012924  26D9               	addwf	fsr2l,f,c
 21589  012926  502B               	movf	i2CANsendMessage@data+1,w,c
 21590  012928  22DA               	addwfc	fsr2h,f,c
 21591  01292A  50DF               	movf	indf2,w,c
 21592  01292C  010F               	movlb	15	; () banked
 21593  01292E  6F3C               	movwf	60,b	;volatile
 21594                           
 21595                           ; BSR set to: 15
 21596                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 21597  012930  EE20 F007          	lfsr	2,7
 21598  012934  502A               	movf	i2CANsendMessage@data,w,c
 21599  012936  26D9               	addwf	fsr2l,f,c
 21600  012938  502B               	movf	i2CANsendMessage@data+1,w,c
 21601  01293A  22DA               	addwfc	fsr2h,f,c
 21602  01293C  50DF               	movf	indf2,w,c
 21603  01293E  010F               	movlb	15	; () banked
 21604  012940  6F3D               	movwf	61,b	;volatile
 21605                           
 21606                           ; BSR set to: 15
 21607                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 21608  012942  010F               	movlb	15	; () banked
 21609  012944  8730               	bsf	48,3,b	;volatile
 21610                           
 21611                           ; BSR set to: 15
 21612                           ;inc\CANlib.h: 444: return;
 21613  012946  0012               	return	
 21614  012948                     i2l400:
 21615                           
 21616                           ; BSR set to: 15
 21617                           ;inc\CANlib.h: 445: }
 21618                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 21619  012948  010F               	movlb	15	; () banked
 21620  01294A  B720               	btfsc	32,3,b	;volatile
 21621  01294C  0012               	return	
 21622                           
 21623                           ; BSR set to: 15
 21624                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 21625  01294E  C02C  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 21626                           
 21627                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 21628  012952  AC2D               	btfss	i2CANsendMessage@flags,6,c
 21629  012954  D003               	goto	i2l415
 21630                           
 21631                           ; BSR set to: 15
 21632                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 21633  012956  010F               	movlb	15	; () banked
 21634  012958  8D25               	bsf	37,6,b	;volatile
 21635  01295A  D002               	goto	i2l416
 21636  01295C                     i2l415:
 21637                           
 21638                           ; BSR set to: 15
 21639                           ;inc\CANlib.h: 454: else
 21640                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 21641  01295C  010F               	movlb	15	; () banked
 21642  01295E  9D25               	bcf	37,6,b	;volatile
 21643  012960                     i2l416:
 21644                           
 21645                           ; BSR set to: 15
 21646                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 21647  012960  A62D               	btfss	i2CANsendMessage@flags,3,c
 21648  012962  D066               	goto	i2l417
 21649                           
 21650                           ; BSR set to: 15
 21651                           ;inc\CANlib.h: 458: {
 21652                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 21653  012964  5026               	movf	i2CANsendMessage@identifier,w,c
 21654  012966  6E32               	movwf	i2CANsendMessage@tamp,c
 21655  012968  6A33               	clrf	i2CANsendMessage@tamp+1,c
 21656  01296A  6A34               	clrf	i2CANsendMessage@tamp+2,c
 21657  01296C  6A35               	clrf	i2CANsendMessage@tamp+3,c
 21658                           
 21659                           ; BSR set to: 15
 21660                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 21661  01296E  C032  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 21662                           
 21663                           ; BSR set to: 15
 21664                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 21665  012972  0E00               	movlw	0
 21666  012974  1426               	andwf	i2CANsendMessage@identifier,w,c
 21667  012976  6E32               	movwf	i2CANsendMessage@tamp,c
 21668  012978  0EFF               	movlw	255
 21669  01297A  1427               	andwf	i2CANsendMessage@identifier+1,w,c
 21670  01297C  6E33               	movwf	i2CANsendMessage@tamp+1,c
 21671  01297E  0E00               	movlw	0
 21672  012980  1428               	andwf	i2CANsendMessage@identifier+2,w,c
 21673  012982  6E34               	movwf	i2CANsendMessage@tamp+2,c
 21674  012984  0E00               	movlw	0
 21675  012986  1429               	andwf	i2CANsendMessage@identifier+3,w,c
 21676  012988  6E35               	movwf	i2CANsendMessage@tamp+3,c
 21677                           
 21678                           ; BSR set to: 15
 21679                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 21680  01298A  C032  F02E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 21681  01298E  C033  F02F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 21682  012992  C034  F030         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 21683  012996  C035  F031         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 21684  01299A  C02F  F02E         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 21685  01299E  C030  F02F         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 21686  0129A2  C031  F030         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 21687  0129A6  6A31               	clrf	??i2_CANsendMessage+3,c
 21688  0129A8  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21689  0129AC  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21690  0129B0  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21691  0129B4  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21692                           
 21693                           ; BSR set to: 15
 21694                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 21695  0129B8  C032  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 21696                           
 21697                           ; BSR set to: 15
 21698                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 21699  0129BC  0E00               	movlw	0
 21700  0129BE  010F               	movlb	15	; () banked
 21701  0129C0  6F22               	movwf	34,b	;volatile
 21702                           
 21703                           ; BSR set to: 15
 21704                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 21705  0129C2  010F               	movlb	15	; () banked
 21706  0129C4  8722               	bsf	34,3,b	;volatile
 21707                           
 21708                           ; BSR set to: 15
 21709                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 21710  0129C6  A028               	btfss	i2CANsendMessage@identifier+2,0,c
 21711  0129C8  D002               	goto	i2l418
 21712                           
 21713                           ; BSR set to: 15
 21714                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 21715  0129CA  010F               	movlb	15	; () banked
 21716  0129CC  8122               	bsf	34,0,b	;volatile
 21717  0129CE                     i2l418:
 21718                           
 21719                           ; BSR set to: 15
 21720                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 21721  0129CE  A228               	btfss	i2CANsendMessage@identifier+2,1,c
 21722  0129D0  D002               	goto	i2l419
 21723                           
 21724                           ; BSR set to: 15
 21725                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 21726  0129D2  010F               	movlb	15	; () banked
 21727  0129D4  8322               	bsf	34,1,b	;volatile
 21728  0129D6                     i2l419:
 21729                           
 21730                           ; BSR set to: 15
 21731                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 21732  0129D6  A428               	btfss	i2CANsendMessage@identifier+2,2,c
 21733  0129D8  D002               	goto	i2l420
 21734                           
 21735                           ; BSR set to: 15
 21736                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 21737  0129DA  010F               	movlb	15	; () banked
 21738  0129DC  8B22               	bsf	34,5,b	;volatile
 21739  0129DE                     i2l420:
 21740                           
 21741                           ; BSR set to: 15
 21742                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 21743  0129DE  A628               	btfss	i2CANsendMessage@identifier+2,3,c
 21744  0129E0  D002               	goto	i2l421
 21745                           
 21746                           ; BSR set to: 15
 21747                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 21748  0129E2  010F               	movlb	15	; () banked
 21749  0129E4  8D22               	bsf	34,6,b	;volatile
 21750  0129E6                     i2l421:
 21751                           
 21752                           ; BSR set to: 15
 21753                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 21754  0129E6  A828               	btfss	i2CANsendMessage@identifier+2,4,c
 21755  0129E8  D002               	goto	i2l7657
 21756                           
 21757                           ; BSR set to: 15
 21758                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 21759  0129EA  010F               	movlb	15	; () banked
 21760  0129EC  8F22               	bsf	34,7,b	;volatile
 21761  0129EE                     i2l7657:
 21762                           
 21763                           ; BSR set to: 15
 21764                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 21765  0129EE  C026  F02E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 21766  0129F2  C027  F02F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 21767  0129F6  C028  F030         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 21768  0129FA  C029  F031         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 21769  0129FE  0E16               	movlw	22
 21770  012A00  D005               	goto	i2u983_40
 21771  012A02                     i2u983_45:
 21772  012A02  90D8               	bcf	status,0,c
 21773  012A04  3231               	rrcf	??i2_CANsendMessage+3,f,c
 21774  012A06  3230               	rrcf	??i2_CANsendMessage+2,f,c
 21775  012A08  322F               	rrcf	??i2_CANsendMessage+1,f,c
 21776  012A0A  322E               	rrcf	??i2_CANsendMessage,f,c
 21777  012A0C                     i2u983_40:
 21778  012A0C  2EE8               	decfsz	wreg,f,c
 21779  012A0E  D7F9               	goto	i2u983_45
 21780  012A10  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21781  012A14  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21782  012A18  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21783  012A1C  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21784                           
 21785                           ; BSR set to: 15
 21786                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 21787  012A20  5032               	movf	i2CANsendMessage@tamp,w,c
 21788  012A22  6E32               	movwf	i2CANsendMessage@tamp,c
 21789  012A24  6A33               	clrf	i2CANsendMessage@tamp+1,c
 21790  012A26  6A34               	clrf	i2CANsendMessage@tamp+2,c
 21791  012A28  6A35               	clrf	i2CANsendMessage@tamp+3,c
 21792                           
 21793                           ; BSR set to: 15
 21794                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 21795  012A2A  C032  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 21796                           
 21797                           ;inc\CANlib.h: 483: }
 21798  012A2E  D04D               	goto	i2l7677
 21799  012A30                     i2l417:
 21800                           
 21801                           ; BSR set to: 15
 21802                           ;inc\CANlib.h: 485: else
 21803                           ;inc\CANlib.h: 487: {
 21804                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 21805  012A30  010F               	movlb	15	; () banked
 21806  012A32  9722               	bcf	34,3,b	;volatile
 21807                           
 21808                           ; BSR set to: 15
 21809                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 21810  012A34  C026  F02E         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 21811  012A38  C027  F02F         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 21812  012A3C  C028  F030         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 21813  012A40  C029  F031         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 21814  012A44  0E04               	movlw	4
 21815  012A46  D005               	goto	i2u984_40
 21816  012A48                     i2u984_45:
 21817  012A48  90D8               	bcf	status,0,c
 21818  012A4A  3231               	rrcf	??i2_CANsendMessage+3,f,c
 21819  012A4C  3230               	rrcf	??i2_CANsendMessage+2,f,c
 21820  012A4E  322F               	rrcf	??i2_CANsendMessage+1,f,c
 21821  012A50  322E               	rrcf	??i2_CANsendMessage,f,c
 21822  012A52                     i2u984_40:
 21823  012A52  2EE8               	decfsz	wreg,f,c
 21824  012A54  D7F9               	goto	i2u984_45
 21825  012A56  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21826  012A5A  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21827  012A5E  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21828  012A62  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21829                           
 21830                           ; BSR set to: 15
 21831                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 21832  012A66  5032               	movf	i2CANsendMessage@tamp,w,c
 21833  012A68  6E32               	movwf	i2CANsendMessage@tamp,c
 21834  012A6A  6A33               	clrf	i2CANsendMessage@tamp+1,c
 21835  012A6C  6A34               	clrf	i2CANsendMessage@tamp+2,c
 21836  012A6E  6A35               	clrf	i2CANsendMessage@tamp+3,c
 21837                           
 21838                           ; BSR set to: 15
 21839                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 21840  012A70  C032  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 21841                           
 21842                           ; BSR set to: 15
 21843                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 21844  012A74  0E07               	movlw	7
 21845  012A76  1426               	andwf	i2CANsendMessage@identifier,w,c
 21846  012A78  6E32               	movwf	i2CANsendMessage@tamp,c
 21847  012A7A  0E00               	movlw	0
 21848  012A7C  1427               	andwf	i2CANsendMessage@identifier+1,w,c
 21849  012A7E  6E33               	movwf	i2CANsendMessage@tamp+1,c
 21850  012A80  0E00               	movlw	0
 21851  012A82  1428               	andwf	i2CANsendMessage@identifier+2,w,c
 21852  012A84  6E34               	movwf	i2CANsendMessage@tamp+2,c
 21853  012A86  0E00               	movlw	0
 21854  012A88  1429               	andwf	i2CANsendMessage@identifier+3,w,c
 21855  012A8A  6E35               	movwf	i2CANsendMessage@tamp+3,c
 21856                           
 21857                           ; BSR set to: 15
 21858                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 21859  012A8C  C032  F02E         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 21860  012A90  C033  F02F         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 21861  012A94  C034  F030         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 21862  012A98  C035  F031         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 21863  012A9C  0E05               	movlw	5
 21864  012A9E                     i2u985_45:
 21865  012A9E  90D8               	bcf	status,0,c
 21866  012AA0  362E               	rlcf	??i2_CANsendMessage,f,c
 21867  012AA2  362F               	rlcf	??i2_CANsendMessage+1,f,c
 21868  012AA4  3630               	rlcf	??i2_CANsendMessage+2,f,c
 21869  012AA6  3631               	rlcf	??i2_CANsendMessage+3,f,c
 21870  012AA8  2EE8               	decfsz	wreg,f,c
 21871  012AAA  D7F9               	goto	i2u985_45
 21872  012AAC  C02E  F032         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 21873  012AB0  C02F  F033         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 21874  012AB4  C030  F034         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 21875  012AB8  C031  F035         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 21876                           
 21877                           ; BSR set to: 15
 21878                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 21879  012ABC  010F               	movlb	15	; () banked
 21880  012ABE  5122               	movf	34,w,b	;volatile
 21881  012AC0  0B1F               	andlw	31
 21882  012AC2  010F               	movlb	15	; () banked
 21883  012AC4  6F22               	movwf	34,b	;volatile
 21884                           
 21885                           ; BSR set to: 15
 21886                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 21887  012AC6  C032  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 21888  012ACA                     i2l7677:
 21889                           
 21890                           ; BSR set to: 15
 21891                           ;inc\CANlib.h: 498: }
 21892                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 21893  012ACA  A02D               	btfss	i2CANsendMessage@flags,0,c
 21894  012ACC  D003               	goto	i2l424
 21895                           
 21896                           ; BSR set to: 15
 21897                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 21898  012ACE  010F               	movlb	15	; () banked
 21899  012AD0  8120               	bsf	32,0,b	;volatile
 21900  012AD2  D002               	goto	i2l425
 21901  012AD4                     i2l424:
 21902                           
 21903                           ; BSR set to: 15
 21904                           ;inc\CANlib.h: 502: else
 21905                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 21906  012AD4  010F               	movlb	15	; () banked
 21907  012AD6  9120               	bcf	32,0,b	;volatile
 21908  012AD8                     i2l425:
 21909                           
 21910                           ; BSR set to: 15
 21911                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 21912  012AD8  A22D               	btfss	i2CANsendMessage@flags,1,c
 21913  012ADA  D003               	goto	i2l426
 21914                           
 21915                           ; BSR set to: 15
 21916                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 21917  012ADC  010F               	movlb	15	; () banked
 21918  012ADE  8320               	bsf	32,1,b	;volatile
 21919  012AE0  D002               	goto	i2l7683
 21920  012AE2                     i2l426:
 21921                           
 21922                           ; BSR set to: 15
 21923                           ;inc\CANlib.h: 506: else
 21924                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 21925  012AE2  010F               	movlb	15	; () banked
 21926  012AE4  9320               	bcf	32,1,b	;volatile
 21927  012AE6                     i2l7683:
 21928                           
 21929                           ; BSR set to: 15
 21930                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 21931  012AE6  C02A  FFD9         	movff	i2CANsendMessage@data,fsr2l
 21932  012AEA  C02B  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 21933  012AEE  50DF               	movf	indf2,w,c
 21934  012AF0  010F               	movlb	15	; () banked
 21935  012AF2  6F26               	movwf	38,b	;volatile
 21936                           
 21937                           ; BSR set to: 15
 21938                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 21939  012AF4  EE20 F001          	lfsr	2,1
 21940  012AF8  502A               	movf	i2CANsendMessage@data,w,c
 21941  012AFA  26D9               	addwf	fsr2l,f,c
 21942  012AFC  502B               	movf	i2CANsendMessage@data+1,w,c
 21943  012AFE  22DA               	addwfc	fsr2h,f,c
 21944  012B00  50DF               	movf	indf2,w,c
 21945  012B02  010F               	movlb	15	; () banked
 21946  012B04  6F27               	movwf	39,b	;volatile
 21947                           
 21948                           ; BSR set to: 15
 21949                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 21950  012B06  EE20 F002          	lfsr	2,2
 21951  012B0A  502A               	movf	i2CANsendMessage@data,w,c
 21952  012B0C  26D9               	addwf	fsr2l,f,c
 21953  012B0E  502B               	movf	i2CANsendMessage@data+1,w,c
 21954  012B10  22DA               	addwfc	fsr2h,f,c
 21955  012B12  50DF               	movf	indf2,w,c
 21956  012B14  010F               	movlb	15	; () banked
 21957  012B16  6F28               	movwf	40,b	;volatile
 21958                           
 21959                           ; BSR set to: 15
 21960                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 21961  012B18  EE20 F003          	lfsr	2,3
 21962  012B1C  502A               	movf	i2CANsendMessage@data,w,c
 21963  012B1E  26D9               	addwf	fsr2l,f,c
 21964  012B20  502B               	movf	i2CANsendMessage@data+1,w,c
 21965  012B22  22DA               	addwfc	fsr2h,f,c
 21966  012B24  50DF               	movf	indf2,w,c
 21967  012B26  010F               	movlb	15	; () banked
 21968  012B28  6F29               	movwf	41,b	;volatile
 21969                           
 21970                           ; BSR set to: 15
 21971                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 21972  012B2A  EE20 F004          	lfsr	2,4
 21973  012B2E  502A               	movf	i2CANsendMessage@data,w,c
 21974  012B30  26D9               	addwf	fsr2l,f,c
 21975  012B32  502B               	movf	i2CANsendMessage@data+1,w,c
 21976  012B34  22DA               	addwfc	fsr2h,f,c
 21977  012B36  50DF               	movf	indf2,w,c
 21978  012B38  010F               	movlb	15	; () banked
 21979  012B3A  6F2A               	movwf	42,b	;volatile
 21980                           
 21981                           ; BSR set to: 15
 21982                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 21983  012B3C  EE20 F005          	lfsr	2,5
 21984  012B40  502A               	movf	i2CANsendMessage@data,w,c
 21985  012B42  26D9               	addwf	fsr2l,f,c
 21986  012B44  502B               	movf	i2CANsendMessage@data+1,w,c
 21987  012B46  22DA               	addwfc	fsr2h,f,c
 21988  012B48  50DF               	movf	indf2,w,c
 21989  012B4A  010F               	movlb	15	; () banked
 21990  012B4C  6F2B               	movwf	43,b	;volatile
 21991                           
 21992                           ; BSR set to: 15
 21993                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 21994  012B4E  EE20 F006          	lfsr	2,6
 21995  012B52  502A               	movf	i2CANsendMessage@data,w,c
 21996  012B54  26D9               	addwf	fsr2l,f,c
 21997  012B56  502B               	movf	i2CANsendMessage@data+1,w,c
 21998  012B58  22DA               	addwfc	fsr2h,f,c
 21999  012B5A  50DF               	movf	indf2,w,c
 22000  012B5C  010F               	movlb	15	; () banked
 22001  012B5E  6F2C               	movwf	44,b	;volatile
 22002                           
 22003                           ; BSR set to: 15
 22004                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 22005  012B60  EE20 F007          	lfsr	2,7
 22006  012B64  502A               	movf	i2CANsendMessage@data,w,c
 22007  012B66  26D9               	addwf	fsr2l,f,c
 22008  012B68  502B               	movf	i2CANsendMessage@data+1,w,c
 22009  012B6A  22DA               	addwfc	fsr2h,f,c
 22010  012B6C  50DF               	movf	indf2,w,c
 22011  012B6E  010F               	movlb	15	; () banked
 22012  012B70  6F2D               	movwf	45,b	;volatile
 22013                           
 22014                           ; BSR set to: 15
 22015                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 22016  012B72  010F               	movlb	15	; () banked
 22017  012B74  8720               	bsf	32,3,b	;volatile
 22018                           
 22019                           ; BSR set to: 15
 22020                           ;inc\CANlib.h: 520: return;
 22021  012B76  0012               	return	
 22022  012B78                     __end_ofi2_CANsendMessage:
 22023                           	opt stack 0
 22024                           pclatu	equ	0xFFB
 22025                           pclath	equ	0xFFA
 22026                           tblptru	equ	0xFF8
 22027                           tblptrh	equ	0xFF7
 22028                           tblptrl	equ	0xFF6
 22029                           tablat	equ	0xFF5
 22030                           prodh	equ	0xFF4
 22031                           prodl	equ	0xFF3
 22032                           intcon	equ	0xFF2
 22033                           postinc0	equ	0xFEE
 22034                           fsr0h	equ	0xFEA
 22035                           fsr0l	equ	0xFE9
 22036                           wreg	equ	0xFE8
 22037                           indf1	equ	0xFE7
 22038                           plusw1	equ	0xFE3
 22039                           fsr1h	equ	0xFE2
 22040                           fsr1l	equ	0xFE1
 22041                           bsr	equ	0xFE0
 22042                           indf2	equ	0xFDF
 22043                           postinc2	equ	0xFDE
 22044                           plusw2	equ	0xFDB
 22045                           fsr2h	equ	0xFDA
 22046                           fsr2l	equ	0xFD9
 22047                           status	equ	0xFD8
 22048                           
 22049 ;; *************** function i2_CANisTxReady *****************
 22050 ;; Defined at:
 22051 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 22052 ;; Parameters:    Size  Location     Type
 22053 ;;		None
 22054 ;; Auto vars:     Size  Location     Type
 22055 ;;		None
 22056 ;; Return value:  Size  Location     Type
 22057 ;;                  1    wreg      unsigned char 
 22058 ;; Registers used:
 22059 ;;		wreg, status,2
 22060 ;; Tracked objects:
 22061 ;;		On entry : 0/0
 22062 ;;		On exit  : 0/0
 22063 ;;		Unchanged: 0/0
 22064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22068 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22069 ;;Total ram usage:        1 bytes
 22070 ;; Hardware stack levels used:    1
 22071 ;; This function calls:
 22072 ;;		Nothing
 22073 ;; This function is called by:
 22074 ;;		_ISR_alta
 22075 ;; This function uses a non-reentrant model
 22076 ;;
 22077                           
 22078                           	psect	text60
 22079  0167EE                     __ptext60:
 22080                           	opt stack 0
 22081  0167EE                     i2_CANisTxReady:
 22082                           	opt stack 20
 22083                           
 22084                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 22085                           
 22086                           ; BSR set to: 15
 22087                           ;incstack = 0
 22088  0167EE  0E01               	movlw	1
 22089  0167F0  6E26               	movwf	i2_CANisTxReady$3168,c
 22090  0167F2  010F               	movlb	15	; () banked
 22091  0167F4  A740               	btfss	64,3,b	;volatile
 22092  0167F6  D008               	goto	i2l578
 22093                           
 22094                           ; BSR set to: 15
 22095  0167F8  010F               	movlb	15	; () banked
 22096  0167FA  A730               	btfss	48,3,b	;volatile
 22097  0167FC  D005               	goto	i2l578
 22098                           
 22099                           ; BSR set to: 15
 22100  0167FE  010F               	movlb	15	; () banked
 22101  016800  A720               	btfss	32,3,b	;volatile
 22102  016802  D002               	goto	i2l578
 22103                           
 22104                           ; BSR set to: 15
 22105  016804  0E00               	movlw	0
 22106  016806  6E26               	movwf	i2_CANisTxReady$3168,c
 22107  016808                     i2l578:
 22108                           
 22109                           ; BSR set to: 15
 22110  016808  5026               	movf	i2_CANisTxReady$3168,w,c
 22111  01680A  0012               	return	
 22112  01680C                     __end_ofi2_CANisTxReady:
 22113                           	opt stack 0
 22114                           pclatu	equ	0xFFB
 22115                           pclath	equ	0xFFA
 22116                           tblptru	equ	0xFF8
 22117                           tblptrh	equ	0xFF7
 22118                           tblptrl	equ	0xFF6
 22119                           tablat	equ	0xFF5
 22120                           prodh	equ	0xFF4
 22121                           prodl	equ	0xFF3
 22122                           intcon	equ	0xFF2
 22123                           postinc0	equ	0xFEE
 22124                           fsr0h	equ	0xFEA
 22125                           fsr0l	equ	0xFE9
 22126                           wreg	equ	0xFE8
 22127                           indf1	equ	0xFE7
 22128                           plusw1	equ	0xFE3
 22129                           fsr1h	equ	0xFE2
 22130                           fsr1l	equ	0xFE1
 22131                           bsr	equ	0xFE0
 22132                           indf2	equ	0xFDF
 22133                           postinc2	equ	0xFDE
 22134                           plusw2	equ	0xFDB
 22135                           fsr2h	equ	0xFDA
 22136                           fsr2l	equ	0xFD9
 22137                           status	equ	0xFD8
 22138                           
 22139 ;; *************** function _CANreceiveMessage *****************
 22140 ;; Defined at:
 22141 ;;		line 528 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 22142 ;; Parameters:    Size  Location     Type
 22143 ;;  msg             2    0[COMRAM] PTR struct .
 22144 ;;		 -> msg(15), 
 22145 ;; Auto vars:     Size  Location     Type
 22146 ;;  tamp            1   11[COMRAM] unsigned char 
 22147 ;;  error           1   10[COMRAM] unsigned char 
 22148 ;; Return value:  Size  Location     Type
 22149 ;;                  1    wreg      unsigned char 
 22150 ;; Registers used:
 22151 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22152 ;; Tracked objects:
 22153 ;;		On entry : 0/0
 22154 ;;		On exit  : 0/0
 22155 ;;		Unchanged: 0/0
 22156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22158 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22159 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22160 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22161 ;;Total ram usage:       12 bytes
 22162 ;; Hardware stack levels used:    1
 22163 ;; This function calls:
 22164 ;;		Nothing
 22165 ;; This function is called by:
 22166 ;;		_ISR_alta
 22167 ;; This function uses a non-reentrant model
 22168 ;;
 22169                           
 22170                           	psect	text61
 22171  013092                     __ptext61:
 22172                           	opt stack 0
 22173  013092                     _CANreceiveMessage:
 22174                           	opt stack 20
 22175                           
 22176                           ;inc\CANlib.h: 530: BYTE tamp;
 22177                           ;inc\CANlib.h: 531: BYTE error = 0;
 22178                           
 22179                           ; BSR set to: 15
 22180                           ;incstack = 0
 22181  013092  0E00               	movlw	0
 22182  013094  6E30               	movwf	CANreceiveMessage@error,c
 22183                           
 22184                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 22185  013096  BE74               	btfsc	3956,7,c	;volatile
 22186                           
 22187                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 22188  013098  8030               	bsf	CANreceiveMessage@error,0,c
 22189                           
 22190                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 22191  01309A  BC74               	btfsc	3956,6,c	;volatile
 22192                           
 22193                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 22194  01309C  8230               	bsf	CANreceiveMessage@error,1,c
 22195                           
 22196                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 22197  01309E  010F               	movlb	15	; () banked
 22198  0130A0  AF50               	btfss	80,7,b	;volatile
 22199  0130A2  D143               	goto	i2l432
 22200                           
 22201                           ; BSR set to: 15
 22202                           ;inc\CANlib.h: 541: {
 22203                           ;inc\CANlib.h: 542: msg->identifier = 0;
 22204  0130A4  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22205  0130A8  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22206  0130AC  6ADE               	clrf	postinc2,c
 22207  0130AE  6ADE               	clrf	postinc2,c
 22208  0130B0  6ADE               	clrf	postinc2,c
 22209  0130B2  6ADD               	clrf	postdec2,c
 22210                           
 22211                           ; BSR set to: 15
 22212                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 22213  0130B4  EE20 F004          	lfsr	2,4
 22214  0130B8  5026               	movf	CANreceiveMessage@msg,w,c
 22215  0130BA  26D9               	addwf	fsr2l,f,c
 22216  0130BC  5027               	movf	CANreceiveMessage@msg+1,w,c
 22217  0130BE  22DA               	addwfc	fsr2h,f,c
 22218  0130C0  CF56 FFDF          	movff	3926,indf2	;volatile
 22219                           
 22220                           ; BSR set to: 15
 22221                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 22222  0130C4  EE20 F005          	lfsr	2,5
 22223  0130C8  5026               	movf	CANreceiveMessage@msg,w,c
 22224  0130CA  26D9               	addwf	fsr2l,f,c
 22225  0130CC  5027               	movf	CANreceiveMessage@msg+1,w,c
 22226  0130CE  22DA               	addwfc	fsr2h,f,c
 22227  0130D0  CF57 FFDF          	movff	3927,indf2	;volatile
 22228                           
 22229                           ; BSR set to: 15
 22230                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 22231  0130D4  EE20 F006          	lfsr	2,6
 22232  0130D8  5026               	movf	CANreceiveMessage@msg,w,c
 22233  0130DA  26D9               	addwf	fsr2l,f,c
 22234  0130DC  5027               	movf	CANreceiveMessage@msg+1,w,c
 22235  0130DE  22DA               	addwfc	fsr2h,f,c
 22236  0130E0  CF58 FFDF          	movff	3928,indf2	;volatile
 22237                           
 22238                           ; BSR set to: 15
 22239                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 22240  0130E4  EE20 F007          	lfsr	2,7
 22241  0130E8  5026               	movf	CANreceiveMessage@msg,w,c
 22242  0130EA  26D9               	addwf	fsr2l,f,c
 22243  0130EC  5027               	movf	CANreceiveMessage@msg+1,w,c
 22244  0130EE  22DA               	addwfc	fsr2h,f,c
 22245  0130F0  CF59 FFDF          	movff	3929,indf2	;volatile
 22246                           
 22247                           ; BSR set to: 15
 22248                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 22249  0130F4  EE20 F008          	lfsr	2,8
 22250  0130F8  5026               	movf	CANreceiveMessage@msg,w,c
 22251  0130FA  26D9               	addwf	fsr2l,f,c
 22252  0130FC  5027               	movf	CANreceiveMessage@msg+1,w,c
 22253  0130FE  22DA               	addwfc	fsr2h,f,c
 22254  013100  CF5A FFDF          	movff	3930,indf2	;volatile
 22255                           
 22256                           ; BSR set to: 15
 22257                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 22258  013104  EE20 F009          	lfsr	2,9
 22259  013108  5026               	movf	CANreceiveMessage@msg,w,c
 22260  01310A  26D9               	addwf	fsr2l,f,c
 22261  01310C  5027               	movf	CANreceiveMessage@msg+1,w,c
 22262  01310E  22DA               	addwfc	fsr2h,f,c
 22263  013110  CF5B FFDF          	movff	3931,indf2	;volatile
 22264                           
 22265                           ; BSR set to: 15
 22266                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 22267  013114  EE20 F00A          	lfsr	2,10
 22268  013118  5026               	movf	CANreceiveMessage@msg,w,c
 22269  01311A  26D9               	addwf	fsr2l,f,c
 22270  01311C  5027               	movf	CANreceiveMessage@msg+1,w,c
 22271  01311E  22DA               	addwfc	fsr2h,f,c
 22272  013120  CF5C FFDF          	movff	3932,indf2	;volatile
 22273                           
 22274                           ; BSR set to: 15
 22275                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 22276  013124  EE20 F00B          	lfsr	2,11
 22277  013128  5026               	movf	CANreceiveMessage@msg,w,c
 22278  01312A  26D9               	addwf	fsr2l,f,c
 22279  01312C  5027               	movf	CANreceiveMessage@msg+1,w,c
 22280  01312E  22DA               	addwfc	fsr2h,f,c
 22281  013130  CF5D FFDF          	movff	3933,indf2	;volatile
 22282                           
 22283                           ; BSR set to: 15
 22284                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 22285  013134  EE20 F00E          	lfsr	2,14
 22286  013138  5026               	movf	CANreceiveMessage@msg,w,c
 22287  01313A  26D9               	addwf	fsr2l,f,c
 22288  01313C  5027               	movf	CANreceiveMessage@msg+1,w,c
 22289  01313E  22DA               	addwfc	fsr2h,f,c
 22290  013140  010F               	movlb	15	; () banked
 22291  013142  AD55               	btfss	85,6,b	;volatile
 22292  013144  D002               	goto	i2u891_40
 22293  013146  0E01               	movlw	1
 22294  013148  D001               	goto	i2u891_46
 22295  01314A                     i2u891_40:
 22296  01314A  0E00               	movlw	0
 22297  01314C                     i2u891_46:
 22298  01314C  6EDF               	movwf	indf2,c
 22299                           
 22300                           ; BSR set to: 15
 22301                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 22302  01314E  EE20 F00D          	lfsr	2,13
 22303  013152  5026               	movf	CANreceiveMessage@msg,w,c
 22304  013154  26D9               	addwf	fsr2l,f,c
 22305  013156  5027               	movf	CANreceiveMessage@msg+1,w,c
 22306  013158  22DA               	addwfc	fsr2h,f,c
 22307  01315A  010F               	movlb	15	; () banked
 22308  01315C  5155               	movf	85,w,b	;volatile
 22309  01315E  0B0F               	andlw	15
 22310  013160  6EDF               	movwf	indf2,c
 22311                           
 22312                           ; BSR set to: 15
 22313                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 22314  013162  EE20 F00C          	lfsr	2,12
 22315  013166  5026               	movf	CANreceiveMessage@msg,w,c
 22316  013168  26D9               	addwf	fsr2l,f,c
 22317  01316A  5027               	movf	CANreceiveMessage@msg+1,w,c
 22318  01316C  22DA               	addwfc	fsr2h,f,c
 22319  01316E  010F               	movlb	15	; () banked
 22320  013170  A752               	btfss	82,3,b	;volatile
 22321  013172  D002               	goto	i2u892_40
 22322  013174  0E01               	movlw	1
 22323  013176  D001               	goto	i2u892_46
 22324  013178                     i2u892_40:
 22325  013178  0E00               	movlw	0
 22326  01317A                     i2u892_46:
 22327  01317A  6EDF               	movwf	indf2,c
 22328                           
 22329                           ; BSR set to: 15
 22330                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 22331  01317C  010F               	movlb	15	; () banked
 22332  01317E  B752               	btfsc	82,3,b	;volatile
 22333  013180  D044               	goto	i2l7075
 22334                           
 22335                           ; BSR set to: 15
 22336                           ;inc\CANlib.h: 559: {
 22337                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 22338  013182  CF51 F028          	movff	3921,??_CANreceiveMessage	;volatile
 22339  013186  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22340  013188  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22341  01318A  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22342  01318C  0E03               	movlw	3
 22343  01318E                     i2u894_45:
 22344  01318E  90D8               	bcf	status,0,c
 22345  013190  3628               	rlcf	??_CANreceiveMessage,f,c
 22346  013192  3629               	rlcf	??_CANreceiveMessage+1,f,c
 22347  013194  362A               	rlcf	??_CANreceiveMessage+2,f,c
 22348  013196  362B               	rlcf	??_CANreceiveMessage+3,f,c
 22349  013198  2EE8               	decfsz	wreg,f,c
 22350  01319A  D7F9               	goto	i2u894_45
 22351  01319C  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22352  0131A0  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22353  0131A4  C028  FFDE         	movff	??_CANreceiveMessage,postinc2
 22354  0131A8  C029  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 22355  0131AC  C02A  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 22356  0131B0  C02B  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 22357                           
 22358                           ; BSR set to: 15
 22359                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 22360  0131B4  010F               	movlb	15	; () banked
 22361  0131B6  3952               	swapf	82,w,b	;volatile
 22362  0131B8  42E8               	rrncf	wreg,f,c
 22363  0131BA  0B07               	andlw	7
 22364  0131BC  0B07               	andlw	7
 22365  0131BE  6E31               	movwf	CANreceiveMessage@tamp,c
 22366                           
 22367                           ; BSR set to: 15
 22368                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 22369  0131C0  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22370  0131C4  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22371  0131C8  CFDE F028          	movff	postinc2,??_CANreceiveMessage
 22372  0131CC  CFDE F029          	movff	postinc2,??_CANreceiveMessage+1
 22373  0131D0  CFDE F02A          	movff	postinc2,??_CANreceiveMessage+2
 22374  0131D4  CFDE F02B          	movff	postinc2,??_CANreceiveMessage+3
 22375  0131D8  5031               	movf	CANreceiveMessage@tamp,w,c
 22376  0131DA  2428               	addwf	??_CANreceiveMessage,w,c
 22377  0131DC  6E2C               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 22378  0131DE  0E00               	movlw	0
 22379  0131E0  2029               	addwfc	??_CANreceiveMessage+1,w,c
 22380  0131E2  6E2D               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 22381  0131E4  0E00               	movlw	0
 22382  0131E6  202A               	addwfc	??_CANreceiveMessage+2,w,c
 22383  0131E8  6E2E               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 22384  0131EA  0E00               	movlw	0
 22385  0131EC  202B               	addwfc	??_CANreceiveMessage+3,w,c
 22386  0131EE  6E2F               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 22387  0131F0  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22388  0131F4  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22389  0131F8  C02C  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 22390  0131FC  C02D  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 22391  013200  C02E  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 22392  013204  C02F  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 22393                           
 22394                           ;inc\CANlib.h: 563: }
 22395  013208  D08D               	goto	i2l7101
 22396  01320A                     i2l7075:
 22397                           
 22398                           ; BSR set to: 15
 22399                           ;inc\CANlib.h: 564: else
 22400                           ;inc\CANlib.h: 565: {
 22401                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 22402  01320A  CF54 F028          	movff	3924,??_CANreceiveMessage	;volatile
 22403  01320E  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22404  013210  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22405  013212  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22406  013214  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22407  013218  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22408  01321C  C028  FFDE         	movff	??_CANreceiveMessage,postinc2
 22409  013220  C029  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 22410  013224  C02A  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 22411  013228  C02B  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 22412                           
 22413                           ; BSR set to: 15
 22414                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 22415  01322C  CF53 F028          	movff	3923,??_CANreceiveMessage	;volatile
 22416  013230  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22417  013232  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22418  013234  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22419  013236  C02A  F02B         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 22420  01323A  C029  F02A         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 22421  01323E  C028  F029         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 22422  013242  6A28               	clrf	??_CANreceiveMessage,c
 22423  013244  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22424  013248  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22425  01324C  5028               	movf	??_CANreceiveMessage,w,c
 22426  01324E  26DE               	addwf	postinc2,f,c
 22427  013250  5029               	movf	??_CANreceiveMessage+1,w,c
 22428  013252  22DE               	addwfc	postinc2,f,c
 22429  013254  502A               	movf	??_CANreceiveMessage+2,w,c
 22430  013256  22DE               	addwfc	postinc2,f,c
 22431  013258  502B               	movf	??_CANreceiveMessage+3,w,c
 22432  01325A  22DE               	addwfc	postinc2,f,c
 22433                           
 22434                           ; BSR set to: 15
 22435                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 22436  01325C  010F               	movlb	15	; () banked
 22437  01325E  A152               	btfss	82,0,b	;volatile
 22438  013260  D00C               	goto	i2l7083
 22439                           
 22440                           ; BSR set to: 15
 22441                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 22442  013262  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22443  013266  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22444  01326A  0E00               	movlw	0
 22445  01326C  12DE               	iorwf	postinc2,f,c
 22446  01326E  0E00               	movlw	0
 22447  013270  12DE               	iorwf	postinc2,f,c
 22448  013272  0E01               	movlw	1
 22449  013274  12DE               	iorwf	postinc2,f,c
 22450  013276  0E00               	movlw	0
 22451  013278  12DE               	iorwf	postinc2,f,c
 22452  01327A                     i2l7083:
 22453                           
 22454                           ; BSR set to: 15
 22455                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 22456  01327A  010F               	movlb	15	; () banked
 22457  01327C  A352               	btfss	82,1,b	;volatile
 22458  01327E  D00C               	goto	i2l7087
 22459                           
 22460                           ; BSR set to: 15
 22461                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 22462  013280  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22463  013284  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22464  013288  0E00               	movlw	0
 22465  01328A  12DE               	iorwf	postinc2,f,c
 22466  01328C  0E00               	movlw	0
 22467  01328E  12DE               	iorwf	postinc2,f,c
 22468  013290  0E02               	movlw	2
 22469  013292  12DE               	iorwf	postinc2,f,c
 22470  013294  0E00               	movlw	0
 22471  013296  12DE               	iorwf	postinc2,f,c
 22472  013298                     i2l7087:
 22473                           
 22474                           ; BSR set to: 15
 22475                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 22476  013298  010F               	movlb	15	; () banked
 22477  01329A  AB52               	btfss	82,5,b	;volatile
 22478  01329C  D00C               	goto	i2l7091
 22479                           
 22480                           ; BSR set to: 15
 22481                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 22482  01329E  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22483  0132A2  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22484  0132A6  0E00               	movlw	0
 22485  0132A8  12DE               	iorwf	postinc2,f,c
 22486  0132AA  0E00               	movlw	0
 22487  0132AC  12DE               	iorwf	postinc2,f,c
 22488  0132AE  0E04               	movlw	4
 22489  0132B0  12DE               	iorwf	postinc2,f,c
 22490  0132B2  0E00               	movlw	0
 22491  0132B4  12DE               	iorwf	postinc2,f,c
 22492  0132B6                     i2l7091:
 22493                           
 22494                           ; BSR set to: 15
 22495                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 22496  0132B6  010F               	movlb	15	; () banked
 22497  0132B8  AD52               	btfss	82,6,b	;volatile
 22498  0132BA  D00C               	goto	i2l7095
 22499                           
 22500                           ; BSR set to: 15
 22501                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 22502  0132BC  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22503  0132C0  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22504  0132C4  0E00               	movlw	0
 22505  0132C6  12DE               	iorwf	postinc2,f,c
 22506  0132C8  0E00               	movlw	0
 22507  0132CA  12DE               	iorwf	postinc2,f,c
 22508  0132CC  0E08               	movlw	8
 22509  0132CE  12DE               	iorwf	postinc2,f,c
 22510  0132D0  0E00               	movlw	0
 22511  0132D2  12DE               	iorwf	postinc2,f,c
 22512  0132D4                     i2l7095:
 22513                           
 22514                           ; BSR set to: 15
 22515                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 22516  0132D4  010F               	movlb	15	; () banked
 22517  0132D6  AF52               	btfss	82,7,b	;volatile
 22518  0132D8  D00C               	goto	i2l7099
 22519                           
 22520                           ; BSR set to: 15
 22521                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 22522  0132DA  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22523  0132DE  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22524  0132E2  0E00               	movlw	0
 22525  0132E4  12DE               	iorwf	postinc2,f,c
 22526  0132E6  0E00               	movlw	0
 22527  0132E8  12DE               	iorwf	postinc2,f,c
 22528  0132EA  0E10               	movlw	16
 22529  0132EC  12DE               	iorwf	postinc2,f,c
 22530  0132EE  0E00               	movlw	0
 22531  0132F0  12DE               	iorwf	postinc2,f,c
 22532  0132F2                     i2l7099:
 22533                           
 22534                           ; BSR set to: 15
 22535                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 22536  0132F2  CF51 F028          	movff	3921,??_CANreceiveMessage	;volatile
 22537  0132F6  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22538  0132F8  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22539  0132FA  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22540  0132FC  0E15               	movlw	21
 22541  0132FE                     i2u900_45:
 22542  0132FE  90D8               	bcf	status,0,c
 22543  013300  3628               	rlcf	??_CANreceiveMessage,f,c
 22544  013302  3629               	rlcf	??_CANreceiveMessage+1,f,c
 22545  013304  362A               	rlcf	??_CANreceiveMessage+2,f,c
 22546  013306  362B               	rlcf	??_CANreceiveMessage+3,f,c
 22547  013308  2EE8               	decfsz	wreg,f,c
 22548  01330A  D7F9               	goto	i2u900_45
 22549  01330C  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22550  013310  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22551  013314  5028               	movf	??_CANreceiveMessage,w,c
 22552  013316  12DE               	iorwf	postinc2,f,c
 22553  013318  5029               	movf	??_CANreceiveMessage+1,w,c
 22554  01331A  12DE               	iorwf	postinc2,f,c
 22555  01331C  502A               	movf	??_CANreceiveMessage+2,w,c
 22556  01331E  12DE               	iorwf	postinc2,f,c
 22557  013320  502B               	movf	??_CANreceiveMessage+3,w,c
 22558  013322  12DE               	iorwf	postinc2,f,c
 22559  013324                     i2l7101:
 22560                           
 22561                           ; BSR set to: 15
 22562                           ;inc\CANlib.h: 581: }
 22563                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 22564  013324  010F               	movlb	15	; () banked
 22565  013326  9F50               	bcf	80,7,b	;volatile
 22566                           
 22567                           ; BSR set to: 15
 22568                           ;inc\CANlib.h: 584: return (error);
 22569                           ;	Return value of _CANreceiveMessage is never used
 22570  013328  0012               	return	
 22571  01332A                     i2l432:
 22572                           
 22573                           ; BSR set to: 15
 22574                           ;inc\CANlib.h: 585: }
 22575                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 22576  01332A  AE60               	btfss	3936,7,c	;volatile
 22577  01332C  0012               	return	
 22578                           
 22579                           ; BSR set to: 15
 22580                           ;inc\CANlib.h: 588: {
 22581                           ;inc\CANlib.h: 589: msg->identifier = 0;
 22582  01332E  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22583  013332  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22584  013336  6ADE               	clrf	postinc2,c
 22585  013338  6ADE               	clrf	postinc2,c
 22586  01333A  6ADE               	clrf	postinc2,c
 22587  01333C  6ADD               	clrf	postdec2,c
 22588                           
 22589                           ; BSR set to: 15
 22590                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 22591  01333E  EE20 F004          	lfsr	2,4
 22592  013342  5026               	movf	CANreceiveMessage@msg,w,c
 22593  013344  26D9               	addwf	fsr2l,f,c
 22594  013346  5027               	movf	CANreceiveMessage@msg+1,w,c
 22595  013348  22DA               	addwfc	fsr2h,f,c
 22596  01334A  CF66 FFDF          	movff	3942,indf2	;volatile
 22597                           
 22598                           ; BSR set to: 15
 22599                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 22600  01334E  EE20 F005          	lfsr	2,5
 22601  013352  5026               	movf	CANreceiveMessage@msg,w,c
 22602  013354  26D9               	addwf	fsr2l,f,c
 22603  013356  5027               	movf	CANreceiveMessage@msg+1,w,c
 22604  013358  22DA               	addwfc	fsr2h,f,c
 22605  01335A  CF67 FFDF          	movff	3943,indf2	;volatile
 22606                           
 22607                           ; BSR set to: 15
 22608                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 22609  01335E  EE20 F006          	lfsr	2,6
 22610  013362  5026               	movf	CANreceiveMessage@msg,w,c
 22611  013364  26D9               	addwf	fsr2l,f,c
 22612  013366  5027               	movf	CANreceiveMessage@msg+1,w,c
 22613  013368  22DA               	addwfc	fsr2h,f,c
 22614  01336A  CF68 FFDF          	movff	3944,indf2	;volatile
 22615                           
 22616                           ; BSR set to: 15
 22617                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 22618  01336E  EE20 F007          	lfsr	2,7
 22619  013372  5026               	movf	CANreceiveMessage@msg,w,c
 22620  013374  26D9               	addwf	fsr2l,f,c
 22621  013376  5027               	movf	CANreceiveMessage@msg+1,w,c
 22622  013378  22DA               	addwfc	fsr2h,f,c
 22623  01337A  CF69 FFDF          	movff	3945,indf2	;volatile
 22624                           
 22625                           ; BSR set to: 15
 22626                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 22627  01337E  EE20 F008          	lfsr	2,8
 22628  013382  5026               	movf	CANreceiveMessage@msg,w,c
 22629  013384  26D9               	addwf	fsr2l,f,c
 22630  013386  5027               	movf	CANreceiveMessage@msg+1,w,c
 22631  013388  22DA               	addwfc	fsr2h,f,c
 22632  01338A  CF6A FFDF          	movff	3946,indf2	;volatile
 22633                           
 22634                           ; BSR set to: 15
 22635                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 22636  01338E  EE20 F009          	lfsr	2,9
 22637  013392  5026               	movf	CANreceiveMessage@msg,w,c
 22638  013394  26D9               	addwf	fsr2l,f,c
 22639  013396  5027               	movf	CANreceiveMessage@msg+1,w,c
 22640  013398  22DA               	addwfc	fsr2h,f,c
 22641  01339A  CF6B FFDF          	movff	3947,indf2	;volatile
 22642                           
 22643                           ; BSR set to: 15
 22644                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 22645  01339E  EE20 F00A          	lfsr	2,10
 22646  0133A2  5026               	movf	CANreceiveMessage@msg,w,c
 22647  0133A4  26D9               	addwf	fsr2l,f,c
 22648  0133A6  5027               	movf	CANreceiveMessage@msg+1,w,c
 22649  0133A8  22DA               	addwfc	fsr2h,f,c
 22650  0133AA  CF6C FFDF          	movff	3948,indf2	;volatile
 22651                           
 22652                           ; BSR set to: 15
 22653                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 22654  0133AE  EE20 F00B          	lfsr	2,11
 22655  0133B2  5026               	movf	CANreceiveMessage@msg,w,c
 22656  0133B4  26D9               	addwf	fsr2l,f,c
 22657  0133B6  5027               	movf	CANreceiveMessage@msg+1,w,c
 22658  0133B8  22DA               	addwfc	fsr2h,f,c
 22659  0133BA  CF6D FFDF          	movff	3949,indf2	;volatile
 22660                           
 22661                           ; BSR set to: 15
 22662                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 22663  0133BE  EE20 F00E          	lfsr	2,14
 22664  0133C2  5026               	movf	CANreceiveMessage@msg,w,c
 22665  0133C4  26D9               	addwf	fsr2l,f,c
 22666  0133C6  5027               	movf	CANreceiveMessage@msg+1,w,c
 22667  0133C8  22DA               	addwfc	fsr2h,f,c
 22668  0133CA  AC65               	btfss	3941,6,c	;volatile
 22669  0133CC  D002               	goto	i2u902_40
 22670  0133CE  0E01               	movlw	1
 22671  0133D0  D001               	goto	i2u902_46
 22672  0133D2                     i2u902_40:
 22673  0133D2  0E00               	movlw	0
 22674  0133D4                     i2u902_46:
 22675  0133D4  6EDF               	movwf	indf2,c
 22676                           
 22677                           ; BSR set to: 15
 22678                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 22679  0133D6  EE20 F00D          	lfsr	2,13
 22680  0133DA  5026               	movf	CANreceiveMessage@msg,w,c
 22681  0133DC  26D9               	addwf	fsr2l,f,c
 22682  0133DE  5027               	movf	CANreceiveMessage@msg+1,w,c
 22683  0133E0  22DA               	addwfc	fsr2h,f,c
 22684  0133E2  5065               	movf	3941,w,c	;volatile
 22685  0133E4  0B0F               	andlw	15
 22686  0133E6  6EDF               	movwf	indf2,c
 22687                           
 22688                           ; BSR set to: 15
 22689                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 22690  0133E8  EE20 F00C          	lfsr	2,12
 22691  0133EC  5026               	movf	CANreceiveMessage@msg,w,c
 22692  0133EE  26D9               	addwf	fsr2l,f,c
 22693  0133F0  5027               	movf	CANreceiveMessage@msg+1,w,c
 22694  0133F2  22DA               	addwfc	fsr2h,f,c
 22695  0133F4  A662               	btfss	3938,3,c	;volatile
 22696  0133F6  D002               	goto	i2u903_40
 22697  0133F8  0E01               	movlw	1
 22698  0133FA  D001               	goto	i2u903_46
 22699  0133FC                     i2u903_40:
 22700  0133FC  0E00               	movlw	0
 22701  0133FE                     i2u903_46:
 22702  0133FE  6EDF               	movwf	indf2,c
 22703                           
 22704                           ; BSR set to: 15
 22705                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 22706  013400  B662               	btfsc	3938,3,c	;volatile
 22707  013402  D043               	goto	i2l7137
 22708                           
 22709                           ; BSR set to: 15
 22710                           ;inc\CANlib.h: 606: {
 22711                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 22712  013404  CF61 F028          	movff	3937,??_CANreceiveMessage	;volatile
 22713  013408  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22714  01340A  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22715  01340C  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22716  01340E  0E03               	movlw	3
 22717  013410                     i2u905_45:
 22718  013410  90D8               	bcf	status,0,c
 22719  013412  3628               	rlcf	??_CANreceiveMessage,f,c
 22720  013414  3629               	rlcf	??_CANreceiveMessage+1,f,c
 22721  013416  362A               	rlcf	??_CANreceiveMessage+2,f,c
 22722  013418  362B               	rlcf	??_CANreceiveMessage+3,f,c
 22723  01341A  2EE8               	decfsz	wreg,f,c
 22724  01341C  D7F9               	goto	i2u905_45
 22725  01341E  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22726  013422  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22727  013426  C028  FFDE         	movff	??_CANreceiveMessage,postinc2
 22728  01342A  C029  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 22729  01342E  C02A  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 22730  013432  C02B  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 22731                           
 22732                           ; BSR set to: 15
 22733                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 22734  013436  3862               	swapf	3938,w,c	;volatile
 22735  013438  42E8               	rrncf	wreg,f,c
 22736  01343A  0B07               	andlw	7
 22737  01343C  0B07               	andlw	7
 22738  01343E  6E31               	movwf	CANreceiveMessage@tamp,c
 22739                           
 22740                           ; BSR set to: 15
 22741                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 22742  013440  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22743  013444  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22744  013448  CFDE F028          	movff	postinc2,??_CANreceiveMessage
 22745  01344C  CFDE F029          	movff	postinc2,??_CANreceiveMessage+1
 22746  013450  CFDE F02A          	movff	postinc2,??_CANreceiveMessage+2
 22747  013454  CFDE F02B          	movff	postinc2,??_CANreceiveMessage+3
 22748  013458  5031               	movf	CANreceiveMessage@tamp,w,c
 22749  01345A  2428               	addwf	??_CANreceiveMessage,w,c
 22750  01345C  6E2C               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 22751  01345E  0E00               	movlw	0
 22752  013460  2029               	addwfc	??_CANreceiveMessage+1,w,c
 22753  013462  6E2D               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 22754  013464  0E00               	movlw	0
 22755  013466  202A               	addwfc	??_CANreceiveMessage+2,w,c
 22756  013468  6E2E               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 22757  01346A  0E00               	movlw	0
 22758  01346C  202B               	addwfc	??_CANreceiveMessage+3,w,c
 22759  01346E  6E2F               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 22760  013470  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22761  013474  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22762  013478  C02C  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 22763  01347C  C02D  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 22764  013480  C02E  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 22765  013484  C02F  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 22766                           
 22767                           ;inc\CANlib.h: 610: }
 22768  013488  D088               	goto	i2l7163
 22769  01348A                     i2l7137:
 22770                           
 22771                           ; BSR set to: 15
 22772                           ;inc\CANlib.h: 611: else
 22773                           ;inc\CANlib.h: 612: {
 22774                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 22775  01348A  CF64 F028          	movff	3940,??_CANreceiveMessage	;volatile
 22776  01348E  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22777  013490  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22778  013492  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22779  013494  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22780  013498  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22781  01349C  C028  FFDE         	movff	??_CANreceiveMessage,postinc2
 22782  0134A0  C029  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 22783  0134A4  C02A  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 22784  0134A8  C02B  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 22785                           
 22786                           ; BSR set to: 15
 22787                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 22788  0134AC  CF63 F028          	movff	3939,??_CANreceiveMessage	;volatile
 22789  0134B0  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22790  0134B2  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22791  0134B4  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22792  0134B6  C02A  F02B         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 22793  0134BA  C029  F02A         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 22794  0134BE  C028  F029         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 22795  0134C2  6A28               	clrf	??_CANreceiveMessage,c
 22796  0134C4  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22797  0134C8  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22798  0134CC  5028               	movf	??_CANreceiveMessage,w,c
 22799  0134CE  26DE               	addwf	postinc2,f,c
 22800  0134D0  5029               	movf	??_CANreceiveMessage+1,w,c
 22801  0134D2  22DE               	addwfc	postinc2,f,c
 22802  0134D4  502A               	movf	??_CANreceiveMessage+2,w,c
 22803  0134D6  22DE               	addwfc	postinc2,f,c
 22804  0134D8  502B               	movf	??_CANreceiveMessage+3,w,c
 22805  0134DA  22DE               	addwfc	postinc2,f,c
 22806                           
 22807                           ; BSR set to: 15
 22808                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 22809  0134DC  A062               	btfss	3938,0,c	;volatile
 22810  0134DE  D00C               	goto	i2l7145
 22811                           
 22812                           ; BSR set to: 15
 22813                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 22814  0134E0  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22815  0134E4  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22816  0134E8  0E00               	movlw	0
 22817  0134EA  12DE               	iorwf	postinc2,f,c
 22818  0134EC  0E00               	movlw	0
 22819  0134EE  12DE               	iorwf	postinc2,f,c
 22820  0134F0  0E01               	movlw	1
 22821  0134F2  12DE               	iorwf	postinc2,f,c
 22822  0134F4  0E00               	movlw	0
 22823  0134F6  12DE               	iorwf	postinc2,f,c
 22824  0134F8                     i2l7145:
 22825                           
 22826                           ; BSR set to: 15
 22827                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 22828  0134F8  A262               	btfss	3938,1,c	;volatile
 22829  0134FA  D00C               	goto	i2l7149
 22830                           
 22831                           ; BSR set to: 15
 22832                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 22833  0134FC  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22834  013500  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22835  013504  0E00               	movlw	0
 22836  013506  12DE               	iorwf	postinc2,f,c
 22837  013508  0E00               	movlw	0
 22838  01350A  12DE               	iorwf	postinc2,f,c
 22839  01350C  0E02               	movlw	2
 22840  01350E  12DE               	iorwf	postinc2,f,c
 22841  013510  0E00               	movlw	0
 22842  013512  12DE               	iorwf	postinc2,f,c
 22843  013514                     i2l7149:
 22844                           
 22845                           ; BSR set to: 15
 22846                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 22847  013514  AA62               	btfss	3938,5,c	;volatile
 22848  013516  D00C               	goto	i2l7153
 22849                           
 22850                           ; BSR set to: 15
 22851                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 22852  013518  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22853  01351C  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22854  013520  0E00               	movlw	0
 22855  013522  12DE               	iorwf	postinc2,f,c
 22856  013524  0E00               	movlw	0
 22857  013526  12DE               	iorwf	postinc2,f,c
 22858  013528  0E04               	movlw	4
 22859  01352A  12DE               	iorwf	postinc2,f,c
 22860  01352C  0E00               	movlw	0
 22861  01352E  12DE               	iorwf	postinc2,f,c
 22862  013530                     i2l7153:
 22863                           
 22864                           ; BSR set to: 15
 22865                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 22866  013530  AC62               	btfss	3938,6,c	;volatile
 22867  013532  D00C               	goto	i2l7157
 22868                           
 22869                           ; BSR set to: 15
 22870                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 22871  013534  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22872  013538  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22873  01353C  0E00               	movlw	0
 22874  01353E  12DE               	iorwf	postinc2,f,c
 22875  013540  0E00               	movlw	0
 22876  013542  12DE               	iorwf	postinc2,f,c
 22877  013544  0E08               	movlw	8
 22878  013546  12DE               	iorwf	postinc2,f,c
 22879  013548  0E00               	movlw	0
 22880  01354A  12DE               	iorwf	postinc2,f,c
 22881  01354C                     i2l7157:
 22882                           
 22883                           ; BSR set to: 15
 22884                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 22885  01354C  AE62               	btfss	3938,7,c	;volatile
 22886  01354E  D00C               	goto	i2l7161
 22887                           
 22888                           ; BSR set to: 15
 22889                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 22890  013550  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22891  013554  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22892  013558  0E00               	movlw	0
 22893  01355A  12DE               	iorwf	postinc2,f,c
 22894  01355C  0E00               	movlw	0
 22895  01355E  12DE               	iorwf	postinc2,f,c
 22896  013560  0E10               	movlw	16
 22897  013562  12DE               	iorwf	postinc2,f,c
 22898  013564  0E00               	movlw	0
 22899  013566  12DE               	iorwf	postinc2,f,c
 22900  013568                     i2l7161:
 22901                           
 22902                           ; BSR set to: 15
 22903                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 22904  013568  CF61 F028          	movff	3937,??_CANreceiveMessage	;volatile
 22905  01356C  6A29               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22906  01356E  6A2A               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22907  013570  6A2B               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22908  013572  0E15               	movlw	21
 22909  013574                     i2u911_45:
 22910  013574  90D8               	bcf	status,0,c
 22911  013576  3628               	rlcf	??_CANreceiveMessage,f,c
 22912  013578  3629               	rlcf	??_CANreceiveMessage+1,f,c
 22913  01357A  362A               	rlcf	??_CANreceiveMessage+2,f,c
 22914  01357C  362B               	rlcf	??_CANreceiveMessage+3,f,c
 22915  01357E  2EE8               	decfsz	wreg,f,c
 22916  013580  D7F9               	goto	i2u911_45
 22917  013582  C026  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22918  013586  C027  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22919  01358A  5028               	movf	??_CANreceiveMessage,w,c
 22920  01358C  12DE               	iorwf	postinc2,f,c
 22921  01358E  5029               	movf	??_CANreceiveMessage+1,w,c
 22922  013590  12DE               	iorwf	postinc2,f,c
 22923  013592  502A               	movf	??_CANreceiveMessage+2,w,c
 22924  013594  12DE               	iorwf	postinc2,f,c
 22925  013596  502B               	movf	??_CANreceiveMessage+3,w,c
 22926  013598  12DE               	iorwf	postinc2,f,c
 22927  01359A                     i2l7163:
 22928                           
 22929                           ; BSR set to: 15
 22930                           ;inc\CANlib.h: 629: }
 22931                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 22932  01359A  9E60               	bcf	3936,7,c	;volatile
 22933                           
 22934                           ; BSR set to: 15
 22935                           ;inc\CANlib.h: 632: return (error);
 22936                           ;	Return value of _CANreceiveMessage is never used
 22937  01359C  0012               	return	
 22938  01359E                     __end_of_CANreceiveMessage:
 22939                           	opt stack 0
 22940                           pclatu	equ	0xFFB
 22941                           pclath	equ	0xFFA
 22942                           tblptru	equ	0xFF8
 22943                           tblptrh	equ	0xFF7
 22944                           tblptrl	equ	0xFF6
 22945                           tablat	equ	0xFF5
 22946                           prodh	equ	0xFF4
 22947                           prodl	equ	0xFF3
 22948                           intcon	equ	0xFF2
 22949                           postinc0	equ	0xFEE
 22950                           fsr0h	equ	0xFEA
 22951                           fsr0l	equ	0xFE9
 22952                           wreg	equ	0xFE8
 22953                           indf1	equ	0xFE7
 22954                           plusw1	equ	0xFE3
 22955                           fsr1h	equ	0xFE2
 22956                           fsr1l	equ	0xFE1
 22957                           bsr	equ	0xFE0
 22958                           indf2	equ	0xFDF
 22959                           postinc2	equ	0xFDE
 22960                           postdec2	equ	0xFDD
 22961                           plusw2	equ	0xFDB
 22962                           fsr2h	equ	0xFDA
 22963                           fsr2l	equ	0xFD9
 22964                           status	equ	0xFD8
 22965                           
 22966 ;; *************** function _CANisRxReady *****************
 22967 ;; Defined at:
 22968 ;;		line 1163 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 22969 ;; Parameters:    Size  Location     Type
 22970 ;;		None
 22971 ;; Auto vars:     Size  Location     Type
 22972 ;;		None
 22973 ;; Return value:  Size  Location     Type
 22974 ;;                  1    wreg      unsigned char 
 22975 ;; Registers used:
 22976 ;;		wreg, status,2
 22977 ;; Tracked objects:
 22978 ;;		On entry : 0/0
 22979 ;;		On exit  : 0/0
 22980 ;;		Unchanged: 0/0
 22981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22985 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22986 ;;Total ram usage:        1 bytes
 22987 ;; Hardware stack levels used:    1
 22988 ;; This function calls:
 22989 ;;		Nothing
 22990 ;; This function is called by:
 22991 ;;		_ISR_alta
 22992 ;; This function uses a non-reentrant model
 22993 ;;
 22994                           
 22995                           	psect	text62
 22996  016892                     __ptext62:
 22997                           	opt stack 0
 22998  016892                     _CANisRxReady:
 22999                           	opt stack 20
 23000                           
 23001                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 23002                           
 23003                           ; BSR set to: 15
 23004                           ;incstack = 0
 23005  016892  0E01               	movlw	1
 23006  016894  6E26               	movwf	_CANisRxReady$3170,c
 23007  016896  BE60               	btfsc	3936,7,c	;volatile
 23008  016898  D005               	goto	i2l583
 23009  01689A  010F               	movlb	15	; () banked
 23010  01689C  BF50               	btfsc	80,7,b	;volatile
 23011  01689E  D002               	goto	i2l583
 23012                           
 23013                           ; BSR set to: 15
 23014  0168A0  0E00               	movlw	0
 23015  0168A2  6E26               	movwf	_CANisRxReady$3170,c
 23016  0168A4                     i2l583:
 23017  0168A4  5026               	movf	_CANisRxReady$3170,w,c
 23018  0168A6  0012               	return	
 23019  0168A8                     __end_of_CANisRxReady:
 23020                           	opt stack 0
 23021                           pclatu	equ	0xFFB
 23022                           pclath	equ	0xFFA
 23023                           tblptru	equ	0xFF8
 23024                           tblptrh	equ	0xFF7
 23025                           tblptrl	equ	0xFF6
 23026                           tablat	equ	0xFF5
 23027                           prodh	equ	0xFF4
 23028                           prodl	equ	0xFF3
 23029                           intcon	equ	0xFF2
 23030                           postinc0	equ	0xFEE
 23031                           fsr0h	equ	0xFEA
 23032                           fsr0l	equ	0xFE9
 23033                           wreg	equ	0xFE8
 23034                           indf1	equ	0xFE7
 23035                           plusw1	equ	0xFE3
 23036                           fsr1h	equ	0xFE2
 23037                           fsr1l	equ	0xFE1
 23038                           bsr	equ	0xFE0
 23039                           indf2	equ	0xFDF
 23040                           postinc2	equ	0xFDE
 23041                           postdec2	equ	0xFDD
 23042                           plusw2	equ	0xFDB
 23043                           fsr2h	equ	0xFDA
 23044                           fsr2l	equ	0xFD9
 23045                           status	equ	0xFD8
 23046                           pclatu	equ	0xFFB
 23047                           pclath	equ	0xFFA
 23048                           tblptru	equ	0xFF8
 23049                           tblptrh	equ	0xFF7
 23050                           tblptrl	equ	0xFF6
 23051                           tablat	equ	0xFF5
 23052                           prodh	equ	0xFF4
 23053                           prodl	equ	0xFF3
 23054                           intcon	equ	0xFF2
 23055                           postinc0	equ	0xFEE
 23056                           fsr0h	equ	0xFEA
 23057                           fsr0l	equ	0xFE9
 23058                           wreg	equ	0xFE8
 23059                           indf1	equ	0xFE7
 23060                           plusw1	equ	0xFE3
 23061                           fsr1h	equ	0xFE2
 23062                           fsr1l	equ	0xFE1
 23063                           bsr	equ	0xFE0
 23064                           indf2	equ	0xFDF
 23065                           postinc2	equ	0xFDE
 23066                           postdec2	equ	0xFDD
 23067                           plusw2	equ	0xFDB
 23068                           fsr2h	equ	0xFDA
 23069                           fsr2l	equ	0xFD9
 23070                           status	equ	0xFD8
 23071                           
 23072                           	psect	rparam
 23073  0000                     pclatu	equ	0xFFB
 23074                           pclath	equ	0xFFA
 23075                           tblptru	equ	0xFF8
 23076                           tblptrh	equ	0xFF7
 23077                           tblptrl	equ	0xFF6
 23078                           tablat	equ	0xFF5
 23079                           prodh	equ	0xFF4
 23080                           prodl	equ	0xFF3
 23081                           intcon	equ	0xFF2
 23082                           postinc0	equ	0xFEE
 23083                           fsr0h	equ	0xFEA
 23084                           fsr0l	equ	0xFE9
 23085                           wreg	equ	0xFE8
 23086                           indf1	equ	0xFE7
 23087                           plusw1	equ	0xFE3
 23088                           fsr1h	equ	0xFE2
 23089                           fsr1l	equ	0xFE1
 23090                           bsr	equ	0xFE0
 23091                           indf2	equ	0xFDF
 23092                           postinc2	equ	0xFDE
 23093                           postdec2	equ	0xFDD
 23094                           plusw2	equ	0xFDB
 23095                           fsr2h	equ	0xFDA
 23096                           fsr2l	equ	0xFD9
 23097                           status	equ	0xFD8
 23098                           
 23099                           	psect	temp
 23100  00004B                     btemp:
 23101                           	opt stack 0
 23102  00004B                     	ds	1
 23103  0000                     int$flags	set	btemp
 23104                           pclatu	equ	0xFFB
 23105                           pclath	equ	0xFFA
 23106                           tblptru	equ	0xFF8
 23107                           tblptrh	equ	0xFF7
 23108                           tblptrl	equ	0xFF6
 23109                           tablat	equ	0xFF5
 23110                           prodh	equ	0xFF4
 23111                           prodl	equ	0xFF3
 23112                           intcon	equ	0xFF2
 23113                           postinc0	equ	0xFEE
 23114                           fsr0h	equ	0xFEA
 23115                           fsr0l	equ	0xFE9
 23116                           wreg	equ	0xFE8
 23117                           indf1	equ	0xFE7
 23118                           plusw1	equ	0xFE3
 23119                           fsr1h	equ	0xFE2
 23120                           fsr1l	equ	0xFE1
 23121                           bsr	equ	0xFE0
 23122                           indf2	equ	0xFDF
 23123                           postinc2	equ	0xFDE
 23124                           postdec2	equ	0xFDD
 23125                           plusw2	equ	0xFDB
 23126                           fsr2h	equ	0xFDA
 23127                           fsr2l	equ	0xFD9
 23128                           status	equ	0xFD8


Data Sizes:
    Strings     674
    Constant    144
    Data        1
    BSS         145
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      74
    BANK0           160    109     141
    BANK1           256     33     110
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_46(CODE[21]), STR_45(CODE[21]), STR_44(CODE[21]), STR_43(CODE[21]), 
		 -> STR_42(CODE[21]), STR_41(CODE[21]), STR_40(CODE[21]), STR_39(CODE[21]), 
		 -> STR_38(CODE[21]), STR_37(CODE[21]), STR_36(CODE[21]), STR_35(CODE[21]), 
		 -> STR_34(CODE[21]), STR_33(CODE[21]), STR_32(CODE[21]), STR_31(CODE[21]), 
		 -> STR_30(CODE[21]), STR_29(CODE[21]), STR_28(CODE[21]), STR_27(CODE[21]), 
		 -> STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[21]), STR_23(CODE[21]), 
		 -> STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[21]), STR_19(CODE[21]), 
		 -> STR_18(CODE[8]), STR_17(CODE[8]), STR_16(CODE[14]), STR_15(CODE[21]), 
		 -> STR_14(CODE[5]), STR_13(CODE[5]), STR_12(CODE[5]), STR_11(CODE[21]), 
		 -> STR_10(CODE[7]), STR_9(CODE[14]), STR_8(CODE[17]), STR_7(CODE[12]), 
		 -> STR_6(CODE[21]), STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK1[8]), park_assist_state(BANK1[8]), data_steering(BANK1[8]), data_brake(BANK1[8]), 
		 -> data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_CANsendMessage

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Parking->_LCD_write_message
    _LCD_Park->_LCD_write_message
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___fldiv->___xxtofl
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_Gap->_LCD_write_message
    _LCD_Error->_LCD_write_message
    _LCD_End->_LCD_write_message
    _Credits->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Tx->_CANsendMessage

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  619502
                                             25 BANK1      8     8      0
                             _CAN_Tx
                       _CANisTxReady
                     _CANsendMessage
                            _Credits
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                            _LCD_End
                          _LCD_Error
                            _LCD_Gap
                        _LCD_Handler
                           _LCD_Park
                        _LCD_Parking
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___awdiv
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   51321
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             31 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             17 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             17 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Parking                                          0     0      0   58217
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Park                                             0     0      0   58217
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  146565
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41932
                                             99 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9580
                                             56 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             17 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9301
                                             56 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4771
                                             31 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    2293
                                             23 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             17 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             17 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     784
                                             17 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             17 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             17 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     722
                                             89 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             89 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    3518
                                             69 BANK0     20    12      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             56 BANK0      4     0      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             17 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             31 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   12052
                                             41 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             33 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             24 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             17 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             17 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9519
                                             34 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18137
                                             32 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    8956
                                             29 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_Gap                                              0     0      0   58217
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Error                                            0     0      0   58217
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_End                                              0     0      0   58217
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      68
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Credits                                              0     0      0   58217
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2   12830
                                             34 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    9300
                                             29 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   27796
                                             31 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8919
                                             29 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8780
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8811
                                             29 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8780
                                             25 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0    1264
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1264
                                             23 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _CAN_Tx                                               0     0      0    4619
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4595
                                             17 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_bassa                                           17    17      0       0
                                              0 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_alta                                           18    18      0    3428
                                             16 COMRAM    18    18      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (11) i2_CANsendMessage                                   16     8      8    2243
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (11) i2_CANisTxReady                                      1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CANreceiveMessage                                  12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (11) _CANisRxReady                                        1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Tx
     _CANisTxReady
     _CANsendMessage
   _CANisTxReady
   _CANsendMessage
   _Credits
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_End
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Error
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Gap
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_Park
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Parking
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___awdiv
     ___awmod (ARG)
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     21      6E       7       43.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6D      8D       5       88.1%
BITCOMRAM           5E      0       3       0        3.2%
COMRAM              5E     22      4A       1       78.7%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     145      20        0.0%
DATA                 0      0     145       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Jun 18 15:32:54 2016

                     ___fldiv@aexp 0097                       ___fldiv@bexp 0096  
                                _x 0255                                  _y 0256  
                                _z 0257          __size_of_delay_set_quartz 000A  
             __end_of_CANSetFilter 0B06                       ?_LCD_Handler 0026  
                     ___fldiv@sign 008B                       ___awdiv@sign 007C  
                               _id 0005                                 bsr 000FE0  
              ___wmul@multiplicand 0073                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       ?_LCD_Parking 0026  
                     __CFG_CP3$OFF 000000                        __CFG_OSC$HS 000000  
                     __CFG_CP4$OFF 000000                       __CFG_CP5$OFF 000000  
                      _row_refresh 024D                                l400 2264  
                              l401 1FF6                                l410 21B0  
                              l402 1FFA                                l411 21B4  
                              l403 20F2                                l420 231A  
                              l412 21C0                                l404 2082  
                              l500 062A                                l421 2324  
                              l405 208C                                l501 062E  
                              l406 2096                                l510 073A  
                              l502 063A                                l415 227A  
                              l407 20A0                                l511 0746  
                              l503 063E                                l424 2434  
                              l416 227E                                l520 0852  
                              l512 074A                                l504 064A  
                              l425 2438                                l417 2376  
                              l521 0856                                l513 0756  
                              l426 2444                                l418 2306  
                              l530 0962                                l522 0862  
                              l514 075A                                l419 2310  
                              l531 096E                                l523 0866  
                              l515 0766                                l507 0726  
                              l540 0A7A                                l532 0972  
                              l524 0872                                l508 072A  
                              l460 44D6                                l380 50BA  
                              l541 0A7E                                l533 097E  
                              l525 0876                                l509 0736  
                              l461 44DA                                l381 50C4  
                              l390 1E08                                l542 0A8A  
                              l534 0982                                l526 0882  
                              l518 0842                                l470 45E2  
                              l462 44E6                                l454 44A6  
                              l391 1E12                                l543 0A8E  
                              l535 098E                                l519 0846  
                              l471 45EE                                l455 44AA  
                              l392 1E1C                                l544 0A9A  
                              l536 0992                                l472 45F2  
                              l456 44B6                                l385 1FE0  
                              l545 0A9E                                l537 099E  
                              l529 095E                                l473 45FE  
                              l465 45BE                                l457 44BA  
                              l386 1D72                                l546 0AAA  
                              l490 0514                                l466 45C2  
                              l458 44C6                                l395 1F2C  
                              l387 1D76                                l547 0AAE  
                              l491 0520                                l467 45CE  
                              l459 44CA                                l396 1F30  
                              l388 1E6E                                l548 0ABA  
                              l492 0524                                l468 45D2  
                      _pwr_credits 024C                                l397 1F3C  
                              l389 1DFE                                l493 0530  
                              l485 04F0                                l469 45DE  
                              l486 04F4                                l830 0CF2  
                              l822 0CE6                                l591 6644  
                              l487 0500                                l496 060A  
                              l488 0504                                l497 060E  
                              l489 0510                                l578 67C6  
                              l914 4AE4                                l498 061A  
                              l834 0E9A                                l499 061E  
                              l847 0E70                                l839 0DCA  
                              l944 6170                                l961 6868  
                              l881 1352                                l954 6814  
                              l866 10E0                                l883 134E  
                              l859 10D8                                l973 6478  
                              l975 647A                                l895 146A  
                              l968 684C                                l898 1472  
             ??_PWR_Button_Polling 0071                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                        ?_LCD_cursor 007D  
                              _dir 00E7                                _msg 010A  
                              _str 0119                       ___awmod@sign 0076  
                              prod 000FF3                                wreg 000FE8  
                     ___flmul@aexp 008C                       ___flmul@bexp 0091  
                     ___flmul@sign 008B                       ___flmul@temp 0096  
                     ___flmul@prod 0092                    __end_of_LCD_Gap 633E  
                     __CFG_LVP$OFF 000000                    __end_of_LCD_End 63A2  
           __size_of_LCD_goto_line 00EC                       ___fltol@exp1 00C2  
                     __CFG_WDT$OFF 000000                               l1071 1ABC  
                             l1400 5510                               l1306 5662  
                             l1600 38F2                               l1542 6208  
                             l1463 5CEE                               l1552 645E  
                             l1296 5828                               l1609 3986  
                             l1705 4F82                               l1393 544C  
                             l1650 41C0                               l1642 40C2  
                             l1706 4F9A                               l1394 5490  
                             l5013 61B8                               l5015 61C4  
                             l1639 411A                               l1583 377E  
                             l1648 4152                               l1584 3772  
                             l5025 61FA                               l5017 61CA  
                             l5041 6450                               l5033 641A  
                             l1585 373E                               l1489 5DC6  
                             l5035 6426                               l1499 6060  
                             l1691 4E7A                               l1676 3D96  
                             l5037 642C                               l1669 3AFA  
                             l1686 3EA8                               l1678 3E04  
                             l1698 4F26                               l7011 423E  
                             l7021 4284                               l7013 4252  
                 _battery_charging 0245                               l7023 4288  
                             l7015 4274                               l7007 4210  
                             l5507 6884                               l6421 1F40  
                             l5541 441A                               l5525 4364  
                             l6415 1F20                               l5623 00BE  
                             l6351 50C8                               l5713 045E  
                             l5641 0176                               l8203 35BC  
                             l6355 50D0                               l5477 5C66  
                             l8221 3616                               l8213 35EA  
                             l5741 0534                               l5573 4530  
                             l6357 5114                               l6349 50B2  
                             l6471 20AA                               l5487 5CA8  
                             l9007 521A                               l8311 37E0  
                             l8303 37A2                               l9111 15E6  
                             l9103 15A2                               l5911 0ABE  
                             l5815 07B0                               l5567 44EA  
                             l7281 5DD8                               l7249 646E  
                             l9009 5222                               l9025 52FA  
                             l8313 37E6                               l8321 3802  
                             l8233 364E                               l8209 35E0  
                             l9121 1638                               l9105 15CC  
                             l5809 076A                               l6547 232E  
                             l6491 21A4                               l6395 1E26  
                             l7291 5E20                               l8163 6636  
                             l9019 52BA                               l8331 38D2  
                             l8227 362A                               l8411 3A88  
                             l5843 0886                               l5747 057A  
                             l5659 0230                               l6573 2448  
                             l9029 5372                               l6901 3F0A  
                             l8317 37F0                               l8245 3682  
                             l8237 3658                               l8413 3A8E  
                             l8405 3A64                               l9221 1AC0  
                             l5781 0694                               l5677 02EA  
                             l6567 2428                               l7295 5E58  
                             l6911 3F38                               l8511 3E7A  
                             l8431 3AE8                               l8423 3ABE  
                             l8415 3AA0                               l9215 1A8A  
                             l9207 1A62                               l9151 1788  
                             l5775 064E                               l5695 03A4  
                             l5599 4602                               l6497 21C4  
                             l6921 3F68                               l8345 393A  
                             l8601 5FBA                               l8521 3EC8  
                             l8513 3E8E                               l9233 1B52  
                             l9217 1A9E                               l9209 1A70  
                             l9161 182C                               l9153 17C4  
                             l9145 1740                               l9137 16BC  
                             l9081 14F2                               l5849 08CC  
                             l8611 64C8                               l5955 657A  
                             l6931 3F96                               l6907 3F2E  
                             l8339 3924                               l8355 395A  
                             l8275 36BE                               l8523 3ED2  
                             l8507 3E54                               l8435 3B0E  
                             l9251 1C6E                               l9243 1C46  
                             l9155 17DA                               l9075 14D8  
                             l5883 09E8                               l8621 5AEC  
                             l8365 3980                               l8349 3946  
                             l8357 3960                               l8293 3762  
                             l8605 5FCE                               l8429 3AE2  
                             l9245 1C54                               l9229 1AF0  
                             l9181 1946                               l9165 185E  
                             l9149 1772                               l9253 1C7C  
                             l9093 1572                               l5877 09A2  
                             l8623 5B1E                               l8615 64FA  
                             l8631 6784                               l6951 4018  
                             l6943 3FEA                               l6927 3F8C  
                             l8383 3A10                               l8375 39DC  
                             l8287 3752                               l8551 5BFC  
                             l8543 5BD2                               l8439 3B22  
                             l9271 1D26                               l9263 1CCA  
                             l9175 18C8                               l9095 158C  
                             l8625 5B50                               l6961 4096  
                             l8289 3758                               l8561 5C32  
                             l8553 5C02                               l8537 5BBC  
                             l8481 3D80                               l9193 1992  
                             l9089 1528                               l9273 1D2C  
                             l9425 4A60                               l9601 0BD4  
                             l8619 5ABA                               l8627 5B82  
                             l8635 6798                               l8395 3A34  
                             l8387 3A1C                               l8379 39EE  
                             l8803 57A6                               l8651 47F0  
                             l9267 1CFA                               l9259 1CA2  
                             l9179 1940                               l9099 159C  
                             l9275 1D4E                               l9427 4A70  
                             l6981 413C                               l8389 3A20  
                             l8901 5A86                               l8725 53F8  
                             l8549 5BF0                               l8565 5C40  
                             l8581 5F52                               l8709 6778  
                             l9197 19BE                               l9429 4A72  
                             l6975 4116                               l8815 57DE  
                             l8719 53BE                               l8591 5F82  
                             l8487 3DAA                               l9199 19C6  
                             l9455 4AFC                               l9447 4AC0  
                             l9439 4A92                               l9631 0D0C  
                             l9607 0C6C                               l9623 0CD8  
                             l6969 40CE                               l8905 5AA2  
                             l8825 580E                               l8569 5C54  
                             l8593 5F88                               l8585 5F62  
                             l8497 3DFE                               l8673 2D08  
                             l9481 4B96                               l9449 4AD2  
                             l9705 0F0C                               l9641 0D32  
                             l9609 0CB2                               l6987 4166  
                             l8843 55BE                               l8915 5D4A  
                             l8827 581E                               l8819 57F2  
                             l8755 54C6                               l8659 48E8  
                             l8691 2F8E                               l8683 2E0C  
                             l9475 4B5E                               l9707 0F0E  
                             l9619 0CC6                               l6997 41BA  
                             l8853 56AE                               l8861 6678  
                             l8917 5D5A                               l8781 56FE  
                             l8765 54F6                               l8597 5FAC  
                             l8589 5F76                               l9477 4B70  
                             l9805 1374                               l9741 1042  
                             l9733 0F8A                               l9709 0F10  
                             l9629 0D00                               l8847 5610  
                             l8839 5570                               l8871 59CE  
                             l8927 5DB4                               l8919 5D60  
                             l8943 604E                               l8935 5FF4  
                             l8775 56D8                               l8767 5506  
                             l8759 54DA                               l8679 2DDA  
                             l9487 4BB2                               l9399 4940  
                             l9823 1428                               l9751 10D0  
                             l9727 0F50                               l9567 0B40  
                             l8937 6004                               l8961 4EBA  
                             l8953 4E8A                               l8697 3060  
                             l9809 1388                               l9761 11BC  
                             l9745 10A8                               l9649 0D72  
                             l8891 5A50                               l8939 600A  
                             l8971 4F64                               l8963 4ECA  
                             l8795 5752                               l9851 14B8  
                             l9835 1452                               l9763 11C4  
                             l9747 10AE                               l9659 0D8C  
                             l9667 0DCC                               l8973 4F74  
                             l8965 4F08                               l9853 14BC  
                             l9845 1478                               l9829 143A  
                             l9837 145A                               l9773 11F6  
                             l9677 0E74                               l8887 5A3C  
                             l8959 4EB2                               STR_1 FF6A  
                             STR_2 FF40                               l8993 66C2  
                             l8897 5A6C                               l8985 4FEC  
                             l9769 11E2                               l9777 1206  
                             l9697 0ECC                               STR_3 FE1A  
                             STR_4 FF6A                               l8899 5A7C  
                             STR_5 FFFA                               STR_6 FF55  
                             l8997 66DC                               l9797 12E2  
                             l9789 128C                               STR_7 FFC8  
                             STR_8 FFA9                               STR_9 FFBA  
                             _LATA 000F89                               _LATB 000F8A  
                             _LATC 000F8B                               _LATD 000F8C  
                             _LATE 000F8D                               u6320 4396  
                             u7210 0ADE                               u7130 09C2  
                             u7050 08A6                               u6410 450A  
                             u6325 438A                               u7215 0AD2  
                             u7135 09B6                               u7055 089A  
                             u6415 44FE                               u6335 43F6  
                             u8040 20CA                               u6600 01AC  
                             u6520 003A                               u6280 42E0  
                             u8050 2116                  _F2_Button_Polling 6844  
                             u8045 20BE                               u6605 01A0  
                             u6525 002E                               u6285 42D4  
                             u8055 210A                               u6615 020C  
                             u6535 009A                               u6295 4340  
                             u6720 03DA                               u6640 0266  
                             u6560 00F2                               u8065 2176  
                             u8170 234E                               u9210 6822  
                             u6810 0554                               u6490 4622  
                             u8180 239A                               u6725 03CE  
                             u6645 025A                               u6565 00E6  
                             u9310 685A                               u8175 2342  
                             u6815 0548                               u6735 043A  
                             u6655 02C6                               u6575 0152  
                             u6495 4616                               u9160 649C  
                             u6680 0320                               u8185 238E  
                             u9225 6824                               u8195 23FA  
                             u9260 6876                               u9325 685C  
                             u6685 0314                               u7910 1E46  
                             u9166 649E                               u6695 0380  
                             u7920 1E92                               u6970 078A  
                             u6890 066E                               u7915 1E3A  
                             u9275 6878                               u7925 1E86  
                             u7935 1EF2                               u6975 077E  
                             u6895 0662                               u8850 4224  
              __size_of_CANSetMask 039E                       ?_LCD_goto_xy 0080  
                             _data 0125                               _main 0B06  
                             _itoa 6550                 ?_F2_Button_Polling 0026  
        __size_of_LCD_send_command 003A                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               indf1 000FE7  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               btemp 004B  
                             _utoa 5C5E                 __size_of_LCD_Error 0092  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 00C0  
                    __CFG_IESO$OFF 000000                    ___fldiv@new_exp 0090  
               __size_of_LCD_clear 0032                       _sprintf$4194 014D  
                    __CFG_MCLRE$ON 000000                    __end_of_Credits 6406  
                     ___param_bank 000010                ??_F2_Button_Polling 0071  
         __end_of_LCD_enable_pulse 67EE                   _CANOperationMode 687C  
                     _Can_Tx_Force 0240                   __end_of_LCD_Park 62DA  
                  _space_available 024E            __size_of_LCD_initialize 016E  
       __size_of_CANreceiveMessage 050C                      ___fltol@sign1 00C1  
                  __end_of___fladd 3A46                              ?_main 0026  
                  __end_of___fldiv 42AC                              ?_itoa 0081  
                  __end_of___awdiv 5C5E                    __end_of___flneg 668A  
                            STR_10 FFE4                              STR_11 FD5D  
                            STR_12 FFF0                              STR_20 FF94  
                            STR_13 FFF5                              STR_21 FF16  
                            STR_14 FFEB                              STR_22 FF7F  
                            STR_30 FEEC                              STR_31 FF01  
                            STR_15 FED7                              STR_23 FEC2  
                            STR_16 FFBA                              STR_32 FF6A  
                            STR_24 FE59                              STR_40 FE2F  
                            STR_33 FF16                              STR_25 FF16  
                            STR_17 FFD4                              STR_41 FD87  
                            STR_18 FFDC                              STR_26 FEAD  
                            STR_34 FE98                              STR_42 FDB1  
                            STR_43 FF2B                              STR_27 FE6E  
                            STR_19 FE44                              STR_35 FDC6  
                            STR_44 FE05                              STR_28 FDDB  
                            STR_36 FD9C                    __end_of___awmod 5FD8  
                            STR_37 FF16                              STR_29 FF16  
                            STR_45 FE83                              STR_38 FE98  
                            STR_46 FDF0                              STR_39 FD72  
                  __end_of___flmul 3EEC                    __end_of___flsub 6550  
                  __end_of___fltol 5AB4                    __end_of___lldiv 5DD8  
                            ?_utoa 0078                              u11310 3D22  
                            u12111 51CE                              u11315 3D16  
                  ___awdiv@divisor 0079                              u13030 10CC  
                            u12400 1AB4                    __end_of___llmod 6072  
                            u13130 1346                              u10805 65EC  
                            u10806 65EE                              u11390 3E68  
                            u10815 65F8                              u10816 65FA  
                            u10825 6604                              u10826 6606  
                            u10930 3708                              u10835 6610  
                            u11651 539A                              u10836 6612  
                            u10940 3720                              u13180 1402  
                            u12700 0C54                              u10950 3722  
                            u12710 0C74                              u11671 53D4  
                            u12720 0C98                              _T3CON 000FB1  
                            u12706 0C56                              u12716 0C76  
                            u12726 0C9A                              u13287 6638  
                            u11880 59EE                              u12920 0E54  
                            u12680 0C38                              u12930 0E7C  
                            u11885 59E2                              u12926 0E56  
                            u12936 0E7E                              u12880 0E30  
                  __end_of___lwdiv 6212                    __end_of___lwmod 6468  
                            i2l400 2948                              i2l401 272C  
                            i2l410 28A4                              i2l402 2730  
                            i2l411 28A8                              i2l403 2800  
                            i2l420 29DE                              i2l412 28B2  
                            i2l404 279E                              i2l421 29E6  
                            i2l405 27A6                              i2l406 27AE  
                            i2l415 295C                              i2l407 27B6  
                            i2l432 332A                              i2l424 2AD4  
                            i2l416 2960                              i2l425 2AD8  
                            i2l417 2A30                              i1l817 0078  
                            i2l426 2AE2                              i2l418 29CE  
                            i2l419 29D6                              i2l390 2576  
                            i2l391 257E                              i2l392 2586  
                            i2l385 2718                              i2l386 24FC  
                            i2l395 2674                              i2l387 2500  
                            i2l396 2678                              i2l388 25D0  
                            i2l397 2682                              i2l389 256E  
                            i2l813 4DF4                              i2l583 68A4  
                            i2l578 6808                              i2l796 4DF0  
                  ___awdiv@counter 007B                              _TMR3H 000FB3  
                            _TMR3L 000FB2                  _CANisRxReady$3170 0026  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                    __CFG_WRT4$OFF 000000                 __size_of_ISR_bassa 00A8  
                    __CFG_WRT5$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
               CANInitialize@flags 0083                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                     __CFG_EBTR4$OFF 000000  
                 __end_of_ISR_alta 4E30                     __CFG_EBTR5$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                              _check 00D5  
                   __CFG_EBTRB$OFF 000000          __end_of_F2_Button_Polling 6860  
                  __end_of_dpowers FD5D                              _scale 2B78  
                  __end_of_isdigit 6782          __size_of_LCD_shift_cursor 004C  
                   __pbitbssCOMRAM 0240               __end_of_CANisRxReady 68A8  
                            tablat 000FF5               __end_of_CANisTxReady 67CC  
                            plusw1 000FE3                              plusw2 000FDB  
                            utoa@c 0080                              utoa@v 007E  
                            status 000FD8                    __end_of_sprintf 1D5C  
              __size_of_LCD_cursor 0032                    __initialization 6598  
                     __end_of_main 14C8                       __end_of_itoa 6598  
    __size_of_board_initialization 00A4                      _LCD_goto_line 5AB4  
                     __end_of_utoa 5D1C                  ?_Joystick_Polling 0026  
               ??_Joystick_Polling 0071                  ?_LCD_write_string 0082  
                           ??_main 0166                             ??_itoa 0087  
                           ??_utoa 007E          __size_ofi2_CANsendMessage 0690  
                    __activetblptr 000003                  __end_of_LCD_Error 619A  
                        ??_LCD_Gap 0084                          ??_LCD_End 0084  
                   _JoystickValues 00DD                 ??_LCD_write_string 0084  
             __size_of__tdiv_to_l_ 019E                  _CANisTxReady$3168 0071  
                __end_of_LCD_clear 6758              i2CANsendMessage@flags 002D  
           LCD_write_string@buffer 0082                             _ADCON1 000FC1  
                           _CANCON 000F6F                   ___llmod@dividend 0071  
                           ?_scale 0098                             _ADRESH 000FC4  
                 ___awdiv@dividend 0077                             _CAN_Tx 5DD8  
                  __CFG_BBSIZ$1024 000000                             i2l7101 3324  
                           i2l7161 3568                             i2l7153 3530  
                           i2l7145 34F8                             i2l7137 348A  
                           i2l7163 359A                             i2l7091 32B6  
                           i2l7083 327A                             i2l7075 320A  
                           i2l7157 354C                             i2l7149 3514  
                           i2l7095 32D4                             i2l7087 3298  
                           i2l7601 289A                             i2l7505 258E  
                           i2l7099 32F2                             i2l7531 2686  
                           i2l7525 266A                             i2l7607 28B6  
                           i2l7801 4D66                             i2l7811 4D94  
                           i2l7581 27BE                             i2l7821 4DD4  
                           i2l7815 4DC2                             i2l7743 4C1E  
                           i2l7657 29EE                             i2l7737 4BFC  
                           i2l7683 2AE6                             i2l7763 4CA4  
                           i2l7755 4C80                             i2l7677 2ACA  
                           i2l7791 4D2E                             i2l7777 4CE4  
                           i2l7769 4CBA                             i2l7795 4D44  
                           i2l7787 4D10                             _RXB0D0 000F66  
                           _RXB0D1 000F67                             _RXB0D2 000F68  
                           _RXB0D3 000F69                             _RXB0D4 000F6A  
                           _RXB1D0 000F56                             _RXB0D5 000F6B  
                           _RXB1D1 000F57                             _RXB0D6 000F6C  
                           _RXB1D2 000F58                             _RXB0D7 000F6D  
                           _RXB1D3 000F59                             _RXB1D4 000F5A  
                           _RXB1D5 000F5B                             _RXB1D6 000F5C  
                           _RXB1D7 000F5D                             _TXB0D0 000F46  
                           _TXB0D1 000F47                             _TXB0D2 000F48  
                           _TXB0D3 000F49                             _TXB1D0 000F36  
                           _TXB0D4 000F4A                             _TXB1D1 000F37  
                           _TXB0D5 000F4B                             _TXB1D2 000F38  
                           _TXB0D6 000F4C                             _TXB1D3 000F39  
                           _TXB0D7 000F4D                             _TXB2D0 000F26  
                           _TXB1D4 000F3A                             _TXB2D1 000F27  
                           _TXB1D5 000F3B                             _TXB2D2 000F28  
                           _TXB1D6 000F3C                             _TXB2D3 000F29  
                           _TXB1D7 000F3D                             _TXB2D4 000F2A  
                           _TXB2D5 000F2B                             _TXB2D6 000F2C  
                           _TXB2D7 000F2D                 CANsendMessage@data 0075  
                        ??_Credits 0084                 CANsendMessage@tamp 007D  
                 __end_of___xxtofl 4FFE                    _switch_position 00EB  
                 __end_of_delay_ms 6652              __size_of_CANSetFilter 0B06  
                   __CFG_XINST$OFF 000000                  __end_of_ISR_bassa 00C0  
                 __end_of__powers_ FD35                     ?_LCD_goto_line 0026  
                           ___flge 5522                          ??___fladd 00AD  
                 _delay_set_quartz 68A8                             ___wmul 668A  
                        ??___fldiv 0087                          ??___awdiv 007B  
                        ??___flneg 009C                     __CFG_STVREN$ON 000000  
                        ??___awmod 0075                          ??___flmul 0087  
                        ??___flsub 00C1                          ??___fltol 00BD  
                        ??___lldiv 0079                          ??___llmod 0079  
                        ??___lwdiv 0075                       ??_CANSetMask 0076  
                        ??___lwmod 0075            __size_of_LCD_write_char 0096  
                           _fround 464A     LCD_initialize@quartz_frequency 007F  
                           clear_0 659E                             clear_1 65AA  
                           clear_2 65BC                   ___awdiv@quotient 007D  
                  ___awmod@divisor 0073               __size_of_LCD_Handler 0284  
                  ___awmod@counter 0075                    __CFG_BOREN$BOHW 000000  
                _JoystickConstants 00CD                             itoa@cp 0087  
                        ??_isdigit 0071               __size_of_LCD_Parking 0064  
                     __mediumconst FCCC                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
       __size_of_F2_Button_Polling 001C                          ??_sprintf 00CB  
                     _CANSetFilter 0000                         ___flge@ff1 0071  
                       ___flge@ff2 0075                       ___xxtofl@arg 007B  
                     ___xxtofl@exp 007A                       ___xxtofl@val 0071  
                       __accesstop 0060            __end_of__initialization 65D4  
               __end_of_CANSetMask 464A                          ?_LCD_Park 0026  
                  __CFG_PBADEN$OFF 000000                         ___flneg@f1 0098  
                 _LCD_send_command 65DE                      ___rparam_used 000001  
LCD_write_integer@number_of_digits 008B                         ___fltol@f1 00B9  
             __size_of_LCD_goto_xy 001C                     __pcstackCOMRAM 0026  
                     __pidataBANK0 68B2                          ?_ISR_alta 0026  
                     LCD_goto_xy@x 0081                       LCD_goto_xy@y 0080  
                    __end_of_scale 3092                     _LCD_initialize 583A  
                _LCD_write_integer 51C4                  _LCD_write_message 66C0  
            CANSetFilter@numBuffer 007A                 ?_LCD_write_integer 0089  
           LCD_write_integer@index 0098                 ?_LCD_write_message 0082  
                       __div_to_l_ 56B2                       ??_LCD_cursor 007E  
           LCD_write_integer@value 0089      LCD_write_integer@convertedInt 0092  
                _space_gap_reached 024F                       _actual_speed 00DF  
            __size_of_CANisRxReady 0016              __size_of_CANisTxReady 0024  
              ??_LCD_write_integer 008D                    __div_to_l_@exp1 007E  
              ??_LCD_write_message 0084                    __div_to_l_@cntr 007D  
                          ??_scale 009C                   _LCD_shift_cursor 64BC  
                  __div_to_l_@quot 0079           __end_of_CANOperationMode 6892  
                          ?_CAN_Tx 0026                         __pbssBANK0 00CD  
                       __pbssBANK1 0100                         _data_brake 012D  
                       ??_LCD_Park 0084            __size_of_CANsendMessage 078C  
                       _data_speed 0135                      __div_to_l_@f1 0071  
                    __div_to_l_@f2 0075                    ??_LCD_goto_line 007D  
               __end_of_LCD_cursor 6726             __end_of_LCD_initialize 59A8  
                          ?___flge 0071                            ?___wmul 0071  
                       ??_ISR_alta 0036          __end_of_LCD_write_integer 5384  
        __end_of_LCD_write_message 66F4                  ?_LCD_enable_pulse 0026  
                          ?_fround 0098                       _CANisRxReady 6892  
                          _CANSTAT 000F6E                 ??_LCD_enable_pulse 0079  
                     _CANisTxReady 67A8                            _BRGCON1 000F70  
                          _BRGCON2 000F71                            _BRGCON3 000F72  
                 i2_CANsendMessage 24E8        __size_of_PWR_Button_Polling 001C  
                          _LCD_Gap 62DA                            _LCD_End 633E  
                        ?___xxtofl 0071            __size_ofi2_CANisTxReady 001E  
           __size_of_CANInitialize 01C6                   LCD_cursor@active 007E  
                        ?_delay_ms 0077                            _RXB0DLC 000F65  
                          _RXB1DLC 000F55                            _RXB0CON 000F60  
                          _RXB1CON 000F50                            _TXB0DLC 000F45  
                          _TXB1DLC 000F35                            _TXB2DLC 000F25  
              CANsendMessage@flags 0078                  _parking_message_E 024A  
                  __size_of_CAN_Tx 00BA                            _Credits 63A2  
                __end_of__npowers_ FD01                            __Hparam 0000  
                       _left_speed 001F                         _scale$4193 009C  
                          __Lparam 0000                   delay_ms@value_ms 0077  
                  ?_LCD_initialize 0026                    __size_of___flge 0190  
                          ___fladd 359E                            ___fldiv 3EEC  
                          ___awdiv 5BA0                            ___flneg 6652  
                          ___awmod 5F36                            ___flmul 3A46  
                          ___flsub 6508                            ___fltol 59A8  
                          ___lldiv 5D1C                    __size_of___wmul 0036  
                   _LCD_write_char 6072                            ___llmod 5FD8  
                          ___lwdiv 619A                            ___lwmod 6406  
             CANInitialize@propSeg 0088                            __pcinit 6598  
                  __size_of_fround 02F6                            __ramtop 0D00  
                 _LCD_4TH_ROW_MODE 0243                LCD_write_char@value 0081  
                          __ptext0 0B06                            __ptext1 5E92  
                          __ptext2 4FFE                            __ptext3 42AC  
                          __ptext4 0000                            __ptext5 687C  
                          __ptext6 680C                            __ptext7 6212  
                          __ptext8 6276                            __ptext9 4940  
                      ?__div_to_l_ 0071                   LCD_write_char@D0 0080  
                 LCD_write_char@D1 007F                   LCD_write_char@D2 007E  
                 LCD_write_char@D3 007D                          _F1_switch 0241  
                          _dpowers FD35                          _F2_switch 0242  
                          _isdigit 6758                         ??___xxtofl 0075  
                 ___awmod@dividend 0071                         ??_delay_ms 0079  
                   _center_value_Y 00E5             CANreceiveMessage@error 0030  
     __end_of_board_initialization 5F36          __size_of_Joystick_Polling 0054  
                        _LCD_Error 6108           __end_of_delay_set_quartz 68B2  
                          _sprintf 14C8                     __pintcode_body 4BC4  
                        _LCD_clear 6726               end_of_initialization 65D4  
        __size_of_LCD_write_string 0026                            itoa@buf 0081  
                          itoa@val 0083                            int_func 4BC4  
                        i2u1005_40 4D28                          i2u1006_45 4D2A  
                        i2u1015_40 4DEC                          i2u1016_45 4DEE  
                        i2u1329_47 4D8E                      _CANInitialize 4FFE  
                    _parking_error 0249                    ___lldiv@divisor 0075  
               LCD_cursor@blinking 007D                      _parking_state 00E9  
                  ___lldiv@counter 007D             __end_of_LCD_write_char 6108  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE         __size_of_LCD_write_integer 01C0  
       __size_of_LCD_write_message 0034                            utoa@buf 0078  
                   __tdiv_to_l_@f1 0071                     __tdiv_to_l_@f2 0075  
                          utoa@val 007A                         _wait_low_1 0252  
                       _wait_low_2 0253                         _wait_low_3 0254  
                        _ISR_bassa 0018                      ??__tdiv_to_l_ 0079  
          _steering_correction_dir 0250                          _PORTAbits 000F80  
                        _PORTBbits 000F81                     CANSetMask@mask 0071  
                        _PORTDbits 000F83                     CANSetMask@tamp 007B  
         __end_of_LCD_send_command 6618                     CANSetMask@type 0075  
                      ___fladd@grs 00B8                      ___xxtofl@sign 0079  
                      ___fldiv@grs 0092                        ___fldiv@rem 008C  
                _F1_Button_Polling 6860                         ?_LCD_Error 0026  
                       ?_LCD_clear 0026                 ?_F1_Button_Polling 0026  
                   __end_of_CAN_Tx 5E92            _clock_counter_reference 00E1  
                      ___flmul@grs 008D                     _CANsendMessage 1D5C  
                 CANInitialize@BRP 0082                   CANInitialize@SJW 0081  
                   ?_CANInitialize 007F                ??_F1_Button_Polling 0071  
                __size_of_LCD_Park 0064                __size_of__div_to_l_ 0188  
          LCD_write_integer@F17134 0100                    ?_LCD_write_char 0026  
                    ??_LCD_Handler 00CD           __end_of_LCD_shift_cursor 6508  
                   __end_of___flge 56B2                         ?_ISR_bassa 0026  
                   __end_of___wmul 66C0                  __size_of_ISR_alta 4E28  
                    ??_LCD_Parking 0084                  LCD_shift_cursor@i 007F  
                   __end_of_fround 4940                     i2_CANisTxReady 67EE  
        __end_of_F1_Button_Polling 687C                start_initialization 6598  
              __end_of__tdiv_to_l_ 5522                CANSetMask@numBuffer 007A  
           __end_of_CANsendMessage 24E8                           ??_CAN_Tx 0081  
                ?_CANOperationMode 0026                      _data_steering 013D  
                    ??_LCD_goto_xy 0081         i2CANsendMessage@dataLength 002C  
             i2CANsendMessage@data 002A                 ??_CANOperationMode 0071  
             i2CANsendMessage@tamp 0032                    ___llmod@divisor 0075  
         __end_ofi2_CANsendMessage 2B78         CANInitialize@FilterConfig1 0089  
       CANInitialize@FilterConfig2 008A                    ___llmod@counter 0079  
              _steering_correction 00EA                           ??___flge 0079  
             _board_initialization 5E92                           ??___wmul 0075  
                      __pdataBANK0 00EC                   __CFG_LPT1OSC$OFF 000000  
                         ??_fround 009C             __end_ofi2_CANisTxReady 680C  
                    sprintf@tmpval 015B                          ___fladd@a 00A9  
                        ___fladd@b 00A5             CANInitialize@phaseSeg1 007F  
           CANInitialize@phaseSeg2 0080                         fround@prec 00A4  
              __end_of_LCD_Handler 4BC4                           ?_LCD_Gap 0026  
                         ?_LCD_End 0026                          ___fldiv@a 0083  
                        ___fldiv@b 007F                          ___flmul@a 0083  
                        ___flmul@b 007F                        __pbssCOMRAM 0001  
                        ___flsub@a 00BD                          ___flsub@b 00B9  
                    __pcstackBANK0 0060                      __pcstackBANK1 014D  
                      _BRGCON2bits 000F71                __end_of_LCD_Parking 6276  
                      _BRGCON3bits 000F72                   _Joystick_Polling 6468  
                      ??_LCD_Error 0084                  __size_of___xxtofl 01CE  
        __size_of_LCD_enable_pulse 0022                       _isdigit$3774 0072  
       i2CANsendMessage@identifier 0026                  _park_assist_state 0145  
                __size_of_delay_ms 003A                        ??_LCD_clear 007D  
                  ?_CANsendMessage 0071            LCD_write_message@buffer 0082  
                 _LCD_write_string 6782                    ??_CANInitialize 0084  
                      sprintf@flag 0153                        sprintf@fval 0161  
                         ?_Credits 0026                        sprintf@prec 015F  
                 ??_LCD_initialize 007F                 CANSetFilter@filter 0071  
        delay_set_quartz@frequency 0071                   ___lwdiv@dividend 0071  
               LCD_send_command@D0 007B                 LCD_send_command@D1 007A  
               LCD_send_command@D2 0079                 LCD_send_command@D3 007C  
              __end_of_LCD_goto_xy 6844              __end_of_LCD_goto_line 5BA0  
            ?_board_initialization 0026                          __pintcode 0008  
                    __pmediumconst FCCC                           ?___fladd 00A5  
                         ?___fldiv 007F                           ?___awdiv 0077  
                         ?___flneg 0098                           ?___awmod 0071  
                         ?___flmul 007F                           ?___flsub 00B9  
                         ?___fltol 00B9                           ?___lldiv 0071  
                         ?___llmod 0071                          __npowers_ FCCD  
                         ?___lwdiv 0071                           ?___lwmod 0071  
                      ??_ISR_bassa 0060                        __pintcodelo 0018  
       __end_of_PWR_Button_Polling 6828                    ?i2_CANisTxReady 0026  
                      __tdiv_to_l_ 5384                       ??__div_to_l_ 0079  
                      _COMSTATbits 000F74                           ?_isdigit 0026  
       __size_of_F1_Button_Polling 001C                   ___lwdiv@quotient 0075  
                         ?_sprintf 00C3                     __size_of_scale 051A  
                ?_delay_set_quartz 0026              CANreceiveMessage@tamp 0031  
               ??_delay_set_quartz 0071                           _LCD_Park 6276  
                   ___wmul@product 0075                           _LATCbits 000F8B  
                         _LATDbits 000F8C                           _LATEbits 000F8D  
                         _IPR2bits 000FA2       _delay_quartz_frequency_value 00EC  
                         _IPR3bits 000FA5                           _PIE2bits 000FA0  
                         _PIE3bits 000FA3               _collision_risk_value 00E6  
               __end_of__div_to_l_ 583A                           _PIR2bits 000FA1  
                         _PIR3bits 000FA4                           i2u900_45 32FE  
                         i2u902_40 33D2                           i2u902_46 33D4  
                         i2u903_40 33FC                           i2u911_45 3574  
                         i2u903_46 33FE                           i2u905_45 3410  
                         _RXB0EIDH 000F63                           _RXB0EIDL 000F64  
                         i2u970_40 27DC                           i2u970_45 27D2  
                         i2u891_40 314A                           i2u971_40 2822  
                         _RXB1EIDH 000F53                          _pr_time_1 00D9  
                        _pr_time_2 0009                           _RXB1EIDL 000F54  
                        _pr_time_3 000D                           i2u971_45 2818  
                        _pr_time_4 0106                           i2u891_46 314C  
                        _pr_time_5 0011                          _pr_time_6 0015  
                         i2u892_40 3178                           i2u972_45 286E  
                         i2u892_46 317A                           i2u957_40 25AC  
                         i2u957_45 25A2                           i2u958_40 25F2  
                        _set_speed 00E3                           i2u894_45 318E  
                         i2u958_45 25E8                           i2u983_40 2A0C  
                         _RCONbits 000FD0                           i2u983_45 2A02  
                         i2u959_45 263E                           i2u984_40 2A52  
                         i2u984_45 2A48                           i2u985_45 2A9E  
                         i2u996_40 4C1C                   __CFG_WDTPS$32768 000000  
                         _RXB0SIDH 000F61                           _RXB0SIDL 000F62  
                         _RXF0EIDH 000F02                           _RXB1SIDH 000F51  
                         _RXF0EIDL 000F03                           _RXB1SIDL 000F52  
                         _RXF1EIDH 000F06                           _RXF1EIDL 000F07  
                         _RXF2EIDH 000F0A                           _RXF2EIDL 000F0B  
                         _RXF3EIDH 000F0E                           _RXF3EIDL 000F0F  
                         _RXF4EIDH 000F12                           _RXF4EIDL 000F13  
                         _RXF5EIDH 000F16                           _RXF5EIDL 000F17  
                         _RXF0SIDH 000F00                           _RXF0SIDL 000F01  
                         _TXB0EIDH 000F43                           _RXF1SIDH 000F04  
                         _TXB0EIDL 000F44                           _RXF1SIDL 000F05  
                         _TXB1EIDH 000F33                           _RXF2SIDH 000F08  
                         _TXB1EIDL 000F34                           _RXF2SIDL 000F09  
                         _ISR_alta 0008                           _TXB2EIDH 000F23  
                         _RXF3SIDH 000F0C                           _TXB2EIDL 000F24  
                         _RXF3SIDL 000F0D                           _RXF4SIDH 000F10  
                         _RXF4SIDL 000F11                           _RXF5SIDH 000F14  
                         _RXF5SIDL 000F15                           _RXM0EIDH 000F1A  
                         _RXM0EIDL 000F1B                           _TXB0SIDH 000F41  
                         _RXM1EIDH 000F1E                           _TXB0SIDL 000F42  
                         _RXM1EIDL 000F1F                           _TXB1SIDH 000F31  
                         _TXB1SIDL 000F32                           _TXB2SIDH 000F21  
                         _TXB2SIDL 000F22                        _LCD_Handler 4940  
                         _RXM0SIDH 000F18                           _RXM0SIDL 000F19  
                         _RXM1SIDH 000F1C                           _RXM1SIDL 000F1D  
                         _RXERRCNT 000F75     LCD_write_integer@zero_cleaning 008C  
               _parking_message_ID 00E8                           _TXERRCNT 000F76  
                       _ADCON0bits 000FC2                        _LCD_Parking 6212  
                       _ADCON2bits 000FC0                  ___wmul@multiplier 0071  
                         _RTR_Flag 0244                  ?_LCD_send_command 0079  
                 _actual_speed_kmh 0001                          _user_data 0023  
                 __size_of_LCD_Gap 0064                   __size_of_LCD_End 0064  
                        _user_stop 0251                 ??_LCD_send_command 007C  
                    ?_CANSetFilter 0071                         _CANCONbits 000F6F  
                      _LCD_goto_xy 6828                   ??_LCD_write_char 007D  
                LCD_goto_line@line 007D                   __size_of_Credits 0064  
                         __Hrparam 0000                       _RXB0SIDLbits 000F62  
           ??_board_initialization 008B          _collision_sensor_distance 001D  
                         __Lrparam 0000                       _RXB1SIDLbits 000F52  
                 __size_of___fladd 04A8                         _CANSetMask 42AC  
                 __size_of___fldiv 03C0                   __size_of___awdiv 00BE  
                 __size_of___flneg 0038                   __size_of___awmod 00A2  
                 __size_of___flmul 04A6                  ?_LCD_shift_cursor 007D  
                 __size_of___flsub 0048                   __size_of___fltol 010C  
                 __size_of___lldiv 00BC                   __size_of___llmod 009A  
                 __size_of___lwdiv 0078                   __size_of___lwmod 0062  
                      _fround$4191 00A0                        _fround$4192 009C  
               ??_LCD_shift_cursor 007E                         sprintf@exp 0159  
                       sprintf@val 0155                           ___xxtofl 4E30  
                     _RXF0SIDLbits 000F01                   __size_of_isdigit 002A  
                         _delay_ms 6618                    ___lwdiv@divisor 0073  
                     _RXF1SIDLbits 000F05                    ___lwdiv@counter 0077  
                   ??_CANSetFilter 0076                   _LCD_enable_pulse 67CC  
                         __ptext10 14C8                           __ptext11 2B78  
                         __ptext20 5FD8                           __ptext12 6758  
                         __ptext21 5D1C                           __ptext13 464A  
                         __ptext30 5C5E                           __ptext22 59A8  
                         __ptext14 3A46                           __ptext31 6406  
                         __ptext23 6508                           __ptext15 5F36  
                         __ptext40 6844                           __ptext32 619A  
                         __ptext24 359E                           __ptext16 5BA0  
                         __ptext41 6860                           __ptext33 6782  
                         __ptext25 6652                           __ptext17 5384  
                         __ptext50 65DE                           __ptext42 63A2  
                         __ptext34 6828                           __ptext26 5522  
                         __ptext18 56B2                           __ptext51 67CC  
                         __ptext43 66C0                           __ptext35 64BC  
                         __ptext27 3EEC                           __ptext19 4E30  
                         __ptext60 67EE                           __ptext52 6618  
                         __ptext44 6072                           __ptext36 62DA  
                         __ptext28 51C4                           __ptext61 3092  
                         __ptext53 668A                           __ptext45 583A  
                         __ptext37 6108                           __ptext29 6550  
                         __ptext62 6892                           __ptext54 5DD8  
                         __ptext46 68A8                           __ptext38 633E  
                         __ptext55 1D5C                           __ptext47 66F4  
                         __ptext39 6468                           __ptext56 67A8  
                         __ptext48 6726                           __ptext49 5AB4  
                         __ptext59 24E8                       _RXF2SIDLbits 000F09  
                         __powers_ FD01                       _RXF3SIDLbits 000F0D  
                 __size_of_sprintf 0894                       _RXF4SIDLbits 000F11  
                     _RXF5SIDLbits 000F15           CANsendMessage@dataLength 0077  
                    __size_of_main 09C2                      __size_of_itoa 0048  
                    __size_of_utoa 00BE                  ?i2_CANsendMessage 0026  
             CANreceiveMessage@msg 0026              LCD_shift_cursor@shift 007E  
              i2_CANisTxReady$3168 0026                       _TXB0SIDLbits 000F42  
                Joystick_Polling@i 0072                 ??i2_CANsendMessage 002E  
                     _TXB1SIDLbits 000F32           __end_of_Joystick_Polling 64BC  
                     _TXB2SIDLbits 000F22                           int$flags 004B  
        __size_of_CANOperationMode 0016                      ?_CANisRxReady 0026  
                    ?_CANisTxReady 0026           __end_of_LCD_write_string 67A8  
                      _RXB0DLCbits 000F65                        _RXB1DLCbits 000F55  
                     _RXM0SIDLbits 000F19                        _RXB0CONbits 000F60  
                       _LCD_cursor 66F4                        _RXB1CONbits 000F50  
                _CANreceiveMessage 3092                       _RXM1SIDLbits 000F1D  
                       _INTCONbits 000FF2                       _set_steering 0025  
                 ??_CANsendMessage 0079                 ?_CANreceiveMessage 0026  
                         itoa@base 0085                           isdigit@c 0073  
                      _low_battery 0248                           scale@scl 00A0  
         CANsendMessage@identifier 0071                       _time_counter 0019  
                         intlevel1 0000                           intlevel2 0000  
                        sprintf@ap 0151                   __tdiv_to_l_@exp1 0081  
                        sprintf@sp 00C3                   __tdiv_to_l_@cntr 0080  
                 CANSetFilter@tamp 007B                   __tdiv_to_l_@quot 007C  
                 CANSetFilter@type 0075                ??_CANreceiveMessage 0028  
                 ___lwmod@dividend 0071                   ___lldiv@dividend 0071  
                      _TXB0DLCbits 000F45                        _right_speed 0021  
                      _TXB1DLCbits 000F35                        _TXB0CONbits 000F40  
                      _TXB2DLCbits 000F25                        _TXB1CONbits 000F30  
                      _TXB2CONbits 000F20                    _display_refresh 0247  
                 ??i2_CANisTxReady 0026               CANOperationMode@mode 0071  
                   ??_CANisRxReady 0026                        ?_CANSetMask 0071  
                   ??_CANisTxReady 0071                       ?__tdiv_to_l_ 0071  
        __end_of_CANreceiveMessage 359E                           utoa@base 007C  
                         sprintf@c 0165                           sprintf@f 00C5  
                 ___lldiv@quotient 0079                    ___lwmod@divisor 0073  
  LCD_shift_cursor@number_of_shift 007D                    ___lwmod@counter 0075  
                    ___fladd@signs 00B5                 _PWR_Button_Polling 680C  
                    _collision_msg 0246                       ___fladd@aexp 00B6  
                     ___fladd@bexp 00B7              __end_of_CANInitialize 51C4  
              ?_PWR_Button_Polling 0026                       _power_switch 024B  
