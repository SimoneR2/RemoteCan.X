

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu May 05 22:14:44 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93  0000                     
    94                           	psect	idataBANK0
    95  016836                     __pidataBANK0:
    96                           	opt stack 0
    97                           
    98                           ;initializer for _delay_quartz_frequency_value
    99  016836  10                 	db	16
   100                           
   101                           	psect	mediumconst
   102  00FDF2                     __pmediumconst:
   103                           	opt stack 0
   104  00FDF2  00                 	db	0
   105  00FDF3                     __npowers_:
   106                           	opt stack 0
   107  00FDF3  0000               	dw	0
   108  00FDF5  3F80               	dw	16256
   109  00FDF7  CCCD               	dw	52429
   110  00FDF9  3DCC               	dw	15820
   111  00FDFB  D70A               	dw	55050
   112  00FDFD  3C23               	dw	15395
   113  00FDFF  126F               	dw	4719
   114  00FE01  3A83               	dw	14979
   115  00FE03  B717               	dw	46871
   116  00FE05  38D1               	dw	14545
   117  00FE07  C5AC               	dw	50604
   118  00FE09  3727               	dw	14119
   119  00FE0B  37BD               	dw	14269
   120  00FE0D  3586               	dw	13702
   121  00FE0F  BF95               	dw	49045
   122  00FE11  33D6               	dw	13270
   123  00FE13  CC77               	dw	52343
   124  00FE15  322B               	dw	12843
   125  00FE17  705F               	dw	28767
   126  00FE19  3089               	dw	12425
   127  00FE1B  E6FF               	dw	59135
   128  00FE1D  2EDB               	dw	11995
   129  00FE1F  E508               	dw	58632
   130  00FE21  1E3C               	dw	7740
   131  00FE23  4260               	dw	16992
   132  00FE25  0DA2               	dw	3490
   133  00FE27                     __end_of__npowers_:
   134                           	opt stack 0
   135  00FE27                     __powers_:
   136                           	opt stack 0
   137  00FE27  0000               	dw	0
   138  00FE29  3F80               	dw	16256
   139  00FE2B  0000               	dw	0
   140  00FE2D  4120               	dw	16672
   141  00FE2F  0000               	dw	0
   142  00FE31  42C8               	dw	17096
   143  00FE33  0000               	dw	0
   144  00FE35  447A               	dw	17530
   145  00FE37  4000               	dw	16384
   146  00FE39  461C               	dw	17948
   147  00FE3B  5000               	dw	20480
   148  00FE3D  47C3               	dw	18371
   149  00FE3F  2400               	dw	9216
   150  00FE41  4974               	dw	18804
   151  00FE43  9680               	dw	38528
   152  00FE45  4B18               	dw	19224
   153  00FE47  BC20               	dw	48160
   154  00FE49  4CBE               	dw	19646
   155  00FE4B  6B28               	dw	27432
   156  00FE4D  4E6E               	dw	20078
   157  00FE4F  02F9               	dw	761
   158  00FE51  5015               	dw	20501
   159  00FE53  78EC               	dw	30956
   160  00FE55  60AD               	dw	24749
   161  00FE57  F2CA               	dw	62154
   162  00FE59  7149               	dw	29001
   163  00FE5B                     __end_of__powers_:
   164                           	opt stack 0
   165  00FE5B                     _dpowers:
   166                           	opt stack 0
   167  00FE5B  0001               	dw	1
   168  00FE5D  0000               	dw	0
   169  00FE5F  000A               	dw	10
   170  00FE61  0000               	dw	0
   171  00FE63  0064               	dw	100
   172  00FE65  0000               	dw	0
   173  00FE67  03E8               	dw	1000
   174  00FE69  0000               	dw	0
   175  00FE6B  2710               	dw	10000
   176  00FE6D  0000               	dw	0
   177  00FE6F  86A0               	dw	34464
   178  00FE71  0001               	dw	1
   179  00FE73  4240               	dw	16960
   180  00FE75  000F               	dw	15
   181  00FE77  9680               	dw	38528
   182  00FE79  0098               	dw	152
   183  00FE7B  E100               	dw	57600
   184  00FE7D  05F5               	dw	1525
   185  00FE7F  CA00               	dw	51712
   186  00FE81  3B9A               	dw	15258
   187  00FE83                     __end_of_dpowers:
   188                           	opt stack 0
   189  0000                     _RXB1CON	set	3920
   190  0000                     _RXB1CONbits	set	3920
   191  0000                     _RXB1D0	set	3926
   192  0000                     _RXB1D1	set	3927
   193  0000                     _RXB1D2	set	3928
   194  0000                     _RXB1D3	set	3929
   195  0000                     _RXB1D4	set	3930
   196  0000                     _RXB1D5	set	3931
   197  0000                     _RXB1D6	set	3932
   198  0000                     _RXB1D7	set	3933
   199  0000                     _RXB1DLC	set	3925
   200  0000                     _RXB1DLCbits	set	3925
   201  0000                     _RXB1EIDH	set	3923
   202  0000                     _RXB1EIDL	set	3924
   203  0000                     _RXB1SIDH	set	3921
   204  0000                     _RXB1SIDL	set	3922
   205  0000                     _RXB1SIDLbits	set	3922
   206  0000                     _RXF0EIDH	set	3842
   207  0000                     _RXF0EIDL	set	3843
   208  0000                     _RXF0SIDH	set	3840
   209  0000                     _RXF0SIDL	set	3841
   210  0000                     _RXF0SIDLbits	set	3841
   211  0000                     _RXF1EIDH	set	3846
   212  0000                     _RXF1EIDL	set	3847
   213  0000                     _RXF1SIDH	set	3844
   214  0000                     _RXF1SIDL	set	3845
   215  0000                     _RXF1SIDLbits	set	3845
   216  0000                     _RXF2EIDH	set	3850
   217  0000                     _RXF2EIDL	set	3851
   218  0000                     _RXF2SIDH	set	3848
   219  0000                     _RXF2SIDL	set	3849
   220  0000                     _RXF2SIDLbits	set	3849
   221  0000                     _RXF3EIDH	set	3854
   222  0000                     _RXF3EIDL	set	3855
   223  0000                     _RXF3SIDH	set	3852
   224  0000                     _RXF3SIDL	set	3853
   225  0000                     _RXF3SIDLbits	set	3853
   226  0000                     _RXF4EIDH	set	3858
   227  0000                     _RXF4EIDL	set	3859
   228  0000                     _RXF4SIDH	set	3856
   229  0000                     _RXF4SIDL	set	3857
   230  0000                     _RXF4SIDLbits	set	3857
   231  0000                     _RXF5EIDH	set	3862
   232  0000                     _RXF5EIDL	set	3863
   233  0000                     _RXF5SIDH	set	3860
   234  0000                     _RXF5SIDL	set	3861
   235  0000                     _RXF5SIDLbits	set	3861
   236  0000                     _RXM0EIDH	set	3866
   237  0000                     _RXM0EIDL	set	3867
   238  0000                     _RXM0SIDH	set	3864
   239  0000                     _RXM0SIDL	set	3865
   240  0000                     _RXM0SIDLbits	set	3865
   241  0000                     _RXM1EIDH	set	3870
   242  0000                     _RXM1EIDL	set	3871
   243  0000                     _RXM1SIDH	set	3868
   244  0000                     _RXM1SIDL	set	3869
   245  0000                     _RXM1SIDLbits	set	3869
   246  0000                     _TXB0CONbits	set	3904
   247  0000                     _TXB0D0	set	3910
   248  0000                     _TXB0D1	set	3911
   249  0000                     _TXB0D2	set	3912
   250  0000                     _TXB0D3	set	3913
   251  0000                     _TXB0D4	set	3914
   252  0000                     _TXB0D5	set	3915
   253  0000                     _TXB0D6	set	3916
   254  0000                     _TXB0D7	set	3917
   255  0000                     _TXB0DLC	set	3909
   256  0000                     _TXB0DLCbits	set	3909
   257  0000                     _TXB0EIDH	set	3907
   258  0000                     _TXB0EIDL	set	3908
   259  0000                     _TXB0SIDH	set	3905
   260  0000                     _TXB0SIDL	set	3906
   261  0000                     _TXB0SIDLbits	set	3906
   262  0000                     _TXB1CONbits	set	3888
   263  0000                     _TXB1D0	set	3894
   264  0000                     _TXB1D1	set	3895
   265  0000                     _TXB1D2	set	3896
   266  0000                     _TXB1D3	set	3897
   267  0000                     _TXB1D4	set	3898
   268  0000                     _TXB1D5	set	3899
   269  0000                     _TXB1D6	set	3900
   270  0000                     _TXB1D7	set	3901
   271  0000                     _TXB1DLC	set	3893
   272  0000                     _TXB1DLCbits	set	3893
   273  0000                     _TXB1EIDH	set	3891
   274  0000                     _TXB1EIDL	set	3892
   275  0000                     _TXB1SIDH	set	3889
   276  0000                     _TXB1SIDL	set	3890
   277  0000                     _TXB1SIDLbits	set	3890
   278  0000                     _TXB2CONbits	set	3872
   279  0000                     _TXB2D0	set	3878
   280  0000                     _TXB2D1	set	3879
   281  0000                     _TXB2D2	set	3880
   282  0000                     _TXB2D3	set	3881
   283  0000                     _TXB2D4	set	3882
   284  0000                     _TXB2D5	set	3883
   285  0000                     _TXB2D6	set	3884
   286  0000                     _TXB2D7	set	3885
   287  0000                     _TXB2DLC	set	3877
   288  0000                     _TXB2DLCbits	set	3877
   289  0000                     _TXB2EIDH	set	3875
   290  0000                     _TXB2EIDL	set	3876
   291  0000                     _TXB2SIDH	set	3873
   292  0000                     _TXB2SIDL	set	3874
   293  0000                     _TXB2SIDLbits	set	3874
   294  0000                     _ADCON0bits	set	4034
   295  0000                     _ADCON1	set	4033
   296  0000                     _ADCON2bits	set	4032
   297  0000                     _ADRESH	set	4036
   298  0000                     _BRGCON1	set	3952
   299  0000                     _BRGCON2	set	3953
   300  0000                     _BRGCON2bits	set	3953
   301  0000                     _BRGCON3	set	3954
   302  0000                     _BRGCON3bits	set	3954
   303  0000                     _CANCON	set	3951
   304  0000                     _CANCONbits	set	3951
   305  0000                     _CANSTAT	set	3950
   306  0000                     _COMSTATbits	set	3956
   307  0000                     _INTCONbits	set	4082
   308  0000                     _IPR2bits	set	4002
   309  0000                     _IPR3bits	set	4005
   310  0000                     _LATA	set	3977
   311  0000                     _LATB	set	3978
   312  0000                     _LATC	set	3979
   313  0000                     _LATCbits	set	3979
   314  0000                     _LATD	set	3980
   315  0000                     _LATDbits	set	3980
   316  0000                     _LATE	set	3981
   317  0000                     _LATEbits	set	3981
   318  0000                     _PIE2bits	set	4000
   319  0000                     _PIE3bits	set	4003
   320  0000                     _PIR2bits	set	4001
   321  0000                     _PIR3bits	set	4004
   322  0000                     _PORTAbits	set	3968
   323  0000                     _PORTBbits	set	3969
   324  0000                     _PORTDbits	set	3971
   325  0000                     _RCONbits	set	4048
   326  0000                     _RXB0CON	set	3936
   327  0000                     _RXB0CONbits	set	3936
   328  0000                     _RXB0D0	set	3942
   329  0000                     _RXB0D1	set	3943
   330  0000                     _RXB0D2	set	3944
   331  0000                     _RXB0D3	set	3945
   332  0000                     _RXB0D4	set	3946
   333  0000                     _RXB0D5	set	3947
   334  0000                     _RXB0D6	set	3948
   335  0000                     _RXB0D7	set	3949
   336  0000                     _RXB0DLC	set	3941
   337  0000                     _RXB0DLCbits	set	3941
   338  0000                     _RXB0EIDH	set	3939
   339  0000                     _RXB0EIDL	set	3940
   340  0000                     _RXB0SIDH	set	3937
   341  0000                     _RXB0SIDL	set	3938
   342  0000                     _RXB0SIDLbits	set	3938
   343  0000                     _RXERRCNT	set	3957
   344  0000                     _T3CON	set	4017
   345  0000                     _TMR3H	set	4019
   346  0000                     _TMR3L	set	4018
   347  0000                     _TRISA	set	3986
   348  0000                     _TRISB	set	3987
   349  0000                     _TRISC	set	3988
   350  0000                     _TRISD	set	3989
   351  0000                     _TRISE	set	3990
   352  0000                     _TXERRCNT	set	3958
   353  00FE83                     STR_27:
   354  00FE83  20                 	db	32
   355  00FE84  20                 	db	32
   356  00FE85  20                 	db	32
   357  00FE86  20                 	db	32
   358  00FE87  20                 	db	32
   359  00FE88  43                 	db	67	;'C'
   360  00FE89  4F                 	db	79	;'O'
   361  00FE8A  4D                 	db	77	;'M'
   362  00FE8B  50                 	db	80	;'P'
   363  00FE8C  4C                 	db	76	;'L'
   364  00FE8D  45                 	db	69	;'E'
   365  00FE8E  54                 	db	84	;'T'
   366  00FE8F  45                 	db	69	;'E'
   367  00FE90  44                 	db	68	;'D'
   368  00FE91  21                 	db	33
   369  00FE92  20                 	db	32
   370  00FE93  20                 	db	32
   371  00FE94  20                 	db	32
   372  00FE95  20                 	db	32
   373  00FE96  20                 	db	32
   374  00FE97  00                 	db	0
   375  00FE98                     STR_23:
   376  00FE98  20                 	db	32
   377  00FE99  20                 	db	32
   378  00FE9A  20                 	db	32
   379  00FE9B  53                 	db	83	;'S'
   380  00FE9C  54                 	db	84	;'T'
   381  00FE9D  41                 	db	65	;'A'
   382  00FE9E  52                 	db	82	;'R'
   383  00FE9F  54                 	db	84	;'T'
   384  00FEA0  20                 	db	32
   385  00FEA1  50                 	db	80	;'P'
   386  00FEA2  41                 	db	65	;'A'
   387  00FEA3  52                 	db	82	;'R'
   388  00FEA4  4B                 	db	75	;'K'
   389  00FEA5  49                 	db	73	;'I'
   390  00FEA6  4E                 	db	78	;'N'
   391  00FEA7  47                 	db	71	;'G'
   392  00FEA8  20                 	db	32
   393  00FEA9  20                 	db	32
   394  00FEAA  20                 	db	32
   395  00FEAB  20                 	db	32
   396  00FEAC  00                 	db	0
   397  00FEAD                     STR_26:
   398  00FEAD  20                 	db	32
   399  00FEAE  20                 	db	32
   400  00FEAF  20                 	db	32
   401  00FEB0  20                 	db	32
   402  00FEB1  53                 	db	83	;'S'
   403  00FEB2  55                 	db	85	;'U'
   404  00FEB3  43                 	db	67	;'C'
   405  00FEB4  43                 	db	67	;'C'
   406  00FEB5  45                 	db	69	;'E'
   407  00FEB6  53                 	db	83	;'S'
   408  00FEB7  53                 	db	83	;'S'
   409  00FEB8  46                 	db	70	;'F'
   410  00FEB9  55                 	db	85	;'U'
   411  00FEBA  4C                 	db	76	;'L'
   412  00FEBB  4C                 	db	76	;'L'
   413  00FEBC  59                 	db	89	;'Y'
   414  00FEBD  20                 	db	32
   415  00FEBE  20                 	db	32
   416  00FEBF  20                 	db	32
   417  00FEC0  20                 	db	32
   418  00FEC1  00                 	db	0
   419  00FEC2                     STR_3:
   420  00FEC2  20                 	db	32
   421  00FEC3  20                 	db	32
   422  00FEC4  50                 	db	80	;'P'
   423  00FEC5  72                 	db	114	;'r'
   424  00FEC6  65                 	db	101	;'e'
   425  00FEC7  73                 	db	115	;'s'
   426  00FEC8  73                 	db	115	;'s'
   427  00FEC9  20                 	db	32
   428  00FECA  74                 	db	116	;'t'
   429  00FECB  68                 	db	104	;'h'
   430  00FECC  65                 	db	101	;'e'
   431  00FECD  20                 	db	32
   432  00FECE  62                 	db	98	;'b'
   433  00FECF  75                 	db	117	;'u'
   434  00FED0  74                 	db	116	;'t'
   435  00FED1  74                 	db	116	;'t'
   436  00FED2  6F                 	db	111	;'o'
   437  00FED3  6E                 	db	110	;'n'
   438  00FED4  20                 	db	32
   439  00FED5  20                 	db	32
   440  00FED6  00                 	db	0
   441  00FED7                     STR_22:
   442  00FED7  50                 	db	80	;'P'
   443  00FED8  52                 	db	82	;'R'
   444  00FED9  45                 	db	69	;'E'
   445  00FEDA  53                 	db	83	;'S'
   446  00FEDB  53                 	db	83	;'S'
   447  00FEDC  20                 	db	32
   448  00FEDD  54                 	db	84	;'T'
   449  00FEDE  48                 	db	72	;'H'
   450  00FEDF  45                 	db	69	;'E'
   451  00FEE0  20                 	db	32
   452  00FEE1  42                 	db	66	;'B'
   453  00FEE2  55                 	db	85	;'U'
   454  00FEE3  54                 	db	84	;'T'
   455  00FEE4  54                 	db	84	;'T'
   456  00FEE5  4F                 	db	79	;'O'
   457  00FEE6  4E                 	db	78	;'N'
   458  00FEE7  20                 	db	32
   459  00FEE8  54                 	db	84	;'T'
   460  00FEE9  4F                 	db	79	;'O'
   461  00FEEA  20                 	db	32
   462  00FEEB  00                 	db	0
   463  00FEEC                     STR_25:
   464  00FEEC  20                 	db	32
   465  00FEED  50                 	db	80	;'P'
   466  00FEEE  41                 	db	65	;'A'
   467  00FEEF  52                 	db	82	;'R'
   468  00FEF0  4B                 	db	75	;'K'
   469  00FEF1  49                 	db	73	;'I'
   470  00FEF2  4E                 	db	78	;'N'
   471  00FEF3  47                 	db	71	;'G'
   472  00FEF4  20                 	db	32
   473  00FEF5  50                 	db	80	;'P'
   474  00FEF6  52                 	db	82	;'R'
   475  00FEF7  4F                 	db	79	;'O'
   476  00FEF8  43                 	db	67	;'C'
   477  00FEF9  45                 	db	69	;'E'
   478  00FEFA  44                 	db	68	;'D'
   479  00FEFB  55                 	db	85	;'U'
   480  00FEFC  52                 	db	82	;'R'
   481  00FEFD  45                 	db	69	;'E'
   482  00FEFE  53                 	db	83	;'S'
   483  00FEFF  20                 	db	32
   484  00FF00  00                 	db	0
   485  00FF01                     STR_19:
   486  00FF01  20                 	db	32
   487  00FF02  75                 	db	117	;'u'
   488  00FF03  6E                 	db	110	;'n'
   489  00FF04  74                 	db	116	;'t'
   490  00FF05  69                 	db	105	;'i'
   491  00FF06  6C                 	db	108	;'l'
   492  00FF07  20                 	db	32
   493  00FF08  6E                 	db	110	;'n'
   494  00FF09  65                 	db	101	;'e'
   495  00FF0A  78                 	db	120	;'x'
   496  00FF0B  74                 	db	116	;'t'
   497  00FF0C  20                 	db	32
   498  00FF0D  6D                 	db	109	;'m'
   499  00FF0E  65                 	db	101	;'e'
   500  00FF0F  73                 	db	115	;'s'
   501  00FF10  73                 	db	115	;'s'
   502  00FF11  61                 	db	97	;'a'
   503  00FF12  67                 	db	103	;'g'
   504  00FF13  65                 	db	101	;'e'
   505  00FF14  20                 	db	32
   506  00FF15  00                 	db	0
   507  00FF16                     STR_21:
   508  00FF16  2D                 	db	45
   509  00FF17  20                 	db	32
   510  00FF18  44                 	db	68	;'D'
   511  00FF19  49                 	db	73	;'I'
   512  00FF1A  53                 	db	83	;'S'
   513  00FF1B  54                 	db	84	;'T'
   514  00FF1C  41                 	db	65	;'A'
   515  00FF1D  4E                 	db	78	;'N'
   516  00FF1E  43                 	db	67	;'C'
   517  00FF1F  45                 	db	69	;'E'
   518  00FF20  20                 	db	32
   519  00FF21  52                 	db	82	;'R'
   520  00FF22  45                 	db	69	;'E'
   521  00FF23  41                 	db	65	;'A'
   522  00FF24  43                 	db	67	;'C'
   523  00FF25  48                 	db	72	;'H'
   524  00FF26  45                 	db	69	;'E'
   525  00FF27  44                 	db	68	;'D'
   526  00FF28  20                 	db	32
   527  00FF29  2D                 	db	45
   528  00FF2A  00                 	db	0
   529  00FF2B                     STR_16:
   530  00FF2B  3D                 	db	61	;'='
   531  00FF2C  20                 	db	32
   532  00FF2D  50                 	db	80	;'P'
   533  00FF2E  41                 	db	65	;'A'
   534  00FF2F  52                 	db	82	;'R'
   535  00FF30  4B                 	db	75	;'K'
   536  00FF31  49                 	db	73	;'I'
   537  00FF32  4E                 	db	78	;'N'
   538  00FF33  47                 	db	71	;'G'
   539  00FF34  20                 	db	32
   540  00FF35  4D                 	db	77	;'M'
   541  00FF36  45                 	db	69	;'E'
   542  00FF37  53                 	db	83	;'S'
   543  00FF38  53                 	db	83	;'S'
   544  00FF39  41                 	db	65	;'A'
   545  00FF3A  47                 	db	71	;'G'
   546  00FF3B  45                 	db	69	;'E'
   547  00FF3C  53                 	db	83	;'S'
   548  00FF3D  20                 	db	32
   549  00FF3E  3D                 	db	61	;'='
   550  00FF3F  00                 	db	0
   551  00FF40                     STR_2:
   552  00FF40  3D                 	db	61	;'='
   553  00FF41  3D                 	db	61	;'='
   554  00FF42  3E                 	db	62	;'>'
   555  00FF43  20                 	db	32
   556  00FF44  56                 	db	86	;'V'
   557  00FF45  45                 	db	69	;'E'
   558  00FF46  48                 	db	72	;'H'
   559  00FF47  49                 	db	73	;'I'
   560  00FF48  43                 	db	67	;'C'
   561  00FF49  4C                 	db	76	;'L'
   562  00FF4A  45                 	db	69	;'E'
   563  00FF4B  20                 	db	32
   564  00FF4C  20                 	db	32
   565  00FF4D  4F                 	db	79	;'O'
   566  00FF4E  46                 	db	70	;'F'
   567  00FF4F  46                 	db	70	;'F'
   568  00FF50  20                 	db	32
   569  00FF51  3C                 	db	60	;'<'
   570  00FF52  3D                 	db	61	;'='
   571  00FF53  3D                 	db	61	;'='
   572  00FF54  00                 	db	0
   573  00FF55                     STR_6:
   574  00FF55  3D                 	db	61	;'='
   575  00FF56  3D                 	db	61	;'='
   576  00FF57  3D                 	db	61	;'='
   577  00FF58  20                 	db	32
   578  00FF59  56                 	db	86	;'V'
   579  00FF5A  45                 	db	69	;'E'
   580  00FF5B  48                 	db	72	;'H'
   581  00FF5C  49                 	db	73	;'I'
   582  00FF5D  43                 	db	67	;'C'
   583  00FF5E  4C                 	db	76	;'L'
   584  00FF5F  45                 	db	69	;'E'
   585  00FF60  20                 	db	32
   586  00FF61  44                 	db	68	;'D'
   587  00FF62  41                 	db	65	;'A'
   588  00FF63  54                 	db	84	;'T'
   589  00FF64  41                 	db	65	;'A'
   590  00FF65  20                 	db	32
   591  00FF66  3D                 	db	61	;'='
   592  00FF67  3D                 	db	61	;'='
   593  00FF68  3D                 	db	61	;'='
   594  00FF69  00                 	db	0
   595  00FF6A                     STR_1:
   596  00FF6A  3D                 	db	61	;'='
   597  00FF6B  3D                 	db	61	;'='
   598  00FF6C  3D                 	db	61	;'='
   599  00FF6D  3D                 	db	61	;'='
   600  00FF6E  3D                 	db	61	;'='
   601  00FF6F  3D                 	db	61	;'='
   602  00FF70  3D                 	db	61	;'='
   603  00FF71  3D                 	db	61	;'='
   604  00FF72  3D                 	db	61	;'='
   605  00FF73  3D                 	db	61	;'='
   606  00FF74  3D                 	db	61	;'='
   607  00FF75  3D                 	db	61	;'='
   608  00FF76  3D                 	db	61	;'='
   609  00FF77  3D                 	db	61	;'='
   610  00FF78  3D                 	db	61	;'='
   611  00FF79  3D                 	db	61	;'='
   612  00FF7A  3D                 	db	61	;'='
   613  00FF7B  3D                 	db	61	;'='
   614  00FF7C  3D                 	db	61	;'='
   615  00FF7D  3D                 	db	61	;'='
   616  00FF7E  00                 	db	0
   617  00FF7F                     STR_18:
   618  00FF7F  2D                 	db	45
   619  00FF80  3E                 	db	62	;'>'
   620  00FF81  20                 	db	32
   621  00FF82  20                 	db	32
   622  00FF83  4B                 	db	75	;'K'
   623  00FF84  45                 	db	69	;'E'
   624  00FF85  45                 	db	69	;'E'
   625  00FF86  50                 	db	80	;'P'
   626  00FF87  20                 	db	32
   627  00FF88  4D                 	db	77	;'M'
   628  00FF89  4F                 	db	79	;'O'
   629  00FF8A  56                 	db	86	;'V'
   630  00FF8B  49                 	db	73	;'I'
   631  00FF8C  4E                 	db	78	;'N'
   632  00FF8D  47                 	db	71	;'G'
   633  00FF8E  20                 	db	32
   634  00FF8F  20                 	db	32
   635  00FF90  3C                 	db	60	;'<'
   636  00FF91  2D                 	db	45
   637  00FF92  3F                 	db	63	;'?'
   638  00FF93  00                 	db	0
   639  00FF94                     STR_17:
   640  00FF94  20                 	db	32
   641  00FF95  50                 	db	80	;'P'
   642  00FF96  41                 	db	65	;'A'
   643  00FF97  52                 	db	82	;'R'
   644  00FF98  4B                 	db	75	;'K'
   645  00FF99  49                 	db	73	;'I'
   646  00FF9A  4E                 	db	78	;'N'
   647  00FF9B  47                 	db	71	;'G'
   648  00FF9C  20                 	db	32
   649  00FF9D  53                 	db	83	;'S'
   650  00FF9E  50                 	db	80	;'P'
   651  00FF9F  41                 	db	65	;'A'
   652  00FFA0  43                 	db	67	;'C'
   653  00FFA1  45                 	db	69	;'E'
   654  00FFA2  20                 	db	32
   655  00FFA3  46                 	db	70	;'F'
   656  00FFA4  4F                 	db	79	;'O'
   657  00FFA5  55                 	db	85	;'U'
   658  00FFA6  4E                 	db	78	;'N'
   659  00FFA7  44                 	db	68	;'D'
   660  00FFA8  00                 	db	0
   661  00FFA9                     STR_8:
   662  00FFA9  53                 	db	83	;'S'
   663  00FFAA  70                 	db	112	;'p'
   664  00FFAB  65                 	db	101	;'e'
   665  00FFAC  65                 	db	101	;'e'
   666  00FFAD  64                 	db	100	;'d'
   667  00FFAE  3A                 	db	58	;':'
   668  00FFAF  20                 	db	32
   669  00FFB0  30                 	db	48	;'0'
   670  00FFB1  2E                 	db	46
   671  00FFB2  30                 	db	48	;'0'
   672  00FFB3  30                 	db	48	;'0'
   673  00FFB4  20                 	db	32
   674  00FFB5  4B                 	db	75	;'K'
   675  00FFB6  6D                 	db	109	;'m'
   676  00FFB7  2F                 	db	47
   677  00FFB8  68                 	db	104	;'h'
   678  00FFB9  00                 	db	0
   679  00FFBA                     STR_9:
   680  00FFBA  50                 	db	80	;'P'
   681  00FFBB  61                 	db	97	;'a'
   682  00FFBC  72                 	db	114	;'r'
   683  00FFBD  6B                 	db	107	;'k'
   684  00FFBE  20                 	db	32
   685  00FFBF  61                 	db	97	;'a'
   686  00FFC0  73                 	db	115	;'s'
   687  00FFC1  73                 	db	115	;'s'
   688  00FFC2  69                 	db	105	;'i'
   689  00FFC3  73                 	db	115	;'s'
   690  00FFC4  74                 	db	116	;'t'
   691  00FFC5  3A                 	db	58	;':'
   692  00FFC6  20                 	db	32
   693  00FFC7  00                 	db	0
   694  00FFC8                     STR_7:
   695  00FFC8  44                 	db	68	;'D'
   696  00FFC9  69                 	db	105	;'i'
   697  00FFCA  72                 	db	114	;'r'
   698  00FFCB  65                 	db	101	;'e'
   699  00FFCC  63                 	db	99	;'c'
   700  00FFCD  74                 	db	116	;'t'
   701  00FFCE  69                 	db	105	;'i'
   702  00FFCF  6F                 	db	111	;'o'
   703  00FFD0  6E                 	db	110	;'n'
   704  00FFD1  3A                 	db	58	;':'
   705  00FFD2  20                 	db	32
   706  00FFD3  00                 	db	0
   707  00FFD4                     STR_14:
   708  00FFD4  4F                 	db	79	;'O'
   709  00FFD5  46                 	db	70	;'F'
   710  00FFD6  46                 	db	70	;'F'
   711  00FFD7  20                 	db	32
   712  00FFD8  20                 	db	32
   713  00FFD9  20                 	db	32
   714  00FFDA  20                 	db	32
   715  00FFDB  00                 	db	0
   716  00FFDC                     STR_15:
   717  00FFDC  53                 	db	83	;'S'
   718  00FFDD  45                 	db	69	;'E'
   719  00FFDE  41                 	db	65	;'A'
   720  00FFDF  52                 	db	82	;'R'
   721  00FFE0  43                 	db	67	;'C'
   722  00FFE1  48                 	db	72	;'H'
   723  00FFE2  20                 	db	32
   724  00FFE3  00                 	db	0
   725  00FFE4                     STR_10:
   726  00FFE4  44                 	db	68	;'D'
   727  00FFE5  61                 	db	97	;'a'
   728  00FFE6  74                 	db	116	;'t'
   729  00FFE7  61                 	db	97	;'a'
   730  00FFE8  3A                 	db	58	;':'
   731  00FFE9  20                 	db	32
   732  00FFEA  00                 	db	0
   733  00FFEB                     STR_13:
   734  00FFEB  50                 	db	80	;'P'
   735  00FFEC  20                 	db	32
   736  00FFED  20                 	db	32
   737  00FFEE  20                 	db	32
   738  00FFEF  00                 	db	0
   739  00FFF0                     STR_11:
   740  00FFF0  46                 	db	70	;'F'
   741  00FFF1  57                 	db	87	;'W'
   742  00FFF2  44                 	db	68	;'D'
   743  00FFF3  20                 	db	32
   744  00FFF4  00                 	db	0
   745  00FFF5                     STR_12:
   746  00FFF5  42                 	db	66	;'B'
   747  00FFF6  4B                 	db	75	;'K'
   748  00FFF7  57                 	db	87	;'W'
   749  00FFF8  44                 	db	68	;'D'
   750  00FFF9  00                 	db	0
   751  00FFFA                     STR_5:
   752  00FFFA  25                 	db	37
   753  00FFFB  2E                 	db	46
   754  00FFFC  32                 	db	50	;'2'
   755  00FFFD  66                 	db	102	;'f'
   756  00FFFE  00                 	db	0
   757  0000                     
   758                           ; #config settings
   759  00FFFF  00                 	db	0	; dummy byte at the end
   760  0000                     
   761                           	psect	cinit
   762  0163EA                     __pcinit:
   763                           	opt stack 0
   764  0163EA                     start_initialization:
   765                           	opt stack 0
   766  0163EA                     __initialization:
   767                           	opt stack 0
   768                           
   769                           ; Clear objects allocated to BANK1 (52 bytes)
   770  0163EA  EE01  F000         	lfsr	0,__pbssBANK1
   771  0163EE  0E34               	movlw	52
   772  0163F0                     clear_0:
   773  0163F0  6AEE               	clrf	postinc0,c
   774  0163F2  06E8               	decf	wreg,f,c
   775  0163F4  E1FD               	bnz	clear_0
   776                           
   777                           ; Clear objects allocated to BANK0 (32 bytes)
   778  0163F6  EE00  F0CC         	lfsr	0,__pbssBANK0
   779  0163FA  0E20               	movlw	32
   780  0163FC                     clear_1:
   781  0163FC  6AEE               	clrf	postinc0,c
   782  0163FE  06E8               	decf	wreg,f,c
   783  016400  E1FD               	bnz	clear_1
   784                           
   785                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   786  016402  6A4D               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   787  016404  6A4C               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   788                           
   789                           ; Clear objects allocated to COMRAM (38 bytes)
   790  016406  EE00  F001         	lfsr	0,__pbssCOMRAM
   791  01640A  0E26               	movlw	38
   792  01640C                     clear_2:
   793  01640C  6AEE               	clrf	postinc0,c
   794  01640E  06E8               	decf	wreg,f,c
   795  016410  E1FD               	bnz	clear_2
   796                           
   797                           ; Initialize objects allocated to BANK0 (1 bytes)
   798                           ; load TBLPTR registers with __pidataBANK0
   799  016412  0E36               	movlw	low __pidataBANK0
   800  016414  6EF6               	movwf	tblptrl,c
   801  016416  0E68               	movlw	high __pidataBANK0
   802  016418  6EF7               	movwf	tblptrh,c
   803  01641A  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   804  01641C  6EF8               	movwf	tblptru,c
   805  01641E  0009               	tblrd		*+	;fetch initializer
   806  016420  CFF5 F0EC          	movff	tablat,__pdataBANK0
   807  016424                     end_of_initialization:
   808                           	opt stack 0
   809  016424                     __end_of__initialization:
   810                           	opt stack 0
   811  016424  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   812  016426  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   813  016428  0100               	movlb	0
   814  01642A  EF93  F08D         	goto	_main	;jump to C main() function
   815                           tblptru	equ	0xFF8
   816                           tblptrh	equ	0xFF7
   817                           tblptrl	equ	0xFF6
   818                           tablat	equ	0xFF5
   819                           postinc0	equ	0xFEE
   820                           wreg	equ	0xFE8
   821                           
   822                           	psect	bitbssCOMRAM
   823  000260                     __pbitbssCOMRAM:
   824                           	opt stack 0
   825  000260                     _AbsFlag:
   826                           	opt stack 0
   827  000260                     	ds	1
   828  000261                     _F1_switch:
   829                           	opt stack 0
   830  000261                     	ds	1
   831  000262                     _F2_switch:
   832                           	opt stack 0
   833  000262                     	ds	1
   834  000263                     _MotoreFlag:
   835                           	opt stack 0
   836  000263                     	ds	1
   837  000264                     _RTR_Flag:
   838                           	opt stack 0
   839  000264                     	ds	1
   840  000265                     _SterzoFlag:
   841                           	opt stack 0
   842  000265                     	ds	1
   843  000266                     _display_refresh:
   844                           	opt stack 0
   845  000266                     	ds	1
   846  000267                     _newMessageCan:
   847                           	opt stack 0
   848  000267                     	ds	1
   849  000268                     _power_switch:
   850                           	opt stack 0
   851  000268                     	ds	1
   852  000269                     _space_available:
   853                           	opt stack 0
   854  000269                     	ds	1
   855  00026A                     _space_gap_reached:
   856                           	opt stack 0
   857  00026A                     	ds	1
   858  00026B                     _steering_correction_dir:
   859                           	opt stack 0
   860  00026B                     	ds	1
   861  00026C                     _wait_low_1:
   862                           	opt stack 0
   863  00026C                     	ds	1
   864  00026D                     _wait_low_2:
   865                           	opt stack 0
   866  00026D                     	ds	1
   867  00026E                     _wait_low_3:
   868                           	opt stack 0
   869  00026E                     	ds	1
   870  00026F                     _y:
   871                           	opt stack 0
   872  00026F                     	ds	1
   873                           tblptru	equ	0xFF8
   874                           tblptrh	equ	0xFF7
   875                           tblptrl	equ	0xFF6
   876                           tablat	equ	0xFF5
   877                           postinc0	equ	0xFEE
   878                           wreg	equ	0xFE8
   879                           
   880                           	psect	bssCOMRAM
   881  000001                     __pbssCOMRAM:
   882                           	opt stack 0
   883  000001                     _id:
   884                           	opt stack 0
   885  000001                     	ds	4
   886  000005                     _pr_time_2:
   887                           	opt stack 0
   888  000005                     	ds	4
   889  000009                     _pr_time_3:
   890                           	opt stack 0
   891  000009                     	ds	4
   892  00000D                     _pr_time_4:
   893                           	opt stack 0
   894  00000D                     	ds	4
   895  000011                     _pr_time_5:
   896                           	opt stack 0
   897  000011                     	ds	4
   898  000015                     _pr_time_6:
   899                           	opt stack 0
   900  000015                     	ds	4
   901  000019                     _time_counter:
   902                           	opt stack 0
   903  000019                     	ds	4
   904  00001D                     _left_speed:
   905                           	opt stack 0
   906  00001D                     	ds	2
   907  00001F                     _right_speed:
   908                           	opt stack 0
   909  00001F                     	ds	2
   910  000021                     _user_data:
   911                           	opt stack 0
   912  000021                     	ds	2
   913  000023                     _battery:
   914                           	opt stack 0
   915  000023                     	ds	1
   916  000024                     _set_steering:
   917                           	opt stack 0
   918  000024                     	ds	1
   919  000025                     _data:
   920                           	opt stack 0
   921  000025                     	ds	1
   922  000026                     _data_brake:
   923                           	opt stack 0
   924  000026                     	ds	1
   925                           tblptru	equ	0xFF8
   926                           tblptrh	equ	0xFF7
   927                           tblptrl	equ	0xFF6
   928                           tablat	equ	0xFF5
   929                           postinc0	equ	0xFEE
   930                           wreg	equ	0xFE8
   931                           
   932                           	psect	bssBANK0
   933  0000CC                     __pbssBANK0:
   934                           	opt stack 0
   935  0000CC                     _JoystickConstants:
   936                           	opt stack 0
   937  0000CC                     	ds	8
   938  0000D4                     _check:
   939                           	opt stack 0
   940  0000D4                     	ds	4
   941  0000D8                     _pr_time_1:
   942                           	opt stack 0
   943  0000D8                     	ds	4
   944  0000DC                     _JoystickValues:
   945                           	opt stack 0
   946  0000DC                     	ds	2
   947  0000DE                     _actual_speed:
   948                           	opt stack 0
   949  0000DE                     	ds	2
   950  0000E0                     _clock_counter_reference:
   951                           	opt stack 0
   952  0000E0                     	ds	2
   953  0000E2                     _set_speed:
   954                           	opt stack 0
   955  0000E2                     	ds	2
   956  0000E4                     _dir:
   957                           	opt stack 0
   958  0000E4                     	ds	1
   959  0000E5                     _parking_state:
   960                           	opt stack 0
   961  0000E5                     	ds	1
   962  0000E6                     _steering_correction:
   963                           	opt stack 0
   964  0000E6                     	ds	1
   965  0000E7                     _switch_position:
   966                           	opt stack 0
   967  0000E7                     	ds	1
   968  0000E8                     _x:
   969                           	opt stack 0
   970  0000E8                     	ds	1
   971  0000E9                     _z:
   972                           	opt stack 0
   973  0000E9                     	ds	1
   974  0000EA                     _data_speed:
   975                           	opt stack 0
   976  0000EA                     	ds	1
   977  0000EB                     _data_steering:
   978                           	opt stack 0
   979  0000EB                     	ds	1
   980                           tblptru	equ	0xFF8
   981                           tblptrh	equ	0xFF7
   982                           tblptrl	equ	0xFF6
   983                           tablat	equ	0xFF5
   984                           postinc0	equ	0xFEE
   985                           wreg	equ	0xFE8
   986                           
   987                           	psect	dataBANK0
   988  0000EC                     __pdataBANK0:
   989                           	opt stack 0
   990  0000EC                     _delay_quartz_frequency_value:
   991                           	opt stack 0
   992  0000EC                     	ds	1
   993                           tblptru	equ	0xFF8
   994                           tblptrh	equ	0xFF7
   995                           tblptrl	equ	0xFF6
   996                           tablat	equ	0xFF5
   997                           postinc0	equ	0xFEE
   998                           wreg	equ	0xFE8
   999                           
  1000                           	psect	bssBANK1
  1001  000100                     __pbssBANK1:
  1002                           	opt stack 0
  1003  000100                     _data_speed_rx:
  1004                           	opt stack 0
  1005  000100                     	ds	7
  1006  000107                     LCD_write_integer@F17272:
  1007                           	opt stack 0
  1008  000107                     	ds	6
  1009  00010D                     _actual_speed_kmh:
  1010                           	opt stack 0
  1011  00010D                     	ds	4
  1012  000111                     _msg:
  1013                           	opt stack 0
  1014  000111                     	ds	15
  1015  000120                     _str:
  1016                           	opt stack 0
  1017  000120                     	ds	12
  1018  00012C                     _park_assist_state:
  1019                           	opt stack 0
  1020  00012C                     	ds	8
  1021                           tblptru	equ	0xFF8
  1022                           tblptrh	equ	0xFF7
  1023                           tblptrl	equ	0xFF6
  1024                           tablat	equ	0xFF5
  1025                           postinc0	equ	0xFEE
  1026                           wreg	equ	0xFE8
  1027                           
  1028                           	psect	cstackBANK1
  1029  000134                     __pcstackBANK1:
  1030                           	opt stack 0
  1031  000134                     _sprintf$4245:
  1032                           	opt stack 0
  1033                           
  1034                           ; 4 bytes @ 0x0
  1035  000134                     	ds	4
  1036  000138                     sprintf@ap:
  1037                           	opt stack 0
  1038                           
  1039                           ; 2 bytes @ 0x4
  1040  000138                     	ds	2
  1041  00013A                     sprintf@flag:
  1042                           	opt stack 0
  1043                           
  1044                           ; 2 bytes @ 0x6
  1045  00013A                     	ds	2
  1046  00013C                     sprintf@val:
  1047                           	opt stack 0
  1048                           
  1049                           ; 4 bytes @ 0x8
  1050  00013C                     	ds	4
  1051  000140                     sprintf@exp:
  1052                           	opt stack 0
  1053                           
  1054                           ; 2 bytes @ 0xC
  1055  000140                     	ds	2
  1056  000142                     sprintf@tmpval:
  1057                           	opt stack 0
  1058                           
  1059                           ; 4 bytes @ 0xE
  1060  000142                     	ds	4
  1061  000146                     sprintf@prec:
  1062                           	opt stack 0
  1063                           
  1064                           ; 2 bytes @ 0x12
  1065  000146                     	ds	2
  1066  000148                     sprintf@fval:
  1067                           	opt stack 0
  1068                           
  1069                           ; 4 bytes @ 0x14
  1070  000148                     	ds	4
  1071  00014C                     sprintf@c:
  1072                           	opt stack 0
  1073                           
  1074                           ; 1 bytes @ 0x18
  1075  00014C                     	ds	1
  1076  00014D                     ??_main:
  1077                           
  1078                           ; 0 bytes @ 0x19
  1079  00014D                     	ds	8
  1080                           tblptru	equ	0xFF8
  1081                           tblptrh	equ	0xFF7
  1082                           tblptrl	equ	0xFF6
  1083                           tablat	equ	0xFF5
  1084                           postinc0	equ	0xFEE
  1085                           wreg	equ	0xFE8
  1086                           
  1087                           	psect	cstackBANK0
  1088  000060                     __pcstackBANK0:
  1089                           	opt stack 0
  1090  000060                     ??_ISR_alta:
  1091                           
  1092                           ; 0 bytes @ 0x0
  1093  000060                     	ds	16
  1094  000070                     ??_Joystick_Polling:
  1095  000070                     ??_CAN_Rx:
  1096  000070                     ??_isdigit:
  1097  000070                     ?___wmul:
  1098                           	opt stack 0
  1099  000070                     ?___awmod:
  1100                           	opt stack 0
  1101  000070                     ?___lwdiv:
  1102                           	opt stack 0
  1103  000070                     ?___lwmod:
  1104                           	opt stack 0
  1105  000070                     ?__tdiv_to_l_:
  1106                           	opt stack 0
  1107  000070                     ?__div_to_l_:
  1108                           	opt stack 0
  1109  000070                     ?___lldiv:
  1110                           	opt stack 0
  1111  000070                     ?___llmod:
  1112                           	opt stack 0
  1113  000070                     ?___xxtofl:
  1114                           	opt stack 0
  1115  000070                     CANOperationMode@mode:
  1116                           	opt stack 0
  1117  000070                     _CANisTxReady$3247:
  1118                           	opt stack 0
  1119  000070                     delay_set_quartz@frequency:
  1120                           	opt stack 0
  1121  000070                     ___wmul@multiplier:
  1122                           	opt stack 0
  1123  000070                     ___awmod@dividend:
  1124                           	opt stack 0
  1125  000070                     ___lwdiv@dividend:
  1126                           	opt stack 0
  1127  000070                     ___lwmod@dividend:
  1128                           	opt stack 0
  1129  000070                     CANsendMessage@identifier:
  1130                           	opt stack 0
  1131  000070                     CANSetMask@mask:
  1132                           	opt stack 0
  1133  000070                     CANSetFilter@filter:
  1134                           	opt stack 0
  1135  000070                     __div_to_l_@f1:
  1136                           	opt stack 0
  1137  000070                     ___flge@ff1:
  1138                           	opt stack 0
  1139  000070                     __tdiv_to_l_@f1:
  1140                           	opt stack 0
  1141  000070                     ___lldiv@dividend:
  1142                           	opt stack 0
  1143  000070                     ___llmod@dividend:
  1144                           	opt stack 0
  1145  000070                     ___xxtofl@val:
  1146                           	opt stack 0
  1147                           
  1148                           ; 4 bytes @ 0x10
  1149  000070                     	ds	1
  1150  000071                     Joystick_Polling@i:
  1151                           	opt stack 0
  1152  000071                     _isdigit$3828:
  1153                           	opt stack 0
  1154                           
  1155                           ; 1 bytes @ 0x11
  1156  000071                     	ds	1
  1157  000072                     isdigit@c:
  1158                           	opt stack 0
  1159  000072                     ___wmul@multiplicand:
  1160                           	opt stack 0
  1161  000072                     ___awmod@divisor:
  1162                           	opt stack 0
  1163  000072                     ___lwdiv@divisor:
  1164                           	opt stack 0
  1165  000072                     ___lwmod@divisor:
  1166                           	opt stack 0
  1167                           
  1168                           ; 2 bytes @ 0x12
  1169  000072                     	ds	2
  1170  000074                     ??___xxtofl:
  1171  000074                     CANSetMask@type:
  1172                           	opt stack 0
  1173  000074                     CANSetFilter@type:
  1174                           	opt stack 0
  1175  000074                     ___awmod@counter:
  1176                           	opt stack 0
  1177  000074                     ___lwmod@counter:
  1178                           	opt stack 0
  1179  000074                     CANsendMessage@data:
  1180                           	opt stack 0
  1181  000074                     ___wmul@product:
  1182                           	opt stack 0
  1183  000074                     ___lwdiv@quotient:
  1184                           	opt stack 0
  1185  000074                     __div_to_l_@f2:
  1186                           	opt stack 0
  1187  000074                     ___flge@ff2:
  1188                           	opt stack 0
  1189  000074                     __tdiv_to_l_@f2:
  1190                           	opt stack 0
  1191  000074                     ___lldiv@divisor:
  1192                           	opt stack 0
  1193  000074                     ___llmod@divisor:
  1194                           	opt stack 0
  1195                           
  1196                           ; 4 bytes @ 0x14
  1197  000074                     	ds	1
  1198  000075                     ??_CANSetMask:
  1199  000075                     ??_CANSetFilter:
  1200  000075                     ___awmod@sign:
  1201                           	opt stack 0
  1202                           
  1203                           ; 1 bytes @ 0x15
  1204  000075                     	ds	1
  1205  000076                     ?___awdiv:
  1206                           	opt stack 0
  1207  000076                     CANsendMessage@dataLength:
  1208                           	opt stack 0
  1209  000076                     ___lwdiv@counter:
  1210                           	opt stack 0
  1211  000076                     delay_ms@value_ms:
  1212                           	opt stack 0
  1213  000076                     ___awdiv@dividend:
  1214                           	opt stack 0
  1215                           
  1216                           ; 2 bytes @ 0x16
  1217  000076                     	ds	1
  1218  000077                     CANsendMessage@flags:
  1219                           	opt stack 0
  1220  000077                     utoa@buf:
  1221                           	opt stack 0
  1222                           
  1223                           ; 2 bytes @ 0x17
  1224  000077                     	ds	1
  1225  000078                     ??__tdiv_to_l_:
  1226  000078                     ??_CANsendMessage:
  1227  000078                     ??___flge:
  1228  000078                     LCD_send_command@D2:
  1229                           	opt stack 0
  1230  000078                     ___llmod@counter:
  1231                           	opt stack 0
  1232  000078                     ___xxtofl@sign:
  1233                           	opt stack 0
  1234  000078                     ___awdiv@divisor:
  1235                           	opt stack 0
  1236  000078                     __div_to_l_@quot:
  1237                           	opt stack 0
  1238  000078                     ___lldiv@quotient:
  1239                           	opt stack 0
  1240                           
  1241                           ; 4 bytes @ 0x18
  1242  000078                     	ds	1
  1243  000079                     CANSetMask@numBuffer:
  1244                           	opt stack 0
  1245  000079                     CANSetFilter@numBuffer:
  1246                           	opt stack 0
  1247  000079                     LCD_send_command@D1:
  1248                           	opt stack 0
  1249  000079                     ___xxtofl@exp:
  1250                           	opt stack 0
  1251  000079                     utoa@val:
  1252                           	opt stack 0
  1253                           
  1254                           ; 2 bytes @ 0x19
  1255  000079                     	ds	1
  1256  00007A                     LCD_send_command@D0:
  1257                           	opt stack 0
  1258  00007A                     ___awdiv@counter:
  1259                           	opt stack 0
  1260  00007A                     CANSetMask@tamp:
  1261                           	opt stack 0
  1262  00007A                     CANSetFilter@tamp:
  1263                           	opt stack 0
  1264  00007A                     ___xxtofl@arg:
  1265                           	opt stack 0
  1266                           
  1267                           ; 4 bytes @ 0x1A
  1268  00007A                     	ds	1
  1269  00007B                     LCD_send_command@D3:
  1270                           	opt stack 0
  1271  00007B                     ___awdiv@sign:
  1272                           	opt stack 0
  1273  00007B                     utoa@base:
  1274                           	opt stack 0
  1275  00007B                     __tdiv_to_l_@quot:
  1276                           	opt stack 0
  1277                           
  1278                           ; 4 bytes @ 0x1B
  1279  00007B                     	ds	1
  1280  00007C                     LCD_shift_cursor@number_of_shift:
  1281                           	opt stack 0
  1282  00007C                     LCD_goto_line@line:
  1283                           	opt stack 0
  1284  00007C                     LCD_write_char@D3:
  1285                           	opt stack 0
  1286  00007C                     LCD_cursor@blinking:
  1287                           	opt stack 0
  1288  00007C                     __div_to_l_@cntr:
  1289                           	opt stack 0
  1290  00007C                     ___lldiv@counter:
  1291                           	opt stack 0
  1292  00007C                     ___awdiv@quotient:
  1293                           	opt stack 0
  1294  00007C                     CANsendMessage@tamp:
  1295                           	opt stack 0
  1296                           
  1297                           ; 4 bytes @ 0x1C
  1298  00007C                     	ds	1
  1299  00007D                     LCD_shift_cursor@shift:
  1300                           	opt stack 0
  1301  00007D                     LCD_write_char@D2:
  1302                           	opt stack 0
  1303  00007D                     LCD_cursor@active:
  1304                           	opt stack 0
  1305  00007D                     __div_to_l_@exp1:
  1306                           	opt stack 0
  1307  00007D                     utoa@v:
  1308                           	opt stack 0
  1309                           
  1310                           ; 2 bytes @ 0x1D
  1311  00007D                     	ds	1
  1312  00007E                     ?___fldiv:
  1313                           	opt stack 0
  1314  00007E                     ?___flmul:
  1315                           	opt stack 0
  1316  00007E                     CANInitialize@phaseSeg1:
  1317                           	opt stack 0
  1318  00007E                     LCD_shift_cursor@i:
  1319                           	opt stack 0
  1320  00007E                     LCD_write_char@D1:
  1321                           	opt stack 0
  1322  00007E                     LCD_initialize@quartz_frequency:
  1323                           	opt stack 0
  1324  00007E                     ___fldiv@b:
  1325                           	opt stack 0
  1326  00007E                     ___flmul@b:
  1327                           	opt stack 0
  1328                           
  1329                           ; 4 bytes @ 0x1E
  1330  00007E                     	ds	1
  1331  00007F                     CANInitialize@phaseSeg2:
  1332                           	opt stack 0
  1333  00007F                     LCD_goto_xy@y:
  1334                           	opt stack 0
  1335  00007F                     LCD_write_char@D0:
  1336                           	opt stack 0
  1337  00007F                     __tdiv_to_l_@cntr:
  1338                           	opt stack 0
  1339  00007F                     utoa@c:
  1340                           	opt stack 0
  1341                           
  1342                           ; 1 bytes @ 0x1F
  1343  00007F                     	ds	1
  1344  000080                     CANInitialize@SJW:
  1345                           	opt stack 0
  1346  000080                     LCD_goto_xy@x:
  1347                           	opt stack 0
  1348  000080                     LCD_write_char@value:
  1349                           	opt stack 0
  1350  000080                     __tdiv_to_l_@exp1:
  1351                           	opt stack 0
  1352  000080                     itoa@buf:
  1353                           	opt stack 0
  1354                           
  1355                           ; 2 bytes @ 0x20
  1356  000080                     	ds	1
  1357  000081                     CANInitialize@BRP:
  1358                           	opt stack 0
  1359  000081                     LCD_write_message@buffer:
  1360                           	opt stack 0
  1361  000081                     LCD_write_string@buffer:
  1362                           	opt stack 0
  1363                           
  1364                           ; 2 bytes @ 0x21
  1365  000081                     	ds	1
  1366  000082                     CANInitialize@flags:
  1367                           	opt stack 0
  1368  000082                     itoa@val:
  1369                           	opt stack 0
  1370  000082                     ___fldiv@a:
  1371                           	opt stack 0
  1372  000082                     ___flmul@a:
  1373                           	opt stack 0
  1374                           
  1375                           ; 4 bytes @ 0x22
  1376  000082                     	ds	1
  1377  000083                     ??_CANInitialize:
  1378  000083                     
  1379                           ; 0 bytes @ 0x23
  1380  000083                     	ds	1
  1381  000084                     itoa@base:
  1382                           	opt stack 0
  1383                           
  1384                           ; 2 bytes @ 0x24
  1385  000084                     	ds	2
  1386  000086                     ??___fldiv:
  1387  000086                     ??___flmul:
  1388  000086                     itoa@cp:
  1389                           	opt stack 0
  1390                           
  1391                           ; 2 bytes @ 0x26
  1392  000086                     	ds	1
  1393  000087                     CANInitialize@propSeg:
  1394                           	opt stack 0
  1395                           
  1396                           ; 1 bytes @ 0x27
  1397  000087                     	ds	1
  1398  000088                     CANInitialize@FilterConfig1:
  1399                           	opt stack 0
  1400  000088                     LCD_write_integer@value:
  1401                           	opt stack 0
  1402                           
  1403                           ; 2 bytes @ 0x28
  1404  000088                     	ds	1
  1405  000089                     CANInitialize@FilterConfig2:
  1406                           	opt stack 0
  1407                           
  1408                           ; 1 bytes @ 0x29
  1409  000089                     	ds	1
  1410  00008A                     LCD_write_integer@number_of_digits:
  1411                           	opt stack 0
  1412  00008A                     ___fldiv@sign:
  1413                           	opt stack 0
  1414  00008A                     ___flmul@sign:
  1415                           	opt stack 0
  1416                           
  1417                           ; 1 bytes @ 0x2A
  1418  00008A                     	ds	1
  1419  00008B                     LCD_write_integer@zero_cleaning:
  1420                           	opt stack 0
  1421  00008B                     ___flmul@aexp:
  1422                           	opt stack 0
  1423  00008B                     ___fldiv@rem:
  1424                           	opt stack 0
  1425                           
  1426                           ; 4 bytes @ 0x2B
  1427  00008B                     	ds	1
  1428  00008C                     ??_LCD_write_integer:
  1429  00008C                     ___flmul@grs:
  1430                           	opt stack 0
  1431                           
  1432                           ; 4 bytes @ 0x2C
  1433  00008C                     	ds	3
  1434  00008F                     ___fldiv@new_exp:
  1435                           	opt stack 0
  1436                           
  1437                           ; 2 bytes @ 0x2F
  1438  00008F                     	ds	1
  1439  000090                     ___flmul@bexp:
  1440                           	opt stack 0
  1441                           
  1442                           ; 1 bytes @ 0x30
  1443  000090                     	ds	1
  1444  000091                     ___fldiv@grs:
  1445                           	opt stack 0
  1446  000091                     ___flmul@prod:
  1447                           	opt stack 0
  1448  000091                     LCD_write_integer@convertedInt:
  1449                           	opt stack 0
  1450                           
  1451                           ; 6 bytes @ 0x31
  1452  000091                     	ds	4
  1453  000095                     ___fldiv@bexp:
  1454                           	opt stack 0
  1455  000095                     ___flmul@temp:
  1456                           	opt stack 0
  1457                           
  1458                           ; 2 bytes @ 0x35
  1459  000095                     	ds	1
  1460  000096                     ___fldiv@aexp:
  1461                           	opt stack 0
  1462                           
  1463                           ; 1 bytes @ 0x36
  1464  000096                     	ds	1
  1465  000097                     ?_fround:
  1466                           	opt stack 0
  1467  000097                     ?_scale:
  1468                           	opt stack 0
  1469  000097                     ?___flneg:
  1470                           	opt stack 0
  1471  000097                     LCD_write_integer@index:
  1472                           	opt stack 0
  1473  000097                     ___flneg@f1:
  1474                           	opt stack 0
  1475                           
  1476                           ; 4 bytes @ 0x37
  1477  000097                     	ds	4
  1478  00009B                     _fround$4243:
  1479                           	opt stack 0
  1480  00009B                     _scale$4244:
  1481                           	opt stack 0
  1482                           
  1483                           ; 4 bytes @ 0x3B
  1484  00009B                     	ds	4
  1485  00009F                     scale@scl:
  1486                           	opt stack 0
  1487  00009F                     _fround$4242:
  1488                           	opt stack 0
  1489                           
  1490                           ; 4 bytes @ 0x3F
  1491  00009F                     	ds	4
  1492  0000A3                     fround@prec:
  1493                           	opt stack 0
  1494                           
  1495                           ; 1 bytes @ 0x43
  1496  0000A3                     	ds	1
  1497  0000A4                     ?___fladd:
  1498                           	opt stack 0
  1499  0000A4                     ___fladd@b:
  1500                           	opt stack 0
  1501                           
  1502                           ; 4 bytes @ 0x44
  1503  0000A4                     	ds	4
  1504  0000A8                     ___fladd@a:
  1505                           	opt stack 0
  1506                           
  1507                           ; 4 bytes @ 0x48
  1508  0000A8                     	ds	4
  1509  0000AC                     ??___fladd:
  1510                           
  1511                           ; 0 bytes @ 0x4C
  1512  0000AC                     	ds	8
  1513  0000B4                     ___fladd@signs:
  1514                           	opt stack 0
  1515                           
  1516                           ; 1 bytes @ 0x54
  1517  0000B4                     	ds	1
  1518  0000B5                     ___fladd@aexp:
  1519                           	opt stack 0
  1520                           
  1521                           ; 1 bytes @ 0x55
  1522  0000B5                     	ds	1
  1523  0000B6                     ___fladd@bexp:
  1524                           	opt stack 0
  1525                           
  1526                           ; 1 bytes @ 0x56
  1527  0000B6                     	ds	1
  1528  0000B7                     ___fladd@grs:
  1529                           	opt stack 0
  1530                           
  1531                           ; 1 bytes @ 0x57
  1532  0000B7                     	ds	1
  1533  0000B8                     ?___flsub:
  1534                           	opt stack 0
  1535  0000B8                     ?___fltol:
  1536                           	opt stack 0
  1537  0000B8                     ___fltol@f1:
  1538                           	opt stack 0
  1539  0000B8                     ___flsub@b:
  1540                           	opt stack 0
  1541                           
  1542                           ; 4 bytes @ 0x58
  1543  0000B8                     	ds	4
  1544  0000BC                     ??___fltol:
  1545  0000BC                     ___flsub@a:
  1546                           	opt stack 0
  1547                           
  1548                           ; 4 bytes @ 0x5C
  1549  0000BC                     	ds	4
  1550  0000C0                     ___fltol@sign1:
  1551                           	opt stack 0
  1552                           
  1553                           ; 1 bytes @ 0x60
  1554  0000C0                     	ds	1
  1555  0000C1                     ___fltol@exp1:
  1556                           	opt stack 0
  1557                           
  1558                           ; 1 bytes @ 0x61
  1559  0000C1                     	ds	1
  1560  0000C2                     ?_sprintf:
  1561                           	opt stack 0
  1562  0000C2                     sprintf@sp:
  1563                           	opt stack 0
  1564                           
  1565                           ; 2 bytes @ 0x62
  1566  0000C2                     	ds	2
  1567  0000C4                     sprintf@f:
  1568                           	opt stack 0
  1569                           
  1570                           ; 2 bytes @ 0x64
  1571  0000C4                     	ds	6
  1572  0000CA                     ??_sprintf:
  1573                           
  1574                           ; 0 bytes @ 0x6A
  1575  0000CA                     	ds	2
  1576  0000CC                     tblptru	equ	0xFF8
  1577                           tblptrh	equ	0xFF7
  1578                           tblptrl	equ	0xFF6
  1579                           tablat	equ	0xFF5
  1580                           postinc0	equ	0xFEE
  1581                           wreg	equ	0xFE8
  1582                           
  1583                           ; 0 bytes @ 0x6C
  1584                           
  1585                           	psect	cstackCOMRAM
  1586  000027                     __pcstackCOMRAM:
  1587                           	opt stack 0
  1588  000027                     ??_ISR_bassa:
  1589  000027                     
  1590                           ; 1 bytes @ 0x0
  1591  000027                     	ds	17
  1592  000038                     ?i2___wmul:
  1593                           	opt stack 0
  1594  000038                     _CANisRxReady$3249:
  1595                           	opt stack 0
  1596  000038                     i2_CANisTxReady$3247:
  1597                           	opt stack 0
  1598  000038                     i2delay_set_quartz@frequency:
  1599                           	opt stack 0
  1600  000038                     CANreceiveMessage@msg:
  1601                           	opt stack 0
  1602  000038                     i2___wmul@multiplier:
  1603                           	opt stack 0
  1604  000038                     i2CANsendMessage@identifier:
  1605                           	opt stack 0
  1606                           
  1607                           ; 4 bytes @ 0x11
  1608  000038                     	ds	2
  1609  00003A                     ??_CANreceiveMessage:
  1610  00003A                     i2___wmul@multiplicand:
  1611                           	opt stack 0
  1612                           
  1613                           ; 2 bytes @ 0x13
  1614  00003A                     	ds	2
  1615  00003C                     i2CANsendMessage@data:
  1616                           	opt stack 0
  1617  00003C                     i2___wmul@product:
  1618                           	opt stack 0
  1619                           
  1620                           ; 2 bytes @ 0x15
  1621  00003C                     	ds	2
  1622  00003E                     i2CANsendMessage@dataLength:
  1623                           	opt stack 0
  1624  00003E                     i2delay_ms@value_ms:
  1625                           	opt stack 0
  1626                           
  1627                           ; 2 bytes @ 0x17
  1628  00003E                     	ds	1
  1629  00003F                     i2CANsendMessage@flags:
  1630                           	opt stack 0
  1631                           
  1632                           ; 1 bytes @ 0x18
  1633  00003F                     	ds	1
  1634  000040                     ??i2_CANsendMessage:
  1635  000040                     i2LCD_send_command@D2:
  1636                           	opt stack 0
  1637                           
  1638                           ; 1 bytes @ 0x19
  1639  000040                     	ds	1
  1640  000041                     i2LCD_send_command@D1:
  1641                           	opt stack 0
  1642                           
  1643                           ; 1 bytes @ 0x1A
  1644  000041                     	ds	1
  1645  000042                     CANreceiveMessage@error:
  1646                           	opt stack 0
  1647  000042                     i2LCD_send_command@D0:
  1648                           	opt stack 0
  1649                           
  1650                           ; 1 bytes @ 0x1B
  1651  000042                     	ds	1
  1652  000043                     CANreceiveMessage@tamp:
  1653                           	opt stack 0
  1654  000043                     i2LCD_send_command@D3:
  1655                           	opt stack 0
  1656                           
  1657                           ; 1 bytes @ 0x1C
  1658  000043                     	ds	1
  1659  000044                     i2LCD_goto_line@line:
  1660                           	opt stack 0
  1661  000044                     i2LCD_write_char@D3:
  1662                           	opt stack 0
  1663  000044                     i2LCD_cursor@blinking:
  1664                           	opt stack 0
  1665  000044                     i2CANsendMessage@tamp:
  1666                           	opt stack 0
  1667                           
  1668                           ; 4 bytes @ 0x1D
  1669  000044                     	ds	1
  1670  000045                     i2LCD_write_char@D2:
  1671                           	opt stack 0
  1672  000045                     i2LCD_cursor@active:
  1673                           	opt stack 0
  1674                           
  1675                           ; 1 bytes @ 0x1E
  1676  000045                     	ds	1
  1677  000046                     i2LCD_write_char@D1:
  1678                           	opt stack 0
  1679  000046                     i2LCD_initialize@quartz_frequency:
  1680                           	opt stack 0
  1681                           
  1682                           ; 1 bytes @ 0x1F
  1683  000046                     	ds	1
  1684  000047                     i2LCD_write_char@D0:
  1685                           	opt stack 0
  1686                           
  1687                           ; 1 bytes @ 0x20
  1688  000047                     	ds	1
  1689  000048                     i2LCD_write_char@value:
  1690                           	opt stack 0
  1691                           
  1692                           ; 1 bytes @ 0x21
  1693  000048                     	ds	1
  1694  000049                     i2LCD_write_message@buffer:
  1695                           	opt stack 0
  1696                           
  1697                           ; 2 bytes @ 0x22
  1698  000049                     	ds	2
  1699  00004B                     ISR_alta@i:
  1700                           	opt stack 0
  1701                           
  1702                           ; 1 bytes @ 0x24
  1703  00004B                     	ds	1
  1704                           tblptru	equ	0xFF8
  1705                           tblptrh	equ	0xFF7
  1706                           tblptrl	equ	0xFF6
  1707                           tablat	equ	0xFF5
  1708                           postinc0	equ	0xFEE
  1709                           wreg	equ	0xFE8
  1710                           
  1711 ;;
  1712 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1713 ;;
  1714 ;; *************** function _main *****************
  1715 ;; Defined at:
  1716 ;;		line 195 in file "RemoteCan.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;		None               void
  1723 ;; Registers used:
  1724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1732 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1733 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1734 ;;Total ram usage:        8 bytes
  1735 ;; Hardware stack levels required when called:   17
  1736 ;; This function calls:
  1737 ;;		_CAN_Rx
  1738 ;;		_CAN_Tx
  1739 ;;		_CANisTxReady
  1740 ;;		_CANsendMessage
  1741 ;;		_F1_Button_Polling
  1742 ;;		_F2_Button_Polling
  1743 ;;		_Joystick_Polling
  1744 ;;		_LCD_End
  1745 ;;		_LCD_Handler
  1746 ;;		_LCD_goto_line
  1747 ;;		_LCD_initialize
  1748 ;;		_LCD_write_message
  1749 ;;		_PWR_Button_Polling
  1750 ;;		___fladd
  1751 ;;		___flmul
  1752 ;;		___flneg
  1753 ;;		___fltol
  1754 ;;		___xxtofl
  1755 ;;		_board_initialization
  1756 ;;		_delay_ms
  1757 ;; This function is called by:
  1758 ;;		Startup code after reset
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text0
  1763  011B26                     __ptext0:
  1764                           	opt stack 0
  1765  011B26                     _main:
  1766                           	opt stack 14
  1767                           
  1768                           ;RemoteCan.c: 196: board_initialization();
  1769                           
  1770                           ;incstack = 0
  1771  011B26  ECAF  F0AE         	call	_board_initialization	;wreg free
  1772                           
  1773                           ;RemoteCan.c: 204: JoystickConstants[0] = 0.703;
  1774  011B2A  0ECF               	movlw	207
  1775  011B2C  0100               	movlb	0	; () banked
  1776  011B2E  6FCC               	movwf	_JoystickConstants& (0+255),b	;volatile
  1777  011B30  0EF7               	movlw	247
  1778  011B32  6FCD               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1779  011B34  0E33               	movlw	51
  1780  011B36  6FCE               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1781  011B38  0E3F               	movlw	63
  1782  011B3A  6FCF               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;RemoteCan.c: 205: JoystickConstants[1] = 15;
  1786  011B3C  0E00               	movlw	0
  1787  011B3E  0100               	movlb	0	; () banked
  1788  011B40  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1789  011B42  0E00               	movlw	0
  1790  011B44  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1791  011B46  0E70               	movlw	112
  1792  011B48  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1793  011B4A  0E41               	movlw	65
  1794  011B4C  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1795  011B4E                     l9394:
  1796                           
  1797                           ;RemoteCan.c: 210: PWR_Button_Polling();
  1798  011B4E  ECC4  F0B3         	call	_PWR_Button_Polling	;wreg free
  1799                           
  1800                           ;RemoteCan.c: 211: F1_Button_Polling();
  1801  011B52  ECEE  F0B3         	call	_F1_Button_Polling	;wreg free
  1802                           
  1803                           ;RemoteCan.c: 212: F2_Button_Polling();
  1804  011B56  ECE0  F0B3         	call	_F2_Button_Polling	;wreg free
  1805                           
  1806                           ;RemoteCan.c: 215: if (power_switch == 0) {
  1807  011B5A  B04D               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1808  011B5C  D09B               	goto	l796
  1809                           
  1810                           ;RemoteCan.c: 216: dir = 1;
  1811  011B5E  0E01               	movlw	1
  1812  011B60  0100               	movlb	0	; () banked
  1813  011B62  6FE4               	movwf	_dir& (0+255),b	;volatile
  1814                           
  1815                           ;RemoteCan.c: 217: set_speed = 0;
  1816  011B64  0E00               	movlw	0
  1817  011B66  0100               	movlb	0	; () banked
  1818  011B68  6FE3               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1819  011B6A  0E00               	movlw	0
  1820  011B6C  6FE2               	movwf	_set_speed& (0+255),b	;volatile
  1821                           
  1822                           ;RemoteCan.c: 218: data_steering [0] = 90;
  1823  011B6E  0E5A               	movlw	90
  1824  011B70  0100               	movlb	0	; () banked
  1825  011B72  6FEB               	movwf	_data_steering& (0+255),b
  1826                           
  1827                           ;RemoteCan.c: 219: data_brake [0] = 0;
  1828  011B74  0E00               	movlw	0
  1829  011B76  6E26               	movwf	_data_brake,c
  1830                           
  1831                           ;RemoteCan.c: 220: data_brake [1] = 1;
  1832  011B78  0E01               	movlw	1
  1833  011B7A  6E27               	movwf	_data_brake+1,c
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;RemoteCan.c: 221: CAN_Tx();
  1837  011B7C  EC9F  F0AD         	call	_CAN_Tx	;wreg free
  1838                           
  1839                           ;RemoteCan.c: 222: PORTDbits.RD6 = 0;
  1840  011B80  9C83               	bcf	3971,6,c	;volatile
  1841                           
  1842                           ;RemoteCan.c: 223: PORTDbits.RD5 = 0;
  1843  011B82  9A83               	bcf	3971,5,c	;volatile
  1844                           
  1845                           ;RemoteCan.c: 224: LCD_initialize(16);
  1846  011B84  0E10               	movlw	16
  1847  011B86  EC43  F0AA         	call	_LCD_initialize
  1848                           
  1849                           ;RemoteCan.c: 225: LCD_goto_line(1);
  1850  011B8A  0E01               	movlw	1
  1851  011B8C  EC0D  F0AC         	call	_LCD_goto_line
  1852                           
  1853                           ;RemoteCan.c: 226: LCD_write_message("====================");
  1854  011B90  0E6A               	movlw	low STR_1
  1855  011B92  0100               	movlb	0	; () banked
  1856  011B94  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1857  011B96  0EFF               	movlw	high STR_1
  1858  011B98  0100               	movlb	0	; () banked
  1859  011B9A  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1860  011B9C  ECA4  F0B2         	call	_LCD_write_message	;wreg free
  1861                           
  1862                           ;RemoteCan.c: 227: LCD_goto_line(2);
  1863  011BA0  0E02               	movlw	2
  1864  011BA2  EC0D  F0AC         	call	_LCD_goto_line
  1865                           
  1866                           ;RemoteCan.c: 228: LCD_write_message("==> VEHICLE  OFF <==");
  1867  011BA6  0E40               	movlw	low STR_2
  1868  011BA8  0100               	movlb	0	; () banked
  1869  011BAA  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1870  011BAC  0EFF               	movlw	high STR_2
  1871  011BAE  0100               	movlb	0	; () banked
  1872  011BB0  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1873  011BB2  ECA4  F0B2         	call	_LCD_write_message	;wreg free
  1874                           
  1875                           ;RemoteCan.c: 229: LCD_goto_line(3);
  1876  011BB6  0E03               	movlw	3
  1877  011BB8  EC0D  F0AC         	call	_LCD_goto_line
  1878                           
  1879                           ;RemoteCan.c: 230: LCD_write_message("  Press the button  ");
  1880  011BBC  0EC2               	movlw	low STR_3
  1881  011BBE  0100               	movlb	0	; () banked
  1882  011BC0  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1883  011BC2  0EFE               	movlw	high STR_3
  1884  011BC4  0100               	movlb	0	; () banked
  1885  011BC6  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1886  011BC8  ECA4  F0B2         	call	_LCD_write_message	;wreg free
  1887                           
  1888                           ;RemoteCan.c: 231: LCD_goto_line(4);
  1889  011BCC  0E04               	movlw	4
  1890  011BCE  EC0D  F0AC         	call	_LCD_goto_line
  1891                           
  1892                           ;RemoteCan.c: 232: LCD_write_message("====================");
  1893  011BD2  0E6A               	movlw	low STR_1
  1894  011BD4  0100               	movlb	0	; () banked
  1895  011BD6  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  1896  011BD8  0EFF               	movlw	high STR_1
  1897  011BDA  0100               	movlb	0	; () banked
  1898  011BDC  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1899  011BDE  ECA4  F0B2         	call	_LCD_write_message	;wreg free
  1900                           
  1901                           ;RemoteCan.c: 233: while (power_switch == 0) {
  1902  011BE2  D054               	goto	l9438
  1903  011BE4                     l9428:
  1904                           
  1905                           ;RemoteCan.c: 234: if ((time_counter - pr_time_1) >= 30) {
  1906  011BE4  C0D8  F14D         	movff	_pr_time_1,??_main	;volatile
  1907  011BE8  C0D9  F14E         	movff	_pr_time_1+1,??_main+1	;volatile
  1908  011BEC  C0DA  F14F         	movff	_pr_time_1+2,??_main+2	;volatile
  1909  011BF0  C0DB  F150         	movff	_pr_time_1+3,??_main+3	;volatile
  1910  011BF4  0101               	movlb	1	; () banked
  1911  011BF6  1F4D               	comf	??_main& (0+255),f,b
  1912  011BF8  1F4E               	comf	(??_main+1)& (0+255),f,b
  1913  011BFA  1F4F               	comf	(??_main+2)& (0+255),f,b
  1914  011BFC  1F50               	comf	(??_main+3)& (0+255),f,b
  1915  011BFE  2B4D               	incf	??_main& (0+255),f,b
  1916  011C00  0E00               	movlw	0
  1917  011C02  234E               	addwfc	(??_main+1)& (0+255),f,b
  1918  011C04  234F               	addwfc	(??_main+2)& (0+255),f,b
  1919  011C06  2350               	addwfc	(??_main+3)& (0+255),f,b
  1920  011C08  5019               	movf	_time_counter,w,c	;volatile
  1921  011C0A  0101               	movlb	1	; () banked
  1922  011C0C  254D               	addwf	??_main& (0+255),w,b
  1923  011C0E  0101               	movlb	1	; () banked
  1924  011C10  6F51               	movwf	(??_main+4)& (0+255),b
  1925  011C12  501A               	movf	_time_counter+1,w,c	;volatile
  1926  011C14  0101               	movlb	1	; () banked
  1927  011C16  214E               	addwfc	(??_main+1)& (0+255),w,b
  1928  011C18  0101               	movlb	1	; () banked
  1929  011C1A  6F52               	movwf	(??_main+5)& (0+255),b
  1930  011C1C  501B               	movf	_time_counter+2,w,c	;volatile
  1931  011C1E  0101               	movlb	1	; () banked
  1932  011C20  214F               	addwfc	(??_main+2)& (0+255),w,b
  1933  011C22  0101               	movlb	1	; () banked
  1934  011C24  6F53               	movwf	(??_main+6)& (0+255),b
  1935  011C26  501C               	movf	_time_counter+3,w,c	;volatile
  1936  011C28  0101               	movlb	1	; () banked
  1937  011C2A  2150               	addwfc	(??_main+3)& (0+255),w,b
  1938  011C2C  0101               	movlb	1	; () banked
  1939  011C2E  6F54               	movwf	(??_main+7)& (0+255),b
  1940  011C30  0101               	movlb	1	; () banked
  1941  011C32  5154               	movf	(??_main+7)& (0+255),w,b
  1942  011C34  0101               	movlb	1	; () banked
  1943  011C36  1153               	iorwf	(??_main+6)& (0+255),w,b
  1944  011C38  0101               	movlb	1	; () banked
  1945  011C3A  1152               	iorwf	(??_main+5)& (0+255),w,b
  1946  011C3C  E105               	bnz	u12300
  1947  011C3E  0E1E               	movlw	30
  1948  011C40  0101               	movlb	1	; () banked
  1949  011C42  5D51               	subwf	(??_main+4)& (0+255),w,b
  1950  011C44  A0D8               	btfss	status,0,c
  1951  011C46  D019               	goto	l9434
  1952  011C48                     u12300:
  1953                           
  1954                           ; BSR set to: 1
  1955                           ;RemoteCan.c: 235: pr_time_1 = time_counter;
  1956  011C48  C019  F0D8         	movff	_time_counter,_pr_time_1	;volatile
  1957  011C4C  C01A  F0D9         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1958  011C50  C01B  F0DA         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1959  011C54  C01C  F0DB         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1960                           
  1961                           ; BSR set to: 1
  1962                           ;RemoteCan.c: 236: PORTDbits.RD7 = ~PORTDbits.RD7;
  1963  011C58  AE83               	btfss	3971,7,c	;volatile
  1964  011C5A  D002               	goto	u12310
  1965  011C5C  0E01               	movlw	1
  1966  011C5E  D001               	goto	u12316
  1967  011C60                     u12310:
  1968  011C60  0E00               	movlw	0
  1969  011C62                     u12316:
  1970  011C62  0AFF               	xorlw	255
  1971  011C64  0101               	movlb	1	; () banked
  1972  011C66  6F4D               	movwf	??_main& (0+255),b
  1973  011C68  0101               	movlb	1	; () banked
  1974  011C6A  334D               	rrcf	??_main& (0+255),f,b
  1975  011C6C  334D               	rrcf	??_main& (0+255),f,b
  1976  011C6E  5083               	movf	3971,w,c	;volatile
  1977  011C70  0101               	movlb	1	; () banked
  1978  011C72  194D               	xorwf	??_main& (0+255),w,b
  1979  011C74  0B7F               	andlw	-129
  1980  011C76  194D               	xorwf	??_main& (0+255),w,b
  1981  011C78  6E83               	movwf	3971,c	;volatile
  1982  011C7A                     l9434:
  1983                           
  1984                           ; BSR set to: 1
  1985                           ;RemoteCan.c: 237: }
  1986                           ;RemoteCan.c: 238: PWR_Button_Polling();
  1987  011C7A  ECC4  F0B3         	call	_PWR_Button_Polling	;wreg free
  1988                           
  1989                           ;RemoteCan.c: 239: delay_ms(10);
  1990  011C7E  0E00               	movlw	0
  1991  011C80  0100               	movlb	0	; () banked
  1992  011C82  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1993  011C84  0E0A               	movlw	10
  1994  011C86  6F76               	movwf	delay_ms@value_ms& (0+255),b
  1995  011C88  EC34  F0B2         	call	_delay_ms	;wreg free
  1996  011C8C                     l9438:
  1997  011C8C  A04D               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1998  011C8E  D7AA               	goto	l9428
  1999                           
  2000                           ;RemoteCan.c: 240: }
  2001                           ;RemoteCan.c: 241: PORTDbits.RD7 = 0;
  2002  011C90  9E83               	bcf	3971,7,c	;volatile
  2003                           
  2004                           ;RemoteCan.c: 242: display_refresh = 1;
  2005  011C92  8C4C               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  2006  011C94                     l796:
  2007                           
  2008                           ;RemoteCan.c: 243: }
  2009                           ;RemoteCan.c: 246: if (PORTAbits.RA2 == 1) {
  2010  011C94  A480               	btfss	3968,2,c	;volatile
  2011  011C96  D004               	goto	l801
  2012                           
  2013                           ;RemoteCan.c: 247: switch_position = 0;
  2014  011C98  0E00               	movlw	0
  2015  011C9A  0100               	movlb	0	; () banked
  2016  011C9C  6FE7               	movwf	_switch_position& (0+255),b	;volatile
  2017                           
  2018                           ;RemoteCan.c: 248: } else {
  2019  011C9E  D00D               	goto	l9446
  2020  011CA0                     l801:
  2021                           
  2022                           ;RemoteCan.c: 249: if (PORTAbits.RA3 == 0) {
  2023  011CA0  B680               	btfsc	3968,3,c	;volatile
  2024  011CA2  D005               	goto	l9444
  2025                           
  2026                           ;RemoteCan.c: 250: switch_position = 1;
  2027  011CA4  0E01               	movlw	1
  2028  011CA6  0100               	movlb	0	; () banked
  2029  011CA8  6FE7               	movwf	_switch_position& (0+255),b	;volatile
  2030                           
  2031                           ;RemoteCan.c: 251: dir = 1;
  2032  011CAA  0E01               	movlw	1
  2033  011CAC  D004               	goto	L1
  2034  011CAE                     l9444:
  2035                           
  2036                           ;RemoteCan.c: 253: switch_position = 2;
  2037  011CAE  0E02               	movlw	2
  2038  011CB0  0100               	movlb	0	; () banked
  2039  011CB2  6FE7               	movwf	_switch_position& (0+255),b	;volatile
  2040                           
  2041                           ;RemoteCan.c: 254: dir = 0;
  2042  011CB4  0E00               	movlw	0
  2043  011CB6                     L1:
  2044  011CB6  0100               	movlb	0	; () banked
  2045  011CB8  6FE4               	movwf	_dir& (0+255),b	;volatile
  2046  011CBA                     l9446:
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;RemoteCan.c: 255: }
  2050                           ;RemoteCan.c: 256: }
  2051                           ;RemoteCan.c: 259: if (F1_switch == 1) {
  2052  011CBA  A24C               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  2053  011CBC  D0CB               	goto	l9496
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;RemoteCan.c: 260: y = 0;
  2057  011CBE  9E4D               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;RemoteCan.c: 261: if ((x < 1)&&(F2_switch == 0)) {
  2061  011CC0  0100               	movlb	0	; () banked
  2062  011CC2  51E8               	movf	_x& (0+255),w,b	;volatile
  2063  011CC4  B4D8               	btfsc	status,2,c
  2064                           
  2065                           ; BSR set to: 0
  2066  011CC6  B44C               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2067  011CC8  D02E               	goto	l9466
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;RemoteCan.c: 262: space_available = 0;
  2071  011CCA  924D               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;RemoteCan.c: 263: parking_state = 1;
  2075  011CCC  0E01               	movlw	1
  2076  011CCE  0100               	movlb	0	; () banked
  2077  011CD0  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  2078                           
  2079                           ;RemoteCan.c: 264: JoystickConstants[1] = 1;
  2080  011CD2  0E00               	movlw	0
  2081  011CD4  0100               	movlb	0	; () banked
  2082  011CD6  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2083  011CD8  0E00               	movlw	0
  2084  011CDA  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2085  011CDC  0E80               	movlw	128
  2086  011CDE  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2087  011CE0  0E3F               	movlw	63
  2088  011CE2  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2089  011CE4                     l9458:
  2090  011CE4  EC83  F0B3         	call	_CANisTxReady	;wreg free
  2091  011CE8  0900               	iorlw	0
  2092  011CEA  B4D8               	btfsc	status,2,c
  2093  011CEC  D7FB               	goto	l9458
  2094                           
  2095                           ;RemoteCan.c: 266: park_assist_state[0] = 0b00000001;
  2096  011CEE  0E01               	movlw	1
  2097  011CF0  0101               	movlb	1	; () banked
  2098  011CF2  6F2C               	movwf	_park_assist_state& (0+255),b
  2099                           
  2100                           ; BSR set to: 1
  2101                           ;RemoteCan.c: 267: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2102  011CF4  0E0A               	movlw	10
  2103  011CF6  0100               	movlb	0	; () banked
  2104  011CF8  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  2105  011CFA  0E00               	movlw	0
  2106  011CFC  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2107  011CFE  0E00               	movlw	0
  2108  011D00  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2109  011D02  0E00               	movlw	0
  2110  011D04  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2111  011D06  0E2C               	movlw	low _park_assist_state
  2112  011D08  0100               	movlb	0	; () banked
  2113  011D0A  6F74               	movwf	CANsendMessage@data& (0+255),b
  2114  011D0C  0E01               	movlw	high _park_assist_state
  2115  011D0E  0100               	movlb	0	; () banked
  2116  011D10  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  2117  011D12  0E08               	movlw	8
  2118  011D14  0100               	movlb	0	; () banked
  2119  011D16  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  2120  011D18  0EBC               	movlw	188
  2121  011D1A  0100               	movlb	0	; () banked
  2122  011D1C  6F77               	movwf	CANsendMessage@flags& (0+255),b
  2123  011D1E  ECCD  F089         	call	_CANsendMessage	;wreg free
  2124                           
  2125                           ;RemoteCan.c: 268: x++;
  2126  011D22  0100               	movlb	0	; () banked
  2127  011D24  2BE8               	incf	_x& (0+255),f,b	;volatile
  2128  011D26                     l9466:
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;RemoteCan.c: 269: }
  2132                           ;RemoteCan.c: 271: if ((F2_switch == 1)&&(space_available == 1)&&(space_gap_reached == 1
      +                          )) {
  2133  011D26  B44C               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2134                           
  2135                           ; BSR set to: 0
  2136  011D28  A24D               	btfss	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2137  011D2A  D02B               	goto	l9484
  2138                           
  2139                           ; BSR set to: 0
  2140  011D2C  A44D               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2141  011D2E  D029               	goto	l9484
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;RemoteCan.c: 272: if (z < 1) {
  2145  011D30  0100               	movlb	0	; () banked
  2146  011D32  51E9               	movf	_z& (0+255),w,b	;volatile
  2147  011D34  A4D8               	btfss	status,2,c
  2148  011D36  D028               	goto	l9486
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;RemoteCan.c: 273: parking_state = 2;
  2152  011D38  0E02               	movlw	2
  2153  011D3A  0100               	movlb	0	; () banked
  2154  011D3C  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  2155  011D3E                     l9476:
  2156  011D3E  EC83  F0B3         	call	_CANisTxReady	;wreg free
  2157  011D42  0900               	iorlw	0
  2158  011D44  B4D8               	btfsc	status,2,c
  2159  011D46  D7FB               	goto	l9476
  2160                           
  2161                           ;RemoteCan.c: 275: CANsendMessage(0b00000001100, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  2162  011D48  0E0C               	movlw	12
  2163  011D4A  0100               	movlb	0	; () banked
  2164  011D4C  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  2165  011D4E  0E00               	movlw	0
  2166  011D50  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2167  011D52  0E00               	movlw	0
  2168  011D54  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2169  011D56  0E00               	movlw	0
  2170  011D58  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2171  011D5A  0E25               	movlw	low _data
  2172  011D5C  0100               	movlb	0	; () banked
  2173  011D5E  6F74               	movwf	CANsendMessage@data& (0+255),b
  2174  011D60  0E00               	movlw	high _data
  2175  011D62  0100               	movlb	0	; () banked
  2176  011D64  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  2177  011D66  0E08               	movlw	8
  2178  011D68  0100               	movlb	0	; () banked
  2179  011D6A  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  2180  011D6C  0EBC               	movlw	188
  2181  011D6E  0100               	movlb	0	; () banked
  2182  011D70  6F77               	movwf	CANsendMessage@flags& (0+255),b
  2183  011D72  ECCD  F089         	call	_CANsendMessage	;wreg free
  2184                           
  2185                           ;RemoteCan.c: 276: x = 0;
  2186  011D76  0E00               	movlw	0
  2187  011D78  0100               	movlb	0	; () banked
  2188  011D7A  6FE8               	movwf	_x& (0+255),b	;volatile
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;RemoteCan.c: 277: z++;
  2192  011D7C  0100               	movlb	0	; () banked
  2193  011D7E  2BE9               	incf	_z& (0+255),f,b	;volatile
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;RemoteCan.c: 278: }
  2197                           ;RemoteCan.c: 279: } else {
  2198  011D80  D003               	goto	l9486
  2199  011D82                     l9484:
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;RemoteCan.c: 280: z = 0;
  2203  011D82  0E00               	movlw	0
  2204  011D84  0100               	movlb	0	; () banked
  2205  011D86  6FE9               	movwf	_z& (0+255),b	;volatile
  2206  011D88                     l9486:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;RemoteCan.c: 281: }
  2210                           ;RemoteCan.c: 283: if ((time_counter - pr_time_5) >= 30) {
  2211  011D88  C011  F14D         	movff	_pr_time_5,??_main	;volatile
  2212  011D8C  C012  F14E         	movff	_pr_time_5+1,??_main+1	;volatile
  2213  011D90  C013  F14F         	movff	_pr_time_5+2,??_main+2	;volatile
  2214  011D94  C014  F150         	movff	_pr_time_5+3,??_main+3	;volatile
  2215  011D98  0101               	movlb	1	; () banked
  2216  011D9A  1F4D               	comf	??_main& (0+255),f,b
  2217  011D9C  1F4E               	comf	(??_main+1)& (0+255),f,b
  2218  011D9E  1F4F               	comf	(??_main+2)& (0+255),f,b
  2219  011DA0  1F50               	comf	(??_main+3)& (0+255),f,b
  2220  011DA2  2B4D               	incf	??_main& (0+255),f,b
  2221  011DA4  0E00               	movlw	0
  2222  011DA6  234E               	addwfc	(??_main+1)& (0+255),f,b
  2223  011DA8  234F               	addwfc	(??_main+2)& (0+255),f,b
  2224  011DAA  2350               	addwfc	(??_main+3)& (0+255),f,b
  2225  011DAC  5019               	movf	_time_counter,w,c	;volatile
  2226  011DAE  0101               	movlb	1	; () banked
  2227  011DB0  254D               	addwf	??_main& (0+255),w,b
  2228  011DB2  0101               	movlb	1	; () banked
  2229  011DB4  6F51               	movwf	(??_main+4)& (0+255),b
  2230  011DB6  501A               	movf	_time_counter+1,w,c	;volatile
  2231  011DB8  0101               	movlb	1	; () banked
  2232  011DBA  214E               	addwfc	(??_main+1)& (0+255),w,b
  2233  011DBC  0101               	movlb	1	; () banked
  2234  011DBE  6F52               	movwf	(??_main+5)& (0+255),b
  2235  011DC0  501B               	movf	_time_counter+2,w,c	;volatile
  2236  011DC2  0101               	movlb	1	; () banked
  2237  011DC4  214F               	addwfc	(??_main+2)& (0+255),w,b
  2238  011DC6  0101               	movlb	1	; () banked
  2239  011DC8  6F53               	movwf	(??_main+6)& (0+255),b
  2240  011DCA  501C               	movf	_time_counter+3,w,c	;volatile
  2241  011DCC  0101               	movlb	1	; () banked
  2242  011DCE  2150               	addwfc	(??_main+3)& (0+255),w,b
  2243  011DD0  0101               	movlb	1	; () banked
  2244  011DD2  6F54               	movwf	(??_main+7)& (0+255),b
  2245  011DD4  0101               	movlb	1	; () banked
  2246  011DD6  5154               	movf	(??_main+7)& (0+255),w,b
  2247  011DD8  0101               	movlb	1	; () banked
  2248  011DDA  1153               	iorwf	(??_main+6)& (0+255),w,b
  2249  011DDC  0101               	movlb	1	; () banked
  2250  011DDE  1152               	iorwf	(??_main+5)& (0+255),w,b
  2251  011DE0  E105               	bnz	u12440
  2252  011DE2  0E1E               	movlw	30
  2253  011DE4  0101               	movlb	1	; () banked
  2254  011DE6  5D51               	subwf	(??_main+4)& (0+255),w,b
  2255  011DE8  A0D8               	btfss	status,0,c
  2256  011DEA  D06F               	goto	l9524
  2257  011DEC                     u12440:
  2258                           
  2259                           ; BSR set to: 1
  2260                           ;RemoteCan.c: 284: pr_time_5 = time_counter;
  2261  011DEC  C019  F011         	movff	_time_counter,_pr_time_5	;volatile
  2262  011DF0  C01A  F012         	movff	_time_counter+1,_pr_time_5+1	;volatile
  2263  011DF4  C01B  F013         	movff	_time_counter+2,_pr_time_5+2	;volatile
  2264  011DF8  C01C  F014         	movff	_time_counter+3,_pr_time_5+3	;volatile
  2265                           
  2266                           ;RemoteCan.c: 285: if (space_available == 0) {
  2267  011DFC  B24D               	btfsc	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2268  011DFE  D013               	goto	l817
  2269                           
  2270                           ; BSR set to: 1
  2271                           ;RemoteCan.c: 286: PORTDbits.RD6 = ~PORTDbits.RD6;
  2272  011E00  AC83               	btfss	3971,6,c	;volatile
  2273  011E02  D002               	goto	u12460
  2274  011E04  0E01               	movlw	1
  2275  011E06  D001               	goto	u12466
  2276  011E08                     u12460:
  2277  011E08  0E00               	movlw	0
  2278  011E0A                     u12466:
  2279  011E0A  0AFF               	xorlw	255
  2280  011E0C  0101               	movlb	1	; () banked
  2281  011E0E  6F4D               	movwf	??_main& (0+255),b
  2282  011E10  0101               	movlb	1	; () banked
  2283  011E12  3B4D               	swapf	??_main& (0+255),f,b
  2284  011E14  474D               	rlncf	??_main& (0+255),f,b
  2285  011E16  474D               	rlncf	??_main& (0+255),f,b
  2286  011E18  5083               	movf	3971,w,c	;volatile
  2287  011E1A  0101               	movlb	1	; () banked
  2288  011E1C  194D               	xorwf	??_main& (0+255),w,b
  2289  011E1E  0BBF               	andlw	-65
  2290  011E20  194D               	xorwf	??_main& (0+255),w,b
  2291  011E22  6E83               	movwf	3971,c	;volatile
  2292  011E24  D051               	goto	l9522
  2293  011E26                     l817:
  2294                           
  2295                           ; BSR set to: 1
  2296                           ;RemoteCan.c: 289: PORTDbits.RD6 = 1;
  2297  011E26  8C83               	bsf	3971,6,c	;volatile
  2298                           
  2299                           ;RemoteCan.c: 290: if (F2_switch == 0) {
  2300  011E28  B44C               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2301  011E2A  D012               	goto	l819
  2302                           
  2303                           ; BSR set to: 1
  2304                           ;RemoteCan.c: 291: PORTDbits.RD5 = ~PORTDbits.RD5;
  2305  011E2C  AA83               	btfss	3971,5,c	;volatile
  2306  011E2E  D002               	goto	u12480
  2307  011E30  0E01               	movlw	1
  2308  011E32  D001               	goto	u12486
  2309  011E34                     u12480:
  2310  011E34  0E00               	movlw	0
  2311  011E36                     u12486:
  2312  011E36  0AFF               	xorlw	255
  2313  011E38  0101               	movlb	1	; () banked
  2314  011E3A  6F4D               	movwf	??_main& (0+255),b
  2315  011E3C  0101               	movlb	1	; () banked
  2316  011E3E  3B4D               	swapf	??_main& (0+255),f,b
  2317  011E40  474D               	rlncf	??_main& (0+255),f,b
  2318  011E42  5083               	movf	3971,w,c	;volatile
  2319  011E44  0101               	movlb	1	; () banked
  2320  011E46  194D               	xorwf	??_main& (0+255),w,b
  2321  011E48  0BDF               	andlw	-33
  2322  011E4A  194D               	xorwf	??_main& (0+255),w,b
  2323  011E4C  6E83               	movwf	3971,c	;volatile
  2324                           
  2325                           ;RemoteCan.c: 292: } else {
  2326  011E4E  D03D               	goto	l9524
  2327  011E50                     l819:
  2328                           
  2329                           ; BSR set to: 1
  2330                           ;RemoteCan.c: 293: PORTDbits.RD5 = 1;
  2331  011E50  8A83               	bsf	3971,5,c	;volatile
  2332                           
  2333                           ; BSR set to: 1
  2334                           ;RemoteCan.c: 295: }
  2335                           ;RemoteCan.c: 296: }
  2336                           ;RemoteCan.c: 297: }
  2337                           ;RemoteCan.c: 298: } else {
  2338                           
  2339                           ; BSR set to: 1
  2340                           
  2341                           ; BSR set to: 1
  2342  011E52  D03B               	goto	l9524
  2343  011E54                     l9496:
  2344                           
  2345                           ;RemoteCan.c: 299: x = 0;
  2346  011E54  0E00               	movlw	0
  2347  011E56  0100               	movlb	0	; () banked
  2348  011E58  6FE8               	movwf	_x& (0+255),b	;volatile
  2349                           
  2350                           ;RemoteCan.c: 300: z = 0;
  2351  011E5A  0E00               	movlw	0
  2352  011E5C  0100               	movlb	0	; () banked
  2353  011E5E  6FE9               	movwf	_z& (0+255),b	;volatile
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;RemoteCan.c: 301: F2_switch = 0;
  2357  011E60  944C               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;RemoteCan.c: 302: space_available = 0;
  2361  011E62  924D               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;RemoteCan.c: 303: space_gap_reached = 0;
  2365  011E64  944D               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;RemoteCan.c: 304: PORTDbits.RD5 = 0;
  2369  011E66  9A83               	bcf	3971,5,c	;volatile
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;RemoteCan.c: 305: PORTDbits.RD6 = 0;
  2373  011E68  9C83               	bcf	3971,6,c	;volatile
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;RemoteCan.c: 306: if (y == 0) {
  2377  011E6A  BE4D               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  2378  011E6C  D02C               	goto	l9520
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;RemoteCan.c: 307: parking_state = 0;
  2382  011E6E  0E00               	movlw	0
  2383  011E70  0100               	movlb	0	; () banked
  2384  011E72  6FE5               	movwf	_parking_state& (0+255),b	;volatile
  2385                           
  2386                           ;RemoteCan.c: 308: JoystickConstants[1] = 15;
  2387  011E74  0E00               	movlw	0
  2388  011E76  0100               	movlb	0	; () banked
  2389  011E78  6FD0               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2390  011E7A  0E00               	movlw	0
  2391  011E7C  6FD1               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2392  011E7E  0E70               	movlw	112
  2393  011E80  6FD2               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2394  011E82  0E41               	movlw	65
  2395  011E84  6FD3               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2396  011E86                     l9512:
  2397  011E86  EC83  F0B3         	call	_CANisTxReady	;wreg free
  2398  011E8A  0900               	iorlw	0
  2399  011E8C  B4D8               	btfsc	status,2,c
  2400  011E8E  D7FB               	goto	l9512
  2401                           
  2402                           ;RemoteCan.c: 310: park_assist_state[0] = 0b00000000;
  2403  011E90  0E00               	movlw	0
  2404  011E92  0101               	movlb	1	; () banked
  2405  011E94  6F2C               	movwf	_park_assist_state& (0+255),b
  2406                           
  2407                           ; BSR set to: 1
  2408                           ;RemoteCan.c: 311: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2409  011E96  0E0A               	movlw	10
  2410  011E98  0100               	movlb	0	; () banked
  2411  011E9A  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  2412  011E9C  0E00               	movlw	0
  2413  011E9E  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2414  011EA0  0E00               	movlw	0
  2415  011EA2  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2416  011EA4  0E00               	movlw	0
  2417  011EA6  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2418  011EA8  0E2C               	movlw	low _park_assist_state
  2419  011EAA  0100               	movlb	0	; () banked
  2420  011EAC  6F74               	movwf	CANsendMessage@data& (0+255),b
  2421  011EAE  0E01               	movlw	high _park_assist_state
  2422  011EB0  0100               	movlb	0	; () banked
  2423  011EB2  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  2424  011EB4  0E08               	movlw	8
  2425  011EB6  0100               	movlb	0	; () banked
  2426  011EB8  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  2427  011EBA  0EBC               	movlw	188
  2428  011EBC  0100               	movlb	0	; () banked
  2429  011EBE  6F77               	movwf	CANsendMessage@flags& (0+255),b
  2430  011EC0  ECCD  F089         	call	_CANsendMessage	;wreg free
  2431                           
  2432                           ;RemoteCan.c: 312: y = 1;
  2433  011EC4  8E4D               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2434  011EC6                     l9520:
  2435                           
  2436                           ;RemoteCan.c: 313: }
  2437                           ;RemoteCan.c: 314: PORTDbits.RD6 = 0;
  2438  011EC6  9C83               	bcf	3971,6,c	;volatile
  2439  011EC8                     l9522:
  2440                           
  2441                           ;RemoteCan.c: 315: PORTDbits.RD5 = 0;
  2442  011EC8  9A83               	bcf	3971,5,c	;volatile
  2443  011ECA                     l9524:
  2444                           
  2445                           ;RemoteCan.c: 316: }
  2446                           ;RemoteCan.c: 318: Joystick_Polling();
  2447  011ECA  EC0D  F0B1         	call	_Joystick_Polling	;wreg free
  2448                           
  2449                           ;RemoteCan.c: 321: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2450  011ECE  0E00               	movlw	0
  2451  011ED0  0100               	movlb	0	; () banked
  2452  011ED2  6FA8               	movwf	___fladd@a& (0+255),b
  2453  011ED4  0E00               	movlw	0
  2454  011ED6  6FA9               	movwf	(___fladd@a+1)& (0+255),b
  2455  011ED8  0E34               	movlw	52
  2456  011EDA  6FAA               	movwf	(___fladd@a+2)& (0+255),b
  2457  011EDC  0E43               	movlw	67
  2458  011EDE  6FAB               	movwf	(___fladd@a+3)& (0+255),b
  2459  011EE0  C0CC  F082         	movff	_JoystickConstants,___flmul@a	;volatile
  2460  011EE4  C0CD  F083         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  2461  011EE8  C0CE  F084         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  2462  011EEC  C0CF  F085         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  2463  011EF0  0100               	movlb	0	; () banked
  2464  011EF2  51DC               	movf	_JoystickValues& (0+255),w,b	;volatile
  2465  011EF4  0100               	movlb	0	; () banked
  2466  011EF6  6F70               	movwf	___xxtofl@val& (0+255),b
  2467  011EF8  6B71               	clrf	(___xxtofl@val+1)& (0+255),b
  2468  011EFA  6B72               	clrf	(___xxtofl@val+2)& (0+255),b
  2469  011EFC  6B73               	clrf	(___xxtofl@val+3)& (0+255),b
  2470  011EFE  0E00               	movlw	0
  2471  011F00  EC67  F0A4         	call	___xxtofl
  2472  011F04  C070  F07E         	movff	?___xxtofl,___flmul@b
  2473  011F08  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  2474  011F0C  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  2475  011F10  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  2476  011F14  ECE8  F09B         	call	___flmul	;wreg free
  2477  011F18  C07E  F097         	movff	?___flmul,___flneg@f1
  2478  011F1C  C07F  F098         	movff	?___flmul+1,___flneg@f1+1
  2479  011F20  C080  F099         	movff	?___flmul+2,___flneg@f1+2
  2480  011F24  C081  F09A         	movff	?___flmul+3,___flneg@f1+3
  2481  011F28  EC51  F0B2         	call	___flneg	;wreg free
  2482  011F2C  C097  F0A4         	movff	?___flneg,___fladd@b
  2483  011F30  C098  F0A5         	movff	?___flneg+1,___fladd@b+1
  2484  011F34  C099  F0A6         	movff	?___flneg+2,___fladd@b+2
  2485  011F38  C09A  F0A7         	movff	?___flneg+3,___fladd@b+3
  2486  011F3C  EC94  F099         	call	___fladd	;wreg free
  2487  011F40  C0A4  F0B8         	movff	?___fladd,___fltol@f1
  2488  011F44  C0A5  F0B9         	movff	?___fladd+1,___fltol@f1+1
  2489  011F48  C0A6  F0BA         	movff	?___fladd+2,___fltol@f1+2
  2490  011F4C  C0A7  F0BB         	movff	?___fladd+3,___fltol@f1+3
  2491  011F50  EC87  F0AB         	call	___fltol	;wreg free
  2492  011F54  0100               	movlb	0	; () banked
  2493  011F56  51B8               	movf	?___fltol& (0+255),w,b
  2494  011F58  0100               	movlb	0	; () banked
  2495  011F5A  6FEB               	movwf	_data_steering& (0+255),b
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;RemoteCan.c: 322: if (parking_state == 1) {
  2499  011F5C  0100               	movlb	0	; () banked
  2500  011F5E  05E5               	decf	_parking_state& (0+255),w,b	;volatile
  2501  011F60  A4D8               	btfss	status,2,c
  2502  011F62  D05C               	goto	l826
  2503                           
  2504                           ; BSR set to: 0
  2505                           ;RemoteCan.c: 323: if (steering_correction_dir == 1) {
  2506  011F64  A64D               	btfss	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2507  011F66  D00F               	goto	l9534
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;RemoteCan.c: 324: check = data_steering[0] + steering_correction;
  2511  011F68  0100               	movlb	0	; () banked
  2512  011F6A  51E6               	movf	_steering_correction& (0+255),w,b	;volatile
  2513  011F6C  C0EB  F14D         	movff	_data_steering,??_main
  2514  011F70  0101               	movlb	1	; () banked
  2515  011F72  6B4E               	clrf	(??_main+1)& (0+255),b
  2516  011F74  0101               	movlb	1	; () banked
  2517  011F76  274D               	addwf	??_main& (0+255),f,b
  2518  011F78  0E00               	movlw	0
  2519  011F7A  234E               	addwfc	(??_main+1)& (0+255),f,b
  2520  011F7C  C14D  F0D4         	movff	??_main,_check	;volatile
  2521  011F80  C14E  F0D5         	movff	??_main+1,_check+1	;volatile
  2522  011F84  D01B               	goto	L2
  2523  011F86                     l9534:
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;RemoteCan.c: 326: check = data_steering[0] - steering_correction;
  2527  011F86  0100               	movlb	0	; () banked
  2528  011F88  51E6               	movf	_steering_correction& (0+255),w,b	;volatile
  2529  011F8A  0101               	movlb	1	; () banked
  2530  011F8C  6F4D               	movwf	??_main& (0+255),b
  2531  011F8E  6B4E               	clrf	(??_main+1)& (0+255),b
  2532  011F90  0101               	movlb	1	; () banked
  2533  011F92  1F4D               	comf	??_main& (0+255),f,b
  2534  011F94  1F4E               	comf	(??_main+1)& (0+255),f,b
  2535  011F96  4B4D               	infsnz	??_main& (0+255),f,b
  2536  011F98  2B4E               	incf	(??_main+1)& (0+255),f,b
  2537  011F9A  0100               	movlb	0	; () banked
  2538  011F9C  51EB               	movf	_data_steering& (0+255),w,b
  2539  011F9E  0101               	movlb	1	; () banked
  2540  011FA0  6F4F               	movwf	(??_main+2)& (0+255),b
  2541  011FA2  6B50               	clrf	(??_main+3)& (0+255),b
  2542  011FA4  0101               	movlb	1	; () banked
  2543  011FA6  514D               	movf	??_main& (0+255),w,b
  2544  011FA8  0101               	movlb	1	; () banked
  2545  011FAA  274F               	addwf	(??_main+2)& (0+255),f,b
  2546  011FAC  0101               	movlb	1	; () banked
  2547  011FAE  514E               	movf	(??_main+1)& (0+255),w,b
  2548  011FB0  0101               	movlb	1	; () banked
  2549  011FB2  2350               	addwfc	(??_main+3)& (0+255),f,b
  2550  011FB4  C14F  F0D4         	movff	??_main+2,_check	;volatile
  2551  011FB8  C150  F0D5         	movff	??_main+3,_check+1	;volatile
  2552  011FBC                     L2:
  2553  011FBC  0100               	movlb	0	; () banked
  2554  011FBE  0E00               	movlw	0
  2555  011FC0  BFD5               	btfsc	(_check+1)& (0+255),7,b	;volatile
  2556  011FC2  0EFF               	movlw	-1
  2557  011FC4  6FD6               	movwf	(_check+2)& (0+255),b	;volatile
  2558  011FC6  6FD7               	movwf	(_check+3)& (0+255),b	;volatile
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;RemoteCan.c: 327: }
  2562                           ;RemoteCan.c: 328: if ((check >= 0)&&(check <= 180)) {
  2563  011FC8  0100               	movlb	0	; () banked
  2564  011FCA  BFD7               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2565  011FCC  D012               	goto	l9540
  2566                           
  2567                           ; BSR set to: 0
  2568  011FCE  0100               	movlb	0	; () banked
  2569  011FD0  BFD7               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2570  011FD2  D00C               	goto	l9538
  2571  011FD4  0100               	movlb	0	; () banked
  2572  011FD6  51D7               	movf	(_check+3)& (0+255),w,b	;volatile
  2573  011FD8  0100               	movlb	0	; () banked
  2574  011FDA  11D6               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2575  011FDC  0100               	movlb	0	; () banked
  2576  011FDE  11D5               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2577  011FE0  E108               	bnz	l9540
  2578  011FE2  0EB5               	movlw	181
  2579  011FE4  0100               	movlb	0	; () banked
  2580  011FE6  5DD4               	subwf	_check& (0+255),w,b	;volatile
  2581  011FE8  B0D8               	btfsc	status,0,c
  2582  011FEA  D003               	goto	l9540
  2583  011FEC                     l9538:
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;RemoteCan.c: 329: data_steering[0] = check;
  2587  011FEC  C0D4  F0EB         	movff	_check,_data_steering	;volatile
  2588                           
  2589                           ;RemoteCan.c: 330: } else {
  2590  011FF0  D019               	goto	l833
  2591  011FF2                     l9540:
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;RemoteCan.c: 331: if (check > 180) {
  2595  011FF2  0100               	movlb	0	; () banked
  2596  011FF4  BFD7               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2597  011FF6  D00E               	goto	l9544
  2598  011FF8  0100               	movlb	0	; () banked
  2599  011FFA  51D7               	movf	(_check+3)& (0+255),w,b	;volatile
  2600  011FFC  0100               	movlb	0	; () banked
  2601  011FFE  11D6               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2602  012000  0100               	movlb	0	; () banked
  2603  012002  11D5               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2604  012004  E105               	bnz	u12550
  2605  012006  0EB5               	movlw	181
  2606  012008  0100               	movlb	0	; () banked
  2607  01200A  5DD4               	subwf	_check& (0+255),w,b	;volatile
  2608  01200C  A0D8               	btfss	status,0,c
  2609  01200E  D002               	goto	l9544
  2610  012010                     u12550:
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;RemoteCan.c: 332: data_steering[0] = 180;
  2614  012010  0EB4               	movlw	180
  2615  012012  D001               	goto	L3
  2616  012014                     l9544:
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;RemoteCan.c: 334: data_steering[0] = 0;
  2620  012014  0E00               	movlw	0
  2621  012016                     L3:
  2622  012016  0100               	movlb	0	; () banked
  2623  012018  6FEB               	movwf	_data_steering& (0+255),b
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;RemoteCan.c: 335: }
  2627                           ;RemoteCan.c: 336: }
  2628                           ;RemoteCan.c: 337: } else {
  2629                           
  2630                           ; BSR set to: 0
  2631  01201A  D004               	goto	l833
  2632  01201C                     l826:
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;RemoteCan.c: 338: steering_correction_dir = 0;
  2636  01201C  964D               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;RemoteCan.c: 339: steering_correction = 0;
  2640  01201E  0E00               	movlw	0
  2641  012020  0100               	movlb	0	; () banked
  2642  012022  6FE6               	movwf	_steering_correction& (0+255),b	;volatile
  2643  012024                     l833:
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;RemoteCan.c: 340: }
  2647                           ;RemoteCan.c: 343: if (switch_position != 0) {
  2648  012024  0100               	movlb	0	; () banked
  2649  012026  51E7               	movf	_switch_position& (0+255),w,b	;volatile
  2650  012028  B4D8               	btfsc	status,2,c
  2651  01202A  D088               	goto	l9558
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;RemoteCan.c: 344: if (JoystickValues[1] > 132) {
  2655  01202C  0E84               	movlw	132
  2656  01202E  0100               	movlb	0	; () banked
  2657  012030  65DD               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  2658  012032  D042               	goto	l9554
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;RemoteCan.c: 345: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  2662  012034  C0D0  F082         	movff	_JoystickConstants+4,___flmul@a	;volatile
  2663  012038  C0D1  F083         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  2664  01203C  C0D2  F084         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  2665  012040  C0D3  F085         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  2666  012044  0E7E               	movlw	126
  2667  012046  0101               	movlb	1	; () banked
  2668  012048  6F4D               	movwf	??_main& (0+255),b
  2669  01204A  0EFF               	movlw	255
  2670  01204C  0101               	movlb	1	; () banked
  2671  01204E  6F4E               	movwf	(??_main+1)& (0+255),b
  2672  012050  0100               	movlb	0	; () banked
  2673  012052  51DD               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2674  012054  0101               	movlb	1	; () banked
  2675  012056  6F4F               	movwf	(??_main+2)& (0+255),b
  2676  012058  6B50               	clrf	(??_main+3)& (0+255),b
  2677  01205A  0101               	movlb	1	; () banked
  2678  01205C  514D               	movf	??_main& (0+255),w,b
  2679  01205E  0101               	movlb	1	; () banked
  2680  012060  274F               	addwf	(??_main+2)& (0+255),f,b
  2681  012062  0101               	movlb	1	; () banked
  2682  012064  514E               	movf	(??_main+1)& (0+255),w,b
  2683  012066  0101               	movlb	1	; () banked
  2684  012068  2350               	addwfc	(??_main+3)& (0+255),f,b
  2685  01206A  C14F  F070         	movff	??_main+2,___xxtofl@val
  2686  01206E  C150  F071         	movff	??_main+3,___xxtofl@val+1
  2687  012072  0100               	movlb	0	; () banked
  2688  012074  0E00               	movlw	0
  2689  012076  BF71               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2690  012078  0EFF               	movlw	-1
  2691  01207A  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  2692  01207C  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  2693  01207E  0E01               	movlw	1
  2694  012080  EC67  F0A4         	call	___xxtofl
  2695  012084  C070  F07E         	movff	?___xxtofl,___flmul@b
  2696  012088  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  2697  01208C  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  2698  012090  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  2699  012094  ECE8  F09B         	call	___flmul	;wreg free
  2700  012098  C07E  F0B8         	movff	?___flmul,___fltol@f1
  2701  01209C  C07F  F0B9         	movff	?___flmul+1,___fltol@f1+1
  2702  0120A0  C080  F0BA         	movff	?___flmul+2,___fltol@f1+2
  2703  0120A4  C081  F0BB         	movff	?___flmul+3,___fltol@f1+3
  2704  0120A8  EC87  F0AB         	call	___fltol	;wreg free
  2705  0120AC  C0B8  F0E2         	movff	?___fltol,_set_speed	;volatile
  2706  0120B0  C0B9  F0E3         	movff	?___fltol+1,_set_speed+1	;volatile
  2707                           
  2708                           ;RemoteCan.c: 346: data_brake [0] = 0;
  2709  0120B4  0E00               	movlw	0
  2710  0120B6  D040               	goto	L4
  2711  0120B8                     l9554:
  2712                           
  2713                           ;RemoteCan.c: 348: set_speed = 0;
  2714  0120B8  0E00               	movlw	0
  2715  0120BA  0100               	movlb	0	; () banked
  2716  0120BC  6FE3               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2717  0120BE  0E00               	movlw	0
  2718  0120C0  6FE2               	movwf	_set_speed& (0+255),b	;volatile
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;RemoteCan.c: 349: data_brake [0] = ((130 - JoystickValues[1]))*(1.9);
  2722  0120C2  0E33               	movlw	51
  2723  0120C4  0100               	movlb	0	; () banked
  2724  0120C6  6F82               	movwf	___flmul@a& (0+255),b
  2725  0120C8  0E33               	movlw	51
  2726  0120CA  6F83               	movwf	(___flmul@a+1)& (0+255),b
  2727  0120CC  0EF3               	movlw	243
  2728  0120CE  6F84               	movwf	(___flmul@a+2)& (0+255),b
  2729  0120D0  0E3F               	movlw	63
  2730  0120D2  6F85               	movwf	(___flmul@a+3)& (0+255),b
  2731  0120D4  0100               	movlb	0	; () banked
  2732  0120D6  51DD               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2733  0120D8  0101               	movlb	1	; () banked
  2734  0120DA  6F4D               	movwf	??_main& (0+255),b
  2735  0120DC  6B4E               	clrf	(??_main+1)& (0+255),b
  2736  0120DE  0101               	movlb	1	; () banked
  2737  0120E0  1F4D               	comf	??_main& (0+255),f,b
  2738  0120E2  1F4E               	comf	(??_main+1)& (0+255),f,b
  2739  0120E4  4B4D               	infsnz	??_main& (0+255),f,b
  2740  0120E6  2B4E               	incf	(??_main+1)& (0+255),f,b
  2741  0120E8  0E82               	movlw	130
  2742  0120EA  0101               	movlb	1	; () banked
  2743  0120EC  274D               	addwf	??_main& (0+255),f,b
  2744  0120EE  0E00               	movlw	0
  2745  0120F0  234E               	addwfc	(??_main+1)& (0+255),f,b
  2746  0120F2  C14D  F070         	movff	??_main,___xxtofl@val
  2747  0120F6  C14E  F071         	movff	??_main+1,___xxtofl@val+1
  2748  0120FA  0100               	movlb	0	; () banked
  2749  0120FC  0E00               	movlw	0
  2750  0120FE  BF71               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2751  012100  0EFF               	movlw	-1
  2752  012102  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  2753  012104  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  2754  012106  0E01               	movlw	1
  2755  012108  EC67  F0A4         	call	___xxtofl
  2756  01210C  C070  F07E         	movff	?___xxtofl,___flmul@b
  2757  012110  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  2758  012114  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  2759  012118  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  2760  01211C  ECE8  F09B         	call	___flmul	;wreg free
  2761  012120  C07E  F0B8         	movff	?___flmul,___fltol@f1
  2762  012124  C07F  F0B9         	movff	?___flmul+1,___fltol@f1+1
  2763  012128  C080  F0BA         	movff	?___flmul+2,___fltol@f1+2
  2764  01212C  C081  F0BB         	movff	?___flmul+3,___fltol@f1+3
  2765  012130  EC87  F0AB         	call	___fltol	;wreg free
  2766  012134  0100               	movlb	0	; () banked
  2767  012136  51B8               	movf	?___fltol& (0+255),w,b
  2768  012138                     L4:
  2769  012138  6E26               	movwf	_data_brake,c
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;RemoteCan.c: 350: }
  2773                           ;RemoteCan.c: 351: } else {
  2774  01213A  D006               	goto	l9562
  2775  01213C                     l9558:
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;RemoteCan.c: 352: set_speed = 0;
  2779  01213C  0E00               	movlw	0
  2780  01213E  0100               	movlb	0	; () banked
  2781  012140  6FE3               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2782  012142  0E00               	movlw	0
  2783  012144  6FE2               	movwf	_set_speed& (0+255),b	;volatile
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;RemoteCan.c: 353: data_brake [0] = 255;
  2787  012146  6826               	setf	_data_brake,c
  2788  012148                     l9562:
  2789                           
  2790                           ;RemoteCan.c: 354: }
  2791                           ;RemoteCan.c: 356: if (newMessageCan == 1) {
  2792  012148  AE4C               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2793  01214A  D003               	goto	l9568
  2794                           
  2795                           ;RemoteCan.c: 357: CAN_Rx();
  2796  01214C  EC58  F0AE         	call	_CAN_Rx	;wreg free
  2797                           
  2798                           ;RemoteCan.c: 358: newMessageCan = 0;
  2799  012150  9E4C               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2800  012152                     l9568:
  2801                           
  2802                           ;RemoteCan.c: 359: }
  2803                           ;RemoteCan.c: 361: if (((time_counter - pr_time_2) >= 2) && (parking_state != 2) && (spa
      +                          ce_gap_reached != 1)) {
  2804  012152  C005  F14D         	movff	_pr_time_2,??_main	;volatile
  2805  012156  C006  F14E         	movff	_pr_time_2+1,??_main+1	;volatile
  2806  01215A  C007  F14F         	movff	_pr_time_2+2,??_main+2	;volatile
  2807  01215E  C008  F150         	movff	_pr_time_2+3,??_main+3	;volatile
  2808  012162  0101               	movlb	1	; () banked
  2809  012164  1F4D               	comf	??_main& (0+255),f,b
  2810  012166  1F4E               	comf	(??_main+1)& (0+255),f,b
  2811  012168  1F4F               	comf	(??_main+2)& (0+255),f,b
  2812  01216A  1F50               	comf	(??_main+3)& (0+255),f,b
  2813  01216C  2B4D               	incf	??_main& (0+255),f,b
  2814  01216E  0E00               	movlw	0
  2815  012170  234E               	addwfc	(??_main+1)& (0+255),f,b
  2816  012172  234F               	addwfc	(??_main+2)& (0+255),f,b
  2817  012174  2350               	addwfc	(??_main+3)& (0+255),f,b
  2818  012176  5019               	movf	_time_counter,w,c	;volatile
  2819  012178  0101               	movlb	1	; () banked
  2820  01217A  254D               	addwf	??_main& (0+255),w,b
  2821  01217C  0101               	movlb	1	; () banked
  2822  01217E  6F51               	movwf	(??_main+4)& (0+255),b
  2823  012180  501A               	movf	_time_counter+1,w,c	;volatile
  2824  012182  0101               	movlb	1	; () banked
  2825  012184  214E               	addwfc	(??_main+1)& (0+255),w,b
  2826  012186  0101               	movlb	1	; () banked
  2827  012188  6F52               	movwf	(??_main+5)& (0+255),b
  2828  01218A  501B               	movf	_time_counter+2,w,c	;volatile
  2829  01218C  0101               	movlb	1	; () banked
  2830  01218E  214F               	addwfc	(??_main+2)& (0+255),w,b
  2831  012190  0101               	movlb	1	; () banked
  2832  012192  6F53               	movwf	(??_main+6)& (0+255),b
  2833  012194  501C               	movf	_time_counter+3,w,c	;volatile
  2834  012196  0101               	movlb	1	; () banked
  2835  012198  2150               	addwfc	(??_main+3)& (0+255),w,b
  2836  01219A  0101               	movlb	1	; () banked
  2837  01219C  6F54               	movwf	(??_main+7)& (0+255),b
  2838  01219E  0101               	movlb	1	; () banked
  2839  0121A0  5154               	movf	(??_main+7)& (0+255),w,b
  2840  0121A2  0101               	movlb	1	; () banked
  2841  0121A4  1153               	iorwf	(??_main+6)& (0+255),w,b
  2842  0121A6  0101               	movlb	1	; () banked
  2843  0121A8  1152               	iorwf	(??_main+5)& (0+255),w,b
  2844  0121AA  E105               	bnz	u12590
  2845  0121AC  0E02               	movlw	2
  2846  0121AE  0101               	movlb	1	; () banked
  2847  0121B0  5D51               	subwf	(??_main+4)& (0+255),w,b
  2848  0121B2  A0D8               	btfss	status,0,c
  2849  0121B4  D010               	goto	l9578
  2850  0121B6                     u12590:
  2851                           
  2852                           ; BSR set to: 1
  2853  0121B6  0E02               	movlw	2
  2854  0121B8  0100               	movlb	0	; () banked
  2855  0121BA  19E5               	xorwf	_parking_state& (0+255),w,b	;volatile
  2856  0121BC  A4D8               	btfss	status,2,c
  2857                           
  2858                           ; BSR set to: 0
  2859  0121BE  B44D               	btfsc	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2860  0121C0  D00A               	goto	l9578
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;RemoteCan.c: 362: pr_time_2 = time_counter;
  2864  0121C2  C019  F005         	movff	_time_counter,_pr_time_2	;volatile
  2865  0121C6  C01A  F006         	movff	_time_counter+1,_pr_time_2+1	;volatile
  2866  0121CA  C01B  F007         	movff	_time_counter+2,_pr_time_2+2	;volatile
  2867  0121CE  C01C  F008         	movff	_time_counter+3,_pr_time_2+3	;volatile
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;RemoteCan.c: 363: CAN_Tx();
  2871  0121D2  EC9F  F0AD         	call	_CAN_Tx	;wreg free
  2872  0121D6                     l9578:
  2873                           
  2874                           ;RemoteCan.c: 364: }
  2875                           ;RemoteCan.c: 366: if (time_counter >= pr_time_6) {
  2876  0121D6  5015               	movf	_pr_time_6,w,c	;volatile
  2877  0121D8  5C19               	subwf	_time_counter,w,c	;volatile
  2878  0121DA  5016               	movf	_pr_time_6+1,w,c	;volatile
  2879  0121DC  581A               	subwfb	_time_counter+1,w,c	;volatile
  2880  0121DE  5017               	movf	_pr_time_6+2,w,c	;volatile
  2881  0121E0  581B               	subwfb	_time_counter+2,w,c	;volatile
  2882  0121E2  5018               	movf	_pr_time_6+3,w,c	;volatile
  2883  0121E4  581C               	subwfb	_time_counter+3,w,c	;volatile
  2884  0121E6  A0D8               	btfss	status,0,c
  2885  0121E8  D041               	goto	l9588
  2886                           
  2887                           ;RemoteCan.c: 367: if ((time_counter - pr_time_3) >= (100 / 10)) {
  2888  0121EA  C009  F14D         	movff	_pr_time_3,??_main	;volatile
  2889  0121EE  C00A  F14E         	movff	_pr_time_3+1,??_main+1	;volatile
  2890  0121F2  C00B  F14F         	movff	_pr_time_3+2,??_main+2	;volatile
  2891  0121F6  C00C  F150         	movff	_pr_time_3+3,??_main+3	;volatile
  2892  0121FA  0101               	movlb	1	; () banked
  2893  0121FC  1F4D               	comf	??_main& (0+255),f,b
  2894  0121FE  1F4E               	comf	(??_main+1)& (0+255),f,b
  2895  012200  1F4F               	comf	(??_main+2)& (0+255),f,b
  2896  012202  1F50               	comf	(??_main+3)& (0+255),f,b
  2897  012204  2B4D               	incf	??_main& (0+255),f,b
  2898  012206  0E00               	movlw	0
  2899  012208  234E               	addwfc	(??_main+1)& (0+255),f,b
  2900  01220A  234F               	addwfc	(??_main+2)& (0+255),f,b
  2901  01220C  2350               	addwfc	(??_main+3)& (0+255),f,b
  2902  01220E  5019               	movf	_time_counter,w,c	;volatile
  2903  012210  0101               	movlb	1	; () banked
  2904  012212  254D               	addwf	??_main& (0+255),w,b
  2905  012214  0101               	movlb	1	; () banked
  2906  012216  6F51               	movwf	(??_main+4)& (0+255),b
  2907  012218  501A               	movf	_time_counter+1,w,c	;volatile
  2908  01221A  0101               	movlb	1	; () banked
  2909  01221C  214E               	addwfc	(??_main+1)& (0+255),w,b
  2910  01221E  0101               	movlb	1	; () banked
  2911  012220  6F52               	movwf	(??_main+5)& (0+255),b
  2912  012222  501B               	movf	_time_counter+2,w,c	;volatile
  2913  012224  0101               	movlb	1	; () banked
  2914  012226  214F               	addwfc	(??_main+2)& (0+255),w,b
  2915  012228  0101               	movlb	1	; () banked
  2916  01222A  6F53               	movwf	(??_main+6)& (0+255),b
  2917  01222C  501C               	movf	_time_counter+3,w,c	;volatile
  2918  01222E  0101               	movlb	1	; () banked
  2919  012230  2150               	addwfc	(??_main+3)& (0+255),w,b
  2920  012232  0101               	movlb	1	; () banked
  2921  012234  6F54               	movwf	(??_main+7)& (0+255),b
  2922  012236  0101               	movlb	1	; () banked
  2923  012238  5154               	movf	(??_main+7)& (0+255),w,b
  2924  01223A  0101               	movlb	1	; () banked
  2925  01223C  1153               	iorwf	(??_main+6)& (0+255),w,b
  2926  01223E  0101               	movlb	1	; () banked
  2927  012240  1152               	iorwf	(??_main+5)& (0+255),w,b
  2928  012242  E105               	bnz	u12630
  2929  012244  0E0A               	movlw	10
  2930  012246  0101               	movlb	1	; () banked
  2931  012248  5D51               	subwf	(??_main+4)& (0+255),w,b
  2932  01224A  A0D8               	btfss	status,0,c
  2933  01224C  D480               	goto	l9394
  2934  01224E                     u12630:
  2935                           
  2936                           ; BSR set to: 1
  2937                           ;RemoteCan.c: 368: pr_time_3 = time_counter;
  2938  01224E  C019  F009         	movff	_time_counter,_pr_time_3	;volatile
  2939  012252  C01A  F00A         	movff	_time_counter+1,_pr_time_3+1	;volatile
  2940  012256  C01B  F00B         	movff	_time_counter+2,_pr_time_3+2	;volatile
  2941  01225A  C01C  F00C         	movff	_time_counter+3,_pr_time_3+3	;volatile
  2942                           
  2943                           ;RemoteCan.c: 369: if (space_available == 1) {
  2944  01225E  A24D               	btfss	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2945  012260  D002               	goto	l9586
  2946                           
  2947                           ; BSR set to: 1
  2948                           ;RemoteCan.c: 370: display_refresh = 1;
  2949  012262  8C4C               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  2950                           
  2951                           ;RemoteCan.c: 371: } else {
  2952  012264  D474               	goto	l9394
  2953  012266                     l9586:
  2954                           
  2955                           ; BSR set to: 1
  2956                           ;RemoteCan.c: 372: LCD_Handler();
  2957  012266  EC11  F0A7         	call	_LCD_Handler	;wreg free
  2958                           
  2959                           ;RemoteCan.c: 373: }
  2960                           ;RemoteCan.c: 374: }
  2961                           ;RemoteCan.c: 375: } else {
  2962  01226A  D471               	goto	l9394
  2963  01226C                     l9588:
  2964                           
  2965                           ;RemoteCan.c: 376: LCD_End();
  2966  01226C  ECDD  F0B0         	call	_LCD_End	;wreg free
  2967  012270  D46E               	goto	l9394
  2968  012272                     __end_of_main:
  2969                           	opt stack 0
  2970                           tblptru	equ	0xFF8
  2971                           tblptrh	equ	0xFF7
  2972                           tblptrl	equ	0xFF6
  2973                           tablat	equ	0xFF5
  2974                           postinc0	equ	0xFEE
  2975                           wreg	equ	0xFE8
  2976                           status	equ	0xFD8
  2977                           
  2978 ;; *************** function _board_initialization *****************
  2979 ;; Defined at:
  2980 ;;		line 566 in file "RemoteCan.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;		None               void
  2987 ;; Registers used:
  2988 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2998 ;;Total ram usage:        0 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:   15
  3001 ;; This function calls:
  3002 ;;		_CANInitialize
  3003 ;;		_LCD_clear
  3004 ;;		_LCD_goto_line
  3005 ;;		_LCD_initialize
  3006 ;; This function is called by:
  3007 ;;		_main
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           	psect	text1
  3012  015D5E                     __ptext1:
  3013                           	opt stack 0
  3014  015D5E                     _board_initialization:
  3015                           	opt stack 15
  3016                           
  3017                           ;RemoteCan.c: 568: LATA = 0x00;
  3018                           
  3019                           ;incstack = 0
  3020  015D5E  0E00               	movlw	0
  3021  015D60  6E89               	movwf	3977,c	;volatile
  3022                           
  3023                           ;RemoteCan.c: 569: TRISA = 0b00011111;
  3024  015D62  0E1F               	movlw	31
  3025  015D64  6E92               	movwf	3986,c	;volatile
  3026                           
  3027                           ;RemoteCan.c: 570: LATB = 0x00;
  3028  015D66  0E00               	movlw	0
  3029  015D68  6E8A               	movwf	3978,c	;volatile
  3030                           
  3031                           ;RemoteCan.c: 571: TRISB = 0b11111011;
  3032  015D6A  0EFB               	movlw	251
  3033  015D6C  6E93               	movwf	3987,c	;volatile
  3034                           
  3035                           ;RemoteCan.c: 572: LATC = 0x00;
  3036  015D6E  0E00               	movlw	0
  3037  015D70  6E8B               	movwf	3979,c	;volatile
  3038                           
  3039                           ;RemoteCan.c: 573: TRISC = 0b11110000;
  3040  015D72  0EF0               	movlw	240
  3041  015D74  6E94               	movwf	3988,c	;volatile
  3042                           
  3043                           ;RemoteCan.c: 574: LATD = 0x00;
  3044  015D76  0E00               	movlw	0
  3045  015D78  6E8C               	movwf	3980,c	;volatile
  3046                           
  3047                           ;RemoteCan.c: 575: TRISD = 0x00;
  3048  015D7A  0E00               	movlw	0
  3049  015D7C  6E95               	movwf	3989,c	;volatile
  3050                           
  3051                           ;RemoteCan.c: 576: LATE = 0x00;
  3052  015D7E  0E00               	movlw	0
  3053  015D80  6E8D               	movwf	3981,c	;volatile
  3054                           
  3055                           ;RemoteCan.c: 577: TRISE = 0x00;
  3056  015D82  0E00               	movlw	0
  3057  015D84  6E96               	movwf	3990,c	;volatile
  3058                           
  3059                           ;RemoteCan.c: 579: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3060  015D86  0E06               	movlw	6
  3061  015D88  0100               	movlb	0	; () banked
  3062  015D8A  6F7E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3063  015D8C  0E05               	movlw	5
  3064  015D8E  0100               	movlb	0	; () banked
  3065  015D90  6F7F               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3066  015D92  0E01               	movlw	1
  3067  015D94  0100               	movlb	0	; () banked
  3068  015D96  6F80               	movwf	CANInitialize@SJW& (0+255),b
  3069  015D98  0E03               	movlw	3
  3070  015D9A  0100               	movlb	0	; () banked
  3071  015D9C  6F81               	movwf	CANInitialize@BRP& (0+255),b
  3072  015D9E  0E9D               	movlw	157
  3073  015DA0  0100               	movlb	0	; () banked
  3074  015DA2  6F82               	movwf	CANInitialize@flags& (0+255),b
  3075  015DA4  0E04               	movlw	4
  3076  015DA6  EC4E  F0A5         	call	_CANInitialize
  3077                           
  3078                           ;RemoteCan.c: 583: PIR2bits.TMR3IF = 0;
  3079  015DAA  92A1               	bcf	4001,1,c	;volatile
  3080                           
  3081                           ;RemoteCan.c: 584: PIR3bits.RXB1IF = 0;
  3082  015DAC  92A4               	bcf	4004,1,c	;volatile
  3083                           
  3084                           ;RemoteCan.c: 585: PIR3bits.RXB0IF = 0;
  3085  015DAE  90A4               	bcf	4004,0,c	;volatile
  3086                           
  3087                           ;RemoteCan.c: 588: RCONbits.IPEN = 1;
  3088  015DB0  8ED0               	bsf	4048,7,c	;volatile
  3089                           
  3090                           ;RemoteCan.c: 589: IPR3bits.RXB1IP = 1;
  3091  015DB2  82A5               	bsf	4005,1,c	;volatile
  3092                           
  3093                           ;RemoteCan.c: 590: IPR3bits.RXB0IP = 1;
  3094  015DB4  80A5               	bsf	4005,0,c	;volatile
  3095                           
  3096                           ;RemoteCan.c: 591: IPR2bits.TMR3IP = 0;
  3097  015DB6  92A2               	bcf	4002,1,c	;volatile
  3098                           
  3099                           ;RemoteCan.c: 594: ADCON1 = 0b00001101;
  3100  015DB8  0E0D               	movlw	13
  3101  015DBA  6EC1               	movwf	4033,c	;volatile
  3102                           
  3103                           ;RemoteCan.c: 595: ADCON0bits.CHS2 = 0;
  3104  015DBC  98C2               	bcf	4034,4,c	;volatile
  3105                           
  3106                           ;RemoteCan.c: 596: ADCON0bits.CHS1 = 0;
  3107  015DBE  96C2               	bcf	4034,3,c	;volatile
  3108                           
  3109                           ;RemoteCan.c: 597: ADCON0bits.CHS0 = 0;
  3110  015DC0  94C2               	bcf	4034,2,c	;volatile
  3111                           
  3112                           ;RemoteCan.c: 598: ADCON2bits.ACQT2 = 1;
  3113  015DC2  8AC0               	bsf	4032,5,c	;volatile
  3114                           
  3115                           ;RemoteCan.c: 599: ADCON2bits.ACQT1 = 1;
  3116  015DC4  88C0               	bsf	4032,4,c	;volatile
  3117                           
  3118                           ;RemoteCan.c: 600: ADCON2bits.ACQT0 = 0;
  3119  015DC6  96C0               	bcf	4032,3,c	;volatile
  3120                           
  3121                           ;RemoteCan.c: 601: ADCON2bits.ADCS2 = 1;
  3122  015DC8  84C0               	bsf	4032,2,c	;volatile
  3123                           
  3124                           ;RemoteCan.c: 602: ADCON2bits.ADCS1 = 0;
  3125  015DCA  92C0               	bcf	4032,1,c	;volatile
  3126                           
  3127                           ;RemoteCan.c: 603: ADCON2bits.ADCS0 = 1;
  3128  015DCC  80C0               	bsf	4032,0,c	;volatile
  3129                           
  3130                           ;RemoteCan.c: 604: ADCON2bits.ADFM = 0;
  3131  015DCE  9EC0               	bcf	4032,7,c	;volatile
  3132                           
  3133                           ;RemoteCan.c: 605: ADCON0bits.ADON = 1;
  3134  015DD0  80C2               	bsf	4034,0,c	;volatile
  3135                           
  3136                           ;RemoteCan.c: 608: LCD_initialize(16);
  3137  015DD2  0E10               	movlw	16
  3138  015DD4  EC43  F0AA         	call	_LCD_initialize
  3139                           
  3140                           ;RemoteCan.c: 610: LCD_clear();
  3141  015DD8  ECD7  F0B2         	call	_LCD_clear	;wreg free
  3142                           
  3143                           ;RemoteCan.c: 611: LCD_goto_line(1);
  3144  015DDC  0E01               	movlw	1
  3145  015DDE  EC0D  F0AC         	call	_LCD_goto_line
  3146                           
  3147                           ;RemoteCan.c: 615: PORTDbits.RD2 = 0;
  3148  015DE2  9483               	bcf	3971,2,c	;volatile
  3149                           
  3150                           ;RemoteCan.c: 616: PORTDbits.RD3 = 0;
  3151  015DE4  9683               	bcf	3971,3,c	;volatile
  3152                           
  3153                           ;RemoteCan.c: 619: TMR3H = 0x63;
  3154  015DE6  0E63               	movlw	99
  3155  015DE8  6EB3               	movwf	4019,c	;volatile
  3156                           
  3157                           ;RemoteCan.c: 620: TMR3L = 0xC0;
  3158  015DEA  0EC0               	movlw	192
  3159  015DEC  6EB2               	movwf	4018,c	;volatile
  3160                           
  3161                           ;RemoteCan.c: 623: PIE3bits.RXB1IE = 1;
  3162  015DEE  82A3               	bsf	4003,1,c	;volatile
  3163                           
  3164                           ;RemoteCan.c: 624: PIE3bits.RXB0IE = 1;
  3165  015DF0  80A3               	bsf	4003,0,c	;volatile
  3166                           
  3167                           ;RemoteCan.c: 625: PIE2bits.TMR3IE = 1;
  3168  015DF2  82A0               	bsf	4000,1,c	;volatile
  3169                           
  3170                           ;RemoteCan.c: 628: T3CON = 0x01;
  3171  015DF4  0E01               	movlw	1
  3172  015DF6  6EB1               	movwf	4017,c	;volatile
  3173                           
  3174                           ;RemoteCan.c: 629: LCD_clear();
  3175  015DF8  ECD7  F0B2         	call	_LCD_clear	;wreg free
  3176                           
  3177                           ;RemoteCan.c: 630: INTCONbits.GIEH = 1;
  3178  015DFC  8EF2               	bsf	intcon,7,c	;volatile
  3179                           
  3180                           ;RemoteCan.c: 631: INTCONbits.GIEL = 1;
  3181  015DFE  8CF2               	bsf	intcon,6,c	;volatile
  3182  015E00  0012               	return		;funcret
  3183  015E02                     __end_of_board_initialization:
  3184                           	opt stack 0
  3185                           tblptru	equ	0xFF8
  3186                           tblptrh	equ	0xFF7
  3187                           tblptrl	equ	0xFF6
  3188                           tablat	equ	0xFF5
  3189                           intcon	equ	0xFF2
  3190                           postinc0	equ	0xFEE
  3191                           wreg	equ	0xFE8
  3192                           status	equ	0xFD8
  3193                           
  3194 ;; *************** function _CANInitialize *****************
  3195 ;; Defined at:
  3196 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;  propSeg         1    wreg     unsigned char 
  3199 ;;  phaseSeg1       1   30[BANK0 ] unsigned char 
  3200 ;;  phaseSeg2       1   31[BANK0 ] unsigned char 
  3201 ;;  SJW             1   32[BANK0 ] unsigned char 
  3202 ;;  BRP             1   33[BANK0 ] unsigned char 
  3203 ;;  flags           1   34[BANK0 ] enum E16887
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;  propSeg         1   39[BANK0 ] unsigned char 
  3206 ;;  FilterConfig    1   41[BANK0 ] unsigned char 
  3207 ;;  FilterConfig    1   40[BANK0 ] unsigned char 
  3208 ;; Return value:  Size  Location     Type
  3209 ;;		None               void
  3210 ;; Registers used:
  3211 ;;		wreg, status,2, status,0, cstack
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3217 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3218 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3219 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3220 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3221 ;;Total ram usage:       12 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:   10
  3224 ;; This function calls:
  3225 ;;		_CANOperationMode
  3226 ;;		_CANSetFilter
  3227 ;;		_CANSetMask
  3228 ;; This function is called by:
  3229 ;;		_board_initialization
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text2
  3234  014A9C                     __ptext2:
  3235                           	opt stack 0
  3236  014A9C                     _CANInitialize:
  3237                           	opt stack 19
  3238                           
  3239                           ;incstack = 0
  3240                           ;CANInitialize@propSeg stored from wreg
  3241  014A9C  0100               	movlb	0	; () banked
  3242  014A9E  6F87               	movwf	CANInitialize@propSeg& (0+255),b
  3243                           
  3244                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3245                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3246                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3247  014AA0  0E80               	movlw	128
  3248  014AA2  ECFC  F0B3         	call	_CANOperationMode
  3249                           
  3250                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3251  014AA6  0E00               	movlw	0
  3252  014AA8  6E70               	movwf	3952,c	;volatile
  3253                           
  3254                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3255  014AAA  0E00               	movlw	0
  3256  014AAC  6E71               	movwf	3953,c	;volatile
  3257                           
  3258                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3259  014AAE  0E00               	movlw	0
  3260  014AB0  6E72               	movwf	3954,c	;volatile
  3261                           
  3262                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3263  014AB2  0100               	movlb	0	; () banked
  3264  014AB4  4180               	rrncf	CANInitialize@SJW& (0+255),w,b
  3265  014AB6  42E8               	rrncf	wreg,f,c
  3266  014AB8  0BC0               	andlw	192
  3267  014ABA  0100               	movlb	0	; () banked
  3268  014ABC  6F80               	movwf	CANInitialize@SJW& (0+255),b
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3272  014ABE  0100               	movlb	0	; () banked
  3273  014AC0  5180               	movf	CANInitialize@SJW& (0+255),w,b
  3274  014AC2  1270               	iorwf	3952,f,c	;volatile
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3278  014AC4  0100               	movlb	0	; () banked
  3279  014AC6  5181               	movf	CANInitialize@BRP& (0+255),w,b
  3280  014AC8  1270               	iorwf	3952,f,c	;volatile
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3284  014ACA  0100               	movlb	0	; () banked
  3285  014ACC  5187               	movf	CANInitialize@propSeg& (0+255),w,b
  3286  014ACE  1271               	iorwf	3953,f,c	;volatile
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3290  014AD0  0100               	movlb	0	; () banked
  3291  014AD2  397E               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3292  014AD4  42E8               	rrncf	wreg,f,c
  3293  014AD6  0BF8               	andlw	248
  3294  014AD8  0100               	movlb	0	; () banked
  3295  014ADA  6F7E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3299  014ADC  0100               	movlb	0	; () banked
  3300  014ADE  517E               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3301  014AE0  1271               	iorwf	3953,f,c	;volatile
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3305  014AE2  0100               	movlb	0	; () banked
  3306  014AE4  A582               	btfss	CANInitialize@flags& (0+255),2,b
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3310  014AE6  8C71               	bsf	3953,6,c	;volatile
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3314  014AE8  0100               	movlb	0	; () banked
  3315  014AEA  B182               	btfsc	CANInitialize@flags& (0+255),0,b
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3319  014AEC  8E71               	bsf	3953,7,c	;volatile
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3323                           
  3324                           ; BSR set to: 0
  3325  014AEE  0100               	movlb	0	; () banked
  3326  014AF0  517F               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3327  014AF2  1272               	iorwf	3954,f,c	;volatile
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3331  014AF4  0100               	movlb	0	; () banked
  3332  014AF6  B382               	btfsc	CANInitialize@flags& (0+255),1,b
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3336  014AF8  8C72               	bsf	3954,6,c	;volatile
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3340                           
  3341                           ; BSR set to: 0
  3342  014AFA  0100               	movlb	0	; () banked
  3343  014AFC  5182               	movf	CANInitialize@flags& (0+255),w,b
  3344  014AFE  0B60               	andlw	96
  3345  014B00  6E60               	movwf	3936,c	;volatile
  3346                           
  3347                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3348  014B02  0100               	movlb	0	; () banked
  3349  014B04  5182               	movf	CANInitialize@flags& (0+255),w,b
  3350  014B06  0B10               	andlw	16
  3351  014B08  0AFF               	xorlw	255
  3352  014B0A  B4D8               	btfsc	status,2,c
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3356  014B0C  8460               	bsf	3936,2,c	;volatile
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3360  014B0E  CF60 FF50          	movff	3936,3920	;volatile
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3364  014B12  0E00               	movlw	0
  3365  014B14  0100               	movlb	0	; () banked
  3366  014B16  6F70               	movwf	CANSetMask@mask& (0+255),b
  3367  014B18  0E00               	movlw	0
  3368  014B1A  6F71               	movwf	(CANSetMask@mask+1)& (0+255),b
  3369  014B1C  0E00               	movlw	0
  3370  014B1E  6F72               	movwf	(CANSetMask@mask+2)& (0+255),b
  3371  014B20  0E00               	movlw	0
  3372  014B22  6F73               	movwf	(CANSetMask@mask+3)& (0+255),b
  3373  014B24  0EF7               	movlw	247
  3374  014B26  0100               	movlb	0	; () banked
  3375  014B28  6F74               	movwf	CANSetMask@type& (0+255),b
  3376  014B2A  0E01               	movlw	1
  3377  014B2C  EC1B  F0A0         	call	_CANSetMask
  3378                           
  3379                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3380  014B30  0E00               	movlw	0
  3381  014B32  0100               	movlb	0	; () banked
  3382  014B34  6F70               	movwf	CANSetMask@mask& (0+255),b
  3383  014B36  0E00               	movlw	0
  3384  014B38  6F71               	movwf	(CANSetMask@mask+1)& (0+255),b
  3385  014B3A  0E00               	movlw	0
  3386  014B3C  6F72               	movwf	(CANSetMask@mask+2)& (0+255),b
  3387  014B3E  0E00               	movlw	0
  3388  014B40  6F73               	movwf	(CANSetMask@mask+3)& (0+255),b
  3389  014B42  0EF7               	movlw	247
  3390  014B44  0100               	movlb	0	; () banked
  3391  014B46  6F74               	movwf	CANSetMask@type& (0+255),b
  3392  014B48  0E02               	movlw	2
  3393  014B4A  EC1B  F0A0         	call	_CANSetMask
  3394                           
  3395                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3396  014B4E  D00F               	goto	l6304
  3397  014B50                     l6298:
  3398                           
  3399                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3400  014B50  0EF7               	movlw	247
  3401  014B52  0100               	movlb	0	; () banked
  3402  014B54  6F88               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3403  014B56  D007               	goto	l6300
  3404  014B58                     l376:
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3408  014B58  0100               	movlb	0	; () banked
  3409  014B5A  6988               	setf	CANInitialize@FilterConfig1& (0+255),b
  3410                           
  3411                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3412  014B5C  0100               	movlb	0	; () banked
  3413  014B5E  6989               	setf	CANInitialize@FilterConfig2& (0+255),b
  3414                           
  3415                           ;inc\CANlib.h: 273: break;
  3416  014B60  D028               	goto	l6306
  3417  014B62                     l377:
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3421  014B62  0100               	movlb	0	; () banked
  3422  014B64  6988               	setf	CANInitialize@FilterConfig1& (0+255),b
  3423  014B66                     l6300:
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3427  014B66  0EF7               	movlw	247
  3428  014B68  0100               	movlb	0	; () banked
  3429  014B6A  6F89               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;inc\CANlib.h: 278: }
  3433                           
  3434                           ;inc\CANlib.h: 277: break;
  3435  014B6C  D022               	goto	l6306
  3436  014B6E                     l6304:
  3437  014B6E  0E9F               	movlw	159
  3438  014B70  0100               	movlb	0	; () banked
  3439  014B72  6F83               	movwf	??_CANInitialize& (0+255),b
  3440  014B74  0EFF               	movlw	255
  3441  014B76  0100               	movlb	0	; () banked
  3442  014B78  6F84               	movwf	(??_CANInitialize+1)& (0+255),b
  3443  014B7A  0100               	movlb	0	; () banked
  3444  014B7C  5182               	movf	CANInitialize@flags& (0+255),w,b
  3445  014B7E  0B60               	andlw	96
  3446  014B80  0100               	movlb	0	; () banked
  3447  014B82  6F85               	movwf	(??_CANInitialize+2)& (0+255),b
  3448  014B84  6B86               	clrf	(??_CANInitialize+3)& (0+255),b
  3449  014B86  0100               	movlb	0	; () banked
  3450  014B88  5183               	movf	??_CANInitialize& (0+255),w,b
  3451  014B8A  0100               	movlb	0	; () banked
  3452  014B8C  1385               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3453  014B8E  0100               	movlb	0	; () banked
  3454  014B90  5184               	movf	(??_CANInitialize+1)& (0+255),w,b
  3455  014B92  0100               	movlb	0	; () banked
  3456  014B94  1386               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3457                           
  3458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3459                           ; Switch size 1, requested type "space"
  3460                           ; Number of cases is 1, Range of values is 0 to 0
  3461                           ; switch strategies available:
  3462                           ; Name         Instructions Cycles
  3463                           ; simple_byte            4     3 (average)
  3464                           ;	Chosen strategy is simple_byte
  3465  014B96  0100               	movlb	0	; () banked
  3466  014B98  5186               	movf	(??_CANInitialize+3)& (0+255),w,b
  3467  014B9A  0A00               	xorlw	0	; case 0
  3468  014B9C  A4D8               	btfss	status,2,c
  3469  014B9E  D7E1               	goto	l377
  3470                           
  3471                           ; BSR set to: 0
  3472                           ; Switch size 1, requested type "space"
  3473                           ; Number of cases is 2, Range of values is 191 to 223
  3474                           ; switch strategies available:
  3475                           ; Name         Instructions Cycles
  3476                           ; simple_byte            7     4 (average)
  3477                           ;	Chosen strategy is simple_byte
  3478  014BA0  0100               	movlb	0	; () banked
  3479  014BA2  5185               	movf	(??_CANInitialize+2)& (0+255),w,b
  3480  014BA4  0ABF               	xorlw	191	; case 191
  3481  014BA6  B4D8               	btfsc	status,2,c
  3482  014BA8  D7D7               	goto	l376
  3483  014BAA  0A60               	xorlw	96	; case 223
  3484  014BAC  B4D8               	btfsc	status,2,c
  3485  014BAE  D7D0               	goto	l6298
  3486  014BB0  D7D8               	goto	l377
  3487  014BB2                     l6306:
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3491  014BB2  0E00               	movlw	0
  3492  014BB4  0100               	movlb	0	; () banked
  3493  014BB6  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3494  014BB8  0E00               	movlw	0
  3495  014BBA  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3496  014BBC  0E00               	movlw	0
  3497  014BBE  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3498  014BC0  0E00               	movlw	0
  3499  014BC2  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3500  014BC4  C088  F074         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3501  014BC8  0E00               	movlw	0
  3502  014BCA  EC00  F080         	call	_CANSetFilter
  3503                           
  3504                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3505  014BCE  0E00               	movlw	0
  3506  014BD0  0100               	movlb	0	; () banked
  3507  014BD2  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3508  014BD4  0E00               	movlw	0
  3509  014BD6  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3510  014BD8  0E00               	movlw	0
  3511  014BDA  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3512  014BDC  0E00               	movlw	0
  3513  014BDE  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3514  014BE0  C088  F074         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3515  014BE4  0E01               	movlw	1
  3516  014BE6  EC00  F080         	call	_CANSetFilter
  3517                           
  3518                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3519  014BEA  0E00               	movlw	0
  3520  014BEC  0100               	movlb	0	; () banked
  3521  014BEE  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3522  014BF0  0E00               	movlw	0
  3523  014BF2  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3524  014BF4  0E00               	movlw	0
  3525  014BF6  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3526  014BF8  0E00               	movlw	0
  3527  014BFA  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3528  014BFC  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3529  014C00  0E02               	movlw	2
  3530  014C02  EC00  F080         	call	_CANSetFilter
  3531                           
  3532                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3533  014C06  0E00               	movlw	0
  3534  014C08  0100               	movlb	0	; () banked
  3535  014C0A  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3536  014C0C  0E00               	movlw	0
  3537  014C0E  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3538  014C10  0E00               	movlw	0
  3539  014C12  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3540  014C14  0E00               	movlw	0
  3541  014C16  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3542  014C18  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3543  014C1C  0E03               	movlw	3
  3544  014C1E  EC00  F080         	call	_CANSetFilter
  3545                           
  3546                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3547  014C22  0E00               	movlw	0
  3548  014C24  0100               	movlb	0	; () banked
  3549  014C26  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3550  014C28  0E00               	movlw	0
  3551  014C2A  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3552  014C2C  0E00               	movlw	0
  3553  014C2E  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3554  014C30  0E00               	movlw	0
  3555  014C32  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3556  014C34  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3557  014C38  0E04               	movlw	4
  3558  014C3A  EC00  F080         	call	_CANSetFilter
  3559                           
  3560                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3561  014C3E  0E00               	movlw	0
  3562  014C40  0100               	movlb	0	; () banked
  3563  014C42  6F70               	movwf	CANSetFilter@filter& (0+255),b
  3564  014C44  0E00               	movlw	0
  3565  014C46  6F71               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3566  014C48  0E00               	movlw	0
  3567  014C4A  6F72               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3568  014C4C  0E00               	movlw	0
  3569  014C4E  6F73               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3570  014C50  C089  F074         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3571  014C54  0E05               	movlw	5
  3572  014C56  EC00  F080         	call	_CANSetFilter
  3573                           
  3574                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3575  014C5A  0E00               	movlw	0
  3576  014C5C  ECFC  F0B3         	call	_CANOperationMode
  3577  014C60  0012               	return		;funcret
  3578  014C62                     __end_of_CANInitialize:
  3579                           	opt stack 0
  3580                           tblptru	equ	0xFF8
  3581                           tblptrh	equ	0xFF7
  3582                           tblptrl	equ	0xFF6
  3583                           tablat	equ	0xFF5
  3584                           intcon	equ	0xFF2
  3585                           postinc0	equ	0xFEE
  3586                           wreg	equ	0xFE8
  3587                           status	equ	0xFD8
  3588                           
  3589 ;; *************** function _CANSetMask *****************
  3590 ;; Defined at:
  3591 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;  numBuffer       1    wreg     enum E16921
  3594 ;;  mask            4   16[BANK0 ] unsigned long 
  3595 ;;  type            1   20[BANK0 ] enum E16887
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;  numBuffer       1   25[BANK0 ] enum E16921
  3598 ;;  tamp            4   26[BANK0 ] unsigned long 
  3599 ;; Return value:  Size  Location     Type
  3600 ;;		None               void
  3601 ;; Registers used:
  3602 ;;		wreg, status,2, status,0
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3608 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3609 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3610 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3611 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3612 ;;Total ram usage:       14 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; Hardware stack levels required when called:    9
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_CANInitialize
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text3
  3623  014036                     __ptext3:
  3624                           	opt stack 0
  3625  014036                     _CANSetMask:
  3626                           	opt stack 19
  3627                           
  3628                           ;incstack = 0
  3629                           ;CANSetMask@numBuffer stored from wreg
  3630  014036  0100               	movlb	0	; () banked
  3631  014038  6F79               	movwf	CANSetMask@numBuffer& (0+255),b
  3632                           
  3633                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3634  01403A  0100               	movlb	0	; () banked
  3635  01403C  0579               	decf	CANSetMask@numBuffer& (0+255),w,b
  3636  01403E  A4D8               	btfss	status,2,c
  3637  014040  D056               	goto	l5450
  3638                           
  3639                           ; BSR set to: 0
  3640  014042  0100               	movlb	0	; () banked
  3641  014044  2974               	incf	CANSetMask@type& (0+255),w,b
  3642  014046  A4D8               	btfss	status,2,c
  3643  014048  D052               	goto	l5450
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;inc\CANlib.h: 644: {
  3647                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3648  01404A  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  3649  01404E  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3650  014052  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3651  014056  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3652  01405A  0E04               	movlw	4
  3653  01405C  D006               	goto	u6090
  3654  01405E                     u6095:
  3655  01405E  0100               	movlb	0	; () banked
  3656  014060  90D8               	bcf	status,0,c
  3657  014062  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3658  014064  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3659  014066  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3660  014068  3375               	rrcf	??_CANSetMask& (0+255),f,b
  3661  01406A                     u6090:
  3662  01406A  2EE8               	decfsz	wreg,f,c
  3663  01406C  D7F8               	goto	u6095
  3664  01406E  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3665  014072  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3666  014076  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3667  01407A  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3671  01407E  0100               	movlb	0	; () banked
  3672  014080  517A               	movf	CANSetMask@tamp& (0+255),w,b
  3673  014082  0100               	movlb	0	; () banked
  3674  014084  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3675  014086  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3676  014088  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3677  01408A  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3681  01408C  C07A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3685  014090  0E07               	movlw	7
  3686  014092  0100               	movlb	0	; () banked
  3687  014094  1570               	andwf	CANSetMask@mask& (0+255),w,b
  3688  014096  0100               	movlb	0	; () banked
  3689  014098  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3690  01409A  0E00               	movlw	0
  3691  01409C  0100               	movlb	0	; () banked
  3692  01409E  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3693  0140A0  0100               	movlb	0	; () banked
  3694  0140A2  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3695  0140A4  0E00               	movlw	0
  3696  0140A6  0100               	movlb	0	; () banked
  3697  0140A8  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3698  0140AA  0100               	movlb	0	; () banked
  3699  0140AC  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3700  0140AE  0E00               	movlw	0
  3701  0140B0  0100               	movlb	0	; () banked
  3702  0140B2  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3703  0140B4  0100               	movlb	0	; () banked
  3704  0140B6  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3708  0140B8  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  3709  0140BC  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3710  0140C0  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3711  0140C4  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3712  0140C8  0E05               	movlw	5
  3713  0140CA                     u6105:
  3714  0140CA  90D8               	bcf	status,0,c
  3715  0140CC  0100               	movlb	0	; () banked
  3716  0140CE  3775               	rlcf	??_CANSetMask& (0+255),f,b
  3717  0140D0  3776               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3718  0140D2  3777               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3719  0140D4  3778               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3720  0140D6  2EE8               	decfsz	wreg,f,c
  3721  0140D8  D7F8               	goto	u6105
  3722  0140DA  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3723  0140DE  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3724  0140E2  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3725  0140E6  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3729  0140EA  C07A  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3730  0140EE                     l5450:
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;inc\CANlib.h: 652: }
  3734                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3735  0140EE  0E02               	movlw	2
  3736  0140F0  0100               	movlb	0	; () banked
  3737  0140F2  1979               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3738  0140F4  A4D8               	btfss	status,2,c
  3739  0140F6  D056               	goto	l5466
  3740                           
  3741                           ; BSR set to: 0
  3742  0140F8  0100               	movlb	0	; () banked
  3743  0140FA  2974               	incf	CANSetMask@type& (0+255),w,b
  3744  0140FC  A4D8               	btfss	status,2,c
  3745  0140FE  D052               	goto	l5466
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;inc\CANlib.h: 655: {
  3749                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3750  014100  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  3751  014104  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3752  014108  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3753  01410C  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3754  014110  0E04               	movlw	4
  3755  014112  D006               	goto	u6130
  3756  014114                     u6135:
  3757  014114  0100               	movlb	0	; () banked
  3758  014116  90D8               	bcf	status,0,c
  3759  014118  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3760  01411A  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3761  01411C  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3762  01411E  3375               	rrcf	??_CANSetMask& (0+255),f,b
  3763  014120                     u6130:
  3764  014120  2EE8               	decfsz	wreg,f,c
  3765  014122  D7F8               	goto	u6135
  3766  014124  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3767  014128  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3768  01412C  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3769  014130  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3773  014134  0100               	movlb	0	; () banked
  3774  014136  517A               	movf	CANSetMask@tamp& (0+255),w,b
  3775  014138  0100               	movlb	0	; () banked
  3776  01413A  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3777  01413C  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3778  01413E  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3779  014140  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3783  014142  C07A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3787  014146  0E07               	movlw	7
  3788  014148  0100               	movlb	0	; () banked
  3789  01414A  1570               	andwf	CANSetMask@mask& (0+255),w,b
  3790  01414C  0100               	movlb	0	; () banked
  3791  01414E  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3792  014150  0E00               	movlw	0
  3793  014152  0100               	movlb	0	; () banked
  3794  014154  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3795  014156  0100               	movlb	0	; () banked
  3796  014158  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3797  01415A  0E00               	movlw	0
  3798  01415C  0100               	movlb	0	; () banked
  3799  01415E  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3800  014160  0100               	movlb	0	; () banked
  3801  014162  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3802  014164  0E00               	movlw	0
  3803  014166  0100               	movlb	0	; () banked
  3804  014168  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3805  01416A  0100               	movlb	0	; () banked
  3806  01416C  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3810  01416E  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  3811  014172  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3812  014176  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3813  01417A  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3814  01417E  0E05               	movlw	5
  3815  014180                     u6145:
  3816  014180  90D8               	bcf	status,0,c
  3817  014182  0100               	movlb	0	; () banked
  3818  014184  3775               	rlcf	??_CANSetMask& (0+255),f,b
  3819  014186  3776               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3820  014188  3777               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3821  01418A  3778               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3822  01418C  2EE8               	decfsz	wreg,f,c
  3823  01418E  D7F8               	goto	u6145
  3824  014190  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3825  014194  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3826  014198  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3827  01419C  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3828                           
  3829                           ; BSR set to: 0
  3830                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3831  0141A0  C07A  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3832  0141A4                     l5466:
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;inc\CANlib.h: 663: }
  3836                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3837  0141A4  0100               	movlb	0	; () banked
  3838  0141A6  0579               	decf	CANSetMask@numBuffer& (0+255),w,b
  3839  0141A8  A4D8               	btfss	status,2,c
  3840  0141AA  D087               	goto	l5498
  3841                           
  3842                           ; BSR set to: 0
  3843  0141AC  0EF7               	movlw	247
  3844  0141AE  0100               	movlb	0	; () banked
  3845  0141B0  1974               	xorwf	CANSetMask@type& (0+255),w,b
  3846  0141B2  A4D8               	btfss	status,2,c
  3847  0141B4  D082               	goto	l5498
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;inc\CANlib.h: 666: {
  3851                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3852  0141B6  0100               	movlb	0	; () banked
  3853  0141B8  5170               	movf	CANSetMask@mask& (0+255),w,b
  3854  0141BA  0100               	movlb	0	; () banked
  3855  0141BC  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3856  0141BE  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3857  0141C0  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3858  0141C2  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3862  0141C4  C07A  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3866  0141C8  0E00               	movlw	0
  3867  0141CA  0100               	movlb	0	; () banked
  3868  0141CC  1570               	andwf	CANSetMask@mask& (0+255),w,b
  3869  0141CE  0100               	movlb	0	; () banked
  3870  0141D0  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  3871  0141D2  0EFF               	movlw	255
  3872  0141D4  0100               	movlb	0	; () banked
  3873  0141D6  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3874  0141D8  0100               	movlb	0	; () banked
  3875  0141DA  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3876  0141DC  0E00               	movlw	0
  3877  0141DE  0100               	movlb	0	; () banked
  3878  0141E0  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3879  0141E2  0100               	movlb	0	; () banked
  3880  0141E4  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3881  0141E6  0E00               	movlw	0
  3882  0141E8  0100               	movlb	0	; () banked
  3883  0141EA  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3884  0141EC  0100               	movlb	0	; () banked
  3885  0141EE  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3889  0141F0  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  3890  0141F4  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3891  0141F8  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3892  0141FC  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3893  014200  C076  F075         	movff	??_CANSetMask+1,??_CANSetMask
  3894  014204  C077  F076         	movff	??_CANSetMask+2,??_CANSetMask+1
  3895  014208  C078  F077         	movff	??_CANSetMask+3,??_CANSetMask+2
  3896  01420C  0100               	movlb	0	; () banked
  3897  01420E  6B78               	clrf	(??_CANSetMask+3)& (0+255),b
  3898  014210  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  3899  014214  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3900  014218  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3901  01421C  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3905  014220  C07A  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3909  014224  0100               	movlb	0	; () banked
  3910  014226  A172               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3911  014228  D003               	goto	l450
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3915  01422A  010F               	movlb	15	; () banked
  3916  01422C  8119               	bsf	25,0,b	;volatile
  3917  01422E  D002               	goto	l451
  3918  014230                     l450:
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;inc\CANlib.h: 676: else
  3922                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3923  014230  010F               	movlb	15	; () banked
  3924  014232  9119               	bcf	25,0,b	;volatile
  3925  014234                     l451:
  3926                           
  3927                           ; BSR set to: 15
  3928                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3929  014234  0100               	movlb	0	; () banked
  3930  014236  A372               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3931  014238  D003               	goto	l452
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3935  01423A  010F               	movlb	15	; () banked
  3936  01423C  8319               	bsf	25,1,b	;volatile
  3937  01423E  D002               	goto	l453
  3938  014240                     l452:
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;inc\CANlib.h: 681: else
  3942                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3943  014240  010F               	movlb	15	; () banked
  3944  014242  9319               	bcf	25,1,b	;volatile
  3945  014244                     l453:
  3946                           
  3947                           ; BSR set to: 15
  3948                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3949  014244  0100               	movlb	0	; () banked
  3950  014246  A572               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3951  014248  D003               	goto	l454
  3952                           
  3953                           ; BSR set to: 0
  3954                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3955  01424A  010F               	movlb	15	; () banked
  3956  01424C  8B19               	bsf	25,5,b	;volatile
  3957  01424E  D002               	goto	l455
  3958  014250                     l454:
  3959                           
  3960                           ; BSR set to: 0
  3961                           ;inc\CANlib.h: 686: else
  3962                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3963  014250  010F               	movlb	15	; () banked
  3964  014252  9B19               	bcf	25,5,b	;volatile
  3965  014254                     l455:
  3966                           
  3967                           ; BSR set to: 15
  3968                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3969  014254  0100               	movlb	0	; () banked
  3970  014256  A772               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3971  014258  D003               	goto	l456
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3975  01425A  010F               	movlb	15	; () banked
  3976  01425C  8D19               	bsf	25,6,b	;volatile
  3977  01425E  D002               	goto	l457
  3978  014260                     l456:
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;inc\CANlib.h: 691: else
  3982                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3983  014260  010F               	movlb	15	; () banked
  3984  014262  9D19               	bcf	25,6,b	;volatile
  3985  014264                     l457:
  3986                           
  3987                           ; BSR set to: 15
  3988                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3989  014264  0100               	movlb	0	; () banked
  3990  014266  A972               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3991  014268  D003               	goto	l458
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3995  01426A  010F               	movlb	15	; () banked
  3996  01426C  8F19               	bsf	25,7,b	;volatile
  3997  01426E  D002               	goto	l5492
  3998  014270                     l458:
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;inc\CANlib.h: 696: else
  4002                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4003  014270  010F               	movlb	15	; () banked
  4004  014272  9F19               	bcf	25,7,b	;volatile
  4005  014274                     l5492:
  4006                           
  4007                           ; BSR set to: 15
  4008                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4009  014274  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  4010  014278  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4011  01427C  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4012  014280  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4013  014284  0E16               	movlw	22
  4014  014286  D006               	goto	u6220
  4015  014288                     u6225:
  4016  014288  0100               	movlb	0	; () banked
  4017  01428A  90D8               	bcf	status,0,c
  4018  01428C  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4019  01428E  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4020  014290  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4021  014292  3375               	rrcf	??_CANSetMask& (0+255),f,b
  4022  014294                     u6220:
  4023  014294  2EE8               	decfsz	wreg,f,c
  4024  014296  D7F8               	goto	u6225
  4025  014298  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4026  01429C  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4027  0142A0  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4028  0142A4  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4032  0142A8  0100               	movlb	0	; () banked
  4033  0142AA  517A               	movf	CANSetMask@tamp& (0+255),w,b
  4034  0142AC  0100               	movlb	0	; () banked
  4035  0142AE  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4036  0142B0  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4037  0142B2  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4038  0142B4  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4042  0142B6  C07A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4043  0142BA                     l5498:
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;inc\CANlib.h: 702: }
  4047                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4048  0142BA  0E02               	movlw	2
  4049  0142BC  0100               	movlb	0	; () banked
  4050  0142BE  1979               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4051  0142C0  A4D8               	btfss	status,2,c
  4052  0142C2  0012               	return	
  4053                           
  4054                           ; BSR set to: 0
  4055  0142C4  0EF7               	movlw	247
  4056  0142C6  0100               	movlb	0	; () banked
  4057  0142C8  1974               	xorwf	CANSetMask@type& (0+255),w,b
  4058  0142CA  A4D8               	btfss	status,2,c
  4059  0142CC  0012               	return	
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;inc\CANlib.h: 705: {
  4063                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4064  0142CE  0100               	movlb	0	; () banked
  4065  0142D0  5170               	movf	CANSetMask@mask& (0+255),w,b
  4066  0142D2  0100               	movlb	0	; () banked
  4067  0142D4  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4068  0142D6  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4069  0142D8  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4070  0142DA  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4074  0142DC  C07A  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4078  0142E0  0E00               	movlw	0
  4079  0142E2  0100               	movlb	0	; () banked
  4080  0142E4  1570               	andwf	CANSetMask@mask& (0+255),w,b
  4081  0142E6  0100               	movlb	0	; () banked
  4082  0142E8  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4083  0142EA  0EFF               	movlw	255
  4084  0142EC  0100               	movlb	0	; () banked
  4085  0142EE  1571               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4086  0142F0  0100               	movlb	0	; () banked
  4087  0142F2  6F7B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4088  0142F4  0E00               	movlw	0
  4089  0142F6  0100               	movlb	0	; () banked
  4090  0142F8  1572               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4091  0142FA  0100               	movlb	0	; () banked
  4092  0142FC  6F7C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4093  0142FE  0E00               	movlw	0
  4094  014300  0100               	movlb	0	; () banked
  4095  014302  1573               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4096  014304  0100               	movlb	0	; () banked
  4097  014306  6F7D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4101  014308  C07A  F075         	movff	CANSetMask@tamp,??_CANSetMask
  4102  01430C  C07B  F076         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4103  014310  C07C  F077         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4104  014314  C07D  F078         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4105  014318  C076  F075         	movff	??_CANSetMask+1,??_CANSetMask
  4106  01431C  C077  F076         	movff	??_CANSetMask+2,??_CANSetMask+1
  4107  014320  C078  F077         	movff	??_CANSetMask+3,??_CANSetMask+2
  4108  014324  0100               	movlb	0	; () banked
  4109  014326  6B78               	clrf	(??_CANSetMask+3)& (0+255),b
  4110  014328  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4111  01432C  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4112  014330  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4113  014334  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4117  014338  C07A  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4121  01433C  0100               	movlb	0	; () banked
  4122  01433E  A172               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4123  014340  D003               	goto	l461
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4127  014342  010F               	movlb	15	; () banked
  4128  014344  811D               	bsf	29,0,b	;volatile
  4129  014346  D002               	goto	l462
  4130  014348                     l461:
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;inc\CANlib.h: 715: else
  4134                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4135  014348  010F               	movlb	15	; () banked
  4136  01434A  911D               	bcf	29,0,b	;volatile
  4137  01434C                     l462:
  4138                           
  4139                           ; BSR set to: 15
  4140                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4141  01434C  0100               	movlb	0	; () banked
  4142  01434E  A372               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4143  014350  D003               	goto	l463
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4147  014352  010F               	movlb	15	; () banked
  4148  014354  831D               	bsf	29,1,b	;volatile
  4149  014356  D002               	goto	l464
  4150  014358                     l463:
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;inc\CANlib.h: 720: else
  4154                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4155  014358  010F               	movlb	15	; () banked
  4156  01435A  931D               	bcf	29,1,b	;volatile
  4157  01435C                     l464:
  4158                           
  4159                           ; BSR set to: 15
  4160                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4161  01435C  0100               	movlb	0	; () banked
  4162  01435E  A572               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4163  014360  D003               	goto	l465
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4167  014362  010F               	movlb	15	; () banked
  4168  014364  8B1D               	bsf	29,5,b	;volatile
  4169  014366  D002               	goto	l466
  4170  014368                     l465:
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;inc\CANlib.h: 725: else
  4174                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4175  014368  010F               	movlb	15	; () banked
  4176  01436A  9B1D               	bcf	29,5,b	;volatile
  4177  01436C                     l466:
  4178                           
  4179                           ; BSR set to: 15
  4180                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4181  01436C  0100               	movlb	0	; () banked
  4182  01436E  A772               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4183  014370  D003               	goto	l467
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4187  014372  010F               	movlb	15	; () banked
  4188  014374  8D1D               	bsf	29,6,b	;volatile
  4189  014376  D002               	goto	l468
  4190  014378                     l467:
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;inc\CANlib.h: 730: else
  4194                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4195  014378  010F               	movlb	15	; () banked
  4196  01437A  9D1D               	bcf	29,6,b	;volatile
  4197  01437C                     l468:
  4198                           
  4199                           ; BSR set to: 15
  4200                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4201  01437C  0100               	movlb	0	; () banked
  4202  01437E  A972               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4203  014380  D003               	goto	l469
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4207  014382  010F               	movlb	15	; () banked
  4208  014384  8F1D               	bsf	29,7,b	;volatile
  4209  014386  D002               	goto	l5524
  4210  014388                     l469:
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;inc\CANlib.h: 735: else
  4214                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4215  014388  010F               	movlb	15	; () banked
  4216  01438A  9F1D               	bcf	29,7,b	;volatile
  4217  01438C                     l5524:
  4218                           
  4219                           ; BSR set to: 15
  4220                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4221  01438C  C070  F075         	movff	CANSetMask@mask,??_CANSetMask
  4222  014390  C071  F076         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4223  014394  C072  F077         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4224  014398  C073  F078         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4225  01439C  0E16               	movlw	22
  4226  01439E  D006               	goto	u6300
  4227  0143A0                     u6305:
  4228  0143A0  0100               	movlb	0	; () banked
  4229  0143A2  90D8               	bcf	status,0,c
  4230  0143A4  3378               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4231  0143A6  3377               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4232  0143A8  3376               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4233  0143AA  3375               	rrcf	??_CANSetMask& (0+255),f,b
  4234  0143AC                     u6300:
  4235  0143AC  2EE8               	decfsz	wreg,f,c
  4236  0143AE  D7F8               	goto	u6305
  4237  0143B0  C075  F07A         	movff	??_CANSetMask,CANSetMask@tamp
  4238  0143B4  C076  F07B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4239  0143B8  C077  F07C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4240  0143BC  C078  F07D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4244  0143C0  0100               	movlb	0	; () banked
  4245  0143C2  517A               	movf	CANSetMask@tamp& (0+255),w,b
  4246  0143C4  0100               	movlb	0	; () banked
  4247  0143C6  6F7A               	movwf	CANSetMask@tamp& (0+255),b
  4248  0143C8  6B7B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4249  0143CA  6B7C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4250  0143CC  6B7D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4254  0143CE  C07A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4255  0143D2  0012               	return	
  4256  0143D4                     __end_of_CANSetMask:
  4257                           	opt stack 0
  4258                           tblptru	equ	0xFF8
  4259                           tblptrh	equ	0xFF7
  4260                           tblptrl	equ	0xFF6
  4261                           tablat	equ	0xFF5
  4262                           intcon	equ	0xFF2
  4263                           postinc0	equ	0xFEE
  4264                           wreg	equ	0xFE8
  4265                           status	equ	0xFD8
  4266                           
  4267 ;; *************** function _CANSetFilter *****************
  4268 ;; Defined at:
  4269 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  numBuffer       1    wreg     enum E16924
  4272 ;;  filter          4   16[BANK0 ] unsigned long 
  4273 ;;  type            1   20[BANK0 ] enum E16887
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;  numBuffer       1   25[BANK0 ] enum E16924
  4276 ;;  tamp            4   26[BANK0 ] unsigned long 
  4277 ;; Return value:  Size  Location     Type
  4278 ;;		None               void
  4279 ;; Registers used:
  4280 ;;		wreg, status,2, status,0
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4286 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4287 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4288 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4289 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4290 ;;Total ram usage:       14 bytes
  4291 ;; Hardware stack levels used:    1
  4292 ;; Hardware stack levels required when called:    9
  4293 ;; This function calls:
  4294 ;;		Nothing
  4295 ;; This function is called by:
  4296 ;;		_CANInitialize
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           	psect	text4
  4301  010000                     __ptext4:
  4302                           	opt stack 0
  4303  010000                     _CANSetFilter:
  4304                           	opt stack 19
  4305                           
  4306                           ; BSR set to: 0
  4307                           ;incstack = 0
  4308                           ;CANSetFilter@numBuffer stored from wreg
  4309  010000  0100               	movlb	0	; () banked
  4310  010002  6F79               	movwf	CANSetFilter@numBuffer& (0+255),b
  4311                           
  4312                           ;inc\CANlib.h: 750: unsigned long tamp;
  4313                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4314  010004  0100               	movlb	0	; () banked
  4315  010006  5179               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4316  010008  0100               	movlb	0	; () banked
  4317  01000A  A4D8               	btfss	status,2,c
  4318  01000C  D058               	goto	l5548
  4319                           
  4320                           ; BSR set to: 0
  4321  01000E  0100               	movlb	0	; () banked
  4322  010010  2974               	incf	CANSetFilter@type& (0+255),w,b
  4323  010012  A4D8               	btfss	status,2,c
  4324  010014  D054               	goto	l5548
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;inc\CANlib.h: 753: {
  4328                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4329  010016  010F               	movlb	15	; () banked
  4330  010018  9701               	bcf	1,3,b	;volatile
  4331                           
  4332                           ; BSR set to: 15
  4333                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4334  01001A  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4335  01001E  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4336  010022  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4337  010026  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4338  01002A  0E04               	movlw	4
  4339  01002C  D006               	goto	u6330
  4340  01002E                     u6335:
  4341  01002E  0100               	movlb	0	; () banked
  4342  010030  90D8               	bcf	status,0,c
  4343  010032  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4344  010034  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4345  010036  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4346  010038  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4347  01003A                     u6330:
  4348  01003A  2EE8               	decfsz	wreg,f,c
  4349  01003C  D7F8               	goto	u6335
  4350  01003E  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4351  010042  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4352  010046  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4353  01004A  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4357  01004E  0100               	movlb	0	; () banked
  4358  010050  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4359  010052  0100               	movlb	0	; () banked
  4360  010054  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4361  010056  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4362  010058  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4363  01005A  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4367  01005C  C07A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4371  010060  0E07               	movlw	7
  4372  010062  0100               	movlb	0	; () banked
  4373  010064  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4374  010066  0100               	movlb	0	; () banked
  4375  010068  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4376  01006A  0E00               	movlw	0
  4377  01006C  0100               	movlb	0	; () banked
  4378  01006E  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4379  010070  0100               	movlb	0	; () banked
  4380  010072  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4381  010074  0E00               	movlw	0
  4382  010076  0100               	movlb	0	; () banked
  4383  010078  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4384  01007A  0100               	movlb	0	; () banked
  4385  01007C  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4386  01007E  0E00               	movlw	0
  4387  010080  0100               	movlb	0	; () banked
  4388  010082  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4389  010084  0100               	movlb	0	; () banked
  4390  010086  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4394  010088  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4395  01008C  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4396  010090  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4397  010094  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4398  010098  0E05               	movlw	5
  4399  01009A                     u6345:
  4400  01009A  90D8               	bcf	status,0,c
  4401  01009C  0100               	movlb	0	; () banked
  4402  01009E  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4403  0100A0  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4404  0100A2  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4405  0100A4  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4406  0100A6  2EE8               	decfsz	wreg,f,c
  4407  0100A8  D7F8               	goto	u6345
  4408  0100AA  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4409  0100AE  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4410  0100B2  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4411  0100B6  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4415  0100BA  C07A  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4416  0100BE                     l5548:
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;inc\CANlib.h: 763: }
  4420                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4421  0100BE  0100               	movlb	0	; () banked
  4422  0100C0  0579               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4423  0100C2  A4D8               	btfss	status,2,c
  4424  0100C4  D058               	goto	l5566
  4425                           
  4426                           ; BSR set to: 0
  4427  0100C6  0100               	movlb	0	; () banked
  4428  0100C8  2974               	incf	CANSetFilter@type& (0+255),w,b
  4429  0100CA  A4D8               	btfss	status,2,c
  4430  0100CC  D054               	goto	l5566
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;inc\CANlib.h: 766: {
  4434                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4435  0100CE  010F               	movlb	15	; () banked
  4436  0100D0  9705               	bcf	5,3,b	;volatile
  4437                           
  4438                           ; BSR set to: 15
  4439                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4440  0100D2  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4441  0100D6  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4442  0100DA  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4443  0100DE  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4444  0100E2  0E04               	movlw	4
  4445  0100E4  D006               	goto	u6370
  4446  0100E6                     u6375:
  4447  0100E6  0100               	movlb	0	; () banked
  4448  0100E8  90D8               	bcf	status,0,c
  4449  0100EA  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4450  0100EC  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4451  0100EE  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4452  0100F0  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4453  0100F2                     u6370:
  4454  0100F2  2EE8               	decfsz	wreg,f,c
  4455  0100F4  D7F8               	goto	u6375
  4456  0100F6  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4457  0100FA  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4458  0100FE  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4459  010102  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4463  010106  0100               	movlb	0	; () banked
  4464  010108  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4465  01010A  0100               	movlb	0	; () banked
  4466  01010C  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4467  01010E  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4468  010110  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4469  010112  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4473  010114  C07A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4477  010118  0E07               	movlw	7
  4478  01011A  0100               	movlb	0	; () banked
  4479  01011C  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4480  01011E  0100               	movlb	0	; () banked
  4481  010120  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4482  010122  0E00               	movlw	0
  4483  010124  0100               	movlb	0	; () banked
  4484  010126  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4485  010128  0100               	movlb	0	; () banked
  4486  01012A  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4487  01012C  0E00               	movlw	0
  4488  01012E  0100               	movlb	0	; () banked
  4489  010130  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4490  010132  0100               	movlb	0	; () banked
  4491  010134  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4492  010136  0E00               	movlw	0
  4493  010138  0100               	movlb	0	; () banked
  4494  01013A  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4495  01013C  0100               	movlb	0	; () banked
  4496  01013E  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4500  010140  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4501  010144  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4502  010148  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4503  01014C  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4504  010150  0E05               	movlw	5
  4505  010152                     u6385:
  4506  010152  90D8               	bcf	status,0,c
  4507  010154  0100               	movlb	0	; () banked
  4508  010156  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4509  010158  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4510  01015A  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4511  01015C  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4512  01015E  2EE8               	decfsz	wreg,f,c
  4513  010160  D7F8               	goto	u6385
  4514  010162  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4515  010166  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4516  01016A  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4517  01016E  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4518                           
  4519                           ; BSR set to: 0
  4520                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4521  010172  C07A  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4522  010176                     l5566:
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;inc\CANlib.h: 776: }
  4526                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4527  010176  0E02               	movlw	2
  4528  010178  0100               	movlb	0	; () banked
  4529  01017A  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4530  01017C  A4D8               	btfss	status,2,c
  4531  01017E  D058               	goto	l5584
  4532                           
  4533                           ; BSR set to: 0
  4534  010180  0100               	movlb	0	; () banked
  4535  010182  2974               	incf	CANSetFilter@type& (0+255),w,b
  4536  010184  A4D8               	btfss	status,2,c
  4537  010186  D054               	goto	l5584
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;inc\CANlib.h: 779: {
  4541                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4542  010188  010F               	movlb	15	; () banked
  4543  01018A  9709               	bcf	9,3,b	;volatile
  4544                           
  4545                           ; BSR set to: 15
  4546                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4547  01018C  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4548  010190  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4549  010194  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4550  010198  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4551  01019C  0E04               	movlw	4
  4552  01019E  D006               	goto	u6410
  4553  0101A0                     u6415:
  4554  0101A0  0100               	movlb	0	; () banked
  4555  0101A2  90D8               	bcf	status,0,c
  4556  0101A4  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4557  0101A6  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4558  0101A8  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4559  0101AA  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4560  0101AC                     u6410:
  4561  0101AC  2EE8               	decfsz	wreg,f,c
  4562  0101AE  D7F8               	goto	u6415
  4563  0101B0  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4564  0101B4  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4565  0101B8  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4566  0101BC  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4570  0101C0  0100               	movlb	0	; () banked
  4571  0101C2  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4572  0101C4  0100               	movlb	0	; () banked
  4573  0101C6  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4574  0101C8  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4575  0101CA  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4576  0101CC  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4580  0101CE  C07A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4584  0101D2  0E07               	movlw	7
  4585  0101D4  0100               	movlb	0	; () banked
  4586  0101D6  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4587  0101D8  0100               	movlb	0	; () banked
  4588  0101DA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4589  0101DC  0E00               	movlw	0
  4590  0101DE  0100               	movlb	0	; () banked
  4591  0101E0  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4592  0101E2  0100               	movlb	0	; () banked
  4593  0101E4  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4594  0101E6  0E00               	movlw	0
  4595  0101E8  0100               	movlb	0	; () banked
  4596  0101EA  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4597  0101EC  0100               	movlb	0	; () banked
  4598  0101EE  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4599  0101F0  0E00               	movlw	0
  4600  0101F2  0100               	movlb	0	; () banked
  4601  0101F4  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4602  0101F6  0100               	movlb	0	; () banked
  4603  0101F8  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4607  0101FA  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4608  0101FE  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4609  010202  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4610  010206  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4611  01020A  0E05               	movlw	5
  4612  01020C                     u6425:
  4613  01020C  90D8               	bcf	status,0,c
  4614  01020E  0100               	movlb	0	; () banked
  4615  010210  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4616  010212  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4617  010214  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4618  010216  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4619  010218  2EE8               	decfsz	wreg,f,c
  4620  01021A  D7F8               	goto	u6425
  4621  01021C  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4622  010220  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4623  010224  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4624  010228  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4625                           
  4626                           ; BSR set to: 0
  4627                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4628  01022C  C07A  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4629  010230                     l5584:
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;inc\CANlib.h: 789: }
  4633                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4634  010230  0E03               	movlw	3
  4635  010232  0100               	movlb	0	; () banked
  4636  010234  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4637  010236  A4D8               	btfss	status,2,c
  4638  010238  D058               	goto	l5602
  4639                           
  4640                           ; BSR set to: 0
  4641  01023A  0100               	movlb	0	; () banked
  4642  01023C  2974               	incf	CANSetFilter@type& (0+255),w,b
  4643  01023E  A4D8               	btfss	status,2,c
  4644  010240  D054               	goto	l5602
  4645                           
  4646                           ; BSR set to: 0
  4647                           ;inc\CANlib.h: 792: {
  4648                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4649  010242  010F               	movlb	15	; () banked
  4650  010244  970D               	bcf	13,3,b	;volatile
  4651                           
  4652                           ; BSR set to: 15
  4653                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4654  010246  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4655  01024A  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4656  01024E  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4657  010252  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4658  010256  0E04               	movlw	4
  4659  010258  D006               	goto	u6450
  4660  01025A                     u6455:
  4661  01025A  0100               	movlb	0	; () banked
  4662  01025C  90D8               	bcf	status,0,c
  4663  01025E  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4664  010260  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4665  010262  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4666  010264  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4667  010266                     u6450:
  4668  010266  2EE8               	decfsz	wreg,f,c
  4669  010268  D7F8               	goto	u6455
  4670  01026A  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4671  01026E  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4672  010272  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4673  010276  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4677  01027A  0100               	movlb	0	; () banked
  4678  01027C  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4679  01027E  0100               	movlb	0	; () banked
  4680  010280  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4681  010282  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4682  010284  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4683  010286  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4687  010288  C07A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4691  01028C  0E07               	movlw	7
  4692  01028E  0100               	movlb	0	; () banked
  4693  010290  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4694  010292  0100               	movlb	0	; () banked
  4695  010294  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4696  010296  0E00               	movlw	0
  4697  010298  0100               	movlb	0	; () banked
  4698  01029A  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4699  01029C  0100               	movlb	0	; () banked
  4700  01029E  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4701  0102A0  0E00               	movlw	0
  4702  0102A2  0100               	movlb	0	; () banked
  4703  0102A4  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4704  0102A6  0100               	movlb	0	; () banked
  4705  0102A8  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4706  0102AA  0E00               	movlw	0
  4707  0102AC  0100               	movlb	0	; () banked
  4708  0102AE  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4709  0102B0  0100               	movlb	0	; () banked
  4710  0102B2  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4714  0102B4  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4715  0102B8  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4716  0102BC  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4717  0102C0  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4718  0102C4  0E05               	movlw	5
  4719  0102C6                     u6465:
  4720  0102C6  90D8               	bcf	status,0,c
  4721  0102C8  0100               	movlb	0	; () banked
  4722  0102CA  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4723  0102CC  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4724  0102CE  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4725  0102D0  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4726  0102D2  2EE8               	decfsz	wreg,f,c
  4727  0102D4  D7F8               	goto	u6465
  4728  0102D6  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4729  0102DA  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4730  0102DE  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4731  0102E2  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4735  0102E6  C07A  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4736  0102EA                     l5602:
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;inc\CANlib.h: 802: }
  4740                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4741  0102EA  0E04               	movlw	4
  4742  0102EC  0100               	movlb	0	; () banked
  4743  0102EE  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4744  0102F0  A4D8               	btfss	status,2,c
  4745  0102F2  D058               	goto	l5620
  4746                           
  4747                           ; BSR set to: 0
  4748  0102F4  0100               	movlb	0	; () banked
  4749  0102F6  2974               	incf	CANSetFilter@type& (0+255),w,b
  4750  0102F8  A4D8               	btfss	status,2,c
  4751  0102FA  D054               	goto	l5620
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;inc\CANlib.h: 805: {
  4755                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4756  0102FC  010F               	movlb	15	; () banked
  4757  0102FE  9711               	bcf	17,3,b	;volatile
  4758                           
  4759                           ; BSR set to: 15
  4760                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4761  010300  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4762  010304  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4763  010308  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4764  01030C  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4765  010310  0E04               	movlw	4
  4766  010312  D006               	goto	u6490
  4767  010314                     u6495:
  4768  010314  0100               	movlb	0	; () banked
  4769  010316  90D8               	bcf	status,0,c
  4770  010318  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4771  01031A  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4772  01031C  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4773  01031E  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4774  010320                     u6490:
  4775  010320  2EE8               	decfsz	wreg,f,c
  4776  010322  D7F8               	goto	u6495
  4777  010324  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4778  010328  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4779  01032C  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4780  010330  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4784  010334  0100               	movlb	0	; () banked
  4785  010336  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4786  010338  0100               	movlb	0	; () banked
  4787  01033A  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4788  01033C  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4789  01033E  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4790  010340  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4794  010342  C07A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4798  010346  0E07               	movlw	7
  4799  010348  0100               	movlb	0	; () banked
  4800  01034A  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4801  01034C  0100               	movlb	0	; () banked
  4802  01034E  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4803  010350  0E00               	movlw	0
  4804  010352  0100               	movlb	0	; () banked
  4805  010354  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4806  010356  0100               	movlb	0	; () banked
  4807  010358  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4808  01035A  0E00               	movlw	0
  4809  01035C  0100               	movlb	0	; () banked
  4810  01035E  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4811  010360  0100               	movlb	0	; () banked
  4812  010362  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4813  010364  0E00               	movlw	0
  4814  010366  0100               	movlb	0	; () banked
  4815  010368  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4816  01036A  0100               	movlb	0	; () banked
  4817  01036C  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4821  01036E  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4822  010372  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4823  010376  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4824  01037A  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4825  01037E  0E05               	movlw	5
  4826  010380                     u6505:
  4827  010380  90D8               	bcf	status,0,c
  4828  010382  0100               	movlb	0	; () banked
  4829  010384  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4830  010386  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4831  010388  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4832  01038A  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4833  01038C  2EE8               	decfsz	wreg,f,c
  4834  01038E  D7F8               	goto	u6505
  4835  010390  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4836  010394  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4837  010398  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4838  01039C  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4842  0103A0  C07A  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4843  0103A4                     l5620:
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;inc\CANlib.h: 815: }
  4847                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4848  0103A4  0E05               	movlw	5
  4849  0103A6  0100               	movlb	0	; () banked
  4850  0103A8  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4851  0103AA  A4D8               	btfss	status,2,c
  4852  0103AC  D058               	goto	l5638
  4853                           
  4854                           ; BSR set to: 0
  4855  0103AE  0100               	movlb	0	; () banked
  4856  0103B0  2974               	incf	CANSetFilter@type& (0+255),w,b
  4857  0103B2  A4D8               	btfss	status,2,c
  4858  0103B4  D054               	goto	l5638
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;inc\CANlib.h: 818: {
  4862                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4863  0103B6  010F               	movlb	15	; () banked
  4864  0103B8  9715               	bcf	21,3,b	;volatile
  4865                           
  4866                           ; BSR set to: 15
  4867                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4868  0103BA  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  4869  0103BE  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4870  0103C2  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4871  0103C6  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4872  0103CA  0E04               	movlw	4
  4873  0103CC  D006               	goto	u6530
  4874  0103CE                     u6535:
  4875  0103CE  0100               	movlb	0	; () banked
  4876  0103D0  90D8               	bcf	status,0,c
  4877  0103D2  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4878  0103D4  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4879  0103D6  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4880  0103D8  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  4881  0103DA                     u6530:
  4882  0103DA  2EE8               	decfsz	wreg,f,c
  4883  0103DC  D7F8               	goto	u6535
  4884  0103DE  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4885  0103E2  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4886  0103E6  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4887  0103EA  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4891  0103EE  0100               	movlb	0	; () banked
  4892  0103F0  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  4893  0103F2  0100               	movlb	0	; () banked
  4894  0103F4  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4895  0103F6  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4896  0103F8  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4897  0103FA  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4901  0103FC  C07A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4905  010400  0E07               	movlw	7
  4906  010402  0100               	movlb	0	; () banked
  4907  010404  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4908  010406  0100               	movlb	0	; () banked
  4909  010408  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4910  01040A  0E00               	movlw	0
  4911  01040C  0100               	movlb	0	; () banked
  4912  01040E  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4913  010410  0100               	movlb	0	; () banked
  4914  010412  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4915  010414  0E00               	movlw	0
  4916  010416  0100               	movlb	0	; () banked
  4917  010418  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4918  01041A  0100               	movlb	0	; () banked
  4919  01041C  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4920  01041E  0E00               	movlw	0
  4921  010420  0100               	movlb	0	; () banked
  4922  010422  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4923  010424  0100               	movlb	0	; () banked
  4924  010426  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4928  010428  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  4929  01042C  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4930  010430  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4931  010434  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4932  010438  0E05               	movlw	5
  4933  01043A                     u6545:
  4934  01043A  90D8               	bcf	status,0,c
  4935  01043C  0100               	movlb	0	; () banked
  4936  01043E  3775               	rlcf	??_CANSetFilter& (0+255),f,b
  4937  010440  3776               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4938  010442  3777               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4939  010444  3778               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4940  010446  2EE8               	decfsz	wreg,f,c
  4941  010448  D7F8               	goto	u6545
  4942  01044A  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  4943  01044E  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4944  010452  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4945  010456  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4946                           
  4947                           ; BSR set to: 0
  4948                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4949  01045A  C07A  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4950  01045E                     l5638:
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;inc\CANlib.h: 828: }
  4954                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4955  01045E  0100               	movlb	0	; () banked
  4956  010460  5179               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4957  010462  0100               	movlb	0	; () banked
  4958  010464  A4D8               	btfss	status,2,c
  4959  010466  D089               	goto	l5672
  4960                           
  4961                           ; BSR set to: 0
  4962  010468  0EF7               	movlw	247
  4963  01046A  0100               	movlb	0	; () banked
  4964  01046C  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  4965  01046E  A4D8               	btfss	status,2,c
  4966  010470  D084               	goto	l5672
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;inc\CANlib.h: 832: {
  4970                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4971  010472  010F               	movlb	15	; () banked
  4972  010474  8701               	bsf	1,3,b	;volatile
  4973                           
  4974                           ; BSR set to: 15
  4975                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4976  010476  0100               	movlb	0	; () banked
  4977  010478  5170               	movf	CANSetFilter@filter& (0+255),w,b
  4978  01047A  0100               	movlb	0	; () banked
  4979  01047C  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4980  01047E  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4981  010480  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4982  010482  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4986  010484  C07A  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  4990  010488  0E00               	movlw	0
  4991  01048A  0100               	movlb	0	; () banked
  4992  01048C  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  4993  01048E  0100               	movlb	0	; () banked
  4994  010490  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  4995  010492  0EFF               	movlw	255
  4996  010494  0100               	movlb	0	; () banked
  4997  010496  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4998  010498  0100               	movlb	0	; () banked
  4999  01049A  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5000  01049C  0E00               	movlw	0
  5001  01049E  0100               	movlb	0	; () banked
  5002  0104A0  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5003  0104A2  0100               	movlb	0	; () banked
  5004  0104A4  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5005  0104A6  0E00               	movlw	0
  5006  0104A8  0100               	movlb	0	; () banked
  5007  0104AA  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5008  0104AC  0100               	movlb	0	; () banked
  5009  0104AE  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5013  0104B0  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5014  0104B4  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5015  0104B8  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5016  0104BC  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5017  0104C0  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5018  0104C4  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5019  0104C8  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5020  0104CC  0100               	movlb	0	; () banked
  5021  0104CE  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5022  0104D0  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5023  0104D4  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5024  0104D8  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5025  0104DC  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5029  0104E0  C07A  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5033  0104E4  0100               	movlb	0	; () banked
  5034  0104E6  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5035  0104E8  D003               	goto	l481
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5039  0104EA  010F               	movlb	15	; () banked
  5040  0104EC  8101               	bsf	1,0,b	;volatile
  5041  0104EE  D002               	goto	l482
  5042  0104F0                     l481:
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;inc\CANlib.h: 844: else
  5046                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5047  0104F0  010F               	movlb	15	; () banked
  5048  0104F2  9101               	bcf	1,0,b	;volatile
  5049  0104F4                     l482:
  5050                           
  5051                           ; BSR set to: 15
  5052                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5053  0104F4  0100               	movlb	0	; () banked
  5054  0104F6  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5055  0104F8  D003               	goto	l483
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5059  0104FA  010F               	movlb	15	; () banked
  5060  0104FC  8301               	bsf	1,1,b	;volatile
  5061  0104FE  D002               	goto	l484
  5062  010500                     l483:
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;inc\CANlib.h: 849: else
  5066                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5067  010500  010F               	movlb	15	; () banked
  5068  010502  9301               	bcf	1,1,b	;volatile
  5069  010504                     l484:
  5070                           
  5071                           ; BSR set to: 15
  5072                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5073  010504  0100               	movlb	0	; () banked
  5074  010506  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5075  010508  D003               	goto	l485
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5079  01050A  010F               	movlb	15	; () banked
  5080  01050C  8B01               	bsf	1,5,b	;volatile
  5081  01050E  D002               	goto	l486
  5082  010510                     l485:
  5083                           
  5084                           ; BSR set to: 0
  5085                           ;inc\CANlib.h: 854: else
  5086                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5087  010510  010F               	movlb	15	; () banked
  5088  010512  9B01               	bcf	1,5,b	;volatile
  5089  010514                     l486:
  5090                           
  5091                           ; BSR set to: 15
  5092                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5093  010514  0100               	movlb	0	; () banked
  5094  010516  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5095  010518  D003               	goto	l487
  5096                           
  5097                           ; BSR set to: 0
  5098                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5099  01051A  010F               	movlb	15	; () banked
  5100  01051C  8D01               	bsf	1,6,b	;volatile
  5101  01051E  D002               	goto	l488
  5102  010520                     l487:
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;inc\CANlib.h: 859: else
  5106                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5107  010520  010F               	movlb	15	; () banked
  5108  010522  9D01               	bcf	1,6,b	;volatile
  5109  010524                     l488:
  5110                           
  5111                           ; BSR set to: 15
  5112                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5113  010524  0100               	movlb	0	; () banked
  5114  010526  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5115  010528  D003               	goto	l489
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5119  01052A  010F               	movlb	15	; () banked
  5120  01052C  8F01               	bsf	1,7,b	;volatile
  5121  01052E  D002               	goto	l5666
  5122  010530                     l489:
  5123                           
  5124                           ; BSR set to: 0
  5125                           ;inc\CANlib.h: 864: else
  5126                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5127  010530  010F               	movlb	15	; () banked
  5128  010532  9F01               	bcf	1,7,b	;volatile
  5129  010534                     l5666:
  5130                           
  5131                           ; BSR set to: 15
  5132                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5133  010534  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5134  010538  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5135  01053C  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5136  010540  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5137  010544  0E16               	movlw	22
  5138  010546  D006               	goto	u6620
  5139  010548                     u6625:
  5140  010548  0100               	movlb	0	; () banked
  5141  01054A  90D8               	bcf	status,0,c
  5142  01054C  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5143  01054E  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5144  010550  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5145  010552  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5146  010554                     u6620:
  5147  010554  2EE8               	decfsz	wreg,f,c
  5148  010556  D7F8               	goto	u6625
  5149  010558  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5150  01055C  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5151  010560  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5152  010564  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5156  010568  0100               	movlb	0	; () banked
  5157  01056A  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5158  01056C  0100               	movlb	0	; () banked
  5159  01056E  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5160  010570  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5161  010572  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5162  010574  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5163                           
  5164                           ; BSR set to: 0
  5165                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5166  010576  C07A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5167  01057A                     l5672:
  5168                           
  5169                           ; BSR set to: 0
  5170                           ;inc\CANlib.h: 870: }
  5171                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5172  01057A  0100               	movlb	0	; () banked
  5173  01057C  0579               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5174  01057E  A4D8               	btfss	status,2,c
  5175  010580  D089               	goto	l5706
  5176                           
  5177                           ; BSR set to: 0
  5178  010582  0EF7               	movlw	247
  5179  010584  0100               	movlb	0	; () banked
  5180  010586  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5181  010588  A4D8               	btfss	status,2,c
  5182  01058A  D084               	goto	l5706
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;inc\CANlib.h: 873: {
  5186                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5187  01058C  010F               	movlb	15	; () banked
  5188  01058E  8705               	bsf	5,3,b	;volatile
  5189                           
  5190                           ; BSR set to: 15
  5191                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5192  010590  0100               	movlb	0	; () banked
  5193  010592  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5194  010594  0100               	movlb	0	; () banked
  5195  010596  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5196  010598  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5197  01059A  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5198  01059C  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5202  01059E  C07A  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5203                           
  5204                           ; BSR set to: 0
  5205                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5206  0105A2  0E00               	movlw	0
  5207  0105A4  0100               	movlb	0	; () banked
  5208  0105A6  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5209  0105A8  0100               	movlb	0	; () banked
  5210  0105AA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5211  0105AC  0EFF               	movlw	255
  5212  0105AE  0100               	movlb	0	; () banked
  5213  0105B0  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5214  0105B2  0100               	movlb	0	; () banked
  5215  0105B4  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5216  0105B6  0E00               	movlw	0
  5217  0105B8  0100               	movlb	0	; () banked
  5218  0105BA  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5219  0105BC  0100               	movlb	0	; () banked
  5220  0105BE  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5221  0105C0  0E00               	movlw	0
  5222  0105C2  0100               	movlb	0	; () banked
  5223  0105C4  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5224  0105C6  0100               	movlb	0	; () banked
  5225  0105C8  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5229  0105CA  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5230  0105CE  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5231  0105D2  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5232  0105D6  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5233  0105DA  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5234  0105DE  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5235  0105E2  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5236  0105E6  0100               	movlb	0	; () banked
  5237  0105E8  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5238  0105EA  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5239  0105EE  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5240  0105F2  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5241  0105F6  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5245  0105FA  C07A  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5249  0105FE  0100               	movlb	0	; () banked
  5250  010600  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5251  010602  D003               	goto	l492
  5252                           
  5253                           ; BSR set to: 0
  5254                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5255  010604  010F               	movlb	15	; () banked
  5256  010606  8105               	bsf	5,0,b	;volatile
  5257  010608  D002               	goto	l493
  5258  01060A                     l492:
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;inc\CANlib.h: 885: else
  5262                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5263  01060A  010F               	movlb	15	; () banked
  5264  01060C  9105               	bcf	5,0,b	;volatile
  5265  01060E                     l493:
  5266                           
  5267                           ; BSR set to: 15
  5268                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5269  01060E  0100               	movlb	0	; () banked
  5270  010610  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5271  010612  D003               	goto	l494
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5275  010614  010F               	movlb	15	; () banked
  5276  010616  8305               	bsf	5,1,b	;volatile
  5277  010618  D002               	goto	l495
  5278  01061A                     l494:
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;inc\CANlib.h: 890: else
  5282                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5283  01061A  010F               	movlb	15	; () banked
  5284  01061C  9305               	bcf	5,1,b	;volatile
  5285  01061E                     l495:
  5286                           
  5287                           ; BSR set to: 15
  5288                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5289  01061E  0100               	movlb	0	; () banked
  5290  010620  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5291  010622  D003               	goto	l496
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5295  010624  010F               	movlb	15	; () banked
  5296  010626  8B05               	bsf	5,5,b	;volatile
  5297  010628  D002               	goto	l497
  5298  01062A                     l496:
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;inc\CANlib.h: 895: else
  5302                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5303  01062A  010F               	movlb	15	; () banked
  5304  01062C  9B05               	bcf	5,5,b	;volatile
  5305  01062E                     l497:
  5306                           
  5307                           ; BSR set to: 15
  5308                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5309  01062E  0100               	movlb	0	; () banked
  5310  010630  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5311  010632  D003               	goto	l498
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5315  010634  010F               	movlb	15	; () banked
  5316  010636  8D05               	bsf	5,6,b	;volatile
  5317  010638  D002               	goto	l499
  5318  01063A                     l498:
  5319                           
  5320                           ; BSR set to: 0
  5321                           ;inc\CANlib.h: 900: else
  5322                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5323  01063A  010F               	movlb	15	; () banked
  5324  01063C  9D05               	bcf	5,6,b	;volatile
  5325  01063E                     l499:
  5326                           
  5327                           ; BSR set to: 15
  5328                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5329  01063E  0100               	movlb	0	; () banked
  5330  010640  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5331  010642  D003               	goto	l500
  5332                           
  5333                           ; BSR set to: 0
  5334                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5335  010644  010F               	movlb	15	; () banked
  5336  010646  8F05               	bsf	5,7,b	;volatile
  5337  010648  D002               	goto	l5700
  5338  01064A                     l500:
  5339                           
  5340                           ; BSR set to: 0
  5341                           ;inc\CANlib.h: 905: else
  5342                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5343  01064A  010F               	movlb	15	; () banked
  5344  01064C  9F05               	bcf	5,7,b	;volatile
  5345  01064E                     l5700:
  5346                           
  5347                           ; BSR set to: 15
  5348                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5349  01064E  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5350  010652  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5351  010656  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5352  01065A  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5353  01065E  0E16               	movlw	22
  5354  010660  D006               	goto	u6700
  5355  010662                     u6705:
  5356  010662  0100               	movlb	0	; () banked
  5357  010664  90D8               	bcf	status,0,c
  5358  010666  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5359  010668  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5360  01066A  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5361  01066C  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5362  01066E                     u6700:
  5363  01066E  2EE8               	decfsz	wreg,f,c
  5364  010670  D7F8               	goto	u6705
  5365  010672  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5366  010676  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5367  01067A  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5368  01067E  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5372  010682  0100               	movlb	0	; () banked
  5373  010684  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5374  010686  0100               	movlb	0	; () banked
  5375  010688  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5376  01068A  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5377  01068C  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5378  01068E  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5379                           
  5380                           ; BSR set to: 0
  5381                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5382  010690  C07A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5383  010694                     l5706:
  5384                           
  5385                           ; BSR set to: 0
  5386                           ;inc\CANlib.h: 911: }
  5387                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5388  010694  0E02               	movlw	2
  5389  010696  0100               	movlb	0	; () banked
  5390  010698  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5391  01069A  A4D8               	btfss	status,2,c
  5392  01069C  D089               	goto	l5740
  5393                           
  5394                           ; BSR set to: 0
  5395  01069E  0EF7               	movlw	247
  5396  0106A0  0100               	movlb	0	; () banked
  5397  0106A2  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5398  0106A4  A4D8               	btfss	status,2,c
  5399  0106A6  D084               	goto	l5740
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;inc\CANlib.h: 915: {
  5403                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5404  0106A8  010F               	movlb	15	; () banked
  5405  0106AA  8709               	bsf	9,3,b	;volatile
  5406                           
  5407                           ; BSR set to: 15
  5408                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5409  0106AC  0100               	movlb	0	; () banked
  5410  0106AE  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5411  0106B0  0100               	movlb	0	; () banked
  5412  0106B2  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5413  0106B4  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5414  0106B6  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5415  0106B8  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5419  0106BA  C07A  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5420                           
  5421                           ; BSR set to: 0
  5422                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5423  0106BE  0E00               	movlw	0
  5424  0106C0  0100               	movlb	0	; () banked
  5425  0106C2  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5426  0106C4  0100               	movlb	0	; () banked
  5427  0106C6  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5428  0106C8  0EFF               	movlw	255
  5429  0106CA  0100               	movlb	0	; () banked
  5430  0106CC  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5431  0106CE  0100               	movlb	0	; () banked
  5432  0106D0  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5433  0106D2  0E00               	movlw	0
  5434  0106D4  0100               	movlb	0	; () banked
  5435  0106D6  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5436  0106D8  0100               	movlb	0	; () banked
  5437  0106DA  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5438  0106DC  0E00               	movlw	0
  5439  0106DE  0100               	movlb	0	; () banked
  5440  0106E0  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5441  0106E2  0100               	movlb	0	; () banked
  5442  0106E4  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5446  0106E6  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5447  0106EA  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5448  0106EE  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5449  0106F2  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5450  0106F6  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5451  0106FA  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5452  0106FE  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5453  010702  0100               	movlb	0	; () banked
  5454  010704  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5455  010706  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5456  01070A  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5457  01070E  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5458  010712  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5459                           
  5460                           ; BSR set to: 0
  5461                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5462  010716  C07A  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5466  01071A  0100               	movlb	0	; () banked
  5467  01071C  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5468  01071E  D003               	goto	l503
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5472  010720  010F               	movlb	15	; () banked
  5473  010722  8109               	bsf	9,0,b	;volatile
  5474  010724  D002               	goto	l504
  5475  010726                     l503:
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;inc\CANlib.h: 927: else
  5479                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5480  010726  010F               	movlb	15	; () banked
  5481  010728  9109               	bcf	9,0,b	;volatile
  5482  01072A                     l504:
  5483                           
  5484                           ; BSR set to: 15
  5485                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5486  01072A  0100               	movlb	0	; () banked
  5487  01072C  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5488  01072E  D003               	goto	l505
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5492  010730  010F               	movlb	15	; () banked
  5493  010732  8309               	bsf	9,1,b	;volatile
  5494  010734  D002               	goto	l506
  5495  010736                     l505:
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;inc\CANlib.h: 932: else
  5499                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5500  010736  010F               	movlb	15	; () banked
  5501  010738  9309               	bcf	9,1,b	;volatile
  5502  01073A                     l506:
  5503                           
  5504                           ; BSR set to: 15
  5505                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5506  01073A  0100               	movlb	0	; () banked
  5507  01073C  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5508  01073E  D003               	goto	l507
  5509                           
  5510                           ; BSR set to: 0
  5511                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5512  010740  010F               	movlb	15	; () banked
  5513  010742  8B09               	bsf	9,5,b	;volatile
  5514  010744  D002               	goto	l508
  5515  010746                     l507:
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;inc\CANlib.h: 937: else
  5519                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5520  010746  010F               	movlb	15	; () banked
  5521  010748  9B09               	bcf	9,5,b	;volatile
  5522  01074A                     l508:
  5523                           
  5524                           ; BSR set to: 15
  5525                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5526  01074A  0100               	movlb	0	; () banked
  5527  01074C  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5528  01074E  D003               	goto	l509
  5529                           
  5530                           ; BSR set to: 0
  5531                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5532  010750  010F               	movlb	15	; () banked
  5533  010752  8D09               	bsf	9,6,b	;volatile
  5534  010754  D002               	goto	l510
  5535  010756                     l509:
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;inc\CANlib.h: 942: else
  5539                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5540  010756  010F               	movlb	15	; () banked
  5541  010758  9D09               	bcf	9,6,b	;volatile
  5542  01075A                     l510:
  5543                           
  5544                           ; BSR set to: 15
  5545                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5546  01075A  0100               	movlb	0	; () banked
  5547  01075C  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5548  01075E  D003               	goto	l511
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5552  010760  010F               	movlb	15	; () banked
  5553  010762  8F09               	bsf	9,7,b	;volatile
  5554  010764  D002               	goto	l5734
  5555  010766                     l511:
  5556                           
  5557                           ; BSR set to: 0
  5558                           ;inc\CANlib.h: 947: else
  5559                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5560  010766  010F               	movlb	15	; () banked
  5561  010768  9F09               	bcf	9,7,b	;volatile
  5562  01076A                     l5734:
  5563                           
  5564                           ; BSR set to: 15
  5565                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5566  01076A  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5567  01076E  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5568  010772  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5569  010776  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5570  01077A  0E16               	movlw	22
  5571  01077C  D006               	goto	u6780
  5572  01077E                     u6785:
  5573  01077E  0100               	movlb	0	; () banked
  5574  010780  90D8               	bcf	status,0,c
  5575  010782  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5576  010784  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5577  010786  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5578  010788  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5579  01078A                     u6780:
  5580  01078A  2EE8               	decfsz	wreg,f,c
  5581  01078C  D7F8               	goto	u6785
  5582  01078E  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5583  010792  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5584  010796  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5585  01079A  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5586                           
  5587                           ; BSR set to: 0
  5588                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5589  01079E  0100               	movlb	0	; () banked
  5590  0107A0  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5591  0107A2  0100               	movlb	0	; () banked
  5592  0107A4  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5593  0107A6  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5594  0107A8  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5595  0107AA  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5599  0107AC  C07A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5600  0107B0                     l5740:
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;inc\CANlib.h: 953: }
  5604                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5605  0107B0  0E03               	movlw	3
  5606  0107B2  0100               	movlb	0	; () banked
  5607  0107B4  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5608  0107B6  A4D8               	btfss	status,2,c
  5609  0107B8  D089               	goto	l5774
  5610                           
  5611                           ; BSR set to: 0
  5612  0107BA  0EF7               	movlw	247
  5613  0107BC  0100               	movlb	0	; () banked
  5614  0107BE  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5615  0107C0  A4D8               	btfss	status,2,c
  5616  0107C2  D084               	goto	l5774
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;inc\CANlib.h: 956: {
  5620                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5621  0107C4  010F               	movlb	15	; () banked
  5622  0107C6  870D               	bsf	13,3,b	;volatile
  5623                           
  5624                           ; BSR set to: 15
  5625                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5626  0107C8  0100               	movlb	0	; () banked
  5627  0107CA  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5628  0107CC  0100               	movlb	0	; () banked
  5629  0107CE  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5630  0107D0  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5631  0107D2  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5632  0107D4  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5636  0107D6  C07A  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5637                           
  5638                           ; BSR set to: 0
  5639                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5640  0107DA  0E00               	movlw	0
  5641  0107DC  0100               	movlb	0	; () banked
  5642  0107DE  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5643  0107E0  0100               	movlb	0	; () banked
  5644  0107E2  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5645  0107E4  0EFF               	movlw	255
  5646  0107E6  0100               	movlb	0	; () banked
  5647  0107E8  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5648  0107EA  0100               	movlb	0	; () banked
  5649  0107EC  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5650  0107EE  0E00               	movlw	0
  5651  0107F0  0100               	movlb	0	; () banked
  5652  0107F2  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5653  0107F4  0100               	movlb	0	; () banked
  5654  0107F6  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5655  0107F8  0E00               	movlw	0
  5656  0107FA  0100               	movlb	0	; () banked
  5657  0107FC  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5658  0107FE  0100               	movlb	0	; () banked
  5659  010800  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5663  010802  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5664  010806  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5665  01080A  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5666  01080E  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5667  010812  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5668  010816  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5669  01081A  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5670  01081E  0100               	movlb	0	; () banked
  5671  010820  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5672  010822  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5673  010826  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5674  01082A  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5675  01082E  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5679  010832  C07A  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5683  010836  0100               	movlb	0	; () banked
  5684  010838  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5685  01083A  D003               	goto	l514
  5686                           
  5687                           ; BSR set to: 0
  5688                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5689  01083C  010F               	movlb	15	; () banked
  5690  01083E  810D               	bsf	13,0,b	;volatile
  5691  010840  D002               	goto	l515
  5692  010842                     l514:
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;inc\CANlib.h: 968: else
  5696                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5697  010842  010F               	movlb	15	; () banked
  5698  010844  910D               	bcf	13,0,b	;volatile
  5699  010846                     l515:
  5700                           
  5701                           ; BSR set to: 15
  5702                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5703  010846  0100               	movlb	0	; () banked
  5704  010848  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5705  01084A  D003               	goto	l516
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5709  01084C  010F               	movlb	15	; () banked
  5710  01084E  830D               	bsf	13,1,b	;volatile
  5711  010850  D002               	goto	l517
  5712  010852                     l516:
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;inc\CANlib.h: 973: else
  5716                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5717  010852  010F               	movlb	15	; () banked
  5718  010854  930D               	bcf	13,1,b	;volatile
  5719  010856                     l517:
  5720                           
  5721                           ; BSR set to: 15
  5722                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5723  010856  0100               	movlb	0	; () banked
  5724  010858  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5725  01085A  D003               	goto	l518
  5726                           
  5727                           ; BSR set to: 0
  5728                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5729  01085C  010F               	movlb	15	; () banked
  5730  01085E  8B0D               	bsf	13,5,b	;volatile
  5731  010860  D002               	goto	l519
  5732  010862                     l518:
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;inc\CANlib.h: 978: else
  5736                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5737  010862  010F               	movlb	15	; () banked
  5738  010864  9B0D               	bcf	13,5,b	;volatile
  5739  010866                     l519:
  5740                           
  5741                           ; BSR set to: 15
  5742                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5743  010866  0100               	movlb	0	; () banked
  5744  010868  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5745  01086A  D003               	goto	l520
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5749  01086C  010F               	movlb	15	; () banked
  5750  01086E  8D0D               	bsf	13,6,b	;volatile
  5751  010870  D002               	goto	l521
  5752  010872                     l520:
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;inc\CANlib.h: 983: else
  5756                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5757  010872  010F               	movlb	15	; () banked
  5758  010874  9D0D               	bcf	13,6,b	;volatile
  5759  010876                     l521:
  5760                           
  5761                           ; BSR set to: 15
  5762                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5763  010876  0100               	movlb	0	; () banked
  5764  010878  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5765  01087A  D003               	goto	l522
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5769  01087C  010F               	movlb	15	; () banked
  5770  01087E  8F0D               	bsf	13,7,b	;volatile
  5771  010880  D002               	goto	l5768
  5772  010882                     l522:
  5773                           
  5774                           ; BSR set to: 0
  5775                           ;inc\CANlib.h: 988: else
  5776                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5777  010882  010F               	movlb	15	; () banked
  5778  010884  9F0D               	bcf	13,7,b	;volatile
  5779  010886                     l5768:
  5780                           
  5781                           ; BSR set to: 15
  5782                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5783  010886  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  5784  01088A  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5785  01088E  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5786  010892  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5787  010896  0E16               	movlw	22
  5788  010898  D006               	goto	u6860
  5789  01089A                     u6865:
  5790  01089A  0100               	movlb	0	; () banked
  5791  01089C  90D8               	bcf	status,0,c
  5792  01089E  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5793  0108A0  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5794  0108A2  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5795  0108A4  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  5796  0108A6                     u6860:
  5797  0108A6  2EE8               	decfsz	wreg,f,c
  5798  0108A8  D7F8               	goto	u6865
  5799  0108AA  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5800  0108AE  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5801  0108B2  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5802  0108B6  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5806  0108BA  0100               	movlb	0	; () banked
  5807  0108BC  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  5808  0108BE  0100               	movlb	0	; () banked
  5809  0108C0  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5810  0108C2  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5811  0108C4  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5812  0108C6  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5813                           
  5814                           ; BSR set to: 0
  5815                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5816  0108C8  C07A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5817  0108CC                     l5774:
  5818                           
  5819                           ; BSR set to: 0
  5820                           ;inc\CANlib.h: 994: }
  5821                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5822  0108CC  0E04               	movlw	4
  5823  0108CE  0100               	movlb	0	; () banked
  5824  0108D0  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5825  0108D2  A4D8               	btfss	status,2,c
  5826  0108D4  D089               	goto	l5808
  5827                           
  5828                           ; BSR set to: 0
  5829  0108D6  0EF7               	movlw	247
  5830  0108D8  0100               	movlb	0	; () banked
  5831  0108DA  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  5832  0108DC  A4D8               	btfss	status,2,c
  5833  0108DE  D084               	goto	l5808
  5834                           
  5835                           ; BSR set to: 0
  5836                           ;inc\CANlib.h: 997: {
  5837                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5838  0108E0  010F               	movlb	15	; () banked
  5839  0108E2  8711               	bsf	17,3,b	;volatile
  5840                           
  5841                           ; BSR set to: 15
  5842                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5843  0108E4  0100               	movlb	0	; () banked
  5844  0108E6  5170               	movf	CANSetFilter@filter& (0+255),w,b
  5845  0108E8  0100               	movlb	0	; () banked
  5846  0108EA  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5847  0108EC  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5848  0108EE  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5849  0108F0  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5850                           
  5851                           ; BSR set to: 0
  5852                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5853  0108F2  C07A  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5854                           
  5855                           ; BSR set to: 0
  5856                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5857  0108F6  0E00               	movlw	0
  5858  0108F8  0100               	movlb	0	; () banked
  5859  0108FA  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  5860  0108FC  0100               	movlb	0	; () banked
  5861  0108FE  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  5862  010900  0EFF               	movlw	255
  5863  010902  0100               	movlb	0	; () banked
  5864  010904  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5865  010906  0100               	movlb	0	; () banked
  5866  010908  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5867  01090A  0E00               	movlw	0
  5868  01090C  0100               	movlb	0	; () banked
  5869  01090E  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5870  010910  0100               	movlb	0	; () banked
  5871  010912  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5872  010914  0E00               	movlw	0
  5873  010916  0100               	movlb	0	; () banked
  5874  010918  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5875  01091A  0100               	movlb	0	; () banked
  5876  01091C  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5880  01091E  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  5881  010922  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5882  010926  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5883  01092A  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5884  01092E  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  5885  010932  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5886  010936  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5887  01093A  0100               	movlb	0	; () banked
  5888  01093C  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  5889  01093E  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  5890  010942  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5891  010946  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5892  01094A  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5896  01094E  C07A  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5900  010952  0100               	movlb	0	; () banked
  5901  010954  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5902  010956  D003               	goto	l525
  5903                           
  5904                           ; BSR set to: 0
  5905                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5906  010958  010F               	movlb	15	; () banked
  5907  01095A  8111               	bsf	17,0,b	;volatile
  5908  01095C  D002               	goto	l526
  5909  01095E                     l525:
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;inc\CANlib.h: 1009: else
  5913                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5914  01095E  010F               	movlb	15	; () banked
  5915  010960  9111               	bcf	17,0,b	;volatile
  5916  010962                     l526:
  5917                           
  5918                           ; BSR set to: 15
  5919                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5920  010962  0100               	movlb	0	; () banked
  5921  010964  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5922  010966  D003               	goto	l527
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5926  010968  010F               	movlb	15	; () banked
  5927  01096A  8311               	bsf	17,1,b	;volatile
  5928  01096C  D002               	goto	l528
  5929  01096E                     l527:
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;inc\CANlib.h: 1014: else
  5933                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5934  01096E  010F               	movlb	15	; () banked
  5935  010970  9311               	bcf	17,1,b	;volatile
  5936  010972                     l528:
  5937                           
  5938                           ; BSR set to: 15
  5939                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5940  010972  0100               	movlb	0	; () banked
  5941  010974  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5942  010976  D003               	goto	l529
  5943                           
  5944                           ; BSR set to: 0
  5945                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5946  010978  010F               	movlb	15	; () banked
  5947  01097A  8B11               	bsf	17,5,b	;volatile
  5948  01097C  D002               	goto	l530
  5949  01097E                     l529:
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;inc\CANlib.h: 1019: else
  5953                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5954  01097E  010F               	movlb	15	; () banked
  5955  010980  9B11               	bcf	17,5,b	;volatile
  5956  010982                     l530:
  5957                           
  5958                           ; BSR set to: 15
  5959                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5960  010982  0100               	movlb	0	; () banked
  5961  010984  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5962  010986  D003               	goto	l531
  5963                           
  5964                           ; BSR set to: 0
  5965                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5966  010988  010F               	movlb	15	; () banked
  5967  01098A  8D11               	bsf	17,6,b	;volatile
  5968  01098C  D002               	goto	l532
  5969  01098E                     l531:
  5970                           
  5971                           ; BSR set to: 0
  5972                           ;inc\CANlib.h: 1024: else
  5973                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5974  01098E  010F               	movlb	15	; () banked
  5975  010990  9D11               	bcf	17,6,b	;volatile
  5976  010992                     l532:
  5977                           
  5978                           ; BSR set to: 15
  5979                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5980  010992  0100               	movlb	0	; () banked
  5981  010994  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5982  010996  D003               	goto	l533
  5983                           
  5984                           ; BSR set to: 0
  5985                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5986  010998  010F               	movlb	15	; () banked
  5987  01099A  8F11               	bsf	17,7,b	;volatile
  5988  01099C  D002               	goto	l5802
  5989  01099E                     l533:
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;inc\CANlib.h: 1029: else
  5993                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5994  01099E  010F               	movlb	15	; () banked
  5995  0109A0  9F11               	bcf	17,7,b	;volatile
  5996  0109A2                     l5802:
  5997                           
  5998                           ; BSR set to: 15
  5999                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6000  0109A2  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  6001  0109A6  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6002  0109AA  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6003  0109AE  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6004  0109B2  0E16               	movlw	22
  6005  0109B4  D006               	goto	u6940
  6006  0109B6                     u6945:
  6007  0109B6  0100               	movlb	0	; () banked
  6008  0109B8  90D8               	bcf	status,0,c
  6009  0109BA  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6010  0109BC  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6011  0109BE  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6012  0109C0  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  6013  0109C2                     u6940:
  6014  0109C2  2EE8               	decfsz	wreg,f,c
  6015  0109C4  D7F8               	goto	u6945
  6016  0109C6  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6017  0109CA  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6018  0109CE  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6019  0109D2  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6023  0109D6  0100               	movlb	0	; () banked
  6024  0109D8  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  6025  0109DA  0100               	movlb	0	; () banked
  6026  0109DC  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6027  0109DE  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6028  0109E0  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6029  0109E2  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6033  0109E4  C07A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6034  0109E8                     l5808:
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;inc\CANlib.h: 1035: }
  6038                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6039  0109E8  0E05               	movlw	5
  6040  0109EA  0100               	movlb	0	; () banked
  6041  0109EC  1979               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6042  0109EE  A4D8               	btfss	status,2,c
  6043  0109F0  0012               	return	
  6044                           
  6045                           ; BSR set to: 0
  6046  0109F2  0EF7               	movlw	247
  6047  0109F4  0100               	movlb	0	; () banked
  6048  0109F6  1974               	xorwf	CANSetFilter@type& (0+255),w,b
  6049  0109F8  A4D8               	btfss	status,2,c
  6050  0109FA  0012               	return	
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;inc\CANlib.h: 1038: {
  6054                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6055  0109FC  010F               	movlb	15	; () banked
  6056  0109FE  8715               	bsf	21,3,b	;volatile
  6057                           
  6058                           ; BSR set to: 15
  6059                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6060  010A00  0100               	movlb	0	; () banked
  6061  010A02  5170               	movf	CANSetFilter@filter& (0+255),w,b
  6062  010A04  0100               	movlb	0	; () banked
  6063  010A06  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6064  010A08  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6065  010A0A  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6066  010A0C  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6067                           
  6068                           ; BSR set to: 0
  6069                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6070  010A0E  C07A  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6071                           
  6072                           ; BSR set to: 0
  6073                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6074  010A12  0E00               	movlw	0
  6075  010A14  0100               	movlb	0	; () banked
  6076  010A16  1570               	andwf	CANSetFilter@filter& (0+255),w,b
  6077  010A18  0100               	movlb	0	; () banked
  6078  010A1A  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6079  010A1C  0EFF               	movlw	255
  6080  010A1E  0100               	movlb	0	; () banked
  6081  010A20  1571               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6082  010A22  0100               	movlb	0	; () banked
  6083  010A24  6F7B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6084  010A26  0E00               	movlw	0
  6085  010A28  0100               	movlb	0	; () banked
  6086  010A2A  1572               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6087  010A2C  0100               	movlb	0	; () banked
  6088  010A2E  6F7C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6089  010A30  0E00               	movlw	0
  6090  010A32  0100               	movlb	0	; () banked
  6091  010A34  1573               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6092  010A36  0100               	movlb	0	; () banked
  6093  010A38  6F7D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6097  010A3A  C07A  F075         	movff	CANSetFilter@tamp,??_CANSetFilter
  6098  010A3E  C07B  F076         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6099  010A42  C07C  F077         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6100  010A46  C07D  F078         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6101  010A4A  C076  F075         	movff	??_CANSetFilter+1,??_CANSetFilter
  6102  010A4E  C077  F076         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6103  010A52  C078  F077         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6104  010A56  0100               	movlb	0	; () banked
  6105  010A58  6B78               	clrf	(??_CANSetFilter+3)& (0+255),b
  6106  010A5A  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6107  010A5E  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6108  010A62  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6109  010A66  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6110                           
  6111                           ; BSR set to: 0
  6112                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6113  010A6A  C07A  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6114                           
  6115                           ; BSR set to: 0
  6116                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6117  010A6E  0100               	movlb	0	; () banked
  6118  010A70  A172               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6119  010A72  D003               	goto	l536
  6120                           
  6121                           ; BSR set to: 0
  6122                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6123  010A74  010F               	movlb	15	; () banked
  6124  010A76  8115               	bsf	21,0,b	;volatile
  6125  010A78  D002               	goto	l537
  6126  010A7A                     l536:
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;inc\CANlib.h: 1050: else
  6130                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6131  010A7A  010F               	movlb	15	; () banked
  6132  010A7C  9115               	bcf	21,0,b	;volatile
  6133  010A7E                     l537:
  6134                           
  6135                           ; BSR set to: 15
  6136                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6137  010A7E  0100               	movlb	0	; () banked
  6138  010A80  A372               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6139  010A82  D003               	goto	l538
  6140                           
  6141                           ; BSR set to: 0
  6142                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6143  010A84  010F               	movlb	15	; () banked
  6144  010A86  8315               	bsf	21,1,b	;volatile
  6145  010A88  D002               	goto	l539
  6146  010A8A                     l538:
  6147                           
  6148                           ; BSR set to: 0
  6149                           ;inc\CANlib.h: 1055: else
  6150                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6151  010A8A  010F               	movlb	15	; () banked
  6152  010A8C  9315               	bcf	21,1,b	;volatile
  6153  010A8E                     l539:
  6154                           
  6155                           ; BSR set to: 15
  6156                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6157  010A8E  0100               	movlb	0	; () banked
  6158  010A90  A572               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6159  010A92  D003               	goto	l540
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6163  010A94  010F               	movlb	15	; () banked
  6164  010A96  8B15               	bsf	21,5,b	;volatile
  6165  010A98  D002               	goto	l541
  6166  010A9A                     l540:
  6167                           
  6168                           ; BSR set to: 0
  6169                           ;inc\CANlib.h: 1060: else
  6170                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6171  010A9A  010F               	movlb	15	; () banked
  6172  010A9C  9B15               	bcf	21,5,b	;volatile
  6173  010A9E                     l541:
  6174                           
  6175                           ; BSR set to: 15
  6176                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6177  010A9E  0100               	movlb	0	; () banked
  6178  010AA0  A772               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6179  010AA2  D003               	goto	l542
  6180                           
  6181                           ; BSR set to: 0
  6182                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6183  010AA4  010F               	movlb	15	; () banked
  6184  010AA6  8D15               	bsf	21,6,b	;volatile
  6185  010AA8  D002               	goto	l543
  6186  010AAA                     l542:
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;inc\CANlib.h: 1065: else
  6190                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6191  010AAA  010F               	movlb	15	; () banked
  6192  010AAC  9D15               	bcf	21,6,b	;volatile
  6193  010AAE                     l543:
  6194                           
  6195                           ; BSR set to: 15
  6196                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6197  010AAE  0100               	movlb	0	; () banked
  6198  010AB0  A972               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6199  010AB2  D003               	goto	l544
  6200                           
  6201                           ; BSR set to: 0
  6202                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6203  010AB4  010F               	movlb	15	; () banked
  6204  010AB6  8F15               	bsf	21,7,b	;volatile
  6205  010AB8  D002               	goto	l5836
  6206  010ABA                     l544:
  6207                           
  6208                           ; BSR set to: 0
  6209                           ;inc\CANlib.h: 1070: else
  6210                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6211  010ABA  010F               	movlb	15	; () banked
  6212  010ABC  9F15               	bcf	21,7,b	;volatile
  6213  010ABE                     l5836:
  6214                           
  6215                           ; BSR set to: 15
  6216                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6217  010ABE  C070  F075         	movff	CANSetFilter@filter,??_CANSetFilter
  6218  010AC2  C071  F076         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6219  010AC6  C072  F077         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6220  010ACA  C073  F078         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6221  010ACE  0E16               	movlw	22
  6222  010AD0  D006               	goto	u7020
  6223  010AD2                     u7025:
  6224  010AD2  0100               	movlb	0	; () banked
  6225  010AD4  90D8               	bcf	status,0,c
  6226  010AD6  3378               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6227  010AD8  3377               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6228  010ADA  3376               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6229  010ADC  3375               	rrcf	??_CANSetFilter& (0+255),f,b
  6230  010ADE                     u7020:
  6231  010ADE  2EE8               	decfsz	wreg,f,c
  6232  010AE0  D7F8               	goto	u7025
  6233  010AE2  C075  F07A         	movff	??_CANSetFilter,CANSetFilter@tamp
  6234  010AE6  C076  F07B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6235  010AEA  C077  F07C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6236  010AEE  C078  F07D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6237                           
  6238                           ; BSR set to: 0
  6239                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6240  010AF2  0100               	movlb	0	; () banked
  6241  010AF4  517A               	movf	CANSetFilter@tamp& (0+255),w,b
  6242  010AF6  0100               	movlb	0	; () banked
  6243  010AF8  6F7A               	movwf	CANSetFilter@tamp& (0+255),b
  6244  010AFA  6B7B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6245  010AFC  6B7C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6246  010AFE  6B7D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6250  010B00  C07A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6251  010B04  0012               	return	
  6252  010B06                     __end_of_CANSetFilter:
  6253                           	opt stack 0
  6254                           tblptru	equ	0xFF8
  6255                           tblptrh	equ	0xFF7
  6256                           tblptrl	equ	0xFF6
  6257                           tablat	equ	0xFF5
  6258                           intcon	equ	0xFF2
  6259                           postinc0	equ	0xFEE
  6260                           wreg	equ	0xFE8
  6261                           status	equ	0xFD8
  6262                           
  6263 ;; *************** function _CANOperationMode *****************
  6264 ;; Defined at:
  6265 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;  mode            1    wreg     enum E16881
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;  mode            1   16[BANK0 ] enum E16881
  6270 ;; Return value:  Size  Location     Type
  6271 ;;		None               void
  6272 ;; Registers used:
  6273 ;;		wreg, status,2, status,0
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6280 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6282 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6283 ;;Total ram usage:        1 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; Hardware stack levels required when called:    9
  6286 ;; This function calls:
  6287 ;;		Nothing
  6288 ;; This function is called by:
  6289 ;;		_CANInitialize
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text5
  6294  0167F8                     __ptext5:
  6295                           	opt stack 0
  6296  0167F8                     _CANOperationMode:
  6297                           	opt stack 19
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;incstack = 0
  6301                           ;CANOperationMode@mode stored from wreg
  6302  0167F8  0100               	movlb	0	; () banked
  6303  0167FA  6F70               	movwf	CANOperationMode@mode& (0+255),b
  6304                           
  6305                           ;inc\CANlib.h: 208: CANCON = mode;
  6306  0167FC  C070  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6307  016800                     l5432:
  6308  016800  506E               	movf	3950,w,c	;volatile
  6309  016802  0BE0               	andlw	224
  6310  016804  0100               	movlb	0	; () banked
  6311  016806  1970               	xorwf	CANOperationMode@mode& (0+255),w,b
  6312  016808  B4D8               	btfsc	status,2,c
  6313  01680A  0012               	return	
  6314  01680C  D7F9               	goto	l5432
  6315  01680E                     __end_of_CANOperationMode:
  6316                           	opt stack 0
  6317                           tblptru	equ	0xFF8
  6318                           tblptrh	equ	0xFF7
  6319                           tblptrl	equ	0xFF6
  6320                           tablat	equ	0xFF5
  6321                           intcon	equ	0xFF2
  6322                           postinc0	equ	0xFEE
  6323                           wreg	equ	0xFE8
  6324                           status	equ	0xFD8
  6325                           
  6326 ;; *************** function _PWR_Button_Polling *****************
  6327 ;; Defined at:
  6328 ;;		line 475 in file "RemoteCan.c"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;		None
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;		None
  6333 ;; Return value:  Size  Location     Type
  6334 ;;		None               void
  6335 ;; Registers used:
  6336 ;;		None
  6337 ;; Tracked objects:
  6338 ;;		On entry : 0/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6346 ;;Total ram usage:        0 bytes
  6347 ;; Hardware stack levels used:    1
  6348 ;; Hardware stack levels required when called:    9
  6349 ;; This function calls:
  6350 ;;		Nothing
  6351 ;; This function is called by:
  6352 ;;		_main
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           	psect	text6
  6357  016788                     __ptext6:
  6358                           	opt stack 0
  6359  016788                     _PWR_Button_Polling:
  6360                           	opt stack 21
  6361                           
  6362                           ;RemoteCan.c: 476: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  6363                           
  6364                           ; BSR set to: 0
  6365                           ;incstack = 0
  6366  016788  AA81               	btfss	3969,5,c	;volatile
  6367  01678A  D002               	goto	l878
  6368  01678C  B84D               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6369  01678E  0012               	return	
  6370  016790                     l878:
  6371                           
  6372                           ;RemoteCan.c: 477: wait_low_1 = 0;
  6373  016790  984D               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6374                           
  6375                           ;RemoteCan.c: 478: if (PORTBbits.RB5 == 1) {
  6376  016792  AA81               	btfss	3969,5,c	;volatile
  6377  016794  0012               	return	
  6378                           
  6379                           ;RemoteCan.c: 479: power_switch = ~power_switch;
  6380  016796  B04D               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6381  016798  D002               	goto	u9440
  6382  01679A  804D               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6383  01679C  D001               	goto	u9455
  6384  01679E                     u9440:
  6385  01679E  904D               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6386  0167A0                     u9455:
  6387                           
  6388                           ;RemoteCan.c: 480: wait_low_1 = 1;
  6389  0167A0  884D               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6390  0167A2  0012               	return	
  6391  0167A4                     __end_of_PWR_Button_Polling:
  6392                           	opt stack 0
  6393                           tblptru	equ	0xFF8
  6394                           tblptrh	equ	0xFF7
  6395                           tblptrl	equ	0xFF6
  6396                           tablat	equ	0xFF5
  6397                           intcon	equ	0xFF2
  6398                           postinc0	equ	0xFEE
  6399                           wreg	equ	0xFE8
  6400                           status	equ	0xFD8
  6401                           
  6402 ;; *************** function _LCD_Handler *****************
  6403 ;; Defined at:
  6404 ;;		line 381 in file "RemoteCan.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;		None
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;		None
  6409 ;; Return value:  Size  Location     Type
  6410 ;;		None               void
  6411 ;; Registers used:
  6412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6422 ;;Total ram usage:        0 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; Hardware stack levels required when called:   16
  6425 ;; This function calls:
  6426 ;;		_CANisTxReady
  6427 ;;		_CANsendMessage
  6428 ;;		_LCD_clear
  6429 ;;		_LCD_goto_line
  6430 ;;		_LCD_goto_xy
  6431 ;;		_LCD_initialize
  6432 ;;		_LCD_write_integer
  6433 ;;		_LCD_write_message
  6434 ;;		_LCD_write_string
  6435 ;;		___fldiv
  6436 ;;		___xxtofl
  6437 ;;		_sprintf
  6438 ;; This function is called by:
  6439 ;;		_main
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           	psect	text7
  6444  014E22                     __ptext7:
  6445                           	opt stack 0
  6446  014E22                     _LCD_Handler:
  6447                           	opt stack 14
  6448  014E22                     l9220:
  6449  014E22  EC83  F0B3         	call	_CANisTxReady	;wreg free
  6450  014E26  06E8               	decf	wreg,f,c
  6451  014E28  A4D8               	btfss	status,2,c
  6452  014E2A  D7FB               	goto	l9220
  6453                           
  6454                           ;RemoteCan.c: 384: CANsendMessage(0b00000000110, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  6455  014E2C  0E06               	movlw	6
  6456  014E2E  0100               	movlb	0	; () banked
  6457  014E30  6F70               	movwf	CANsendMessage@identifier& (0+255),b
  6458  014E32  0E00               	movlw	0
  6459  014E34  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  6460  014E36  0E00               	movlw	0
  6461  014E38  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  6462  014E3A  0E00               	movlw	0
  6463  014E3C  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  6464  014E3E  0EEA               	movlw	low _data_speed
  6465  014E40  0100               	movlb	0	; () banked
  6466  014E42  6F74               	movwf	CANsendMessage@data& (0+255),b
  6467  014E44  0E00               	movlw	high _data_speed
  6468  014E46  0100               	movlb	0	; () banked
  6469  014E48  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
  6470  014E4A  0E08               	movlw	8
  6471  014E4C  0100               	movlb	0	; () banked
  6472  014E4E  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
  6473  014E50  0EFC               	movlw	252
  6474  014E52  0100               	movlb	0	; () banked
  6475  014E54  6F77               	movwf	CANsendMessage@flags& (0+255),b
  6476  014E56  ECCD  F089         	call	_CANsendMessage	;wreg free
  6477                           
  6478                           ;RemoteCan.c: 386: actual_speed_kmh = ((actual_speed) / 278.0);
  6479  014E5A  C0DE  F070         	movff	_actual_speed,___xxtofl@val
  6480  014E5E  C0DF  F071         	movff	_actual_speed+1,___xxtofl@val+1
  6481  014E62  0100               	movlb	0	; () banked
  6482  014E64  6B72               	clrf	(___xxtofl@val+2)& (0+255),b
  6483  014E66  6B73               	clrf	(___xxtofl@val+3)& (0+255),b
  6484  014E68  0E00               	movlw	0
  6485  014E6A  EC67  F0A4         	call	___xxtofl
  6486  014E6E  C070  F07E         	movff	?___xxtofl,___fldiv@b
  6487  014E72  C071  F07F         	movff	?___xxtofl+1,___fldiv@b+1
  6488  014E76  C072  F080         	movff	?___xxtofl+2,___fldiv@b+2
  6489  014E7A  C073  F081         	movff	?___xxtofl+3,___fldiv@b+3
  6490  014E7E  0E00               	movlw	0
  6491  014E80  0100               	movlb	0	; () banked
  6492  014E82  6F82               	movwf	___fldiv@a& (0+255),b
  6493  014E84  0E00               	movlw	0
  6494  014E86  6F83               	movwf	(___fldiv@a+1)& (0+255),b
  6495  014E88  0E8B               	movlw	139
  6496  014E8A  6F84               	movwf	(___fldiv@a+2)& (0+255),b
  6497  014E8C  0E43               	movlw	67
  6498  014E8E  6F85               	movwf	(___fldiv@a+3)& (0+255),b
  6499  014E90  EC3B  F09E         	call	___fldiv	;wreg free
  6500  014E94  C07E  F10D         	movff	?___fldiv,_actual_speed_kmh
  6501  014E98  C07F  F10E         	movff	?___fldiv+1,_actual_speed_kmh+1
  6502  014E9C  C080  F10F         	movff	?___fldiv+2,_actual_speed_kmh+2
  6503  014EA0  C081  F110         	movff	?___fldiv+3,_actual_speed_kmh+3
  6504                           
  6505                           ;RemoteCan.c: 387: sprintf(str, "%.2f", actual_speed_kmh);
  6506  014EA4  0E20               	movlw	low _str
  6507  014EA6  0100               	movlb	0	; () banked
  6508  014EA8  6FC2               	movwf	sprintf@sp& (0+255),b
  6509  014EAA  0E01               	movlw	high _str
  6510  014EAC  0100               	movlb	0	; () banked
  6511  014EAE  6FC3               	movwf	(sprintf@sp+1)& (0+255),b
  6512  014EB0  0EFA               	movlw	low STR_5
  6513  014EB2  0100               	movlb	0	; () banked
  6514  014EB4  6FC4               	movwf	sprintf@f& (0+255),b
  6515  014EB6  0EFF               	movlw	high STR_5
  6516  014EB8  0100               	movlb	0	; () banked
  6517  014EBA  6FC5               	movwf	(sprintf@f+1)& (0+255),b
  6518  014EBC  C10D  F0C6         	movff	_actual_speed_kmh,?_sprintf+4
  6519  014EC0  C10E  F0C7         	movff	_actual_speed_kmh+1,?_sprintf+5
  6520  014EC4  C10F  F0C8         	movff	_actual_speed_kmh+2,?_sprintf+6
  6521  014EC8  C110  F0C9         	movff	_actual_speed_kmh+3,?_sprintf+7
  6522  014ECC  EC83  F085         	call	_sprintf	;wreg free
  6523                           
  6524                           ;RemoteCan.c: 388: str[11] = '\0';
  6525  014ED0  0E00               	movlw	0
  6526  014ED2  0101               	movlb	1	; () banked
  6527  014ED4  6F2B               	movwf	(_str+11)& (0+255),b
  6528                           
  6529                           ; BSR set to: 1
  6530                           ;RemoteCan.c: 390: if (display_refresh == 1) {
  6531  014ED6  AC4C               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6532  014ED8  D032               	goto	l9248
  6533                           
  6534                           ; BSR set to: 1
  6535                           ;RemoteCan.c: 391: LCD_initialize(16);
  6536  014EDA  0E10               	movlw	16
  6537  014EDC  EC43  F0AA         	call	_LCD_initialize
  6538                           
  6539                           ;RemoteCan.c: 392: LCD_clear();
  6540  014EE0  ECD7  F0B2         	call	_LCD_clear	;wreg free
  6541                           
  6542                           ;RemoteCan.c: 393: LCD_goto_line(1);
  6543  014EE4  0E01               	movlw	1
  6544  014EE6  EC0D  F0AC         	call	_LCD_goto_line
  6545                           
  6546                           ;RemoteCan.c: 394: LCD_write_message("=== VEHICLE DATA ===");
  6547  014EEA  0E55               	movlw	low STR_6
  6548  014EEC  0100               	movlb	0	; () banked
  6549  014EEE  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6550  014EF0  0EFF               	movlw	high STR_6
  6551  014EF2  0100               	movlb	0	; () banked
  6552  014EF4  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6553  014EF6  ECA4  F0B2         	call	_LCD_write_message	;wreg free
  6554                           
  6555                           ;RemoteCan.c: 395: LCD_goto_line(2);
  6556  014EFA  0E02               	movlw	2
  6557  014EFC  EC0D  F0AC         	call	_LCD_goto_line
  6558                           
  6559                           ;RemoteCan.c: 396: LCD_write_message("Direction: ");
  6560  014F00  0EC8               	movlw	low STR_7
  6561  014F02  0100               	movlb	0	; () banked
  6562  014F04  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6563  014F06  0EFF               	movlw	high STR_7
  6564  014F08  0100               	movlb	0	; () banked
  6565  014F0A  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6566  014F0C  ECA4  F0B2         	call	_LCD_write_message	;wreg free
  6567                           
  6568                           ;RemoteCan.c: 397: LCD_goto_line(3);
  6569  014F10  0E03               	movlw	3
  6570  014F12  EC0D  F0AC         	call	_LCD_goto_line
  6571                           
  6572                           ;RemoteCan.c: 398: LCD_write_message("Speed: 0.00 Km/h");
  6573  014F16  0EA9               	movlw	low STR_8
  6574  014F18  0100               	movlb	0	; () banked
  6575  014F1A  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6576  014F1C  0EFF               	movlw	high STR_8
  6577  014F1E  0100               	movlb	0	; () banked
  6578  014F20  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6579  014F22  ECA4  F0B2         	call	_LCD_write_message	;wreg free
  6580                           
  6581                           ;RemoteCan.c: 399: LCD_goto_line(4);
  6582  014F26  0E04               	movlw	4
  6583  014F28  EC0D  F0AC         	call	_LCD_goto_line
  6584                           
  6585                           ;RemoteCan.c: 403: LCD_write_message("Data: ");
  6586                           
  6587                           ;RemoteCan.c: 402: } else {
  6588                           
  6589                           ;RemoteCan.c: 401: LCD_write_message("Park assist: ");
  6590                           
  6591                           ;RemoteCan.c: 400: if (1 == 0) {
  6592  014F2C  0EE4               	movlw	low STR_10
  6593  014F2E  0100               	movlb	0	; () banked
  6594  014F30  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6595  014F32  0EFF               	movlw	high STR_10
  6596  014F34  0100               	movlb	0	; () banked
  6597  014F36  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6598  014F38  ECA4  F0B2         	call	_LCD_write_message	;wreg free
  6599                           
  6600                           ;RemoteCan.c: 404: }
  6601                           ;RemoteCan.c: 405: display_refresh = 0;
  6602  014F3C  9C4C               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6603  014F3E                     l9248:
  6604                           
  6605                           ;RemoteCan.c: 406: }
  6606                           ;RemoteCan.c: 409: LCD_goto_xy(12, 2);
  6607  014F3E  0E02               	movlw	2
  6608  014F40  0100               	movlb	0	; () banked
  6609  014F42  6F7F               	movwf	LCD_goto_xy@y& (0+255),b
  6610  014F44  0E0C               	movlw	12
  6611  014F46  ECD2  F0B3         	call	_LCD_goto_xy
  6612                           
  6613                           ;RemoteCan.c: 410: if (switch_position != 0) {
  6614  014F4A  0100               	movlb	0	; () banked
  6615  014F4C  51E7               	movf	_switch_position& (0+255),w,b	;volatile
  6616  014F4E  B4D8               	btfsc	status,2,c
  6617  014F50  D016               	goto	l9258
  6618                           
  6619                           ; BSR set to: 0
  6620                           ;RemoteCan.c: 411: if (dir == 1) {
  6621  014F52  0100               	movlb	0	; () banked
  6622  014F54  05E4               	decf	_dir& (0+255),w,b	;volatile
  6623  014F56  A4D8               	btfss	status,2,c
  6624  014F58  D009               	goto	l9256
  6625                           
  6626                           ; BSR set to: 0
  6627                           ;RemoteCan.c: 412: LCD_write_message("FWD ");
  6628  014F5A  0EF0               	movlw	low STR_11
  6629  014F5C  0100               	movlb	0	; () banked
  6630  014F5E  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6631  014F60  0EFF               	movlw	high STR_11
  6632  014F62  0100               	movlb	0	; () banked
  6633  014F64  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6634  014F66  ECA4  F0B2         	call	_LCD_write_message	;wreg free
  6635                           
  6636                           ;RemoteCan.c: 413: } else {
  6637  014F6A  D011               	goto	l9260
  6638  014F6C                     l9256:
  6639                           
  6640                           ;RemoteCan.c: 414: LCD_write_message("BKWD");
  6641  014F6C  0EF5               	movlw	low STR_12
  6642  014F6E  0100               	movlb	0	; () banked
  6643  014F70  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6644  014F72  0EFF               	movlw	high STR_12
  6645  014F74  0100               	movlb	0	; () banked
  6646  014F76  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6647  014F78  ECA4  F0B2         	call	_LCD_write_message	;wreg free
  6648                           
  6649                           ;RemoteCan.c: 415: }
  6650                           ;RemoteCan.c: 416: } else {
  6651  014F7C  D008               	goto	l9260
  6652  014F7E                     l9258:
  6653                           
  6654                           ;RemoteCan.c: 417: LCD_write_message("P   ");
  6655  014F7E  0EEB               	movlw	low STR_13
  6656  014F80  0100               	movlb	0	; () banked
  6657  014F82  6F81               	movwf	LCD_write_message@buffer& (0+255),b
  6658  014F84  0EFF               	movlw	high STR_13
  6659  014F86  0100               	movlb	0	; () banked
  6660  014F88  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6661  014F8A  ECA4  F0B2         	call	_LCD_write_message	;wreg free
  6662  014F8E                     l9260:
  6663                           
  6664                           ;RemoteCan.c: 418: }
  6665                           ;RemoteCan.c: 421: LCD_goto_xy(8, 3);
  6666  014F8E  0E03               	movlw	3
  6667  014F90  0100               	movlb	0	; () banked
  6668  014F92  6F7F               	movwf	LCD_goto_xy@y& (0+255),b
  6669  014F94  0E08               	movlw	8
  6670  014F96  ECD2  F0B3         	call	_LCD_goto_xy
  6671                           
  6672                           ;RemoteCan.c: 422: LCD_write_string(str);
  6673  014F9A  0E20               	movlw	low _str
  6674  014F9C  0100               	movlb	0	; () banked
  6675  014F9E  6F81               	movwf	LCD_write_string@buffer& (0+255),b
  6676  014FA0  0E01               	movlw	high _str
  6677  014FA2  0100               	movlb	0	; () banked
  6678  014FA4  6F82               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  6679  014FA6  EC4A  F0B3         	call	_LCD_write_string	;wreg free
  6680                           
  6681                           ;RemoteCan.c: 434: LCD_goto_xy(7, 4);
  6682                           
  6683                           ;RemoteCan.c: 431: }
  6684                           ;RemoteCan.c: 432: } else {
  6685                           
  6686                           ;RemoteCan.c: 430: LCD_write_message("SEARCH ");
  6687                           
  6688                           ;RemoteCan.c: 429: } else {
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;RemoteCan.c: 428: LCD_write_message("OFF    ");
  6692                           
  6693                           ;RemoteCan.c: 427: if (parking_state == 0) {
  6694                           
  6695                           ;RemoteCan.c: 426: LCD_goto_xy(14, 4);
  6696                           
  6697                           ;RemoteCan.c: 424: if (1 == 0) {
  6698  014FAA  0E04               	movlw	4
  6699  014FAC  0100               	movlb	0	; () banked
  6700  014FAE  6F7F               	movwf	LCD_goto_xy@y& (0+255),b
  6701  014FB0  0E07               	movlw	7
  6702  014FB2  ECD2  F0B3         	call	_LCD_goto_xy
  6703                           
  6704                           ;RemoteCan.c: 435: LCD_write_integer(user_data, 0, 0x01);
  6705  014FB6  C021  F088         	movff	_user_data,LCD_write_integer@value
  6706  014FBA  C022  F089         	movff	_user_data+1,LCD_write_integer@value+1
  6707  014FBE  0E00               	movlw	0
  6708  014FC0  0100               	movlb	0	; () banked
  6709  014FC2  6F8A               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  6710  014FC4  0E01               	movlw	1
  6711  014FC6  0100               	movlb	0	; () banked
  6712  014FC8  6F8B               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  6713  014FCA  EC31  F0A6         	call	_LCD_write_integer	;wreg free
  6714  014FCE  0012               	return	
  6715  014FD0                     __end_of_LCD_Handler:
  6716                           	opt stack 0
  6717                           tblptru	equ	0xFF8
  6718                           tblptrh	equ	0xFF7
  6719                           tblptrl	equ	0xFF6
  6720                           tablat	equ	0xFF5
  6721                           intcon	equ	0xFF2
  6722                           postinc0	equ	0xFEE
  6723                           wreg	equ	0xFE8
  6724                           status	equ	0xFD8
  6725                           
  6726 ;; *************** function _sprintf *****************
  6727 ;; Defined at:
  6728 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  6729 ;; Parameters:    Size  Location     Type
  6730 ;;  sp              2   98[BANK0 ] PTR unsigned char 
  6731 ;;		 -> str(12), 
  6732 ;;  f               2  100[BANK0 ] PTR const unsigned char 
  6733 ;;		 -> STR_5(5), 
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  6736 ;;  tmpval          4   14[BANK1 ] struct .
  6737 ;;  val             4    8[BANK1 ] unsigned long 
  6738 ;;  cp              3    0        PTR const unsigned char 
  6739 ;;  prec            2   18[BANK1 ] int 
  6740 ;;  exp             2   12[BANK1 ] int 
  6741 ;;  flag            2    6[BANK1 ] unsigned short 
  6742 ;;  ap              2    4[BANK1 ] PTR void [1]
  6743 ;;		 -> ?_sprintf(2), 
  6744 ;;  len             2    0        unsigned int 
  6745 ;;  width           2    0        int 
  6746 ;;  c               1   24[BANK1 ] char 
  6747 ;;  d               1    0        unsigned char 
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  2   98[BANK0 ] int 
  6750 ;; Registers used:
  6751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6757 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6758 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6759 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6760 ;;      Totals:         0      10      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6761 ;;Total ram usage:       35 bytes
  6762 ;; Hardware stack levels used:    1
  6763 ;; Hardware stack levels required when called:   11
  6764 ;; This function calls:
  6765 ;;		___awdiv
  6766 ;;		___fladd
  6767 ;;		___flge
  6768 ;;		___flmul
  6769 ;;		___flneg
  6770 ;;		___flsub
  6771 ;;		___fltol
  6772 ;;		___lldiv
  6773 ;;		___llmod
  6774 ;;		___wmul
  6775 ;;		___xxtofl
  6776 ;;		__div_to_l_
  6777 ;;		__tdiv_to_l_
  6778 ;;		_fround
  6779 ;;		_isdigit
  6780 ;;		_scale
  6781 ;; This function is called by:
  6782 ;;		_LCD_Handler
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           
  6786                           	psect	text8
  6787  010B06                     __ptext8:
  6788                           	opt stack 0
  6789  010B06                     _sprintf:
  6790                           	opt stack 18
  6791                           
  6792                           ;doprnt.c: 494: va_list ap;
  6793                           ;doprnt.c: 499: signed char c;
  6794                           ;doprnt.c: 501: int width;
  6795                           ;doprnt.c: 504: int prec;
  6796                           ;doprnt.c: 508: unsigned short flag;
  6797                           ;doprnt.c: 515: char d;
  6798                           ;doprnt.c: 516: double fval;
  6799                           ;doprnt.c: 517: int exp;
  6800                           ;doprnt.c: 523: union {
  6801                           ;doprnt.c: 524: unsigned long vd;
  6802                           ;doprnt.c: 525: double integ;
  6803                           ;doprnt.c: 526: } tmpval;
  6804                           ;doprnt.c: 528: unsigned long val;
  6805                           ;doprnt.c: 529: unsigned len;
  6806                           ;doprnt.c: 530: const char * cp;
  6807                           ;doprnt.c: 533: *ap = __va_start();
  6808                           
  6809                           ;incstack = 0
  6810  010B06  0EC6               	movlw	low (?_sprintf+4)
  6811  010B08  0101               	movlb	1	; () banked
  6812  010B0A  6F38               	movwf	sprintf@ap& (0+255),b
  6813  010B0C  0E00               	movlw	high (?_sprintf+4)
  6814  010B0E  0101               	movlb	1	; () banked
  6815  010B10  6F39               	movwf	(sprintf@ap+1)& (0+255),b
  6816                           
  6817                           ;doprnt.c: 536: while(c = *f++) {
  6818  010B12  EFB5  F089         	goto	l9142
  6819  010B16                     l8944:
  6820                           
  6821                           ; BSR set to: 1
  6822                           ;doprnt.c: 538: if(c != '%')
  6823  010B16  0E25               	movlw	37
  6824  010B18  0101               	movlb	1	; () banked
  6825  010B1A  194C               	xorwf	sprintf@c& (0+255),w,b
  6826  010B1C  B4D8               	btfsc	status,2,c
  6827  010B1E  D008               	goto	l8950
  6828                           
  6829                           ; BSR set to: 1
  6830                           ;doprnt.c: 540: {
  6831                           ;doprnt.c: 541: ((*sp++ = (c)));
  6832  010B20  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  6833  010B24  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  6834  010B28  C14C  FFDF         	movff	sprintf@c,indf2
  6835  010B2C  EFB2  F089         	goto	l9140
  6836  010B30                     l8950:
  6837                           
  6838                           ;doprnt.c: 543: }
  6839                           ;doprnt.c: 548: flag = 0;
  6840  010B30  0E00               	movlw	0
  6841  010B32  0101               	movlb	1	; () banked
  6842  010B34  6F3B               	movwf	(sprintf@flag+1)& (0+255),b
  6843  010B36  0E00               	movlw	0
  6844  010B38  6F3A               	movwf	sprintf@flag& (0+255),b
  6845                           
  6846                           ; BSR set to: 1
  6847                           ;doprnt.c: 611: if(*f == '.') {
  6848  010B3A  C0C4  FFF6         	movff	sprintf@f,tblptrl
  6849  010B3E  C0C5  FFF7         	movff	sprintf@f+1,tblptrh
  6850  010B42                     	if	0	;tblptru may be non-zero
  6851  010B42                     	endif
  6852  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6853  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  6854  010B44  6EF8               	movwf	tblptru,c
  6855  010B46                     	endif
  6856  010B46  0008               	tblrd		*
  6857  010B48  50F5               	movf	tablat,w,c
  6858  010B4A  0A2E               	xorlw	46
  6859  010B4C  A4D8               	btfss	status,2,c
  6860  010B4E  D03D               	goto	l8964
  6861                           
  6862                           ; BSR set to: 1
  6863                           ;doprnt.c: 612: flag |= 0x4000;
  6864  010B50  0101               	movlb	1	; () banked
  6865  010B52  8D3B               	bsf	(sprintf@flag+1)& (0+255),6,b
  6866                           
  6867                           ;doprnt.c: 613: f++;
  6868  010B54  0100               	movlb	0	; () banked
  6869  010B56  4BC4               	infsnz	sprintf@f& (0+255),f,b
  6870  010B58  2BC5               	incf	(sprintf@f+1)& (0+255),f,b
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;doprnt.c: 620: {
  6874                           ;doprnt.c: 621: prec = 0;
  6875  010B5A  0E00               	movlw	0
  6876  010B5C  0101               	movlb	1	; () banked
  6877  010B5E  6F47               	movwf	(sprintf@prec+1)& (0+255),b
  6878  010B60  0E00               	movlw	0
  6879  010B62  6F46               	movwf	sprintf@prec& (0+255),b
  6880                           
  6881                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6882  010B64  D025               	goto	l8962
  6883  010B66                     l8958:
  6884                           
  6885                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6886  010B66  C146  F070         	movff	sprintf@prec,___wmul@multiplier
  6887  010B6A  C147  F071         	movff	sprintf@prec+1,___wmul@multiplier+1
  6888  010B6E  0E00               	movlw	0
  6889  010B70  0100               	movlb	0	; () banked
  6890  010B72  6F73               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6891  010B74  0E0A               	movlw	10
  6892  010B76  6F72               	movwf	___wmul@multiplicand& (0+255),b
  6893  010B78  EC89  F0B2         	call	___wmul	;wreg free
  6894  010B7C  C0C4  FFF6         	movff	sprintf@f,tblptrl
  6895  010B80  C0C5  FFF7         	movff	sprintf@f+1,tblptrh
  6896  010B84                     	if	0	;tblptru may be non-zero
  6897  010B84                     	endif
  6898  010B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6899  010B84  0E00               	movlw	low (__mediumconst shr (0+16))
  6900  010B86  6EF8               	movwf	tblptru,c
  6901  010B88                     	endif
  6902  010B88  0008               	tblrd		*
  6903  010B8A  50F5               	movf	tablat,w,c
  6904  010B8C  0100               	movlb	0	; () banked
  6905  010B8E  2770               	addwf	?___wmul& (0+255),f,b
  6906  010B90  0E00               	movlw	0
  6907  010B92  0100               	movlb	0	; () banked
  6908  010B94  2371               	addwfc	(?___wmul+1)& (0+255),f,b
  6909  010B96  0ED0               	movlw	208
  6910  010B98  0100               	movlb	0	; () banked
  6911  010B9A  2570               	addwf	?___wmul& (0+255),w,b
  6912  010B9C  0101               	movlb	1	; () banked
  6913  010B9E  6F46               	movwf	sprintf@prec& (0+255),b
  6914  010BA0  0EFF               	movlw	255
  6915  010BA2  0100               	movlb	0	; () banked
  6916  010BA4  2171               	addwfc	(?___wmul+1)& (0+255),w,b
  6917  010BA6  0101               	movlb	1	; () banked
  6918  010BA8  6F47               	movwf	(sprintf@prec+1)& (0+255),b
  6919                           
  6920                           ; BSR set to: 1
  6921  010BAA  0100               	movlb	0	; () banked
  6922  010BAC  4BC4               	infsnz	sprintf@f& (0+255),f,b
  6923  010BAE  2BC5               	incf	(sprintf@f+1)& (0+255),f,b
  6924  010BB0                     l8962:
  6925  010BB0  C0C4  FFF6         	movff	sprintf@f,tblptrl
  6926  010BB4  C0C5  FFF7         	movff	sprintf@f+1,tblptrh
  6927  010BB8                     	if	0	;tblptru may be non-zero
  6928  010BB8                     	endif
  6929  010BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6930  010BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  6931  010BBA  6EF8               	movwf	tblptru,c
  6932  010BBC                     	endif
  6933  010BBC  0008               	tblrd		*
  6934  010BBE  50F5               	movf	tablat,w,c
  6935  010BC0  EC21  F0B3         	call	_isdigit
  6936  010BC4  A0D8               	btfss	status,0,c
  6937  010BC6  D00C               	goto	l8972
  6938  010BC8  D7CE               	goto	l8958
  6939  010BCA                     l8964:
  6940                           
  6941                           ;doprnt.c: 626: prec = 0;
  6942  010BCA  0E00               	movlw	0
  6943  010BCC  0101               	movlb	1	; () banked
  6944  010BCE  6F47               	movwf	(sprintf@prec+1)& (0+255),b
  6945  010BD0  0E00               	movlw	0
  6946  010BD2  6F46               	movwf	sprintf@prec& (0+255),b
  6947                           
  6948                           ; BSR set to: 1
  6949                           ;doprnt.c: 628: flag |= 0x1000;
  6950  010BD4  0101               	movlb	1	; () banked
  6951  010BD6  893B               	bsf	(sprintf@flag+1)& (0+255),4,b
  6952                           
  6953                           ; BSR set to: 1
  6954                           ;doprnt.c: 630: }
  6955                           ;doprnt.c: 635: switch(c = *f++) {
  6956  010BD8  D003               	goto	l8972
  6957  010BDA                     l8968:
  6958                           
  6959                           ; BSR set to: 1
  6960                           ;doprnt.c: 663: flag |= 0x400;
  6961  010BDA  0101               	movlb	1	; () banked
  6962  010BDC  853B               	bsf	(sprintf@flag+1)& (0+255),2,b
  6963                           
  6964                           ;doprnt.c: 664: break;
  6965  010BDE  D015               	goto	l8974
  6966  010BE0                     l8972:
  6967  010BE0  C0C4  FFF6         	movff	sprintf@f,tblptrl
  6968  010BE4  C0C5  FFF7         	movff	sprintf@f+1,tblptrh
  6969  010BE8  0100               	movlb	0	; () banked
  6970  010BEA  4BC4               	infsnz	sprintf@f& (0+255),f,b
  6971  010BEC  2BC5               	incf	(sprintf@f+1)& (0+255),f,b
  6972  010BEE                     	if	0	;tblptru may be non-zero
  6973  010BEE                     	endif
  6974  010BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6975  010BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  6976  010BF0  6EF8               	movwf	tblptru,c
  6977  010BF2                     	endif
  6978  010BF2  0008               	tblrd		*
  6979  010BF4  CFF5 F14C          	movff	tablat,sprintf@c
  6980  010BF8  0101               	movlb	1	; () banked
  6981  010BFA  514C               	movf	sprintf@c& (0+255),w,b
  6982                           
  6983                           ; Switch size 1, requested type "space"
  6984                           ; Number of cases is 2, Range of values is 0 to 102
  6985                           ; switch strategies available:
  6986                           ; Name         Instructions Cycles
  6987                           ; simple_byte            7     4 (average)
  6988                           ;	Chosen strategy is simple_byte
  6989  010BFC  0A00               	xorlw	0	; case 0
  6990  010BFE  B4D8               	btfsc	status,2,c
  6991  010C00  D3C5               	goto	l9144
  6992  010C02  0A66               	xorlw	102	; case 102
  6993  010C04  B4D8               	btfsc	status,2,c
  6994  010C06  D7E9               	goto	l8968
  6995  010C08  D3B0               	goto	l9142
  6996  010C0A                     l8974:
  6997                           
  6998                           ; BSR set to: 1
  6999                           ;doprnt.c: 825: if(flag & (0x700)) {
  7000  010C0A  0E07               	movlw	7
  7001  010C0C  0101               	movlb	1	; () banked
  7002  010C0E  153B               	andwf	(sprintf@flag+1)& (0+255),w,b
  7003  010C10  B4D8               	btfsc	status,2,c
  7004  010C12  D353               	goto	l9122
  7005                           
  7006                           ; BSR set to: 1
  7007                           ;doprnt.c: 827: if(flag & 0x1000)
  7008  010C14  0101               	movlb	1	; () banked
  7009  010C16  A93B               	btfss	(sprintf@flag+1)& (0+255),4,b
  7010  010C18  D005               	goto	l8980
  7011                           
  7012                           ; BSR set to: 1
  7013                           ;doprnt.c: 829: prec = 6;
  7014  010C1A  0E00               	movlw	0
  7015  010C1C  0101               	movlb	1	; () banked
  7016  010C1E  6F47               	movwf	(sprintf@prec+1)& (0+255),b
  7017  010C20  0E06               	movlw	6
  7018  010C22  6F46               	movwf	sprintf@prec& (0+255),b
  7019  010C24                     l8980:
  7020                           
  7021                           ; BSR set to: 1
  7022                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7023  010C24  C138  FFD9         	movff	sprintf@ap,fsr2l
  7024  010C28  C139  FFDA         	movff	sprintf@ap+1,fsr2h
  7025  010C2C  CFDE F148          	movff	postinc2,sprintf@fval
  7026  010C30  CFDE F149          	movff	postinc2,sprintf@fval+1
  7027  010C34  CFDE F14A          	movff	postinc2,sprintf@fval+2
  7028  010C38  CFDE F14B          	movff	postinc2,sprintf@fval+3
  7029                           
  7030                           ; BSR set to: 1
  7031  010C3C  0E04               	movlw	4
  7032  010C3E  0101               	movlb	1	; () banked
  7033  010C40  2738               	addwf	sprintf@ap& (0+255),f,b
  7034  010C42  0E00               	movlw	0
  7035  010C44  2339               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7036                           
  7037                           ; BSR set to: 1
  7038                           ;doprnt.c: 831: if(fval < 0.0) {
  7039  010C46  0101               	movlb	1	; () banked
  7040  010C48  AF4B               	btfss	(sprintf@fval+3)& (0+255),7,b
  7041  010C4A  D015               	goto	l8990
  7042                           
  7043                           ; BSR set to: 1
  7044                           ;doprnt.c: 832: fval = -fval;
  7045  010C4C  C148  F097         	movff	sprintf@fval,___flneg@f1
  7046  010C50  C149  F098         	movff	sprintf@fval+1,___flneg@f1+1
  7047  010C54  C14A  F099         	movff	sprintf@fval+2,___flneg@f1+2
  7048  010C58  C14B  F09A         	movff	sprintf@fval+3,___flneg@f1+3
  7049  010C5C  EC51  F0B2         	call	___flneg	;wreg free
  7050  010C60  C097  F148         	movff	?___flneg,sprintf@fval
  7051  010C64  C098  F149         	movff	?___flneg+1,sprintf@fval+1
  7052  010C68  C099  F14A         	movff	?___flneg+2,sprintf@fval+2
  7053  010C6C  C09A  F14B         	movff	?___flneg+3,sprintf@fval+3
  7054                           
  7055                           ;doprnt.c: 833: flag |= 0x03;
  7056  010C70  0E03               	movlw	3
  7057  010C72  0101               	movlb	1	; () banked
  7058  010C74  133A               	iorwf	sprintf@flag& (0+255),f,b
  7059  010C76                     l8990:
  7060                           
  7061                           ; BSR set to: 1
  7062                           ;doprnt.c: 834: }
  7063                           ;doprnt.c: 835: exp = 0;
  7064  010C76  0E00               	movlw	0
  7065  010C78  0101               	movlb	1	; () banked
  7066  010C7A  6F41               	movwf	(sprintf@exp+1)& (0+255),b
  7067  010C7C  0E00               	movlw	0
  7068  010C7E  6F40               	movwf	sprintf@exp& (0+255),b
  7069                           
  7070                           ; BSR set to: 1
  7071                           ;doprnt.c: 836: if( fval!=0) {
  7072  010C80  0101               	movlb	1	; () banked
  7073  010C82  5148               	movf	sprintf@fval& (0+255),w,b
  7074  010C84  0101               	movlb	1	; () banked
  7075  010C86  1149               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7076  010C88  0101               	movlb	1	; () banked
  7077  010C8A  114A               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7078  010C8C  0101               	movlb	1	; () banked
  7079  010C8E  114B               	iorwf	(sprintf@fval+3)& (0+255),w,b
  7080  010C90  B4D8               	btfsc	status,2,c
  7081  010C92  D08E               	goto	l9018
  7082                           
  7083                           ; BSR set to: 1
  7084                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  7085  010C94  0101               	movlb	1	; () banked
  7086  010C96  354A               	rlcf	(sprintf@fval+2)& (0+255),w,b
  7087  010C98  354B               	rlcf	(sprintf@fval+3)& (0+255),w,b
  7088  010C9A  0F82               	addlw	130
  7089  010C9C  0101               	movlb	1	; () banked
  7090  010C9E  6F40               	movwf	sprintf@exp& (0+255),b
  7091  010CA0  0101               	movlb	1	; () banked
  7092  010CA2  6B41               	clrf	(sprintf@exp+1)& (0+255),b
  7093  010CA4  0EFF               	movlw	255
  7094  010CA6  2341               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7095                           
  7096                           ; BSR set to: 1
  7097                           ;doprnt.c: 838: exp--;
  7098  010CA8  0101               	movlb	1	; () banked
  7099  010CAA  0740               	decf	sprintf@exp& (0+255),f,b
  7100  010CAC  A0D8               	btfss	status,0,c
  7101  010CAE  0741               	decf	(sprintf@exp+1)& (0+255),f,b
  7102                           
  7103                           ; BSR set to: 1
  7104                           ;doprnt.c: 839: exp *= 3;
  7105  010CB0  C140  F070         	movff	sprintf@exp,___wmul@multiplier
  7106  010CB4  C141  F071         	movff	sprintf@exp+1,___wmul@multiplier+1
  7107  010CB8  0E00               	movlw	0
  7108  010CBA  0100               	movlb	0	; () banked
  7109  010CBC  6F73               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7110  010CBE  0E03               	movlw	3
  7111  010CC0  6F72               	movwf	___wmul@multiplicand& (0+255),b
  7112  010CC2  EC89  F0B2         	call	___wmul	;wreg free
  7113  010CC6  C070  F140         	movff	?___wmul,sprintf@exp
  7114  010CCA  C071  F141         	movff	?___wmul+1,sprintf@exp+1
  7115                           
  7116                           ;doprnt.c: 840: exp /= 10;
  7117  010CCE  C140  F076         	movff	sprintf@exp,___awdiv@dividend
  7118  010CD2  C141  F077         	movff	sprintf@exp+1,___awdiv@dividend+1
  7119  010CD6  0E00               	movlw	0
  7120  010CD8  0100               	movlb	0	; () banked
  7121  010CDA  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  7122  010CDC  0E0A               	movlw	10
  7123  010CDE  6F78               	movwf	___awdiv@divisor& (0+255),b
  7124  010CE0  EC83  F0AC         	call	___awdiv	;wreg free
  7125  010CE4  C076  F140         	movff	?___awdiv,sprintf@exp
  7126  010CE8  C077  F141         	movff	?___awdiv+1,sprintf@exp+1
  7127                           
  7128                           ;doprnt.c: 841: if(exp < 0)
  7129  010CEC  0101               	movlb	1	; () banked
  7130  010CEE  AF41               	btfss	(sprintf@exp+1)& (0+255),7,b
  7131  010CF0  D004               	goto	l9006
  7132                           
  7133                           ; BSR set to: 1
  7134                           ;doprnt.c: 842: exp--;
  7135  010CF2  0101               	movlb	1	; () banked
  7136  010CF4  0740               	decf	sprintf@exp& (0+255),f,b
  7137  010CF6  A0D8               	btfss	status,0,c
  7138  010CF8  0741               	decf	(sprintf@exp+1)& (0+255),f,b
  7139  010CFA                     l9006:
  7140                           
  7141                           ; BSR set to: 1
  7142                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7143  010CFA  0101               	movlb	1	; () banked
  7144  010CFC  5140               	movf	sprintf@exp& (0+255),w,b
  7145  010CFE  0800               	sublw	0
  7146  010D00  EC81  F094         	call	_scale
  7147  010D04  C097  F142         	movff	?_scale,sprintf@tmpval
  7148  010D08  C098  F143         	movff	?_scale+1,sprintf@tmpval+1
  7149  010D0C  C099  F144         	movff	?_scale+2,sprintf@tmpval+2
  7150  010D10  C09A  F145         	movff	?_scale+3,sprintf@tmpval+3
  7151                           
  7152                           ;doprnt.c: 847: tmpval.integ *= fval;
  7153  010D14  C142  F07E         	movff	sprintf@tmpval,___flmul@b
  7154  010D18  C143  F07F         	movff	sprintf@tmpval+1,___flmul@b+1
  7155  010D1C  C144  F080         	movff	sprintf@tmpval+2,___flmul@b+2
  7156  010D20  C145  F081         	movff	sprintf@tmpval+3,___flmul@b+3
  7157  010D24  C148  F082         	movff	sprintf@fval,___flmul@a
  7158  010D28  C149  F083         	movff	sprintf@fval+1,___flmul@a+1
  7159  010D2C  C14A  F084         	movff	sprintf@fval+2,___flmul@a+2
  7160  010D30  C14B  F085         	movff	sprintf@fval+3,___flmul@a+3
  7161  010D34  ECE8  F09B         	call	___flmul	;wreg free
  7162  010D38  C07E  F142         	movff	?___flmul,sprintf@tmpval
  7163  010D3C  C07F  F143         	movff	?___flmul+1,sprintf@tmpval+1
  7164  010D40  C080  F144         	movff	?___flmul+2,sprintf@tmpval+2
  7165  010D44  C081  F145         	movff	?___flmul+3,sprintf@tmpval+3
  7166                           
  7167                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7168  010D48  C142  F070         	movff	sprintf@tmpval,___flge@ff1
  7169  010D4C  C143  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  7170  010D50  C144  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  7171  010D54  C145  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  7172  010D58  0E00               	movlw	0
  7173  010D5A  0100               	movlb	0	; () banked
  7174  010D5C  6F74               	movwf	___flge@ff2& (0+255),b
  7175  010D5E  0E00               	movlw	0
  7176  010D60  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  7177  010D62  0E80               	movlw	128
  7178  010D64  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  7179  010D66  0E3F               	movlw	63
  7180  010D68  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  7181  010D6A  ECB7  F0A8         	call	___flge	;wreg free
  7182  010D6E  0100               	movlb	0	; () banked
  7183  010D70  B0D8               	btfsc	status,0,c
  7184  010D72  D005               	goto	l9014
  7185                           
  7186                           ; BSR set to: 0
  7187                           ;doprnt.c: 849: exp--;
  7188  010D74  0101               	movlb	1	; () banked
  7189  010D76  0740               	decf	sprintf@exp& (0+255),f,b
  7190  010D78  A0D8               	btfss	status,0,c
  7191  010D7A  0741               	decf	(sprintf@exp+1)& (0+255),f,b
  7192  010D7C  D019               	goto	l9018
  7193  010D7E                     l9014:
  7194                           
  7195                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7196  010D7E  C142  F070         	movff	sprintf@tmpval,___flge@ff1
  7197  010D82  C143  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  7198  010D86  C144  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  7199  010D8A  C145  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  7200  010D8E  0E00               	movlw	0
  7201  010D90  0100               	movlb	0	; () banked
  7202  010D92  6F74               	movwf	___flge@ff2& (0+255),b
  7203  010D94  0E00               	movlw	0
  7204  010D96  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  7205  010D98  0E20               	movlw	32
  7206  010D9A  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  7207  010D9C  0E41               	movlw	65
  7208  010D9E  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  7209  010DA0  ECB7  F0A8         	call	___flge	;wreg free
  7210  010DA4  0100               	movlb	0	; () banked
  7211  010DA6  A0D8               	btfss	status,0,c
  7212  010DA8  D003               	goto	l9018
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;doprnt.c: 851: exp++;
  7216  010DAA  0101               	movlb	1	; () banked
  7217  010DAC  4B40               	infsnz	sprintf@exp& (0+255),f,b
  7218  010DAE  2B41               	incf	(sprintf@exp+1)& (0+255),f,b
  7219  010DB0                     l9018:
  7220                           
  7221                           ;doprnt.c: 852: }
  7222                           ;doprnt.c: 1112: if(prec <= 12)
  7223  010DB0  0101               	movlb	1	; () banked
  7224  010DB2  BF47               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7225  010DB4  D008               	goto	l9020
  7226  010DB6  0101               	movlb	1	; () banked
  7227  010DB8  5147               	movf	(sprintf@prec+1)& (0+255),w,b
  7228  010DBA  E123               	bnz	l9022
  7229  010DBC  0E0D               	movlw	13
  7230  010DBE  0101               	movlb	1	; () banked
  7231  010DC0  5D46               	subwf	sprintf@prec& (0+255),w,b
  7232  010DC2  B0D8               	btfsc	status,0,c
  7233  010DC4  D01E               	goto	l9022
  7234  010DC6                     l9020:
  7235                           
  7236                           ; BSR set to: 1
  7237                           ;doprnt.c: 1113: fval += fround(prec);
  7238  010DC6  C148  F0A4         	movff	sprintf@fval,___fladd@b
  7239  010DCA  C149  F0A5         	movff	sprintf@fval+1,___fladd@b+1
  7240  010DCE  C14A  F0A6         	movff	sprintf@fval+2,___fladd@b+2
  7241  010DD2  C14B  F0A7         	movff	sprintf@fval+3,___fladd@b+3
  7242  010DD6  0101               	movlb	1	; () banked
  7243  010DD8  5146               	movf	sprintf@prec& (0+255),w,b
  7244  010DDA  ECEA  F0A1         	call	_fround
  7245  010DDE  C097  F0A8         	movff	?_fround,___fladd@a
  7246  010DE2  C098  F0A9         	movff	?_fround+1,___fladd@a+1
  7247  010DE6  C099  F0AA         	movff	?_fround+2,___fladd@a+2
  7248  010DEA  C09A  F0AB         	movff	?_fround+3,___fladd@a+3
  7249  010DEE  EC94  F099         	call	___fladd	;wreg free
  7250  010DF2  C0A4  F148         	movff	?___fladd,sprintf@fval
  7251  010DF6  C0A5  F149         	movff	?___fladd+1,sprintf@fval+1
  7252  010DFA  C0A6  F14A         	movff	?___fladd+2,sprintf@fval+2
  7253  010DFE  C0A7  F14B         	movff	?___fladd+3,sprintf@fval+3
  7254  010E02                     l9022:
  7255                           
  7256                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7257  010E02  0101               	movlb	1	; () banked
  7258  010E04  BF41               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7259  010E06  D008               	goto	l9024
  7260  010E08  0101               	movlb	1	; () banked
  7261  010E0A  5141               	movf	(sprintf@exp+1)& (0+255),w,b
  7262  010E0C  E12E               	bnz	l9030
  7263  010E0E  0E0A               	movlw	10
  7264  010E10  0101               	movlb	1	; () banked
  7265  010E12  5D40               	subwf	sprintf@exp& (0+255),w,b
  7266  010E14  B0D8               	btfsc	status,0,c
  7267  010E16  D029               	goto	l9030
  7268  010E18                     l9024:
  7269                           
  7270                           ; BSR set to: 1
  7271  010E18  0101               	movlb	1	; () banked
  7272  010E1A  5148               	movf	sprintf@fval& (0+255),w,b
  7273  010E1C  0101               	movlb	1	; () banked
  7274  010E1E  1149               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7275  010E20  0101               	movlb	1	; () banked
  7276  010E22  114A               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7277  010E24  0101               	movlb	1	; () banked
  7278  010E26  114B               	iorwf	(sprintf@fval+3)& (0+255),w,b
  7279  010E28  B4D8               	btfsc	status,2,c
  7280  010E2A  D06D               	goto	l9044
  7281                           
  7282                           ; BSR set to: 1
  7283  010E2C  C148  F0B8         	movff	sprintf@fval,___fltol@f1
  7284  010E30  C149  F0B9         	movff	sprintf@fval+1,___fltol@f1+1
  7285  010E34  C14A  F0BA         	movff	sprintf@fval+2,___fltol@f1+2
  7286  010E38  C14B  F0BB         	movff	sprintf@fval+3,___fltol@f1+3
  7287  010E3C  EC87  F0AB         	call	___fltol	;wreg free
  7288  010E40  0100               	movlb	0	; () banked
  7289  010E42  51B8               	movf	?___fltol& (0+255),w,b
  7290  010E44  0100               	movlb	0	; () banked
  7291  010E46  11B9               	iorwf	(?___fltol+1)& (0+255),w,b
  7292  010E48  0100               	movlb	0	; () banked
  7293  010E4A  11BA               	iorwf	(?___fltol+2)& (0+255),w,b
  7294  010E4C  0100               	movlb	0	; () banked
  7295  010E4E  11BB               	iorwf	(?___fltol+3)& (0+255),w,b
  7296  010E50  A4D8               	btfss	status,2,c
  7297  010E52  D059               	goto	l9044
  7298                           
  7299                           ; BSR set to: 0
  7300  010E54  0101               	movlb	1	; () banked
  7301  010E56  BF41               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7302  010E58  D056               	goto	l9044
  7303  010E5A  0101               	movlb	1	; () banked
  7304  010E5C  5141               	movf	(sprintf@exp+1)& (0+255),w,b
  7305  010E5E  E105               	bnz	l9030
  7306  010E60  0E02               	movlw	2
  7307  010E62  0101               	movlb	1	; () banked
  7308  010E64  5D40               	subwf	sprintf@exp& (0+255),w,b
  7309  010E66  A0D8               	btfss	status,0,c
  7310  010E68  D04E               	goto	l9044
  7311  010E6A                     l9030:
  7312                           
  7313                           ; BSR set to: 1
  7314                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7315  010E6A  C142  F070         	movff	sprintf@tmpval,___flge@ff1
  7316  010E6E  C143  F071         	movff	sprintf@tmpval+1,___flge@ff1+1
  7317  010E72  C144  F072         	movff	sprintf@tmpval+2,___flge@ff1+2
  7318  010E76  C145  F073         	movff	sprintf@tmpval+3,___flge@ff1+3
  7319  010E7A  0E5F               	movlw	95
  7320  010E7C  0100               	movlb	0	; () banked
  7321  010E7E  6F74               	movwf	___flge@ff2& (0+255),b
  7322  010E80  0E70               	movlw	112
  7323  010E82  6F75               	movwf	(___flge@ff2+1)& (0+255),b
  7324  010E84  0E89               	movlw	137
  7325  010E86  6F76               	movwf	(___flge@ff2+2)& (0+255),b
  7326  010E88  0E40               	movlw	64
  7327  010E8A  6F77               	movwf	(___flge@ff2+3)& (0+255),b
  7328  010E8C  ECB7  F0A8         	call	___flge	;wreg free
  7329  010E90  0100               	movlb	0	; () banked
  7330  010E92  B0D8               	btfsc	status,0,c
  7331  010E94  D003               	goto	l9034
  7332                           
  7333                           ; BSR set to: 0
  7334                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7335  010E96  0101               	movlb	1	; () banked
  7336  010E98  0EF7               	movlw	247
  7337  010E9A  D002               	goto	L5
  7338  010E9C                     l9034:
  7339                           
  7340                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7341  010E9C  0101               	movlb	1	; () banked
  7342  010E9E  0EF8               	movlw	248
  7343  010EA0                     L5:
  7344  010EA0  2740               	addwf	sprintf@exp& (0+255),f,b
  7345  010EA2  0EFF               	movlw	255
  7346  010EA4  2341               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7347                           
  7348                           ; BSR set to: 1
  7349                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7350                           
  7351                           ; BSR set to: 1
  7352  010EA6  0101               	movlb	1	; () banked
  7353  010EA8  5140               	movf	sprintf@exp& (0+255),w,b
  7354  010EAA  EC81  F094         	call	_scale
  7355  010EAE  C097  F142         	movff	?_scale,sprintf@tmpval
  7356  010EB2  C098  F143         	movff	?_scale+1,sprintf@tmpval+1
  7357  010EB6  C099  F144         	movff	?_scale+2,sprintf@tmpval+2
  7358  010EBA  C09A  F145         	movff	?_scale+3,sprintf@tmpval+3
  7359  010EBE  C148  F070         	movff	sprintf@fval,__div_to_l_@f1
  7360  010EC2  C149  F071         	movff	sprintf@fval+1,__div_to_l_@f1+1
  7361  010EC6  C14A  F072         	movff	sprintf@fval+2,__div_to_l_@f1+2
  7362  010ECA  C14B  F073         	movff	sprintf@fval+3,__div_to_l_@f1+3
  7363  010ECE  C142  F074         	movff	sprintf@tmpval,__div_to_l_@f2
  7364  010ED2  C143  F075         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  7365  010ED6  C144  F076         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  7366  010EDA  C145  F077         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  7367  010EDE  EC7F  F0A9         	call	__div_to_l_	;wreg free
  7368  010EE2  C070  F13C         	movff	?__div_to_l_,sprintf@val
  7369  010EE6  C071  F13D         	movff	?__div_to_l_+1,sprintf@val+1
  7370  010EEA  C072  F13E         	movff	?__div_to_l_+2,sprintf@val+2
  7371  010EEE  C073  F13F         	movff	?__div_to_l_+3,sprintf@val+3
  7372                           
  7373                           ;doprnt.c: 1129: fval = 0.0;
  7374  010EF2  0E00               	movlw	0
  7375  010EF4  0101               	movlb	1	; () banked
  7376  010EF6  6F48               	movwf	sprintf@fval& (0+255),b
  7377  010EF8  0E00               	movlw	0
  7378  010EFA  6F49               	movwf	(sprintf@fval+1)& (0+255),b
  7379  010EFC  0E00               	movlw	0
  7380  010EFE  6F4A               	movwf	(sprintf@fval+2)& (0+255),b
  7381  010F00  0E00               	movlw	0
  7382  010F02  6F4B               	movwf	(sprintf@fval+3)& (0+255),b
  7383                           
  7384                           ;doprnt.c: 1130: } else {
  7385  010F04  D03C               	goto	l9048
  7386  010F06                     l9044:
  7387                           
  7388                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7389  010F06  C148  F0B8         	movff	sprintf@fval,___fltol@f1
  7390  010F0A  C149  F0B9         	movff	sprintf@fval+1,___fltol@f1+1
  7391  010F0E  C14A  F0BA         	movff	sprintf@fval+2,___fltol@f1+2
  7392  010F12  C14B  F0BB         	movff	sprintf@fval+3,___fltol@f1+3
  7393  010F16  EC87  F0AB         	call	___fltol	;wreg free
  7394  010F1A  C0B8  F13C         	movff	?___fltol,sprintf@val
  7395  010F1E  C0B9  F13D         	movff	?___fltol+1,sprintf@val+1
  7396  010F22  C0BA  F13E         	movff	?___fltol+2,sprintf@val+2
  7397  010F26  C0BB  F13F         	movff	?___fltol+3,sprintf@val+3
  7398                           
  7399                           ;doprnt.c: 1132: fval -= (double)val;
  7400  010F2A  C148  F0B8         	movff	sprintf@fval,___flsub@b
  7401  010F2E  C149  F0B9         	movff	sprintf@fval+1,___flsub@b+1
  7402  010F32  C14A  F0BA         	movff	sprintf@fval+2,___flsub@b+2
  7403  010F36  C14B  F0BB         	movff	sprintf@fval+3,___flsub@b+3
  7404  010F3A  C13C  F070         	movff	sprintf@val,___xxtofl@val
  7405  010F3E  C13D  F071         	movff	sprintf@val+1,___xxtofl@val+1
  7406  010F42  C13E  F072         	movff	sprintf@val+2,___xxtofl@val+2
  7407  010F46  C13F  F073         	movff	sprintf@val+3,___xxtofl@val+3
  7408  010F4A  0E00               	movlw	0
  7409  010F4C  EC67  F0A4         	call	___xxtofl
  7410  010F50  C070  F0BC         	movff	?___xxtofl,___flsub@a
  7411  010F54  C071  F0BD         	movff	?___xxtofl+1,___flsub@a+1
  7412  010F58  C072  F0BE         	movff	?___xxtofl+2,___flsub@a+2
  7413  010F5C  C073  F0BF         	movff	?___xxtofl+3,___flsub@a+3
  7414  010F60  ECAD  F0B1         	call	___flsub	;wreg free
  7415  010F64  C0B8  F148         	movff	?___flsub,sprintf@fval
  7416  010F68  C0B9  F149         	movff	?___flsub+1,sprintf@fval+1
  7417  010F6C  C0BA  F14A         	movff	?___flsub+2,sprintf@fval+2
  7418  010F70  C0BB  F14B         	movff	?___flsub+3,sprintf@fval+3
  7419                           
  7420                           ;doprnt.c: 1133: exp = 0;
  7421  010F74  0E00               	movlw	0
  7422  010F76  0101               	movlb	1	; () banked
  7423  010F78  6F41               	movwf	(sprintf@exp+1)& (0+255),b
  7424  010F7A  0E00               	movlw	0
  7425  010F7C  6F40               	movwf	sprintf@exp& (0+255),b
  7426  010F7E                     l9048:
  7427                           
  7428                           ; BSR set to: 1
  7429                           ;doprnt.c: 1134: }
  7430                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7431  010F7E  0E01               	movlw	1
  7432  010F80  0101               	movlb	1	; () banked
  7433  010F82  6F4C               	movwf	sprintf@c& (0+255),b
  7434  010F84                     l9050:
  7435                           
  7436                           ; BSR set to: 1
  7437  010F84  0E0A               	movlw	10
  7438  010F86  0101               	movlb	1	; () banked
  7439  010F88  194C               	xorwf	sprintf@c& (0+255),w,b
  7440  010F8A  B4D8               	btfsc	status,2,c
  7441  010F8C  D021               	goto	l9062
  7442                           
  7443                           ; BSR set to: 1
  7444                           ;doprnt.c: 1137: if(val < dpowers[c])
  7445                           
  7446                           ; BSR set to: 1
  7447                           
  7448                           ; BSR set to: 1
  7449  010F8E  0101               	movlb	1	; () banked
  7450  010F90  514C               	movf	sprintf@c& (0+255),w,b
  7451  010F92  0D04               	mullw	4
  7452  010F94  0E5B               	movlw	low _dpowers
  7453  010F96  24F3               	addwf	prodl,w,c
  7454  010F98  6EF6               	movwf	tblptrl,c
  7455  010F9A  0EFE               	movlw	high _dpowers
  7456  010F9C  20F4               	addwfc	prodh,w,c
  7457  010F9E  6EF7               	movwf	tblptrh,c
  7458  010FA0                     	if	1	;There are 3 active tblptr bytes
  7459  010FA0  6AF8               	clrf	tblptru,c
  7460  010FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  7461  010FA4  22F8               	addwfc	tblptru,f,c
  7462  010FA6                     	endif
  7463  010FA6  0009               	tblrd		*+
  7464  010FA8  50F5               	movf	tablat,w,c
  7465  010FAA  0101               	movlb	1	; () banked
  7466  010FAC  5D3C               	subwf	sprintf@val& (0+255),w,b
  7467  010FAE  0009               	tblrd		*+
  7468  010FB0  50F5               	movf	tablat,w,c
  7469  010FB2  0101               	movlb	1	; () banked
  7470  010FB4  593D               	subwfb	(sprintf@val+1)& (0+255),w,b
  7471  010FB6  0009               	tblrd		*+
  7472  010FB8  50F5               	movf	tablat,w,c
  7473  010FBA  0101               	movlb	1	; () banked
  7474  010FBC  593E               	subwfb	(sprintf@val+2)& (0+255),w,b
  7475  010FBE  0009               	tblrd		*+
  7476  010FC0  50F5               	movf	tablat,w,c
  7477  010FC2  0101               	movlb	1	; () banked
  7478  010FC4  593F               	subwfb	(sprintf@val+3)& (0+255),w,b
  7479  010FC6  A0D8               	btfss	status,0,c
  7480  010FC8  D003               	goto	l9062
  7481                           
  7482                           ; BSR set to: 1
  7483                           
  7484                           ; BSR set to: 1
  7485                           
  7486                           ; BSR set to: 1
  7487                           ;doprnt.c: 1138: break;
  7488  010FCA  0101               	movlb	1	; () banked
  7489  010FCC  2B4C               	incf	sprintf@c& (0+255),f,b
  7490  010FCE  D7DA               	goto	l9050
  7491  010FD0                     l9062:
  7492                           
  7493                           ; BSR set to: 1
  7494                           ;doprnt.c: 1175: {
  7495                           ;doprnt.c: 1188: if(flag & 0x03)
  7496  010FD0  0E03               	movlw	3
  7497  010FD2  0101               	movlb	1	; () banked
  7498  010FD4  153A               	andwf	sprintf@flag& (0+255),w,b
  7499  010FD6  0100               	movlb	0	; () banked
  7500  010FD8  6FCA               	movwf	??_sprintf& (0+255),b
  7501  010FDA  0E00               	movlw	0
  7502  010FDC  0101               	movlb	1	; () banked
  7503  010FDE  153B               	andwf	(sprintf@flag+1)& (0+255),w,b
  7504  010FE0  0100               	movlb	0	; () banked
  7505  010FE2  6FCB               	movwf	(??_sprintf+1)& (0+255),b
  7506  010FE4  0100               	movlb	0	; () banked
  7507  010FE6  51CA               	movf	??_sprintf& (0+255),w,b
  7508  010FE8  0100               	movlb	0	; () banked
  7509  010FEA  11CB               	iorwf	(??_sprintf+1)& (0+255),w,b
  7510  010FEC  B4D8               	btfsc	status,2,c
  7511  010FEE  D058               	goto	l9076
  7512                           
  7513                           ; BSR set to: 0
  7514                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7515  010FF0  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7516  010FF4  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7517  010FF8  0E2D               	movlw	45
  7518  010FFA  D050               	goto	L6
  7519  010FFC                     l9066:
  7520                           
  7521                           ; BSR set to: 0
  7522  010FFC  0100               	movlb	0	; () banked
  7523  010FFE  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  7524  011000  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;doprnt.c: 1195: }
  7528                           ;doprnt.c: 1196: while(c--) {
  7529  011002  D04E               	goto	l9076
  7530  011004                     l9068:
  7531                           
  7532                           ;doprnt.c: 1200: {
  7533                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7534  011004  C13C  F070         	movff	sprintf@val,___lldiv@dividend
  7535  011008  C13D  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  7536  01100C  C13E  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  7537  011010  C13F  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  7538  011014  0101               	movlb	1	; () banked
  7539  011016  514C               	movf	sprintf@c& (0+255),w,b
  7540  011018  0D04               	mullw	4
  7541  01101A  0E5B               	movlw	low _dpowers
  7542  01101C  24F3               	addwf	prodl,w,c
  7543  01101E  6EF6               	movwf	tblptrl,c
  7544  011020  0EFE               	movlw	high _dpowers
  7545  011022  20F4               	addwfc	prodh,w,c
  7546  011024  6EF7               	movwf	tblptrh,c
  7547  011026                     	if	1	;There are 3 active tblptr bytes
  7548  011026  6AF8               	clrf	tblptru,c
  7549  011028  0E00               	movlw	low (__mediumconst shr (0+16))
  7550  01102A  22F8               	addwfc	tblptru,f,c
  7551  01102C                     	endif
  7552  01102C  0009               	tblrd		*+
  7553  01102E  CFF5 F074          	movff	tablat,___lldiv@divisor
  7554  011032  0009               	tblrd		*+
  7555  011034  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  7556  011038  0009               	tblrd		*+
  7557  01103A  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  7558  01103E  000A               	tblrd		*-
  7559  011040  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  7560  011044  EC41  F0AD         	call	___lldiv	;wreg free
  7561  011048  C070  F142         	movff	?___lldiv,sprintf@tmpval
  7562  01104C  C071  F143         	movff	?___lldiv+1,sprintf@tmpval+1
  7563  011050  C072  F144         	movff	?___lldiv+2,sprintf@tmpval+2
  7564  011054  C073  F145         	movff	?___lldiv+3,sprintf@tmpval+3
  7565                           
  7566                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7567  011058  C142  F070         	movff	sprintf@tmpval,___llmod@dividend
  7568  01105C  C143  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7569  011060  C144  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7570  011064  C145  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7571  011068  0E0A               	movlw	10
  7572  01106A  0100               	movlb	0	; () banked
  7573  01106C  6F74               	movwf	___llmod@divisor& (0+255),b
  7574  01106E  0E00               	movlw	0
  7575  011070  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  7576  011072  0E00               	movlw	0
  7577  011074  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  7578  011076  0E00               	movlw	0
  7579  011078  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  7580  01107A  ECA0  F0AF         	call	___llmod	;wreg free
  7581  01107E  C070  F142         	movff	?___llmod,sprintf@tmpval
  7582  011082  C071  F143         	movff	?___llmod+1,sprintf@tmpval+1
  7583  011086  C072  F144         	movff	?___llmod+2,sprintf@tmpval+2
  7584  01108A  C073  F145         	movff	?___llmod+3,sprintf@tmpval+3
  7585                           
  7586                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7587  01108E  0101               	movlb	1	; () banked
  7588  011090  5142               	movf	sprintf@tmpval& (0+255),w,b
  7589  011092  0F30               	addlw	48
  7590  011094  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7591  011098  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7592  01109C                     L6:
  7593  01109C  6EDF               	movwf	indf2,c
  7594  01109E  D7AE               	goto	l9066
  7595  0110A0                     l9076:
  7596                           
  7597                           ; BSR set to: 0
  7598  0110A0  0101               	movlb	1	; () banked
  7599  0110A2  074C               	decf	sprintf@c& (0+255),f,b
  7600  0110A4  0101               	movlb	1	; () banked
  7601  0110A6  294C               	incf	sprintf@c& (0+255),w,b
  7602  0110A8  B4D8               	btfsc	status,2,c
  7603  0110AA  D00E               	goto	l9084
  7604  0110AC  D7AB               	goto	l9068
  7605  0110AE                     l9078:
  7606                           
  7607                           ; BSR set to: 1
  7608                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7609  0110AE  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7610  0110B2  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7611  0110B6  0E30               	movlw	48
  7612  0110B8  6EDF               	movwf	indf2,c
  7613                           
  7614                           ; BSR set to: 1
  7615  0110BA  0100               	movlb	0	; () banked
  7616  0110BC  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  7617  0110BE  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;doprnt.c: 1209: exp--;
  7621  0110C0  0101               	movlb	1	; () banked
  7622  0110C2  0740               	decf	sprintf@exp& (0+255),f,b
  7623  0110C4  A0D8               	btfss	status,0,c
  7624  0110C6  0741               	decf	(sprintf@exp+1)& (0+255),f,b
  7625  0110C8                     l9084:
  7626                           
  7627                           ; BSR set to: 1
  7628  0110C8  0101               	movlb	1	; () banked
  7629  0110CA  BF41               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7630  0110CC  D007               	goto	l9086
  7631  0110CE  0101               	movlb	1	; () banked
  7632  0110D0  5141               	movf	(sprintf@exp+1)& (0+255),w,b
  7633  0110D2  E1ED               	bnz	l9078
  7634  0110D4  0101               	movlb	1	; () banked
  7635  0110D6  0540               	decf	sprintf@exp& (0+255),w,b
  7636  0110D8  B0D8               	btfsc	status,0,c
  7637  0110DA  D7E9               	goto	l9078
  7638  0110DC                     l9086:
  7639                           
  7640                           ; BSR set to: 1
  7641                           ;doprnt.c: 1210: }
  7642                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7643  0110DC  0101               	movlb	1	; () banked
  7644  0110DE  BF47               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7645  0110E0  D00C               	goto	l1006
  7646  0110E2  0101               	movlb	1	; () banked
  7647  0110E4  5147               	movf	(sprintf@prec+1)& (0+255),w,b
  7648  0110E6  E105               	bnz	u11930
  7649  0110E8  0E09               	movlw	9
  7650  0110EA  0101               	movlb	1	; () banked
  7651  0110EC  5D46               	subwf	sprintf@prec& (0+255),w,b
  7652  0110EE  A0D8               	btfss	status,0,c
  7653  0110F0  D004               	goto	l1006
  7654  0110F2                     u11930:
  7655                           
  7656                           ; BSR set to: 1
  7657                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7658  0110F2  0E08               	movlw	8
  7659  0110F4  0101               	movlb	1	; () banked
  7660  0110F6  6F4C               	movwf	sprintf@c& (0+255),b
  7661  0110F8  D002               	goto	l9090
  7662  0110FA                     l1006:
  7663                           
  7664                           ; BSR set to: 1
  7665                           ;doprnt.c: 1213: else
  7666                           ;doprnt.c: 1214: c = prec;
  7667  0110FA  C146  F14C         	movff	sprintf@prec,sprintf@c
  7668  0110FE                     l9090:
  7669                           
  7670                           ; BSR set to: 1
  7671                           ;doprnt.c: 1215: prec -= c;
  7672  0110FE  0101               	movlb	1	; () banked
  7673  011100  514C               	movf	sprintf@c& (0+255),w,b
  7674  011102  0101               	movlb	1	; () banked
  7675  011104  5F46               	subwf	sprintf@prec& (0+255),f,b
  7676  011106  0E00               	movlw	0
  7677  011108  0101               	movlb	1	; () banked
  7678  01110A  BF4C               	btfsc	sprintf@c& (0+255),7,b
  7679  01110C  0EFF               	movlw	255
  7680  01110E  0101               	movlb	1	; () banked
  7681  011110  5B47               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7682                           
  7683                           ; BSR set to: 1
  7684                           ;doprnt.c: 1219: if(c)
  7685  011112  0101               	movlb	1	; () banked
  7686  011114  514C               	movf	sprintf@c& (0+255),w,b
  7687  011116  0101               	movlb	1	; () banked
  7688  011118  B4D8               	btfsc	status,2,c
  7689  01111A  D009               	goto	l9098
  7690                           
  7691                           ; BSR set to: 1
  7692                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7693  01111C  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7694  011120  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7695  011124  0E2E               	movlw	46
  7696  011126  6EDF               	movwf	indf2,c
  7697                           
  7698                           ; BSR set to: 1
  7699  011128  0100               	movlb	0	; () banked
  7700  01112A  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  7701  01112C  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  7702  01112E                     l9098:
  7703                           
  7704                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7705  01112E  0101               	movlb	1	; () banked
  7706  011130  514C               	movf	sprintf@c& (0+255),w,b
  7707  011132  EC81  F094         	call	_scale
  7708  011136  C097  F134         	movff	?_scale,_sprintf$4245
  7709  01113A  C098  F135         	movff	?_scale+1,_sprintf$4245+1
  7710  01113E  C099  F136         	movff	?_scale+2,_sprintf$4245+2
  7711  011142  C09A  F137         	movff	?_scale+3,_sprintf$4245+3
  7712                           
  7713                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7714  011146  C148  F082         	movff	sprintf@fval,___flmul@a
  7715  01114A  C149  F083         	movff	sprintf@fval+1,___flmul@a+1
  7716  01114E  C14A  F084         	movff	sprintf@fval+2,___flmul@a+2
  7717  011152  C14B  F085         	movff	sprintf@fval+3,___flmul@a+3
  7718  011156  C134  F07E         	movff	_sprintf$4245,___flmul@b
  7719  01115A  C135  F07F         	movff	_sprintf$4245+1,___flmul@b+1
  7720  01115E  C136  F080         	movff	_sprintf$4245+2,___flmul@b+2
  7721  011162  C137  F081         	movff	_sprintf$4245+3,___flmul@b+3
  7722  011166  ECE8  F09B         	call	___flmul	;wreg free
  7723  01116A  C07E  F0B8         	movff	?___flmul,___fltol@f1
  7724  01116E  C07F  F0B9         	movff	?___flmul+1,___fltol@f1+1
  7725  011172  C080  F0BA         	movff	?___flmul+2,___fltol@f1+2
  7726  011176  C081  F0BB         	movff	?___flmul+3,___fltol@f1+3
  7727  01117A  EC87  F0AB         	call	___fltol	;wreg free
  7728  01117E  C0B8  F13C         	movff	?___fltol,sprintf@val
  7729  011182  C0B9  F13D         	movff	?___fltol+1,sprintf@val+1
  7730  011186  C0BA  F13E         	movff	?___fltol+2,sprintf@val+2
  7731  01118A  C0BB  F13F         	movff	?___fltol+3,sprintf@val+3
  7732                           
  7733                           ;doprnt.c: 1228: while(c--) {
  7734  01118E  D07A               	goto	l9112
  7735  011190                     l9102:
  7736                           
  7737                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7738  011190  C13C  F070         	movff	sprintf@val,___lldiv@dividend
  7739  011194  C13D  F071         	movff	sprintf@val+1,___lldiv@dividend+1
  7740  011198  C13E  F072         	movff	sprintf@val+2,___lldiv@dividend+2
  7741  01119C  C13F  F073         	movff	sprintf@val+3,___lldiv@dividend+3
  7742  0111A0  0101               	movlb	1	; () banked
  7743  0111A2  514C               	movf	sprintf@c& (0+255),w,b
  7744  0111A4  0D04               	mullw	4
  7745  0111A6  0E5B               	movlw	low _dpowers
  7746  0111A8  24F3               	addwf	prodl,w,c
  7747  0111AA  6EF6               	movwf	tblptrl,c
  7748  0111AC  0EFE               	movlw	high _dpowers
  7749  0111AE  20F4               	addwfc	prodh,w,c
  7750  0111B0  6EF7               	movwf	tblptrh,c
  7751  0111B2                     	if	1	;There are 3 active tblptr bytes
  7752  0111B2  6AF8               	clrf	tblptru,c
  7753  0111B4  0E00               	movlw	low (__mediumconst shr (0+16))
  7754  0111B6  22F8               	addwfc	tblptru,f,c
  7755  0111B8                     	endif
  7756  0111B8  0009               	tblrd		*+
  7757  0111BA  CFF5 F074          	movff	tablat,___lldiv@divisor
  7758  0111BE  0009               	tblrd		*+
  7759  0111C0  CFF5 F075          	movff	tablat,___lldiv@divisor+1
  7760  0111C4  0009               	tblrd		*+
  7761  0111C6  CFF5 F076          	movff	tablat,___lldiv@divisor+2
  7762  0111CA  000A               	tblrd		*-
  7763  0111CC  CFF5 F077          	movff	tablat,___lldiv@divisor+3
  7764  0111D0  EC41  F0AD         	call	___lldiv	;wreg free
  7765  0111D4  C070  F142         	movff	?___lldiv,sprintf@tmpval
  7766  0111D8  C071  F143         	movff	?___lldiv+1,sprintf@tmpval+1
  7767  0111DC  C072  F144         	movff	?___lldiv+2,sprintf@tmpval+2
  7768  0111E0  C073  F145         	movff	?___lldiv+3,sprintf@tmpval+3
  7769                           
  7770                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7771  0111E4  C142  F070         	movff	sprintf@tmpval,___llmod@dividend
  7772  0111E8  C143  F071         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7773  0111EC  C144  F072         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7774  0111F0  C145  F073         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7775  0111F4  0E0A               	movlw	10
  7776  0111F6  0100               	movlb	0	; () banked
  7777  0111F8  6F74               	movwf	___llmod@divisor& (0+255),b
  7778  0111FA  0E00               	movlw	0
  7779  0111FC  6F75               	movwf	(___llmod@divisor+1)& (0+255),b
  7780  0111FE  0E00               	movlw	0
  7781  011200  6F76               	movwf	(___llmod@divisor+2)& (0+255),b
  7782  011202  0E00               	movlw	0
  7783  011204  6F77               	movwf	(___llmod@divisor+3)& (0+255),b
  7784  011206  ECA0  F0AF         	call	___llmod	;wreg free
  7785  01120A  C070  F142         	movff	?___llmod,sprintf@tmpval
  7786  01120E  C071  F143         	movff	?___llmod+1,sprintf@tmpval+1
  7787  011212  C072  F144         	movff	?___llmod+2,sprintf@tmpval+2
  7788  011216  C073  F145         	movff	?___llmod+3,sprintf@tmpval+3
  7789                           
  7790                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7791  01121A  0101               	movlb	1	; () banked
  7792  01121C  5142               	movf	sprintf@tmpval& (0+255),w,b
  7793  01121E  0F30               	addlw	48
  7794  011220  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7795  011224  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7796  011228  6EDF               	movwf	indf2,c
  7797                           
  7798                           ; BSR set to: 1
  7799  01122A  0100               	movlb	0	; () banked
  7800  01122C  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  7801  01122E  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;doprnt.c: 1232: val %= dpowers[c];
  7805  011230  C13C  F070         	movff	sprintf@val,___llmod@dividend
  7806  011234  C13D  F071         	movff	sprintf@val+1,___llmod@dividend+1
  7807  011238  C13E  F072         	movff	sprintf@val+2,___llmod@dividend+2
  7808  01123C  C13F  F073         	movff	sprintf@val+3,___llmod@dividend+3
  7809  011240  0101               	movlb	1	; () banked
  7810  011242  514C               	movf	sprintf@c& (0+255),w,b
  7811  011244  0D04               	mullw	4
  7812  011246  0E5B               	movlw	low _dpowers
  7813  011248  24F3               	addwf	prodl,w,c
  7814  01124A  6EF6               	movwf	tblptrl,c
  7815  01124C  0EFE               	movlw	high _dpowers
  7816  01124E  20F4               	addwfc	prodh,w,c
  7817  011250  6EF7               	movwf	tblptrh,c
  7818  011252                     	if	1	;There are 3 active tblptr bytes
  7819  011252  6AF8               	clrf	tblptru,c
  7820  011254  0E00               	movlw	low (__mediumconst shr (0+16))
  7821  011256  22F8               	addwfc	tblptru,f,c
  7822  011258                     	endif
  7823  011258  0009               	tblrd		*+
  7824  01125A  CFF5 F074          	movff	tablat,___llmod@divisor
  7825  01125E  0009               	tblrd		*+
  7826  011260  CFF5 F075          	movff	tablat,___llmod@divisor+1
  7827  011264  0009               	tblrd		*+
  7828  011266  CFF5 F076          	movff	tablat,___llmod@divisor+2
  7829  01126A  000A               	tblrd		*-
  7830  01126C  CFF5 F077          	movff	tablat,___llmod@divisor+3
  7831  011270  ECA0  F0AF         	call	___llmod	;wreg free
  7832  011274  C070  F13C         	movff	?___llmod,sprintf@val
  7833  011278  C071  F13D         	movff	?___llmod+1,sprintf@val+1
  7834  01127C  C072  F13E         	movff	?___llmod+2,sprintf@val+2
  7835  011280  C073  F13F         	movff	?___llmod+3,sprintf@val+3
  7836  011284                     l9112:
  7837  011284  0101               	movlb	1	; () banked
  7838  011286  074C               	decf	sprintf@c& (0+255),f,b
  7839  011288  0101               	movlb	1	; () banked
  7840  01128A  294C               	incf	sprintf@c& (0+255),w,b
  7841  01128C  B4D8               	btfsc	status,2,c
  7842  01128E  D00E               	goto	l9120
  7843  011290  D77F               	goto	l9102
  7844  011292                     l9114:
  7845                           
  7846                           ; BSR set to: 1
  7847                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7848  011292  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7849  011296  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7850  01129A  0E30               	movlw	48
  7851  01129C  6EDF               	movwf	indf2,c
  7852                           
  7853                           ; BSR set to: 1
  7854  01129E  0100               	movlb	0	; () banked
  7855  0112A0  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  7856  0112A2  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;doprnt.c: 1237: prec--;
  7860  0112A4  0101               	movlb	1	; () banked
  7861  0112A6  0746               	decf	sprintf@prec& (0+255),f,b
  7862  0112A8  A0D8               	btfss	status,0,c
  7863  0112AA  0747               	decf	(sprintf@prec+1)& (0+255),f,b
  7864  0112AC                     l9120:
  7865                           
  7866                           ; BSR set to: 1
  7867  0112AC  0101               	movlb	1	; () banked
  7868  0112AE  5146               	movf	sprintf@prec& (0+255),w,b
  7869  0112B0  0101               	movlb	1	; () banked
  7870  0112B2  1147               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7871  0112B4  B4D8               	btfsc	status,2,c
  7872  0112B6  D059               	goto	l9142
  7873  0112B8  D7EC               	goto	l9114
  7874  0112BA                     l9122:
  7875                           
  7876                           ; BSR set to: 1
  7877                           ;doprnt.c: 1246: }
  7878                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7879  0112BA  0101               	movlb	1	; () banked
  7880  0112BC  5146               	movf	sprintf@prec& (0+255),w,b
  7881  0112BE  0101               	movlb	1	; () banked
  7882  0112C0  1147               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7883  0112C2  A4D8               	btfss	status,2,c
  7884  0112C4  D00D               	goto	l9128
  7885                           
  7886                           ; BSR set to: 1
  7887  0112C6  0101               	movlb	1	; () banked
  7888  0112C8  513C               	movf	sprintf@val& (0+255),w,b
  7889  0112CA  0101               	movlb	1	; () banked
  7890  0112CC  113D               	iorwf	(sprintf@val+1)& (0+255),w,b
  7891  0112CE  0101               	movlb	1	; () banked
  7892  0112D0  113E               	iorwf	(sprintf@val+2)& (0+255),w,b
  7893  0112D2  0101               	movlb	1	; () banked
  7894  0112D4  113F               	iorwf	(sprintf@val+3)& (0+255),w,b
  7895  0112D6  A4D8               	btfss	status,2,c
  7896  0112D8  D003               	goto	l9128
  7897                           
  7898                           ; BSR set to: 1
  7899                           ;doprnt.c: 1291: prec++;
  7900  0112DA  0101               	movlb	1	; () banked
  7901  0112DC  4B46               	infsnz	sprintf@prec& (0+255),f,b
  7902  0112DE  2B47               	incf	(sprintf@prec+1)& (0+255),f,b
  7903  0112E0                     l9128:
  7904                           
  7905                           ; BSR set to: 1
  7906                           ;doprnt.c: 1339: if(c < prec)
  7907  0112E0  0E80               	movlw	128
  7908  0112E2  0101               	movlb	1	; () banked
  7909  0112E4  BF4C               	btfsc	sprintf@c& (0+255),7,b
  7910  0112E6  0E7F               	movlw	127
  7911  0112E8  0100               	movlb	0	; () banked
  7912  0112EA  6FCA               	movwf	??_sprintf& (0+255),b
  7913  0112EC  0101               	movlb	1	; () banked
  7914  0112EE  5146               	movf	sprintf@prec& (0+255),w,b
  7915  0112F0  0101               	movlb	1	; () banked
  7916  0112F2  5D4C               	subwf	sprintf@c& (0+255),w,b
  7917  0112F4  0101               	movlb	1	; () banked
  7918  0112F6  5147               	movf	(sprintf@prec+1)& (0+255),w,b
  7919  0112F8  0A80               	xorlw	128
  7920  0112FA  0100               	movlb	0	; () banked
  7921  0112FC  59CA               	subwfb	??_sprintf& (0+255),w,b
  7922  0112FE  B0D8               	btfsc	status,0,c
  7923  011300  D003               	goto	l9132
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;doprnt.c: 1340: c = prec;
  7927  011302  C146  F14C         	movff	sprintf@prec,sprintf@c
  7928  011306  D018               	goto	l9136
  7929  011308                     l9132:
  7930                           
  7931                           ; BSR set to: 0
  7932                           ;doprnt.c: 1341: else if(prec < c)
  7933  011308  0101               	movlb	1	; () banked
  7934  01130A  5147               	movf	(sprintf@prec+1)& (0+255),w,b
  7935  01130C  0A80               	xorlw	128
  7936  01130E  0100               	movlb	0	; () banked
  7937  011310  6FCA               	movwf	??_sprintf& (0+255),b
  7938  011312  0101               	movlb	1	; () banked
  7939  011314  514C               	movf	sprintf@c& (0+255),w,b
  7940  011316  0101               	movlb	1	; () banked
  7941  011318  5D46               	subwf	sprintf@prec& (0+255),w,b
  7942  01131A  0E80               	movlw	128
  7943  01131C  0101               	movlb	1	; () banked
  7944  01131E  BF4C               	btfsc	sprintf@c& (0+255),7,b
  7945  011320  0E7F               	movlw	127
  7946  011322  0100               	movlb	0	; () banked
  7947  011324  59CA               	subwfb	??_sprintf& (0+255),w,b
  7948  011326  B0D8               	btfsc	status,0,c
  7949  011328  D007               	goto	l9136
  7950                           
  7951                           ; BSR set to: 0
  7952                           ;doprnt.c: 1342: prec = c;
  7953  01132A  0101               	movlb	1	; () banked
  7954  01132C  514C               	movf	sprintf@c& (0+255),w,b
  7955  01132E  0101               	movlb	1	; () banked
  7956  011330  6F46               	movwf	sprintf@prec& (0+255),b
  7957  011332  6B47               	clrf	(sprintf@prec+1)& (0+255),b
  7958  011334  BF46               	btfsc	sprintf@prec& (0+255),7,b
  7959  011336  0747               	decf	(sprintf@prec+1)& (0+255),f,b
  7960  011338                     l9136:
  7961                           
  7962                           ;doprnt.c: 1422: {
  7963                           ;doprnt.c: 1438: if(flag & 0x03)
  7964  011338  0E03               	movlw	3
  7965  01133A  0101               	movlb	1	; () banked
  7966  01133C  153A               	andwf	sprintf@flag& (0+255),w,b
  7967  01133E  0100               	movlb	0	; () banked
  7968  011340  6FCA               	movwf	??_sprintf& (0+255),b
  7969  011342  0E00               	movlw	0
  7970  011344  0101               	movlb	1	; () banked
  7971  011346  153B               	andwf	(sprintf@flag+1)& (0+255),w,b
  7972  011348  0100               	movlb	0	; () banked
  7973  01134A  6FCB               	movwf	(??_sprintf+1)& (0+255),b
  7974  01134C  0100               	movlb	0	; () banked
  7975  01134E  51CA               	movf	??_sprintf& (0+255),w,b
  7976  011350  0100               	movlb	0	; () banked
  7977  011352  11CB               	iorwf	(??_sprintf+1)& (0+255),w,b
  7978  011354  B4D8               	btfsc	status,2,c
  7979  011356  D009               	goto	l9142
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7983  011358  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  7984  01135C  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  7985  011360  0E2D               	movlw	45
  7986  011362  6EDF               	movwf	indf2,c
  7987  011364                     l9140:
  7988                           
  7989                           ; BSR set to: 0
  7990  011364  0100               	movlb	0	; () banked
  7991  011366  4BC2               	infsnz	sprintf@sp& (0+255),f,b
  7992  011368  2BC3               	incf	(sprintf@sp+1)& (0+255),f,b
  7993  01136A                     l9142:
  7994  01136A  C0C4  FFF6         	movff	sprintf@f,tblptrl
  7995  01136E  C0C5  FFF7         	movff	sprintf@f+1,tblptrh
  7996  011372  0100               	movlb	0	; () banked
  7997  011374  4BC4               	infsnz	sprintf@f& (0+255),f,b
  7998  011376  2BC5               	incf	(sprintf@f+1)& (0+255),f,b
  7999  011378                     	if	0	;tblptru may be non-zero
  8000  011378                     	endif
  8001  011378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8002  011378  0E00               	movlw	low (__mediumconst shr (0+16))
  8003  01137A  6EF8               	movwf	tblptru,c
  8004  01137C                     	endif
  8005  01137C  0008               	tblrd		*
  8006  01137E  CFF5 F14C          	movff	tablat,sprintf@c
  8007  011382  0101               	movlb	1	; () banked
  8008  011384  514C               	movf	sprintf@c& (0+255),w,b
  8009  011386  A4D8               	btfss	status,2,c
  8010  011388  EF8B  F085         	goto	l8944
  8011  01138C                     l9144:
  8012                           
  8013                           ; BSR set to: 1
  8014                           ;doprnt.c: 1538: *sp = 0;
  8015  01138C  C0C2  FFD9         	movff	sprintf@sp,fsr2l
  8016  011390  C0C3  FFDA         	movff	sprintf@sp+1,fsr2h
  8017  011394  0E00               	movlw	0
  8018  011396  6EDF               	movwf	indf2,c
  8019  011398  0012               	return	
  8020  01139A                     __end_of_sprintf:
  8021                           	opt stack 0
  8022                           tblptru	equ	0xFF8
  8023                           tblptrh	equ	0xFF7
  8024                           tblptrl	equ	0xFF6
  8025                           tablat	equ	0xFF5
  8026                           prodh	equ	0xFF4
  8027                           prodl	equ	0xFF3
  8028                           intcon	equ	0xFF2
  8029                           postinc0	equ	0xFEE
  8030                           wreg	equ	0xFE8
  8031                           indf2	equ	0xFDF
  8032                           postinc2	equ	0xFDE
  8033                           fsr2h	equ	0xFDA
  8034                           fsr2l	equ	0xFD9
  8035                           status	equ	0xFD8
  8036                           
  8037 ;; *************** function _scale *****************
  8038 ;; Defined at:
  8039 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;  scl             1    wreg     char 
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;  scl             1   63[BANK0 ] char 
  8044 ;; Return value:  Size  Location     Type
  8045 ;;                  4   55[BANK0 ] char 
  8046 ;; Registers used:
  8047 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8048 ;; Tracked objects:
  8049 ;;		On entry : 0/0
  8050 ;;		On exit  : 0/0
  8051 ;;		Unchanged: 0/0
  8052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8053 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8054 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8056 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8057 ;;Total ram usage:        9 bytes
  8058 ;; Hardware stack levels used:    1
  8059 ;; Hardware stack levels required when called:   10
  8060 ;; This function calls:
  8061 ;;		___awdiv
  8062 ;;		___awmod
  8063 ;;		___flmul
  8064 ;; This function is called by:
  8065 ;;		_sprintf
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           
  8069                           	psect	text9
  8070  012902                     __ptext9:
  8071                           	opt stack 0
  8072  012902                     _scale:
  8073                           	opt stack 18
  8074                           
  8075                           ; BSR set to: 1
  8076                           ;incstack = 0
  8077                           ;scale@scl stored from wreg
  8078  012902  0100               	movlb	0	; () banked
  8079  012904  6F9F               	movwf	scale@scl& (0+255),b
  8080                           
  8081                           ;doprnt.c: 428: if(scl < 0) {
  8082  012906  0100               	movlb	0	; () banked
  8083  012908  AF9F               	btfss	scale@scl& (0+255),7,b
  8084  01290A  D145               	goto	l8552
  8085                           
  8086                           ; BSR set to: 0
  8087                           ;doprnt.c: 429: scl = -scl;
  8088  01290C  0100               	movlb	0	; () banked
  8089  01290E  6D9F               	negf	scale@scl& (0+255),b
  8090                           
  8091                           ;doprnt.c: 430: if(scl>=110)
  8092  012910  0100               	movlb	0	; () banked
  8093  012912  519F               	movf	scale@scl& (0+255),w,b
  8094  012914  0A80               	xorlw	128
  8095  012916  0F12               	addlw	-238
  8096  012918  A0D8               	btfss	status,0,c
  8097  01291A  D0BB               	goto	l8542
  8098                           
  8099                           ; BSR set to: 0
  8100                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8101  01291C  0E00               	movlw	0
  8102  01291E  0100               	movlb	0	; () banked
  8103  012920  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8104  012922  0E0A               	movlw	10
  8105  012924  6F78               	movwf	___awdiv@divisor& (0+255),b
  8106  012926  0E00               	movlw	0
  8107  012928  0100               	movlb	0	; () banked
  8108  01292A  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8109  01292C  0E64               	movlw	100
  8110  01292E  6F72               	movwf	___awmod@divisor& (0+255),b
  8111  012930  0100               	movlb	0	; () banked
  8112  012932  519F               	movf	scale@scl& (0+255),w,b
  8113  012934  0100               	movlb	0	; () banked
  8114  012936  6F70               	movwf	___awmod@dividend& (0+255),b
  8115  012938  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8116  01293A  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8117  01293C  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8118  01293E  EC01  F0AF         	call	___awmod	;wreg free
  8119  012942  C070  F076         	movff	?___awmod,___awdiv@dividend
  8120  012946  C071  F077         	movff	?___awmod+1,___awdiv@dividend+1
  8121  01294A  EC83  F0AC         	call	___awdiv	;wreg free
  8122  01294E  0100               	movlb	0	; () banked
  8123  012950  90D8               	bcf	status,0,c
  8124  012952  3776               	rlcf	?___awdiv& (0+255),f,b
  8125  012954  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8126  012956  0100               	movlb	0	; () banked
  8127  012958  90D8               	bcf	status,0,c
  8128  01295A  3776               	rlcf	?___awdiv& (0+255),f,b
  8129  01295C  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8130  01295E  0E24               	movlw	36
  8131  012960  0100               	movlb	0	; () banked
  8132  012962  2776               	addwf	?___awdiv& (0+255),f,b
  8133  012964  0E00               	movlw	0
  8134  012966  0100               	movlb	0	; () banked
  8135  012968  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8136  01296A  0EF3               	movlw	low __npowers_
  8137  01296C  0100               	movlb	0	; () banked
  8138  01296E  2576               	addwf	?___awdiv& (0+255),w,b
  8139  012970  6EF6               	movwf	tblptrl,c
  8140  012972  0EFD               	movlw	high __npowers_
  8141  012974  0100               	movlb	0	; () banked
  8142  012976  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8143  012978  6EF7               	movwf	tblptrh,c
  8144  01297A                     	if	1	;There are 3 active tblptr bytes
  8145  01297A  6AF8               	clrf	tblptru,c
  8146  01297C  0E00               	movlw	low (__mediumconst shr (0+16))
  8147  01297E  22F8               	addwfc	tblptru,f,c
  8148  012980                     	endif
  8149  012980  0009               	tblrd		*+
  8150  012982  CFF5 F082          	movff	tablat,___flmul@a
  8151  012986  0009               	tblrd		*+
  8152  012988  CFF5 F083          	movff	tablat,___flmul@a+1
  8153  01298C  0009               	tblrd		*+
  8154  01298E  CFF5 F084          	movff	tablat,___flmul@a+2
  8155  012992  000A               	tblrd		*-
  8156  012994  CFF5 F085          	movff	tablat,___flmul@a+3
  8157  012998  0E00               	movlw	0
  8158  01299A  0100               	movlb	0	; () banked
  8159  01299C  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8160  01299E  0E64               	movlw	100
  8161  0129A0  6F78               	movwf	___awdiv@divisor& (0+255),b
  8162  0129A2  0100               	movlb	0	; () banked
  8163  0129A4  519F               	movf	scale@scl& (0+255),w,b
  8164  0129A6  0100               	movlb	0	; () banked
  8165  0129A8  6F76               	movwf	___awdiv@dividend& (0+255),b
  8166  0129AA  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  8167  0129AC  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  8168  0129AE  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8169  0129B0  EC83  F0AC         	call	___awdiv	;wreg free
  8170  0129B4  0100               	movlb	0	; () banked
  8171  0129B6  90D8               	bcf	status,0,c
  8172  0129B8  3776               	rlcf	?___awdiv& (0+255),f,b
  8173  0129BA  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8174  0129BC  0100               	movlb	0	; () banked
  8175  0129BE  90D8               	bcf	status,0,c
  8176  0129C0  3776               	rlcf	?___awdiv& (0+255),f,b
  8177  0129C2  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8178  0129C4  0E48               	movlw	72
  8179  0129C6  0100               	movlb	0	; () banked
  8180  0129C8  2776               	addwf	?___awdiv& (0+255),f,b
  8181  0129CA  0E00               	movlw	0
  8182  0129CC  0100               	movlb	0	; () banked
  8183  0129CE  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8184  0129D0  0EF3               	movlw	low __npowers_
  8185  0129D2  0100               	movlb	0	; () banked
  8186  0129D4  2576               	addwf	?___awdiv& (0+255),w,b
  8187  0129D6  6EF6               	movwf	tblptrl,c
  8188  0129D8  0EFD               	movlw	high __npowers_
  8189  0129DA  0100               	movlb	0	; () banked
  8190  0129DC  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8191  0129DE  6EF7               	movwf	tblptrh,c
  8192  0129E0                     	if	1	;There are 3 active tblptr bytes
  8193  0129E0  6AF8               	clrf	tblptru,c
  8194  0129E2  0E00               	movlw	low (__mediumconst shr (0+16))
  8195  0129E4  22F8               	addwfc	tblptru,f,c
  8196  0129E6                     	endif
  8197  0129E6  0009               	tblrd		*+
  8198  0129E8  CFF5 F07E          	movff	tablat,___flmul@b
  8199  0129EC  0009               	tblrd		*+
  8200  0129EE  CFF5 F07F          	movff	tablat,___flmul@b+1
  8201  0129F2  0009               	tblrd		*+
  8202  0129F4  CFF5 F080          	movff	tablat,___flmul@b+2
  8203  0129F8  000A               	tblrd		*-
  8204  0129FA  CFF5 F081          	movff	tablat,___flmul@b+3
  8205  0129FE  ECE8  F09B         	call	___flmul	;wreg free
  8206  012A02  C07E  F09B         	movff	?___flmul,_scale$4244
  8207  012A06  C07F  F09C         	movff	?___flmul+1,_scale$4244+1
  8208  012A0A  C080  F09D         	movff	?___flmul+2,_scale$4244+2
  8209  012A0E  C081  F09E         	movff	?___flmul+3,_scale$4244+3
  8210                           
  8211                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8212  012A12  C09B  F07E         	movff	_scale$4244,___flmul@b
  8213  012A16  C09C  F07F         	movff	_scale$4244+1,___flmul@b+1
  8214  012A1A  C09D  F080         	movff	_scale$4244+2,___flmul@b+2
  8215  012A1E  C09E  F081         	movff	_scale$4244+3,___flmul@b+3
  8216  012A22  0E00               	movlw	0
  8217  012A24  0100               	movlb	0	; () banked
  8218  012A26  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8219  012A28  0E0A               	movlw	10
  8220  012A2A  6F72               	movwf	___awmod@divisor& (0+255),b
  8221  012A2C  0100               	movlb	0	; () banked
  8222  012A2E  519F               	movf	scale@scl& (0+255),w,b
  8223  012A30  0100               	movlb	0	; () banked
  8224  012A32  6F70               	movwf	___awmod@dividend& (0+255),b
  8225  012A34  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8226  012A36  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8227  012A38  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8228  012A3A  EC01  F0AF         	call	___awmod	;wreg free
  8229  012A3E  0100               	movlb	0	; () banked
  8230  012A40  90D8               	bcf	status,0,c
  8231  012A42  3770               	rlcf	?___awmod& (0+255),f,b
  8232  012A44  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8233  012A46  0100               	movlb	0	; () banked
  8234  012A48  90D8               	bcf	status,0,c
  8235  012A4A  3770               	rlcf	?___awmod& (0+255),f,b
  8236  012A4C  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8237  012A4E  0EF3               	movlw	low __npowers_
  8238  012A50  0100               	movlb	0	; () banked
  8239  012A52  2570               	addwf	?___awmod& (0+255),w,b
  8240  012A54  6EF6               	movwf	tblptrl,c
  8241  012A56  0EFD               	movlw	high __npowers_
  8242  012A58  0100               	movlb	0	; () banked
  8243  012A5A  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  8244  012A5C  6EF7               	movwf	tblptrh,c
  8245  012A5E                     	if	1	;There are 3 active tblptr bytes
  8246  012A5E  6AF8               	clrf	tblptru,c
  8247  012A60  0E00               	movlw	low (__mediumconst shr (0+16))
  8248  012A62  22F8               	addwfc	tblptru,f,c
  8249  012A64                     	endif
  8250  012A64  0009               	tblrd		*+
  8251  012A66  CFF5 F082          	movff	tablat,___flmul@a
  8252  012A6A  0009               	tblrd		*+
  8253  012A6C  CFF5 F083          	movff	tablat,___flmul@a+1
  8254  012A70  0009               	tblrd		*+
  8255  012A72  CFF5 F084          	movff	tablat,___flmul@a+2
  8256  012A76  000A               	tblrd		*-
  8257  012A78  CFF5 F085          	movff	tablat,___flmul@a+3
  8258  012A7C  ECE8  F09B         	call	___flmul	;wreg free
  8259  012A80  C07E  F097         	movff	?___flmul,?_scale
  8260  012A84  C07F  F098         	movff	?___flmul+1,?_scale+1
  8261  012A88  C080  F099         	movff	?___flmul+2,?_scale+2
  8262  012A8C  C081  F09A         	movff	?___flmul+3,?_scale+3
  8263  012A90  0012               	return	
  8264  012A92                     l8542:
  8265                           
  8266                           ;doprnt.c: 432: else if(scl > 10)
  8267  012A92  0100               	movlb	0	; () banked
  8268  012A94  519F               	movf	scale@scl& (0+255),w,b
  8269  012A96  0A80               	xorlw	128
  8270  012A98  0F75               	addlw	-139
  8271  012A9A  A0D8               	btfss	status,0,c
  8272  012A9C  D063               	goto	l8548
  8273                           
  8274                           ; BSR set to: 0
  8275                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8276  012A9E  0E00               	movlw	0
  8277  012AA0  0100               	movlb	0	; () banked
  8278  012AA2  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8279  012AA4  0E0A               	movlw	10
  8280  012AA6  6F78               	movwf	___awdiv@divisor& (0+255),b
  8281  012AA8  0100               	movlb	0	; () banked
  8282  012AAA  519F               	movf	scale@scl& (0+255),w,b
  8283  012AAC  0100               	movlb	0	; () banked
  8284  012AAE  6F76               	movwf	___awdiv@dividend& (0+255),b
  8285  012AB0  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  8286  012AB2  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  8287  012AB4  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8288  012AB6  EC83  F0AC         	call	___awdiv	;wreg free
  8289  012ABA  0100               	movlb	0	; () banked
  8290  012ABC  90D8               	bcf	status,0,c
  8291  012ABE  3776               	rlcf	?___awdiv& (0+255),f,b
  8292  012AC0  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8293  012AC2  0100               	movlb	0	; () banked
  8294  012AC4  90D8               	bcf	status,0,c
  8295  012AC6  3776               	rlcf	?___awdiv& (0+255),f,b
  8296  012AC8  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8297  012ACA  0E24               	movlw	36
  8298  012ACC  0100               	movlb	0	; () banked
  8299  012ACE  2776               	addwf	?___awdiv& (0+255),f,b
  8300  012AD0  0E00               	movlw	0
  8301  012AD2  0100               	movlb	0	; () banked
  8302  012AD4  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8303  012AD6  0EF3               	movlw	low __npowers_
  8304  012AD8  0100               	movlb	0	; () banked
  8305  012ADA  2576               	addwf	?___awdiv& (0+255),w,b
  8306  012ADC  6EF6               	movwf	tblptrl,c
  8307  012ADE  0EFD               	movlw	high __npowers_
  8308  012AE0  0100               	movlb	0	; () banked
  8309  012AE2  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8310  012AE4  6EF7               	movwf	tblptrh,c
  8311  012AE6                     	if	1	;There are 3 active tblptr bytes
  8312  012AE6  6AF8               	clrf	tblptru,c
  8313  012AE8  0E00               	movlw	low (__mediumconst shr (0+16))
  8314  012AEA  22F8               	addwfc	tblptru,f,c
  8315  012AEC                     	endif
  8316  012AEC  0009               	tblrd		*+
  8317  012AEE  CFF5 F07E          	movff	tablat,___flmul@b
  8318  012AF2  0009               	tblrd		*+
  8319  012AF4  CFF5 F07F          	movff	tablat,___flmul@b+1
  8320  012AF8  0009               	tblrd		*+
  8321  012AFA  CFF5 F080          	movff	tablat,___flmul@b+2
  8322  012AFE  000A               	tblrd		*-
  8323  012B00  CFF5 F081          	movff	tablat,___flmul@b+3
  8324  012B04  0E00               	movlw	0
  8325  012B06  0100               	movlb	0	; () banked
  8326  012B08  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8327  012B0A  0E0A               	movlw	10
  8328  012B0C  6F72               	movwf	___awmod@divisor& (0+255),b
  8329  012B0E  0100               	movlb	0	; () banked
  8330  012B10  519F               	movf	scale@scl& (0+255),w,b
  8331  012B12  0100               	movlb	0	; () banked
  8332  012B14  6F70               	movwf	___awmod@dividend& (0+255),b
  8333  012B16  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8334  012B18  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8335  012B1A  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8336  012B1C  EC01  F0AF         	call	___awmod	;wreg free
  8337  012B20  0100               	movlb	0	; () banked
  8338  012B22  90D8               	bcf	status,0,c
  8339  012B24  3770               	rlcf	?___awmod& (0+255),f,b
  8340  012B26  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8341  012B28  0100               	movlb	0	; () banked
  8342  012B2A  90D8               	bcf	status,0,c
  8343  012B2C  3770               	rlcf	?___awmod& (0+255),f,b
  8344  012B2E  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8345  012B30  0EF3               	movlw	low __npowers_
  8346  012B32  0100               	movlb	0	; () banked
  8347  012B34  2570               	addwf	?___awmod& (0+255),w,b
  8348  012B36  6EF6               	movwf	tblptrl,c
  8349  012B38  0EFD               	movlw	high __npowers_
  8350  012B3A  0100               	movlb	0	; () banked
  8351  012B3C  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  8352  012B3E  6EF7               	movwf	tblptrh,c
  8353  012B40                     	if	1	;There are 3 active tblptr bytes
  8354  012B40  6AF8               	clrf	tblptru,c
  8355  012B42  0E00               	movlw	low (__mediumconst shr (0+16))
  8356  012B44  22F8               	addwfc	tblptru,f,c
  8357  012B46                     	endif
  8358  012B46  0009               	tblrd		*+
  8359  012B48  CFF5 F082          	movff	tablat,___flmul@a
  8360  012B4C  0009               	tblrd		*+
  8361  012B4E  CFF5 F083          	movff	tablat,___flmul@a+1
  8362  012B52  0009               	tblrd		*+
  8363  012B54  CFF5 F084          	movff	tablat,___flmul@a+2
  8364  012B58  000A               	tblrd		*-
  8365  012B5A  CFF5 F085          	movff	tablat,___flmul@a+3
  8366  012B5E  ECE8  F09B         	call	___flmul	;wreg free
  8367  012B62  D78E               	goto	L7
  8368  012B64                     l8548:
  8369                           
  8370                           ;doprnt.c: 434: return _npowers_[scl];
  8371  012B64  0100               	movlb	0	; () banked
  8372  012B66  519F               	movf	scale@scl& (0+255),w,b
  8373  012B68  0D04               	mullw	4
  8374  012B6A  0EF3               	movlw	low __npowers_
  8375  012B6C  24F3               	addwf	prodl,w,c
  8376  012B6E  6EF6               	movwf	tblptrl,c
  8377  012B70  0EFD               	movlw	high __npowers_
  8378  012B72  20F4               	addwfc	prodh,w,c
  8379  012B74  6EF7               	movwf	tblptrh,c
  8380  012B76                     	if	1	;There are 3 active tblptr bytes
  8381  012B76  6AF8               	clrf	tblptru,c
  8382  012B78  0E00               	movlw	low (__mediumconst shr (0+16))
  8383  012B7A  22F8               	addwfc	tblptru,f,c
  8384  012B7C                     	endif
  8385  012B7C  0009               	tblrd		*+
  8386  012B7E  CFF5 F097          	movff	tablat,?_scale
  8387  012B82  0009               	tblrd		*+
  8388  012B84  CFF5 F098          	movff	tablat,?_scale+1
  8389  012B88  0009               	tblrd		*+
  8390  012B8A  CFF5 F099          	movff	tablat,?_scale+2
  8391  012B8E  000A               	tblrd		*-
  8392  012B90  CFF5 F09A          	movff	tablat,?_scale+3
  8393                           
  8394                           ; BSR set to: 0
  8395  012B94  0012               	return	
  8396  012B96                     l8552:
  8397                           
  8398                           ; BSR set to: 0
  8399                           ;doprnt.c: 435: }
  8400                           ;doprnt.c: 436: if(scl>=110)
  8401  012B96  0100               	movlb	0	; () banked
  8402  012B98  519F               	movf	scale@scl& (0+255),w,b
  8403  012B9A  0A80               	xorlw	128
  8404  012B9C  0F12               	addlw	-238
  8405  012B9E  A0D8               	btfss	status,0,c
  8406  012BA0  D0BB               	goto	l8560
  8407                           
  8408                           ; BSR set to: 0
  8409                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8410  012BA2  0E00               	movlw	0
  8411  012BA4  0100               	movlb	0	; () banked
  8412  012BA6  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8413  012BA8  0E0A               	movlw	10
  8414  012BAA  6F78               	movwf	___awdiv@divisor& (0+255),b
  8415  012BAC  0E00               	movlw	0
  8416  012BAE  0100               	movlb	0	; () banked
  8417  012BB0  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8418  012BB2  0E64               	movlw	100
  8419  012BB4  6F72               	movwf	___awmod@divisor& (0+255),b
  8420  012BB6  0100               	movlb	0	; () banked
  8421  012BB8  519F               	movf	scale@scl& (0+255),w,b
  8422  012BBA  0100               	movlb	0	; () banked
  8423  012BBC  6F70               	movwf	___awmod@dividend& (0+255),b
  8424  012BBE  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8425  012BC0  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8426  012BC2  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8427  012BC4  EC01  F0AF         	call	___awmod	;wreg free
  8428  012BC8  C070  F076         	movff	?___awmod,___awdiv@dividend
  8429  012BCC  C071  F077         	movff	?___awmod+1,___awdiv@dividend+1
  8430  012BD0  EC83  F0AC         	call	___awdiv	;wreg free
  8431  012BD4  0100               	movlb	0	; () banked
  8432  012BD6  90D8               	bcf	status,0,c
  8433  012BD8  3776               	rlcf	?___awdiv& (0+255),f,b
  8434  012BDA  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8435  012BDC  0100               	movlb	0	; () banked
  8436  012BDE  90D8               	bcf	status,0,c
  8437  012BE0  3776               	rlcf	?___awdiv& (0+255),f,b
  8438  012BE2  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8439  012BE4  0E24               	movlw	36
  8440  012BE6  0100               	movlb	0	; () banked
  8441  012BE8  2776               	addwf	?___awdiv& (0+255),f,b
  8442  012BEA  0E00               	movlw	0
  8443  012BEC  0100               	movlb	0	; () banked
  8444  012BEE  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8445  012BF0  0E27               	movlw	low __powers_
  8446  012BF2  0100               	movlb	0	; () banked
  8447  012BF4  2576               	addwf	?___awdiv& (0+255),w,b
  8448  012BF6  6EF6               	movwf	tblptrl,c
  8449  012BF8  0EFE               	movlw	high __powers_
  8450  012BFA  0100               	movlb	0	; () banked
  8451  012BFC  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8452  012BFE  6EF7               	movwf	tblptrh,c
  8453  012C00                     	if	1	;There are 3 active tblptr bytes
  8454  012C00  6AF8               	clrf	tblptru,c
  8455  012C02  0E00               	movlw	low (__mediumconst shr (0+16))
  8456  012C04  22F8               	addwfc	tblptru,f,c
  8457  012C06                     	endif
  8458  012C06  0009               	tblrd		*+
  8459  012C08  CFF5 F082          	movff	tablat,___flmul@a
  8460  012C0C  0009               	tblrd		*+
  8461  012C0E  CFF5 F083          	movff	tablat,___flmul@a+1
  8462  012C12  0009               	tblrd		*+
  8463  012C14  CFF5 F084          	movff	tablat,___flmul@a+2
  8464  012C18  000A               	tblrd		*-
  8465  012C1A  CFF5 F085          	movff	tablat,___flmul@a+3
  8466  012C1E  0E00               	movlw	0
  8467  012C20  0100               	movlb	0	; () banked
  8468  012C22  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8469  012C24  0E64               	movlw	100
  8470  012C26  6F78               	movwf	___awdiv@divisor& (0+255),b
  8471  012C28  0100               	movlb	0	; () banked
  8472  012C2A  519F               	movf	scale@scl& (0+255),w,b
  8473  012C2C  0100               	movlb	0	; () banked
  8474  012C2E  6F76               	movwf	___awdiv@dividend& (0+255),b
  8475  012C30  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  8476  012C32  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  8477  012C34  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8478  012C36  EC83  F0AC         	call	___awdiv	;wreg free
  8479  012C3A  0100               	movlb	0	; () banked
  8480  012C3C  90D8               	bcf	status,0,c
  8481  012C3E  3776               	rlcf	?___awdiv& (0+255),f,b
  8482  012C40  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8483  012C42  0100               	movlb	0	; () banked
  8484  012C44  90D8               	bcf	status,0,c
  8485  012C46  3776               	rlcf	?___awdiv& (0+255),f,b
  8486  012C48  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8487  012C4A  0E48               	movlw	72
  8488  012C4C  0100               	movlb	0	; () banked
  8489  012C4E  2776               	addwf	?___awdiv& (0+255),f,b
  8490  012C50  0E00               	movlw	0
  8491  012C52  0100               	movlb	0	; () banked
  8492  012C54  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8493  012C56  0E27               	movlw	low __powers_
  8494  012C58  0100               	movlb	0	; () banked
  8495  012C5A  2576               	addwf	?___awdiv& (0+255),w,b
  8496  012C5C  6EF6               	movwf	tblptrl,c
  8497  012C5E  0EFE               	movlw	high __powers_
  8498  012C60  0100               	movlb	0	; () banked
  8499  012C62  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8500  012C64  6EF7               	movwf	tblptrh,c
  8501  012C66                     	if	1	;There are 3 active tblptr bytes
  8502  012C66  6AF8               	clrf	tblptru,c
  8503  012C68  0E00               	movlw	low (__mediumconst shr (0+16))
  8504  012C6A  22F8               	addwfc	tblptru,f,c
  8505  012C6C                     	endif
  8506  012C6C  0009               	tblrd		*+
  8507  012C6E  CFF5 F07E          	movff	tablat,___flmul@b
  8508  012C72  0009               	tblrd		*+
  8509  012C74  CFF5 F07F          	movff	tablat,___flmul@b+1
  8510  012C78  0009               	tblrd		*+
  8511  012C7A  CFF5 F080          	movff	tablat,___flmul@b+2
  8512  012C7E  000A               	tblrd		*-
  8513  012C80  CFF5 F081          	movff	tablat,___flmul@b+3
  8514  012C84  ECE8  F09B         	call	___flmul	;wreg free
  8515  012C88  C07E  F09B         	movff	?___flmul,_scale$4244
  8516  012C8C  C07F  F09C         	movff	?___flmul+1,_scale$4244+1
  8517  012C90  C080  F09D         	movff	?___flmul+2,_scale$4244+2
  8518  012C94  C081  F09E         	movff	?___flmul+3,_scale$4244+3
  8519                           
  8520                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8521  012C98  C09B  F07E         	movff	_scale$4244,___flmul@b
  8522  012C9C  C09C  F07F         	movff	_scale$4244+1,___flmul@b+1
  8523  012CA0  C09D  F080         	movff	_scale$4244+2,___flmul@b+2
  8524  012CA4  C09E  F081         	movff	_scale$4244+3,___flmul@b+3
  8525  012CA8  0E00               	movlw	0
  8526  012CAA  0100               	movlb	0	; () banked
  8527  012CAC  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8528  012CAE  0E0A               	movlw	10
  8529  012CB0  6F72               	movwf	___awmod@divisor& (0+255),b
  8530  012CB2  0100               	movlb	0	; () banked
  8531  012CB4  519F               	movf	scale@scl& (0+255),w,b
  8532  012CB6  0100               	movlb	0	; () banked
  8533  012CB8  6F70               	movwf	___awmod@dividend& (0+255),b
  8534  012CBA  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8535  012CBC  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8536  012CBE  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8537  012CC0  EC01  F0AF         	call	___awmod	;wreg free
  8538  012CC4  0100               	movlb	0	; () banked
  8539  012CC6  90D8               	bcf	status,0,c
  8540  012CC8  3770               	rlcf	?___awmod& (0+255),f,b
  8541  012CCA  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8542  012CCC  0100               	movlb	0	; () banked
  8543  012CCE  90D8               	bcf	status,0,c
  8544  012CD0  3770               	rlcf	?___awmod& (0+255),f,b
  8545  012CD2  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8546  012CD4  0E27               	movlw	low __powers_
  8547  012CD6  0100               	movlb	0	; () banked
  8548  012CD8  2570               	addwf	?___awmod& (0+255),w,b
  8549  012CDA  6EF6               	movwf	tblptrl,c
  8550  012CDC  0EFE               	movlw	high __powers_
  8551  012CDE  0100               	movlb	0	; () banked
  8552  012CE0  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  8553  012CE2  6EF7               	movwf	tblptrh,c
  8554  012CE4                     	if	1	;There are 3 active tblptr bytes
  8555  012CE4  6AF8               	clrf	tblptru,c
  8556  012CE6  0E00               	movlw	low (__mediumconst shr (0+16))
  8557  012CE8  22F8               	addwfc	tblptru,f,c
  8558  012CEA                     	endif
  8559  012CEA  0009               	tblrd		*+
  8560  012CEC  CFF5 F082          	movff	tablat,___flmul@a
  8561  012CF0  0009               	tblrd		*+
  8562  012CF2  CFF5 F083          	movff	tablat,___flmul@a+1
  8563  012CF6  0009               	tblrd		*+
  8564  012CF8  CFF5 F084          	movff	tablat,___flmul@a+2
  8565  012CFC  000A               	tblrd		*-
  8566  012CFE  CFF5 F085          	movff	tablat,___flmul@a+3
  8567  012D02  ECE8  F09B         	call	___flmul	;wreg free
  8568  012D06  C07E  F097         	movff	?___flmul,?_scale
  8569  012D0A  C07F  F098         	movff	?___flmul+1,?_scale+1
  8570  012D0E  C080  F099         	movff	?___flmul+2,?_scale+2
  8571  012D12  C081  F09A         	movff	?___flmul+3,?_scale+3
  8572  012D16  0012               	return	
  8573  012D18                     l8560:
  8574                           
  8575                           ;doprnt.c: 438: else if(scl > 10)
  8576  012D18  0100               	movlb	0	; () banked
  8577  012D1A  519F               	movf	scale@scl& (0+255),w,b
  8578  012D1C  0A80               	xorlw	128
  8579  012D1E  0F75               	addlw	-139
  8580  012D20  A0D8               	btfss	status,0,c
  8581  012D22  D063               	goto	l8566
  8582                           
  8583                           ; BSR set to: 0
  8584                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8585  012D24  0E00               	movlw	0
  8586  012D26  0100               	movlb	0	; () banked
  8587  012D28  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8588  012D2A  0E0A               	movlw	10
  8589  012D2C  6F78               	movwf	___awdiv@divisor& (0+255),b
  8590  012D2E  0100               	movlb	0	; () banked
  8591  012D30  519F               	movf	scale@scl& (0+255),w,b
  8592  012D32  0100               	movlb	0	; () banked
  8593  012D34  6F76               	movwf	___awdiv@dividend& (0+255),b
  8594  012D36  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  8595  012D38  BF76               	btfsc	___awdiv@dividend& (0+255),7,b
  8596  012D3A  0777               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8597  012D3C  EC83  F0AC         	call	___awdiv	;wreg free
  8598  012D40  0100               	movlb	0	; () banked
  8599  012D42  90D8               	bcf	status,0,c
  8600  012D44  3776               	rlcf	?___awdiv& (0+255),f,b
  8601  012D46  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8602  012D48  0100               	movlb	0	; () banked
  8603  012D4A  90D8               	bcf	status,0,c
  8604  012D4C  3776               	rlcf	?___awdiv& (0+255),f,b
  8605  012D4E  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8606  012D50  0E24               	movlw	36
  8607  012D52  0100               	movlb	0	; () banked
  8608  012D54  2776               	addwf	?___awdiv& (0+255),f,b
  8609  012D56  0E00               	movlw	0
  8610  012D58  0100               	movlb	0	; () banked
  8611  012D5A  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8612  012D5C  0E27               	movlw	low __powers_
  8613  012D5E  0100               	movlb	0	; () banked
  8614  012D60  2576               	addwf	?___awdiv& (0+255),w,b
  8615  012D62  6EF6               	movwf	tblptrl,c
  8616  012D64  0EFE               	movlw	high __powers_
  8617  012D66  0100               	movlb	0	; () banked
  8618  012D68  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8619  012D6A  6EF7               	movwf	tblptrh,c
  8620  012D6C                     	if	1	;There are 3 active tblptr bytes
  8621  012D6C  6AF8               	clrf	tblptru,c
  8622  012D6E  0E00               	movlw	low (__mediumconst shr (0+16))
  8623  012D70  22F8               	addwfc	tblptru,f,c
  8624  012D72                     	endif
  8625  012D72  0009               	tblrd		*+
  8626  012D74  CFF5 F07E          	movff	tablat,___flmul@b
  8627  012D78  0009               	tblrd		*+
  8628  012D7A  CFF5 F07F          	movff	tablat,___flmul@b+1
  8629  012D7E  0009               	tblrd		*+
  8630  012D80  CFF5 F080          	movff	tablat,___flmul@b+2
  8631  012D84  000A               	tblrd		*-
  8632  012D86  CFF5 F081          	movff	tablat,___flmul@b+3
  8633  012D8A  0E00               	movlw	0
  8634  012D8C  0100               	movlb	0	; () banked
  8635  012D8E  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8636  012D90  0E0A               	movlw	10
  8637  012D92  6F72               	movwf	___awmod@divisor& (0+255),b
  8638  012D94  0100               	movlb	0	; () banked
  8639  012D96  519F               	movf	scale@scl& (0+255),w,b
  8640  012D98  0100               	movlb	0	; () banked
  8641  012D9A  6F70               	movwf	___awmod@dividend& (0+255),b
  8642  012D9C  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8643  012D9E  BF70               	btfsc	___awmod@dividend& (0+255),7,b
  8644  012DA0  0771               	decf	(___awmod@dividend+1)& (0+255),f,b
  8645  012DA2  EC01  F0AF         	call	___awmod	;wreg free
  8646  012DA6  0100               	movlb	0	; () banked
  8647  012DA8  90D8               	bcf	status,0,c
  8648  012DAA  3770               	rlcf	?___awmod& (0+255),f,b
  8649  012DAC  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8650  012DAE  0100               	movlb	0	; () banked
  8651  012DB0  90D8               	bcf	status,0,c
  8652  012DB2  3770               	rlcf	?___awmod& (0+255),f,b
  8653  012DB4  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8654  012DB6  0E27               	movlw	low __powers_
  8655  012DB8  0100               	movlb	0	; () banked
  8656  012DBA  2570               	addwf	?___awmod& (0+255),w,b
  8657  012DBC  6EF6               	movwf	tblptrl,c
  8658  012DBE  0EFE               	movlw	high __powers_
  8659  012DC0  0100               	movlb	0	; () banked
  8660  012DC2  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  8661  012DC4  6EF7               	movwf	tblptrh,c
  8662  012DC6                     	if	1	;There are 3 active tblptr bytes
  8663  012DC6  6AF8               	clrf	tblptru,c
  8664  012DC8  0E00               	movlw	low (__mediumconst shr (0+16))
  8665  012DCA  22F8               	addwfc	tblptru,f,c
  8666  012DCC                     	endif
  8667  012DCC  0009               	tblrd		*+
  8668  012DCE  CFF5 F082          	movff	tablat,___flmul@a
  8669  012DD2  0009               	tblrd		*+
  8670  012DD4  CFF5 F083          	movff	tablat,___flmul@a+1
  8671  012DD8  0009               	tblrd		*+
  8672  012DDA  CFF5 F084          	movff	tablat,___flmul@a+2
  8673  012DDE  000A               	tblrd		*-
  8674  012DE0  CFF5 F085          	movff	tablat,___flmul@a+3
  8675  012DE4  ECE8  F09B         	call	___flmul	;wreg free
  8676  012DE8  D78E               	goto	L8
  8677  012DEA                     l8566:
  8678                           
  8679                           ;doprnt.c: 440: return _powers_[scl];
  8680  012DEA  0100               	movlb	0	; () banked
  8681  012DEC  519F               	movf	scale@scl& (0+255),w,b
  8682  012DEE  0D04               	mullw	4
  8683  012DF0  0E27               	movlw	low __powers_
  8684  012DF2  24F3               	addwf	prodl,w,c
  8685  012DF4  6EF6               	movwf	tblptrl,c
  8686  012DF6  0EFE               	movlw	high __powers_
  8687  012DF8  20F4               	addwfc	prodh,w,c
  8688  012DFA  6EF7               	movwf	tblptrh,c
  8689  012DFC                     	if	1	;There are 3 active tblptr bytes
  8690  012DFC  6AF8               	clrf	tblptru,c
  8691  012DFE  0E00               	movlw	low (__mediumconst shr (0+16))
  8692  012E00  22F8               	addwfc	tblptru,f,c
  8693  012E02                     	endif
  8694  012E02  0009               	tblrd		*+
  8695  012E04  CFF5 F097          	movff	tablat,?_scale
  8696  012E08  0009               	tblrd		*+
  8697  012E0A  CFF5 F098          	movff	tablat,?_scale+1
  8698  012E0E  0009               	tblrd		*+
  8699  012E10  CFF5 F099          	movff	tablat,?_scale+2
  8700  012E14  000A               	tblrd		*-
  8701  012E16  CFF5 F09A          	movff	tablat,?_scale+3
  8702  012E1A  0012               	return	
  8703  012E1C                     __end_of_scale:
  8704                           	opt stack 0
  8705                           tblptru	equ	0xFF8
  8706                           tblptrh	equ	0xFF7
  8707                           tblptrl	equ	0xFF6
  8708                           tablat	equ	0xFF5
  8709                           prodh	equ	0xFF4
  8710                           prodl	equ	0xFF3
  8711                           intcon	equ	0xFF2
  8712                           postinc0	equ	0xFEE
  8713                           wreg	equ	0xFE8
  8714                           indf2	equ	0xFDF
  8715                           postinc2	equ	0xFDE
  8716                           fsr2h	equ	0xFDA
  8717                           fsr2l	equ	0xFD9
  8718                           status	equ	0xFD8
  8719                           
  8720 ;; *************** function _isdigit *****************
  8721 ;; Defined at:
  8722 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  8723 ;; Parameters:    Size  Location     Type
  8724 ;;  c               1    wreg     unsigned char 
  8725 ;; Auto vars:     Size  Location     Type
  8726 ;;  c               1   18[BANK0 ] unsigned char 
  8727 ;; Return value:  Size  Location     Type
  8728 ;;		None               void
  8729 ;; Registers used:
  8730 ;;		wreg, status,2, status,0
  8731 ;; Tracked objects:
  8732 ;;		On entry : 0/0
  8733 ;;		On exit  : 0/0
  8734 ;;		Unchanged: 0/0
  8735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8737 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8738 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8739 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8740 ;;Total ram usage:        3 bytes
  8741 ;; Hardware stack levels used:    1
  8742 ;; Hardware stack levels required when called:    9
  8743 ;; This function calls:
  8744 ;;		Nothing
  8745 ;; This function is called by:
  8746 ;;		_sprintf
  8747 ;; This function uses a non-reentrant model
  8748 ;;
  8749                           
  8750                           	psect	text10
  8751  016642                     __ptext10:
  8752                           	opt stack 0
  8753  016642                     _isdigit:
  8754                           	opt stack 19
  8755                           
  8756                           ;incstack = 0
  8757                           ;isdigit@c stored from wreg
  8758  016642  0100               	movlb	0	; () banked
  8759  016644  6F72               	movwf	isdigit@c& (0+255),b
  8760  016646  0E00               	movlw	0
  8761  016648  0100               	movlb	0	; () banked
  8762  01664A  6F71               	movwf	_isdigit$3828& (0+255),b
  8763                           
  8764                           ; BSR set to: 0
  8765  01664C  0E3A               	movlw	58
  8766  01664E  0100               	movlb	0	; () banked
  8767  016650  6172               	cpfslt	isdigit@c& (0+255),b
  8768  016652  D007               	goto	l8578
  8769                           
  8770                           ; BSR set to: 0
  8771  016654  0E2F               	movlw	47
  8772  016656  0100               	movlb	0	; () banked
  8773  016658  6572               	cpfsgt	isdigit@c& (0+255),b
  8774  01665A  D003               	goto	l8578
  8775                           
  8776                           ; BSR set to: 0
  8777  01665C  0E01               	movlw	1
  8778  01665E  0100               	movlb	0	; () banked
  8779  016660  6F71               	movwf	_isdigit$3828& (0+255),b
  8780  016662                     l8578:
  8781                           
  8782                           ; BSR set to: 0
  8783  016662  C071  F070         	movff	_isdigit$3828,??_isdigit
  8784  016666  0100               	movlb	0	; () banked
  8785  016668  3170               	rrcf	??_isdigit& (0+255),w,b
  8786  01666A  0012               	return	
  8787  01666C                     __end_of_isdigit:
  8788                           	opt stack 0
  8789                           tblptru	equ	0xFF8
  8790                           tblptrh	equ	0xFF7
  8791                           tblptrl	equ	0xFF6
  8792                           tablat	equ	0xFF5
  8793                           prodh	equ	0xFF4
  8794                           prodl	equ	0xFF3
  8795                           intcon	equ	0xFF2
  8796                           postinc0	equ	0xFEE
  8797                           wreg	equ	0xFE8
  8798                           indf2	equ	0xFDF
  8799                           postinc2	equ	0xFDE
  8800                           fsr2h	equ	0xFDA
  8801                           fsr2l	equ	0xFD9
  8802                           status	equ	0xFD8
  8803                           
  8804 ;; *************** function _fround *****************
  8805 ;; Defined at:
  8806 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  8807 ;; Parameters:    Size  Location     Type
  8808 ;;  prec            1    wreg     unsigned char 
  8809 ;; Auto vars:     Size  Location     Type
  8810 ;;  prec            1   67[BANK0 ] unsigned char 
  8811 ;; Return value:  Size  Location     Type
  8812 ;;                  4   55[BANK0 ] unsigned char 
  8813 ;; Registers used:
  8814 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8815 ;; Tracked objects:
  8816 ;;		On entry : 0/0
  8817 ;;		On exit  : 0/0
  8818 ;;		Unchanged: 0/0
  8819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8820 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8821 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8823 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8824 ;;Total ram usage:       13 bytes
  8825 ;; Hardware stack levels used:    1
  8826 ;; Hardware stack levels required when called:   10
  8827 ;; This function calls:
  8828 ;;		___awdiv
  8829 ;;		___awmod
  8830 ;;		___flmul
  8831 ;; This function is called by:
  8832 ;;		_sprintf
  8833 ;; This function uses a non-reentrant model
  8834 ;;
  8835                           
  8836                           	psect	text11
  8837  0143D4                     __ptext11:
  8838                           	opt stack 0
  8839  0143D4                     _fround:
  8840                           	opt stack 18
  8841                           
  8842                           ; BSR set to: 0
  8843                           ;incstack = 0
  8844                           ;fround@prec stored from wreg
  8845  0143D4  0100               	movlb	0	; () banked
  8846  0143D6  6FA3               	movwf	fround@prec& (0+255),b
  8847                           
  8848                           ;doprnt.c: 413: if(prec>=110)
  8849  0143D8  0E6D               	movlw	109
  8850  0143DA  0100               	movlb	0	; () banked
  8851  0143DC  65A3               	cpfsgt	fround@prec& (0+255),b
  8852  0143DE  D0CD               	goto	l8520
  8853                           
  8854                           ; BSR set to: 0
  8855                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8856  0143E0  0E00               	movlw	0
  8857  0143E2  0100               	movlb	0	; () banked
  8858  0143E4  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8859  0143E6  0E0A               	movlw	10
  8860  0143E8  6F78               	movwf	___awdiv@divisor& (0+255),b
  8861  0143EA  0E00               	movlw	0
  8862  0143EC  0100               	movlb	0	; () banked
  8863  0143EE  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8864  0143F0  0E64               	movlw	100
  8865  0143F2  6F72               	movwf	___awmod@divisor& (0+255),b
  8866  0143F4  C0A3  F070         	movff	fround@prec,___awmod@dividend
  8867  0143F8  0100               	movlb	0	; () banked
  8868  0143FA  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8869  0143FC  EC01  F0AF         	call	___awmod	;wreg free
  8870  014400  C070  F076         	movff	?___awmod,___awdiv@dividend
  8871  014404  C071  F077         	movff	?___awmod+1,___awdiv@dividend+1
  8872  014408  EC83  F0AC         	call	___awdiv	;wreg free
  8873  01440C  0100               	movlb	0	; () banked
  8874  01440E  90D8               	bcf	status,0,c
  8875  014410  3776               	rlcf	?___awdiv& (0+255),f,b
  8876  014412  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8877  014414  0100               	movlb	0	; () banked
  8878  014416  90D8               	bcf	status,0,c
  8879  014418  3776               	rlcf	?___awdiv& (0+255),f,b
  8880  01441A  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8881  01441C  0E24               	movlw	36
  8882  01441E  0100               	movlb	0	; () banked
  8883  014420  2776               	addwf	?___awdiv& (0+255),f,b
  8884  014422  0E00               	movlw	0
  8885  014424  0100               	movlb	0	; () banked
  8886  014426  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8887  014428  0EF3               	movlw	low __npowers_
  8888  01442A  0100               	movlb	0	; () banked
  8889  01442C  2576               	addwf	?___awdiv& (0+255),w,b
  8890  01442E  6EF6               	movwf	tblptrl,c
  8891  014430  0EFD               	movlw	high __npowers_
  8892  014432  0100               	movlb	0	; () banked
  8893  014434  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8894  014436  6EF7               	movwf	tblptrh,c
  8895  014438                     	if	1	;There are 3 active tblptr bytes
  8896  014438  6AF8               	clrf	tblptru,c
  8897  01443A  0E00               	movlw	low (__mediumconst shr (0+16))
  8898  01443C  22F8               	addwfc	tblptru,f,c
  8899  01443E                     	endif
  8900  01443E  0009               	tblrd		*+
  8901  014440  CFF5 F082          	movff	tablat,___flmul@a
  8902  014444  0009               	tblrd		*+
  8903  014446  CFF5 F083          	movff	tablat,___flmul@a+1
  8904  01444A  0009               	tblrd		*+
  8905  01444C  CFF5 F084          	movff	tablat,___flmul@a+2
  8906  014450  000A               	tblrd		*-
  8907  014452  CFF5 F085          	movff	tablat,___flmul@a+3
  8908  014456  0E00               	movlw	0
  8909  014458  0100               	movlb	0	; () banked
  8910  01445A  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  8911  01445C  0E64               	movlw	100
  8912  01445E  6F78               	movwf	___awdiv@divisor& (0+255),b
  8913  014460  C0A3  F076         	movff	fround@prec,___awdiv@dividend
  8914  014464  0100               	movlb	0	; () banked
  8915  014466  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  8916  014468  EC83  F0AC         	call	___awdiv	;wreg free
  8917  01446C  0100               	movlb	0	; () banked
  8918  01446E  90D8               	bcf	status,0,c
  8919  014470  3776               	rlcf	?___awdiv& (0+255),f,b
  8920  014472  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8921  014474  0100               	movlb	0	; () banked
  8922  014476  90D8               	bcf	status,0,c
  8923  014478  3776               	rlcf	?___awdiv& (0+255),f,b
  8924  01447A  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  8925  01447C  0E48               	movlw	72
  8926  01447E  0100               	movlb	0	; () banked
  8927  014480  2776               	addwf	?___awdiv& (0+255),f,b
  8928  014482  0E00               	movlw	0
  8929  014484  0100               	movlb	0	; () banked
  8930  014486  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  8931  014488  0EF3               	movlw	low __npowers_
  8932  01448A  0100               	movlb	0	; () banked
  8933  01448C  2576               	addwf	?___awdiv& (0+255),w,b
  8934  01448E  6EF6               	movwf	tblptrl,c
  8935  014490  0EFD               	movlw	high __npowers_
  8936  014492  0100               	movlb	0	; () banked
  8937  014494  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  8938  014496  6EF7               	movwf	tblptrh,c
  8939  014498                     	if	1	;There are 3 active tblptr bytes
  8940  014498  6AF8               	clrf	tblptru,c
  8941  01449A  0E00               	movlw	low (__mediumconst shr (0+16))
  8942  01449C  22F8               	addwfc	tblptru,f,c
  8943  01449E                     	endif
  8944  01449E  0009               	tblrd		*+
  8945  0144A0  CFF5 F07E          	movff	tablat,___flmul@b
  8946  0144A4  0009               	tblrd		*+
  8947  0144A6  CFF5 F07F          	movff	tablat,___flmul@b+1
  8948  0144AA  0009               	tblrd		*+
  8949  0144AC  CFF5 F080          	movff	tablat,___flmul@b+2
  8950  0144B0  000A               	tblrd		*-
  8951  0144B2  CFF5 F081          	movff	tablat,___flmul@b+3
  8952  0144B6  ECE8  F09B         	call	___flmul	;wreg free
  8953  0144BA  C07E  F09F         	movff	?___flmul,_fround$4242
  8954  0144BE  C07F  F0A0         	movff	?___flmul+1,_fround$4242+1
  8955  0144C2  C080  F0A1         	movff	?___flmul+2,_fround$4242+2
  8956  0144C6  C081  F0A2         	movff	?___flmul+3,_fround$4242+3
  8957                           
  8958                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8959  0144CA  0E00               	movlw	0
  8960  0144CC  0100               	movlb	0	; () banked
  8961  0144CE  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  8962  0144D0  0E0A               	movlw	10
  8963  0144D2  6F72               	movwf	___awmod@divisor& (0+255),b
  8964  0144D4  C0A3  F070         	movff	fround@prec,___awmod@dividend
  8965  0144D8  0100               	movlb	0	; () banked
  8966  0144DA  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  8967  0144DC  EC01  F0AF         	call	___awmod	;wreg free
  8968  0144E0  0100               	movlb	0	; () banked
  8969  0144E2  90D8               	bcf	status,0,c
  8970  0144E4  3770               	rlcf	?___awmod& (0+255),f,b
  8971  0144E6  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8972  0144E8  0100               	movlb	0	; () banked
  8973  0144EA  90D8               	bcf	status,0,c
  8974  0144EC  3770               	rlcf	?___awmod& (0+255),f,b
  8975  0144EE  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  8976  0144F0  0EF3               	movlw	low __npowers_
  8977  0144F2  0100               	movlb	0	; () banked
  8978  0144F4  2570               	addwf	?___awmod& (0+255),w,b
  8979  0144F6  6EF6               	movwf	tblptrl,c
  8980  0144F8  0EFD               	movlw	high __npowers_
  8981  0144FA  0100               	movlb	0	; () banked
  8982  0144FC  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  8983  0144FE  6EF7               	movwf	tblptrh,c
  8984  014500                     	if	1	;There are 3 active tblptr bytes
  8985  014500  6AF8               	clrf	tblptru,c
  8986  014502  0E00               	movlw	low (__mediumconst shr (0+16))
  8987  014504  22F8               	addwfc	tblptru,f,c
  8988  014506                     	endif
  8989  014506  0009               	tblrd		*+
  8990  014508  CFF5 F082          	movff	tablat,___flmul@a
  8991  01450C  0009               	tblrd		*+
  8992  01450E  CFF5 F083          	movff	tablat,___flmul@a+1
  8993  014512  0009               	tblrd		*+
  8994  014514  CFF5 F084          	movff	tablat,___flmul@a+2
  8995  014518  000A               	tblrd		*-
  8996  01451A  CFF5 F085          	movff	tablat,___flmul@a+3
  8997  01451E  C09F  F07E         	movff	_fround$4242,___flmul@b
  8998  014522  C0A0  F07F         	movff	_fround$4242+1,___flmul@b+1
  8999  014526  C0A1  F080         	movff	_fround$4242+2,___flmul@b+2
  9000  01452A  C0A2  F081         	movff	_fround$4242+3,___flmul@b+3
  9001  01452E  ECE8  F09B         	call	___flmul	;wreg free
  9002  014532  C07E  F09B         	movff	?___flmul,_fround$4243
  9003  014536  C07F  F09C         	movff	?___flmul+1,_fround$4243+1
  9004  01453A  C080  F09D         	movff	?___flmul+2,_fround$4243+2
  9005  01453E  C081  F09E         	movff	?___flmul+3,_fround$4243+3
  9006                           
  9007                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9008  014542  C09B  F07E         	movff	_fround$4243,___flmul@b
  9009  014546  C09C  F07F         	movff	_fround$4243+1,___flmul@b+1
  9010  01454A  C09D  F080         	movff	_fround$4243+2,___flmul@b+2
  9011  01454E  C09E  F081         	movff	_fround$4243+3,___flmul@b+3
  9012  014552  0E00               	movlw	0
  9013  014554  0100               	movlb	0	; () banked
  9014  014556  6F82               	movwf	___flmul@a& (0+255),b
  9015  014558  0E00               	movlw	0
  9016  01455A  6F83               	movwf	(___flmul@a+1)& (0+255),b
  9017  01455C  0E00               	movlw	0
  9018  01455E  6F84               	movwf	(___flmul@a+2)& (0+255),b
  9019  014560  0E3F               	movlw	63
  9020  014562  6F85               	movwf	(___flmul@a+3)& (0+255),b
  9021  014564  ECE8  F09B         	call	___flmul	;wreg free
  9022  014568  C07E  F097         	movff	?___flmul,?_fround
  9023  01456C  C07F  F098         	movff	?___flmul+1,?_fround+1
  9024  014570  C080  F099         	movff	?___flmul+2,?_fround+2
  9025  014574  C081  F09A         	movff	?___flmul+3,?_fround+3
  9026  014578  0012               	return	
  9027  01457A                     l8520:
  9028                           
  9029                           ;doprnt.c: 415: else if(prec > 10)
  9030  01457A  0E0A               	movlw	10
  9031  01457C  0100               	movlb	0	; () banked
  9032  01457E  65A3               	cpfsgt	fround@prec& (0+255),b
  9033  014580  D078               	goto	l8528
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9037  014582  0E00               	movlw	0
  9038  014584  0100               	movlb	0	; () banked
  9039  014586  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  9040  014588  0E0A               	movlw	10
  9041  01458A  6F72               	movwf	___awmod@divisor& (0+255),b
  9042  01458C  C0A3  F070         	movff	fround@prec,___awmod@dividend
  9043  014590  0100               	movlb	0	; () banked
  9044  014592  6B71               	clrf	(___awmod@dividend+1)& (0+255),b
  9045  014594  EC01  F0AF         	call	___awmod	;wreg free
  9046  014598  0100               	movlb	0	; () banked
  9047  01459A  90D8               	bcf	status,0,c
  9048  01459C  3770               	rlcf	?___awmod& (0+255),f,b
  9049  01459E  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9050  0145A0  0100               	movlb	0	; () banked
  9051  0145A2  90D8               	bcf	status,0,c
  9052  0145A4  3770               	rlcf	?___awmod& (0+255),f,b
  9053  0145A6  3771               	rlcf	(?___awmod+1)& (0+255),f,b
  9054  0145A8  0EF3               	movlw	low __npowers_
  9055  0145AA  0100               	movlb	0	; () banked
  9056  0145AC  2570               	addwf	?___awmod& (0+255),w,b
  9057  0145AE  6EF6               	movwf	tblptrl,c
  9058  0145B0  0EFD               	movlw	high __npowers_
  9059  0145B2  0100               	movlb	0	; () banked
  9060  0145B4  2171               	addwfc	(?___awmod+1)& (0+255),w,b
  9061  0145B6  6EF7               	movwf	tblptrh,c
  9062  0145B8                     	if	1	;There are 3 active tblptr bytes
  9063  0145B8  6AF8               	clrf	tblptru,c
  9064  0145BA  0E00               	movlw	low (__mediumconst shr (0+16))
  9065  0145BC  22F8               	addwfc	tblptru,f,c
  9066  0145BE                     	endif
  9067  0145BE  0009               	tblrd		*+
  9068  0145C0  CFF5 F082          	movff	tablat,___flmul@a
  9069  0145C4  0009               	tblrd		*+
  9070  0145C6  CFF5 F083          	movff	tablat,___flmul@a+1
  9071  0145CA  0009               	tblrd		*+
  9072  0145CC  CFF5 F084          	movff	tablat,___flmul@a+2
  9073  0145D0  000A               	tblrd		*-
  9074  0145D2  CFF5 F085          	movff	tablat,___flmul@a+3
  9075  0145D6  0E00               	movlw	0
  9076  0145D8  0100               	movlb	0	; () banked
  9077  0145DA  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
  9078  0145DC  0E0A               	movlw	10
  9079  0145DE  6F78               	movwf	___awdiv@divisor& (0+255),b
  9080  0145E0  C0A3  F076         	movff	fround@prec,___awdiv@dividend
  9081  0145E4  0100               	movlb	0	; () banked
  9082  0145E6  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
  9083  0145E8  EC83  F0AC         	call	___awdiv	;wreg free
  9084  0145EC  0100               	movlb	0	; () banked
  9085  0145EE  90D8               	bcf	status,0,c
  9086  0145F0  3776               	rlcf	?___awdiv& (0+255),f,b
  9087  0145F2  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9088  0145F4  0100               	movlb	0	; () banked
  9089  0145F6  90D8               	bcf	status,0,c
  9090  0145F8  3776               	rlcf	?___awdiv& (0+255),f,b
  9091  0145FA  3777               	rlcf	(?___awdiv+1)& (0+255),f,b
  9092  0145FC  0E24               	movlw	36
  9093  0145FE  0100               	movlb	0	; () banked
  9094  014600  2776               	addwf	?___awdiv& (0+255),f,b
  9095  014602  0E00               	movlw	0
  9096  014604  0100               	movlb	0	; () banked
  9097  014606  2377               	addwfc	(?___awdiv+1)& (0+255),f,b
  9098  014608  0EF3               	movlw	low __npowers_
  9099  01460A  0100               	movlb	0	; () banked
  9100  01460C  2576               	addwf	?___awdiv& (0+255),w,b
  9101  01460E  6EF6               	movwf	tblptrl,c
  9102  014610  0EFD               	movlw	high __npowers_
  9103  014612  0100               	movlb	0	; () banked
  9104  014614  2177               	addwfc	(?___awdiv+1)& (0+255),w,b
  9105  014616  6EF7               	movwf	tblptrh,c
  9106  014618                     	if	1	;There are 3 active tblptr bytes
  9107  014618  6AF8               	clrf	tblptru,c
  9108  01461A  0E00               	movlw	low (__mediumconst shr (0+16))
  9109  01461C  22F8               	addwfc	tblptru,f,c
  9110  01461E                     	endif
  9111  01461E  0009               	tblrd		*+
  9112  014620  CFF5 F07E          	movff	tablat,___flmul@b
  9113  014624  0009               	tblrd		*+
  9114  014626  CFF5 F07F          	movff	tablat,___flmul@b+1
  9115  01462A  0009               	tblrd		*+
  9116  01462C  CFF5 F080          	movff	tablat,___flmul@b+2
  9117  014630  000A               	tblrd		*-
  9118  014632  CFF5 F081          	movff	tablat,___flmul@b+3
  9119  014636  ECE8  F09B         	call	___flmul	;wreg free
  9120  01463A  C07E  F09F         	movff	?___flmul,_fround$4242
  9121  01463E  C07F  F0A0         	movff	?___flmul+1,_fround$4242+1
  9122  014642  C080  F0A1         	movff	?___flmul+2,_fround$4242+2
  9123  014646  C081  F0A2         	movff	?___flmul+3,_fround$4242+3
  9124                           
  9125                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9126  01464A  C09F  F07E         	movff	_fround$4242,___flmul@b
  9127  01464E  C0A0  F07F         	movff	_fround$4242+1,___flmul@b+1
  9128  014652  C0A1  F080         	movff	_fround$4242+2,___flmul@b+2
  9129  014656  C0A2  F081         	movff	_fround$4242+3,___flmul@b+3
  9130  01465A  0E00               	movlw	0
  9131  01465C  0100               	movlb	0	; () banked
  9132  01465E  6F82               	movwf	___flmul@a& (0+255),b
  9133  014660  0E00               	movlw	0
  9134  014662  6F83               	movwf	(___flmul@a+1)& (0+255),b
  9135  014664  0E00               	movlw	0
  9136  014666  6F84               	movwf	(___flmul@a+2)& (0+255),b
  9137  014668  0E3F               	movlw	63
  9138  01466A  6F85               	movwf	(___flmul@a+3)& (0+255),b
  9139  01466C  ECE8  F09B         	call	___flmul	;wreg free
  9140  014670  D77B               	goto	L9
  9141  014672                     l8528:
  9142                           
  9143                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9144  014672  0100               	movlb	0	; () banked
  9145  014674  51A3               	movf	fround@prec& (0+255),w,b
  9146  014676  0D04               	mullw	4
  9147  014678  0EF3               	movlw	low __npowers_
  9148  01467A  24F3               	addwf	prodl,w,c
  9149  01467C  6EF6               	movwf	tblptrl,c
  9150  01467E  0EFD               	movlw	high __npowers_
  9151  014680  20F4               	addwfc	prodh,w,c
  9152  014682  6EF7               	movwf	tblptrh,c
  9153  014684                     	if	1	;There are 3 active tblptr bytes
  9154  014684  6AF8               	clrf	tblptru,c
  9155  014686  0E00               	movlw	low (__mediumconst shr (0+16))
  9156  014688  22F8               	addwfc	tblptru,f,c
  9157  01468A                     	endif
  9158  01468A  0009               	tblrd		*+
  9159  01468C  CFF5 F07E          	movff	tablat,___flmul@b
  9160  014690  0009               	tblrd		*+
  9161  014692  CFF5 F07F          	movff	tablat,___flmul@b+1
  9162  014696  0009               	tblrd		*+
  9163  014698  CFF5 F080          	movff	tablat,___flmul@b+2
  9164  01469C  000A               	tblrd		*-
  9165  01469E  CFF5 F081          	movff	tablat,___flmul@b+3
  9166  0146A2  0E00               	movlw	0
  9167  0146A4  0100               	movlb	0	; () banked
  9168  0146A6  6F82               	movwf	___flmul@a& (0+255),b
  9169  0146A8  0E00               	movlw	0
  9170  0146AA  6F83               	movwf	(___flmul@a+1)& (0+255),b
  9171  0146AC  0E00               	movlw	0
  9172  0146AE  6F84               	movwf	(___flmul@a+2)& (0+255),b
  9173  0146B0  0E3F               	movlw	63
  9174  0146B2  6F85               	movwf	(___flmul@a+3)& (0+255),b
  9175  0146B4  ECE8  F09B         	call	___flmul	;wreg free
  9176  0146B8  C07E  F097         	movff	?___flmul,?_fround
  9177  0146BC  C07F  F098         	movff	?___flmul+1,?_fround+1
  9178  0146C0  C080  F099         	movff	?___flmul+2,?_fround+2
  9179  0146C4  C081  F09A         	movff	?___flmul+3,?_fround+3
  9180  0146C8  0012               	return	
  9181  0146CA                     __end_of_fround:
  9182                           	opt stack 0
  9183                           tblptru	equ	0xFF8
  9184                           tblptrh	equ	0xFF7
  9185                           tblptrl	equ	0xFF6
  9186                           tablat	equ	0xFF5
  9187                           prodh	equ	0xFF4
  9188                           prodl	equ	0xFF3
  9189                           intcon	equ	0xFF2
  9190                           postinc0	equ	0xFEE
  9191                           wreg	equ	0xFE8
  9192                           indf2	equ	0xFDF
  9193                           postinc2	equ	0xFDE
  9194                           fsr2h	equ	0xFDA
  9195                           fsr2l	equ	0xFD9
  9196                           status	equ	0xFD8
  9197                           
  9198 ;; *************** function ___flmul *****************
  9199 ;; Defined at:
  9200 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;  b               4   30[BANK0 ] unsigned char 
  9203 ;;  a               4   34[BANK0 ] unsigned char 
  9204 ;; Auto vars:     Size  Location     Type
  9205 ;;  prod            4   49[BANK0 ] struct .
  9206 ;;  grs             4   44[BANK0 ] unsigned long 
  9207 ;;  temp            2   53[BANK0 ] struct .
  9208 ;;  bexp            1   48[BANK0 ] unsigned char 
  9209 ;;  aexp            1   43[BANK0 ] unsigned char 
  9210 ;;  sign            1   42[BANK0 ] unsigned char 
  9211 ;; Return value:  Size  Location     Type
  9212 ;;                  4   30[BANK0 ] unsigned char 
  9213 ;; Registers used:
  9214 ;;		wreg, status,2, status,0, prodl, prodh
  9215 ;; Tracked objects:
  9216 ;;		On entry : 0/0
  9217 ;;		On exit  : 0/0
  9218 ;;		Unchanged: 0/0
  9219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9220 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9221 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9222 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9223 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9224 ;;Total ram usage:       25 bytes
  9225 ;; Hardware stack levels used:    1
  9226 ;; Hardware stack levels required when called:    9
  9227 ;; This function calls:
  9228 ;;		Nothing
  9229 ;; This function is called by:
  9230 ;;		_main
  9231 ;;		_fround
  9232 ;;		_scale
  9233 ;;		_sprintf
  9234 ;; This function uses a non-reentrant model
  9235 ;;
  9236                           
  9237                           	psect	text12
  9238  0137D0                     __ptext12:
  9239                           	opt stack 0
  9240  0137D0                     ___flmul:
  9241                           	opt stack 21
  9242                           
  9243                           ;incstack = 0
  9244  0137D0  0100               	movlb	0	; () banked
  9245  0137D2  5181               	movf	(___flmul@b+3)& (0+255),w,b
  9246  0137D4  0B80               	andlw	128
  9247  0137D6  0100               	movlb	0	; () banked
  9248  0137D8  6F8A               	movwf	___flmul@sign& (0+255),b
  9249  0137DA  0100               	movlb	0	; () banked
  9250  0137DC  5181               	movf	(___flmul@b+3)& (0+255),w,b
  9251  0137DE  2581               	addwf	(___flmul@b+3)& (0+255),w,b
  9252  0137E0  0100               	movlb	0	; () banked
  9253  0137E2  6F90               	movwf	___flmul@bexp& (0+255),b
  9254                           
  9255                           ; BSR set to: 0
  9256  0137E4  0100               	movlb	0	; () banked
  9257  0137E6  AF80               	btfss	(___flmul@b+2)& (0+255),7,b
  9258  0137E8  D002               	goto	l8274
  9259                           
  9260                           ; BSR set to: 0
  9261  0137EA  0100               	movlb	0	; () banked
  9262  0137EC  8190               	bsf	___flmul@bexp& (0+255),0,b
  9263  0137EE                     l8274:
  9264                           
  9265                           ; BSR set to: 0
  9266  0137EE  0100               	movlb	0	; () banked
  9267  0137F0  5190               	movf	___flmul@bexp& (0+255),w,b
  9268  0137F2  0100               	movlb	0	; () banked
  9269  0137F4  B4D8               	btfsc	status,2,c
  9270  0137F6  D010               	goto	l8282
  9271                           
  9272                           ; BSR set to: 0
  9273  0137F8  0100               	movlb	0	; () banked
  9274  0137FA  2990               	incf	___flmul@bexp& (0+255),w,b
  9275  0137FC  A4D8               	btfss	status,2,c
  9276  0137FE  D009               	goto	l8280
  9277                           
  9278                           ; BSR set to: 0
  9279  013800  0E00               	movlw	0
  9280  013802  0100               	movlb	0	; () banked
  9281  013804  6F7E               	movwf	___flmul@b& (0+255),b
  9282  013806  0E00               	movlw	0
  9283  013808  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  9284  01380A  0E00               	movlw	0
  9285  01380C  6F80               	movwf	(___flmul@b+2)& (0+255),b
  9286  01380E  0E00               	movlw	0
  9287  013810  6F81               	movwf	(___flmul@b+3)& (0+255),b
  9288  013812                     l8280:
  9289                           
  9290                           ; BSR set to: 0
  9291  013812  0100               	movlb	0	; () banked
  9292  013814  8F80               	bsf	(___flmul@b+2)& (0+255),7,b
  9293  013816  D009               	goto	l8284
  9294  013818                     l8282:
  9295                           
  9296                           ; BSR set to: 0
  9297  013818  0E00               	movlw	0
  9298  01381A  0100               	movlb	0	; () banked
  9299  01381C  6F7E               	movwf	___flmul@b& (0+255),b
  9300  01381E  0E00               	movlw	0
  9301  013820  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  9302  013822  0E00               	movlw	0
  9303  013824  6F80               	movwf	(___flmul@b+2)& (0+255),b
  9304  013826  0E00               	movlw	0
  9305  013828  6F81               	movwf	(___flmul@b+3)& (0+255),b
  9306  01382A                     l8284:
  9307                           
  9308                           ; BSR set to: 0
  9309  01382A  0100               	movlb	0	; () banked
  9310  01382C  5185               	movf	(___flmul@a+3)& (0+255),w,b
  9311  01382E  0B80               	andlw	128
  9312  013830  0100               	movlb	0	; () banked
  9313  013832  1B8A               	xorwf	___flmul@sign& (0+255),f,b
  9314                           
  9315                           ; BSR set to: 0
  9316  013834  0100               	movlb	0	; () banked
  9317  013836  5185               	movf	(___flmul@a+3)& (0+255),w,b
  9318  013838  2585               	addwf	(___flmul@a+3)& (0+255),w,b
  9319  01383A  0100               	movlb	0	; () banked
  9320  01383C  6F8B               	movwf	___flmul@aexp& (0+255),b
  9321                           
  9322                           ; BSR set to: 0
  9323  01383E  0100               	movlb	0	; () banked
  9324  013840  AF84               	btfss	(___flmul@a+2)& (0+255),7,b
  9325  013842  D002               	goto	l8292
  9326                           
  9327                           ; BSR set to: 0
  9328  013844  0100               	movlb	0	; () banked
  9329  013846  818B               	bsf	___flmul@aexp& (0+255),0,b
  9330  013848                     l8292:
  9331                           
  9332                           ; BSR set to: 0
  9333  013848  0100               	movlb	0	; () banked
  9334  01384A  518B               	movf	___flmul@aexp& (0+255),w,b
  9335  01384C  0100               	movlb	0	; () banked
  9336  01384E  B4D8               	btfsc	status,2,c
  9337  013850  D010               	goto	l8300
  9338                           
  9339                           ; BSR set to: 0
  9340  013852  0100               	movlb	0	; () banked
  9341  013854  298B               	incf	___flmul@aexp& (0+255),w,b
  9342  013856  A4D8               	btfss	status,2,c
  9343  013858  D009               	goto	l8298
  9344                           
  9345                           ; BSR set to: 0
  9346  01385A  0E00               	movlw	0
  9347  01385C  0100               	movlb	0	; () banked
  9348  01385E  6F82               	movwf	___flmul@a& (0+255),b
  9349  013860  0E00               	movlw	0
  9350  013862  6F83               	movwf	(___flmul@a+1)& (0+255),b
  9351  013864  0E00               	movlw	0
  9352  013866  6F84               	movwf	(___flmul@a+2)& (0+255),b
  9353  013868  0E00               	movlw	0
  9354  01386A  6F85               	movwf	(___flmul@a+3)& (0+255),b
  9355  01386C                     l8298:
  9356                           
  9357                           ; BSR set to: 0
  9358  01386C  0100               	movlb	0	; () banked
  9359  01386E  8F84               	bsf	(___flmul@a+2)& (0+255),7,b
  9360  013870  D009               	goto	l1604
  9361  013872                     l8300:
  9362                           
  9363                           ; BSR set to: 0
  9364  013872  0E00               	movlw	0
  9365  013874  0100               	movlb	0	; () banked
  9366  013876  6F82               	movwf	___flmul@a& (0+255),b
  9367  013878  0E00               	movlw	0
  9368  01387A  6F83               	movwf	(___flmul@a+1)& (0+255),b
  9369  01387C  0E00               	movlw	0
  9370  01387E  6F84               	movwf	(___flmul@a+2)& (0+255),b
  9371  013880  0E00               	movlw	0
  9372  013882  6F85               	movwf	(___flmul@a+3)& (0+255),b
  9373  013884                     l1604:
  9374                           
  9375                           ; BSR set to: 0
  9376  013884  0100               	movlb	0	; () banked
  9377  013886  518B               	movf	___flmul@aexp& (0+255),w,b
  9378  013888  0100               	movlb	0	; () banked
  9379  01388A  B4D8               	btfsc	status,2,c
  9380  01388C  D005               	goto	l8304
  9381                           
  9382                           ; BSR set to: 0
  9383  01388E  0100               	movlb	0	; () banked
  9384  013890  5190               	movf	___flmul@bexp& (0+255),w,b
  9385  013892  0100               	movlb	0	; () banked
  9386  013894  A4D8               	btfss	status,2,c
  9387  013896  D00A               	goto	l8308
  9388  013898                     l8304:
  9389                           
  9390                           ; BSR set to: 0
  9391  013898  0E00               	movlw	0
  9392  01389A  0100               	movlb	0	; () banked
  9393  01389C  6F7E               	movwf	?___flmul& (0+255),b
  9394  01389E  0E00               	movlw	0
  9395  0138A0  6F7F               	movwf	(?___flmul+1)& (0+255),b
  9396  0138A2  0E00               	movlw	0
  9397  0138A4  6F80               	movwf	(?___flmul+2)& (0+255),b
  9398  0138A6  0E00               	movlw	0
  9399  0138A8  6F81               	movwf	(?___flmul+3)& (0+255),b
  9400                           
  9401                           ; BSR set to: 0
  9402  0138AA  0012               	return	
  9403  0138AC                     l8308:
  9404                           
  9405                           ; BSR set to: 0
  9406  0138AC  0100               	movlb	0	; () banked
  9407  0138AE  5184               	movf	(___flmul@a+2)& (0+255),w,b
  9408  0138B0  0100               	movlb	0	; () banked
  9409  0138B2  037E               	mulwf	___flmul@b& (0+255),b
  9410  0138B4  CFF3 F095          	movff	prodl,___flmul@temp
  9411  0138B8  CFF4 F096          	movff	prodh,___flmul@temp+1
  9412                           
  9413                           ; BSR set to: 0
  9414  0138BC  0100               	movlb	0	; () banked
  9415  0138BE  5195               	movf	___flmul@temp& (0+255),w,b
  9416  0138C0  0100               	movlb	0	; () banked
  9417  0138C2  6F8C               	movwf	___flmul@grs& (0+255),b
  9418  0138C4  6B8D               	clrf	(___flmul@grs+1)& (0+255),b
  9419  0138C6  6B8E               	clrf	(___flmul@grs+2)& (0+255),b
  9420  0138C8  6B8F               	clrf	(___flmul@grs+3)& (0+255),b
  9421                           
  9422                           ; BSR set to: 0
  9423  0138CA  0100               	movlb	0	; () banked
  9424  0138CC  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9425  0138CE  0100               	movlb	0	; () banked
  9426  0138D0  6F91               	movwf	___flmul@prod& (0+255),b
  9427  0138D2  6B92               	clrf	(___flmul@prod+1)& (0+255),b
  9428  0138D4  6B93               	clrf	(___flmul@prod+2)& (0+255),b
  9429  0138D6  6B94               	clrf	(___flmul@prod+3)& (0+255),b
  9430  0138D8  0100               	movlb	0	; () banked
  9431  0138DA  5183               	movf	(___flmul@a+1)& (0+255),w,b
  9432  0138DC  0100               	movlb	0	; () banked
  9433  0138DE  037F               	mulwf	(___flmul@b+1)& (0+255),b
  9434  0138E0  CFF3 F095          	movff	prodl,___flmul@temp
  9435  0138E4  CFF4 F096          	movff	prodh,___flmul@temp+1
  9436                           
  9437                           ; BSR set to: 0
  9438  0138E8  0100               	movlb	0	; () banked
  9439  0138EA  5195               	movf	___flmul@temp& (0+255),w,b
  9440  0138EC  0100               	movlb	0	; () banked
  9441  0138EE  278C               	addwf	___flmul@grs& (0+255),f,b
  9442  0138F0  0E00               	movlw	0
  9443  0138F2  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9444  0138F4  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9445  0138F6  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9446                           
  9447                           ; BSR set to: 0
  9448  0138F8  0100               	movlb	0	; () banked
  9449  0138FA  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9450  0138FC  0100               	movlb	0	; () banked
  9451  0138FE  2791               	addwf	___flmul@prod& (0+255),f,b
  9452  013900  0E00               	movlw	0
  9453  013902  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9454  013904  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9455  013906  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9456  013908  0100               	movlb	0	; () banked
  9457  01390A  5182               	movf	___flmul@a& (0+255),w,b
  9458  01390C  0100               	movlb	0	; () banked
  9459  01390E  0380               	mulwf	(___flmul@b+2)& (0+255),b
  9460  013910  CFF3 F095          	movff	prodl,___flmul@temp
  9461  013914  CFF4 F096          	movff	prodh,___flmul@temp+1
  9462                           
  9463                           ; BSR set to: 0
  9464  013918  0100               	movlb	0	; () banked
  9465  01391A  5195               	movf	___flmul@temp& (0+255),w,b
  9466  01391C  0100               	movlb	0	; () banked
  9467  01391E  278C               	addwf	___flmul@grs& (0+255),f,b
  9468  013920  0E00               	movlw	0
  9469  013922  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9470  013924  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9471  013926  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9472                           
  9473                           ; BSR set to: 0
  9474  013928  0100               	movlb	0	; () banked
  9475  01392A  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9476  01392C  0100               	movlb	0	; () banked
  9477  01392E  2791               	addwf	___flmul@prod& (0+255),f,b
  9478  013930  0E00               	movlw	0
  9479  013932  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9480  013934  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9481  013936  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9482                           
  9483                           ; BSR set to: 0
  9484  013938  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  9485  01393C  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  9486  013940  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  9487  013944  0100               	movlb	0	; () banked
  9488  013946  6B8C               	clrf	___flmul@grs& (0+255),b
  9489                           
  9490                           ; BSR set to: 0
  9491  013948  0100               	movlb	0	; () banked
  9492  01394A  5182               	movf	___flmul@a& (0+255),w,b
  9493  01394C  0100               	movlb	0	; () banked
  9494  01394E  037F               	mulwf	(___flmul@b+1)& (0+255),b
  9495  013950  CFF3 F095          	movff	prodl,___flmul@temp
  9496  013954  CFF4 F096          	movff	prodh,___flmul@temp+1
  9497                           
  9498                           ; BSR set to: 0
  9499  013958  0100               	movlb	0	; () banked
  9500  01395A  5195               	movf	___flmul@temp& (0+255),w,b
  9501  01395C  0100               	movlb	0	; () banked
  9502  01395E  278C               	addwf	___flmul@grs& (0+255),f,b
  9503  013960  0100               	movlb	0	; () banked
  9504  013962  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9505  013964  0100               	movlb	0	; () banked
  9506  013966  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9507  013968  0E00               	movlw	0
  9508  01396A  0100               	movlb	0	; () banked
  9509  01396C  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9510  01396E  0E00               	movlw	0
  9511  013970  0100               	movlb	0	; () banked
  9512  013972  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9513                           
  9514                           ; BSR set to: 0
  9515  013974  0100               	movlb	0	; () banked
  9516  013976  5183               	movf	(___flmul@a+1)& (0+255),w,b
  9517  013978  0100               	movlb	0	; () banked
  9518  01397A  037E               	mulwf	___flmul@b& (0+255),b
  9519  01397C  CFF3 F095          	movff	prodl,___flmul@temp
  9520  013980  CFF4 F096          	movff	prodh,___flmul@temp+1
  9521                           
  9522                           ; BSR set to: 0
  9523  013984  0100               	movlb	0	; () banked
  9524  013986  5195               	movf	___flmul@temp& (0+255),w,b
  9525  013988  0100               	movlb	0	; () banked
  9526  01398A  278C               	addwf	___flmul@grs& (0+255),f,b
  9527  01398C  0100               	movlb	0	; () banked
  9528  01398E  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9529  013990  0100               	movlb	0	; () banked
  9530  013992  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9531  013994  0E00               	movlw	0
  9532  013996  0100               	movlb	0	; () banked
  9533  013998  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9534  01399A  0E00               	movlw	0
  9535  01399C  0100               	movlb	0	; () banked
  9536  01399E  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9537                           
  9538                           ; BSR set to: 0
  9539  0139A0  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  9540  0139A4  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  9541  0139A8  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  9542  0139AC  0100               	movlb	0	; () banked
  9543  0139AE  6B8C               	clrf	___flmul@grs& (0+255),b
  9544  0139B0  0100               	movlb	0	; () banked
  9545  0139B2  5182               	movf	___flmul@a& (0+255),w,b
  9546  0139B4  0100               	movlb	0	; () banked
  9547  0139B6  037E               	mulwf	___flmul@b& (0+255),b
  9548  0139B8  CFF3 F095          	movff	prodl,___flmul@temp
  9549  0139BC  CFF4 F096          	movff	prodh,___flmul@temp+1
  9550                           
  9551                           ; BSR set to: 0
  9552  0139C0  0100               	movlb	0	; () banked
  9553  0139C2  5195               	movf	___flmul@temp& (0+255),w,b
  9554  0139C4  0100               	movlb	0	; () banked
  9555  0139C6  278C               	addwf	___flmul@grs& (0+255),f,b
  9556  0139C8  0100               	movlb	0	; () banked
  9557  0139CA  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9558  0139CC  0100               	movlb	0	; () banked
  9559  0139CE  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9560  0139D0  0E00               	movlw	0
  9561  0139D2  0100               	movlb	0	; () banked
  9562  0139D4  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9563  0139D6  0E00               	movlw	0
  9564  0139D8  0100               	movlb	0	; () banked
  9565  0139DA  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9566                           
  9567                           ; BSR set to: 0
  9568  0139DC  0100               	movlb	0	; () banked
  9569  0139DE  5184               	movf	(___flmul@a+2)& (0+255),w,b
  9570  0139E0  0100               	movlb	0	; () banked
  9571  0139E2  037F               	mulwf	(___flmul@b+1)& (0+255),b
  9572  0139E4  CFF3 F095          	movff	prodl,___flmul@temp
  9573  0139E8  CFF4 F096          	movff	prodh,___flmul@temp+1
  9574  0139EC  0100               	movlb	0	; () banked
  9575  0139EE  5195               	movf	___flmul@temp& (0+255),w,b
  9576  0139F0  0100               	movlb	0	; () banked
  9577  0139F2  2791               	addwf	___flmul@prod& (0+255),f,b
  9578  0139F4  0100               	movlb	0	; () banked
  9579  0139F6  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9580  0139F8  0100               	movlb	0	; () banked
  9581  0139FA  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9582  0139FC  0E00               	movlw	0
  9583  0139FE  0100               	movlb	0	; () banked
  9584  013A00  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9585  013A02  0E00               	movlw	0
  9586  013A04  0100               	movlb	0	; () banked
  9587  013A06  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9588                           
  9589                           ; BSR set to: 0
  9590  013A08  0100               	movlb	0	; () banked
  9591  013A0A  5183               	movf	(___flmul@a+1)& (0+255),w,b
  9592  013A0C  0100               	movlb	0	; () banked
  9593  013A0E  0380               	mulwf	(___flmul@b+2)& (0+255),b
  9594  013A10  CFF3 F095          	movff	prodl,___flmul@temp
  9595  013A14  CFF4 F096          	movff	prodh,___flmul@temp+1
  9596                           
  9597                           ; BSR set to: 0
  9598  013A18  0100               	movlb	0	; () banked
  9599  013A1A  5195               	movf	___flmul@temp& (0+255),w,b
  9600  013A1C  0100               	movlb	0	; () banked
  9601  013A1E  2791               	addwf	___flmul@prod& (0+255),f,b
  9602  013A20  0100               	movlb	0	; () banked
  9603  013A22  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9604  013A24  0100               	movlb	0	; () banked
  9605  013A26  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9606  013A28  0E00               	movlw	0
  9607  013A2A  0100               	movlb	0	; () banked
  9608  013A2C  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9609  013A2E  0E00               	movlw	0
  9610  013A30  0100               	movlb	0	; () banked
  9611  013A32  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9612  013A34  0100               	movlb	0	; () banked
  9613  013A36  5184               	movf	(___flmul@a+2)& (0+255),w,b
  9614  013A38  0100               	movlb	0	; () banked
  9615  013A3A  0380               	mulwf	(___flmul@b+2)& (0+255),b
  9616  013A3C  CFF3 F095          	movff	prodl,___flmul@temp
  9617  013A40  CFF4 F096          	movff	prodh,___flmul@temp+1
  9618                           
  9619                           ; BSR set to: 0
  9620  013A44  0100               	movlb	0	; () banked
  9621  013A46  5195               	movf	___flmul@temp& (0+255),w,b
  9622  013A48  0100               	movlb	0	; () banked
  9623  013A4A  6F86               	movwf	??___flmul& (0+255),b
  9624  013A4C  0100               	movlb	0	; () banked
  9625  013A4E  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9626  013A50  0100               	movlb	0	; () banked
  9627  013A52  6F87               	movwf	(??___flmul+1)& (0+255),b
  9628  013A54  0100               	movlb	0	; () banked
  9629  013A56  6B88               	clrf	(??___flmul+2)& (0+255),b
  9630  013A58  0100               	movlb	0	; () banked
  9631  013A5A  6B89               	clrf	(??___flmul+3)& (0+255),b
  9632  013A5C  C088  F089         	movff	??___flmul+2,??___flmul+3
  9633  013A60  C087  F088         	movff	??___flmul+1,??___flmul+2
  9634  013A64  C086  F087         	movff	??___flmul,??___flmul+1
  9635  013A68  0100               	movlb	0	; () banked
  9636  013A6A  6B86               	clrf	??___flmul& (0+255),b
  9637  013A6C  0100               	movlb	0	; () banked
  9638  013A6E  5186               	movf	??___flmul& (0+255),w,b
  9639  013A70  0100               	movlb	0	; () banked
  9640  013A72  2791               	addwf	___flmul@prod& (0+255),f,b
  9641  013A74  0100               	movlb	0	; () banked
  9642  013A76  5187               	movf	(??___flmul+1)& (0+255),w,b
  9643  013A78  0100               	movlb	0	; () banked
  9644  013A7A  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9645  013A7C  0100               	movlb	0	; () banked
  9646  013A7E  5188               	movf	(??___flmul+2)& (0+255),w,b
  9647  013A80  0100               	movlb	0	; () banked
  9648  013A82  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9649  013A84  0100               	movlb	0	; () banked
  9650  013A86  5189               	movf	(??___flmul+3)& (0+255),w,b
  9651  013A88  0100               	movlb	0	; () banked
  9652  013A8A  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9653                           
  9654                           ; BSR set to: 0
  9655  013A8C  C08C  F086         	movff	___flmul@grs,??___flmul
  9656  013A90  C08D  F087         	movff	___flmul@grs+1,??___flmul+1
  9657  013A94  C08E  F088         	movff	___flmul@grs+2,??___flmul+2
  9658  013A98  C08F  F089         	movff	___flmul@grs+3,??___flmul+3
  9659  013A9C  0E19               	movlw	25
  9660  013A9E  D006               	goto	u10840
  9661  013AA0                     u10845:
  9662  013AA0  0100               	movlb	0	; () banked
  9663  013AA2  90D8               	bcf	status,0,c
  9664  013AA4  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  9665  013AA6  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  9666  013AA8  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  9667  013AAA  3386               	rrcf	??___flmul& (0+255),f,b
  9668  013AAC                     u10840:
  9669  013AAC  2EE8               	decfsz	wreg,f,c
  9670  013AAE  D7F8               	goto	u10845
  9671  013AB0  0100               	movlb	0	; () banked
  9672  013AB2  5186               	movf	??___flmul& (0+255),w,b
  9673  013AB4  0100               	movlb	0	; () banked
  9674  013AB6  2791               	addwf	___flmul@prod& (0+255),f,b
  9675  013AB8  0100               	movlb	0	; () banked
  9676  013ABA  5187               	movf	(??___flmul+1)& (0+255),w,b
  9677  013ABC  0100               	movlb	0	; () banked
  9678  013ABE  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9679  013AC0  0100               	movlb	0	; () banked
  9680  013AC2  5188               	movf	(??___flmul+2)& (0+255),w,b
  9681  013AC4  0100               	movlb	0	; () banked
  9682  013AC6  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9683  013AC8  0100               	movlb	0	; () banked
  9684  013ACA  5189               	movf	(??___flmul+3)& (0+255),w,b
  9685  013ACC  0100               	movlb	0	; () banked
  9686  013ACE  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9687                           
  9688                           ; BSR set to: 0
  9689  013AD0  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  9690  013AD4  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  9691  013AD8  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  9692  013ADC  0100               	movlb	0	; () banked
  9693  013ADE  6B8C               	clrf	___flmul@grs& (0+255),b
  9694                           
  9695                           ; BSR set to: 0
  9696  013AE0  0100               	movlb	0	; () banked
  9697  013AE2  518B               	movf	___flmul@aexp& (0+255),w,b
  9698  013AE4  C090  F086         	movff	___flmul@bexp,??___flmul
  9699  013AE8  0100               	movlb	0	; () banked
  9700  013AEA  6B87               	clrf	(??___flmul+1)& (0+255),b
  9701  013AEC  0100               	movlb	0	; () banked
  9702  013AEE  2786               	addwf	??___flmul& (0+255),f,b
  9703  013AF0  0E00               	movlw	0
  9704  013AF2  2387               	addwfc	(??___flmul+1)& (0+255),f,b
  9705  013AF4  0E82               	movlw	130
  9706  013AF6  0100               	movlb	0	; () banked
  9707  013AF8  2586               	addwf	??___flmul& (0+255),w,b
  9708  013AFA  0100               	movlb	0	; () banked
  9709  013AFC  6F95               	movwf	___flmul@temp& (0+255),b
  9710  013AFE  0EFF               	movlw	255
  9711  013B00  0100               	movlb	0	; () banked
  9712  013B02  2187               	addwfc	(??___flmul+1)& (0+255),w,b
  9713  013B04  0100               	movlb	0	; () banked
  9714  013B06  6F96               	movwf	(___flmul@temp+1)& (0+255),b
  9715  013B08  D015               	goto	l8356
  9716  013B0A                     l8350:
  9717                           
  9718                           ; BSR set to: 0
  9719  013B0A  0100               	movlb	0	; () banked
  9720  013B0C  90D8               	bcf	status,0,c
  9721  013B0E  3791               	rlcf	___flmul@prod& (0+255),f,b
  9722  013B10  3792               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9723  013B12  3793               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9724  013B14  3794               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9725                           
  9726                           ; BSR set to: 0
  9727  013B16  0100               	movlb	0	; () banked
  9728  013B18  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
  9729  013B1A  D002               	goto	l1611
  9730                           
  9731                           ; BSR set to: 0
  9732  013B1C  0100               	movlb	0	; () banked
  9733  013B1E  8191               	bsf	___flmul@prod& (0+255),0,b
  9734  013B20                     l1611:
  9735                           
  9736                           ; BSR set to: 0
  9737  013B20  0100               	movlb	0	; () banked
  9738  013B22  90D8               	bcf	status,0,c
  9739  013B24  378C               	rlcf	___flmul@grs& (0+255),f,b
  9740  013B26  378D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9741  013B28  378E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9742  013B2A  378F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9743  013B2C  0100               	movlb	0	; () banked
  9744  013B2E  0795               	decf	___flmul@temp& (0+255),f,b
  9745  013B30  A0D8               	btfss	status,0,c
  9746  013B32  0796               	decf	(___flmul@temp+1)& (0+255),f,b
  9747  013B34                     l8356:
  9748                           
  9749                           ; BSR set to: 0
  9750  013B34  0100               	movlb	0	; () banked
  9751  013B36  AF93               	btfss	(___flmul@prod+2)& (0+255),7,b
  9752  013B38  D7E8               	goto	l8350
  9753                           
  9754                           ; BSR set to: 0
  9755                           
  9756                           ; BSR set to: 0
  9757  013B3A  0E00               	movlw	0
  9758  013B3C  0100               	movlb	0	; () banked
  9759  013B3E  6F8B               	movwf	___flmul@aexp& (0+255),b
  9760                           
  9761                           ; BSR set to: 0
  9762  013B40  0100               	movlb	0	; () banked
  9763  013B42  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
  9764  013B44  D024               	goto	l1613
  9765                           
  9766                           ; BSR set to: 0
  9767  013B46  0EFF               	movlw	255
  9768  013B48  0100               	movlb	0	; () banked
  9769  013B4A  158C               	andwf	___flmul@grs& (0+255),w,b
  9770  013B4C  0100               	movlb	0	; () banked
  9771  013B4E  6F86               	movwf	??___flmul& (0+255),b
  9772  013B50  0EFF               	movlw	255
  9773  013B52  0100               	movlb	0	; () banked
  9774  013B54  158D               	andwf	(___flmul@grs+1)& (0+255),w,b
  9775  013B56  0100               	movlb	0	; () banked
  9776  013B58  6F87               	movwf	(??___flmul+1)& (0+255),b
  9777  013B5A  0EFF               	movlw	255
  9778  013B5C  0100               	movlb	0	; () banked
  9779  013B5E  158E               	andwf	(___flmul@grs+2)& (0+255),w,b
  9780  013B60  0100               	movlb	0	; () banked
  9781  013B62  6F88               	movwf	(??___flmul+2)& (0+255),b
  9782  013B64  0E7F               	movlw	127
  9783  013B66  0100               	movlb	0	; () banked
  9784  013B68  158F               	andwf	(___flmul@grs+3)& (0+255),w,b
  9785  013B6A  0100               	movlb	0	; () banked
  9786  013B6C  6F89               	movwf	(??___flmul+3)& (0+255),b
  9787  013B6E  0100               	movlb	0	; () banked
  9788  013B70  5186               	movf	??___flmul& (0+255),w,b
  9789  013B72  0100               	movlb	0	; () banked
  9790  013B74  1187               	iorwf	(??___flmul+1)& (0+255),w,b
  9791  013B76  0100               	movlb	0	; () banked
  9792  013B78  1188               	iorwf	(??___flmul+2)& (0+255),w,b
  9793  013B7A  0100               	movlb	0	; () banked
  9794  013B7C  1189               	iorwf	(??___flmul+3)& (0+255),w,b
  9795  013B7E  A4D8               	btfss	status,2,c
  9796  013B80  D003               	goto	l8366
  9797                           
  9798                           ; BSR set to: 0
  9799                           
  9800                           ; BSR set to: 0
  9801  013B82  0100               	movlb	0	; () banked
  9802  013B84  A191               	btfss	___flmul@prod& (0+255),0,b
  9803  013B86  D003               	goto	l1613
  9804  013B88                     l8366:
  9805                           
  9806                           ; BSR set to: 0
  9807  013B88  0E01               	movlw	1
  9808  013B8A  0100               	movlb	0	; () banked
  9809  013B8C  6F8B               	movwf	___flmul@aexp& (0+255),b
  9810  013B8E                     l1613:
  9811                           
  9812                           ; BSR set to: 0
  9813  013B8E  0100               	movlb	0	; () banked
  9814  013B90  518B               	movf	___flmul@aexp& (0+255),w,b
  9815  013B92  0100               	movlb	0	; () banked
  9816  013B94  B4D8               	btfsc	status,2,c
  9817  013B96  D023               	goto	l8376
  9818                           
  9819                           ; BSR set to: 0
  9820  013B98  0E01               	movlw	1
  9821  013B9A  0100               	movlb	0	; () banked
  9822  013B9C  2791               	addwf	___flmul@prod& (0+255),f,b
  9823  013B9E  0E00               	movlw	0
  9824  013BA0  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9825  013BA2  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9826  013BA4  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9827                           
  9828                           ; BSR set to: 0
  9829  013BA6  0100               	movlb	0	; () banked
  9830  013BA8  A194               	btfss	(___flmul@prod+3)& (0+255),0,b
  9831  013BAA  D019               	goto	l8376
  9832                           
  9833                           ; BSR set to: 0
  9834  013BAC  C091  F086         	movff	___flmul@prod,??___flmul
  9835  013BB0  C092  F087         	movff	___flmul@prod+1,??___flmul+1
  9836  013BB4  C093  F088         	movff	___flmul@prod+2,??___flmul+2
  9837  013BB8  C094  F089         	movff	___flmul@prod+3,??___flmul+3
  9838  013BBC  0100               	movlb	0	; () banked
  9839  013BBE  3589               	rlcf	(??___flmul+3)& (0+255),w,b
  9840  013BC0  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  9841  013BC2  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  9842  013BC4  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  9843  013BC6  3386               	rrcf	??___flmul& (0+255),f,b
  9844  013BC8  C086  F091         	movff	??___flmul,___flmul@prod
  9845  013BCC  C087  F092         	movff	??___flmul+1,___flmul@prod+1
  9846  013BD0  C088  F093         	movff	??___flmul+2,___flmul@prod+2
  9847  013BD4  C089  F094         	movff	??___flmul+3,___flmul@prod+3
  9848                           
  9849                           ; BSR set to: 0
  9850  013BD8  0100               	movlb	0	; () banked
  9851  013BDA  4B95               	infsnz	___flmul@temp& (0+255),f,b
  9852  013BDC  2B96               	incf	(___flmul@temp+1)& (0+255),f,b
  9853  013BDE                     l8376:
  9854                           
  9855                           ; BSR set to: 0
  9856  013BDE  0100               	movlb	0	; () banked
  9857  013BE0  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9858  013BE2  D010               	goto	l8380
  9859  013BE4  0100               	movlb	0	; () banked
  9860  013BE6  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9861  013BE8  E104               	bnz	u10920
  9862  013BEA  0100               	movlb	0	; () banked
  9863  013BEC  2995               	incf	___flmul@temp& (0+255),w,b
  9864  013BEE  A0D8               	btfss	status,0,c
  9865  013BF0  D009               	goto	l8380
  9866  013BF2                     u10920:
  9867                           
  9868                           ; BSR set to: 0
  9869  013BF2  0E00               	movlw	0
  9870  013BF4  0100               	movlb	0	; () banked
  9871  013BF6  6F91               	movwf	___flmul@prod& (0+255),b
  9872  013BF8  0E00               	movlw	0
  9873  013BFA  6F92               	movwf	(___flmul@prod+1)& (0+255),b
  9874  013BFC  0E80               	movlw	128
  9875  013BFE  6F93               	movwf	(___flmul@prod+2)& (0+255),b
  9876  013C00  0E7F               	movlw	127
  9877  013C02  D02B               	goto	L10
  9878  013C04                     l8380:
  9879                           
  9880                           ; BSR set to: 0
  9881  013C04  0100               	movlb	0	; () banked
  9882  013C06  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9883  013C08  D007               	goto	l8382
  9884  013C0A  0100               	movlb	0	; () banked
  9885  013C0C  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  9886  013C0E  E111               	bnz	l1621
  9887  013C10  0100               	movlb	0	; () banked
  9888  013C12  0595               	decf	___flmul@temp& (0+255),w,b
  9889  013C14  B0D8               	btfsc	status,0,c
  9890  013C16  D00D               	goto	l1621
  9891  013C18                     l8382:
  9892                           
  9893                           ; BSR set to: 0
  9894  013C18  0E00               	movlw	0
  9895  013C1A  0100               	movlb	0	; () banked
  9896  013C1C  6F91               	movwf	___flmul@prod& (0+255),b
  9897  013C1E  0E00               	movlw	0
  9898  013C20  6F92               	movwf	(___flmul@prod+1)& (0+255),b
  9899  013C22  0E00               	movlw	0
  9900  013C24  6F93               	movwf	(___flmul@prod+2)& (0+255),b
  9901  013C26  0E00               	movlw	0
  9902  013C28  6F94               	movwf	(___flmul@prod+3)& (0+255),b
  9903  013C2A  0E00               	movlw	0
  9904  013C2C  0100               	movlb	0	; () banked
  9905  013C2E  6F8A               	movwf	___flmul@sign& (0+255),b
  9906  013C30  D015               	goto	l8392
  9907  013C32                     l1621:
  9908                           
  9909                           ; BSR set to: 0
  9910  013C32  C095  F090         	movff	___flmul@temp,___flmul@bexp
  9911                           
  9912                           ; BSR set to: 0
  9913  013C36  0EFF               	movlw	255
  9914  013C38  0100               	movlb	0	; () banked
  9915  013C3A  1791               	andwf	___flmul@prod& (0+255),f,b
  9916  013C3C  0EFF               	movlw	255
  9917  013C3E  1792               	andwf	(___flmul@prod+1)& (0+255),f,b
  9918  013C40  0E7F               	movlw	127
  9919  013C42  1793               	andwf	(___flmul@prod+2)& (0+255),f,b
  9920  013C44  0E00               	movlw	0
  9921  013C46  1794               	andwf	(___flmul@prod+3)& (0+255),f,b
  9922                           
  9923                           ; BSR set to: 0
  9924  013C48  0100               	movlb	0	; () banked
  9925  013C4A  A190               	btfss	___flmul@bexp& (0+255),0,b
  9926  013C4C  D002               	goto	l8390
  9927                           
  9928                           ; BSR set to: 0
  9929  013C4E  0100               	movlb	0	; () banked
  9930  013C50  8F93               	bsf	(___flmul@prod+2)& (0+255),7,b
  9931  013C52                     l8390:
  9932                           
  9933                           ; BSR set to: 0
  9934  013C52  0100               	movlb	0	; () banked
  9935  013C54  90D8               	bcf	status,0,c
  9936  013C56  3190               	rrcf	___flmul@bexp& (0+255),w,b
  9937  013C58  0100               	movlb	0	; () banked
  9938  013C5A                     L10:
  9939  013C5A  6F94               	movwf	(___flmul@prod+3)& (0+255),b
  9940  013C5C                     l8392:
  9941                           
  9942                           ; BSR set to: 0
  9943  013C5C  0100               	movlb	0	; () banked
  9944  013C5E  518A               	movf	___flmul@sign& (0+255),w,b
  9945  013C60  0100               	movlb	0	; () banked
  9946  013C62  1394               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9947                           
  9948                           ; BSR set to: 0
  9949  013C64  C091  F07E         	movff	___flmul@prod,?___flmul
  9950  013C68  C092  F07F         	movff	___flmul@prod+1,?___flmul+1
  9951  013C6C  C093  F080         	movff	___flmul@prod+2,?___flmul+2
  9952  013C70  C094  F081         	movff	___flmul@prod+3,?___flmul+3
  9953  013C74  0012               	return	
  9954  013C76                     __end_of___flmul:
  9955                           	opt stack 0
  9956                           tblptru	equ	0xFF8
  9957                           tblptrh	equ	0xFF7
  9958                           tblptrl	equ	0xFF6
  9959                           tablat	equ	0xFF5
  9960                           prodh	equ	0xFF4
  9961                           prodl	equ	0xFF3
  9962                           intcon	equ	0xFF2
  9963                           postinc0	equ	0xFEE
  9964                           wreg	equ	0xFE8
  9965                           indf2	equ	0xFDF
  9966                           postinc2	equ	0xFDE
  9967                           fsr2h	equ	0xFDA
  9968                           fsr2l	equ	0xFD9
  9969                           status	equ	0xFD8
  9970                           
  9971 ;; *************** function ___awmod *****************
  9972 ;; Defined at:
  9973 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  9974 ;; Parameters:    Size  Location     Type
  9975 ;;  dividend        2   16[BANK0 ] int 
  9976 ;;  divisor         2   18[BANK0 ] int 
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;  sign            1   21[BANK0 ] unsigned char 
  9979 ;;  counter         1   20[BANK0 ] unsigned char 
  9980 ;; Return value:  Size  Location     Type
  9981 ;;                  2   16[BANK0 ] int 
  9982 ;; Registers used:
  9983 ;;		wreg, status,2, status,0
  9984 ;; Tracked objects:
  9985 ;;		On entry : 0/0
  9986 ;;		On exit  : 0/0
  9987 ;;		Unchanged: 0/0
  9988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9989 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9990 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9992 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9993 ;;Total ram usage:        6 bytes
  9994 ;; Hardware stack levels used:    1
  9995 ;; Hardware stack levels required when called:    9
  9996 ;; This function calls:
  9997 ;;		Nothing
  9998 ;; This function is called by:
  9999 ;;		_fround
 10000 ;;		_scale
 10001 ;; This function uses a non-reentrant model
 10002 ;;
 10003                           
 10004                           	psect	text13
 10005  015E02                     __ptext13:
 10006                           	opt stack 0
 10007  015E02                     ___awmod:
 10008                           	opt stack 18
 10009                           
 10010                           ; BSR set to: 0
 10011                           ;incstack = 0
 10012  015E02  0E00               	movlw	0
 10013  015E04  0100               	movlb	0	; () banked
 10014  015E06  6F75               	movwf	___awmod@sign& (0+255),b
 10015                           
 10016                           ; BSR set to: 0
 10017  015E08  0100               	movlb	0	; () banked
 10018  015E0A  AF71               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10019  015E0C  D008               	goto	l8450
 10020                           
 10021                           ; BSR set to: 0
 10022  015E0E  0100               	movlb	0	; () banked
 10023  015E10  6D70               	negf	___awmod@dividend& (0+255),b
 10024  015E12  1F71               	comf	(___awmod@dividend+1)& (0+255),f,b
 10025  015E14  B0D8               	btfsc	status,0,c
 10026  015E16  2B71               	incf	(___awmod@dividend+1)& (0+255),f,b
 10027                           
 10028                           ; BSR set to: 0
 10029  015E18  0E01               	movlw	1
 10030  015E1A  0100               	movlb	0	; () banked
 10031  015E1C  6F75               	movwf	___awmod@sign& (0+255),b
 10032  015E1E                     l8450:
 10033                           
 10034                           ; BSR set to: 0
 10035  015E1E  0100               	movlb	0	; () banked
 10036  015E20  AF73               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10037  015E22  D005               	goto	l8454
 10038                           
 10039                           ; BSR set to: 0
 10040  015E24  0100               	movlb	0	; () banked
 10041  015E26  6D72               	negf	___awmod@divisor& (0+255),b
 10042  015E28  1F73               	comf	(___awmod@divisor+1)& (0+255),f,b
 10043  015E2A  B0D8               	btfsc	status,0,c
 10044  015E2C  2B73               	incf	(___awmod@divisor+1)& (0+255),f,b
 10045  015E2E                     l8454:
 10046                           
 10047                           ; BSR set to: 0
 10048  015E2E  0100               	movlb	0	; () banked
 10049  015E30  5172               	movf	___awmod@divisor& (0+255),w,b
 10050  015E32  0100               	movlb	0	; () banked
 10051  015E34  1173               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10052  015E36  B4D8               	btfsc	status,2,c
 10053  015E38  D026               	goto	l8470
 10054                           
 10055                           ; BSR set to: 0
 10056  015E3A  0E01               	movlw	1
 10057  015E3C  0100               	movlb	0	; () banked
 10058  015E3E  6F74               	movwf	___awmod@counter& (0+255),b
 10059  015E40  D006               	goto	l8460
 10060  015E42                     l8458:
 10061                           
 10062                           ; BSR set to: 0
 10063  015E42  0100               	movlb	0	; () banked
 10064  015E44  90D8               	bcf	status,0,c
 10065  015E46  3772               	rlcf	___awmod@divisor& (0+255),f,b
 10066  015E48  3773               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10067  015E4A  0100               	movlb	0	; () banked
 10068  015E4C  2B74               	incf	___awmod@counter& (0+255),f,b
 10069  015E4E                     l8460:
 10070                           
 10071                           ; BSR set to: 0
 10072  015E4E  0100               	movlb	0	; () banked
 10073  015E50  AF73               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10074  015E52  D7F7               	goto	l8458
 10075  015E54                     l8462:
 10076                           
 10077                           ; BSR set to: 0
 10078  015E54  0100               	movlb	0	; () banked
 10079  015E56  5172               	movf	___awmod@divisor& (0+255),w,b
 10080  015E58  0100               	movlb	0	; () banked
 10081  015E5A  5D70               	subwf	___awmod@dividend& (0+255),w,b
 10082  015E5C  0100               	movlb	0	; () banked
 10083  015E5E  5173               	movf	(___awmod@divisor+1)& (0+255),w,b
 10084  015E60  0100               	movlb	0	; () banked
 10085  015E62  5971               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10086  015E64  A0D8               	btfss	status,0,c
 10087  015E66  D008               	goto	l8466
 10088                           
 10089                           ; BSR set to: 0
 10090  015E68  0100               	movlb	0	; () banked
 10091  015E6A  5172               	movf	___awmod@divisor& (0+255),w,b
 10092  015E6C  0100               	movlb	0	; () banked
 10093  015E6E  5F70               	subwf	___awmod@dividend& (0+255),f,b
 10094  015E70  0100               	movlb	0	; () banked
 10095  015E72  5173               	movf	(___awmod@divisor+1)& (0+255),w,b
 10096  015E74  0100               	movlb	0	; () banked
 10097  015E76  5B71               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10098  015E78                     l8466:
 10099                           
 10100                           ; BSR set to: 0
 10101  015E78  0100               	movlb	0	; () banked
 10102  015E7A  90D8               	bcf	status,0,c
 10103  015E7C  3373               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10104  015E7E  3372               	rrcf	___awmod@divisor& (0+255),f,b
 10105                           
 10106                           ; BSR set to: 0
 10107  015E80  0100               	movlb	0	; () banked
 10108  015E82  2F74               	decfsz	___awmod@counter& (0+255),f,b
 10109  015E84  D7E7               	goto	l8462
 10110  015E86                     l8470:
 10111                           
 10112                           ; BSR set to: 0
 10113  015E86  0100               	movlb	0	; () banked
 10114  015E88  5175               	movf	___awmod@sign& (0+255),w,b
 10115  015E8A  0100               	movlb	0	; () banked
 10116  015E8C  B4D8               	btfsc	status,2,c
 10117  015E8E  D005               	goto	l8474
 10118                           
 10119                           ; BSR set to: 0
 10120  015E90  0100               	movlb	0	; () banked
 10121  015E92  6D70               	negf	___awmod@dividend& (0+255),b
 10122  015E94  1F71               	comf	(___awmod@dividend+1)& (0+255),f,b
 10123  015E96  B0D8               	btfsc	status,0,c
 10124  015E98  2B71               	incf	(___awmod@dividend+1)& (0+255),f,b
 10125  015E9A                     l8474:
 10126                           
 10127                           ; BSR set to: 0
 10128  015E9A  C070  F070         	movff	___awmod@dividend,?___awmod
 10129  015E9E  C071  F071         	movff	___awmod@dividend+1,?___awmod+1
 10130  015EA2  0012               	return	
 10131  015EA4                     __end_of___awmod:
 10132                           	opt stack 0
 10133                           tblptru	equ	0xFF8
 10134                           tblptrh	equ	0xFF7
 10135                           tblptrl	equ	0xFF6
 10136                           tablat	equ	0xFF5
 10137                           prodh	equ	0xFF4
 10138                           prodl	equ	0xFF3
 10139                           intcon	equ	0xFF2
 10140                           postinc0	equ	0xFEE
 10141                           wreg	equ	0xFE8
 10142                           indf2	equ	0xFDF
 10143                           postinc2	equ	0xFDE
 10144                           fsr2h	equ	0xFDA
 10145                           fsr2l	equ	0xFD9
 10146                           status	equ	0xFD8
 10147                           
 10148 ;; *************** function ___awdiv *****************
 10149 ;; Defined at:
 10150 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 10151 ;; Parameters:    Size  Location     Type
 10152 ;;  dividend        2   22[BANK0 ] int 
 10153 ;;  divisor         2   24[BANK0 ] int 
 10154 ;; Auto vars:     Size  Location     Type
 10155 ;;  quotient        2   28[BANK0 ] int 
 10156 ;;  sign            1   27[BANK0 ] unsigned char 
 10157 ;;  counter         1   26[BANK0 ] unsigned char 
 10158 ;; Return value:  Size  Location     Type
 10159 ;;                  2   22[BANK0 ] int 
 10160 ;; Registers used:
 10161 ;;		wreg, status,2, status,0
 10162 ;; Tracked objects:
 10163 ;;		On entry : 0/0
 10164 ;;		On exit  : 0/0
 10165 ;;		Unchanged: 0/0
 10166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10167 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10168 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10170 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10171 ;;Total ram usage:        8 bytes
 10172 ;; Hardware stack levels used:    1
 10173 ;; Hardware stack levels required when called:    9
 10174 ;; This function calls:
 10175 ;;		Nothing
 10176 ;; This function is called by:
 10177 ;;		_fround
 10178 ;;		_scale
 10179 ;;		_sprintf
 10180 ;; This function uses a non-reentrant model
 10181 ;;
 10182                           
 10183                           	psect	text14
 10184  015906                     __ptext14:
 10185                           	opt stack 0
 10186  015906                     ___awdiv:
 10187                           	opt stack 18
 10188                           
 10189                           ; BSR set to: 0
 10190                           ;incstack = 0
 10191  015906  0E00               	movlw	0
 10192  015908  0100               	movlb	0	; () banked
 10193  01590A  6F7B               	movwf	___awdiv@sign& (0+255),b
 10194                           
 10195                           ; BSR set to: 0
 10196  01590C  0100               	movlb	0	; () banked
 10197  01590E  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10198  015910  D008               	goto	l8406
 10199                           
 10200                           ; BSR set to: 0
 10201  015912  0100               	movlb	0	; () banked
 10202  015914  6D78               	negf	___awdiv@divisor& (0+255),b
 10203  015916  1F79               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10204  015918  B0D8               	btfsc	status,0,c
 10205  01591A  2B79               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10206                           
 10207                           ; BSR set to: 0
 10208  01591C  0E01               	movlw	1
 10209  01591E  0100               	movlb	0	; () banked
 10210  015920  6F7B               	movwf	___awdiv@sign& (0+255),b
 10211  015922                     l8406:
 10212                           
 10213                           ; BSR set to: 0
 10214  015922  0100               	movlb	0	; () banked
 10215  015924  AF77               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10216  015926  D008               	goto	l8412
 10217                           
 10218                           ; BSR set to: 0
 10219  015928  0100               	movlb	0	; () banked
 10220  01592A  6D76               	negf	___awdiv@dividend& (0+255),b
 10221  01592C  1F77               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10222  01592E  B0D8               	btfsc	status,0,c
 10223  015930  2B77               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10224                           
 10225                           ; BSR set to: 0
 10226  015932  0E01               	movlw	1
 10227  015934  0100               	movlb	0	; () banked
 10228  015936  1B7B               	xorwf	___awdiv@sign& (0+255),f,b
 10229  015938                     l8412:
 10230                           
 10231                           ; BSR set to: 0
 10232  015938  0E00               	movlw	0
 10233  01593A  0100               	movlb	0	; () banked
 10234  01593C  6F7D               	movwf	(___awdiv@quotient+1)& (0+255),b
 10235  01593E  0E00               	movlw	0
 10236  015940  6F7C               	movwf	___awdiv@quotient& (0+255),b
 10237                           
 10238                           ; BSR set to: 0
 10239  015942  0100               	movlb	0	; () banked
 10240  015944  5178               	movf	___awdiv@divisor& (0+255),w,b
 10241  015946  0100               	movlb	0	; () banked
 10242  015948  1179               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10243  01594A  B4D8               	btfsc	status,2,c
 10244  01594C  D02C               	goto	l8434
 10245                           
 10246                           ; BSR set to: 0
 10247  01594E  0E01               	movlw	1
 10248  015950  0100               	movlb	0	; () banked
 10249  015952  6F7A               	movwf	___awdiv@counter& (0+255),b
 10250  015954  D006               	goto	l8420
 10251  015956                     l8418:
 10252                           
 10253                           ; BSR set to: 0
 10254  015956  0100               	movlb	0	; () banked
 10255  015958  90D8               	bcf	status,0,c
 10256  01595A  3778               	rlcf	___awdiv@divisor& (0+255),f,b
 10257  01595C  3779               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10258  01595E  0100               	movlb	0	; () banked
 10259  015960  2B7A               	incf	___awdiv@counter& (0+255),f,b
 10260  015962                     l8420:
 10261                           
 10262                           ; BSR set to: 0
 10263  015962  0100               	movlb	0	; () banked
 10264  015964  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10265  015966  D7F7               	goto	l8418
 10266  015968                     l8422:
 10267                           
 10268                           ; BSR set to: 0
 10269  015968  0100               	movlb	0	; () banked
 10270  01596A  90D8               	bcf	status,0,c
 10271  01596C  377C               	rlcf	___awdiv@quotient& (0+255),f,b
 10272  01596E  377D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10273                           
 10274                           ; BSR set to: 0
 10275  015970  0100               	movlb	0	; () banked
 10276  015972  5178               	movf	___awdiv@divisor& (0+255),w,b
 10277  015974  0100               	movlb	0	; () banked
 10278  015976  5D76               	subwf	___awdiv@dividend& (0+255),w,b
 10279  015978  0100               	movlb	0	; () banked
 10280  01597A  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10281  01597C  0100               	movlb	0	; () banked
 10282  01597E  5977               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10283  015980  A0D8               	btfss	status,0,c
 10284  015982  D00A               	goto	l8430
 10285                           
 10286                           ; BSR set to: 0
 10287  015984  0100               	movlb	0	; () banked
 10288  015986  5178               	movf	___awdiv@divisor& (0+255),w,b
 10289  015988  0100               	movlb	0	; () banked
 10290  01598A  5F76               	subwf	___awdiv@dividend& (0+255),f,b
 10291  01598C  0100               	movlb	0	; () banked
 10292  01598E  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10293  015990  0100               	movlb	0	; () banked
 10294  015992  5B77               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10295                           
 10296                           ; BSR set to: 0
 10297  015994  0100               	movlb	0	; () banked
 10298  015996  817C               	bsf	___awdiv@quotient& (0+255),0,b
 10299  015998                     l8430:
 10300                           
 10301                           ; BSR set to: 0
 10302  015998  0100               	movlb	0	; () banked
 10303  01599A  90D8               	bcf	status,0,c
 10304  01599C  3379               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10305  01599E  3378               	rrcf	___awdiv@divisor& (0+255),f,b
 10306                           
 10307                           ; BSR set to: 0
 10308  0159A0  0100               	movlb	0	; () banked
 10309  0159A2  2F7A               	decfsz	___awdiv@counter& (0+255),f,b
 10310  0159A4  D7E1               	goto	l8422
 10311  0159A6                     l8434:
 10312                           
 10313                           ; BSR set to: 0
 10314  0159A6  0100               	movlb	0	; () banked
 10315  0159A8  517B               	movf	___awdiv@sign& (0+255),w,b
 10316  0159AA  0100               	movlb	0	; () banked
 10317  0159AC  B4D8               	btfsc	status,2,c
 10318  0159AE  D005               	goto	l8438
 10319                           
 10320                           ; BSR set to: 0
 10321  0159B0  0100               	movlb	0	; () banked
 10322  0159B2  6D7C               	negf	___awdiv@quotient& (0+255),b
 10323  0159B4  1F7D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10324  0159B6  B0D8               	btfsc	status,0,c
 10325  0159B8  2B7D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10326  0159BA                     l8438:
 10327                           
 10328                           ; BSR set to: 0
 10329  0159BA  C07C  F076         	movff	___awdiv@quotient,?___awdiv
 10330  0159BE  C07D  F077         	movff	___awdiv@quotient+1,?___awdiv+1
 10331  0159C2  0012               	return	
 10332  0159C4                     __end_of___awdiv:
 10333                           	opt stack 0
 10334                           tblptru	equ	0xFF8
 10335                           tblptrh	equ	0xFF7
 10336                           tblptrl	equ	0xFF6
 10337                           tablat	equ	0xFF5
 10338                           prodh	equ	0xFF4
 10339                           prodl	equ	0xFF3
 10340                           intcon	equ	0xFF2
 10341                           postinc0	equ	0xFEE
 10342                           wreg	equ	0xFE8
 10343                           indf2	equ	0xFDF
 10344                           postinc2	equ	0xFDE
 10345                           fsr2h	equ	0xFDA
 10346                           fsr2l	equ	0xFD9
 10347                           status	equ	0xFD8
 10348                           
 10349 ;; *************** function __tdiv_to_l_ *****************
 10350 ;; Defined at:
 10351 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
 10352 ;; Parameters:    Size  Location     Type
 10353 ;;  f1              4   16[BANK0 ] float 
 10354 ;;  f2              4   20[BANK0 ] float 
 10355 ;; Auto vars:     Size  Location     Type
 10356 ;;  quot            4   27[BANK0 ] unsigned long 
 10357 ;;  exp1            1   32[BANK0 ] unsigned char 
 10358 ;;  cntr            1   31[BANK0 ] unsigned char 
 10359 ;; Return value:  Size  Location     Type
 10360 ;;                  4   16[BANK0 ] unsigned long 
 10361 ;; Registers used:
 10362 ;;		wreg, status,2, status,0
 10363 ;; Tracked objects:
 10364 ;;		On entry : 0/0
 10365 ;;		On exit  : 0/0
 10366 ;;		Unchanged: 0/0
 10367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10368 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10369 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10370 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10371 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10372 ;;Total ram usage:       17 bytes
 10373 ;; Hardware stack levels used:    1
 10374 ;; Hardware stack levels required when called:    9
 10375 ;; This function calls:
 10376 ;;		Nothing
 10377 ;; This function is called by:
 10378 ;;		_sprintf
 10379 ;; This function uses a non-reentrant model
 10380 ;;
 10381                           
 10382                           	psect	text15
 10383  014FD0                     __ptext15:
 10384                           	opt stack 0
 10385  014FD0                     __tdiv_to_l_:
 10386                           	opt stack 19
 10387                           
 10388                           ; BSR set to: 0
 10389                           ;incstack = 0
 10390  014FD0  C072  F078         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10391  014FD4  0100               	movlb	0	; () banked
 10392  014FD6  6B79               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10393  014FD8  6B7A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10394  014FDA  0100               	movlb	0	; () banked
 10395  014FDC  3571               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10396  014FDE  0100               	movlb	0	; () banked
 10397  014FE0  3778               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10398  014FE2  E301               	bnc	u11181
 10399  014FE4  8179               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10400  014FE6                     u11181:
 10401  014FE6  0100               	movlb	0	; () banked
 10402  014FE8  5178               	movf	??__tdiv_to_l_& (0+255),w,b
 10403  014FEA  0100               	movlb	0	; () banked
 10404  014FEC  6F80               	movwf	__tdiv_to_l_@exp1& (0+255),b
 10405  014FEE  0100               	movlb	0	; () banked
 10406  014FF0  5180               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10407  014FF2  A4D8               	btfss	status,2,c
 10408  014FF4  D00A               	goto	l8588
 10409                           
 10410                           ; BSR set to: 0
 10411  014FF6  0E00               	movlw	0
 10412  014FF8  0100               	movlb	0	; () banked
 10413  014FFA  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 10414  014FFC  0E00               	movlw	0
 10415  014FFE  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10416  015000  0E00               	movlw	0
 10417  015002  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10418  015004  0E00               	movlw	0
 10419  015006  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10420                           
 10421                           ; BSR set to: 0
 10422  015008  0012               	return	
 10423  01500A                     l8588:
 10424                           
 10425                           ; BSR set to: 0
 10426  01500A  C076  F078         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10427  01500E  0100               	movlb	0	; () banked
 10428  015010  6B79               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10429  015012  6B7A               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10430  015014  0100               	movlb	0	; () banked
 10431  015016  3575               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10432  015018  0100               	movlb	0	; () banked
 10433  01501A  3778               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10434  01501C  E301               	bnc	u11201
 10435  01501E  8179               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10436  015020                     u11201:
 10437  015020  0100               	movlb	0	; () banked
 10438  015022  5178               	movf	??__tdiv_to_l_& (0+255),w,b
 10439  015024  0100               	movlb	0	; () banked
 10440  015026  6F7F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10441  015028  0100               	movlb	0	; () banked
 10442  01502A  517F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10443  01502C  A4D8               	btfss	status,2,c
 10444  01502E  D00A               	goto	l8594
 10445                           
 10446                           ; BSR set to: 0
 10447  015030  0E00               	movlw	0
 10448  015032  0100               	movlb	0	; () banked
 10449  015034  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 10450  015036  0E00               	movlw	0
 10451  015038  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10452  01503A  0E00               	movlw	0
 10453  01503C  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10454  01503E  0E00               	movlw	0
 10455  015040  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10456                           
 10457                           ; BSR set to: 0
 10458  015042  0012               	return	
 10459  015044                     l8594:
 10460                           
 10461                           ; BSR set to: 0
 10462  015044  0100               	movlb	0	; () banked
 10463  015046  8F71               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 10464                           
 10465                           ; BSR set to: 0
 10466  015048  0EFF               	movlw	255
 10467  01504A  0100               	movlb	0	; () banked
 10468  01504C  1770               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 10469  01504E  0EFF               	movlw	255
 10470  015050  0100               	movlb	0	; () banked
 10471  015052  1771               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10472  015054  0E00               	movlw	0
 10473  015056  0100               	movlb	0	; () banked
 10474  015058  1772               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10475  01505A  0100               	movlb	0	; () banked
 10476  01505C  8F75               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 10477                           
 10478                           ; BSR set to: 0
 10479  01505E  0EFF               	movlw	255
 10480  015060  0100               	movlb	0	; () banked
 10481  015062  1774               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 10482  015064  0EFF               	movlw	255
 10483  015066  0100               	movlb	0	; () banked
 10484  015068  1775               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 10485  01506A  0E00               	movlw	0
 10486  01506C  0100               	movlb	0	; () banked
 10487  01506E  1776               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 10488                           
 10489                           ; BSR set to: 0
 10490  015070  0E00               	movlw	0
 10491  015072  0100               	movlb	0	; () banked
 10492  015074  6F7B               	movwf	__tdiv_to_l_@quot& (0+255),b
 10493  015076  0E00               	movlw	0
 10494  015078  6F7C               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 10495  01507A  0E00               	movlw	0
 10496  01507C  6F7D               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 10497  01507E  0E00               	movlw	0
 10498  015080  6F7E               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 10499                           
 10500                           ; BSR set to: 0
 10501  015082  0E7F               	movlw	127
 10502  015084  0100               	movlb	0	; () banked
 10503  015086  5F80               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10504                           
 10505                           ; BSR set to: 0
 10506  015088  0100               	movlb	0	; () banked
 10507  01508A  517F               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10508  01508C  0F98               	addlw	152
 10509  01508E  0100               	movlb	0	; () banked
 10510  015090  5F80               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10511                           
 10512                           ; BSR set to: 0
 10513  015092  0E18               	movlw	24
 10514  015094  0100               	movlb	0	; () banked
 10515  015096  6F7F               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10516  015098                     l1328:
 10517                           
 10518                           ; BSR set to: 0
 10519  015098  0100               	movlb	0	; () banked
 10520  01509A  90D8               	bcf	status,0,c
 10521  01509C  377B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10522  01509E  377C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10523  0150A0  377D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10524  0150A2  377E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10525                           
 10526                           ; BSR set to: 0
 10527  0150A4  0100               	movlb	0	; () banked
 10528  0150A6  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10529  0150A8  0100               	movlb	0	; () banked
 10530  0150AA  5D70               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 10531  0150AC  0100               	movlb	0	; () banked
 10532  0150AE  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10533  0150B0  0100               	movlb	0	; () banked
 10534  0150B2  5971               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10535  0150B4  0100               	movlb	0	; () banked
 10536  0150B6  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10537  0150B8  0100               	movlb	0	; () banked
 10538  0150BA  5972               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10539  0150BC  A0D8               	btfss	status,0,c
 10540  0150BE  D00E               	goto	l1329
 10541                           
 10542                           ; BSR set to: 0
 10543  0150C0  0100               	movlb	0	; () banked
 10544  0150C2  5174               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10545  0150C4  0100               	movlb	0	; () banked
 10546  0150C6  5F70               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10547  0150C8  0100               	movlb	0	; () banked
 10548  0150CA  5175               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10549  0150CC  0100               	movlb	0	; () banked
 10550  0150CE  5B71               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10551  0150D0  0100               	movlb	0	; () banked
 10552  0150D2  5176               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10553  0150D4  0100               	movlb	0	; () banked
 10554  0150D6  5B72               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10555                           
 10556                           ; BSR set to: 0
 10557  0150D8  0100               	movlb	0	; () banked
 10558  0150DA  817B               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 10559  0150DC                     l1329:
 10560                           
 10561                           ; BSR set to: 0
 10562  0150DC  0100               	movlb	0	; () banked
 10563  0150DE  90D8               	bcf	status,0,c
 10564  0150E0  3770               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10565  0150E2  3771               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10566  0150E4  3772               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10567                           
 10568                           ; BSR set to: 0
 10569  0150E6  0100               	movlb	0	; () banked
 10570  0150E8  2F7F               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 10571  0150EA  D7D6               	goto	l1328
 10572                           
 10573                           ; BSR set to: 0
 10574                           
 10575                           ; BSR set to: 0
 10576  0150EC  0100               	movlb	0	; () banked
 10577  0150EE  AF80               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 10578  0150F0  D01A               	goto	l8628
 10579                           
 10580                           ; BSR set to: 0
 10581  0150F2  0100               	movlb	0	; () banked
 10582  0150F4  5180               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10583  0150F6  0A80               	xorlw	128
 10584  0150F8  0F97               	addlw	151
 10585  0150FA  B0D8               	btfsc	status,0,c
 10586  0150FC  D00A               	goto	l8624
 10587                           
 10588                           ; BSR set to: 0
 10589  0150FE  0E00               	movlw	0
 10590  015100  0100               	movlb	0	; () banked
 10591  015102  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 10592  015104  0E00               	movlw	0
 10593  015106  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10594  015108  0E00               	movlw	0
 10595  01510A  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10596  01510C  0E00               	movlw	0
 10597  01510E  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10598                           
 10599                           ; BSR set to: 0
 10600  015110  0012               	return	
 10601  015112                     l8624:
 10602                           
 10603                           ; BSR set to: 0
 10604  015112  0100               	movlb	0	; () banked
 10605  015114  90D8               	bcf	status,0,c
 10606  015116  337E               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10607  015118  337D               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10608  01511A  337C               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10609  01511C  337B               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 10610                           
 10611                           ; BSR set to: 0
 10612  01511E  0100               	movlb	0	; () banked
 10613  015120  3F80               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 10614  015122  D7F7               	goto	l8624
 10615                           
 10616                           ; BSR set to: 0
 10617  015124  D01B               	goto	l1335
 10618  015126                     l8628:
 10619                           
 10620                           ; BSR set to: 0
 10621  015126  0E17               	movlw	23
 10622  015128  0100               	movlb	0	; () banked
 10623  01512A  6580               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 10624  01512C  D012               	goto	l8636
 10625                           
 10626                           ; BSR set to: 0
 10627  01512E  0E00               	movlw	0
 10628  015130  0100               	movlb	0	; () banked
 10629  015132  6F70               	movwf	?__tdiv_to_l_& (0+255),b
 10630  015134  0E00               	movlw	0
 10631  015136  6F71               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10632  015138  0E00               	movlw	0
 10633  01513A  6F72               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10634  01513C  0E00               	movlw	0
 10635  01513E  6F73               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10636                           
 10637                           ; BSR set to: 0
 10638  015140  0012               	return	
 10639  015142                     l8634:
 10640                           
 10641                           ; BSR set to: 0
 10642  015142  0100               	movlb	0	; () banked
 10643  015144  90D8               	bcf	status,0,c
 10644  015146  377B               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10645  015148  377C               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10646  01514A  377D               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10647  01514C  377E               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10648  01514E  0100               	movlb	0	; () banked
 10649  015150  0780               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 10650  015152                     l8636:
 10651                           
 10652                           ; BSR set to: 0
 10653  015152  0100               	movlb	0	; () banked
 10654  015154  5180               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10655  015156  0100               	movlb	0	; () banked
 10656  015158  A4D8               	btfss	status,2,c
 10657  01515A  D7F3               	goto	l8634
 10658  01515C                     l1335:
 10659                           
 10660                           ; BSR set to: 0
 10661  01515C  C07B  F070         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10662  015160  C07C  F071         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10663  015164  C07D  F072         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10664  015168  C07E  F073         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10665                           
 10666                           ; BSR set to: 0
 10667  01516C  0012               	return		;funcret
 10668  01516E                     __end_of__tdiv_to_l_:
 10669                           	opt stack 0
 10670                           tblptru	equ	0xFF8
 10671                           tblptrh	equ	0xFF7
 10672                           tblptrl	equ	0xFF6
 10673                           tablat	equ	0xFF5
 10674                           prodh	equ	0xFF4
 10675                           prodl	equ	0xFF3
 10676                           intcon	equ	0xFF2
 10677                           postinc0	equ	0xFEE
 10678                           wreg	equ	0xFE8
 10679                           indf2	equ	0xFDF
 10680                           postinc2	equ	0xFDE
 10681                           fsr2h	equ	0xFDA
 10682                           fsr2l	equ	0xFD9
 10683                           status	equ	0xFD8
 10684                           
 10685 ;; *************** function __div_to_l_ *****************
 10686 ;; Defined at:
 10687 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;  f1              4   16[BANK0 ] unsigned long 
 10690 ;;  f2              4   20[BANK0 ] unsigned long 
 10691 ;; Auto vars:     Size  Location     Type
 10692 ;;  quot            4   24[BANK0 ] unsigned long 
 10693 ;;  exp1            1   29[BANK0 ] unsigned char 
 10694 ;;  cntr            1   28[BANK0 ] unsigned char 
 10695 ;; Return value:  Size  Location     Type
 10696 ;;                  4   16[BANK0 ] unsigned long 
 10697 ;; Registers used:
 10698 ;;		wreg, status,2, status,0
 10699 ;; Tracked objects:
 10700 ;;		On entry : 0/0
 10701 ;;		On exit  : 0/0
 10702 ;;		Unchanged: 0/0
 10703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10704 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10705 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10707 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;Total ram usage:       14 bytes
 10709 ;; Hardware stack levels used:    1
 10710 ;; Hardware stack levels required when called:    9
 10711 ;; This function calls:
 10712 ;;		Nothing
 10713 ;; This function is called by:
 10714 ;;		_sprintf
 10715 ;; This function uses a non-reentrant model
 10716 ;;
 10717                           
 10718                           	psect	text16
 10719  0152FE                     __ptext16:
 10720                           	opt stack 0
 10721  0152FE                     __div_to_l_:
 10722                           	opt stack 19
 10723                           
 10724                           ; BSR set to: 0
 10725                           ;incstack = 0
 10726  0152FE  0100               	movlb	0	; () banked
 10727  015300  3572               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10728  015302  3573               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10729  015304  0100               	movlb	0	; () banked
 10730  015306  6F7D               	movwf	__div_to_l_@exp1& (0+255),b
 10731  015308  0100               	movlb	0	; () banked
 10732  01530A  517D               	movf	__div_to_l_@exp1& (0+255),w,b
 10733  01530C  A4D8               	btfss	status,2,c
 10734  01530E  D00A               	goto	l8644
 10735                           
 10736                           ; BSR set to: 0
 10737  015310  0E00               	movlw	0
 10738  015312  0100               	movlb	0	; () banked
 10739  015314  6F70               	movwf	?__div_to_l_& (0+255),b
 10740  015316  0E00               	movlw	0
 10741  015318  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 10742  01531A  0E00               	movlw	0
 10743  01531C  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 10744  01531E  0E00               	movlw	0
 10745  015320  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 10746                           
 10747                           ; BSR set to: 0
 10748  015322  0012               	return	
 10749  015324                     l8644:
 10750                           
 10751                           ; BSR set to: 0
 10752  015324  0100               	movlb	0	; () banked
 10753  015326  3576               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10754  015328  3577               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10755  01532A  0100               	movlb	0	; () banked
 10756  01532C  6F7C               	movwf	__div_to_l_@cntr& (0+255),b
 10757  01532E  0100               	movlb	0	; () banked
 10758  015330  517C               	movf	__div_to_l_@cntr& (0+255),w,b
 10759  015332  A4D8               	btfss	status,2,c
 10760  015334  D00A               	goto	l8650
 10761                           
 10762                           ; BSR set to: 0
 10763  015336  0E00               	movlw	0
 10764  015338  0100               	movlb	0	; () banked
 10765  01533A  6F70               	movwf	?__div_to_l_& (0+255),b
 10766  01533C  0E00               	movlw	0
 10767  01533E  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 10768  015340  0E00               	movlw	0
 10769  015342  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 10770  015344  0E00               	movlw	0
 10771  015346  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 10772                           
 10773                           ; BSR set to: 0
 10774  015348  0012               	return	
 10775  01534A                     l8650:
 10776                           
 10777                           ; BSR set to: 0
 10778  01534A  0100               	movlb	0	; () banked
 10779  01534C  8F72               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10780                           
 10781                           ; BSR set to: 0
 10782  01534E  0EFF               	movlw	255
 10783  015350  0100               	movlb	0	; () banked
 10784  015352  1770               	andwf	__div_to_l_@f1& (0+255),f,b
 10785  015354  0EFF               	movlw	255
 10786  015356  1771               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10787  015358  0EFF               	movlw	255
 10788  01535A  1772               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10789  01535C  0E00               	movlw	0
 10790  01535E  1773               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10791                           
 10792                           ; BSR set to: 0
 10793  015360  0100               	movlb	0	; () banked
 10794  015362  8F76               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10795  015364  0EFF               	movlw	255
 10796  015366  0100               	movlb	0	; () banked
 10797  015368  1774               	andwf	__div_to_l_@f2& (0+255),f,b
 10798  01536A  0EFF               	movlw	255
 10799  01536C  1775               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10800  01536E  0EFF               	movlw	255
 10801  015370  1776               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10802  015372  0E00               	movlw	0
 10803  015374  1777               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10804                           
 10805                           ; BSR set to: 0
 10806  015376  0E00               	movlw	0
 10807  015378  0100               	movlb	0	; () banked
 10808  01537A  6F78               	movwf	__div_to_l_@quot& (0+255),b
 10809  01537C  0E00               	movlw	0
 10810  01537E  6F79               	movwf	(__div_to_l_@quot+1)& (0+255),b
 10811  015380  0E00               	movlw	0
 10812  015382  6F7A               	movwf	(__div_to_l_@quot+2)& (0+255),b
 10813  015384  0E00               	movlw	0
 10814  015386  6F7B               	movwf	(__div_to_l_@quot+3)& (0+255),b
 10815                           
 10816                           ; BSR set to: 0
 10817  015388  0E7F               	movlw	127
 10818  01538A  0100               	movlb	0	; () banked
 10819  01538C  5F7D               	subwf	__div_to_l_@exp1& (0+255),f,b
 10820                           
 10821                           ; BSR set to: 0
 10822  01538E  0100               	movlb	0	; () banked
 10823  015390  517C               	movf	__div_to_l_@cntr& (0+255),w,b
 10824  015392  0FA0               	addlw	160
 10825  015394  0100               	movlb	0	; () banked
 10826  015396  5F7D               	subwf	__div_to_l_@exp1& (0+255),f,b
 10827                           
 10828                           ; BSR set to: 0
 10829  015398  0E20               	movlw	32
 10830  01539A  0100               	movlb	0	; () banked
 10831  01539C  6F7C               	movwf	__div_to_l_@cntr& (0+255),b
 10832  01539E                     l8664:
 10833                           
 10834                           ; BSR set to: 0
 10835  01539E  0100               	movlb	0	; () banked
 10836  0153A0  90D8               	bcf	status,0,c
 10837  0153A2  3778               	rlcf	__div_to_l_@quot& (0+255),f,b
 10838  0153A4  3779               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10839  0153A6  377A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10840  0153A8  377B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10841                           
 10842                           ; BSR set to: 0
 10843  0153AA  0100               	movlb	0	; () banked
 10844  0153AC  5174               	movf	__div_to_l_@f2& (0+255),w,b
 10845  0153AE  0100               	movlb	0	; () banked
 10846  0153B0  5D70               	subwf	__div_to_l_@f1& (0+255),w,b
 10847  0153B2  0100               	movlb	0	; () banked
 10848  0153B4  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10849  0153B6  0100               	movlb	0	; () banked
 10850  0153B8  5971               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10851  0153BA  0100               	movlb	0	; () banked
 10852  0153BC  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10853  0153BE  0100               	movlb	0	; () banked
 10854  0153C0  5972               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10855  0153C2  0100               	movlb	0	; () banked
 10856  0153C4  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10857  0153C6  0100               	movlb	0	; () banked
 10858  0153C8  5973               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10859  0153CA  A0D8               	btfss	status,0,c
 10860  0153CC  D012               	goto	l8672
 10861                           
 10862                           ; BSR set to: 0
 10863  0153CE  0100               	movlb	0	; () banked
 10864  0153D0  5174               	movf	__div_to_l_@f2& (0+255),w,b
 10865  0153D2  0100               	movlb	0	; () banked
 10866  0153D4  5F70               	subwf	__div_to_l_@f1& (0+255),f,b
 10867  0153D6  0100               	movlb	0	; () banked
 10868  0153D8  5175               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10869  0153DA  0100               	movlb	0	; () banked
 10870  0153DC  5B71               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10871  0153DE  0100               	movlb	0	; () banked
 10872  0153E0  5176               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10873  0153E2  0100               	movlb	0	; () banked
 10874  0153E4  5B72               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10875  0153E6  0100               	movlb	0	; () banked
 10876  0153E8  5177               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10877  0153EA  0100               	movlb	0	; () banked
 10878  0153EC  5B73               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10879                           
 10880                           ; BSR set to: 0
 10881  0153EE  0100               	movlb	0	; () banked
 10882  0153F0  8178               	bsf	__div_to_l_@quot& (0+255),0,b
 10883  0153F2                     l8672:
 10884                           
 10885                           ; BSR set to: 0
 10886  0153F2  0100               	movlb	0	; () banked
 10887  0153F4  90D8               	bcf	status,0,c
 10888  0153F6  3770               	rlcf	__div_to_l_@f1& (0+255),f,b
 10889  0153F8  3771               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10890  0153FA  3772               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10891  0153FC  3773               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10892                           
 10893                           ; BSR set to: 0
 10894  0153FE  0100               	movlb	0	; () banked
 10895  015400  2F7C               	decfsz	__div_to_l_@cntr& (0+255),f,b
 10896  015402  D7CD               	goto	l8664
 10897                           
 10898                           ; BSR set to: 0
 10899                           
 10900                           ; BSR set to: 0
 10901  015404  0100               	movlb	0	; () banked
 10902  015406  AF7D               	btfss	__div_to_l_@exp1& (0+255),7,b
 10903  015408  D01A               	goto	l8688
 10904                           
 10905                           ; BSR set to: 0
 10906  01540A  0100               	movlb	0	; () banked
 10907  01540C  517D               	movf	__div_to_l_@exp1& (0+255),w,b
 10908  01540E  0A80               	xorlw	128
 10909  015410  0F9F               	addlw	159
 10910  015412  B0D8               	btfsc	status,0,c
 10911  015414  D00A               	goto	l8684
 10912                           
 10913                           ; BSR set to: 0
 10914  015416  0E00               	movlw	0
 10915  015418  0100               	movlb	0	; () banked
 10916  01541A  6F70               	movwf	?__div_to_l_& (0+255),b
 10917  01541C  0E00               	movlw	0
 10918  01541E  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 10919  015420  0E00               	movlw	0
 10920  015422  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 10921  015424  0E00               	movlw	0
 10922  015426  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 10923                           
 10924                           ; BSR set to: 0
 10925  015428  0012               	return	
 10926  01542A                     l8684:
 10927                           
 10928                           ; BSR set to: 0
 10929  01542A  0100               	movlb	0	; () banked
 10930  01542C  90D8               	bcf	status,0,c
 10931  01542E  337B               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 10932  015430  337A               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 10933  015432  3379               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 10934  015434  3378               	rrcf	__div_to_l_@quot& (0+255),f,b
 10935                           
 10936                           ; BSR set to: 0
 10937  015436  0100               	movlb	0	; () banked
 10938  015438  3F7D               	incfsz	__div_to_l_@exp1& (0+255),f,b
 10939  01543A  D7F7               	goto	l8684
 10940                           
 10941                           ; BSR set to: 0
 10942  01543C  D01B               	goto	l1231
 10943  01543E                     l8688:
 10944                           
 10945                           ; BSR set to: 0
 10946  01543E  0E1F               	movlw	31
 10947  015440  0100               	movlb	0	; () banked
 10948  015442  657D               	cpfsgt	__div_to_l_@exp1& (0+255),b
 10949  015444  D012               	goto	l8696
 10950                           
 10951                           ; BSR set to: 0
 10952  015446  0E00               	movlw	0
 10953  015448  0100               	movlb	0	; () banked
 10954  01544A  6F70               	movwf	?__div_to_l_& (0+255),b
 10955  01544C  0E00               	movlw	0
 10956  01544E  6F71               	movwf	(?__div_to_l_+1)& (0+255),b
 10957  015450  0E00               	movlw	0
 10958  015452  6F72               	movwf	(?__div_to_l_+2)& (0+255),b
 10959  015454  0E00               	movlw	0
 10960  015456  6F73               	movwf	(?__div_to_l_+3)& (0+255),b
 10961                           
 10962                           ; BSR set to: 0
 10963  015458  0012               	return	
 10964  01545A                     l8694:
 10965                           
 10966                           ; BSR set to: 0
 10967  01545A  0100               	movlb	0	; () banked
 10968  01545C  90D8               	bcf	status,0,c
 10969  01545E  3778               	rlcf	__div_to_l_@quot& (0+255),f,b
 10970  015460  3779               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10971  015462  377A               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10972  015464  377B               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10973  015466  0100               	movlb	0	; () banked
 10974  015468  077D               	decf	__div_to_l_@exp1& (0+255),f,b
 10975  01546A                     l8696:
 10976                           
 10977                           ; BSR set to: 0
 10978  01546A  0100               	movlb	0	; () banked
 10979  01546C  517D               	movf	__div_to_l_@exp1& (0+255),w,b
 10980  01546E  0100               	movlb	0	; () banked
 10981  015470  A4D8               	btfss	status,2,c
 10982  015472  D7F3               	goto	l8694
 10983  015474                     l1231:
 10984                           
 10985                           ; BSR set to: 0
 10986  015474  C078  F070         	movff	__div_to_l_@quot,?__div_to_l_
 10987  015478  C079  F071         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10988  01547C  C07A  F072         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10989  015480  C07B  F073         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10990                           
 10991                           ; BSR set to: 0
 10992  015484  0012               	return		;funcret
 10993  015486                     __end_of__div_to_l_:
 10994                           	opt stack 0
 10995                           tblptru	equ	0xFF8
 10996                           tblptrh	equ	0xFF7
 10997                           tblptrl	equ	0xFF6
 10998                           tablat	equ	0xFF5
 10999                           prodh	equ	0xFF4
 11000                           prodl	equ	0xFF3
 11001                           intcon	equ	0xFF2
 11002                           postinc0	equ	0xFEE
 11003                           wreg	equ	0xFE8
 11004                           indf2	equ	0xFDF
 11005                           postinc2	equ	0xFDE
 11006                           fsr2h	equ	0xFDA
 11007                           fsr2l	equ	0xFD9
 11008                           status	equ	0xFD8
 11009                           
 11010 ;; *************** function ___xxtofl *****************
 11011 ;; Defined at:
 11012 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
 11013 ;; Parameters:    Size  Location     Type
 11014 ;;  sign            1    wreg     unsigned char 
 11015 ;;  val             4   16[BANK0 ] long 
 11016 ;; Auto vars:     Size  Location     Type
 11017 ;;  sign            1   24[BANK0 ] unsigned char 
 11018 ;;  arg             4   26[BANK0 ] unsigned long 
 11019 ;;  exp             1   25[BANK0 ] unsigned char 
 11020 ;; Return value:  Size  Location     Type
 11021 ;;                  4   16[BANK0 ] unsigned char 
 11022 ;; Registers used:
 11023 ;;		wreg, status,2, status,0
 11024 ;; Tracked objects:
 11025 ;;		On entry : 0/0
 11026 ;;		On exit  : 0/0
 11027 ;;		Unchanged: 0/0
 11028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11029 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11030 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11031 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11032 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11033 ;;Total ram usage:       14 bytes
 11034 ;; Hardware stack levels used:    1
 11035 ;; Hardware stack levels required when called:    9
 11036 ;; This function calls:
 11037 ;;		Nothing
 11038 ;; This function is called by:
 11039 ;;		_main
 11040 ;;		_LCD_Handler
 11041 ;;		_sprintf
 11042 ;; This function uses a non-reentrant model
 11043 ;;
 11044                           
 11045                           	psect	text17
 11046  0148CE                     __ptext17:
 11047                           	opt stack 0
 11048  0148CE                     ___xxtofl:
 11049                           	opt stack 21
 11050                           
 11051                           ; BSR set to: 0
 11052                           ;incstack = 0
 11053                           ;___xxtofl@sign stored from wreg
 11054  0148CE  0100               	movlb	0	; () banked
 11055  0148D0  6F78               	movwf	___xxtofl@sign& (0+255),b
 11056  0148D2  0100               	movlb	0	; () banked
 11057  0148D4  5178               	movf	___xxtofl@sign& (0+255),w,b
 11058  0148D6  0100               	movlb	0	; () banked
 11059  0148D8  B4D8               	btfsc	status,2,c
 11060  0148DA  D01E               	goto	l1626
 11061                           
 11062                           ; BSR set to: 0
 11063  0148DC  0100               	movlb	0	; () banked
 11064  0148DE  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
 11065  0148E0  D01B               	goto	l1626
 11066                           
 11067                           ; BSR set to: 0
 11068  0148E2  C070  F074         	movff	___xxtofl@val,??___xxtofl
 11069  0148E6  C071  F075         	movff	___xxtofl@val+1,??___xxtofl+1
 11070  0148EA  C072  F076         	movff	___xxtofl@val+2,??___xxtofl+2
 11071  0148EE  C073  F077         	movff	___xxtofl@val+3,??___xxtofl+3
 11072  0148F2  0100               	movlb	0	; () banked
 11073  0148F4  1F74               	comf	??___xxtofl& (0+255),f,b
 11074  0148F6  1F75               	comf	(??___xxtofl+1)& (0+255),f,b
 11075  0148F8  1F76               	comf	(??___xxtofl+2)& (0+255),f,b
 11076  0148FA  1F77               	comf	(??___xxtofl+3)& (0+255),f,b
 11077  0148FC  2B74               	incf	??___xxtofl& (0+255),f,b
 11078  0148FE  0E00               	movlw	0
 11079  014900  2375               	addwfc	(??___xxtofl+1)& (0+255),f,b
 11080  014902  2376               	addwfc	(??___xxtofl+2)& (0+255),f,b
 11081  014904  2377               	addwfc	(??___xxtofl+3)& (0+255),f,b
 11082  014906  C074  F07A         	movff	??___xxtofl,___xxtofl@arg
 11083  01490A  C075  F07B         	movff	??___xxtofl+1,___xxtofl@arg+1
 11084  01490E  C076  F07C         	movff	??___xxtofl+2,___xxtofl@arg+2
 11085  014912  C077  F07D         	movff	??___xxtofl+3,___xxtofl@arg+3
 11086  014916  D008               	goto	l8822
 11087  014918                     l1626:
 11088                           
 11089                           ; BSR set to: 0
 11090  014918  C070  F07A         	movff	___xxtofl@val,___xxtofl@arg
 11091  01491C  C071  F07B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11092  014920  C072  F07C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11093  014924  C073  F07D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11094  014928                     l8822:
 11095                           
 11096                           ; BSR set to: 0
 11097  014928  0100               	movlb	0	; () banked
 11098  01492A  5170               	movf	___xxtofl@val& (0+255),w,b
 11099  01492C  0100               	movlb	0	; () banked
 11100  01492E  1171               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 11101  014930  0100               	movlb	0	; () banked
 11102  014932  1172               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 11103  014934  0100               	movlb	0	; () banked
 11104  014936  1173               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 11105  014938  A4D8               	btfss	status,2,c
 11106  01493A  D00A               	goto	l8828
 11107                           
 11108                           ; BSR set to: 0
 11109  01493C  0E00               	movlw	0
 11110  01493E  0100               	movlb	0	; () banked
 11111  014940  6F70               	movwf	?___xxtofl& (0+255),b
 11112  014942  0E00               	movlw	0
 11113  014944  6F71               	movwf	(?___xxtofl+1)& (0+255),b
 11114  014946  0E00               	movlw	0
 11115  014948  6F72               	movwf	(?___xxtofl+2)& (0+255),b
 11116  01494A  0E00               	movlw	0
 11117  01494C  6F73               	movwf	(?___xxtofl+3)& (0+255),b
 11118                           
 11119                           ; BSR set to: 0
 11120  01494E  0012               	return	
 11121  014950                     l8828:
 11122                           
 11123                           ; BSR set to: 0
 11124  014950  0E96               	movlw	150
 11125  014952  0100               	movlb	0	; () banked
 11126  014954  6F79               	movwf	___xxtofl@exp& (0+255),b
 11127  014956  D008               	goto	l8832
 11128  014958                     l8830:
 11129                           
 11130                           ; BSR set to: 0
 11131  014958  0100               	movlb	0	; () banked
 11132  01495A  2B79               	incf	___xxtofl@exp& (0+255),f,b
 11133  01495C  0100               	movlb	0	; () banked
 11134  01495E  90D8               	bcf	status,0,c
 11135  014960  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 11136  014962  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 11137  014964  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 11138  014966  337A               	rrcf	___xxtofl@arg& (0+255),f,b
 11139  014968                     l8832:
 11140                           
 11141                           ; BSR set to: 0
 11142  014968  0E00               	movlw	0
 11143  01496A  0100               	movlb	0	; () banked
 11144  01496C  157A               	andwf	___xxtofl@arg& (0+255),w,b
 11145  01496E  0100               	movlb	0	; () banked
 11146  014970  6F74               	movwf	??___xxtofl& (0+255),b
 11147  014972  0E00               	movlw	0
 11148  014974  0100               	movlb	0	; () banked
 11149  014976  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 11150  014978  0100               	movlb	0	; () banked
 11151  01497A  6F75               	movwf	(??___xxtofl+1)& (0+255),b
 11152  01497C  0E00               	movlw	0
 11153  01497E  0100               	movlb	0	; () banked
 11154  014980  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 11155  014982  0100               	movlb	0	; () banked
 11156  014984  6F76               	movwf	(??___xxtofl+2)& (0+255),b
 11157  014986  0EFE               	movlw	254
 11158  014988  0100               	movlb	0	; () banked
 11159  01498A  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 11160  01498C  0100               	movlb	0	; () banked
 11161  01498E  6F77               	movwf	(??___xxtofl+3)& (0+255),b
 11162  014990  0100               	movlb	0	; () banked
 11163  014992  5174               	movf	??___xxtofl& (0+255),w,b
 11164  014994  0100               	movlb	0	; () banked
 11165  014996  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
 11166  014998  0100               	movlb	0	; () banked
 11167  01499A  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
 11168  01499C  0100               	movlb	0	; () banked
 11169  01499E  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
 11170  0149A0  B4D8               	btfsc	status,2,c
 11171  0149A2  D010               	goto	l1633
 11172  0149A4  D7D9               	goto	l8830
 11173  0149A6                     l8834:
 11174                           
 11175                           ; BSR set to: 0
 11176  0149A6  0100               	movlb	0	; () banked
 11177  0149A8  2B79               	incf	___xxtofl@exp& (0+255),f,b
 11178                           
 11179                           ; BSR set to: 0
 11180  0149AA  0E01               	movlw	1
 11181  0149AC  0100               	movlb	0	; () banked
 11182  0149AE  277A               	addwf	___xxtofl@arg& (0+255),f,b
 11183  0149B0  0E00               	movlw	0
 11184  0149B2  237B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 11185  0149B4  237C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 11186  0149B6  237D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 11187                           
 11188                           ; BSR set to: 0
 11189  0149B8  0100               	movlb	0	; () banked
 11190  0149BA  90D8               	bcf	status,0,c
 11191  0149BC  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 11192  0149BE  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 11193  0149C0  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 11194  0149C2  337A               	rrcf	___xxtofl@arg& (0+255),f,b
 11195  0149C4                     l1633:
 11196                           
 11197                           ; BSR set to: 0
 11198  0149C4  0E00               	movlw	0
 11199  0149C6  0100               	movlb	0	; () banked
 11200  0149C8  157A               	andwf	___xxtofl@arg& (0+255),w,b
 11201  0149CA  0100               	movlb	0	; () banked
 11202  0149CC  6F74               	movwf	??___xxtofl& (0+255),b
 11203  0149CE  0E00               	movlw	0
 11204  0149D0  0100               	movlb	0	; () banked
 11205  0149D2  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 11206  0149D4  0100               	movlb	0	; () banked
 11207  0149D6  6F75               	movwf	(??___xxtofl+1)& (0+255),b
 11208  0149D8  0E00               	movlw	0
 11209  0149DA  0100               	movlb	0	; () banked
 11210  0149DC  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 11211  0149DE  0100               	movlb	0	; () banked
 11212  0149E0  6F76               	movwf	(??___xxtofl+2)& (0+255),b
 11213  0149E2  0EFF               	movlw	255
 11214  0149E4  0100               	movlb	0	; () banked
 11215  0149E6  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 11216  0149E8  0100               	movlb	0	; () banked
 11217  0149EA  6F77               	movwf	(??___xxtofl+3)& (0+255),b
 11218  0149EC  0100               	movlb	0	; () banked
 11219  0149EE  5174               	movf	??___xxtofl& (0+255),w,b
 11220  0149F0  0100               	movlb	0	; () banked
 11221  0149F2  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
 11222  0149F4  0100               	movlb	0	; () banked
 11223  0149F6  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
 11224  0149F8  0100               	movlb	0	; () banked
 11225  0149FA  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
 11226  0149FC  B4D8               	btfsc	status,2,c
 11227  0149FE  D009               	goto	l8842
 11228  014A00  D7D2               	goto	l8834
 11229  014A02                     l8840:
 11230                           
 11231                           ; BSR set to: 0
 11232  014A02  0100               	movlb	0	; () banked
 11233  014A04  0779               	decf	___xxtofl@exp& (0+255),f,b
 11234  014A06  0100               	movlb	0	; () banked
 11235  014A08  90D8               	bcf	status,0,c
 11236  014A0A  377A               	rlcf	___xxtofl@arg& (0+255),f,b
 11237  014A0C  377B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 11238  014A0E  377C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 11239  014A10  377D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 11240  014A12                     l8842:
 11241                           
 11242                           ; BSR set to: 0
 11243  014A12  0100               	movlb	0	; () banked
 11244  014A14  BF7C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 11245  014A16  D004               	goto	l1640
 11246                           
 11247                           ; BSR set to: 0
 11248  014A18  0E02               	movlw	2
 11249  014A1A  0100               	movlb	0	; () banked
 11250  014A1C  6179               	cpfslt	___xxtofl@exp& (0+255),b
 11251  014A1E  D7F1               	goto	l8840
 11252  014A20                     l1640:
 11253                           
 11254                           ; BSR set to: 0
 11255  014A20  0100               	movlb	0	; () banked
 11256  014A22  B179               	btfsc	___xxtofl@exp& (0+255),0,b
 11257  014A24  D009               	goto	l1641
 11258                           
 11259                           ; BSR set to: 0
 11260  014A26  0EFF               	movlw	255
 11261  014A28  0100               	movlb	0	; () banked
 11262  014A2A  177A               	andwf	___xxtofl@arg& (0+255),f,b
 11263  014A2C  0EFF               	movlw	255
 11264  014A2E  177B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 11265  014A30  0E7F               	movlw	127
 11266  014A32  177C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 11267  014A34  0EFF               	movlw	255
 11268  014A36  177D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 11269  014A38                     l1641:
 11270                           
 11271                           ; BSR set to: 0
 11272  014A38  0100               	movlb	0	; () banked
 11273  014A3A  90D8               	bcf	status,0,c
 11274  014A3C  3379               	rrcf	___xxtofl@exp& (0+255),f,b
 11275  014A3E  C079  F074         	movff	___xxtofl@exp,??___xxtofl
 11276  014A42  0100               	movlb	0	; () banked
 11277  014A44  6B75               	clrf	(??___xxtofl+1)& (0+255),b
 11278  014A46  6B76               	clrf	(??___xxtofl+2)& (0+255),b
 11279  014A48  6B77               	clrf	(??___xxtofl+3)& (0+255),b
 11280  014A4A  C074  F077         	movff	??___xxtofl,??___xxtofl+3
 11281  014A4E  0100               	movlb	0	; () banked
 11282  014A50  6B76               	clrf	(??___xxtofl+2)& (0+255),b
 11283  014A52  6B75               	clrf	(??___xxtofl+1)& (0+255),b
 11284  014A54  6B74               	clrf	??___xxtofl& (0+255),b
 11285  014A56  0100               	movlb	0	; () banked
 11286  014A58  5174               	movf	??___xxtofl& (0+255),w,b
 11287  014A5A  0100               	movlb	0	; () banked
 11288  014A5C  137A               	iorwf	___xxtofl@arg& (0+255),f,b
 11289  014A5E  0100               	movlb	0	; () banked
 11290  014A60  5175               	movf	(??___xxtofl+1)& (0+255),w,b
 11291  014A62  0100               	movlb	0	; () banked
 11292  014A64  137B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 11293  014A66  0100               	movlb	0	; () banked
 11294  014A68  5176               	movf	(??___xxtofl+2)& (0+255),w,b
 11295  014A6A  0100               	movlb	0	; () banked
 11296  014A6C  137C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 11297  014A6E  0100               	movlb	0	; () banked
 11298  014A70  5177               	movf	(??___xxtofl+3)& (0+255),w,b
 11299  014A72  0100               	movlb	0	; () banked
 11300  014A74  137D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 11301                           
 11302                           ; BSR set to: 0
 11303  014A76  0100               	movlb	0	; () banked
 11304  014A78  5178               	movf	___xxtofl@sign& (0+255),w,b
 11305  014A7A  0100               	movlb	0	; () banked
 11306  014A7C  B4D8               	btfsc	status,2,c
 11307  014A7E  D005               	goto	l8854
 11308                           
 11309                           ; BSR set to: 0
 11310  014A80  0100               	movlb	0	; () banked
 11311  014A82  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
 11312  014A84  D002               	goto	l8854
 11313                           
 11314                           ; BSR set to: 0
 11315  014A86  0100               	movlb	0	; () banked
 11316  014A88  8F7D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 11317  014A8A                     l8854:
 11318                           
 11319                           ; BSR set to: 0
 11320  014A8A  C07A  F070         	movff	___xxtofl@arg,?___xxtofl
 11321  014A8E  C07B  F071         	movff	___xxtofl@arg+1,?___xxtofl+1
 11322  014A92  C07C  F072         	movff	___xxtofl@arg+2,?___xxtofl+2
 11323  014A96  C07D  F073         	movff	___xxtofl@arg+3,?___xxtofl+3
 11324  014A9A  0012               	return	
 11325  014A9C                     __end_of___xxtofl:
 11326                           	opt stack 0
 11327                           tblptru	equ	0xFF8
 11328                           tblptrh	equ	0xFF7
 11329                           tblptrl	equ	0xFF6
 11330                           tablat	equ	0xFF5
 11331                           prodh	equ	0xFF4
 11332                           prodl	equ	0xFF3
 11333                           intcon	equ	0xFF2
 11334                           postinc0	equ	0xFEE
 11335                           wreg	equ	0xFE8
 11336                           indf2	equ	0xFDF
 11337                           postinc2	equ	0xFDE
 11338                           fsr2h	equ	0xFDA
 11339                           fsr2l	equ	0xFD9
 11340                           status	equ	0xFD8
 11341                           
 11342 ;; *************** function ___llmod *****************
 11343 ;; Defined at:
 11344 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 11345 ;; Parameters:    Size  Location     Type
 11346 ;;  dividend        4   16[BANK0 ] unsigned long 
 11347 ;;  divisor         4   20[BANK0 ] unsigned long 
 11348 ;; Auto vars:     Size  Location     Type
 11349 ;;  counter         1   24[BANK0 ] unsigned char 
 11350 ;; Return value:  Size  Location     Type
 11351 ;;                  4   16[BANK0 ] unsigned long 
 11352 ;; Registers used:
 11353 ;;		wreg, status,2, status,0
 11354 ;; Tracked objects:
 11355 ;;		On entry : 0/0
 11356 ;;		On exit  : 0/0
 11357 ;;		Unchanged: 0/0
 11358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11359 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11360 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11362 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11363 ;;Total ram usage:        9 bytes
 11364 ;; Hardware stack levels used:    1
 11365 ;; Hardware stack levels required when called:    9
 11366 ;; This function calls:
 11367 ;;		Nothing
 11368 ;; This function is called by:
 11369 ;;		_sprintf
 11370 ;; This function uses a non-reentrant model
 11371 ;;
 11372                           
 11373                           	psect	text18
 11374  015F40                     __ptext18:
 11375                           	opt stack 0
 11376  015F40                     ___llmod:
 11377                           	opt stack 19
 11378                           
 11379                           ; BSR set to: 0
 11380                           ;incstack = 0
 11381  015F40  0100               	movlb	0	; () banked
 11382  015F42  5174               	movf	___llmod@divisor& (0+255),w,b
 11383  015F44  0100               	movlb	0	; () banked
 11384  015F46  1175               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11385  015F48  0100               	movlb	0	; () banked
 11386  015F4A  1176               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11387  015F4C  0100               	movlb	0	; () banked
 11388  015F4E  1177               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11389  015F50  B4D8               	btfsc	status,2,c
 11390  015F52  D03A               	goto	l1434
 11391                           
 11392                           ; BSR set to: 0
 11393  015F54  0E01               	movlw	1
 11394  015F56  0100               	movlb	0	; () banked
 11395  015F58  6F78               	movwf	___llmod@counter& (0+255),b
 11396  015F5A  D008               	goto	l8806
 11397  015F5C                     l8804:
 11398                           
 11399                           ; BSR set to: 0
 11400  015F5C  0100               	movlb	0	; () banked
 11401  015F5E  90D8               	bcf	status,0,c
 11402  015F60  3774               	rlcf	___llmod@divisor& (0+255),f,b
 11403  015F62  3775               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11404  015F64  3776               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11405  015F66  3777               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11406  015F68  0100               	movlb	0	; () banked
 11407  015F6A  2B78               	incf	___llmod@counter& (0+255),f,b
 11408  015F6C                     l8806:
 11409                           
 11410                           ; BSR set to: 0
 11411  015F6C  0100               	movlb	0	; () banked
 11412  015F6E  AF77               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11413  015F70  D7F5               	goto	l8804
 11414  015F72                     l8808:
 11415                           
 11416                           ; BSR set to: 0
 11417  015F72  0100               	movlb	0	; () banked
 11418  015F74  5174               	movf	___llmod@divisor& (0+255),w,b
 11419  015F76  0100               	movlb	0	; () banked
 11420  015F78  5D70               	subwf	___llmod@dividend& (0+255),w,b
 11421  015F7A  0100               	movlb	0	; () banked
 11422  015F7C  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
 11423  015F7E  0100               	movlb	0	; () banked
 11424  015F80  5971               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11425  015F82  0100               	movlb	0	; () banked
 11426  015F84  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
 11427  015F86  0100               	movlb	0	; () banked
 11428  015F88  5972               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11429  015F8A  0100               	movlb	0	; () banked
 11430  015F8C  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
 11431  015F8E  0100               	movlb	0	; () banked
 11432  015F90  5973               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11433  015F92  A0D8               	btfss	status,0,c
 11434  015F94  D010               	goto	l8812
 11435                           
 11436                           ; BSR set to: 0
 11437  015F96  0100               	movlb	0	; () banked
 11438  015F98  5174               	movf	___llmod@divisor& (0+255),w,b
 11439  015F9A  0100               	movlb	0	; () banked
 11440  015F9C  5F70               	subwf	___llmod@dividend& (0+255),f,b
 11441  015F9E  0100               	movlb	0	; () banked
 11442  015FA0  5175               	movf	(___llmod@divisor+1)& (0+255),w,b
 11443  015FA2  0100               	movlb	0	; () banked
 11444  015FA4  5B71               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11445  015FA6  0100               	movlb	0	; () banked
 11446  015FA8  5176               	movf	(___llmod@divisor+2)& (0+255),w,b
 11447  015FAA  0100               	movlb	0	; () banked
 11448  015FAC  5B72               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11449  015FAE  0100               	movlb	0	; () banked
 11450  015FB0  5177               	movf	(___llmod@divisor+3)& (0+255),w,b
 11451  015FB2  0100               	movlb	0	; () banked
 11452  015FB4  5B73               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11453  015FB6                     l8812:
 11454                           
 11455                           ; BSR set to: 0
 11456  015FB6  0100               	movlb	0	; () banked
 11457  015FB8  90D8               	bcf	status,0,c
 11458  015FBA  3377               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11459  015FBC  3376               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11460  015FBE  3375               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11461  015FC0  3374               	rrcf	___llmod@divisor& (0+255),f,b
 11462                           
 11463                           ; BSR set to: 0
 11464  015FC2  0100               	movlb	0	; () banked
 11465  015FC4  2F78               	decfsz	___llmod@counter& (0+255),f,b
 11466  015FC6  D7D5               	goto	l8808
 11467  015FC8                     l1434:
 11468                           
 11469                           ; BSR set to: 0
 11470  015FC8  C070  F070         	movff	___llmod@dividend,?___llmod
 11471  015FCC  C071  F071         	movff	___llmod@dividend+1,?___llmod+1
 11472  015FD0  C072  F072         	movff	___llmod@dividend+2,?___llmod+2
 11473  015FD4  C073  F073         	movff	___llmod@dividend+3,?___llmod+3
 11474                           
 11475                           ; BSR set to: 0
 11476  015FD8  0012               	return		;funcret
 11477  015FDA                     __end_of___llmod:
 11478                           	opt stack 0
 11479                           tblptru	equ	0xFF8
 11480                           tblptrh	equ	0xFF7
 11481                           tblptrl	equ	0xFF6
 11482                           tablat	equ	0xFF5
 11483                           prodh	equ	0xFF4
 11484                           prodl	equ	0xFF3
 11485                           intcon	equ	0xFF2
 11486                           postinc0	equ	0xFEE
 11487                           wreg	equ	0xFE8
 11488                           indf2	equ	0xFDF
 11489                           postinc2	equ	0xFDE
 11490                           fsr2h	equ	0xFDA
 11491                           fsr2l	equ	0xFD9
 11492                           status	equ	0xFD8
 11493                           
 11494 ;; *************** function ___lldiv *****************
 11495 ;; Defined at:
 11496 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 11497 ;; Parameters:    Size  Location     Type
 11498 ;;  dividend        4   16[BANK0 ] unsigned long 
 11499 ;;  divisor         4   20[BANK0 ] unsigned long 
 11500 ;; Auto vars:     Size  Location     Type
 11501 ;;  quotient        4   24[BANK0 ] unsigned long 
 11502 ;;  counter         1   28[BANK0 ] unsigned char 
 11503 ;; Return value:  Size  Location     Type
 11504 ;;                  4   16[BANK0 ] unsigned long 
 11505 ;; Registers used:
 11506 ;;		wreg, status,2, status,0
 11507 ;; Tracked objects:
 11508 ;;		On entry : 0/0
 11509 ;;		On exit  : 0/0
 11510 ;;		Unchanged: 0/0
 11511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11512 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11513 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11515 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11516 ;;Total ram usage:       13 bytes
 11517 ;; Hardware stack levels used:    1
 11518 ;; Hardware stack levels required when called:    9
 11519 ;; This function calls:
 11520 ;;		Nothing
 11521 ;; This function is called by:
 11522 ;;		_sprintf
 11523 ;; This function uses a non-reentrant model
 11524 ;;
 11525                           
 11526                           	psect	text19
 11527  015A82                     __ptext19:
 11528                           	opt stack 0
 11529  015A82                     ___lldiv:
 11530                           	opt stack 19
 11531                           
 11532                           ; BSR set to: 0
 11533                           ;incstack = 0
 11534  015A82  0E00               	movlw	0
 11535  015A84  0100               	movlb	0	; () banked
 11536  015A86  6F78               	movwf	___lldiv@quotient& (0+255),b
 11537  015A88  0E00               	movlw	0
 11538  015A8A  6F79               	movwf	(___lldiv@quotient+1)& (0+255),b
 11539  015A8C  0E00               	movlw	0
 11540  015A8E  6F7A               	movwf	(___lldiv@quotient+2)& (0+255),b
 11541  015A90  0E00               	movlw	0
 11542  015A92  6F7B               	movwf	(___lldiv@quotient+3)& (0+255),b
 11543                           
 11544                           ; BSR set to: 0
 11545  015A94  0100               	movlb	0	; () banked
 11546  015A96  5174               	movf	___lldiv@divisor& (0+255),w,b
 11547  015A98  0100               	movlb	0	; () banked
 11548  015A9A  1175               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11549  015A9C  0100               	movlb	0	; () banked
 11550  015A9E  1176               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11551  015AA0  0100               	movlb	0	; () banked
 11552  015AA2  1177               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11553  015AA4  B4D8               	btfsc	status,2,c
 11554  015AA6  D042               	goto	l1424
 11555                           
 11556                           ; BSR set to: 0
 11557  015AA8  0E01               	movlw	1
 11558  015AAA  0100               	movlb	0	; () banked
 11559  015AAC  6F7C               	movwf	___lldiv@counter& (0+255),b
 11560  015AAE  D008               	goto	l8786
 11561  015AB0                     l8784:
 11562                           
 11563                           ; BSR set to: 0
 11564  015AB0  0100               	movlb	0	; () banked
 11565  015AB2  90D8               	bcf	status,0,c
 11566  015AB4  3774               	rlcf	___lldiv@divisor& (0+255),f,b
 11567  015AB6  3775               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11568  015AB8  3776               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11569  015ABA  3777               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11570  015ABC  0100               	movlb	0	; () banked
 11571  015ABE  2B7C               	incf	___lldiv@counter& (0+255),f,b
 11572  015AC0                     l8786:
 11573                           
 11574                           ; BSR set to: 0
 11575  015AC0  0100               	movlb	0	; () banked
 11576  015AC2  AF77               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11577  015AC4  D7F5               	goto	l8784
 11578  015AC6                     l8788:
 11579                           
 11580                           ; BSR set to: 0
 11581  015AC6  0100               	movlb	0	; () banked
 11582  015AC8  90D8               	bcf	status,0,c
 11583  015ACA  3778               	rlcf	___lldiv@quotient& (0+255),f,b
 11584  015ACC  3779               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11585  015ACE  377A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11586  015AD0  377B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11587                           
 11588                           ; BSR set to: 0
 11589  015AD2  0100               	movlb	0	; () banked
 11590  015AD4  5174               	movf	___lldiv@divisor& (0+255),w,b
 11591  015AD6  0100               	movlb	0	; () banked
 11592  015AD8  5D70               	subwf	___lldiv@dividend& (0+255),w,b
 11593  015ADA  0100               	movlb	0	; () banked
 11594  015ADC  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11595  015ADE  0100               	movlb	0	; () banked
 11596  015AE0  5971               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11597  015AE2  0100               	movlb	0	; () banked
 11598  015AE4  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11599  015AE6  0100               	movlb	0	; () banked
 11600  015AE8  5972               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11601  015AEA  0100               	movlb	0	; () banked
 11602  015AEC  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11603  015AEE  0100               	movlb	0	; () banked
 11604  015AF0  5973               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11605  015AF2  A0D8               	btfss	status,0,c
 11606  015AF4  D012               	goto	l8796
 11607                           
 11608                           ; BSR set to: 0
 11609  015AF6  0100               	movlb	0	; () banked
 11610  015AF8  5174               	movf	___lldiv@divisor& (0+255),w,b
 11611  015AFA  0100               	movlb	0	; () banked
 11612  015AFC  5F70               	subwf	___lldiv@dividend& (0+255),f,b
 11613  015AFE  0100               	movlb	0	; () banked
 11614  015B00  5175               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11615  015B02  0100               	movlb	0	; () banked
 11616  015B04  5B71               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11617  015B06  0100               	movlb	0	; () banked
 11618  015B08  5176               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11619  015B0A  0100               	movlb	0	; () banked
 11620  015B0C  5B72               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11621  015B0E  0100               	movlb	0	; () banked
 11622  015B10  5177               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11623  015B12  0100               	movlb	0	; () banked
 11624  015B14  5B73               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11625                           
 11626                           ; BSR set to: 0
 11627  015B16  0100               	movlb	0	; () banked
 11628  015B18  8178               	bsf	___lldiv@quotient& (0+255),0,b
 11629  015B1A                     l8796:
 11630                           
 11631                           ; BSR set to: 0
 11632  015B1A  0100               	movlb	0	; () banked
 11633  015B1C  90D8               	bcf	status,0,c
 11634  015B1E  3377               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11635  015B20  3376               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11636  015B22  3375               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11637  015B24  3374               	rrcf	___lldiv@divisor& (0+255),f,b
 11638                           
 11639                           ; BSR set to: 0
 11640  015B26  0100               	movlb	0	; () banked
 11641  015B28  2F7C               	decfsz	___lldiv@counter& (0+255),f,b
 11642  015B2A  D7CD               	goto	l8788
 11643  015B2C                     l1424:
 11644                           
 11645                           ; BSR set to: 0
 11646  015B2C  C078  F070         	movff	___lldiv@quotient,?___lldiv
 11647  015B30  C079  F071         	movff	___lldiv@quotient+1,?___lldiv+1
 11648  015B34  C07A  F072         	movff	___lldiv@quotient+2,?___lldiv+2
 11649  015B38  C07B  F073         	movff	___lldiv@quotient+3,?___lldiv+3
 11650                           
 11651                           ; BSR set to: 0
 11652  015B3C  0012               	return		;funcret
 11653  015B3E                     __end_of___lldiv:
 11654                           	opt stack 0
 11655                           tblptru	equ	0xFF8
 11656                           tblptrh	equ	0xFF7
 11657                           tblptrl	equ	0xFF6
 11658                           tablat	equ	0xFF5
 11659                           prodh	equ	0xFF4
 11660                           prodl	equ	0xFF3
 11661                           intcon	equ	0xFF2
 11662                           postinc0	equ	0xFEE
 11663                           wreg	equ	0xFE8
 11664                           indf2	equ	0xFDF
 11665                           postinc2	equ	0xFDE
 11666                           fsr2h	equ	0xFDA
 11667                           fsr2l	equ	0xFD9
 11668                           status	equ	0xFD8
 11669                           
 11670 ;; *************** function ___fltol *****************
 11671 ;; Defined at:
 11672 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 11673 ;; Parameters:    Size  Location     Type
 11674 ;;  f1              4   88[BANK0 ] unsigned long 
 11675 ;; Auto vars:     Size  Location     Type
 11676 ;;  exp1            1   97[BANK0 ] unsigned char 
 11677 ;;  sign1           1   96[BANK0 ] unsigned char 
 11678 ;; Return value:  Size  Location     Type
 11679 ;;                  4   88[BANK0 ] long 
 11680 ;; Registers used:
 11681 ;;		wreg, status,2, status,0
 11682 ;; Tracked objects:
 11683 ;;		On entry : 0/0
 11684 ;;		On exit  : 0/0
 11685 ;;		Unchanged: 0/0
 11686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11687 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11688 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11689 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11690 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11691 ;;Total ram usage:       10 bytes
 11692 ;; Hardware stack levels used:    1
 11693 ;; Hardware stack levels required when called:    9
 11694 ;; This function calls:
 11695 ;;		Nothing
 11696 ;; This function is called by:
 11697 ;;		_main
 11698 ;;		_sprintf
 11699 ;; This function uses a non-reentrant model
 11700 ;;
 11701                           
 11702                           	psect	text20
 11703  01570E                     __ptext20:
 11704                           	opt stack 0
 11705  01570E                     ___fltol:
 11706                           	opt stack 21
 11707                           
 11708                           ; BSR set to: 0
 11709                           ;incstack = 0
 11710  01570E  0100               	movlb	0	; () banked
 11711  015710  35BA               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11712  015712  35BB               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11713  015714  0100               	movlb	0	; () banked
 11714  015716  6FC1               	movwf	___fltol@exp1& (0+255),b
 11715  015718  0100               	movlb	0	; () banked
 11716  01571A  51C1               	movf	___fltol@exp1& (0+255),w,b
 11717  01571C  A4D8               	btfss	status,2,c
 11718  01571E  D00A               	goto	l8740
 11719                           
 11720                           ; BSR set to: 0
 11721  015720  0E00               	movlw	0
 11722  015722  0100               	movlb	0	; () banked
 11723  015724  6FB8               	movwf	?___fltol& (0+255),b
 11724  015726  0E00               	movlw	0
 11725  015728  6FB9               	movwf	(?___fltol+1)& (0+255),b
 11726  01572A  0E00               	movlw	0
 11727  01572C  6FBA               	movwf	(?___fltol+2)& (0+255),b
 11728  01572E  0E00               	movlw	0
 11729  015730  6FBB               	movwf	(?___fltol+3)& (0+255),b
 11730                           
 11731                           ; BSR set to: 0
 11732  015732  0012               	return	
 11733  015734                     l8740:
 11734                           
 11735                           ; BSR set to: 0
 11736  015734  C0B8  F0BC         	movff	___fltol@f1,??___fltol
 11737  015738  C0B9  F0BD         	movff	___fltol@f1+1,??___fltol+1
 11738  01573C  C0BA  F0BE         	movff	___fltol@f1+2,??___fltol+2
 11739  015740  C0BB  F0BF         	movff	___fltol@f1+3,??___fltol+3
 11740  015744  0E20               	movlw	32
 11741  015746  D006               	goto	u11410
 11742  015748                     u11415:
 11743  015748  0100               	movlb	0	; () banked
 11744  01574A  90D8               	bcf	status,0,c
 11745  01574C  33BF               	rrcf	(??___fltol+3)& (0+255),f,b
 11746  01574E  33BE               	rrcf	(??___fltol+2)& (0+255),f,b
 11747  015750  33BD               	rrcf	(??___fltol+1)& (0+255),f,b
 11748  015752  33BC               	rrcf	??___fltol& (0+255),f,b
 11749  015754                     u11410:
 11750  015754  2EE8               	decfsz	wreg,f,c
 11751  015756  D7F8               	goto	u11415
 11752  015758  0100               	movlb	0	; () banked
 11753  01575A  51BC               	movf	??___fltol& (0+255),w,b
 11754  01575C  0100               	movlb	0	; () banked
 11755  01575E  6FC0               	movwf	___fltol@sign1& (0+255),b
 11756                           
 11757                           ; BSR set to: 0
 11758  015760  0100               	movlb	0	; () banked
 11759  015762  8FBA               	bsf	(___fltol@f1+2)& (0+255),7,b
 11760                           
 11761                           ; BSR set to: 0
 11762  015764  0EFF               	movlw	255
 11763  015766  0100               	movlb	0	; () banked
 11764  015768  17B8               	andwf	___fltol@f1& (0+255),f,b
 11765  01576A  0EFF               	movlw	255
 11766  01576C  17B9               	andwf	(___fltol@f1+1)& (0+255),f,b
 11767  01576E  0EFF               	movlw	255
 11768  015770  17BA               	andwf	(___fltol@f1+2)& (0+255),f,b
 11769  015772  0E00               	movlw	0
 11770  015774  17BB               	andwf	(___fltol@f1+3)& (0+255),f,b
 11771                           
 11772                           ; BSR set to: 0
 11773  015776  0E96               	movlw	150
 11774  015778  0100               	movlb	0	; () banked
 11775  01577A  5FC1               	subwf	___fltol@exp1& (0+255),f,b
 11776                           
 11777                           ; BSR set to: 0
 11778  01577C  0100               	movlb	0	; () banked
 11779  01577E  AFC1               	btfss	___fltol@exp1& (0+255),7,b
 11780  015780  D01A               	goto	l8760
 11781                           
 11782                           ; BSR set to: 0
 11783  015782  0100               	movlb	0	; () banked
 11784  015784  51C1               	movf	___fltol@exp1& (0+255),w,b
 11785  015786  0A80               	xorlw	128
 11786  015788  0F97               	addlw	151
 11787  01578A  B0D8               	btfsc	status,0,c
 11788  01578C  D00A               	goto	l8756
 11789                           
 11790                           ; BSR set to: 0
 11791  01578E  0E00               	movlw	0
 11792  015790  0100               	movlb	0	; () banked
 11793  015792  6FB8               	movwf	?___fltol& (0+255),b
 11794  015794  0E00               	movlw	0
 11795  015796  6FB9               	movwf	(?___fltol+1)& (0+255),b
 11796  015798  0E00               	movlw	0
 11797  01579A  6FBA               	movwf	(?___fltol+2)& (0+255),b
 11798  01579C  0E00               	movlw	0
 11799  01579E  6FBB               	movwf	(?___fltol+3)& (0+255),b
 11800                           
 11801                           ; BSR set to: 0
 11802  0157A0  0012               	return	
 11803  0157A2                     l8756:
 11804                           
 11805                           ; BSR set to: 0
 11806  0157A2  0100               	movlb	0	; () banked
 11807  0157A4  90D8               	bcf	status,0,c
 11808  0157A6  33BB               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11809  0157A8  33BA               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11810  0157AA  33B9               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11811  0157AC  33B8               	rrcf	___fltol@f1& (0+255),f,b
 11812                           
 11813                           ; BSR set to: 0
 11814  0157AE  0100               	movlb	0	; () banked
 11815  0157B0  3FC1               	incfsz	___fltol@exp1& (0+255),f,b
 11816  0157B2  D7F7               	goto	l8756
 11817                           
 11818                           ; BSR set to: 0
 11819  0157B4  D01B               	goto	l8770
 11820  0157B6                     l8760:
 11821                           
 11822                           ; BSR set to: 0
 11823  0157B6  0E1F               	movlw	31
 11824  0157B8  0100               	movlb	0	; () banked
 11825  0157BA  65C1               	cpfsgt	___fltol@exp1& (0+255),b
 11826  0157BC  D012               	goto	l8768
 11827                           
 11828                           ; BSR set to: 0
 11829  0157BE  0E00               	movlw	0
 11830  0157C0  0100               	movlb	0	; () banked
 11831  0157C2  6FB8               	movwf	?___fltol& (0+255),b
 11832  0157C4  0E00               	movlw	0
 11833  0157C6  6FB9               	movwf	(?___fltol+1)& (0+255),b
 11834  0157C8  0E00               	movlw	0
 11835  0157CA  6FBA               	movwf	(?___fltol+2)& (0+255),b
 11836  0157CC  0E00               	movlw	0
 11837  0157CE  6FBB               	movwf	(?___fltol+3)& (0+255),b
 11838                           
 11839                           ; BSR set to: 0
 11840  0157D0  0012               	return	
 11841  0157D2                     l8766:
 11842                           
 11843                           ; BSR set to: 0
 11844  0157D2  0100               	movlb	0	; () banked
 11845  0157D4  90D8               	bcf	status,0,c
 11846  0157D6  37B8               	rlcf	___fltol@f1& (0+255),f,b
 11847  0157D8  37B9               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11848  0157DA  37BA               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11849  0157DC  37BB               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11850  0157DE  0100               	movlb	0	; () banked
 11851  0157E0  07C1               	decf	___fltol@exp1& (0+255),f,b
 11852  0157E2                     l8768:
 11853                           
 11854                           ; BSR set to: 0
 11855  0157E2  0100               	movlb	0	; () banked
 11856  0157E4  51C1               	movf	___fltol@exp1& (0+255),w,b
 11857  0157E6  0100               	movlb	0	; () banked
 11858  0157E8  A4D8               	btfss	status,2,c
 11859  0157EA  D7F3               	goto	l8766
 11860  0157EC                     l8770:
 11861                           
 11862                           ; BSR set to: 0
 11863  0157EC  0100               	movlb	0	; () banked
 11864  0157EE  51C0               	movf	___fltol@sign1& (0+255),w,b
 11865  0157F0  0100               	movlb	0	; () banked
 11866  0157F2  B4D8               	btfsc	status,2,c
 11867  0157F4  D009               	goto	l8774
 11868                           
 11869                           ; BSR set to: 0
 11870  0157F6  0100               	movlb	0	; () banked
 11871  0157F8  1FBB               	comf	(___fltol@f1+3)& (0+255),f,b
 11872  0157FA  1FBA               	comf	(___fltol@f1+2)& (0+255),f,b
 11873  0157FC  1FB9               	comf	(___fltol@f1+1)& (0+255),f,b
 11874  0157FE  6DB8               	negf	___fltol@f1& (0+255),b
 11875  015800  0E00               	movlw	0
 11876  015802  23B9               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11877  015804  23BA               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11878  015806  23BB               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11879  015808                     l8774:
 11880                           
 11881                           ; BSR set to: 0
 11882  015808  C0B8  F0B8         	movff	___fltol@f1,?___fltol
 11883  01580C  C0B9  F0B9         	movff	___fltol@f1+1,?___fltol+1
 11884  015810  C0BA  F0BA         	movff	___fltol@f1+2,?___fltol+2
 11885  015814  C0BB  F0BB         	movff	___fltol@f1+3,?___fltol+3
 11886  015818  0012               	return	
 11887  01581A                     __end_of___fltol:
 11888                           	opt stack 0
 11889                           tblptru	equ	0xFF8
 11890                           tblptrh	equ	0xFF7
 11891                           tblptrl	equ	0xFF6
 11892                           tablat	equ	0xFF5
 11893                           prodh	equ	0xFF4
 11894                           prodl	equ	0xFF3
 11895                           intcon	equ	0xFF2
 11896                           postinc0	equ	0xFEE
 11897                           wreg	equ	0xFE8
 11898                           indf2	equ	0xFDF
 11899                           postinc2	equ	0xFDE
 11900                           fsr2h	equ	0xFDA
 11901                           fsr2l	equ	0xFD9
 11902                           status	equ	0xFD8
 11903                           
 11904 ;; *************** function ___flsub *****************
 11905 ;; Defined at:
 11906 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 11907 ;; Parameters:    Size  Location     Type
 11908 ;;  b               4   88[BANK0 ] long 
 11909 ;;  a               4   92[BANK0 ] long 
 11910 ;; Auto vars:     Size  Location     Type
 11911 ;;		None
 11912 ;; Return value:  Size  Location     Type
 11913 ;;                  4   88[BANK0 ] long 
 11914 ;; Registers used:
 11915 ;;		wreg, status,2, status,0, cstack
 11916 ;; Tracked objects:
 11917 ;;		On entry : 0/0
 11918 ;;		On exit  : 0/0
 11919 ;;		Unchanged: 0/0
 11920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11921 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11924 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11925 ;;Total ram usage:        8 bytes
 11926 ;; Hardware stack levels used:    1
 11927 ;; Hardware stack levels required when called:   10
 11928 ;; This function calls:
 11929 ;;		___fladd
 11930 ;; This function is called by:
 11931 ;;		_sprintf
 11932 ;; This function uses a non-reentrant model
 11933 ;;
 11934                           
 11935                           	psect	text21
 11936  01635A                     __ptext21:
 11937                           	opt stack 0
 11938  01635A                     ___flsub:
 11939                           	opt stack 18
 11940                           
 11941                           ; BSR set to: 0
 11942                           ;incstack = 0
 11943  01635A  0E00               	movlw	0
 11944  01635C  0100               	movlb	0	; () banked
 11945  01635E  1BBC               	xorwf	___flsub@a& (0+255),f,b
 11946  016360  0E00               	movlw	0
 11947  016362  1BBD               	xorwf	(___flsub@a+1)& (0+255),f,b
 11948  016364  0E00               	movlw	0
 11949  016366  1BBE               	xorwf	(___flsub@a+2)& (0+255),f,b
 11950  016368  0E80               	movlw	128
 11951  01636A  1BBF               	xorwf	(___flsub@a+3)& (0+255),f,b
 11952                           
 11953                           ; BSR set to: 0
 11954  01636C  C0B8  F0A4         	movff	___flsub@b,___fladd@b
 11955  016370  C0B9  F0A5         	movff	___flsub@b+1,___fladd@b+1
 11956  016374  C0BA  F0A6         	movff	___flsub@b+2,___fladd@b+2
 11957  016378  C0BB  F0A7         	movff	___flsub@b+3,___fladd@b+3
 11958  01637C  C0BC  F0A8         	movff	___flsub@a,___fladd@a
 11959  016380  C0BD  F0A9         	movff	___flsub@a+1,___fladd@a+1
 11960  016384  C0BE  F0AA         	movff	___flsub@a+2,___fladd@a+2
 11961  016388  C0BF  F0AB         	movff	___flsub@a+3,___fladd@a+3
 11962  01638C  EC94  F099         	call	___fladd	;wreg free
 11963  016390  C0A4  F0B8         	movff	?___fladd,?___flsub
 11964  016394  C0A5  F0B9         	movff	?___fladd+1,?___flsub+1
 11965  016398  C0A6  F0BA         	movff	?___fladd+2,?___flsub+2
 11966  01639C  C0A7  F0BB         	movff	?___fladd+3,?___flsub+3
 11967  0163A0  0012               	return	
 11968  0163A2                     __end_of___flsub:
 11969                           	opt stack 0
 11970                           tblptru	equ	0xFF8
 11971                           tblptrh	equ	0xFF7
 11972                           tblptrl	equ	0xFF6
 11973                           tablat	equ	0xFF5
 11974                           prodh	equ	0xFF4
 11975                           prodl	equ	0xFF3
 11976                           intcon	equ	0xFF2
 11977                           postinc0	equ	0xFEE
 11978                           wreg	equ	0xFE8
 11979                           indf2	equ	0xFDF
 11980                           postinc2	equ	0xFDE
 11981                           fsr2h	equ	0xFDA
 11982                           fsr2l	equ	0xFD9
 11983                           status	equ	0xFD8
 11984                           
 11985 ;; *************** function ___fladd *****************
 11986 ;; Defined at:
 11987 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 11988 ;; Parameters:    Size  Location     Type
 11989 ;;  b               4   68[BANK0 ] long 
 11990 ;;  a               4   72[BANK0 ] long 
 11991 ;; Auto vars:     Size  Location     Type
 11992 ;;  grs             1   87[BANK0 ] unsigned char 
 11993 ;;  bexp            1   86[BANK0 ] unsigned char 
 11994 ;;  aexp            1   85[BANK0 ] unsigned char 
 11995 ;;  signs           1   84[BANK0 ] unsigned char 
 11996 ;; Return value:  Size  Location     Type
 11997 ;;                  4   68[BANK0 ] unsigned char 
 11998 ;; Registers used:
 11999 ;;		wreg, status,2, status,0
 12000 ;; Tracked objects:
 12001 ;;		On entry : 0/0
 12002 ;;		On exit  : 0/0
 12003 ;;		Unchanged: 0/0
 12004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12005 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12006 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12007 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12008 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12009 ;;Total ram usage:       20 bytes
 12010 ;; Hardware stack levels used:    1
 12011 ;; Hardware stack levels required when called:    9
 12012 ;; This function calls:
 12013 ;;		Nothing
 12014 ;; This function is called by:
 12015 ;;		_main
 12016 ;;		_sprintf
 12017 ;;		___flsub
 12018 ;; This function uses a non-reentrant model
 12019 ;;
 12020                           
 12021                           	psect	text22
 12022  013328                     __ptext22:
 12023                           	opt stack 0
 12024  013328                     ___fladd:
 12025                           	opt stack 21
 12026                           
 12027                           ;incstack = 0
 12028  013328  0100               	movlb	0	; () banked
 12029  01332A  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 12030  01332C  0B80               	andlw	128
 12031  01332E  0100               	movlb	0	; () banked
 12032  013330  6FB4               	movwf	___fladd@signs& (0+255),b
 12033  013332  0100               	movlb	0	; () banked
 12034  013334  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 12035  013336  25A7               	addwf	(___fladd@b+3)& (0+255),w,b
 12036  013338  0100               	movlb	0	; () banked
 12037  01333A  6FB6               	movwf	___fladd@bexp& (0+255),b
 12038                           
 12039                           ; BSR set to: 0
 12040  01333C  0100               	movlb	0	; () banked
 12041  01333E  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
 12042  013340  D002               	goto	l8072
 12043                           
 12044                           ; BSR set to: 0
 12045  013342  0100               	movlb	0	; () banked
 12046  013344  81B6               	bsf	___fladd@bexp& (0+255),0,b
 12047  013346                     l8072:
 12048                           
 12049                           ; BSR set to: 0
 12050  013346  0100               	movlb	0	; () banked
 12051  013348  51B6               	movf	___fladd@bexp& (0+255),w,b
 12052  01334A  0100               	movlb	0	; () banked
 12053  01334C  B4D8               	btfsc	status,2,c
 12054  01334E  D012               	goto	l8082
 12055                           
 12056                           ; BSR set to: 0
 12057  013350  0100               	movlb	0	; () banked
 12058  013352  29B6               	incf	___fladd@bexp& (0+255),w,b
 12059  013354  A4D8               	btfss	status,2,c
 12060  013356  D009               	goto	l8078
 12061                           
 12062                           ; BSR set to: 0
 12063  013358  0E00               	movlw	0
 12064  01335A  0100               	movlb	0	; () banked
 12065  01335C  6FA4               	movwf	___fladd@b& (0+255),b
 12066  01335E  0E00               	movlw	0
 12067  013360  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 12068  013362  0E00               	movlw	0
 12069  013364  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 12070  013366  0E00               	movlw	0
 12071  013368  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 12072  01336A                     l8078:
 12073                           
 12074                           ; BSR set to: 0
 12075  01336A  0100               	movlb	0	; () banked
 12076  01336C  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
 12077                           
 12078                           ; BSR set to: 0
 12079  01336E  0E00               	movlw	0
 12080  013370  0100               	movlb	0	; () banked
 12081  013372  D008               	goto	L11
 12082  013374                     l8082:
 12083                           
 12084                           ; BSR set to: 0
 12085  013374  0E00               	movlw	0
 12086  013376  0100               	movlb	0	; () banked
 12087  013378  6FA4               	movwf	___fladd@b& (0+255),b
 12088  01337A  0E00               	movlw	0
 12089  01337C  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 12090  01337E  0E00               	movlw	0
 12091  013380  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 12092  013382  0E00               	movlw	0
 12093  013384                     L11:
 12094  013384  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 12095                           
 12096                           ; BSR set to: 0
 12097                           
 12098                           ; BSR set to: 0
 12099  013386  0100               	movlb	0	; () banked
 12100  013388  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 12101  01338A  0B80               	andlw	128
 12102  01338C  0100               	movlb	0	; () banked
 12103  01338E  6FB5               	movwf	___fladd@aexp& (0+255),b
 12104                           
 12105                           ; BSR set to: 0
 12106  013390  0100               	movlb	0	; () banked
 12107  013392  51B4               	movf	___fladd@signs& (0+255),w,b
 12108  013394  0100               	movlb	0	; () banked
 12109  013396  19B5               	xorwf	___fladd@aexp& (0+255),w,b
 12110  013398  B4D8               	btfsc	status,2,c
 12111  01339A  D002               	goto	l8090
 12112                           
 12113                           ; BSR set to: 0
 12114  01339C  0100               	movlb	0	; () banked
 12115  01339E  8DB4               	bsf	___fladd@signs& (0+255),6,b
 12116  0133A0                     l8090:
 12117                           
 12118                           ; BSR set to: 0
 12119  0133A0  0100               	movlb	0	; () banked
 12120  0133A2  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 12121  0133A4  25AB               	addwf	(___fladd@a+3)& (0+255),w,b
 12122  0133A6  0100               	movlb	0	; () banked
 12123  0133A8  6FB5               	movwf	___fladd@aexp& (0+255),b
 12124                           
 12125                           ; BSR set to: 0
 12126  0133AA  0100               	movlb	0	; () banked
 12127  0133AC  AFAA               	btfss	(___fladd@a+2)& (0+255),7,b
 12128  0133AE  D002               	goto	l8096
 12129                           
 12130                           ; BSR set to: 0
 12131  0133B0  0100               	movlb	0	; () banked
 12132  0133B2  81B5               	bsf	___fladd@aexp& (0+255),0,b
 12133  0133B4                     l8096:
 12134                           
 12135                           ; BSR set to: 0
 12136  0133B4  0100               	movlb	0	; () banked
 12137  0133B6  51B5               	movf	___fladd@aexp& (0+255),w,b
 12138  0133B8  0100               	movlb	0	; () banked
 12139  0133BA  B4D8               	btfsc	status,2,c
 12140  0133BC  D012               	goto	l8106
 12141                           
 12142                           ; BSR set to: 0
 12143  0133BE  0100               	movlb	0	; () banked
 12144  0133C0  29B5               	incf	___fladd@aexp& (0+255),w,b
 12145  0133C2  A4D8               	btfss	status,2,c
 12146  0133C4  D009               	goto	l8102
 12147                           
 12148                           ; BSR set to: 0
 12149  0133C6  0E00               	movlw	0
 12150  0133C8  0100               	movlb	0	; () banked
 12151  0133CA  6FA8               	movwf	___fladd@a& (0+255),b
 12152  0133CC  0E00               	movlw	0
 12153  0133CE  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 12154  0133D0  0E00               	movlw	0
 12155  0133D2  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 12156  0133D4  0E00               	movlw	0
 12157  0133D6  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 12158  0133D8                     l8102:
 12159                           
 12160                           ; BSR set to: 0
 12161  0133D8  0100               	movlb	0	; () banked
 12162  0133DA  8FAA               	bsf	(___fladd@a+2)& (0+255),7,b
 12163                           
 12164                           ; BSR set to: 0
 12165  0133DC  0E00               	movlw	0
 12166  0133DE  0100               	movlb	0	; () banked
 12167  0133E0  D008               	goto	L12
 12168  0133E2                     l8106:
 12169                           
 12170                           ; BSR set to: 0
 12171  0133E2  0E00               	movlw	0
 12172  0133E4  0100               	movlb	0	; () banked
 12173  0133E6  6FA8               	movwf	___fladd@a& (0+255),b
 12174  0133E8  0E00               	movlw	0
 12175  0133EA  6FA9               	movwf	(___fladd@a+1)& (0+255),b
 12176  0133EC  0E00               	movlw	0
 12177  0133EE  6FAA               	movwf	(___fladd@a+2)& (0+255),b
 12178  0133F0  0E00               	movlw	0
 12179  0133F2                     L12:
 12180  0133F2  6FAB               	movwf	(___fladd@a+3)& (0+255),b
 12181                           
 12182                           ; BSR set to: 0
 12183                           
 12184                           ; BSR set to: 0
 12185  0133F4  0100               	movlb	0	; () banked
 12186  0133F6  51B6               	movf	___fladd@bexp& (0+255),w,b
 12187  0133F8  0100               	movlb	0	; () banked
 12188  0133FA  5DB5               	subwf	___fladd@aexp& (0+255),w,b
 12189  0133FC  B0D8               	btfsc	status,0,c
 12190  0133FE  D024               	goto	l8144
 12191                           
 12192                           ; BSR set to: 0
 12193  013400  0100               	movlb	0	; () banked
 12194  013402  ADB4               	btfss	___fladd@signs& (0+255),6,b
 12195  013404  D003               	goto	l8114
 12196                           
 12197                           ; BSR set to: 0
 12198  013406  0E80               	movlw	128
 12199  013408  0100               	movlb	0	; () banked
 12200  01340A  1BB4               	xorwf	___fladd@signs& (0+255),f,b
 12201  01340C                     l8114:
 12202                           
 12203                           ; BSR set to: 0
 12204  01340C  C0B6  F0B7         	movff	___fladd@bexp,___fladd@grs
 12205                           
 12206                           ; BSR set to: 0
 12207  013410  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
 12208                           
 12209                           ; BSR set to: 0
 12210  013414  C0B7  F0B5         	movff	___fladd@grs,___fladd@aexp
 12211                           
 12212                           ; BSR set to: 0
 12213  013418  C0A4  F0B7         	movff	___fladd@b,___fladd@grs
 12214                           
 12215                           ; BSR set to: 0
 12216  01341C  C0A8  F0A4         	movff	___fladd@a,___fladd@b
 12217                           
 12218                           ; BSR set to: 0
 12219  013420  C0B7  F0A8         	movff	___fladd@grs,___fladd@a
 12220                           
 12221                           ; BSR set to: 0
 12222  013424  C0A5  F0B7         	movff	___fladd@b+1,___fladd@grs
 12223                           
 12224                           ; BSR set to: 0
 12225  013428  C0A9  F0A5         	movff	___fladd@a+1,___fladd@b+1
 12226                           
 12227                           ; BSR set to: 0
 12228  01342C  C0B7  F0A9         	movff	___fladd@grs,___fladd@a+1
 12229                           
 12230                           ; BSR set to: 0
 12231  013430  C0A6  F0B7         	movff	___fladd@b+2,___fladd@grs
 12232                           
 12233                           ; BSR set to: 0
 12234  013434  C0AA  F0A6         	movff	___fladd@a+2,___fladd@b+2
 12235                           
 12236                           ; BSR set to: 0
 12237  013438  C0B7  F0AA         	movff	___fladd@grs,___fladd@a+2
 12238                           
 12239                           ; BSR set to: 0
 12240  01343C  C0A7  F0B7         	movff	___fladd@b+3,___fladd@grs
 12241                           
 12242                           ; BSR set to: 0
 12243  013440  C0AB  F0A7         	movff	___fladd@a+3,___fladd@b+3
 12244                           
 12245                           ; BSR set to: 0
 12246  013444  C0B7  F0AB         	movff	___fladd@grs,___fladd@a+3
 12247  013448                     l8144:
 12248                           
 12249                           ; BSR set to: 0
 12250  013448  0E00               	movlw	0
 12251  01344A  0100               	movlb	0	; () banked
 12252  01344C  6FB7               	movwf	___fladd@grs& (0+255),b
 12253                           
 12254                           ; BSR set to: 0
 12255  01344E  0100               	movlb	0	; () banked
 12256  013450  51B6               	movf	___fladd@bexp& (0+255),w,b
 12257  013452  0100               	movlb	0	; () banked
 12258  013454  6FAC               	movwf	??___fladd& (0+255),b
 12259  013456  6BAD               	clrf	(??___fladd+1)& (0+255),b
 12260  013458  0100               	movlb	0	; () banked
 12261  01345A  1FAC               	comf	??___fladd& (0+255),f,b
 12262  01345C  1FAD               	comf	(??___fladd+1)& (0+255),f,b
 12263  01345E  4BAC               	infsnz	??___fladd& (0+255),f,b
 12264  013460  2BAD               	incf	(??___fladd+1)& (0+255),f,b
 12265  013462  0100               	movlb	0	; () banked
 12266  013464  51B5               	movf	___fladd@aexp& (0+255),w,b
 12267  013466  0100               	movlb	0	; () banked
 12268  013468  6FAE               	movwf	(??___fladd+2)& (0+255),b
 12269  01346A  6BAF               	clrf	(??___fladd+3)& (0+255),b
 12270  01346C  0100               	movlb	0	; () banked
 12271  01346E  51AC               	movf	??___fladd& (0+255),w,b
 12272  013470  0100               	movlb	0	; () banked
 12273  013472  27AE               	addwf	(??___fladd+2)& (0+255),f,b
 12274  013474  0100               	movlb	0	; () banked
 12275  013476  51AD               	movf	(??___fladd+1)& (0+255),w,b
 12276  013478  0100               	movlb	0	; () banked
 12277  01347A  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
 12278  01347C  0100               	movlb	0	; () banked
 12279  01347E  BFAF               	btfsc	(??___fladd+3)& (0+255),7,b
 12280  013480  D03D               	goto	l1519
 12281  013482  0100               	movlb	0	; () banked
 12282  013484  51AF               	movf	(??___fladd+3)& (0+255),w,b
 12283  013486  E105               	bnz	u10460
 12284  013488  0E1A               	movlw	26
 12285  01348A  0100               	movlb	0	; () banked
 12286  01348C  5DAE               	subwf	(??___fladd+2)& (0+255),w,b
 12287  01348E  A0D8               	btfss	status,0,c
 12288  013490  D035               	goto	l1519
 12289  013492                     u10460:
 12290                           
 12291                           ; BSR set to: 0
 12292  013492  0100               	movlb	0	; () banked
 12293  013494  51A4               	movf	___fladd@b& (0+255),w,b
 12294  013496  0100               	movlb	0	; () banked
 12295  013498  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
 12296  01349A  0100               	movlb	0	; () banked
 12297  01349C  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
 12298  01349E  0100               	movlb	0	; () banked
 12299  0134A0  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
 12300  0134A2  B4D8               	btfsc	status,2,c
 12301  0134A4  D002               	goto	u10470
 12302  0134A6  0E01               	movlw	1
 12303  0134A8  D001               	goto	u10480
 12304  0134AA                     u10470:
 12305  0134AA  0E00               	movlw	0
 12306  0134AC                     u10480:
 12307  0134AC  0100               	movlb	0	; () banked
 12308  0134AE  6FB7               	movwf	___fladd@grs& (0+255),b
 12309                           
 12310                           ; BSR set to: 0
 12311  0134B0  0E00               	movlw	0
 12312  0134B2  0100               	movlb	0	; () banked
 12313  0134B4  6FA4               	movwf	___fladd@b& (0+255),b
 12314  0134B6  0E00               	movlw	0
 12315  0134B8  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 12316  0134BA  0E00               	movlw	0
 12317  0134BC  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 12318  0134BE  0E00               	movlw	0
 12319  0134C0  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 12320                           
 12321                           ; BSR set to: 0
 12322  0134C2  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
 12323  0134C6  D020               	goto	l1518
 12324  0134C8                     l1520:
 12325                           
 12326                           ; BSR set to: 0
 12327  0134C8  0100               	movlb	0	; () banked
 12328  0134CA  A1B7               	btfss	___fladd@grs& (0+255),0,b
 12329  0134CC  D007               	goto	l8156
 12330                           
 12331                           ; BSR set to: 0
 12332  0134CE  0100               	movlb	0	; () banked
 12333  0134D0  90D8               	bcf	status,0,c
 12334  0134D2  31B7               	rrcf	___fladd@grs& (0+255),w,b
 12335  0134D4  0901               	iorlw	1
 12336  0134D6  0100               	movlb	0	; () banked
 12337  0134D8  6FB7               	movwf	___fladd@grs& (0+255),b
 12338  0134DA  D003               	goto	l8158
 12339  0134DC                     l8156:
 12340                           
 12341                           ; BSR set to: 0
 12342  0134DC  0100               	movlb	0	; () banked
 12343  0134DE  90D8               	bcf	status,0,c
 12344  0134E0  33B7               	rrcf	___fladd@grs& (0+255),f,b
 12345  0134E2                     l8158:
 12346                           
 12347                           ; BSR set to: 0
 12348  0134E2  0100               	movlb	0	; () banked
 12349  0134E4  A1A4               	btfss	___fladd@b& (0+255),0,b
 12350  0134E6  D002               	goto	l8162
 12351                           
 12352                           ; BSR set to: 0
 12353  0134E8  0100               	movlb	0	; () banked
 12354  0134EA  8FB7               	bsf	___fladd@grs& (0+255),7,b
 12355  0134EC                     l8162:
 12356                           
 12357                           ; BSR set to: 0
 12358  0134EC  0100               	movlb	0	; () banked
 12359  0134EE  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
 12360  0134F0  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
 12361  0134F2  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
 12362  0134F4  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
 12363  0134F6  33A4               	rrcf	___fladd@b& (0+255),f,b
 12364                           
 12365                           ; BSR set to: 0
 12366  0134F8  0100               	movlb	0	; () banked
 12367  0134FA  2BB6               	incf	___fladd@bexp& (0+255),f,b
 12368  0134FC                     l1519:
 12369                           
 12370                           ; BSR set to: 0
 12371  0134FC  0100               	movlb	0	; () banked
 12372  0134FE  51B5               	movf	___fladd@aexp& (0+255),w,b
 12373  013500  0100               	movlb	0	; () banked
 12374  013502  5DB6               	subwf	___fladd@bexp& (0+255),w,b
 12375  013504  A0D8               	btfss	status,0,c
 12376  013506  D7E0               	goto	l1520
 12377  013508                     l1518:
 12378                           
 12379                           ; BSR set to: 0
 12380  013508  0100               	movlb	0	; () banked
 12381  01350A  BDB4               	btfsc	___fladd@signs& (0+255),6,b
 12382  01350C  D03F               	goto	l8190
 12383                           
 12384                           ; BSR set to: 0
 12385  01350E  0100               	movlb	0	; () banked
 12386  013510  51B6               	movf	___fladd@bexp& (0+255),w,b
 12387  013512  0100               	movlb	0	; () banked
 12388  013514  A4D8               	btfss	status,2,c
 12389  013516  D00A               	goto	l8172
 12390                           
 12391                           ; BSR set to: 0
 12392  013518  0E00               	movlw	0
 12393  01351A  0100               	movlb	0	; () banked
 12394  01351C  6FA4               	movwf	?___fladd& (0+255),b
 12395  01351E  0E00               	movlw	0
 12396  013520  6FA5               	movwf	(?___fladd+1)& (0+255),b
 12397  013522  0E00               	movlw	0
 12398  013524  6FA6               	movwf	(?___fladd+2)& (0+255),b
 12399  013526  0E00               	movlw	0
 12400  013528  6FA7               	movwf	(?___fladd+3)& (0+255),b
 12401                           
 12402                           ; BSR set to: 0
 12403  01352A  0012               	return	
 12404  01352C                     l8172:
 12405                           
 12406                           ; BSR set to: 0
 12407  01352C  0100               	movlb	0	; () banked
 12408  01352E  51A8               	movf	___fladd@a& (0+255),w,b
 12409  013530  0100               	movlb	0	; () banked
 12410  013532  27A4               	addwf	___fladd@b& (0+255),f,b
 12411  013534  0100               	movlb	0	; () banked
 12412  013536  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 12413  013538  0100               	movlb	0	; () banked
 12414  01353A  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 12415  01353C  0100               	movlb	0	; () banked
 12416  01353E  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 12417  013540  0100               	movlb	0	; () banked
 12418  013542  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 12419  013544  0100               	movlb	0	; () banked
 12420  013546  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 12421  013548  0100               	movlb	0	; () banked
 12422  01354A  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 12423                           
 12424                           ; BSR set to: 0
 12425  01354C  0100               	movlb	0	; () banked
 12426  01354E  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
 12427  013550  D0CC               	goto	l8226
 12428                           
 12429                           ; BSR set to: 0
 12430  013552  0100               	movlb	0	; () banked
 12431  013554  A1B7               	btfss	___fladd@grs& (0+255),0,b
 12432  013556  D009               	goto	l8180
 12433                           
 12434                           ; BSR set to: 0
 12435  013558  0100               	movlb	0	; () banked
 12436  01355A  90D8               	bcf	status,0,c
 12437  01355C  33B7               	rrcf	___fladd@grs& (0+255),f,b
 12438  01355E  0100               	movlb	0	; () banked
 12439  013560  51B7               	movf	___fladd@grs& (0+255),w,b
 12440  013562  0901               	iorlw	1
 12441  013564  0100               	movlb	0	; () banked
 12442  013566  6FB7               	movwf	___fladd@grs& (0+255),b
 12443  013568  D003               	goto	l8182
 12444  01356A                     l8180:
 12445                           
 12446                           ; BSR set to: 0
 12447  01356A  0100               	movlb	0	; () banked
 12448  01356C  90D8               	bcf	status,0,c
 12449  01356E  33B7               	rrcf	___fladd@grs& (0+255),f,b
 12450  013570                     l8182:
 12451                           
 12452                           ; BSR set to: 0
 12453  013570  0100               	movlb	0	; () banked
 12454  013572  A1A4               	btfss	___fladd@b& (0+255),0,b
 12455  013574  D002               	goto	l8186
 12456                           
 12457                           ; BSR set to: 0
 12458  013576  0100               	movlb	0	; () banked
 12459  013578  8FB7               	bsf	___fladd@grs& (0+255),7,b
 12460  01357A                     l8186:
 12461                           
 12462                           ; BSR set to: 0
 12463  01357A  0100               	movlb	0	; () banked
 12464  01357C  35A7               	rlcf	(___fladd@b+3)& (0+255),w,b
 12465  01357E  33A7               	rrcf	(___fladd@b+3)& (0+255),f,b
 12466  013580  33A6               	rrcf	(___fladd@b+2)& (0+255),f,b
 12467  013582  33A5               	rrcf	(___fladd@b+1)& (0+255),f,b
 12468  013584  33A4               	rrcf	___fladd@b& (0+255),f,b
 12469                           
 12470                           ; BSR set to: 0
 12471  013586  0100               	movlb	0	; () banked
 12472  013588  2BB6               	incf	___fladd@bexp& (0+255),f,b
 12473                           
 12474                           ; BSR set to: 0
 12475  01358A  D0AF               	goto	l8226
 12476  01358C                     l8190:
 12477                           
 12478                           ; BSR set to: 0
 12479  01358C  0100               	movlb	0	; () banked
 12480  01358E  51A8               	movf	___fladd@a& (0+255),w,b
 12481  013590  0100               	movlb	0	; () banked
 12482  013592  5DA4               	subwf	___fladd@b& (0+255),w,b
 12483  013594  0100               	movlb	0	; () banked
 12484  013596  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 12485  013598  0100               	movlb	0	; () banked
 12486  01359A  59A5               	subwfb	(___fladd@b+1)& (0+255),w,b
 12487  01359C  0100               	movlb	0	; () banked
 12488  01359E  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 12489  0135A0  0100               	movlb	0	; () banked
 12490  0135A2  59A6               	subwfb	(___fladd@b+2)& (0+255),w,b
 12491  0135A4  0100               	movlb	0	; () banked
 12492  0135A6  51A7               	movf	(___fladd@b+3)& (0+255),w,b
 12493  0135A8  0A80               	xorlw	128
 12494  0135AA  0100               	movlb	0	; () banked
 12495  0135AC  6FAC               	movwf	??___fladd& (0+255),b
 12496  0135AE  0100               	movlb	0	; () banked
 12497  0135B0  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 12498  0135B2  0A80               	xorlw	128
 12499  0135B4  0100               	movlb	0	; () banked
 12500  0135B6  59AC               	subwfb	??___fladd& (0+255),w,b
 12501  0135B8  B0D8               	btfsc	status,0,c
 12502  0135BA  D050               	goto	l8200
 12503                           
 12504                           ; BSR set to: 0
 12505  0135BC  C0A4  F0AC         	movff	___fladd@b,??___fladd
 12506  0135C0  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
 12507  0135C4  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
 12508  0135C8  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
 12509  0135CC  0100               	movlb	0	; () banked
 12510  0135CE  1FAC               	comf	??___fladd& (0+255),f,b
 12511  0135D0  1FAD               	comf	(??___fladd+1)& (0+255),f,b
 12512  0135D2  1FAE               	comf	(??___fladd+2)& (0+255),f,b
 12513  0135D4  1FAF               	comf	(??___fladd+3)& (0+255),f,b
 12514  0135D6  2BAC               	incf	??___fladd& (0+255),f,b
 12515  0135D8  0E00               	movlw	0
 12516  0135DA  23AD               	addwfc	(??___fladd+1)& (0+255),f,b
 12517  0135DC  23AE               	addwfc	(??___fladd+2)& (0+255),f,b
 12518  0135DE  23AF               	addwfc	(??___fladd+3)& (0+255),f,b
 12519  0135E0  0100               	movlb	0	; () banked
 12520  0135E2  51A8               	movf	___fladd@a& (0+255),w,b
 12521  0135E4  0100               	movlb	0	; () banked
 12522  0135E6  25AC               	addwf	??___fladd& (0+255),w,b
 12523  0135E8  0100               	movlb	0	; () banked
 12524  0135EA  6FB0               	movwf	(??___fladd+4)& (0+255),b
 12525  0135EC  0100               	movlb	0	; () banked
 12526  0135EE  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 12527  0135F0  0100               	movlb	0	; () banked
 12528  0135F2  21AD               	addwfc	(??___fladd+1)& (0+255),w,b
 12529  0135F4  0100               	movlb	0	; () banked
 12530  0135F6  6FB1               	movwf	(??___fladd+5)& (0+255),b
 12531  0135F8  0100               	movlb	0	; () banked
 12532  0135FA  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 12533  0135FC  0100               	movlb	0	; () banked
 12534  0135FE  21AE               	addwfc	(??___fladd+2)& (0+255),w,b
 12535  013600  0100               	movlb	0	; () banked
 12536  013602  6FB2               	movwf	(??___fladd+6)& (0+255),b
 12537  013604  0100               	movlb	0	; () banked
 12538  013606  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 12539  013608  0100               	movlb	0	; () banked
 12540  01360A  21AF               	addwfc	(??___fladd+3)& (0+255),w,b
 12541  01360C  0100               	movlb	0	; () banked
 12542  01360E  6FB3               	movwf	(??___fladd+7)& (0+255),b
 12543  013610  0EFF               	movlw	255
 12544  013612  0100               	movlb	0	; () banked
 12545  013614  25B0               	addwf	(??___fladd+4)& (0+255),w,b
 12546  013616  0100               	movlb	0	; () banked
 12547  013618  6FA4               	movwf	___fladd@b& (0+255),b
 12548  01361A  0EFF               	movlw	255
 12549  01361C  0100               	movlb	0	; () banked
 12550  01361E  21B1               	addwfc	(??___fladd+5)& (0+255),w,b
 12551  013620  0100               	movlb	0	; () banked
 12552  013622  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 12553  013624  0EFF               	movlw	255
 12554  013626  0100               	movlb	0	; () banked
 12555  013628  21B2               	addwfc	(??___fladd+6)& (0+255),w,b
 12556  01362A  0100               	movlb	0	; () banked
 12557  01362C  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 12558  01362E  0EFF               	movlw	255
 12559  013630  0100               	movlb	0	; () banked
 12560  013632  21B3               	addwfc	(??___fladd+7)& (0+255),w,b
 12561  013634  0100               	movlb	0	; () banked
 12562  013636  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 12563  013638  0E80               	movlw	128
 12564  01363A  0100               	movlb	0	; () banked
 12565  01363C  1BB4               	xorwf	___fladd@signs& (0+255),f,b
 12566                           
 12567                           ; BSR set to: 0
 12568  01363E  0100               	movlb	0	; () banked
 12569  013640  6DB7               	negf	___fladd@grs& (0+255),b
 12570                           
 12571                           ; BSR set to: 0
 12572  013642  0100               	movlb	0	; () banked
 12573  013644  51B7               	movf	___fladd@grs& (0+255),w,b
 12574  013646  0100               	movlb	0	; () banked
 12575  013648  A4D8               	btfss	status,2,c
 12576  01364A  D018               	goto	l1535
 12577                           
 12578                           ; BSR set to: 0
 12579  01364C  0E01               	movlw	1
 12580  01364E  0100               	movlb	0	; () banked
 12581  013650  27A4               	addwf	___fladd@b& (0+255),f,b
 12582  013652  0E00               	movlw	0
 12583  013654  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 12584  013656  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 12585  013658  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 12586                           
 12587                           ; BSR set to: 0
 12588  01365A  D010               	goto	l1535
 12589  01365C                     l8200:
 12590                           
 12591                           ; BSR set to: 0
 12592  01365C  0100               	movlb	0	; () banked
 12593  01365E  51A8               	movf	___fladd@a& (0+255),w,b
 12594  013660  0100               	movlb	0	; () banked
 12595  013662  5FA4               	subwf	___fladd@b& (0+255),f,b
 12596  013664  0100               	movlb	0	; () banked
 12597  013666  51A9               	movf	(___fladd@a+1)& (0+255),w,b
 12598  013668  0100               	movlb	0	; () banked
 12599  01366A  5BA5               	subwfb	(___fladd@b+1)& (0+255),f,b
 12600  01366C  0100               	movlb	0	; () banked
 12601  01366E  51AA               	movf	(___fladd@a+2)& (0+255),w,b
 12602  013670  0100               	movlb	0	; () banked
 12603  013672  5BA6               	subwfb	(___fladd@b+2)& (0+255),f,b
 12604  013674  0100               	movlb	0	; () banked
 12605  013676  51AB               	movf	(___fladd@a+3)& (0+255),w,b
 12606  013678  0100               	movlb	0	; () banked
 12607  01367A  5BA7               	subwfb	(___fladd@b+3)& (0+255),f,b
 12608  01367C                     l1535:
 12609                           
 12610                           ; BSR set to: 0
 12611  01367C  0100               	movlb	0	; () banked
 12612  01367E  51A4               	movf	___fladd@b& (0+255),w,b
 12613  013680  0100               	movlb	0	; () banked
 12614  013682  11A5               	iorwf	(___fladd@b+1)& (0+255),w,b
 12615  013684  0100               	movlb	0	; () banked
 12616  013686  11A6               	iorwf	(___fladd@b+2)& (0+255),w,b
 12617  013688  0100               	movlb	0	; () banked
 12618  01368A  11A7               	iorwf	(___fladd@b+3)& (0+255),w,b
 12619  01368C  A4D8               	btfss	status,2,c
 12620  01368E  D02A               	goto	l8224
 12621                           
 12622                           ; BSR set to: 0
 12623  013690  0100               	movlb	0	; () banked
 12624  013692  51B7               	movf	___fladd@grs& (0+255),w,b
 12625  013694  0100               	movlb	0	; () banked
 12626  013696  A4D8               	btfss	status,2,c
 12627  013698  D025               	goto	l8224
 12628                           
 12629                           ; BSR set to: 0
 12630  01369A  0E00               	movlw	0
 12631  01369C  0100               	movlb	0	; () banked
 12632  01369E  6FA4               	movwf	?___fladd& (0+255),b
 12633  0136A0  0E00               	movlw	0
 12634  0136A2  6FA5               	movwf	(?___fladd+1)& (0+255),b
 12635  0136A4  0E00               	movlw	0
 12636  0136A6  6FA6               	movwf	(?___fladd+2)& (0+255),b
 12637  0136A8  0E00               	movlw	0
 12638  0136AA  6FA7               	movwf	(?___fladd+3)& (0+255),b
 12639                           
 12640                           ; BSR set to: 0
 12641  0136AC  0012               	return	
 12642  0136AE                     l8208:
 12643                           
 12644                           ; BSR set to: 0
 12645  0136AE  0100               	movlb	0	; () banked
 12646  0136B0  90D8               	bcf	status,0,c
 12647  0136B2  37A4               	rlcf	___fladd@b& (0+255),f,b
 12648  0136B4  37A5               	rlcf	(___fladd@b+1)& (0+255),f,b
 12649  0136B6  37A6               	rlcf	(___fladd@b+2)& (0+255),f,b
 12650  0136B8  37A7               	rlcf	(___fladd@b+3)& (0+255),f,b
 12651                           
 12652                           ; BSR set to: 0
 12653  0136BA  0100               	movlb	0	; () banked
 12654  0136BC  AFB7               	btfss	___fladd@grs& (0+255),7,b
 12655  0136BE  D002               	goto	l8214
 12656                           
 12657                           ; BSR set to: 0
 12658  0136C0  0100               	movlb	0	; () banked
 12659  0136C2  81A4               	bsf	___fladd@b& (0+255),0,b
 12660  0136C4                     l8214:
 12661                           
 12662                           ; BSR set to: 0
 12663  0136C4  0100               	movlb	0	; () banked
 12664  0136C6  A1B7               	btfss	___fladd@grs& (0+255),0,b
 12665  0136C8  D003               	goto	l8218
 12666                           
 12667                           ; BSR set to: 0
 12668  0136CA  80D8               	bsf	status,0,c
 12669  0136CC  0100               	movlb	0	; () banked
 12670  0136CE  D002               	goto	L13
 12671  0136D0                     l8218:
 12672                           
 12673                           ; BSR set to: 0
 12674  0136D0  0100               	movlb	0	; () banked
 12675  0136D2  90D8               	bcf	status,0,c
 12676  0136D4                     L13:
 12677  0136D4  37B7               	rlcf	___fladd@grs& (0+255),f,b
 12678                           
 12679                           ; BSR set to: 0
 12680                           
 12681                           ; BSR set to: 0
 12682  0136D6  0100               	movlb	0	; () banked
 12683  0136D8  51B6               	movf	___fladd@bexp& (0+255),w,b
 12684  0136DA  0100               	movlb	0	; () banked
 12685  0136DC  B4D8               	btfsc	status,2,c
 12686  0136DE  D002               	goto	l8224
 12687                           
 12688                           ; BSR set to: 0
 12689  0136E0  0100               	movlb	0	; () banked
 12690  0136E2  07B6               	decf	___fladd@bexp& (0+255),f,b
 12691  0136E4                     l8224:
 12692                           
 12693                           ; BSR set to: 0
 12694  0136E4  0100               	movlb	0	; () banked
 12695  0136E6  AFA6               	btfss	(___fladd@b+2)& (0+255),7,b
 12696  0136E8  D7E2               	goto	l8208
 12697  0136EA                     l8226:
 12698                           
 12699                           ; BSR set to: 0
 12700  0136EA  0E00               	movlw	0
 12701  0136EC  0100               	movlb	0	; () banked
 12702  0136EE  6FB5               	movwf	___fladd@aexp& (0+255),b
 12703                           
 12704                           ; BSR set to: 0
 12705  0136F0  0100               	movlb	0	; () banked
 12706  0136F2  AFB7               	btfss	___fladd@grs& (0+255),7,b
 12707  0136F4  D00D               	goto	l1544
 12708                           
 12709                           ; BSR set to: 0
 12710  0136F6  C0B7  F0AC         	movff	___fladd@grs,??___fladd
 12711  0136FA  0E7F               	movlw	127
 12712  0136FC  0100               	movlb	0	; () banked
 12713  0136FE  17AC               	andwf	??___fladd& (0+255),f,b
 12714  013700  A4D8               	btfss	status,2,c
 12715  013702  D003               	goto	l8234
 12716                           
 12717                           ; BSR set to: 0
 12718                           
 12719                           ; BSR set to: 0
 12720  013704  0100               	movlb	0	; () banked
 12721  013706  A1A4               	btfss	___fladd@b& (0+255),0,b
 12722  013708  D003               	goto	l1544
 12723  01370A                     l8234:
 12724                           
 12725                           ; BSR set to: 0
 12726  01370A  0E01               	movlw	1
 12727  01370C  0100               	movlb	0	; () banked
 12728  01370E  6FB5               	movwf	___fladd@aexp& (0+255),b
 12729  013710                     l1544:
 12730                           
 12731                           ; BSR set to: 0
 12732  013710  0100               	movlb	0	; () banked
 12733  013712  51B5               	movf	___fladd@aexp& (0+255),w,b
 12734  013714  0100               	movlb	0	; () banked
 12735  013716  B4D8               	btfsc	status,2,c
 12736  013718  D026               	goto	l8244
 12737                           
 12738                           ; BSR set to: 0
 12739  01371A  0E01               	movlw	1
 12740  01371C  0100               	movlb	0	; () banked
 12741  01371E  27A4               	addwf	___fladd@b& (0+255),f,b
 12742  013720  0E00               	movlw	0
 12743  013722  23A5               	addwfc	(___fladd@b+1)& (0+255),f,b
 12744  013724  23A6               	addwfc	(___fladd@b+2)& (0+255),f,b
 12745  013726  23A7               	addwfc	(___fladd@b+3)& (0+255),f,b
 12746                           
 12747                           ; BSR set to: 0
 12748  013728  0100               	movlb	0	; () banked
 12749  01372A  A1A7               	btfss	(___fladd@b+3)& (0+255),0,b
 12750  01372C  D01C               	goto	l8244
 12751                           
 12752                           ; BSR set to: 0
 12753  01372E  C0A4  F0AC         	movff	___fladd@b,??___fladd
 12754  013732  C0A5  F0AD         	movff	___fladd@b+1,??___fladd+1
 12755  013736  C0A6  F0AE         	movff	___fladd@b+2,??___fladd+2
 12756  01373A  C0A7  F0AF         	movff	___fladd@b+3,??___fladd+3
 12757  01373E  0100               	movlb	0	; () banked
 12758  013740  35AF               	rlcf	(??___fladd+3)& (0+255),w,b
 12759  013742  33AF               	rrcf	(??___fladd+3)& (0+255),f,b
 12760  013744  33AE               	rrcf	(??___fladd+2)& (0+255),f,b
 12761  013746  33AD               	rrcf	(??___fladd+1)& (0+255),f,b
 12762  013748  33AC               	rrcf	??___fladd& (0+255),f,b
 12763  01374A  C0AC  F0A4         	movff	??___fladd,___fladd@b
 12764  01374E  C0AD  F0A5         	movff	??___fladd+1,___fladd@b+1
 12765  013752  C0AE  F0A6         	movff	??___fladd+2,___fladd@b+2
 12766  013756  C0AF  F0A7         	movff	??___fladd+3,___fladd@b+3
 12767  01375A  0100               	movlb	0	; () banked
 12768  01375C  29B6               	incf	___fladd@bexp& (0+255),w,b
 12769  01375E  B4D8               	btfsc	status,2,c
 12770  013760  D002               	goto	l8244
 12771                           
 12772                           ; BSR set to: 0
 12773  013762  0100               	movlb	0	; () banked
 12774  013764  2BB6               	incf	___fladd@bexp& (0+255),f,b
 12775  013766                     l8244:
 12776                           
 12777                           ; BSR set to: 0
 12778  013766  0100               	movlb	0	; () banked
 12779  013768  29B6               	incf	___fladd@bexp& (0+255),w,b
 12780  01376A  B4D8               	btfsc	status,2,c
 12781  01376C  D005               	goto	l8248
 12782                           
 12783                           ; BSR set to: 0
 12784  01376E  0100               	movlb	0	; () banked
 12785  013770  51B6               	movf	___fladd@bexp& (0+255),w,b
 12786  013772  0100               	movlb	0	; () banked
 12787  013774  A4D8               	btfss	status,2,c
 12788  013776  D011               	goto	l8252
 12789  013778                     l8248:
 12790                           
 12791                           ; BSR set to: 0
 12792  013778  0E00               	movlw	0
 12793  01377A  0100               	movlb	0	; () banked
 12794  01377C  6FA4               	movwf	___fladd@b& (0+255),b
 12795  01377E  0E00               	movlw	0
 12796  013780  6FA5               	movwf	(___fladd@b+1)& (0+255),b
 12797  013782  0E00               	movlw	0
 12798  013784  6FA6               	movwf	(___fladd@b+2)& (0+255),b
 12799  013786  0E00               	movlw	0
 12800  013788  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 12801  01378A  0100               	movlb	0	; () banked
 12802  01378C  51B6               	movf	___fladd@bexp& (0+255),w,b
 12803  01378E  0100               	movlb	0	; () banked
 12804  013790  A4D8               	btfss	status,2,c
 12805  013792  D003               	goto	l8252
 12806                           
 12807                           ; BSR set to: 0
 12808  013794  0E00               	movlw	0
 12809  013796  0100               	movlb	0	; () banked
 12810  013798  6FB4               	movwf	___fladd@signs& (0+255),b
 12811  01379A                     l8252:
 12812                           
 12813                           ; BSR set to: 0
 12814  01379A  0100               	movlb	0	; () banked
 12815  01379C  A1B6               	btfss	___fladd@bexp& (0+255),0,b
 12816  01379E  D003               	goto	l8256
 12817                           
 12818                           ; BSR set to: 0
 12819  0137A0  0100               	movlb	0	; () banked
 12820  0137A2  8FA6               	bsf	(___fladd@b+2)& (0+255),7,b
 12821  0137A4  D002               	goto	l8258
 12822  0137A6                     l8256:
 12823                           
 12824                           ; BSR set to: 0
 12825  0137A6  0100               	movlb	0	; () banked
 12826  0137A8  9FA6               	bcf	(___fladd@b+2)& (0+255),7,b
 12827  0137AA                     l8258:
 12828                           
 12829                           ; BSR set to: 0
 12830  0137AA  0100               	movlb	0	; () banked
 12831  0137AC  90D8               	bcf	status,0,c
 12832  0137AE  31B6               	rrcf	___fladd@bexp& (0+255),w,b
 12833  0137B0  0100               	movlb	0	; () banked
 12834  0137B2  6FA7               	movwf	(___fladd@b+3)& (0+255),b
 12835                           
 12836                           ; BSR set to: 0
 12837  0137B4  0100               	movlb	0	; () banked
 12838  0137B6  AFB4               	btfss	___fladd@signs& (0+255),7,b
 12839  0137B8  D002               	goto	l8264
 12840                           
 12841                           ; BSR set to: 0
 12842  0137BA  0100               	movlb	0	; () banked
 12843  0137BC  8FA7               	bsf	(___fladd@b+3)& (0+255),7,b
 12844  0137BE                     l8264:
 12845                           
 12846                           ; BSR set to: 0
 12847  0137BE  C0A4  F0A4         	movff	___fladd@b,?___fladd
 12848  0137C2  C0A5  F0A5         	movff	___fladd@b+1,?___fladd+1
 12849  0137C6  C0A6  F0A6         	movff	___fladd@b+2,?___fladd+2
 12850  0137CA  C0A7  F0A7         	movff	___fladd@b+3,?___fladd+3
 12851  0137CE  0012               	return	
 12852  0137D0                     __end_of___fladd:
 12853                           	opt stack 0
 12854                           tblptru	equ	0xFF8
 12855                           tblptrh	equ	0xFF7
 12856                           tblptrl	equ	0xFF6
 12857                           tablat	equ	0xFF5
 12858                           prodh	equ	0xFF4
 12859                           prodl	equ	0xFF3
 12860                           intcon	equ	0xFF2
 12861                           postinc0	equ	0xFEE
 12862                           wreg	equ	0xFE8
 12863                           indf2	equ	0xFDF
 12864                           postinc2	equ	0xFDE
 12865                           fsr2h	equ	0xFDA
 12866                           fsr2l	equ	0xFD9
 12867                           status	equ	0xFD8
 12868                           
 12869 ;; *************** function ___flneg *****************
 12870 ;; Defined at:
 12871 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
 12872 ;; Parameters:    Size  Location     Type
 12873 ;;  f1              4   55[BANK0 ] unsigned char 
 12874 ;; Auto vars:     Size  Location     Type
 12875 ;;		None
 12876 ;; Return value:  Size  Location     Type
 12877 ;;                  4   55[BANK0 ] unsigned char 
 12878 ;; Registers used:
 12879 ;;		wreg, status,2, status,0
 12880 ;; Tracked objects:
 12881 ;;		On entry : 0/0
 12882 ;;		On exit  : 0/0
 12883 ;;		Unchanged: 0/0
 12884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12885 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12888 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12889 ;;Total ram usage:        4 bytes
 12890 ;; Hardware stack levels used:    1
 12891 ;; Hardware stack levels required when called:    9
 12892 ;; This function calls:
 12893 ;;		Nothing
 12894 ;; This function is called by:
 12895 ;;		_main
 12896 ;;		_sprintf
 12897 ;; This function uses a non-reentrant model
 12898 ;;
 12899                           
 12900                           	psect	text23
 12901  0164A2                     __ptext23:
 12902                           	opt stack 0
 12903  0164A2                     ___flneg:
 12904                           	opt stack 21
 12905                           
 12906                           ; BSR set to: 0
 12907                           ;incstack = 0
 12908  0164A2  0100               	movlb	0	; () banked
 12909  0164A4  5197               	movf	___flneg@f1& (0+255),w,b
 12910  0164A6  0100               	movlb	0	; () banked
 12911  0164A8  1198               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12912  0164AA  0100               	movlb	0	; () banked
 12913  0164AC  1199               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12914  0164AE  0100               	movlb	0	; () banked
 12915  0164B0  119A               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12916  0164B2  B4D8               	btfsc	status,2,c
 12917  0164B4  D009               	goto	l8730
 12918                           
 12919                           ; BSR set to: 0
 12920  0164B6  0E00               	movlw	0
 12921  0164B8  0100               	movlb	0	; () banked
 12922  0164BA  1B97               	xorwf	___flneg@f1& (0+255),f,b
 12923  0164BC  0E00               	movlw	0
 12924  0164BE  1B98               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12925  0164C0  0E00               	movlw	0
 12926  0164C2  1B99               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12927  0164C4  0E80               	movlw	128
 12928  0164C6  1B9A               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12929  0164C8                     l8730:
 12930                           
 12931                           ; BSR set to: 0
 12932  0164C8  C097  F097         	movff	___flneg@f1,?___flneg
 12933  0164CC  C098  F098         	movff	___flneg@f1+1,?___flneg+1
 12934  0164D0  C099  F099         	movff	___flneg@f1+2,?___flneg+2
 12935  0164D4  C09A  F09A         	movff	___flneg@f1+3,?___flneg+3
 12936  0164D8  0012               	return	
 12937  0164DA                     __end_of___flneg:
 12938                           	opt stack 0
 12939                           tblptru	equ	0xFF8
 12940                           tblptrh	equ	0xFF7
 12941                           tblptrl	equ	0xFF6
 12942                           tablat	equ	0xFF5
 12943                           prodh	equ	0xFF4
 12944                           prodl	equ	0xFF3
 12945                           intcon	equ	0xFF2
 12946                           postinc0	equ	0xFEE
 12947                           wreg	equ	0xFE8
 12948                           indf2	equ	0xFDF
 12949                           postinc2	equ	0xFDE
 12950                           fsr2h	equ	0xFDA
 12951                           fsr2l	equ	0xFD9
 12952                           status	equ	0xFD8
 12953                           
 12954 ;; *************** function ___flge *****************
 12955 ;; Defined at:
 12956 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
 12957 ;; Parameters:    Size  Location     Type
 12958 ;;  ff1             4   16[BANK0 ] unsigned char 
 12959 ;;  ff2             4   20[BANK0 ] unsigned char 
 12960 ;; Auto vars:     Size  Location     Type
 12961 ;;		None
 12962 ;; Return value:  Size  Location     Type
 12963 ;;		None               void
 12964 ;; Registers used:
 12965 ;;		wreg, status,2, status,0
 12966 ;; Tracked objects:
 12967 ;;		On entry : 0/0
 12968 ;;		On exit  : 0/0
 12969 ;;		Unchanged: 0/0
 12970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12971 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12973 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12974 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12975 ;;Total ram usage:       12 bytes
 12976 ;; Hardware stack levels used:    1
 12977 ;; Hardware stack levels required when called:    9
 12978 ;; This function calls:
 12979 ;;		Nothing
 12980 ;; This function is called by:
 12981 ;;		_sprintf
 12982 ;; This function uses a non-reentrant model
 12983 ;;
 12984                           
 12985                           	psect	text24
 12986  01516E                     __ptext24:
 12987                           	opt stack 0
 12988  01516E                     ___flge:
 12989                           	opt stack 19
 12990                           
 12991                           ; BSR set to: 0
 12992                           ;incstack = 0
 12993  01516E  0E00               	movlw	0
 12994  015170  0100               	movlb	0	; () banked
 12995  015172  1570               	andwf	___flge@ff1& (0+255),w,b
 12996  015174  0100               	movlb	0	; () banked
 12997  015176  6F78               	movwf	??___flge& (0+255),b
 12998  015178  0E00               	movlw	0
 12999  01517A  0100               	movlb	0	; () banked
 13000  01517C  1571               	andwf	(___flge@ff1+1)& (0+255),w,b
 13001  01517E  0100               	movlb	0	; () banked
 13002  015180  6F79               	movwf	(??___flge+1)& (0+255),b
 13003  015182  0E80               	movlw	128
 13004  015184  0100               	movlb	0	; () banked
 13005  015186  1572               	andwf	(___flge@ff1+2)& (0+255),w,b
 13006  015188  0100               	movlb	0	; () banked
 13007  01518A  6F7A               	movwf	(??___flge+2)& (0+255),b
 13008  01518C  0E7F               	movlw	127
 13009  01518E  0100               	movlb	0	; () banked
 13010  015190  1573               	andwf	(___flge@ff1+3)& (0+255),w,b
 13011  015192  0100               	movlb	0	; () banked
 13012  015194  6F7B               	movwf	(??___flge+3)& (0+255),b
 13013  015196  0100               	movlb	0	; () banked
 13014  015198  5178               	movf	??___flge& (0+255),w,b
 13015  01519A  0100               	movlb	0	; () banked
 13016  01519C  1179               	iorwf	(??___flge+1)& (0+255),w,b
 13017  01519E  0100               	movlb	0	; () banked
 13018  0151A0  117A               	iorwf	(??___flge+2)& (0+255),w,b
 13019  0151A2  0100               	movlb	0	; () banked
 13020  0151A4  117B               	iorwf	(??___flge+3)& (0+255),w,b
 13021  0151A6  A4D8               	btfss	status,2,c
 13022  0151A8  D009               	goto	l8708
 13023                           
 13024                           ; BSR set to: 0
 13025  0151AA  0E00               	movlw	0
 13026  0151AC  0100               	movlb	0	; () banked
 13027  0151AE  6F70               	movwf	___flge@ff1& (0+255),b
 13028  0151B0  0E00               	movlw	0
 13029  0151B2  6F71               	movwf	(___flge@ff1+1)& (0+255),b
 13030  0151B4  0E00               	movlw	0
 13031  0151B6  6F72               	movwf	(___flge@ff1+2)& (0+255),b
 13032  0151B8  0E00               	movlw	0
 13033  0151BA  6F73               	movwf	(___flge@ff1+3)& (0+255),b
 13034  0151BC                     l8708:
 13035                           
 13036                           ; BSR set to: 0
 13037  0151BC  0E00               	movlw	0
 13038  0151BE  0100               	movlb	0	; () banked
 13039  0151C0  1574               	andwf	___flge@ff2& (0+255),w,b
 13040  0151C2  0100               	movlb	0	; () banked
 13041  0151C4  6F78               	movwf	??___flge& (0+255),b
 13042  0151C6  0E00               	movlw	0
 13043  0151C8  0100               	movlb	0	; () banked
 13044  0151CA  1575               	andwf	(___flge@ff2+1)& (0+255),w,b
 13045  0151CC  0100               	movlb	0	; () banked
 13046  0151CE  6F79               	movwf	(??___flge+1)& (0+255),b
 13047  0151D0  0E80               	movlw	128
 13048  0151D2  0100               	movlb	0	; () banked
 13049  0151D4  1576               	andwf	(___flge@ff2+2)& (0+255),w,b
 13050  0151D6  0100               	movlb	0	; () banked
 13051  0151D8  6F7A               	movwf	(??___flge+2)& (0+255),b
 13052  0151DA  0E7F               	movlw	127
 13053  0151DC  0100               	movlb	0	; () banked
 13054  0151DE  1577               	andwf	(___flge@ff2+3)& (0+255),w,b
 13055  0151E0  0100               	movlb	0	; () banked
 13056  0151E2  6F7B               	movwf	(??___flge+3)& (0+255),b
 13057  0151E4  0100               	movlb	0	; () banked
 13058  0151E6  5178               	movf	??___flge& (0+255),w,b
 13059  0151E8  0100               	movlb	0	; () banked
 13060  0151EA  1179               	iorwf	(??___flge+1)& (0+255),w,b
 13061  0151EC  0100               	movlb	0	; () banked
 13062  0151EE  117A               	iorwf	(??___flge+2)& (0+255),w,b
 13063  0151F0  0100               	movlb	0	; () banked
 13064  0151F2  117B               	iorwf	(??___flge+3)& (0+255),w,b
 13065  0151F4  A4D8               	btfss	status,2,c
 13066  0151F6  D009               	goto	l8712
 13067                           
 13068                           ; BSR set to: 0
 13069  0151F8  0E00               	movlw	0
 13070  0151FA  0100               	movlb	0	; () banked
 13071  0151FC  6F74               	movwf	___flge@ff2& (0+255),b
 13072  0151FE  0E00               	movlw	0
 13073  015200  6F75               	movwf	(___flge@ff2+1)& (0+255),b
 13074  015202  0E00               	movlw	0
 13075  015204  6F76               	movwf	(___flge@ff2+2)& (0+255),b
 13076  015206  0E00               	movlw	0
 13077  015208  6F77               	movwf	(___flge@ff2+3)& (0+255),b
 13078  01520A                     l8712:
 13079                           
 13080                           ; BSR set to: 0
 13081  01520A  0100               	movlb	0	; () banked
 13082  01520C  AF73               	btfss	(___flge@ff1+3)& (0+255),7,b
 13083  01520E  D026               	goto	l8716
 13084                           
 13085                           ; BSR set to: 0
 13086  015210  C070  F078         	movff	___flge@ff1,??___flge
 13087  015214  C071  F079         	movff	___flge@ff1+1,??___flge+1
 13088  015218  C072  F07A         	movff	___flge@ff1+2,??___flge+2
 13089  01521C  C073  F07B         	movff	___flge@ff1+3,??___flge+3
 13090  015220  0100               	movlb	0	; () banked
 13091  015222  1F78               	comf	??___flge& (0+255),f,b
 13092  015224  1F79               	comf	(??___flge+1)& (0+255),f,b
 13093  015226  1F7A               	comf	(??___flge+2)& (0+255),f,b
 13094  015228  1F7B               	comf	(??___flge+3)& (0+255),f,b
 13095  01522A  2B78               	incf	??___flge& (0+255),f,b
 13096  01522C  0E00               	movlw	0
 13097  01522E  2379               	addwfc	(??___flge+1)& (0+255),f,b
 13098  015230  237A               	addwfc	(??___flge+2)& (0+255),f,b
 13099  015232  237B               	addwfc	(??___flge+3)& (0+255),f,b
 13100  015234  0E00               	movlw	0
 13101  015236  0100               	movlb	0	; () banked
 13102  015238  2578               	addwf	??___flge& (0+255),w,b
 13103  01523A  0100               	movlb	0	; () banked
 13104  01523C  6F70               	movwf	___flge@ff1& (0+255),b
 13105  01523E  0E00               	movlw	0
 13106  015240  0100               	movlb	0	; () banked
 13107  015242  2179               	addwfc	(??___flge+1)& (0+255),w,b
 13108  015244  0100               	movlb	0	; () banked
 13109  015246  6F71               	movwf	(___flge@ff1+1)& (0+255),b
 13110  015248  0E00               	movlw	0
 13111  01524A  0100               	movlb	0	; () banked
 13112  01524C  217A               	addwfc	(??___flge+2)& (0+255),w,b
 13113  01524E  0100               	movlb	0	; () banked
 13114  015250  6F72               	movwf	(___flge@ff1+2)& (0+255),b
 13115  015252  0E80               	movlw	128
 13116  015254  0100               	movlb	0	; () banked
 13117  015256  217B               	addwfc	(??___flge+3)& (0+255),w,b
 13118  015258  0100               	movlb	0	; () banked
 13119  01525A  6F73               	movwf	(___flge@ff1+3)& (0+255),b
 13120  01525C                     l8716:
 13121                           
 13122                           ; BSR set to: 0
 13123  01525C  0100               	movlb	0	; () banked
 13124  01525E  AF77               	btfss	(___flge@ff2+3)& (0+255),7,b
 13125  015260  D026               	goto	l1241
 13126                           
 13127                           ; BSR set to: 0
 13128  015262  C074  F078         	movff	___flge@ff2,??___flge
 13129  015266  C075  F079         	movff	___flge@ff2+1,??___flge+1
 13130  01526A  C076  F07A         	movff	___flge@ff2+2,??___flge+2
 13131  01526E  C077  F07B         	movff	___flge@ff2+3,??___flge+3
 13132  015272  0100               	movlb	0	; () banked
 13133  015274  1F78               	comf	??___flge& (0+255),f,b
 13134  015276  1F79               	comf	(??___flge+1)& (0+255),f,b
 13135  015278  1F7A               	comf	(??___flge+2)& (0+255),f,b
 13136  01527A  1F7B               	comf	(??___flge+3)& (0+255),f,b
 13137  01527C  2B78               	incf	??___flge& (0+255),f,b
 13138  01527E  0E00               	movlw	0
 13139  015280  2379               	addwfc	(??___flge+1)& (0+255),f,b
 13140  015282  237A               	addwfc	(??___flge+2)& (0+255),f,b
 13141  015284  237B               	addwfc	(??___flge+3)& (0+255),f,b
 13142  015286  0E00               	movlw	0
 13143  015288  0100               	movlb	0	; () banked
 13144  01528A  2578               	addwf	??___flge& (0+255),w,b
 13145  01528C  0100               	movlb	0	; () banked
 13146  01528E  6F74               	movwf	___flge@ff2& (0+255),b
 13147  015290  0E00               	movlw	0
 13148  015292  0100               	movlb	0	; () banked
 13149  015294  2179               	addwfc	(??___flge+1)& (0+255),w,b
 13150  015296  0100               	movlb	0	; () banked
 13151  015298  6F75               	movwf	(___flge@ff2+1)& (0+255),b
 13152  01529A  0E00               	movlw	0
 13153  01529C  0100               	movlb	0	; () banked
 13154  01529E  217A               	addwfc	(??___flge+2)& (0+255),w,b
 13155  0152A0  0100               	movlb	0	; () banked
 13156  0152A2  6F76               	movwf	(___flge@ff2+2)& (0+255),b
 13157  0152A4  0E80               	movlw	128
 13158  0152A6  0100               	movlb	0	; () banked
 13159  0152A8  217B               	addwfc	(??___flge+3)& (0+255),w,b
 13160  0152AA  0100               	movlb	0	; () banked
 13161  0152AC  6F77               	movwf	(___flge@ff2+3)& (0+255),b
 13162  0152AE                     l1241:
 13163                           
 13164                           ; BSR set to: 0
 13165  0152AE  0E00               	movlw	0
 13166  0152B0  0100               	movlb	0	; () banked
 13167  0152B2  1B70               	xorwf	___flge@ff1& (0+255),f,b
 13168  0152B4  0E00               	movlw	0
 13169  0152B6  1B71               	xorwf	(___flge@ff1+1)& (0+255),f,b
 13170  0152B8  0E00               	movlw	0
 13171  0152BA  1B72               	xorwf	(___flge@ff1+2)& (0+255),f,b
 13172  0152BC  0E80               	movlw	128
 13173  0152BE  1B73               	xorwf	(___flge@ff1+3)& (0+255),f,b
 13174  0152C0  0E00               	movlw	0
 13175  0152C2  0100               	movlb	0	; () banked
 13176  0152C4  1B74               	xorwf	___flge@ff2& (0+255),f,b
 13177  0152C6  0E00               	movlw	0
 13178  0152C8  1B75               	xorwf	(___flge@ff2+1)& (0+255),f,b
 13179  0152CA  0E00               	movlw	0
 13180  0152CC  1B76               	xorwf	(___flge@ff2+2)& (0+255),f,b
 13181  0152CE  0E80               	movlw	128
 13182  0152D0  1B77               	xorwf	(___flge@ff2+3)& (0+255),f,b
 13183  0152D2  0100               	movlb	0	; () banked
 13184  0152D4  5174               	movf	___flge@ff2& (0+255),w,b
 13185  0152D6  0100               	movlb	0	; () banked
 13186  0152D8  5D70               	subwf	___flge@ff1& (0+255),w,b
 13187  0152DA  0100               	movlb	0	; () banked
 13188  0152DC  5175               	movf	(___flge@ff2+1)& (0+255),w,b
 13189  0152DE  0100               	movlb	0	; () banked
 13190  0152E0  5971               	subwfb	(___flge@ff1+1)& (0+255),w,b
 13191  0152E2  0100               	movlb	0	; () banked
 13192  0152E4  5176               	movf	(___flge@ff2+2)& (0+255),w,b
 13193  0152E6  0100               	movlb	0	; () banked
 13194  0152E8  5972               	subwfb	(___flge@ff1+2)& (0+255),w,b
 13195  0152EA  0100               	movlb	0	; () banked
 13196  0152EC  5177               	movf	(___flge@ff2+3)& (0+255),w,b
 13197  0152EE  0100               	movlb	0	; () banked
 13198  0152F0  5973               	subwfb	(___flge@ff1+3)& (0+255),w,b
 13199  0152F2  B0D8               	btfsc	status,0,c
 13200  0152F4  D002               	goto	l8722
 13201                           
 13202                           ; BSR set to: 0
 13203  0152F6  90D8               	bcf	status,0,c
 13204  0152F8  0012               	return	
 13205  0152FA                     l8722:
 13206                           
 13207                           ; BSR set to: 0
 13208  0152FA  80D8               	bsf	status,0,c
 13209                           
 13210                           ; BSR set to: 0
 13211  0152FC  0012               	return	
 13212  0152FE                     __end_of___flge:
 13213                           	opt stack 0
 13214                           tblptru	equ	0xFF8
 13215                           tblptrh	equ	0xFF7
 13216                           tblptrl	equ	0xFF6
 13217                           tablat	equ	0xFF5
 13218                           prodh	equ	0xFF4
 13219                           prodl	equ	0xFF3
 13220                           intcon	equ	0xFF2
 13221                           postinc0	equ	0xFEE
 13222                           wreg	equ	0xFE8
 13223                           indf2	equ	0xFDF
 13224                           postinc2	equ	0xFDE
 13225                           fsr2h	equ	0xFDA
 13226                           fsr2l	equ	0xFD9
 13227                           status	equ	0xFD8
 13228                           
 13229 ;; *************** function ___fldiv *****************
 13230 ;; Defined at:
 13231 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 13232 ;; Parameters:    Size  Location     Type
 13233 ;;  b               4   30[BANK0 ] unsigned char 
 13234 ;;  a               4   34[BANK0 ] unsigned char 
 13235 ;; Auto vars:     Size  Location     Type
 13236 ;;  grs             4   49[BANK0 ] unsigned long 
 13237 ;;  rem             4   43[BANK0 ] unsigned long 
 13238 ;;  new_exp         2   47[BANK0 ] int 
 13239 ;;  aexp            1   54[BANK0 ] unsigned char 
 13240 ;;  bexp            1   53[BANK0 ] unsigned char 
 13241 ;;  sign            1   42[BANK0 ] unsigned char 
 13242 ;; Return value:  Size  Location     Type
 13243 ;;                  4   30[BANK0 ] unsigned char 
 13244 ;; Registers used:
 13245 ;;		wreg, status,2, status,0
 13246 ;; Tracked objects:
 13247 ;;		On entry : 0/0
 13248 ;;		On exit  : 0/0
 13249 ;;		Unchanged: 0/0
 13250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13251 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13252 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13253 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13254 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13255 ;;Total ram usage:       25 bytes
 13256 ;; Hardware stack levels used:    1
 13257 ;; Hardware stack levels required when called:    9
 13258 ;; This function calls:
 13259 ;;		Nothing
 13260 ;; This function is called by:
 13261 ;;		_LCD_Handler
 13262 ;; This function uses a non-reentrant model
 13263 ;;
 13264                           
 13265                           	psect	text25
 13266  013C76                     __ptext25:
 13267                           	opt stack 0
 13268  013C76                     ___fldiv:
 13269                           	opt stack 20
 13270                           
 13271                           ; BSR set to: 0
 13272                           ;incstack = 0
 13273  013C76  0100               	movlb	0	; () banked
 13274  013C78  5181               	movf	(___fldiv@b+3)& (0+255),w,b
 13275  013C7A  0B80               	andlw	128
 13276  013C7C  0100               	movlb	0	; () banked
 13277  013C7E  6F8A               	movwf	___fldiv@sign& (0+255),b
 13278  013C80  0100               	movlb	0	; () banked
 13279  013C82  5181               	movf	(___fldiv@b+3)& (0+255),w,b
 13280  013C84  2581               	addwf	(___fldiv@b+3)& (0+255),w,b
 13281  013C86  0100               	movlb	0	; () banked
 13282  013C88  6F95               	movwf	___fldiv@bexp& (0+255),b
 13283                           
 13284                           ; BSR set to: 0
 13285  013C8A  0100               	movlb	0	; () banked
 13286  013C8C  AF80               	btfss	(___fldiv@b+2)& (0+255),7,b
 13287  013C8E  D002               	goto	l6850
 13288                           
 13289                           ; BSR set to: 0
 13290  013C90  0100               	movlb	0	; () banked
 13291  013C92  8195               	bsf	___fldiv@bexp& (0+255),0,b
 13292  013C94                     l6850:
 13293                           
 13294                           ; BSR set to: 0
 13295  013C94  0100               	movlb	0	; () banked
 13296  013C96  5195               	movf	___fldiv@bexp& (0+255),w,b
 13297  013C98  0100               	movlb	0	; () banked
 13298  013C9A  B4D8               	btfsc	status,2,c
 13299  013C9C  D012               	goto	l6860
 13300                           
 13301                           ; BSR set to: 0
 13302  013C9E  0100               	movlb	0	; () banked
 13303  013CA0  2995               	incf	___fldiv@bexp& (0+255),w,b
 13304  013CA2  A4D8               	btfss	status,2,c
 13305  013CA4  D009               	goto	l6856
 13306                           
 13307                           ; BSR set to: 0
 13308  013CA6  0E00               	movlw	0
 13309  013CA8  0100               	movlb	0	; () banked
 13310  013CAA  6F7E               	movwf	___fldiv@b& (0+255),b
 13311  013CAC  0E00               	movlw	0
 13312  013CAE  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 13313  013CB0  0E00               	movlw	0
 13314  013CB2  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 13315  013CB4  0E00               	movlw	0
 13316  013CB6  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13317  013CB8                     l6856:
 13318                           
 13319                           ; BSR set to: 0
 13320  013CB8  0100               	movlb	0	; () banked
 13321  013CBA  8F80               	bsf	(___fldiv@b+2)& (0+255),7,b
 13322                           
 13323                           ; BSR set to: 0
 13324  013CBC  0E00               	movlw	0
 13325  013CBE  0100               	movlb	0	; () banked
 13326  013CC0  D008               	goto	L14
 13327  013CC2                     l6860:
 13328                           
 13329                           ; BSR set to: 0
 13330  013CC2  0E00               	movlw	0
 13331  013CC4  0100               	movlb	0	; () banked
 13332  013CC6  6F7E               	movwf	___fldiv@b& (0+255),b
 13333  013CC8  0E00               	movlw	0
 13334  013CCA  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 13335  013CCC  0E00               	movlw	0
 13336  013CCE  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 13337  013CD0  0E00               	movlw	0
 13338  013CD2                     L14:
 13339  013CD2  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13340                           
 13341                           ; BSR set to: 0
 13342                           
 13343                           ; BSR set to: 0
 13344  013CD4  0100               	movlb	0	; () banked
 13345  013CD6  5185               	movf	(___fldiv@a+3)& (0+255),w,b
 13346  013CD8  0B80               	andlw	128
 13347  013CDA  0100               	movlb	0	; () banked
 13348  013CDC  1B8A               	xorwf	___fldiv@sign& (0+255),f,b
 13349                           
 13350                           ; BSR set to: 0
 13351  013CDE  0100               	movlb	0	; () banked
 13352  013CE0  5185               	movf	(___fldiv@a+3)& (0+255),w,b
 13353  013CE2  2585               	addwf	(___fldiv@a+3)& (0+255),w,b
 13354  013CE4  0100               	movlb	0	; () banked
 13355  013CE6  6F96               	movwf	___fldiv@aexp& (0+255),b
 13356                           
 13357                           ; BSR set to: 0
 13358  013CE8  0100               	movlb	0	; () banked
 13359  013CEA  AF84               	btfss	(___fldiv@a+2)& (0+255),7,b
 13360  013CEC  D002               	goto	l6870
 13361                           
 13362                           ; BSR set to: 0
 13363  013CEE  0100               	movlb	0	; () banked
 13364  013CF0  8196               	bsf	___fldiv@aexp& (0+255),0,b
 13365  013CF2                     l6870:
 13366                           
 13367                           ; BSR set to: 0
 13368  013CF2  0100               	movlb	0	; () banked
 13369  013CF4  5196               	movf	___fldiv@aexp& (0+255),w,b
 13370  013CF6  0100               	movlb	0	; () banked
 13371  013CF8  B4D8               	btfsc	status,2,c
 13372  013CFA  D012               	goto	l6880
 13373                           
 13374                           ; BSR set to: 0
 13375  013CFC  0100               	movlb	0	; () banked
 13376  013CFE  2996               	incf	___fldiv@aexp& (0+255),w,b
 13377  013D00  A4D8               	btfss	status,2,c
 13378  013D02  D009               	goto	l6876
 13379                           
 13380                           ; BSR set to: 0
 13381  013D04  0E00               	movlw	0
 13382  013D06  0100               	movlb	0	; () banked
 13383  013D08  6F82               	movwf	___fldiv@a& (0+255),b
 13384  013D0A  0E00               	movlw	0
 13385  013D0C  6F83               	movwf	(___fldiv@a+1)& (0+255),b
 13386  013D0E  0E00               	movlw	0
 13387  013D10  6F84               	movwf	(___fldiv@a+2)& (0+255),b
 13388  013D12  0E00               	movlw	0
 13389  013D14  6F85               	movwf	(___fldiv@a+3)& (0+255),b
 13390  013D16                     l6876:
 13391                           
 13392                           ; BSR set to: 0
 13393  013D16  0100               	movlb	0	; () banked
 13394  013D18  8F84               	bsf	(___fldiv@a+2)& (0+255),7,b
 13395                           
 13396                           ; BSR set to: 0
 13397  013D1A  0E00               	movlw	0
 13398  013D1C  0100               	movlb	0	; () banked
 13399  013D1E  D008               	goto	L15
 13400  013D20                     l6880:
 13401                           
 13402                           ; BSR set to: 0
 13403  013D20  0E00               	movlw	0
 13404  013D22  0100               	movlb	0	; () banked
 13405  013D24  6F82               	movwf	___fldiv@a& (0+255),b
 13406  013D26  0E00               	movlw	0
 13407  013D28  6F83               	movwf	(___fldiv@a+1)& (0+255),b
 13408  013D2A  0E00               	movlw	0
 13409  013D2C  6F84               	movwf	(___fldiv@a+2)& (0+255),b
 13410  013D2E  0E00               	movlw	0
 13411  013D30                     L15:
 13412  013D30  6F85               	movwf	(___fldiv@a+3)& (0+255),b
 13413                           
 13414                           ; BSR set to: 0
 13415                           
 13416                           ; BSR set to: 0
 13417  013D32  0100               	movlb	0	; () banked
 13418  013D34  5182               	movf	___fldiv@a& (0+255),w,b
 13419  013D36  0100               	movlb	0	; () banked
 13420  013D38  1183               	iorwf	(___fldiv@a+1)& (0+255),w,b
 13421  013D3A  0100               	movlb	0	; () banked
 13422  013D3C  1184               	iorwf	(___fldiv@a+2)& (0+255),w,b
 13423  013D3E  0100               	movlb	0	; () banked
 13424  013D40  1185               	iorwf	(___fldiv@a+3)& (0+255),w,b
 13425  013D42  A4D8               	btfss	status,2,c
 13426  013D44  D017               	goto	l6892
 13427                           
 13428                           ; BSR set to: 0
 13429  013D46  0E00               	movlw	0
 13430  013D48  0100               	movlb	0	; () banked
 13431  013D4A  6F7E               	movwf	___fldiv@b& (0+255),b
 13432  013D4C  0E00               	movlw	0
 13433  013D4E  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 13434  013D50  0E00               	movlw	0
 13435  013D52  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 13436  013D54  0E00               	movlw	0
 13437  013D56  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13438                           
 13439                           ; BSR set to: 0
 13440  013D58  0100               	movlb	0	; () banked
 13441  013D5A  0E80               	movlw	128
 13442  013D5C  1380               	iorwf	(___fldiv@b+2)& (0+255),f,b
 13443  013D5E  0E7F               	movlw	127
 13444  013D60  1381               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13445                           
 13446                           ; BSR set to: 0
 13447  013D62  C07E  F07E         	movff	___fldiv@b,?___fldiv
 13448  013D66  C07F  F07F         	movff	___fldiv@b+1,?___fldiv+1
 13449  013D6A  C080  F080         	movff	___fldiv@b+2,?___fldiv+2
 13450  013D6E  C081  F081         	movff	___fldiv@b+3,?___fldiv+3
 13451                           
 13452                           ; BSR set to: 0
 13453  013D72  0012               	return	
 13454  013D74                     l6892:
 13455                           
 13456                           ; BSR set to: 0
 13457  013D74  0100               	movlb	0	; () banked
 13458  013D76  5195               	movf	___fldiv@bexp& (0+255),w,b
 13459  013D78  0100               	movlb	0	; () banked
 13460  013D7A  A4D8               	btfss	status,2,c
 13461  013D7C  D012               	goto	l6900
 13462                           
 13463                           ; BSR set to: 0
 13464  013D7E  0E00               	movlw	0
 13465  013D80  0100               	movlb	0	; () banked
 13466  013D82  6F7E               	movwf	___fldiv@b& (0+255),b
 13467  013D84  0E00               	movlw	0
 13468  013D86  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 13469  013D88  0E00               	movlw	0
 13470  013D8A  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 13471  013D8C  0E00               	movlw	0
 13472  013D8E  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13473                           
 13474                           ; BSR set to: 0
 13475  013D90  C07E  F07E         	movff	___fldiv@b,?___fldiv
 13476  013D94  C07F  F07F         	movff	___fldiv@b+1,?___fldiv+1
 13477  013D98  C080  F080         	movff	___fldiv@b+2,?___fldiv+2
 13478  013D9C  C081  F081         	movff	___fldiv@b+3,?___fldiv+3
 13479                           
 13480                           ; BSR set to: 0
 13481  013DA0  0012               	return	
 13482  013DA2                     l6900:
 13483                           
 13484                           ; BSR set to: 0
 13485  013DA2  0100               	movlb	0	; () banked
 13486  013DA4  5196               	movf	___fldiv@aexp& (0+255),w,b
 13487  013DA6  0100               	movlb	0	; () banked
 13488  013DA8  6F86               	movwf	??___fldiv& (0+255),b
 13489  013DAA  6B87               	clrf	(??___fldiv+1)& (0+255),b
 13490  013DAC  0100               	movlb	0	; () banked
 13491  013DAE  1F86               	comf	??___fldiv& (0+255),f,b
 13492  013DB0  1F87               	comf	(??___fldiv+1)& (0+255),f,b
 13493  013DB2  4B86               	infsnz	??___fldiv& (0+255),f,b
 13494  013DB4  2B87               	incf	(??___fldiv+1)& (0+255),f,b
 13495  013DB6  0100               	movlb	0	; () banked
 13496  013DB8  5195               	movf	___fldiv@bexp& (0+255),w,b
 13497  013DBA  0100               	movlb	0	; () banked
 13498  013DBC  6F88               	movwf	(??___fldiv+2)& (0+255),b
 13499  013DBE  6B89               	clrf	(??___fldiv+3)& (0+255),b
 13500  013DC0  0100               	movlb	0	; () banked
 13501  013DC2  5186               	movf	??___fldiv& (0+255),w,b
 13502  013DC4  0100               	movlb	0	; () banked
 13503  013DC6  2788               	addwf	(??___fldiv+2)& (0+255),f,b
 13504  013DC8  0100               	movlb	0	; () banked
 13505  013DCA  5187               	movf	(??___fldiv+1)& (0+255),w,b
 13506  013DCC  0100               	movlb	0	; () banked
 13507  013DCE  2389               	addwfc	(??___fldiv+3)& (0+255),f,b
 13508  013DD0  0E7F               	movlw	127
 13509  013DD2  0100               	movlb	0	; () banked
 13510  013DD4  2588               	addwf	(??___fldiv+2)& (0+255),w,b
 13511  013DD6  0100               	movlb	0	; () banked
 13512  013DD8  6F8F               	movwf	___fldiv@new_exp& (0+255),b
 13513  013DDA  0E00               	movlw	0
 13514  013DDC  0100               	movlb	0	; () banked
 13515  013DDE  2189               	addwfc	(??___fldiv+3)& (0+255),w,b
 13516  013DE0  0100               	movlb	0	; () banked
 13517  013DE2  6F90               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13518                           
 13519                           ; BSR set to: 0
 13520  013DE4  C07E  F08B         	movff	___fldiv@b,___fldiv@rem
 13521  013DE8  C07F  F08C         	movff	___fldiv@b+1,___fldiv@rem+1
 13522  013DEC  C080  F08D         	movff	___fldiv@b+2,___fldiv@rem+2
 13523  013DF0  C081  F08E         	movff	___fldiv@b+3,___fldiv@rem+3
 13524                           
 13525                           ; BSR set to: 0
 13526  013DF4  0E00               	movlw	0
 13527  013DF6  0100               	movlb	0	; () banked
 13528  013DF8  6F7E               	movwf	___fldiv@b& (0+255),b
 13529  013DFA  0E00               	movlw	0
 13530  013DFC  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 13531  013DFE  0E00               	movlw	0
 13532  013E00  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 13533  013E02  0E00               	movlw	0
 13534  013E04  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13535                           
 13536                           ; BSR set to: 0
 13537  013E06  0E00               	movlw	0
 13538  013E08  0100               	movlb	0	; () banked
 13539  013E0A  6F91               	movwf	___fldiv@grs& (0+255),b
 13540  013E0C  0E00               	movlw	0
 13541  013E0E  6F92               	movwf	(___fldiv@grs+1)& (0+255),b
 13542  013E10  0E00               	movlw	0
 13543  013E12  6F93               	movwf	(___fldiv@grs+2)& (0+255),b
 13544  013E14  0E00               	movlw	0
 13545  013E16  6F94               	movwf	(___fldiv@grs+3)& (0+255),b
 13546                           
 13547                           ; BSR set to: 0
 13548  013E18  0E00               	movlw	0
 13549  013E1A  0100               	movlb	0	; () banked
 13550  013E1C  6F96               	movwf	___fldiv@aexp& (0+255),b
 13551  013E1E  D042               	goto	l1574
 13552  013E20                     l6910:
 13553                           
 13554                           ; BSR set to: 0
 13555  013E20  0100               	movlb	0	; () banked
 13556  013E22  5196               	movf	___fldiv@aexp& (0+255),w,b
 13557  013E24  0100               	movlb	0	; () banked
 13558  013E26  B4D8               	btfsc	status,2,c
 13559  013E28  D017               	goto	l6918
 13560                           
 13561                           ; BSR set to: 0
 13562  013E2A  0100               	movlb	0	; () banked
 13563  013E2C  90D8               	bcf	status,0,c
 13564  013E2E  378B               	rlcf	___fldiv@rem& (0+255),f,b
 13565  013E30  378C               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13566  013E32  378D               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13567  013E34  378E               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13568  013E36  0100               	movlb	0	; () banked
 13569  013E38  90D8               	bcf	status,0,c
 13570  013E3A  377E               	rlcf	___fldiv@b& (0+255),f,b
 13571  013E3C  377F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13572  013E3E  3780               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13573  013E40  3781               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13574                           
 13575                           ; BSR set to: 0
 13576  013E42  0100               	movlb	0	; () banked
 13577  013E44  AF94               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13578  013E46  D002               	goto	l1577
 13579                           
 13580                           ; BSR set to: 0
 13581  013E48  0100               	movlb	0	; () banked
 13582  013E4A  817E               	bsf	___fldiv@b& (0+255),0,b
 13583  013E4C                     l1577:
 13584                           
 13585                           ; BSR set to: 0
 13586  013E4C  0100               	movlb	0	; () banked
 13587  013E4E  90D8               	bcf	status,0,c
 13588  013E50  3791               	rlcf	___fldiv@grs& (0+255),f,b
 13589  013E52  3792               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13590  013E54  3793               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13591  013E56  3794               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13592  013E58                     l6918:
 13593                           
 13594                           ; BSR set to: 0
 13595  013E58  0100               	movlb	0	; () banked
 13596  013E5A  5182               	movf	___fldiv@a& (0+255),w,b
 13597  013E5C  0100               	movlb	0	; () banked
 13598  013E5E  5D8B               	subwf	___fldiv@rem& (0+255),w,b
 13599  013E60  0100               	movlb	0	; () banked
 13600  013E62  5183               	movf	(___fldiv@a+1)& (0+255),w,b
 13601  013E64  0100               	movlb	0	; () banked
 13602  013E66  598C               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13603  013E68  0100               	movlb	0	; () banked
 13604  013E6A  5184               	movf	(___fldiv@a+2)& (0+255),w,b
 13605  013E6C  0100               	movlb	0	; () banked
 13606  013E6E  598D               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13607  013E70  0100               	movlb	0	; () banked
 13608  013E72  5185               	movf	(___fldiv@a+3)& (0+255),w,b
 13609  013E74  0100               	movlb	0	; () banked
 13610  013E76  598E               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13611  013E78  A0D8               	btfss	status,0,c
 13612  013E7A  D012               	goto	l6924
 13613                           
 13614                           ; BSR set to: 0
 13615  013E7C  0100               	movlb	0	; () banked
 13616  013E7E  8D94               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13617                           
 13618                           ; BSR set to: 0
 13619  013E80  0100               	movlb	0	; () banked
 13620  013E82  5182               	movf	___fldiv@a& (0+255),w,b
 13621  013E84  0100               	movlb	0	; () banked
 13622  013E86  5F8B               	subwf	___fldiv@rem& (0+255),f,b
 13623  013E88  0100               	movlb	0	; () banked
 13624  013E8A  5183               	movf	(___fldiv@a+1)& (0+255),w,b
 13625  013E8C  0100               	movlb	0	; () banked
 13626  013E8E  5B8C               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13627  013E90  0100               	movlb	0	; () banked
 13628  013E92  5184               	movf	(___fldiv@a+2)& (0+255),w,b
 13629  013E94  0100               	movlb	0	; () banked
 13630  013E96  5B8D               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13631  013E98  0100               	movlb	0	; () banked
 13632  013E9A  5185               	movf	(___fldiv@a+3)& (0+255),w,b
 13633  013E9C  0100               	movlb	0	; () banked
 13634  013E9E  5B8E               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13635  013EA0                     l6924:
 13636                           
 13637                           ; BSR set to: 0
 13638  013EA0  0100               	movlb	0	; () banked
 13639  013EA2  2B96               	incf	___fldiv@aexp& (0+255),f,b
 13640  013EA4                     l1574:
 13641                           
 13642                           ; BSR set to: 0
 13643  013EA4  0E19               	movlw	25
 13644  013EA6  0100               	movlb	0	; () banked
 13645  013EA8  6596               	cpfsgt	___fldiv@aexp& (0+255),b
 13646  013EAA  D7BA               	goto	l6910
 13647                           
 13648                           ; BSR set to: 0
 13649                           
 13650                           ; BSR set to: 0
 13651  013EAC  0100               	movlb	0	; () banked
 13652  013EAE  518B               	movf	___fldiv@rem& (0+255),w,b
 13653  013EB0  0100               	movlb	0	; () banked
 13654  013EB2  118C               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13655  013EB4  0100               	movlb	0	; () banked
 13656  013EB6  118D               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13657  013EB8  0100               	movlb	0	; () banked
 13658  013EBA  118E               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13659  013EBC  B4D8               	btfsc	status,2,c
 13660  013EBE  D018               	goto	l6936
 13661                           
 13662                           ; BSR set to: 0
 13663  013EC0  0100               	movlb	0	; () banked
 13664  013EC2  8191               	bsf	___fldiv@grs& (0+255),0,b
 13665                           
 13666                           ; BSR set to: 0
 13667  013EC4  D015               	goto	l6936
 13668  013EC6                     l6930:
 13669                           
 13670                           ; BSR set to: 0
 13671  013EC6  0100               	movlb	0	; () banked
 13672  013EC8  90D8               	bcf	status,0,c
 13673  013ECA  377E               	rlcf	___fldiv@b& (0+255),f,b
 13674  013ECC  377F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13675  013ECE  3780               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13676  013ED0  3781               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13677                           
 13678                           ; BSR set to: 0
 13679  013ED2  0100               	movlb	0	; () banked
 13680  013ED4  AF94               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13681  013ED6  D002               	goto	l1583
 13682                           
 13683                           ; BSR set to: 0
 13684  013ED8  0100               	movlb	0	; () banked
 13685  013EDA  817E               	bsf	___fldiv@b& (0+255),0,b
 13686  013EDC                     l1583:
 13687                           
 13688                           ; BSR set to: 0
 13689  013EDC  0100               	movlb	0	; () banked
 13690  013EDE  90D8               	bcf	status,0,c
 13691  013EE0  3791               	rlcf	___fldiv@grs& (0+255),f,b
 13692  013EE2  3792               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13693  013EE4  3793               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13694  013EE6  3794               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13695  013EE8  0100               	movlb	0	; () banked
 13696  013EEA  078F               	decf	___fldiv@new_exp& (0+255),f,b
 13697  013EEC  A0D8               	btfss	status,0,c
 13698  013EEE  0790               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13699  013EF0                     l6936:
 13700                           
 13701                           ; BSR set to: 0
 13702  013EF0  0100               	movlb	0	; () banked
 13703  013EF2  AF80               	btfss	(___fldiv@b+2)& (0+255),7,b
 13704  013EF4  D7E8               	goto	l6930
 13705                           
 13706                           ; BSR set to: 0
 13707                           
 13708                           ; BSR set to: 0
 13709  013EF6  0E00               	movlw	0
 13710  013EF8  0100               	movlb	0	; () banked
 13711  013EFA  6F96               	movwf	___fldiv@aexp& (0+255),b
 13712                           
 13713                           ; BSR set to: 0
 13714  013EFC  0100               	movlb	0	; () banked
 13715  013EFE  AF94               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13716  013F00  D024               	goto	l1585
 13717                           
 13718                           ; BSR set to: 0
 13719  013F02  0EFF               	movlw	255
 13720  013F04  0100               	movlb	0	; () banked
 13721  013F06  1591               	andwf	___fldiv@grs& (0+255),w,b
 13722  013F08  0100               	movlb	0	; () banked
 13723  013F0A  6F86               	movwf	??___fldiv& (0+255),b
 13724  013F0C  0EFF               	movlw	255
 13725  013F0E  0100               	movlb	0	; () banked
 13726  013F10  1592               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13727  013F12  0100               	movlb	0	; () banked
 13728  013F14  6F87               	movwf	(??___fldiv+1)& (0+255),b
 13729  013F16  0EFF               	movlw	255
 13730  013F18  0100               	movlb	0	; () banked
 13731  013F1A  1593               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13732  013F1C  0100               	movlb	0	; () banked
 13733  013F1E  6F88               	movwf	(??___fldiv+2)& (0+255),b
 13734  013F20  0E7F               	movlw	127
 13735  013F22  0100               	movlb	0	; () banked
 13736  013F24  1594               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13737  013F26  0100               	movlb	0	; () banked
 13738  013F28  6F89               	movwf	(??___fldiv+3)& (0+255),b
 13739  013F2A  0100               	movlb	0	; () banked
 13740  013F2C  5186               	movf	??___fldiv& (0+255),w,b
 13741  013F2E  0100               	movlb	0	; () banked
 13742  013F30  1187               	iorwf	(??___fldiv+1)& (0+255),w,b
 13743  013F32  0100               	movlb	0	; () banked
 13744  013F34  1188               	iorwf	(??___fldiv+2)& (0+255),w,b
 13745  013F36  0100               	movlb	0	; () banked
 13746  013F38  1189               	iorwf	(??___fldiv+3)& (0+255),w,b
 13747  013F3A  A4D8               	btfss	status,2,c
 13748  013F3C  D003               	goto	l6946
 13749                           
 13750                           ; BSR set to: 0
 13751                           
 13752                           ; BSR set to: 0
 13753  013F3E  0100               	movlb	0	; () banked
 13754  013F40  A17E               	btfss	___fldiv@b& (0+255),0,b
 13755  013F42  D003               	goto	l1585
 13756  013F44                     l6946:
 13757                           
 13758                           ; BSR set to: 0
 13759  013F44  0E01               	movlw	1
 13760  013F46  0100               	movlb	0	; () banked
 13761  013F48  6F96               	movwf	___fldiv@aexp& (0+255),b
 13762  013F4A                     l1585:
 13763                           
 13764                           ; BSR set to: 0
 13765  013F4A  0100               	movlb	0	; () banked
 13766  013F4C  5196               	movf	___fldiv@aexp& (0+255),w,b
 13767  013F4E  0100               	movlb	0	; () banked
 13768  013F50  B4D8               	btfsc	status,2,c
 13769  013F52  D023               	goto	l6956
 13770                           
 13771                           ; BSR set to: 0
 13772  013F54  0E01               	movlw	1
 13773  013F56  0100               	movlb	0	; () banked
 13774  013F58  277E               	addwf	___fldiv@b& (0+255),f,b
 13775  013F5A  0E00               	movlw	0
 13776  013F5C  237F               	addwfc	(___fldiv@b+1)& (0+255),f,b
 13777  013F5E  2380               	addwfc	(___fldiv@b+2)& (0+255),f,b
 13778  013F60  2381               	addwfc	(___fldiv@b+3)& (0+255),f,b
 13779                           
 13780                           ; BSR set to: 0
 13781  013F62  0100               	movlb	0	; () banked
 13782  013F64  A181               	btfss	(___fldiv@b+3)& (0+255),0,b
 13783  013F66  D019               	goto	l6956
 13784                           
 13785                           ; BSR set to: 0
 13786  013F68  C07E  F086         	movff	___fldiv@b,??___fldiv
 13787  013F6C  C07F  F087         	movff	___fldiv@b+1,??___fldiv+1
 13788  013F70  C080  F088         	movff	___fldiv@b+2,??___fldiv+2
 13789  013F74  C081  F089         	movff	___fldiv@b+3,??___fldiv+3
 13790  013F78  0100               	movlb	0	; () banked
 13791  013F7A  3589               	rlcf	(??___fldiv+3)& (0+255),w,b
 13792  013F7C  3389               	rrcf	(??___fldiv+3)& (0+255),f,b
 13793  013F7E  3388               	rrcf	(??___fldiv+2)& (0+255),f,b
 13794  013F80  3387               	rrcf	(??___fldiv+1)& (0+255),f,b
 13795  013F82  3386               	rrcf	??___fldiv& (0+255),f,b
 13796  013F84  C086  F07E         	movff	??___fldiv,___fldiv@b
 13797  013F88  C087  F07F         	movff	??___fldiv+1,___fldiv@b+1
 13798  013F8C  C088  F080         	movff	??___fldiv+2,___fldiv@b+2
 13799  013F90  C089  F081         	movff	??___fldiv+3,___fldiv@b+3
 13800                           
 13801                           ; BSR set to: 0
 13802  013F94  0100               	movlb	0	; () banked
 13803  013F96  4B8F               	infsnz	___fldiv@new_exp& (0+255),f,b
 13804  013F98  2B90               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13805  013F9A                     l6956:
 13806                           
 13807                           ; BSR set to: 0
 13808  013F9A  0100               	movlb	0	; () banked
 13809  013F9C  BF90               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13810  013F9E  D014               	goto	l6960
 13811  013FA0  0100               	movlb	0	; () banked
 13812  013FA2  5190               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13813  013FA4  E104               	bnz	u8660
 13814  013FA6  0100               	movlb	0	; () banked
 13815  013FA8  298F               	incf	___fldiv@new_exp& (0+255),w,b
 13816  013FAA  A0D8               	btfss	status,0,c
 13817  013FAC  D00D               	goto	l6960
 13818  013FAE                     u8660:
 13819                           
 13820                           ; BSR set to: 0
 13821  013FAE  0E00               	movlw	0
 13822  013FB0  0100               	movlb	0	; () banked
 13823  013FB2  6F90               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13824  013FB4  698F               	setf	___fldiv@new_exp& (0+255),b
 13825  013FB6  0E00               	movlw	0
 13826  013FB8  0100               	movlb	0	; () banked
 13827  013FBA  6F7E               	movwf	___fldiv@b& (0+255),b
 13828  013FBC  0E00               	movlw	0
 13829  013FBE  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 13830  013FC0  0E00               	movlw	0
 13831  013FC2  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 13832  013FC4  0E00               	movlw	0
 13833  013FC6  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13834  013FC8                     l6960:
 13835                           
 13836                           ; BSR set to: 0
 13837  013FC8  0100               	movlb	0	; () banked
 13838  013FCA  BF90               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13839  013FCC  D007               	goto	l6962
 13840  013FCE  0100               	movlb	0	; () banked
 13841  013FD0  5190               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13842  013FD2  E115               	bnz	l6964
 13843  013FD4  0100               	movlb	0	; () banked
 13844  013FD6  058F               	decf	___fldiv@new_exp& (0+255),w,b
 13845  013FD8  B0D8               	btfsc	status,0,c
 13846  013FDA  D011               	goto	l6964
 13847  013FDC                     l6962:
 13848                           
 13849                           ; BSR set to: 0
 13850  013FDC  0E00               	movlw	0
 13851  013FDE  0100               	movlb	0	; () banked
 13852  013FE0  6F90               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13853  013FE2  0E00               	movlw	0
 13854  013FE4  6F8F               	movwf	___fldiv@new_exp& (0+255),b
 13855  013FE6  0E00               	movlw	0
 13856  013FE8  0100               	movlb	0	; () banked
 13857  013FEA  6F7E               	movwf	___fldiv@b& (0+255),b
 13858  013FEC  0E00               	movlw	0
 13859  013FEE  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
 13860  013FF0  0E00               	movlw	0
 13861  013FF2  6F80               	movwf	(___fldiv@b+2)& (0+255),b
 13862  013FF4  0E00               	movlw	0
 13863  013FF6  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13864  013FF8  0E00               	movlw	0
 13865  013FFA  0100               	movlb	0	; () banked
 13866  013FFC  6F8A               	movwf	___fldiv@sign& (0+255),b
 13867  013FFE                     l6964:
 13868                           
 13869                           ; BSR set to: 0
 13870  013FFE  C08F  F095         	movff	___fldiv@new_exp,___fldiv@bexp
 13871                           
 13872                           ; BSR set to: 0
 13873  014002  0100               	movlb	0	; () banked
 13874  014004  A195               	btfss	___fldiv@bexp& (0+255),0,b
 13875  014006  D003               	goto	l6970
 13876                           
 13877                           ; BSR set to: 0
 13878  014008  0100               	movlb	0	; () banked
 13879  01400A  8F80               	bsf	(___fldiv@b+2)& (0+255),7,b
 13880  01400C  D002               	goto	l6972
 13881  01400E                     l6970:
 13882                           
 13883                           ; BSR set to: 0
 13884  01400E  0100               	movlb	0	; () banked
 13885  014010  9F80               	bcf	(___fldiv@b+2)& (0+255),7,b
 13886  014012                     l6972:
 13887                           
 13888                           ; BSR set to: 0
 13889  014012  0100               	movlb	0	; () banked
 13890  014014  90D8               	bcf	status,0,c
 13891  014016  3195               	rrcf	___fldiv@bexp& (0+255),w,b
 13892  014018  0100               	movlb	0	; () banked
 13893  01401A  6F81               	movwf	(___fldiv@b+3)& (0+255),b
 13894                           
 13895                           ; BSR set to: 0
 13896  01401C  0100               	movlb	0	; () banked
 13897  01401E  518A               	movf	___fldiv@sign& (0+255),w,b
 13898  014020  0100               	movlb	0	; () banked
 13899  014022  1381               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13900                           
 13901                           ; BSR set to: 0
 13902  014024  C07E  F07E         	movff	___fldiv@b,?___fldiv
 13903  014028  C07F  F07F         	movff	___fldiv@b+1,?___fldiv+1
 13904  01402C  C080  F080         	movff	___fldiv@b+2,?___fldiv+2
 13905  014030  C081  F081         	movff	___fldiv@b+3,?___fldiv+3
 13906  014034  0012               	return	
 13907  014036                     __end_of___fldiv:
 13908                           	opt stack 0
 13909                           tblptru	equ	0xFF8
 13910                           tblptrh	equ	0xFF7
 13911                           tblptrl	equ	0xFF6
 13912                           tablat	equ	0xFF5
 13913                           prodh	equ	0xFF4
 13914                           prodl	equ	0xFF3
 13915                           intcon	equ	0xFF2
 13916                           postinc0	equ	0xFEE
 13917                           wreg	equ	0xFE8
 13918                           indf2	equ	0xFDF
 13919                           postinc2	equ	0xFDE
 13920                           fsr2h	equ	0xFDA
 13921                           fsr2l	equ	0xFD9
 13922                           status	equ	0xFD8
 13923                           
 13924 ;; *************** function _LCD_write_integer *****************
 13925 ;; Defined at:
 13926 ;;		line 210 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13927 ;; Parameters:    Size  Location     Type
 13928 ;;  value           2   40[BANK0 ] int 
 13929 ;;  number_of_di    1   42[BANK0 ] unsigned char 
 13930 ;;  zero_cleanin    1   43[BANK0 ] unsigned char 
 13931 ;; Auto vars:     Size  Location     Type
 13932 ;;  convertedInt    6   49[BANK0 ] unsigned char [6]
 13933 ;;  index           1   55[BANK0 ] unsigned char 
 13934 ;; Return value:  Size  Location     Type
 13935 ;;		None               void
 13936 ;; Registers used:
 13937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13938 ;; Tracked objects:
 13939 ;;		On entry : 0/0
 13940 ;;		On exit  : 0/0
 13941 ;;		Unchanged: 0/0
 13942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13943 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13944 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13945 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13946 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13947 ;;Total ram usage:       16 bytes
 13948 ;; Hardware stack levels used:    1
 13949 ;; Hardware stack levels required when called:   15
 13950 ;; This function calls:
 13951 ;;		_LCD_write_string
 13952 ;;		_itoa
 13953 ;; This function is called by:
 13954 ;;		_LCD_Handler
 13955 ;; This function uses a non-reentrant model
 13956 ;;
 13957                           
 13958                           	psect	text26
 13959  014C62                     __ptext26:
 13960                           	opt stack 0
 13961  014C62                     _LCD_write_integer:
 13962                           	opt stack 14
 13963                           
 13964                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 13965                           
 13966                           ; BSR set to: 0
 13967                           ;incstack = 0
 13968  014C62  EE21  F007         	lfsr	2,LCD_write_integer@F17272
 13969  014C66  EE10  F091         	lfsr	1,LCD_write_integer@convertedInt
 13970  014C6A  0E05               	movlw	5
 13971  014C6C                     u11641:
 13972  014C6C  CFDB FFE3          	movff	plusw2,plusw1
 13973  014C70  06E8               	decf	wreg,f,c
 13974  014C72  E2FC               	bc	u11641
 13975                           
 13976                           ;src\LCD_44780.c: 216: unsigned char index;
 13977                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 13978  014C74  0E91               	movlw	low LCD_write_integer@convertedInt
 13979  014C76  0100               	movlb	0	; () banked
 13980  014C78  6F80               	movwf	itoa@buf& (0+255),b
 13981  014C7A  0E00               	movlw	high LCD_write_integer@convertedInt
 13982  014C7C  0100               	movlb	0	; () banked
 13983  014C7E  6F81               	movwf	(itoa@buf+1)& (0+255),b
 13984  014C80  C088  F082         	movff	LCD_write_integer@value,itoa@val
 13985  014C84  C089  F083         	movff	LCD_write_integer@value+1,itoa@val+1
 13986  014C88  0E00               	movlw	0
 13987  014C8A  0100               	movlb	0	; () banked
 13988  014C8C  6F85               	movwf	(itoa@base+1)& (0+255),b
 13989  014C8E  0E0A               	movlw	10
 13990  014C90  6F84               	movwf	itoa@base& (0+255),b
 13991  014C92  ECD1  F0B1         	call	_itoa	;wreg free
 13992                           
 13993                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 13994  014C96  0100               	movlb	0	; () banked
 13995  014C98  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13996  014C9A  0100               	movlb	0	; () banked
 13997  014C9C  B4D8               	btfsc	status,2,c
 13998  014C9E  D0B8               	goto	l8898
 13999                           
 14000                           ; BSR set to: 0
 14001                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 14002  014CA0  0100               	movlb	0	; () banked
 14003  014CA2  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14004  014CA4  0D01               	mullw	1
 14005  014CA6  0E91               	movlw	low LCD_write_integer@convertedInt
 14006  014CA8  24F3               	addwf	prodl,w,c
 14007  014CAA  6ED9               	movwf	fsr2l,c
 14008  014CAC  0E00               	movlw	high LCD_write_integer@convertedInt
 14009  014CAE  20F4               	addwfc	prodh,w,c
 14010  014CB0  6EDA               	movwf	fsr2h,c
 14011  014CB2  0E00               	movlw	0
 14012  014CB4  6EDF               	movwf	indf2,c
 14013                           
 14014                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 14015  014CB6  D070               	goto	l8894
 14016  014CB8                     l8876:
 14017                           
 14018                           ; BSR set to: 0
 14019                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 14020  014CB8  0100               	movlb	0	; () banked
 14021  014CBA  058A               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 14022  014CBC  0100               	movlb	0	; () banked
 14023  014CBE  6F97               	movwf	LCD_write_integer@index& (0+255),b
 14024  014CC0                     l8878:
 14025                           
 14026                           ; BSR set to: 0
 14027  014CC0  0100               	movlb	0	; () banked
 14028  014CC2  5197               	movf	LCD_write_integer@index& (0+255),w,b
 14029  014CC4  0100               	movlb	0	; () banked
 14030  014CC6  B4D8               	btfsc	status,2,c
 14031  014CC8  D067               	goto	l8894
 14032                           
 14033                           ; BSR set to: 0
 14034                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 14035                           
 14036                           ; BSR set to: 0
 14037                           
 14038                           ; BSR set to: 0
 14039  014CCA  0EFF               	movlw	255
 14040  014CCC  0100               	movlb	0	; () banked
 14041  014CCE  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 14042  014CD0  0EFF               	movlw	255
 14043  014CD2  0100               	movlb	0	; () banked
 14044  014CD4  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14045  014CD6  0100               	movlb	0	; () banked
 14046  014CD8  5197               	movf	LCD_write_integer@index& (0+255),w,b
 14047  014CDA  0100               	movlb	0	; () banked
 14048  014CDC  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14049  014CDE  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14050  014CE0  0100               	movlb	0	; () banked
 14051  014CE2  518C               	movf	??_LCD_write_integer& (0+255),w,b
 14052  014CE4  0100               	movlb	0	; () banked
 14053  014CE6  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14054  014CE8  0100               	movlb	0	; () banked
 14055  014CEA  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14056  014CEC  0100               	movlb	0	; () banked
 14057  014CEE  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14058  014CF0  0E91               	movlw	low LCD_write_integer@convertedInt
 14059  014CF2  0100               	movlb	0	; () banked
 14060  014CF4  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14061  014CF6  6ED9               	movwf	fsr2l,c
 14062  014CF8  0E00               	movlw	high LCD_write_integer@convertedInt
 14063  014CFA  0100               	movlb	0	; () banked
 14064  014CFC  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14065  014CFE  6EDA               	movwf	fsr2h,c
 14066  014D00  0100               	movlb	0	; () banked
 14067  014D02  5197               	movf	LCD_write_integer@index& (0+255),w,b
 14068  014D04  0D01               	mullw	1
 14069  014D06  0E91               	movlw	low LCD_write_integer@convertedInt
 14070  014D08  24F3               	addwf	prodl,w,c
 14071  014D0A  6EE1               	movwf	fsr1l,c
 14072  014D0C  0E00               	movlw	high LCD_write_integer@convertedInt
 14073  014D0E  20F4               	addwfc	prodh,w,c
 14074  014D10  6EE2               	movwf	fsr1h,c
 14075  014D12  CFDF FFE7          	movff	indf2,indf1
 14076                           
 14077                           ; BSR set to: 0
 14078                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 14079  014D16  0100               	movlb	0	; () banked
 14080  014D18  058B               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 14081  014D1A  A4D8               	btfss	status,2,c
 14082  014D1C  D01D               	goto	l8888
 14083                           
 14084                           ; BSR set to: 0
 14085                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 14086  014D1E  0EFF               	movlw	255
 14087  014D20  0100               	movlb	0	; () banked
 14088  014D22  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 14089  014D24  0EFF               	movlw	255
 14090  014D26  0100               	movlb	0	; () banked
 14091  014D28  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14092  014D2A  0100               	movlb	0	; () banked
 14093  014D2C  5197               	movf	LCD_write_integer@index& (0+255),w,b
 14094  014D2E  0100               	movlb	0	; () banked
 14095  014D30  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14096  014D32  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14097  014D34  0100               	movlb	0	; () banked
 14098  014D36  518C               	movf	??_LCD_write_integer& (0+255),w,b
 14099  014D38  0100               	movlb	0	; () banked
 14100  014D3A  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14101  014D3C  0100               	movlb	0	; () banked
 14102  014D3E  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14103  014D40  0100               	movlb	0	; () banked
 14104  014D42  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14105  014D44  0E91               	movlw	low LCD_write_integer@convertedInt
 14106  014D46  0100               	movlb	0	; () banked
 14107  014D48  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14108  014D4A  6ED9               	movwf	fsr2l,c
 14109  014D4C  0E00               	movlw	high LCD_write_integer@convertedInt
 14110  014D4E  0100               	movlb	0	; () banked
 14111  014D50  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14112  014D52  6EDA               	movwf	fsr2h,c
 14113  014D54  0E20               	movlw	32
 14114  014D56  D01C               	goto	L16
 14115  014D58                     l8888:
 14116                           
 14117                           ; BSR set to: 0
 14118                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 14119  014D58  0EFF               	movlw	255
 14120  014D5A  0100               	movlb	0	; () banked
 14121  014D5C  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 14122  014D5E  0EFF               	movlw	255
 14123  014D60  0100               	movlb	0	; () banked
 14124  014D62  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14125  014D64  0100               	movlb	0	; () banked
 14126  014D66  5197               	movf	LCD_write_integer@index& (0+255),w,b
 14127  014D68  0100               	movlb	0	; () banked
 14128  014D6A  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14129  014D6C  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14130  014D6E  0100               	movlb	0	; () banked
 14131  014D70  518C               	movf	??_LCD_write_integer& (0+255),w,b
 14132  014D72  0100               	movlb	0	; () banked
 14133  014D74  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14134  014D76  0100               	movlb	0	; () banked
 14135  014D78  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14136  014D7A  0100               	movlb	0	; () banked
 14137  014D7C  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14138  014D7E  0E91               	movlw	low LCD_write_integer@convertedInt
 14139  014D80  0100               	movlb	0	; () banked
 14140  014D82  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14141  014D84  6ED9               	movwf	fsr2l,c
 14142  014D86  0E00               	movlw	high LCD_write_integer@convertedInt
 14143  014D88  0100               	movlb	0	; () banked
 14144  014D8A  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14145  014D8C  6EDA               	movwf	fsr2h,c
 14146  014D8E  0E30               	movlw	48
 14147  014D90                     L16:
 14148  014D90  6EDF               	movwf	indf2,c
 14149                           
 14150                           ; BSR set to: 0
 14151                           
 14152                           ; BSR set to: 0
 14153  014D92  0100               	movlb	0	; () banked
 14154  014D94  0797               	decf	LCD_write_integer@index& (0+255),f,b
 14155  014D96  D794               	goto	l8878
 14156  014D98                     l8894:
 14157                           
 14158                           ; BSR set to: 0
 14159  014D98  0EFF               	movlw	255
 14160  014D9A  0100               	movlb	0	; () banked
 14161  014D9C  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 14162  014D9E  0EFF               	movlw	255
 14163  014DA0  0100               	movlb	0	; () banked
 14164  014DA2  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14165  014DA4  0100               	movlb	0	; () banked
 14166  014DA6  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14167  014DA8  0100               	movlb	0	; () banked
 14168  014DAA  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14169  014DAC  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14170  014DAE  0100               	movlb	0	; () banked
 14171  014DB0  518C               	movf	??_LCD_write_integer& (0+255),w,b
 14172  014DB2  0100               	movlb	0	; () banked
 14173  014DB4  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14174  014DB6  0100               	movlb	0	; () banked
 14175  014DB8  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14176  014DBA  0100               	movlb	0	; () banked
 14177  014DBC  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14178  014DBE  0E91               	movlw	low LCD_write_integer@convertedInt
 14179  014DC0  0100               	movlb	0	; () banked
 14180  014DC2  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14181  014DC4  6ED9               	movwf	fsr2l,c
 14182  014DC6  0E00               	movlw	high LCD_write_integer@convertedInt
 14183  014DC8  0100               	movlb	0	; () banked
 14184  014DCA  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14185  014DCC  6EDA               	movwf	fsr2h,c
 14186  014DCE  0E3A               	movlw	58
 14187  014DD0  60DF               	cpfslt	indf2,c
 14188  014DD2  D772               	goto	l8876
 14189                           
 14190                           ; BSR set to: 0
 14191  014DD4  0EFF               	movlw	255
 14192  014DD6  0100               	movlb	0	; () banked
 14193  014DD8  6F8C               	movwf	??_LCD_write_integer& (0+255),b
 14194  014DDA  0EFF               	movlw	255
 14195  014DDC  0100               	movlb	0	; () banked
 14196  014DDE  6F8D               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14197  014DE0  0100               	movlb	0	; () banked
 14198  014DE2  518A               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14199  014DE4  0100               	movlb	0	; () banked
 14200  014DE6  6F8E               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14201  014DE8  6B8F               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14202  014DEA  0100               	movlb	0	; () banked
 14203  014DEC  518C               	movf	??_LCD_write_integer& (0+255),w,b
 14204  014DEE  0100               	movlb	0	; () banked
 14205  014DF0  278E               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14206  014DF2  0100               	movlb	0	; () banked
 14207  014DF4  518D               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14208  014DF6  0100               	movlb	0	; () banked
 14209  014DF8  238F               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14210  014DFA  0E91               	movlw	low LCD_write_integer@convertedInt
 14211  014DFC  0100               	movlb	0	; () banked
 14212  014DFE  258E               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14213  014E00  6ED9               	movwf	fsr2l,c
 14214  014E02  0E00               	movlw	high LCD_write_integer@convertedInt
 14215  014E04  0100               	movlb	0	; () banked
 14216  014E06  218F               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14217  014E08  6EDA               	movwf	fsr2h,c
 14218  014E0A  0E2F               	movlw	47
 14219  014E0C  64DF               	cpfsgt	indf2,c
 14220  014E0E  D754               	goto	l8876
 14221  014E10                     l8898:
 14222                           
 14223                           ; BSR set to: 0
 14224                           ;src\LCD_44780.c: 243: }
 14225                           ;src\LCD_44780.c: 245: }
 14226                           ;src\LCD_44780.c: 246: }
 14227                           ;src\LCD_44780.c: 247: }
 14228                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 14229  014E10  0E91               	movlw	low LCD_write_integer@convertedInt
 14230  014E12  0100               	movlb	0	; () banked
 14231  014E14  6F81               	movwf	LCD_write_string@buffer& (0+255),b
 14232  014E16  0E00               	movlw	high LCD_write_integer@convertedInt
 14233  014E18  0100               	movlb	0	; () banked
 14234  014E1A  6F82               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 14235  014E1C  EC4A  F0B3         	call	_LCD_write_string	;wreg free
 14236  014E20  0012               	return		;funcret
 14237  014E22                     __end_of_LCD_write_integer:
 14238                           	opt stack 0
 14239                           tblptru	equ	0xFF8
 14240                           tblptrh	equ	0xFF7
 14241                           tblptrl	equ	0xFF6
 14242                           tablat	equ	0xFF5
 14243                           prodh	equ	0xFF4
 14244                           prodl	equ	0xFF3
 14245                           intcon	equ	0xFF2
 14246                           postinc0	equ	0xFEE
 14247                           wreg	equ	0xFE8
 14248                           indf1	equ	0xFE7
 14249                           plusw1	equ	0xFE3
 14250                           fsr1h	equ	0xFE2
 14251                           fsr1l	equ	0xFE1
 14252                           indf2	equ	0xFDF
 14253                           postinc2	equ	0xFDE
 14254                           plusw2	equ	0xFDB
 14255                           fsr2h	equ	0xFDA
 14256                           fsr2l	equ	0xFD9
 14257                           status	equ	0xFD8
 14258                           
 14259 ;; *************** function _itoa *****************
 14260 ;; Defined at:
 14261 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 14262 ;; Parameters:    Size  Location     Type
 14263 ;;  buf             2   32[BANK0 ] PTR unsigned char 
 14264 ;;		 -> LCD_write_integer@convertedInt(6), 
 14265 ;;  val             2   34[BANK0 ] int 
 14266 ;;  base            2   36[BANK0 ] int 
 14267 ;; Auto vars:     Size  Location     Type
 14268 ;;  cp              2   38[BANK0 ] PTR unsigned char 
 14269 ;;		 -> LCD_write_integer@convertedInt(6), 
 14270 ;; Return value:  Size  Location     Type
 14271 ;;                  2   32[BANK0 ] PTR unsigned char 
 14272 ;; Registers used:
 14273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14274 ;; Tracked objects:
 14275 ;;		On entry : 0/0
 14276 ;;		On exit  : 0/0
 14277 ;;		Unchanged: 0/0
 14278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14279 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14280 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14282 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14283 ;;Total ram usage:        8 bytes
 14284 ;; Hardware stack levels used:    1
 14285 ;; Hardware stack levels required when called:   11
 14286 ;; This function calls:
 14287 ;;		_utoa
 14288 ;; This function is called by:
 14289 ;;		_LCD_write_integer
 14290 ;; This function uses a non-reentrant model
 14291 ;;
 14292                           
 14293                           	psect	text27
 14294  0163A2                     __ptext27:
 14295                           	opt stack 0
 14296  0163A2                     _itoa:
 14297                           	opt stack 17
 14298                           
 14299                           ;incstack = 0
 14300  0163A2  C080  F086         	movff	itoa@buf,itoa@cp
 14301  0163A6  C081  F087         	movff	itoa@buf+1,itoa@cp+1
 14302  0163AA  0100               	movlb	0	; () banked
 14303  0163AC  AF83               	btfss	(itoa@val+1)& (0+255),7,b
 14304  0163AE  D00E               	goto	l5880
 14305                           
 14306                           ; BSR set to: 0
 14307  0163B0  C080  FFD9         	movff	itoa@buf,fsr2l
 14308  0163B4  C081  FFDA         	movff	itoa@buf+1,fsr2h
 14309  0163B8  0E2D               	movlw	45
 14310  0163BA  6EDF               	movwf	indf2,c
 14311                           
 14312                           ; BSR set to: 0
 14313  0163BC  0100               	movlb	0	; () banked
 14314  0163BE  4B80               	infsnz	itoa@buf& (0+255),f,b
 14315  0163C0  2B81               	incf	(itoa@buf+1)& (0+255),f,b
 14316                           
 14317                           ; BSR set to: 0
 14318  0163C2  0100               	movlb	0	; () banked
 14319  0163C4  6D82               	negf	itoa@val& (0+255),b
 14320  0163C6  1F83               	comf	(itoa@val+1)& (0+255),f,b
 14321  0163C8  B0D8               	btfsc	status,0,c
 14322  0163CA  2B83               	incf	(itoa@val+1)& (0+255),f,b
 14323  0163CC                     l5880:
 14324                           
 14325                           ; BSR set to: 0
 14326  0163CC  C080  F077         	movff	itoa@buf,utoa@buf
 14327  0163D0  C081  F078         	movff	itoa@buf+1,utoa@buf+1
 14328  0163D4  C082  F079         	movff	itoa@val,utoa@val
 14329  0163D8  C083  F07A         	movff	itoa@val+1,utoa@val+1
 14330  0163DC  C084  F07B         	movff	itoa@base,utoa@base
 14331  0163E0  C085  F07C         	movff	itoa@base+1,utoa@base+1
 14332  0163E4  ECE2  F0AC         	call	_utoa	;wreg free
 14333  0163E8  0012               	return	
 14334  0163EA                     __end_of_itoa:
 14335                           	opt stack 0
 14336                           tblptru	equ	0xFF8
 14337                           tblptrh	equ	0xFF7
 14338                           tblptrl	equ	0xFF6
 14339                           tablat	equ	0xFF5
 14340                           prodh	equ	0xFF4
 14341                           prodl	equ	0xFF3
 14342                           intcon	equ	0xFF2
 14343                           postinc0	equ	0xFEE
 14344                           wreg	equ	0xFE8
 14345                           indf1	equ	0xFE7
 14346                           plusw1	equ	0xFE3
 14347                           fsr1h	equ	0xFE2
 14348                           fsr1l	equ	0xFE1
 14349                           indf2	equ	0xFDF
 14350                           postinc2	equ	0xFDE
 14351                           plusw2	equ	0xFDB
 14352                           fsr2h	equ	0xFDA
 14353                           fsr2l	equ	0xFD9
 14354                           status	equ	0xFD8
 14355                           
 14356 ;; *************** function _utoa *****************
 14357 ;; Defined at:
 14358 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 14359 ;; Parameters:    Size  Location     Type
 14360 ;;  buf             2   23[BANK0 ] PTR unsigned char 
 14361 ;;		 -> LCD_write_integer@convertedInt(6), 
 14362 ;;  val             2   25[BANK0 ] unsigned int 
 14363 ;;  base            2   27[BANK0 ] int 
 14364 ;; Auto vars:     Size  Location     Type
 14365 ;;  v               2   29[BANK0 ] unsigned int 
 14366 ;;  c               1   31[BANK0 ] unsigned char 
 14367 ;; Return value:  Size  Location     Type
 14368 ;;                  2   23[BANK0 ] PTR unsigned char 
 14369 ;; Registers used:
 14370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14371 ;; Tracked objects:
 14372 ;;		On entry : 0/0
 14373 ;;		On exit  : 0/0
 14374 ;;		Unchanged: 0/0
 14375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14376 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14377 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14379 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14380 ;;Total ram usage:        9 bytes
 14381 ;; Hardware stack levels used:    1
 14382 ;; Hardware stack levels required when called:   10
 14383 ;; This function calls:
 14384 ;;		___lwdiv
 14385 ;;		___lwmod
 14386 ;; This function is called by:
 14387 ;;		_itoa
 14388 ;; This function uses a non-reentrant model
 14389 ;;
 14390                           
 14391                           	psect	text28
 14392  0159C4                     __ptext28:
 14393                           	opt stack 0
 14394  0159C4                     _utoa:
 14395                           	opt stack 17
 14396                           
 14397                           ;incstack = 0
 14398  0159C4  C079  F07D         	movff	utoa@val,utoa@v
 14399  0159C8  C07A  F07E         	movff	utoa@val+1,utoa@v+1
 14400  0159CC                     l5396:
 14401  0159CC  C07D  F070         	movff	utoa@v,___lwdiv@dividend
 14402  0159D0  C07E  F071         	movff	utoa@v+1,___lwdiv@dividend+1
 14403  0159D4  C07B  F072         	movff	utoa@base,___lwdiv@divisor
 14404  0159D8  C07C  F073         	movff	utoa@base+1,___lwdiv@divisor+1
 14405  0159DC  EC38  F0B0         	call	___lwdiv	;wreg free
 14406  0159E0  C070  F07D         	movff	?___lwdiv,utoa@v
 14407  0159E4  C071  F07E         	movff	?___lwdiv+1,utoa@v+1
 14408  0159E8  0100               	movlb	0	; () banked
 14409  0159EA  4B77               	infsnz	utoa@buf& (0+255),f,b
 14410  0159EC  2B78               	incf	(utoa@buf+1)& (0+255),f,b
 14411                           
 14412                           ; BSR set to: 0
 14413  0159EE  0100               	movlb	0	; () banked
 14414  0159F0  517D               	movf	utoa@v& (0+255),w,b
 14415  0159F2  0100               	movlb	0	; () banked
 14416  0159F4  117E               	iorwf	(utoa@v+1)& (0+255),w,b
 14417  0159F6  A4D8               	btfss	status,2,c
 14418  0159F8  D7E9               	goto	l5396
 14419                           
 14420                           ; BSR set to: 0
 14421                           
 14422                           ; BSR set to: 0
 14423  0159FA  C077  FFD9         	movff	utoa@buf,fsr2l
 14424  0159FE  C078  FFDA         	movff	utoa@buf+1,fsr2h
 14425  015A02  0E00               	movlw	0
 14426  015A04  6EDF               	movwf	indf2,c
 14427                           
 14428                           ; BSR set to: 0
 14429  015A06  0100               	movlb	0	; () banked
 14430  015A08  0777               	decf	utoa@buf& (0+255),f,b
 14431  015A0A  A0D8               	btfss	status,0,c
 14432  015A0C  0778               	decf	(utoa@buf+1)& (0+255),f,b
 14433  015A0E                     l5406:
 14434                           
 14435                           ; BSR set to: 0
 14436  015A0E  C079  F070         	movff	utoa@val,___lwmod@dividend
 14437  015A12  C07A  F071         	movff	utoa@val+1,___lwmod@dividend+1
 14438  015A16  C07B  F072         	movff	utoa@base,___lwmod@divisor
 14439  015A1A  C07C  F073         	movff	utoa@base+1,___lwmod@divisor+1
 14440  015A1E  ECAC  F0B0         	call	___lwmod	;wreg free
 14441  015A22  0100               	movlb	0	; () banked
 14442  015A24  5170               	movf	?___lwmod& (0+255),w,b
 14443  015A26  0100               	movlb	0	; () banked
 14444  015A28  6F7F               	movwf	utoa@c& (0+255),b
 14445                           
 14446                           ; BSR set to: 0
 14447  015A2A  C079  F070         	movff	utoa@val,___lwdiv@dividend
 14448  015A2E  C07A  F071         	movff	utoa@val+1,___lwdiv@dividend+1
 14449  015A32  C07B  F072         	movff	utoa@base,___lwdiv@divisor
 14450  015A36  C07C  F073         	movff	utoa@base+1,___lwdiv@divisor+1
 14451  015A3A  EC38  F0B0         	call	___lwdiv	;wreg free
 14452  015A3E  C070  F079         	movff	?___lwdiv,utoa@val
 14453  015A42  C071  F07A         	movff	?___lwdiv+1,utoa@val+1
 14454  015A46  0E09               	movlw	9
 14455  015A48  0100               	movlb	0	; () banked
 14456  015A4A  657F               	cpfsgt	utoa@c& (0+255),b
 14457  015A4C  D003               	goto	l1398
 14458                           
 14459                           ; BSR set to: 0
 14460  015A4E  0E07               	movlw	7
 14461  015A50  0100               	movlb	0	; () banked
 14462  015A52  277F               	addwf	utoa@c& (0+255),f,b
 14463  015A54                     l1398:
 14464                           
 14465                           ; BSR set to: 0
 14466  015A54  0E30               	movlw	48
 14467  015A56  0100               	movlb	0	; () banked
 14468  015A58  277F               	addwf	utoa@c& (0+255),f,b
 14469                           
 14470                           ; BSR set to: 0
 14471  015A5A  C077  FFD9         	movff	utoa@buf,fsr2l
 14472  015A5E  C078  FFDA         	movff	utoa@buf+1,fsr2h
 14473  015A62  C07F  FFDF         	movff	utoa@c,indf2
 14474                           
 14475                           ; BSR set to: 0
 14476  015A66  0100               	movlb	0	; () banked
 14477  015A68  0777               	decf	utoa@buf& (0+255),f,b
 14478  015A6A  A0D8               	btfss	status,0,c
 14479  015A6C  0778               	decf	(utoa@buf+1)& (0+255),f,b
 14480                           
 14481                           ; BSR set to: 0
 14482  015A6E  0100               	movlb	0	; () banked
 14483  015A70  5179               	movf	utoa@val& (0+255),w,b
 14484  015A72  0100               	movlb	0	; () banked
 14485  015A74  117A               	iorwf	(utoa@val+1)& (0+255),w,b
 14486  015A76  A4D8               	btfss	status,2,c
 14487  015A78  D7CA               	goto	l5406
 14488                           
 14489                           ; BSR set to: 0
 14490                           ;	Return value of _utoa is never used
 14491                           
 14492                           ; BSR set to: 0
 14493  015A7A  0100               	movlb	0	; () banked
 14494  015A7C  4B77               	infsnz	utoa@buf& (0+255),f,b
 14495  015A7E  2B78               	incf	(utoa@buf+1)& (0+255),f,b
 14496  015A80  0012               	return	
 14497  015A82                     __end_of_utoa:
 14498                           	opt stack 0
 14499                           tblptru	equ	0xFF8
 14500                           tblptrh	equ	0xFF7
 14501                           tblptrl	equ	0xFF6
 14502                           tablat	equ	0xFF5
 14503                           prodh	equ	0xFF4
 14504                           prodl	equ	0xFF3
 14505                           intcon	equ	0xFF2
 14506                           postinc0	equ	0xFEE
 14507                           wreg	equ	0xFE8
 14508                           indf1	equ	0xFE7
 14509                           plusw1	equ	0xFE3
 14510                           fsr1h	equ	0xFE2
 14511                           fsr1l	equ	0xFE1
 14512                           indf2	equ	0xFDF
 14513                           postinc2	equ	0xFDE
 14514                           plusw2	equ	0xFDB
 14515                           fsr2h	equ	0xFDA
 14516                           fsr2l	equ	0xFD9
 14517                           status	equ	0xFD8
 14518                           
 14519 ;; *************** function ___lwmod *****************
 14520 ;; Defined at:
 14521 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14522 ;; Parameters:    Size  Location     Type
 14523 ;;  dividend        2   16[BANK0 ] unsigned int 
 14524 ;;  divisor         2   18[BANK0 ] unsigned int 
 14525 ;; Auto vars:     Size  Location     Type
 14526 ;;  counter         1   20[BANK0 ] unsigned char 
 14527 ;; Return value:  Size  Location     Type
 14528 ;;                  2   16[BANK0 ] unsigned int 
 14529 ;; Registers used:
 14530 ;;		wreg, status,2, status,0
 14531 ;; Tracked objects:
 14532 ;;		On entry : 0/0
 14533 ;;		On exit  : 0/0
 14534 ;;		Unchanged: 0/0
 14535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14536 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14537 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14539 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14540 ;;Total ram usage:        5 bytes
 14541 ;; Hardware stack levels used:    1
 14542 ;; Hardware stack levels required when called:    9
 14543 ;; This function calls:
 14544 ;;		Nothing
 14545 ;; This function is called by:
 14546 ;;		_utoa
 14547 ;; This function uses a non-reentrant model
 14548 ;;
 14549                           
 14550                           	psect	text29
 14551  016158                     __ptext29:
 14552                           	opt stack 0
 14553  016158                     ___lwmod:
 14554                           	opt stack 17
 14555                           
 14556                           ; BSR set to: 0
 14557                           ;incstack = 0
 14558  016158  0100               	movlb	0	; () banked
 14559  01615A  5172               	movf	___lwmod@divisor& (0+255),w,b
 14560  01615C  0100               	movlb	0	; () banked
 14561  01615E  1173               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14562  016160  B4D8               	btfsc	status,2,c
 14563  016162  D026               	goto	l1487
 14564                           
 14565                           ; BSR set to: 0
 14566  016164  0E01               	movlw	1
 14567  016166  0100               	movlb	0	; () banked
 14568  016168  6F74               	movwf	___lwmod@counter& (0+255),b
 14569  01616A  D006               	goto	l4948
 14570  01616C                     l4946:
 14571                           
 14572                           ; BSR set to: 0
 14573  01616C  0100               	movlb	0	; () banked
 14574  01616E  90D8               	bcf	status,0,c
 14575  016170  3772               	rlcf	___lwmod@divisor& (0+255),f,b
 14576  016172  3773               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14577  016174  0100               	movlb	0	; () banked
 14578  016176  2B74               	incf	___lwmod@counter& (0+255),f,b
 14579  016178                     l4948:
 14580                           
 14581                           ; BSR set to: 0
 14582  016178  0100               	movlb	0	; () banked
 14583  01617A  AF73               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14584  01617C  D7F7               	goto	l4946
 14585  01617E                     l4950:
 14586                           
 14587                           ; BSR set to: 0
 14588  01617E  0100               	movlb	0	; () banked
 14589  016180  5172               	movf	___lwmod@divisor& (0+255),w,b
 14590  016182  0100               	movlb	0	; () banked
 14591  016184  5D70               	subwf	___lwmod@dividend& (0+255),w,b
 14592  016186  0100               	movlb	0	; () banked
 14593  016188  5173               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14594  01618A  0100               	movlb	0	; () banked
 14595  01618C  5971               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14596  01618E  A0D8               	btfss	status,0,c
 14597  016190  D008               	goto	l4954
 14598                           
 14599                           ; BSR set to: 0
 14600  016192  0100               	movlb	0	; () banked
 14601  016194  5172               	movf	___lwmod@divisor& (0+255),w,b
 14602  016196  0100               	movlb	0	; () banked
 14603  016198  5F70               	subwf	___lwmod@dividend& (0+255),f,b
 14604  01619A  0100               	movlb	0	; () banked
 14605  01619C  5173               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14606  01619E  0100               	movlb	0	; () banked
 14607  0161A0  5B71               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14608  0161A2                     l4954:
 14609                           
 14610                           ; BSR set to: 0
 14611  0161A2  0100               	movlb	0	; () banked
 14612  0161A4  90D8               	bcf	status,0,c
 14613  0161A6  3373               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14614  0161A8  3372               	rrcf	___lwmod@divisor& (0+255),f,b
 14615                           
 14616                           ; BSR set to: 0
 14617  0161AA  0100               	movlb	0	; () banked
 14618  0161AC  2F74               	decfsz	___lwmod@counter& (0+255),f,b
 14619  0161AE  D7E7               	goto	l4950
 14620  0161B0                     l1487:
 14621                           
 14622                           ; BSR set to: 0
 14623  0161B0  C070  F070         	movff	___lwmod@dividend,?___lwmod
 14624  0161B4  C071  F071         	movff	___lwmod@dividend+1,?___lwmod+1
 14625                           
 14626                           ; BSR set to: 0
 14627  0161B8  0012               	return		;funcret
 14628  0161BA                     __end_of___lwmod:
 14629                           	opt stack 0
 14630                           tblptru	equ	0xFF8
 14631                           tblptrh	equ	0xFF7
 14632                           tblptrl	equ	0xFF6
 14633                           tablat	equ	0xFF5
 14634                           prodh	equ	0xFF4
 14635                           prodl	equ	0xFF3
 14636                           intcon	equ	0xFF2
 14637                           postinc0	equ	0xFEE
 14638                           wreg	equ	0xFE8
 14639                           indf1	equ	0xFE7
 14640                           plusw1	equ	0xFE3
 14641                           fsr1h	equ	0xFE2
 14642                           fsr1l	equ	0xFE1
 14643                           indf2	equ	0xFDF
 14644                           postinc2	equ	0xFDE
 14645                           plusw2	equ	0xFDB
 14646                           fsr2h	equ	0xFDA
 14647                           fsr2l	equ	0xFD9
 14648                           status	equ	0xFD8
 14649                           
 14650 ;; *************** function ___lwdiv *****************
 14651 ;; Defined at:
 14652 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 14653 ;; Parameters:    Size  Location     Type
 14654 ;;  dividend        2   16[BANK0 ] unsigned int 
 14655 ;;  divisor         2   18[BANK0 ] unsigned int 
 14656 ;; Auto vars:     Size  Location     Type
 14657 ;;  quotient        2   20[BANK0 ] unsigned int 
 14658 ;;  counter         1   22[BANK0 ] unsigned char 
 14659 ;; Return value:  Size  Location     Type
 14660 ;;                  2   16[BANK0 ] unsigned int 
 14661 ;; Registers used:
 14662 ;;		wreg, status,2, status,0
 14663 ;; Tracked objects:
 14664 ;;		On entry : 0/0
 14665 ;;		On exit  : 0/0
 14666 ;;		Unchanged: 0/0
 14667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14668 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14669 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14671 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14672 ;;Total ram usage:        7 bytes
 14673 ;; Hardware stack levels used:    1
 14674 ;; Hardware stack levels required when called:    9
 14675 ;; This function calls:
 14676 ;;		Nothing
 14677 ;; This function is called by:
 14678 ;;		_utoa
 14679 ;; This function uses a non-reentrant model
 14680 ;;
 14681                           
 14682                           	psect	text30
 14683  016070                     __ptext30:
 14684                           	opt stack 0
 14685  016070                     ___lwdiv:
 14686                           	opt stack 17
 14687                           
 14688                           ; BSR set to: 0
 14689                           ;incstack = 0
 14690  016070  0E00               	movlw	0
 14691  016072  0100               	movlb	0	; () banked
 14692  016074  6F75               	movwf	(___lwdiv@quotient+1)& (0+255),b
 14693  016076  0E00               	movlw	0
 14694  016078  6F74               	movwf	___lwdiv@quotient& (0+255),b
 14695                           
 14696                           ; BSR set to: 0
 14697  01607A  0100               	movlb	0	; () banked
 14698  01607C  5172               	movf	___lwdiv@divisor& (0+255),w,b
 14699  01607E  0100               	movlb	0	; () banked
 14700  016080  1173               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 14701  016082  B4D8               	btfsc	status,2,c
 14702  016084  D02C               	goto	l1477
 14703                           
 14704                           ; BSR set to: 0
 14705  016086  0E01               	movlw	1
 14706  016088  0100               	movlb	0	; () banked
 14707  01608A  6F76               	movwf	___lwdiv@counter& (0+255),b
 14708  01608C  D006               	goto	l4928
 14709  01608E                     l4926:
 14710                           
 14711                           ; BSR set to: 0
 14712  01608E  0100               	movlb	0	; () banked
 14713  016090  90D8               	bcf	status,0,c
 14714  016092  3772               	rlcf	___lwdiv@divisor& (0+255),f,b
 14715  016094  3773               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 14716  016096  0100               	movlb	0	; () banked
 14717  016098  2B76               	incf	___lwdiv@counter& (0+255),f,b
 14718  01609A                     l4928:
 14719                           
 14720                           ; BSR set to: 0
 14721  01609A  0100               	movlb	0	; () banked
 14722  01609C  AF73               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 14723  01609E  D7F7               	goto	l4926
 14724  0160A0                     l4930:
 14725                           
 14726                           ; BSR set to: 0
 14727  0160A0  0100               	movlb	0	; () banked
 14728  0160A2  90D8               	bcf	status,0,c
 14729  0160A4  3774               	rlcf	___lwdiv@quotient& (0+255),f,b
 14730  0160A6  3775               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 14731                           
 14732                           ; BSR set to: 0
 14733  0160A8  0100               	movlb	0	; () banked
 14734  0160AA  5172               	movf	___lwdiv@divisor& (0+255),w,b
 14735  0160AC  0100               	movlb	0	; () banked
 14736  0160AE  5D70               	subwf	___lwdiv@dividend& (0+255),w,b
 14737  0160B0  0100               	movlb	0	; () banked
 14738  0160B2  5173               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14739  0160B4  0100               	movlb	0	; () banked
 14740  0160B6  5971               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 14741  0160B8  A0D8               	btfss	status,0,c
 14742  0160BA  D00A               	goto	l4938
 14743                           
 14744                           ; BSR set to: 0
 14745  0160BC  0100               	movlb	0	; () banked
 14746  0160BE  5172               	movf	___lwdiv@divisor& (0+255),w,b
 14747  0160C0  0100               	movlb	0	; () banked
 14748  0160C2  5F70               	subwf	___lwdiv@dividend& (0+255),f,b
 14749  0160C4  0100               	movlb	0	; () banked
 14750  0160C6  5173               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14751  0160C8  0100               	movlb	0	; () banked
 14752  0160CA  5B71               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 14753                           
 14754                           ; BSR set to: 0
 14755  0160CC  0100               	movlb	0	; () banked
 14756  0160CE  8174               	bsf	___lwdiv@quotient& (0+255),0,b
 14757  0160D0                     l4938:
 14758                           
 14759                           ; BSR set to: 0
 14760  0160D0  0100               	movlb	0	; () banked
 14761  0160D2  90D8               	bcf	status,0,c
 14762  0160D4  3373               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 14763  0160D6  3372               	rrcf	___lwdiv@divisor& (0+255),f,b
 14764                           
 14765                           ; BSR set to: 0
 14766  0160D8  0100               	movlb	0	; () banked
 14767  0160DA  2F76               	decfsz	___lwdiv@counter& (0+255),f,b
 14768  0160DC  D7E1               	goto	l4930
 14769  0160DE                     l1477:
 14770                           
 14771                           ; BSR set to: 0
 14772  0160DE  C074  F070         	movff	___lwdiv@quotient,?___lwdiv
 14773  0160E2  C075  F071         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14774                           
 14775                           ; BSR set to: 0
 14776  0160E6  0012               	return		;funcret
 14777  0160E8                     __end_of___lwdiv:
 14778                           	opt stack 0
 14779                           tblptru	equ	0xFF8
 14780                           tblptrh	equ	0xFF7
 14781                           tblptrl	equ	0xFF6
 14782                           tablat	equ	0xFF5
 14783                           prodh	equ	0xFF4
 14784                           prodl	equ	0xFF3
 14785                           intcon	equ	0xFF2
 14786                           postinc0	equ	0xFEE
 14787                           wreg	equ	0xFE8
 14788                           indf1	equ	0xFE7
 14789                           plusw1	equ	0xFE3
 14790                           fsr1h	equ	0xFE2
 14791                           fsr1l	equ	0xFE1
 14792                           indf2	equ	0xFDF
 14793                           postinc2	equ	0xFDE
 14794                           plusw2	equ	0xFDB
 14795                           fsr2h	equ	0xFDA
 14796                           fsr2l	equ	0xFD9
 14797                           status	equ	0xFD8
 14798                           
 14799 ;; *************** function _LCD_write_string *****************
 14800 ;; Defined at:
 14801 ;;		line 194 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14802 ;; Parameters:    Size  Location     Type
 14803 ;;  buffer          2   33[BANK0 ] PTR unsigned char 
 14804 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 14805 ;; Auto vars:     Size  Location     Type
 14806 ;;		None
 14807 ;; Return value:  Size  Location     Type
 14808 ;;		None               void
 14809 ;; Registers used:
 14810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14811 ;; Tracked objects:
 14812 ;;		On entry : 0/0
 14813 ;;		On exit  : 0/0
 14814 ;;		Unchanged: 0/0
 14815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14816 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14819 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14820 ;;Total ram usage:        2 bytes
 14821 ;; Hardware stack levels used:    1
 14822 ;; Hardware stack levels required when called:   14
 14823 ;; This function calls:
 14824 ;;		_LCD_write_char
 14825 ;; This function is called by:
 14826 ;;		_LCD_write_integer
 14827 ;;		_LCD_Handler
 14828 ;; This function uses a non-reentrant model
 14829 ;;
 14830                           
 14831                           	psect	text31
 14832  016694                     __ptext31:
 14833                           	opt stack 0
 14834  016694                     _LCD_write_string:
 14835                           	opt stack 15
 14836                           
 14837                           ;src\LCD_44780.c: 197: while(*buffer){
 14838                           
 14839                           ; BSR set to: 0
 14840                           ;incstack = 0
 14841  016694  D00A               	goto	l8504
 14842  016696                     l8500:
 14843                           
 14844                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 14845  016696  C081  FFD9         	movff	LCD_write_string@buffer,fsr2l
 14846  01669A  C082  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 14847  01669E  50DF               	movf	indf2,w,c
 14848  0166A0  ECED  F0AF         	call	_LCD_write_char
 14849                           
 14850                           ;src\LCD_44780.c: 202: buffer++;
 14851  0166A4  0100               	movlb	0	; () banked
 14852  0166A6  4B81               	infsnz	LCD_write_string@buffer& (0+255),f,b
 14853  0166A8  2B82               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 14854  0166AA                     l8504:
 14855  0166AA  C081  FFD9         	movff	LCD_write_string@buffer,fsr2l
 14856  0166AE  C082  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 14857  0166B2  50DF               	movf	indf2,w,c
 14858  0166B4  B4D8               	btfsc	status,2,c
 14859  0166B6  0012               	return	
 14860  0166B8  D7EE               	goto	l8500
 14861  0166BA                     __end_of_LCD_write_string:
 14862                           	opt stack 0
 14863                           tblptru	equ	0xFF8
 14864                           tblptrh	equ	0xFF7
 14865                           tblptrl	equ	0xFF6
 14866                           tablat	equ	0xFF5
 14867                           prodh	equ	0xFF4
 14868                           prodl	equ	0xFF3
 14869                           intcon	equ	0xFF2
 14870                           postinc0	equ	0xFEE
 14871                           wreg	equ	0xFE8
 14872                           indf1	equ	0xFE7
 14873                           plusw1	equ	0xFE3
 14874                           fsr1h	equ	0xFE2
 14875                           fsr1l	equ	0xFE1
 14876                           indf2	equ	0xFDF
 14877                           postinc2	equ	0xFDE
 14878                           plusw2	equ	0xFDB
 14879                           fsr2h	equ	0xFDA
 14880                           fsr2l	equ	0xFD9
 14881                           status	equ	0xFD8
 14882                           
 14883 ;; *************** function _LCD_goto_xy *****************
 14884 ;; Defined at:
 14885 ;;		line 136 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14886 ;; Parameters:    Size  Location     Type
 14887 ;;  x               1    wreg     unsigned char 
 14888 ;;  y               1   31[BANK0 ] unsigned char 
 14889 ;; Auto vars:     Size  Location     Type
 14890 ;;  x               1   32[BANK0 ] unsigned char 
 14891 ;; Return value:  Size  Location     Type
 14892 ;;		None               void
 14893 ;; Registers used:
 14894 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14895 ;; Tracked objects:
 14896 ;;		On entry : 0/0
 14897 ;;		On exit  : 0/0
 14898 ;;		Unchanged: 0/0
 14899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14900 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14901 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14903 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14904 ;;Total ram usage:        2 bytes
 14905 ;; Hardware stack levels used:    1
 14906 ;; Hardware stack levels required when called:   14
 14907 ;; This function calls:
 14908 ;;		_LCD_goto_line
 14909 ;;		_LCD_shift_cursor
 14910 ;; This function is called by:
 14911 ;;		_LCD_Handler
 14912 ;; This function uses a non-reentrant model
 14913 ;;
 14914                           
 14915                           	psect	text32
 14916  0167A4                     __ptext32:
 14917                           	opt stack 0
 14918  0167A4                     _LCD_goto_xy:
 14919                           	opt stack 15
 14920                           
 14921                           ;incstack = 0
 14922                           ;LCD_goto_xy@x stored from wreg
 14923  0167A4  0100               	movlb	0	; () banked
 14924  0167A6  6F80               	movwf	LCD_goto_xy@x& (0+255),b
 14925                           
 14926                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 14927  0167A8  0100               	movlb	0	; () banked
 14928  0167AA  517F               	movf	LCD_goto_xy@y& (0+255),w,b
 14929  0167AC  EC0D  F0AC         	call	_LCD_goto_line
 14930                           
 14931                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 14932  0167B0  0100               	movlb	0	; () banked
 14933  0167B2  0580               	decf	LCD_goto_xy@x& (0+255),w,b
 14934  0167B4  0100               	movlb	0	; () banked
 14935  0167B6  6F7C               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 14936  0167B8  0E01               	movlw	1
 14937  0167BA  EC87  F0B1         	call	_LCD_shift_cursor
 14938  0167BE  0012               	return		;funcret
 14939  0167C0                     __end_of_LCD_goto_xy:
 14940                           	opt stack 0
 14941                           tblptru	equ	0xFF8
 14942                           tblptrh	equ	0xFF7
 14943                           tblptrl	equ	0xFF6
 14944                           tablat	equ	0xFF5
 14945                           prodh	equ	0xFF4
 14946                           prodl	equ	0xFF3
 14947                           intcon	equ	0xFF2
 14948                           postinc0	equ	0xFEE
 14949                           wreg	equ	0xFE8
 14950                           indf1	equ	0xFE7
 14951                           plusw1	equ	0xFE3
 14952                           fsr1h	equ	0xFE2
 14953                           fsr1l	equ	0xFE1
 14954                           indf2	equ	0xFDF
 14955                           postinc2	equ	0xFDE
 14956                           plusw2	equ	0xFDB
 14957                           fsr2h	equ	0xFDA
 14958                           fsr2l	equ	0xFD9
 14959                           status	equ	0xFD8
 14960                           
 14961 ;; *************** function _LCD_shift_cursor *****************
 14962 ;; Defined at:
 14963 ;;		line 98 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14964 ;; Parameters:    Size  Location     Type
 14965 ;;  shift           1    wreg     unsigned char 
 14966 ;;  number_of_sh    1   28[BANK0 ] unsigned char 
 14967 ;; Auto vars:     Size  Location     Type
 14968 ;;  shift           1   29[BANK0 ] unsigned char 
 14969 ;;  i               1   30[BANK0 ] unsigned char 
 14970 ;; Return value:  Size  Location     Type
 14971 ;;		None               void
 14972 ;; Registers used:
 14973 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14974 ;; Tracked objects:
 14975 ;;		On entry : 0/0
 14976 ;;		On exit  : 0/0
 14977 ;;		Unchanged: 0/0
 14978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14979 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14980 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14982 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14983 ;;Total ram usage:        3 bytes
 14984 ;; Hardware stack levels used:    1
 14985 ;; Hardware stack levels required when called:   13
 14986 ;; This function calls:
 14987 ;;		_LCD_send_command
 14988 ;; This function is called by:
 14989 ;;		_LCD_goto_xy
 14990 ;; This function uses a non-reentrant model
 14991 ;;
 14992                           
 14993                           	psect	text33
 14994  01630E                     __ptext33:
 14995                           	opt stack 0
 14996  01630E                     _LCD_shift_cursor:
 14997                           	opt stack 15
 14998                           
 14999                           ;incstack = 0
 15000                           ;LCD_shift_cursor@shift stored from wreg
 15001  01630E  0100               	movlb	0	; () banked
 15002  016310  6F7D               	movwf	LCD_shift_cursor@shift& (0+255),b
 15003                           
 15004                           ;src\LCD_44780.c: 100: unsigned char i;
 15005                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 15006  016312  0E00               	movlw	0
 15007  016314  0100               	movlb	0	; () banked
 15008  016316  6F7E               	movwf	LCD_shift_cursor@i& (0+255),b
 15009  016318  D019               	goto	l8484
 15010  01631A                     l8480:
 15011                           
 15012                           ; BSR set to: 0
 15013                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 15014  01631A  0E00               	movlw	0
 15015  01631C  0100               	movlb	0	; () banked
 15016  01631E  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15017  016320  0E00               	movlw	0
 15018  016322  0100               	movlb	0	; () banked
 15019  016324  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15020  016326  0E01               	movlw	1
 15021  016328  0100               	movlb	0	; () banked
 15022  01632A  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15023  01632C  0E00               	movlw	0
 15024  01632E  EC17  F0B2         	call	_LCD_send_command
 15025                           
 15026                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 15027  016332  C07D  F078         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 15028  016336  0E00               	movlw	0
 15029  016338  0100               	movlb	0	; () banked
 15030  01633A  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15031  01633C  0E00               	movlw	0
 15032  01633E  0100               	movlb	0	; () banked
 15033  016340  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15034  016342  0E00               	movlw	0
 15035  016344  EC17  F0B2         	call	_LCD_send_command
 15036  016348  0100               	movlb	0	; () banked
 15037  01634A  2B7E               	incf	LCD_shift_cursor@i& (0+255),f,b
 15038  01634C                     l8484:
 15039                           
 15040                           ; BSR set to: 0
 15041  01634C  0100               	movlb	0	; () banked
 15042  01634E  517C               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 15043  016350  0100               	movlb	0	; () banked
 15044  016352  5D7E               	subwf	LCD_shift_cursor@i& (0+255),w,b
 15045  016354  B0D8               	btfsc	status,0,c
 15046  016356  0012               	return	
 15047  016358  D7E0               	goto	l8480
 15048  01635A                     __end_of_LCD_shift_cursor:
 15049                           	opt stack 0
 15050                           tblptru	equ	0xFF8
 15051                           tblptrh	equ	0xFF7
 15052                           tblptrl	equ	0xFF6
 15053                           tablat	equ	0xFF5
 15054                           prodh	equ	0xFF4
 15055                           prodl	equ	0xFF3
 15056                           intcon	equ	0xFF2
 15057                           postinc0	equ	0xFEE
 15058                           wreg	equ	0xFE8
 15059                           indf1	equ	0xFE7
 15060                           plusw1	equ	0xFE3
 15061                           fsr1h	equ	0xFE2
 15062                           fsr1l	equ	0xFE1
 15063                           indf2	equ	0xFDF
 15064                           postinc2	equ	0xFDE
 15065                           plusw2	equ	0xFDB
 15066                           fsr2h	equ	0xFDA
 15067                           fsr2l	equ	0xFD9
 15068                           status	equ	0xFD8
 15069                           
 15070 ;; *************** function _LCD_End *****************
 15071 ;; Defined at:
 15072 ;;		line 463 in file "RemoteCan.c"
 15073 ;; Parameters:    Size  Location     Type
 15074 ;;		None
 15075 ;; Auto vars:     Size  Location     Type
 15076 ;;		None
 15077 ;; Return value:  Size  Location     Type
 15078 ;;		None               void
 15079 ;; Registers used:
 15080 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15081 ;; Tracked objects:
 15082 ;;		On entry : 0/0
 15083 ;;		On exit  : 0/0
 15084 ;;		Unchanged: 0/0
 15085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15090 ;;Total ram usage:        0 bytes
 15091 ;; Hardware stack levels used:    1
 15092 ;; Hardware stack levels required when called:   15
 15093 ;; This function calls:
 15094 ;;		_LCD_goto_line
 15095 ;;		_LCD_initialize
 15096 ;;		_LCD_write_message
 15097 ;; This function is called by:
 15098 ;;		_main
 15099 ;; This function uses a non-reentrant model
 15100 ;;
 15101                           
 15102                           	psect	text34
 15103  0161BA                     __ptext34:
 15104                           	opt stack 0
 15105  0161BA                     _LCD_End:
 15106                           	opt stack 15
 15107                           
 15108                           ;RemoteCan.c: 464: LCD_initialize(16);
 15109                           
 15110                           ; BSR set to: 0
 15111                           ;incstack = 0
 15112  0161BA  0E10               	movlw	16
 15113  0161BC  EC43  F0AA         	call	_LCD_initialize
 15114                           
 15115                           ;RemoteCan.c: 465: LCD_goto_line(1);
 15116  0161C0  0E01               	movlw	1
 15117  0161C2  EC0D  F0AC         	call	_LCD_goto_line
 15118                           
 15119                           ;RemoteCan.c: 466: LCD_write_message("= PARKING MESSAGES =");
 15120  0161C6  0E2B               	movlw	low STR_16
 15121  0161C8  0100               	movlb	0	; () banked
 15122  0161CA  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15123  0161CC  0EFF               	movlw	high STR_16
 15124  0161CE  0100               	movlb	0	; () banked
 15125  0161D0  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15126  0161D2  ECA4  F0B2         	call	_LCD_write_message	;wreg free
 15127                           
 15128                           ;RemoteCan.c: 467: LCD_goto_line(2);
 15129  0161D6  0E02               	movlw	2
 15130  0161D8  EC0D  F0AC         	call	_LCD_goto_line
 15131                           
 15132                           ;RemoteCan.c: 468: LCD_write_message(" PARKING PROCEDURES ");
 15133  0161DC  0EEC               	movlw	low STR_25
 15134  0161DE  0100               	movlb	0	; () banked
 15135  0161E0  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15136  0161E2  0EFE               	movlw	high STR_25
 15137  0161E4  0100               	movlb	0	; () banked
 15138  0161E6  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15139  0161E8  ECA4  F0B2         	call	_LCD_write_message	;wreg free
 15140                           
 15141                           ;RemoteCan.c: 469: LCD_goto_line(3);
 15142  0161EC  0E03               	movlw	3
 15143  0161EE  EC0D  F0AC         	call	_LCD_goto_line
 15144                           
 15145                           ;RemoteCan.c: 470: LCD_write_message("    SUCCESSFULLY    ");
 15146  0161F2  0EAD               	movlw	low STR_26
 15147  0161F4  0100               	movlb	0	; () banked
 15148  0161F6  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15149  0161F8  0EFE               	movlw	high STR_26
 15150  0161FA  0100               	movlb	0	; () banked
 15151  0161FC  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15152  0161FE  ECA4  F0B2         	call	_LCD_write_message	;wreg free
 15153                           
 15154                           ;RemoteCan.c: 471: LCD_goto_line(4);
 15155  016202  0E04               	movlw	4
 15156  016204  EC0D  F0AC         	call	_LCD_goto_line
 15157                           
 15158                           ;RemoteCan.c: 472: LCD_write_message("     COMPLETED!     ");
 15159  016208  0E83               	movlw	low STR_27
 15160  01620A  0100               	movlb	0	; () banked
 15161  01620C  6F81               	movwf	LCD_write_message@buffer& (0+255),b
 15162  01620E  0EFE               	movlw	high STR_27
 15163  016210  0100               	movlb	0	; () banked
 15164  016212  6F82               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15165  016214  ECA4  F0B2         	call	_LCD_write_message	;wreg free
 15166  016218  0012               	return		;funcret
 15167  01621A                     __end_of_LCD_End:
 15168                           	opt stack 0
 15169                           tblptru	equ	0xFF8
 15170                           tblptrh	equ	0xFF7
 15171                           tblptrl	equ	0xFF6
 15172                           tablat	equ	0xFF5
 15173                           prodh	equ	0xFF4
 15174                           prodl	equ	0xFF3
 15175                           intcon	equ	0xFF2
 15176                           postinc0	equ	0xFEE
 15177                           wreg	equ	0xFE8
 15178                           indf1	equ	0xFE7
 15179                           plusw1	equ	0xFE3
 15180                           fsr1h	equ	0xFE2
 15181                           fsr1l	equ	0xFE1
 15182                           indf2	equ	0xFDF
 15183                           postinc2	equ	0xFDE
 15184                           plusw2	equ	0xFDB
 15185                           fsr2h	equ	0xFDA
 15186                           fsr2l	equ	0xFD9
 15187                           status	equ	0xFD8
 15188                           
 15189 ;; *************** function _LCD_write_message *****************
 15190 ;; Defined at:
 15191 ;;		line 178 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15192 ;; Parameters:    Size  Location     Type
 15193 ;;  buffer          2   33[BANK0 ] PTR const unsigned char 
 15194 ;;		 -> STR_27(21), STR_26(21), STR_25(21), STR_24(21), 
 15195 ;;		 -> STR_23(21), STR_22(21), STR_21(21), STR_20(21), 
 15196 ;;		 -> STR_19(21), STR_18(21), STR_17(21), STR_16(21), 
 15197 ;;		 -> STR_15(8), STR_14(8), STR_13(5), STR_12(5), 
 15198 ;;		 -> STR_11(5), STR_10(7), STR_9(14), STR_8(17), 
 15199 ;;		 -> STR_7(12), STR_6(21), STR_4(21), STR_3(21), 
 15200 ;;		 -> STR_2(21), STR_1(21), 
 15201 ;; Auto vars:     Size  Location     Type
 15202 ;;		None
 15203 ;; Return value:  Size  Location     Type
 15204 ;;		None               void
 15205 ;; Registers used:
 15206 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15207 ;; Tracked objects:
 15208 ;;		On entry : 0/0
 15209 ;;		On exit  : 0/0
 15210 ;;		Unchanged: 0/0
 15211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15212 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15215 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15216 ;;Total ram usage:        2 bytes
 15217 ;; Hardware stack levels used:    1
 15218 ;; Hardware stack levels required when called:   14
 15219 ;; This function calls:
 15220 ;;		_LCD_write_char
 15221 ;; This function is called by:
 15222 ;;		_main
 15223 ;;		_LCD_Handler
 15224 ;;		_LCD_End
 15225 ;; This function uses a non-reentrant model
 15226 ;;
 15227                           
 15228                           	psect	text35
 15229  016548                     __ptext35:
 15230                           	opt stack 0
 15231  016548                     _LCD_write_message:
 15232                           	opt stack 16
 15233                           
 15234                           ;src\LCD_44780.c: 181: while(*buffer) {
 15235                           
 15236                           ;incstack = 0
 15237  016548  D00D               	goto	l8866
 15238  01654A                     l8862:
 15239                           
 15240                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 15241  01654A  C081  FFF6         	movff	LCD_write_message@buffer,tblptrl
 15242  01654E  C082  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 15243  016552                     	if	0	;tblptru may be non-zero
 15244  016552                     	endif
 15245  016552                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15246  016552  0E00               	movlw	low (__mediumconst shr (0+16))
 15247  016554  6EF8               	movwf	tblptru,c
 15248  016556                     	endif
 15249  016556  0008               	tblrd		*
 15250  016558  50F5               	movf	tablat,w,c
 15251  01655A  ECED  F0AF         	call	_LCD_write_char
 15252                           
 15253                           ;src\LCD_44780.c: 186: buffer++;
 15254  01655E  0100               	movlb	0	; () banked
 15255  016560  4B81               	infsnz	LCD_write_message@buffer& (0+255),f,b
 15256  016562  2B82               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 15257  016564                     l8866:
 15258  016564  C081  FFF6         	movff	LCD_write_message@buffer,tblptrl
 15259  016568  C082  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 15260  01656C                     	if	0	;tblptru may be non-zero
 15261  01656C                     	endif
 15262  01656C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15263  01656C  0E00               	movlw	low (__mediumconst shr (0+16))
 15264  01656E  6EF8               	movwf	tblptru,c
 15265  016570                     	endif
 15266  016570  0008               	tblrd		*
 15267  016572  50F5               	movf	tablat,w,c
 15268  016574  0900               	iorlw	0
 15269  016576  B4D8               	btfsc	status,2,c
 15270  016578  0012               	return	
 15271  01657A  D7E7               	goto	l8862
 15272  01657C                     __end_of_LCD_write_message:
 15273                           	opt stack 0
 15274                           tblptru	equ	0xFF8
 15275                           tblptrh	equ	0xFF7
 15276                           tblptrl	equ	0xFF6
 15277                           tablat	equ	0xFF5
 15278                           prodh	equ	0xFF4
 15279                           prodl	equ	0xFF3
 15280                           intcon	equ	0xFF2
 15281                           postinc0	equ	0xFEE
 15282                           wreg	equ	0xFE8
 15283                           indf1	equ	0xFE7
 15284                           plusw1	equ	0xFE3
 15285                           fsr1h	equ	0xFE2
 15286                           fsr1l	equ	0xFE1
 15287                           indf2	equ	0xFDF
 15288                           postinc2	equ	0xFDE
 15289                           plusw2	equ	0xFDB
 15290                           fsr2h	equ	0xFDA
 15291                           fsr2l	equ	0xFD9
 15292                           status	equ	0xFD8
 15293                           
 15294 ;; *************** function _LCD_write_char *****************
 15295 ;; Defined at:
 15296 ;;		line 145 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15297 ;; Parameters:    Size  Location     Type
 15298 ;;  value           1    wreg     unsigned char 
 15299 ;; Auto vars:     Size  Location     Type
 15300 ;;  value           1   32[BANK0 ] unsigned char 
 15301 ;;  D0              1   31[BANK0 ] unsigned char 
 15302 ;;  D1              1   30[BANK0 ] unsigned char 
 15303 ;;  D2              1   29[BANK0 ] unsigned char 
 15304 ;;  D3              1   28[BANK0 ] unsigned char 
 15305 ;; Return value:  Size  Location     Type
 15306 ;;		None               void
 15307 ;; Registers used:
 15308 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15309 ;; Tracked objects:
 15310 ;;		On entry : 0/0
 15311 ;;		On exit  : 0/0
 15312 ;;		Unchanged: 0/0
 15313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15315 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15317 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15318 ;;Total ram usage:        5 bytes
 15319 ;; Hardware stack levels used:    1
 15320 ;; Hardware stack levels required when called:   13
 15321 ;; This function calls:
 15322 ;;		_LCD_send_command
 15323 ;; This function is called by:
 15324 ;;		_LCD_write_message
 15325 ;;		_LCD_write_string
 15326 ;; This function uses a non-reentrant model
 15327 ;;
 15328                           
 15329                           	psect	text36
 15330  015FDA                     __ptext36:
 15331                           	opt stack 0
 15332  015FDA                     _LCD_write_char:
 15333                           	opt stack 16
 15334                           
 15335                           ;incstack = 0
 15336                           ;LCD_write_char@value stored from wreg
 15337  015FDA  0100               	movlb	0	; () banked
 15338  015FDC  6F80               	movwf	LCD_write_char@value& (0+255),b
 15339                           
 15340                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 15341                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 15342  015FDE  848D               	bsf	3981,2,c	;volatile
 15343                           
 15344                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 15345  015FE0  0100               	movlb	0	; () banked
 15346  015FE2  4580               	rlncf	LCD_write_char@value& (0+255),w,b
 15347  015FE4  0B01               	andlw	1
 15348  015FE6  0100               	movlb	0	; () banked
 15349  015FE8  6F7C               	movwf	LCD_write_char@D3& (0+255),b
 15350                           
 15351                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 15352  015FEA  0100               	movlb	0	; () banked
 15353  015FEC  4580               	rlncf	LCD_write_char@value& (0+255),w,b
 15354  015FEE  46E8               	rlncf	wreg,f,c
 15355  015FF0  0B03               	andlw	3
 15356  015FF2  0B01               	andlw	1
 15357  015FF4  0100               	movlb	0	; () banked
 15358  015FF6  6F7D               	movwf	LCD_write_char@D2& (0+255),b
 15359                           
 15360                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 15361  015FF8  0100               	movlb	0	; () banked
 15362  015FFA  3980               	swapf	LCD_write_char@value& (0+255),w,b
 15363  015FFC  42E8               	rrncf	wreg,f,c
 15364  015FFE  0B07               	andlw	7
 15365  016000  0B01               	andlw	1
 15366  016002  0100               	movlb	0	; () banked
 15367  016004  6F7E               	movwf	LCD_write_char@D1& (0+255),b
 15368                           
 15369                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 15370  016006  0100               	movlb	0	; () banked
 15371  016008  3980               	swapf	LCD_write_char@value& (0+255),w,b
 15372  01600A  0B0F               	andlw	15
 15373  01600C  0B01               	andlw	1
 15374  01600E  0100               	movlb	0	; () banked
 15375  016010  6F7F               	movwf	LCD_write_char@D0& (0+255),b
 15376                           
 15377                           ; BSR set to: 0
 15378                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 15379  016012  C07D  F078         	movff	LCD_write_char@D2,LCD_send_command@D2
 15380  016016  C07E  F079         	movff	LCD_write_char@D1,LCD_send_command@D1
 15381  01601A  C07F  F07A         	movff	LCD_write_char@D0,LCD_send_command@D0
 15382  01601E  0100               	movlb	0	; () banked
 15383  016020  517C               	movf	LCD_write_char@D3& (0+255),w,b
 15384  016022  EC17  F0B2         	call	_LCD_send_command
 15385                           
 15386                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 15387  016026  0100               	movlb	0	; () banked
 15388  016028  3980               	swapf	LCD_write_char@value& (0+255),w,b
 15389  01602A  46E8               	rlncf	wreg,f,c
 15390  01602C  0B1F               	andlw	31
 15391  01602E  0B01               	andlw	1
 15392  016030  0100               	movlb	0	; () banked
 15393  016032  6F7C               	movwf	LCD_write_char@D3& (0+255),b
 15394                           
 15395                           ; BSR set to: 0
 15396                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 15397  016034  0100               	movlb	0	; () banked
 15398  016036  4180               	rrncf	LCD_write_char@value& (0+255),w,b
 15399  016038  42E8               	rrncf	wreg,f,c
 15400  01603A  0B3F               	andlw	63
 15401  01603C  0B01               	andlw	1
 15402  01603E  0100               	movlb	0	; () banked
 15403  016040  6F7D               	movwf	LCD_write_char@D2& (0+255),b
 15404                           
 15405                           ; BSR set to: 0
 15406                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 15407  016042  0100               	movlb	0	; () banked
 15408  016044  90D8               	bcf	status,0,c
 15409  016046  3180               	rrcf	LCD_write_char@value& (0+255),w,b
 15410  016048  0B01               	andlw	1
 15411  01604A  0100               	movlb	0	; () banked
 15412  01604C  6F7E               	movwf	LCD_write_char@D1& (0+255),b
 15413                           
 15414                           ; BSR set to: 0
 15415                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 15416  01604E  0100               	movlb	0	; () banked
 15417  016050  5180               	movf	LCD_write_char@value& (0+255),w,b
 15418  016052  0B01               	andlw	1
 15419  016054  0100               	movlb	0	; () banked
 15420  016056  6F7F               	movwf	LCD_write_char@D0& (0+255),b
 15421                           
 15422                           ; BSR set to: 0
 15423                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 15424  016058  C07D  F078         	movff	LCD_write_char@D2,LCD_send_command@D2
 15425  01605C  C07E  F079         	movff	LCD_write_char@D1,LCD_send_command@D1
 15426  016060  C07F  F07A         	movff	LCD_write_char@D0,LCD_send_command@D0
 15427  016064  0100               	movlb	0	; () banked
 15428  016066  517C               	movf	LCD_write_char@D3& (0+255),w,b
 15429  016068  EC17  F0B2         	call	_LCD_send_command
 15430                           
 15431                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 15432  01606C  948D               	bcf	3981,2,c	;volatile
 15433  01606E  0012               	return		;funcret
 15434  016070                     __end_of_LCD_write_char:
 15435                           	opt stack 0
 15436                           tblptru	equ	0xFF8
 15437                           tblptrh	equ	0xFF7
 15438                           tblptrl	equ	0xFF6
 15439                           tablat	equ	0xFF5
 15440                           prodh	equ	0xFF4
 15441                           prodl	equ	0xFF3
 15442                           intcon	equ	0xFF2
 15443                           postinc0	equ	0xFEE
 15444                           wreg	equ	0xFE8
 15445                           indf1	equ	0xFE7
 15446                           plusw1	equ	0xFE3
 15447                           fsr1h	equ	0xFE2
 15448                           fsr1l	equ	0xFE1
 15449                           indf2	equ	0xFDF
 15450                           postinc2	equ	0xFDE
 15451                           plusw2	equ	0xFDB
 15452                           fsr2h	equ	0xFDA
 15453                           fsr2l	equ	0xFD9
 15454                           status	equ	0xFD8
 15455                           
 15456 ;; *************** function _LCD_initialize *****************
 15457 ;; Defined at:
 15458 ;;		line 283 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15459 ;; Parameters:    Size  Location     Type
 15460 ;;  quartz_frequ    1    wreg     unsigned char 
 15461 ;; Auto vars:     Size  Location     Type
 15462 ;;  quartz_frequ    1   30[BANK0 ] unsigned char 
 15463 ;; Return value:  Size  Location     Type
 15464 ;;		None               void
 15465 ;; Registers used:
 15466 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15467 ;; Tracked objects:
 15468 ;;		On entry : 0/0
 15469 ;;		On exit  : 0/0
 15470 ;;		Unchanged: 0/0
 15471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15473 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15475 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15476 ;;Total ram usage:        1 bytes
 15477 ;; Hardware stack levels used:    1
 15478 ;; Hardware stack levels required when called:   14
 15479 ;; This function calls:
 15480 ;;		_LCD_clear
 15481 ;;		_LCD_cursor
 15482 ;;		_LCD_send_command
 15483 ;;		_delay_ms
 15484 ;;		_delay_set_quartz
 15485 ;; This function is called by:
 15486 ;;		_main
 15487 ;;		_LCD_Handler
 15488 ;;		_LCD_End
 15489 ;;		_board_initialization
 15490 ;; This function uses a non-reentrant model
 15491 ;;
 15492                           
 15493                           	psect	text37
 15494  015486                     __ptext37:
 15495                           	opt stack 0
 15496  015486                     _LCD_initialize:
 15497                           	opt stack 15
 15498                           
 15499                           ;incstack = 0
 15500                           ;LCD_initialize@quartz_frequency stored from wreg
 15501  015486  0100               	movlb	0	; () banked
 15502  015488  6F7E               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 15503                           
 15504                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 15505  01548A  0100               	movlb	0	; () banked
 15506  01548C  517E               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 15507  01548E  EC12  F0B4         	call	_delay_set_quartz
 15508                           
 15509                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 15510  015492  948D               	bcf	3981,2,c	;volatile
 15511                           
 15512                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 15513  015494  928B               	bcf	3979,1,c	;volatile
 15514                           
 15515                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 15516  015496  908B               	bcf	3979,0,c	;volatile
 15517                           
 15518                           ;src\LCD_44780.c: 291: delay_ms (100);
 15519  015498  0E00               	movlw	0
 15520  01549A  0100               	movlb	0	; () banked
 15521  01549C  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15522  01549E  0E64               	movlw	100
 15523  0154A0  6F76               	movwf	delay_ms@value_ms& (0+255),b
 15524  0154A2  EC34  F0B2         	call	_delay_ms	;wreg free
 15525                           
 15526                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 15527  0154A6  0E00               	movlw	0
 15528  0154A8  0100               	movlb	0	; () banked
 15529  0154AA  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15530  0154AC  0E01               	movlw	1
 15531  0154AE  0100               	movlb	0	; () banked
 15532  0154B0  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15533  0154B2  0E01               	movlw	1
 15534  0154B4  0100               	movlb	0	; () banked
 15535  0154B6  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15536  0154B8  0E00               	movlw	0
 15537  0154BA  EC17  F0B2         	call	_LCD_send_command
 15538                           
 15539                           ;src\LCD_44780.c: 293: delay_ms (100);
 15540  0154BE  0E00               	movlw	0
 15541  0154C0  0100               	movlb	0	; () banked
 15542  0154C2  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15543  0154C4  0E64               	movlw	100
 15544  0154C6  6F76               	movwf	delay_ms@value_ms& (0+255),b
 15545  0154C8  EC34  F0B2         	call	_delay_ms	;wreg free
 15546                           
 15547                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 15548  0154CC  0E00               	movlw	0
 15549  0154CE  0100               	movlb	0	; () banked
 15550  0154D0  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15551  0154D2  0E01               	movlw	1
 15552  0154D4  0100               	movlb	0	; () banked
 15553  0154D6  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15554  0154D8  0E01               	movlw	1
 15555  0154DA  0100               	movlb	0	; () banked
 15556  0154DC  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15557  0154DE  0E00               	movlw	0
 15558  0154E0  EC17  F0B2         	call	_LCD_send_command
 15559                           
 15560                           ;src\LCD_44780.c: 295: delay_ms (10);
 15561  0154E4  0E00               	movlw	0
 15562  0154E6  0100               	movlb	0	; () banked
 15563  0154E8  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15564  0154EA  0E0A               	movlw	10
 15565  0154EC  6F76               	movwf	delay_ms@value_ms& (0+255),b
 15566  0154EE  EC34  F0B2         	call	_delay_ms	;wreg free
 15567                           
 15568                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 15569  0154F2  0E00               	movlw	0
 15570  0154F4  0100               	movlb	0	; () banked
 15571  0154F6  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15572  0154F8  0E01               	movlw	1
 15573  0154FA  0100               	movlb	0	; () banked
 15574  0154FC  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15575  0154FE  0E01               	movlw	1
 15576  015500  0100               	movlb	0	; () banked
 15577  015502  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15578  015504  0E00               	movlw	0
 15579  015506  EC17  F0B2         	call	_LCD_send_command
 15580                           
 15581                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 15582  01550A  0E00               	movlw	0
 15583  01550C  0100               	movlb	0	; () banked
 15584  01550E  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15585  015510  0E01               	movlw	1
 15586  015512  0100               	movlb	0	; () banked
 15587  015514  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15588  015516  0E00               	movlw	0
 15589  015518  0100               	movlb	0	; () banked
 15590  01551A  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15591  01551C  0E00               	movlw	0
 15592  01551E  EC17  F0B2         	call	_LCD_send_command
 15593                           
 15594                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 15595  015522  0E00               	movlw	0
 15596  015524  0100               	movlb	0	; () banked
 15597  015526  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15598  015528  0E01               	movlw	1
 15599  01552A  0100               	movlb	0	; () banked
 15600  01552C  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15601  01552E  0E00               	movlw	0
 15602  015530  0100               	movlb	0	; () banked
 15603  015532  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15604  015534  0E00               	movlw	0
 15605  015536  EC17  F0B2         	call	_LCD_send_command
 15606                           
 15607                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 15608  01553A  0E00               	movlw	0
 15609  01553C  0100               	movlb	0	; () banked
 15610  01553E  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15611  015540  0E00               	movlw	0
 15612  015542  0100               	movlb	0	; () banked
 15613  015544  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15614  015546  0E00               	movlw	0
 15615  015548  0100               	movlb	0	; () banked
 15616  01554A  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15617  01554C  0E01               	movlw	1
 15618  01554E  EC17  F0B2         	call	_LCD_send_command
 15619                           
 15620                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 15621  015552  0E00               	movlw	0
 15622  015554  0100               	movlb	0	; () banked
 15623  015556  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15624  015558  0E00               	movlw	0
 15625  01555A  0100               	movlb	0	; () banked
 15626  01555C  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15627  01555E  0E00               	movlw	0
 15628  015560  0100               	movlb	0	; () banked
 15629  015562  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15630  015564  0E00               	movlw	0
 15631  015566  EC17  F0B2         	call	_LCD_send_command
 15632                           
 15633                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 15634  01556A  0E00               	movlw	0
 15635  01556C  0100               	movlb	0	; () banked
 15636  01556E  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15637  015570  0E00               	movlw	0
 15638  015572  0100               	movlb	0	; () banked
 15639  015574  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15640  015576  0E00               	movlw	0
 15641  015578  0100               	movlb	0	; () banked
 15642  01557A  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15643  01557C  0E01               	movlw	1
 15644  01557E  EC17  F0B2         	call	_LCD_send_command
 15645                           
 15646                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 15647  015582  0E00               	movlw	0
 15648  015584  0100               	movlb	0	; () banked
 15649  015586  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15650  015588  0E00               	movlw	0
 15651  01558A  0100               	movlb	0	; () banked
 15652  01558C  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15653  01558E  0E00               	movlw	0
 15654  015590  0100               	movlb	0	; () banked
 15655  015592  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15656  015594  0E00               	movlw	0
 15657  015596  EC17  F0B2         	call	_LCD_send_command
 15658                           
 15659                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 15660  01559A  0E00               	movlw	0
 15661  01559C  0100               	movlb	0	; () banked
 15662  01559E  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15663  0155A0  0E00               	movlw	0
 15664  0155A2  0100               	movlb	0	; () banked
 15665  0155A4  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15666  0155A6  0E01               	movlw	1
 15667  0155A8  0100               	movlb	0	; () banked
 15668  0155AA  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15669  0155AC  0E00               	movlw	0
 15670  0155AE  EC17  F0B2         	call	_LCD_send_command
 15671                           
 15672                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 15673  0155B2  0E00               	movlw	0
 15674  0155B4  0100               	movlb	0	; () banked
 15675  0155B6  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15676  0155B8  0E00               	movlw	0
 15677  0155BA  0100               	movlb	0	; () banked
 15678  0155BC  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15679  0155BE  0E00               	movlw	0
 15680  0155C0  0100               	movlb	0	; () banked
 15681  0155C2  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15682  0155C4  0E00               	movlw	0
 15683  0155C6  EC17  F0B2         	call	_LCD_send_command
 15684                           
 15685                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 15686  0155CA  0E01               	movlw	1
 15687  0155CC  0100               	movlb	0	; () banked
 15688  0155CE  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15689  0155D0  0E01               	movlw	1
 15690  0155D2  0100               	movlb	0	; () banked
 15691  0155D4  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15692  0155D6  0E00               	movlw	0
 15693  0155D8  0100               	movlb	0	; () banked
 15694  0155DA  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15695  0155DC  0E00               	movlw	0
 15696  0155DE  EC17  F0B2         	call	_LCD_send_command
 15697                           
 15698                           ;src\LCD_44780.c: 312: LCD_clear ();
 15699  0155E2  ECD7  F0B2         	call	_LCD_clear	;wreg free
 15700                           
 15701                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 15702  0155E6  0E00               	movlw	0
 15703  0155E8  0100               	movlb	0	; () banked
 15704  0155EA  6F7C               	movwf	LCD_cursor@blinking& (0+255),b
 15705  0155EC  0E00               	movlw	0
 15706  0155EE  ECBE  F0B2         	call	_LCD_cursor
 15707  0155F2  0012               	return		;funcret
 15708  0155F4                     __end_of_LCD_initialize:
 15709                           	opt stack 0
 15710                           tblptru	equ	0xFF8
 15711                           tblptrh	equ	0xFF7
 15712                           tblptrl	equ	0xFF6
 15713                           tablat	equ	0xFF5
 15714                           prodh	equ	0xFF4
 15715                           prodl	equ	0xFF3
 15716                           intcon	equ	0xFF2
 15717                           postinc0	equ	0xFEE
 15718                           wreg	equ	0xFE8
 15719                           indf1	equ	0xFE7
 15720                           plusw1	equ	0xFE3
 15721                           fsr1h	equ	0xFE2
 15722                           fsr1l	equ	0xFE1
 15723                           indf2	equ	0xFDF
 15724                           postinc2	equ	0xFDE
 15725                           plusw2	equ	0xFDB
 15726                           fsr2h	equ	0xFDA
 15727                           fsr2l	equ	0xFD9
 15728                           status	equ	0xFD8
 15729                           
 15730 ;; *************** function _delay_set_quartz *****************
 15731 ;; Defined at:
 15732 ;;		line 115 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 15733 ;; Parameters:    Size  Location     Type
 15734 ;;  frequency       1    wreg     unsigned char 
 15735 ;; Auto vars:     Size  Location     Type
 15736 ;;  frequency       1   16[BANK0 ] unsigned char 
 15737 ;; Return value:  Size  Location     Type
 15738 ;;		None               void
 15739 ;; Registers used:
 15740 ;;		wreg
 15741 ;; Tracked objects:
 15742 ;;		On entry : 0/0
 15743 ;;		On exit  : 0/0
 15744 ;;		Unchanged: 0/0
 15745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15747 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15749 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15750 ;;Total ram usage:        1 bytes
 15751 ;; Hardware stack levels used:    1
 15752 ;; Hardware stack levels required when called:    9
 15753 ;; This function calls:
 15754 ;;		Nothing
 15755 ;; This function is called by:
 15756 ;;		_LCD_initialize
 15757 ;; This function uses a non-reentrant model
 15758 ;;
 15759                           
 15760                           	psect	text38
 15761  016824                     __ptext38:
 15762                           	opt stack 0
 15763  016824                     _delay_set_quartz:
 15764                           	opt stack 19
 15765                           
 15766                           ;incstack = 0
 15767                           ;delay_set_quartz@frequency stored from wreg
 15768  016824  0100               	movlb	0	; () banked
 15769  016826  6F70               	movwf	delay_set_quartz@frequency& (0+255),b
 15770                           
 15771                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 15772  016828  C070  F0EC         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 15773  01682C  0012               	return		;funcret
 15774  01682E                     __end_of_delay_set_quartz:
 15775                           	opt stack 0
 15776                           tblptru	equ	0xFF8
 15777                           tblptrh	equ	0xFF7
 15778                           tblptrl	equ	0xFF6
 15779                           tablat	equ	0xFF5
 15780                           prodh	equ	0xFF4
 15781                           prodl	equ	0xFF3
 15782                           intcon	equ	0xFF2
 15783                           postinc0	equ	0xFEE
 15784                           wreg	equ	0xFE8
 15785                           indf1	equ	0xFE7
 15786                           plusw1	equ	0xFE3
 15787                           fsr1h	equ	0xFE2
 15788                           fsr1l	equ	0xFE1
 15789                           indf2	equ	0xFDF
 15790                           postinc2	equ	0xFDE
 15791                           plusw2	equ	0xFDB
 15792                           fsr2h	equ	0xFDA
 15793                           fsr2l	equ	0xFD9
 15794                           status	equ	0xFD8
 15795                           
 15796 ;; *************** function _LCD_cursor *****************
 15797 ;; Defined at:
 15798 ;;		line 266 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15799 ;; Parameters:    Size  Location     Type
 15800 ;;  active          1    wreg     unsigned char 
 15801 ;;  blinking        1   28[BANK0 ] unsigned char 
 15802 ;; Auto vars:     Size  Location     Type
 15803 ;;  active          1   29[BANK0 ] unsigned char 
 15804 ;; Return value:  Size  Location     Type
 15805 ;;		None               void
 15806 ;; Registers used:
 15807 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15808 ;; Tracked objects:
 15809 ;;		On entry : 0/0
 15810 ;;		On exit  : 0/0
 15811 ;;		Unchanged: 0/0
 15812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15813 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15814 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15816 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15817 ;;Total ram usage:        2 bytes
 15818 ;; Hardware stack levels used:    1
 15819 ;; Hardware stack levels required when called:   13
 15820 ;; This function calls:
 15821 ;;		_LCD_send_command
 15822 ;; This function is called by:
 15823 ;;		_LCD_initialize
 15824 ;; This function uses a non-reentrant model
 15825 ;;
 15826                           
 15827                           	psect	text39
 15828  01657C                     __ptext39:
 15829                           	opt stack 0
 15830  01657C                     _LCD_cursor:
 15831                           	opt stack 15
 15832                           
 15833                           ;incstack = 0
 15834                           ;LCD_cursor@active stored from wreg
 15835  01657C  0100               	movlb	0	; () banked
 15836  01657E  6F7D               	movwf	LCD_cursor@active& (0+255),b
 15837                           
 15838                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 15839  016580  0E00               	movlw	0
 15840  016582  0100               	movlb	0	; () banked
 15841  016584  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15842  016586  0E00               	movlw	0
 15843  016588  0100               	movlb	0	; () banked
 15844  01658A  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15845  01658C  0E00               	movlw	0
 15846  01658E  0100               	movlb	0	; () banked
 15847  016590  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15848  016592  0E00               	movlw	0
 15849  016594  EC17  F0B2         	call	_LCD_send_command
 15850                           
 15851                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 15852  016598  0E01               	movlw	1
 15853  01659A  0100               	movlb	0	; () banked
 15854  01659C  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15855  01659E  C07D  F079         	movff	LCD_cursor@active,LCD_send_command@D1
 15856  0165A2  C07C  F07A         	movff	LCD_cursor@blinking,LCD_send_command@D0
 15857  0165A6  0E01               	movlw	1
 15858  0165A8  EC17  F0B2         	call	_LCD_send_command
 15859  0165AC  0012               	return		;funcret
 15860  0165AE                     __end_of_LCD_cursor:
 15861                           	opt stack 0
 15862                           tblptru	equ	0xFF8
 15863                           tblptrh	equ	0xFF7
 15864                           tblptrl	equ	0xFF6
 15865                           tablat	equ	0xFF5
 15866                           prodh	equ	0xFF4
 15867                           prodl	equ	0xFF3
 15868                           intcon	equ	0xFF2
 15869                           postinc0	equ	0xFEE
 15870                           wreg	equ	0xFE8
 15871                           indf1	equ	0xFE7
 15872                           plusw1	equ	0xFE3
 15873                           fsr1h	equ	0xFE2
 15874                           fsr1l	equ	0xFE1
 15875                           indf2	equ	0xFDF
 15876                           postinc2	equ	0xFDE
 15877                           plusw2	equ	0xFDB
 15878                           fsr2h	equ	0xFDA
 15879                           fsr2l	equ	0xFD9
 15880                           status	equ	0xFD8
 15881                           
 15882 ;; *************** function _LCD_clear *****************
 15883 ;; Defined at:
 15884 ;;		line 257 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15885 ;; Parameters:    Size  Location     Type
 15886 ;;		None
 15887 ;; Auto vars:     Size  Location     Type
 15888 ;;		None
 15889 ;; Return value:  Size  Location     Type
 15890 ;;		None               void
 15891 ;; Registers used:
 15892 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15893 ;; Tracked objects:
 15894 ;;		On entry : 0/0
 15895 ;;		On exit  : 0/0
 15896 ;;		Unchanged: 0/0
 15897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15902 ;;Total ram usage:        0 bytes
 15903 ;; Hardware stack levels used:    1
 15904 ;; Hardware stack levels required when called:   13
 15905 ;; This function calls:
 15906 ;;		_LCD_send_command
 15907 ;; This function is called by:
 15908 ;;		_LCD_initialize
 15909 ;;		_LCD_Handler
 15910 ;;		_board_initialization
 15911 ;; This function uses a non-reentrant model
 15912 ;;
 15913                           
 15914                           	psect	text40
 15915  0165AE                     __ptext40:
 15916                           	opt stack 0
 15917  0165AE                     _LCD_clear:
 15918                           	opt stack 15
 15919                           
 15920                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 15921                           
 15922                           ;incstack = 0
 15923  0165AE  0E00               	movlw	0
 15924  0165B0  0100               	movlb	0	; () banked
 15925  0165B2  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15926  0165B4  0E00               	movlw	0
 15927  0165B6  0100               	movlb	0	; () banked
 15928  0165B8  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15929  0165BA  0E00               	movlw	0
 15930  0165BC  0100               	movlb	0	; () banked
 15931  0165BE  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15932  0165C0  0E00               	movlw	0
 15933  0165C2  EC17  F0B2         	call	_LCD_send_command
 15934                           
 15935                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 15936  0165C6  0E00               	movlw	0
 15937  0165C8  0100               	movlb	0	; () banked
 15938  0165CA  6F78               	movwf	LCD_send_command@D2& (0+255),b
 15939  0165CC  0E00               	movlw	0
 15940  0165CE  0100               	movlb	0	; () banked
 15941  0165D0  6F79               	movwf	LCD_send_command@D1& (0+255),b
 15942  0165D2  0E01               	movlw	1
 15943  0165D4  0100               	movlb	0	; () banked
 15944  0165D6  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 15945  0165D8  0E00               	movlw	0
 15946  0165DA  EC17  F0B2         	call	_LCD_send_command
 15947  0165DE  0012               	return		;funcret
 15948  0165E0                     __end_of_LCD_clear:
 15949                           	opt stack 0
 15950                           tblptru	equ	0xFF8
 15951                           tblptrh	equ	0xFF7
 15952                           tblptrl	equ	0xFF6
 15953                           tablat	equ	0xFF5
 15954                           prodh	equ	0xFF4
 15955                           prodl	equ	0xFF3
 15956                           intcon	equ	0xFF2
 15957                           postinc0	equ	0xFEE
 15958                           wreg	equ	0xFE8
 15959                           indf1	equ	0xFE7
 15960                           plusw1	equ	0xFE3
 15961                           fsr1h	equ	0xFE2
 15962                           fsr1l	equ	0xFE1
 15963                           indf2	equ	0xFDF
 15964                           postinc2	equ	0xFDE
 15965                           plusw2	equ	0xFDB
 15966                           fsr2h	equ	0xFDA
 15967                           fsr2l	equ	0xFD9
 15968                           status	equ	0xFD8
 15969                           
 15970 ;; *************** function _LCD_goto_line *****************
 15971 ;; Defined at:
 15972 ;;		line 111 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15973 ;; Parameters:    Size  Location     Type
 15974 ;;  line            1    wreg     unsigned char 
 15975 ;; Auto vars:     Size  Location     Type
 15976 ;;  line            1   28[BANK0 ] unsigned char 
 15977 ;; Return value:  Size  Location     Type
 15978 ;;		None               void
 15979 ;; Registers used:
 15980 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15981 ;; Tracked objects:
 15982 ;;		On entry : 0/0
 15983 ;;		On exit  : 0/0
 15984 ;;		Unchanged: 0/0
 15985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15987 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15989 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15990 ;;Total ram usage:        1 bytes
 15991 ;; Hardware stack levels used:    1
 15992 ;; Hardware stack levels required when called:   13
 15993 ;; This function calls:
 15994 ;;		_LCD_send_command
 15995 ;; This function is called by:
 15996 ;;		_LCD_goto_xy
 15997 ;;		_main
 15998 ;;		_LCD_Handler
 15999 ;;		_LCD_End
 16000 ;;		_board_initialization
 16001 ;; This function uses a non-reentrant model
 16002 ;;
 16003                           
 16004                           	psect	text41
 16005  01581A                     __ptext41:
 16006                           	opt stack 0
 16007  01581A                     _LCD_goto_line:
 16008                           	opt stack 16
 16009                           
 16010                           ;incstack = 0
 16011                           ;LCD_goto_line@line stored from wreg
 16012  01581A  0100               	movlb	0	; () banked
 16013  01581C  6F7C               	movwf	LCD_goto_line@line& (0+255),b
 16014                           
 16015                           ;src\LCD_44780.c: 113: switch(line) {
 16016  01581E  D064               	goto	l8496
 16017  015820                     l8488:
 16018  015820  0E00               	movlw	0
 16019  015822  0100               	movlb	0	; () banked
 16020  015824  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16021  015826  0E00               	movlw	0
 16022  015828  0100               	movlb	0	; () banked
 16023  01582A  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16024  01582C  0E00               	movlw	0
 16025  01582E  0100               	movlb	0	; () banked
 16026  015830  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16027  015832  0E01               	movlw	1
 16028  015834  EC17  F0B2         	call	_LCD_send_command
 16029                           
 16030                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 16031  015838  0E00               	movlw	0
 16032  01583A  0100               	movlb	0	; () banked
 16033  01583C  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16034  01583E  0E00               	movlw	0
 16035  015840  0100               	movlb	0	; () banked
 16036  015842  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16037  015844  0E00               	movlw	0
 16038  015846  0100               	movlb	0	; () banked
 16039  015848  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16040  01584A  0E00               	movlw	0
 16041  01584C  EC17  F0B2         	call	_LCD_send_command
 16042                           
 16043                           ;src\LCD_44780.c: 117: break;
 16044  015850  0012               	return	
 16045  015852                     l8490:
 16046  015852  0E01               	movlw	1
 16047  015854  0100               	movlb	0	; () banked
 16048  015856  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16049  015858  0E00               	movlw	0
 16050  01585A  0100               	movlb	0	; () banked
 16051  01585C  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16052  01585E  0E00               	movlw	0
 16053  015860  0100               	movlb	0	; () banked
 16054  015862  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16055  015864  0E01               	movlw	1
 16056  015866  EC17  F0B2         	call	_LCD_send_command
 16057                           
 16058                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 16059  01586A  0E00               	movlw	0
 16060  01586C  0100               	movlb	0	; () banked
 16061  01586E  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16062  015870  0E00               	movlw	0
 16063  015872  0100               	movlb	0	; () banked
 16064  015874  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16065  015876  0E00               	movlw	0
 16066  015878  0100               	movlb	0	; () banked
 16067  01587A  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16068  01587C  0E00               	movlw	0
 16069  01587E  EC17  F0B2         	call	_LCD_send_command
 16070                           
 16071                           ;src\LCD_44780.c: 121: break;
 16072  015882  0012               	return	
 16073  015884                     l8492:
 16074  015884  0E00               	movlw	0
 16075  015886  0100               	movlb	0	; () banked
 16076  015888  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16077  01588A  0E00               	movlw	0
 16078  01588C  0100               	movlb	0	; () banked
 16079  01588E  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16080  015890  0E01               	movlw	1
 16081  015892  0100               	movlb	0	; () banked
 16082  015894  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16083  015896  0E01               	movlw	1
 16084  015898  EC17  F0B2         	call	_LCD_send_command
 16085                           
 16086                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 16087  01589C  0E01               	movlw	1
 16088  01589E  0100               	movlb	0	; () banked
 16089  0158A0  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16090  0158A2  0E00               	movlw	0
 16091  0158A4  0100               	movlb	0	; () banked
 16092  0158A6  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16093  0158A8  0E00               	movlw	0
 16094  0158AA  0100               	movlb	0	; () banked
 16095  0158AC  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16096  0158AE  0E00               	movlw	0
 16097  0158B0  EC17  F0B2         	call	_LCD_send_command
 16098                           
 16099                           ;src\LCD_44780.c: 125: break;
 16100  0158B4  0012               	return	
 16101  0158B6                     l8494:
 16102  0158B6  0E01               	movlw	1
 16103  0158B8  0100               	movlb	0	; () banked
 16104  0158BA  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16105  0158BC  0E00               	movlw	0
 16106  0158BE  0100               	movlb	0	; () banked
 16107  0158C0  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16108  0158C2  0E01               	movlw	1
 16109  0158C4  0100               	movlb	0	; () banked
 16110  0158C6  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16111  0158C8  0E01               	movlw	1
 16112  0158CA  EC17  F0B2         	call	_LCD_send_command
 16113                           
 16114                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 16115  0158CE  0E01               	movlw	1
 16116  0158D0  0100               	movlb	0	; () banked
 16117  0158D2  6F78               	movwf	LCD_send_command@D2& (0+255),b
 16118  0158D4  0E00               	movlw	0
 16119  0158D6  0100               	movlb	0	; () banked
 16120  0158D8  6F79               	movwf	LCD_send_command@D1& (0+255),b
 16121  0158DA  0E00               	movlw	0
 16122  0158DC  0100               	movlb	0	; () banked
 16123  0158DE  6F7A               	movwf	LCD_send_command@D0& (0+255),b
 16124  0158E0  0E00               	movlw	0
 16125  0158E2  EC17  F0B2         	call	_LCD_send_command
 16126                           
 16127                           ;src\LCD_44780.c: 129: }
 16128  0158E6  0012               	return	
 16129  0158E8                     l8496:
 16130  0158E8  0100               	movlb	0	; () banked
 16131  0158EA  517C               	movf	LCD_goto_line@line& (0+255),w,b
 16132                           
 16133                           ; Switch size 1, requested type "space"
 16134                           ; Number of cases is 4, Range of values is 1 to 4
 16135                           ; switch strategies available:
 16136                           ; Name         Instructions Cycles
 16137                           ; simple_byte           13     7 (average)
 16138                           ;	Chosen strategy is simple_byte
 16139  0158EC  0A01               	xorlw	1	; case 1
 16140  0158EE  B4D8               	btfsc	status,2,c
 16141  0158F0  D797               	goto	l8488
 16142  0158F2  0A03               	xorlw	3	; case 2
 16143  0158F4  B4D8               	btfsc	status,2,c
 16144  0158F6  D7AD               	goto	l8490
 16145  0158F8  0A01               	xorlw	1	; case 3
 16146  0158FA  B4D8               	btfsc	status,2,c
 16147  0158FC  D7C3               	goto	l8492
 16148  0158FE  0A07               	xorlw	7	; case 4
 16149  015900  A4D8               	btfss	status,2,c
 16150  015902  0012               	return	
 16151  015904  D7D8               	goto	l8494
 16152  015906                     __end_of_LCD_goto_line:
 16153                           	opt stack 0
 16154                           tblptru	equ	0xFF8
 16155                           tblptrh	equ	0xFF7
 16156                           tblptrl	equ	0xFF6
 16157                           tablat	equ	0xFF5
 16158                           prodh	equ	0xFF4
 16159                           prodl	equ	0xFF3
 16160                           intcon	equ	0xFF2
 16161                           postinc0	equ	0xFEE
 16162                           wreg	equ	0xFE8
 16163                           indf1	equ	0xFE7
 16164                           plusw1	equ	0xFE3
 16165                           fsr1h	equ	0xFE2
 16166                           fsr1l	equ	0xFE1
 16167                           indf2	equ	0xFDF
 16168                           postinc2	equ	0xFDE
 16169                           plusw2	equ	0xFDB
 16170                           fsr2h	equ	0xFDA
 16171                           fsr2l	equ	0xFD9
 16172                           status	equ	0xFD8
 16173                           
 16174 ;; *************** function _LCD_send_command *****************
 16175 ;; Defined at:
 16176 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16177 ;; Parameters:    Size  Location     Type
 16178 ;;  D3              1    wreg     unsigned char 
 16179 ;;  D2              1   24[BANK0 ] unsigned char 
 16180 ;;  D1              1   25[BANK0 ] unsigned char 
 16181 ;;  D0              1   26[BANK0 ] unsigned char 
 16182 ;; Auto vars:     Size  Location     Type
 16183 ;;  D3              1   27[BANK0 ] unsigned char 
 16184 ;; Return value:  Size  Location     Type
 16185 ;;		None               void
 16186 ;; Registers used:
 16187 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16188 ;; Tracked objects:
 16189 ;;		On entry : 0/0
 16190 ;;		On exit  : 0/0
 16191 ;;		Unchanged: 0/0
 16192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16193 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16194 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16196 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16197 ;;Total ram usage:        4 bytes
 16198 ;; Hardware stack levels used:    1
 16199 ;; Hardware stack levels required when called:   12
 16200 ;; This function calls:
 16201 ;;		_LCD_enable_pulse
 16202 ;; This function is called by:
 16203 ;;		_LCD_shift_cursor
 16204 ;;		_LCD_goto_line
 16205 ;;		_LCD_write_char
 16206 ;;		_LCD_clear
 16207 ;;		_LCD_cursor
 16208 ;;		_LCD_initialize
 16209 ;;		_LCD_home
 16210 ;;		_LCD_shift
 16211 ;; This function uses a non-reentrant model
 16212 ;;
 16213                           
 16214                           	psect	text42
 16215  01642E                     __ptext42:
 16216                           	opt stack 0
 16217  01642E                     _LCD_send_command:
 16218                           	opt stack 16
 16219                           
 16220                           ;incstack = 0
 16221                           ;LCD_send_command@D3 stored from wreg
 16222  01642E  0100               	movlb	0	; () banked
 16223  016430  6F7B               	movwf	LCD_send_command@D3& (0+255),b
 16224                           
 16225                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 16226  016432  0100               	movlb	0	; () banked
 16227  016434  B17A               	btfsc	LCD_send_command@D0& (0+255),0,b
 16228  016436  D002               	bra	u10335
 16229  016438  948B               	bcf	3979,2,c	;volatile
 16230  01643A  D001               	bra	u10336
 16231  01643C                     u10335:
 16232  01643C  848B               	bsf	3979,2,c	;volatile
 16233  01643E                     u10336:
 16234                           
 16235                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 16236  01643E  0100               	movlb	0	; () banked
 16237  016440  B179               	btfsc	LCD_send_command@D1& (0+255),0,b
 16238  016442  D002               	bra	u10345
 16239  016444  968B               	bcf	3979,3,c	;volatile
 16240  016446  D001               	bra	u10346
 16241  016448                     u10345:
 16242  016448  868B               	bsf	3979,3,c	;volatile
 16243  01644A                     u10346:
 16244                           
 16245                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 16246  01644A  0100               	movlb	0	; () banked
 16247  01644C  B178               	btfsc	LCD_send_command@D2& (0+255),0,b
 16248  01644E  D002               	bra	u10355
 16249  016450  908C               	bcf	3980,0,c	;volatile
 16250  016452  D001               	bra	u10356
 16251  016454                     u10355:
 16252  016454  808C               	bsf	3980,0,c	;volatile
 16253  016456                     u10356:
 16254                           
 16255                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 16256  016456  0100               	movlb	0	; () banked
 16257  016458  B17B               	btfsc	LCD_send_command@D3& (0+255),0,b
 16258  01645A  D002               	bra	u10365
 16259  01645C  928C               	bcf	3980,1,c	;volatile
 16260  01645E  D001               	bra	u10366
 16261  016460                     u10365:
 16262  016460  828C               	bsf	3980,1,c	;volatile
 16263  016462                     u10366:
 16264                           
 16265                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 16266  016462  EC95  F0B3         	call	_LCD_enable_pulse	;wreg free
 16267  016466  0012               	return		;funcret
 16268  016468                     __end_of_LCD_send_command:
 16269                           	opt stack 0
 16270                           tblptru	equ	0xFF8
 16271                           tblptrh	equ	0xFF7
 16272                           tblptrl	equ	0xFF6
 16273                           tablat	equ	0xFF5
 16274                           prodh	equ	0xFF4
 16275                           prodl	equ	0xFF3
 16276                           intcon	equ	0xFF2
 16277                           postinc0	equ	0xFEE
 16278                           wreg	equ	0xFE8
 16279                           indf1	equ	0xFE7
 16280                           plusw1	equ	0xFE3
 16281                           fsr1h	equ	0xFE2
 16282                           fsr1l	equ	0xFE1
 16283                           indf2	equ	0xFDF
 16284                           postinc2	equ	0xFDE
 16285                           plusw2	equ	0xFDB
 16286                           fsr2h	equ	0xFDA
 16287                           fsr2l	equ	0xFD9
 16288                           status	equ	0xFD8
 16289                           
 16290 ;; *************** function _LCD_enable_pulse *****************
 16291 ;; Defined at:
 16292 ;;		line 49 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16293 ;; Parameters:    Size  Location     Type
 16294 ;;		None
 16295 ;; Auto vars:     Size  Location     Type
 16296 ;;		None
 16297 ;; Return value:  Size  Location     Type
 16298 ;;		None               void
 16299 ;; Registers used:
 16300 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16301 ;; Tracked objects:
 16302 ;;		On entry : 0/0
 16303 ;;		On exit  : 0/0
 16304 ;;		Unchanged: 0/0
 16305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16310 ;;Total ram usage:        0 bytes
 16311 ;; Hardware stack levels used:    1
 16312 ;; Hardware stack levels required when called:   11
 16313 ;; This function calls:
 16314 ;;		_delay_ms
 16315 ;; This function is called by:
 16316 ;;		_LCD_send_command
 16317 ;; This function uses a non-reentrant model
 16318 ;;
 16319                           
 16320                           	psect	text43
 16321  01672A                     __ptext43:
 16322                           	opt stack 0
 16323  01672A                     _LCD_enable_pulse:
 16324                           	opt stack 16
 16325                           
 16326                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 16327                           
 16328                           ;incstack = 0
 16329  01672A  828B               	bsf	3979,1,c	;volatile
 16330                           
 16331                           ;src\LCD_44780.c: 52: delay_ms (1);
 16332  01672C  0E00               	movlw	0
 16333  01672E  0100               	movlb	0	; () banked
 16334  016730  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16335  016732  0E01               	movlw	1
 16336  016734  6F76               	movwf	delay_ms@value_ms& (0+255),b
 16337  016736  EC34  F0B2         	call	_delay_ms	;wreg free
 16338                           
 16339                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 16340  01673A  928B               	bcf	3979,1,c	;volatile
 16341                           
 16342                           ;src\LCD_44780.c: 54: delay_ms (1);
 16343  01673C  0E00               	movlw	0
 16344  01673E  0100               	movlb	0	; () banked
 16345  016740  6F77               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16346  016742  0E01               	movlw	1
 16347  016744  6F76               	movwf	delay_ms@value_ms& (0+255),b
 16348  016746  EC34  F0B2         	call	_delay_ms	;wreg free
 16349  01674A  0012               	return		;funcret
 16350  01674C                     __end_of_LCD_enable_pulse:
 16351                           	opt stack 0
 16352                           tblptru	equ	0xFF8
 16353                           tblptrh	equ	0xFF7
 16354                           tblptrl	equ	0xFF6
 16355                           tablat	equ	0xFF5
 16356                           prodh	equ	0xFF4
 16357                           prodl	equ	0xFF3
 16358                           intcon	equ	0xFF2
 16359                           postinc0	equ	0xFEE
 16360                           wreg	equ	0xFE8
 16361                           indf1	equ	0xFE7
 16362                           plusw1	equ	0xFE3
 16363                           fsr1h	equ	0xFE2
 16364                           fsr1l	equ	0xFE1
 16365                           indf2	equ	0xFDF
 16366                           postinc2	equ	0xFDE
 16367                           plusw2	equ	0xFDB
 16368                           fsr2h	equ	0xFDA
 16369                           fsr2l	equ	0xFD9
 16370                           status	equ	0xFD8
 16371                           
 16372 ;; *************** function _delay_ms *****************
 16373 ;; Defined at:
 16374 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 16375 ;; Parameters:    Size  Location     Type
 16376 ;;  value_ms        2   22[BANK0 ] unsigned int 
 16377 ;; Auto vars:     Size  Location     Type
 16378 ;;		None
 16379 ;; Return value:  Size  Location     Type
 16380 ;;		None               void
 16381 ;; Registers used:
 16382 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16383 ;; Tracked objects:
 16384 ;;		On entry : 0/0
 16385 ;;		On exit  : 0/0
 16386 ;;		Unchanged: 0/0
 16387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16388 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16391 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16392 ;;Total ram usage:        2 bytes
 16393 ;; Hardware stack levels used:    1
 16394 ;; Hardware stack levels required when called:   10
 16395 ;; This function calls:
 16396 ;;		___wmul
 16397 ;; This function is called by:
 16398 ;;		_LCD_enable_pulse
 16399 ;;		_LCD_initialize
 16400 ;;		_main
 16401 ;;		_delay_s
 16402 ;; This function uses a non-reentrant model
 16403 ;;
 16404                           
 16405                           	psect	text44
 16406  016468                     __ptext44:
 16407                           	opt stack 0
 16408  016468                     _delay_ms:
 16409                           	opt stack 20
 16410                           
 16411                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 16412                           
 16413                           ;incstack = 0
 16414  016468  C0EC  F070         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 16415  01646C  0100               	movlb	0	; () banked
 16416  01646E  6B71               	clrf	(___wmul@multiplier+1)& (0+255),b
 16417  016470  C076  F072         	movff	delay_ms@value_ms,___wmul@multiplicand
 16418  016474  C077  F073         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 16419  016478  EC89  F0B2         	call	___wmul	;wreg free
 16420  01647C  C070  F0E0         	movff	?___wmul,_clock_counter_reference	;volatile
 16421  016480  C071  F0E1         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 16422                           
 16423                           ;src\delay.c: 75: while (clock_counter_reference) {
 16424  016484  D007               	goto	l587
 16425  016486                     l8032:
 16426                           
 16427                           ;src\delay.c: 85: _delay(240);
 16428  016486  0E50               	movlw	80
 16429  016488                     u12657:
 16430  016488  2EE8               	decfsz	wreg,f,c
 16431  01648A  D7FE               	goto	u12657
 16432                           
 16433                           ;src\delay.c: 88: clock_counter_reference--;
 16434  01648C  0100               	movlb	0	; () banked
 16435  01648E  07E0               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 16436  016490  A0D8               	btfss	status,0,c
 16437  016492  07E1               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 16438  016494                     l587:
 16439  016494  0100               	movlb	0	; () banked
 16440  016496  51E0               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 16441  016498  0100               	movlb	0	; () banked
 16442  01649A  11E1               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 16443  01649C  B4D8               	btfsc	status,2,c
 16444  01649E  0012               	return	
 16445  0164A0  D7F2               	goto	l8032
 16446  0164A2                     __end_of_delay_ms:
 16447                           	opt stack 0
 16448                           tblptru	equ	0xFF8
 16449                           tblptrh	equ	0xFF7
 16450                           tblptrl	equ	0xFF6
 16451                           tablat	equ	0xFF5
 16452                           prodh	equ	0xFF4
 16453                           prodl	equ	0xFF3
 16454                           intcon	equ	0xFF2
 16455                           postinc0	equ	0xFEE
 16456                           wreg	equ	0xFE8
 16457                           indf1	equ	0xFE7
 16458                           plusw1	equ	0xFE3
 16459                           fsr1h	equ	0xFE2
 16460                           fsr1l	equ	0xFE1
 16461                           indf2	equ	0xFDF
 16462                           postinc2	equ	0xFDE
 16463                           plusw2	equ	0xFDB
 16464                           fsr2h	equ	0xFDA
 16465                           fsr2l	equ	0xFD9
 16466                           status	equ	0xFD8
 16467                           
 16468 ;; *************** function ___wmul *****************
 16469 ;; Defined at:
 16470 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 16471 ;; Parameters:    Size  Location     Type
 16472 ;;  multiplier      2   16[BANK0 ] unsigned int 
 16473 ;;  multiplicand    2   18[BANK0 ] unsigned int 
 16474 ;; Auto vars:     Size  Location     Type
 16475 ;;  product         2   20[BANK0 ] unsigned int 
 16476 ;; Return value:  Size  Location     Type
 16477 ;;                  2   16[BANK0 ] unsigned int 
 16478 ;; Registers used:
 16479 ;;		wreg, status,2, status,0, prodl, prodh
 16480 ;; Tracked objects:
 16481 ;;		On entry : 0/0
 16482 ;;		On exit  : 0/0
 16483 ;;		Unchanged: 0/0
 16484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16485 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16486 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16488 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16489 ;;Total ram usage:        6 bytes
 16490 ;; Hardware stack levels used:    1
 16491 ;; Hardware stack levels required when called:    9
 16492 ;; This function calls:
 16493 ;;		Nothing
 16494 ;; This function is called by:
 16495 ;;		_delay_ms
 16496 ;;		_sprintf
 16497 ;; This function uses a non-reentrant model
 16498 ;;
 16499                           
 16500                           	psect	text45
 16501  016512                     __ptext45:
 16502                           	opt stack 0
 16503  016512                     ___wmul:
 16504                           	opt stack 20
 16505                           
 16506                           ; BSR set to: 0
 16507                           ;incstack = 0
 16508  016512  0100               	movlb	0	; () banked
 16509  016514  5170               	movf	___wmul@multiplier& (0+255),w,b
 16510  016516  0100               	movlb	0	; () banked
 16511  016518  0372               	mulwf	___wmul@multiplicand& (0+255),b
 16512  01651A  CFF3 F074          	movff	prodl,___wmul@product
 16513  01651E  CFF4 F075          	movff	prodh,___wmul@product+1
 16514  016522  0100               	movlb	0	; () banked
 16515  016524  5170               	movf	___wmul@multiplier& (0+255),w,b
 16516  016526  0100               	movlb	0	; () banked
 16517  016528  0373               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 16518  01652A  50F3               	movf	prodl,w,c
 16519  01652C  0100               	movlb	0	; () banked
 16520  01652E  2775               	addwf	(___wmul@product+1)& (0+255),f,b
 16521  016530  0100               	movlb	0	; () banked
 16522  016532  5171               	movf	(___wmul@multiplier+1)& (0+255),w,b
 16523  016534  0100               	movlb	0	; () banked
 16524  016536  0372               	mulwf	___wmul@multiplicand& (0+255),b
 16525  016538  50F3               	movf	prodl,w,c
 16526  01653A  0100               	movlb	0	; () banked
 16527  01653C  2775               	addwf	(___wmul@product+1)& (0+255),f,b
 16528                           
 16529                           ; BSR set to: 0
 16530  01653E  C074  F070         	movff	___wmul@product,?___wmul
 16531  016542  C075  F071         	movff	___wmul@product+1,?___wmul+1
 16532  016546  0012               	return	
 16533  016548                     __end_of___wmul:
 16534                           	opt stack 0
 16535                           tblptru	equ	0xFF8
 16536                           tblptrh	equ	0xFF7
 16537                           tblptrl	equ	0xFF6
 16538                           tablat	equ	0xFF5
 16539                           prodh	equ	0xFF4
 16540                           prodl	equ	0xFF3
 16541                           intcon	equ	0xFF2
 16542                           postinc0	equ	0xFEE
 16543                           wreg	equ	0xFE8
 16544                           indf1	equ	0xFE7
 16545                           plusw1	equ	0xFE3
 16546                           fsr1h	equ	0xFE2
 16547                           fsr1l	equ	0xFE1
 16548                           indf2	equ	0xFDF
 16549                           postinc2	equ	0xFDE
 16550                           plusw2	equ	0xFDB
 16551                           fsr2h	equ	0xFDA
 16552                           fsr2l	equ	0xFD9
 16553                           status	equ	0xFD8
 16554                           
 16555 ;; *************** function _Joystick_Polling *****************
 16556 ;; Defined at:
 16557 ;;		line 505 in file "RemoteCan.c"
 16558 ;; Parameters:    Size  Location     Type
 16559 ;;		None
 16560 ;; Auto vars:     Size  Location     Type
 16561 ;;  i               1   17[BANK0 ] unsigned char 
 16562 ;; Return value:  Size  Location     Type
 16563 ;;		None               void
 16564 ;; Registers used:
 16565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16566 ;; Tracked objects:
 16567 ;;		On entry : 0/0
 16568 ;;		On exit  : 0/0
 16569 ;;		Unchanged: 0/0
 16570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16572 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16573 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16574 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16575 ;;Total ram usage:        2 bytes
 16576 ;; Hardware stack levels used:    1
 16577 ;; Hardware stack levels required when called:    9
 16578 ;; This function calls:
 16579 ;;		Nothing
 16580 ;; This function is called by:
 16581 ;;		_main
 16582 ;; This function uses a non-reentrant model
 16583 ;;
 16584                           
 16585                           	psect	text46
 16586  01621A                     __ptext46:
 16587                           	opt stack 0
 16588  01621A                     _Joystick_Polling:
 16589                           	opt stack 21
 16590                           
 16591                           ;RemoteCan.c: 506: for (unsigned char i = 0; i < 2; i++) {
 16592                           
 16593                           ; BSR set to: 0
 16594                           ;incstack = 0
 16595  01621A  0E00               	movlw	0
 16596  01621C  0100               	movlb	0	; () banked
 16597  01621E  6F71               	movwf	Joystick_Polling@i& (0+255),b
 16598  016220                     l7564:
 16599                           
 16600                           ; BSR set to: 0
 16601  016220  0E01               	movlw	1
 16602  016222  0100               	movlb	0	; () banked
 16603  016224  6571               	cpfsgt	Joystick_Polling@i& (0+255),b
 16604  016226  D001               	goto	l897
 16605  016228  0012               	return	
 16606  01622A                     l897:
 16607                           
 16608                           ; BSR set to: 0
 16609                           ;RemoteCan.c: 507: ADCON0bits.GO = 1;
 16610  01622A  82C2               	bsf	4034,1,c	;volatile
 16611  01622C                     l899:
 16612  01622C  B2C2               	btfsc	4034,1,c	;volatile
 16613  01622E  D7FE               	goto	l899
 16614                           
 16615                           ;RemoteCan.c: 509: JoystickValues[i] = ADRESH;
 16616  016230  0100               	movlb	0	; () banked
 16617  016232  5171               	movf	Joystick_Polling@i& (0+255),w,b
 16618  016234  0D01               	mullw	1
 16619  016236  0EDC               	movlw	low _JoystickValues
 16620  016238  24F3               	addwf	prodl,w,c
 16621  01623A  6ED9               	movwf	fsr2l,c
 16622  01623C  0E00               	movlw	high _JoystickValues
 16623  01623E  20F4               	addwfc	prodh,w,c
 16624  016240  6EDA               	movwf	fsr2h,c
 16625  016242  CFC4 FFDF          	movff	4036,indf2	;volatile
 16626                           
 16627                           ; BSR set to: 0
 16628                           ;RemoteCan.c: 510: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 16629  016246  A4C2               	btfss	4034,2,c	;volatile
 16630  016248  D002               	goto	u9580
 16631  01624A  0E01               	movlw	1
 16632  01624C  D001               	goto	u9586
 16633  01624E                     u9580:
 16634  01624E  0E00               	movlw	0
 16635  016250                     u9586:
 16636  016250  0AFF               	xorlw	255
 16637  016252  0100               	movlb	0	; () banked
 16638  016254  6F70               	movwf	??_Joystick_Polling& (0+255),b
 16639  016256  0100               	movlb	0	; () banked
 16640  016258  4770               	rlncf	??_Joystick_Polling& (0+255),f,b
 16641  01625A  4770               	rlncf	??_Joystick_Polling& (0+255),f,b
 16642  01625C  50C2               	movf	4034,w,c	;volatile
 16643  01625E  0100               	movlb	0	; () banked
 16644  016260  1970               	xorwf	??_Joystick_Polling& (0+255),w,b
 16645  016262  0BFB               	andlw	-5
 16646  016264  1970               	xorwf	??_Joystick_Polling& (0+255),w,b
 16647  016266  6EC2               	movwf	4034,c	;volatile
 16648                           
 16649                           ; BSR set to: 0
 16650  016268  0100               	movlb	0	; () banked
 16651  01626A  2B71               	incf	Joystick_Polling@i& (0+255),f,b
 16652  01626C  D7D9               	goto	l7564
 16653  01626E                     __end_of_Joystick_Polling:
 16654                           	opt stack 0
 16655                           tblptru	equ	0xFF8
 16656                           tblptrh	equ	0xFF7
 16657                           tblptrl	equ	0xFF6
 16658                           tablat	equ	0xFF5
 16659                           prodh	equ	0xFF4
 16660                           prodl	equ	0xFF3
 16661                           intcon	equ	0xFF2
 16662                           postinc0	equ	0xFEE
 16663                           wreg	equ	0xFE8
 16664                           indf1	equ	0xFE7
 16665                           plusw1	equ	0xFE3
 16666                           fsr1h	equ	0xFE2
 16667                           fsr1l	equ	0xFE1
 16668                           indf2	equ	0xFDF
 16669                           postinc2	equ	0xFDE
 16670                           plusw2	equ	0xFDB
 16671                           fsr2h	equ	0xFDA
 16672                           fsr2l	equ	0xFD9
 16673                           status	equ	0xFD8
 16674                           
 16675 ;; *************** function _F2_Button_Polling *****************
 16676 ;; Defined at:
 16677 ;;		line 495 in file "RemoteCan.c"
 16678 ;; Parameters:    Size  Location     Type
 16679 ;;		None
 16680 ;; Auto vars:     Size  Location     Type
 16681 ;;		None
 16682 ;; Return value:  Size  Location     Type
 16683 ;;		None               void
 16684 ;; Registers used:
 16685 ;;		None
 16686 ;; Tracked objects:
 16687 ;;		On entry : 0/0
 16688 ;;		On exit  : 0/0
 16689 ;;		Unchanged: 0/0
 16690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16695 ;;Total ram usage:        0 bytes
 16696 ;; Hardware stack levels used:    1
 16697 ;; Hardware stack levels required when called:    9
 16698 ;; This function calls:
 16699 ;;		Nothing
 16700 ;; This function is called by:
 16701 ;;		_main
 16702 ;; This function uses a non-reentrant model
 16703 ;;
 16704                           
 16705                           	psect	text47
 16706  0167C0                     __ptext47:
 16707                           	opt stack 0
 16708  0167C0                     _F2_Button_Polling:
 16709                           	opt stack 21
 16710                           
 16711                           ;RemoteCan.c: 496: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 16712                           
 16713                           ; BSR set to: 0
 16714                           ;incstack = 0
 16715  0167C0  A281               	btfss	3969,1,c	;volatile
 16716  0167C2  D002               	goto	l892
 16717  0167C4  BC4D               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16718  0167C6  0012               	return	
 16719  0167C8                     l892:
 16720                           
 16721                           ;RemoteCan.c: 497: wait_low_3 = 0;
 16722  0167C8  9C4D               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16723                           
 16724                           ;RemoteCan.c: 498: if (PORTBbits.RB1 == 1) {
 16725  0167CA  A281               	btfss	3969,1,c	;volatile
 16726  0167CC  0012               	return	
 16727                           
 16728                           ;RemoteCan.c: 499: F2_switch = ~F2_switch;
 16729  0167CE  B44C               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16730  0167D0  D002               	goto	u9540
 16731  0167D2  844C               	bsf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16732  0167D4  D001               	goto	u9555
 16733  0167D6                     u9540:
 16734  0167D6  944C               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16735  0167D8                     u9555:
 16736                           
 16737                           ;RemoteCan.c: 500: wait_low_3 = 1;
 16738  0167D8  8C4D               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16739  0167DA  0012               	return	
 16740  0167DC                     __end_of_F2_Button_Polling:
 16741                           	opt stack 0
 16742                           tblptru	equ	0xFF8
 16743                           tblptrh	equ	0xFF7
 16744                           tblptrl	equ	0xFF6
 16745                           tablat	equ	0xFF5
 16746                           prodh	equ	0xFF4
 16747                           prodl	equ	0xFF3
 16748                           intcon	equ	0xFF2
 16749                           postinc0	equ	0xFEE
 16750                           wreg	equ	0xFE8
 16751                           indf1	equ	0xFE7
 16752                           plusw1	equ	0xFE3
 16753                           fsr1h	equ	0xFE2
 16754                           fsr1l	equ	0xFE1
 16755                           indf2	equ	0xFDF
 16756                           postinc2	equ	0xFDE
 16757                           plusw2	equ	0xFDB
 16758                           fsr2h	equ	0xFDA
 16759                           fsr2l	equ	0xFD9
 16760                           status	equ	0xFD8
 16761                           
 16762 ;; *************** function _F1_Button_Polling *****************
 16763 ;; Defined at:
 16764 ;;		line 485 in file "RemoteCan.c"
 16765 ;; Parameters:    Size  Location     Type
 16766 ;;		None
 16767 ;; Auto vars:     Size  Location     Type
 16768 ;;		None
 16769 ;; Return value:  Size  Location     Type
 16770 ;;		None               void
 16771 ;; Registers used:
 16772 ;;		None
 16773 ;; Tracked objects:
 16774 ;;		On entry : 0/0
 16775 ;;		On exit  : 0/0
 16776 ;;		Unchanged: 0/0
 16777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16782 ;;Total ram usage:        0 bytes
 16783 ;; Hardware stack levels used:    1
 16784 ;; Hardware stack levels required when called:    9
 16785 ;; This function calls:
 16786 ;;		Nothing
 16787 ;; This function is called by:
 16788 ;;		_main
 16789 ;; This function uses a non-reentrant model
 16790 ;;
 16791                           
 16792                           	psect	text48
 16793  0167DC                     __ptext48:
 16794                           	opt stack 0
 16795  0167DC                     _F1_Button_Polling:
 16796                           	opt stack 21
 16797                           
 16798                           ;RemoteCan.c: 486: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 16799                           
 16800                           ;incstack = 0
 16801  0167DC  A881               	btfss	3969,4,c	;volatile
 16802  0167DE  D002               	goto	l885
 16803  0167E0  BA4D               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16804  0167E2  0012               	return	
 16805  0167E4                     l885:
 16806                           
 16807                           ;RemoteCan.c: 487: wait_low_2 = 0;
 16808  0167E4  9A4D               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16809                           
 16810                           ;RemoteCan.c: 488: if (PORTBbits.RB4 == 1) {
 16811  0167E6  A881               	btfss	3969,4,c	;volatile
 16812  0167E8  0012               	return	
 16813                           
 16814                           ;RemoteCan.c: 489: F1_switch = ~F1_switch;
 16815  0167EA  B24C               	btfsc	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16816  0167EC  D002               	goto	u9490
 16817  0167EE  824C               	bsf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16818  0167F0  D001               	goto	u9505
 16819  0167F2                     u9490:
 16820  0167F2  924C               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16821  0167F4                     u9505:
 16822                           
 16823                           ;RemoteCan.c: 490: wait_low_2 = 1;
 16824  0167F4  8A4D               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16825  0167F6  0012               	return	
 16826  0167F8                     __end_of_F1_Button_Polling:
 16827                           	opt stack 0
 16828                           tblptru	equ	0xFF8
 16829                           tblptrh	equ	0xFF7
 16830                           tblptrl	equ	0xFF6
 16831                           tablat	equ	0xFF5
 16832                           prodh	equ	0xFF4
 16833                           prodl	equ	0xFF3
 16834                           intcon	equ	0xFF2
 16835                           postinc0	equ	0xFEE
 16836                           wreg	equ	0xFE8
 16837                           indf1	equ	0xFE7
 16838                           plusw1	equ	0xFE3
 16839                           fsr1h	equ	0xFE2
 16840                           fsr1l	equ	0xFE1
 16841                           indf2	equ	0xFDF
 16842                           postinc2	equ	0xFDE
 16843                           plusw2	equ	0xFDB
 16844                           fsr2h	equ	0xFDA
 16845                           fsr2l	equ	0xFD9
 16846                           status	equ	0xFD8
 16847                           
 16848 ;; *************** function _CAN_Tx *****************
 16849 ;; Defined at:
 16850 ;;		line 514 in file "RemoteCan.c"
 16851 ;; Parameters:    Size  Location     Type
 16852 ;;		None
 16853 ;; Auto vars:     Size  Location     Type
 16854 ;;		None
 16855 ;; Return value:  Size  Location     Type
 16856 ;;		None               void
 16857 ;; Registers used:
 16858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16859 ;; Tracked objects:
 16860 ;;		On entry : 0/0
 16861 ;;		On exit  : 0/0
 16862 ;;		Unchanged: 0/0
 16863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16868 ;;Total ram usage:        0 bytes
 16869 ;; Hardware stack levels used:    1
 16870 ;; Hardware stack levels required when called:   10
 16871 ;; This function calls:
 16872 ;;		_CANisTxReady
 16873 ;;		_CANsendMessage
 16874 ;; This function is called by:
 16875 ;;		_main
 16876 ;; This function uses a non-reentrant model
 16877 ;;
 16878                           
 16879                           	psect	text49
 16880  015B3E                     __ptext49:
 16881                           	opt stack 0
 16882  015B3E                     _CAN_Tx:
 16883                           	opt stack 20
 16884  015B3E                     l7444:
 16885  015B3E  EC83  F0B3         	call	_CANisTxReady	;wreg free
 16886  015B42  06E8               	decf	wreg,f,c
 16887  015B44  A4D8               	btfss	status,2,c
 16888  015B46  D7FB               	goto	l7444
 16889                           
 16890                           ;RemoteCan.c: 517: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 16891  015B48  0E05               	movlw	5
 16892  015B4A  0100               	movlb	0	; () banked
 16893  015B4C  6F70               	movwf	CANsendMessage@identifier& (0+255),b
 16894  015B4E  0E00               	movlw	0
 16895  015B50  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16896  015B52  0E00               	movlw	0
 16897  015B54  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16898  015B56  0E00               	movlw	0
 16899  015B58  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16900  015B5A  0EEB               	movlw	low _data_steering
 16901  015B5C  0100               	movlb	0	; () banked
 16902  015B5E  6F74               	movwf	CANsendMessage@data& (0+255),b
 16903  015B60  0E00               	movlw	high _data_steering
 16904  015B62  0100               	movlb	0	; () banked
 16905  015B64  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
 16906  015B66  0E08               	movlw	8
 16907  015B68  0100               	movlb	0	; () banked
 16908  015B6A  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
 16909  015B6C  0EBC               	movlw	188
 16910  015B6E  0100               	movlb	0	; () banked
 16911  015B70  6F77               	movwf	CANsendMessage@flags& (0+255),b
 16912  015B72  ECCD  F089         	call	_CANsendMessage	;wreg free
 16913                           
 16914                           ;RemoteCan.c: 520: data_speed[0] = set_speed;
 16915  015B76  C0E2  F0EA         	movff	_set_speed,_data_speed	;volatile
 16916                           
 16917                           ;RemoteCan.c: 521: data_speed[1] = (set_speed >> 8);
 16918  015B7A  0100               	movlb	0	; () banked
 16919  015B7C  51E3               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 16920  015B7E  0100               	movlb	0	; () banked
 16921  015B80  6FEB               	movwf	(_data_speed+1)& (0+255),b
 16922                           
 16923                           ; BSR set to: 0
 16924                           ;RemoteCan.c: 522: data_speed[2] = dir;
 16925  015B82  C0E4  F0EC         	movff	_dir,_data_speed+2	;volatile
 16926  015B86                     l7454:
 16927  015B86  EC83  F0B3         	call	_CANisTxReady	;wreg free
 16928  015B8A  06E8               	decf	wreg,f,c
 16929  015B8C  A4D8               	btfss	status,2,c
 16930  015B8E  D7FB               	goto	l7454
 16931                           
 16932                           ;RemoteCan.c: 524: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 16933  015B90  0E03               	movlw	3
 16934  015B92  0100               	movlb	0	; () banked
 16935  015B94  6F70               	movwf	CANsendMessage@identifier& (0+255),b
 16936  015B96  0E00               	movlw	0
 16937  015B98  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16938  015B9A  0E00               	movlw	0
 16939  015B9C  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16940  015B9E  0E00               	movlw	0
 16941  015BA0  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16942  015BA2  0EEA               	movlw	low _data_speed
 16943  015BA4  0100               	movlb	0	; () banked
 16944  015BA6  6F74               	movwf	CANsendMessage@data& (0+255),b
 16945  015BA8  0E00               	movlw	high _data_speed
 16946  015BAA  0100               	movlb	0	; () banked
 16947  015BAC  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
 16948  015BAE  0E08               	movlw	8
 16949  015BB0  0100               	movlb	0	; () banked
 16950  015BB2  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
 16951  015BB4  0EBC               	movlw	188
 16952  015BB6  0100               	movlb	0	; () banked
 16953  015BB8  6F77               	movwf	CANsendMessage@flags& (0+255),b
 16954  015BBA  ECCD  F089         	call	_CANsendMessage	;wreg free
 16955  015BBE                     l7458:
 16956  015BBE  EC83  F0B3         	call	_CANisTxReady	;wreg free
 16957  015BC2  06E8               	decf	wreg,f,c
 16958  015BC4  A4D8               	btfss	status,2,c
 16959  015BC6  D7FB               	goto	l7458
 16960                           
 16961                           ;RemoteCan.c: 528: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_1);
 16962  015BC8  0E04               	movlw	4
 16963  015BCA  0100               	movlb	0	; () banked
 16964  015BCC  6F70               	movwf	CANsendMessage@identifier& (0+255),b
 16965  015BCE  0E00               	movlw	0
 16966  015BD0  6F71               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16967  015BD2  0E00               	movlw	0
 16968  015BD4  6F72               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16969  015BD6  0E00               	movlw	0
 16970  015BD8  6F73               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16971  015BDA  0E26               	movlw	low _data_brake
 16972  015BDC  0100               	movlb	0	; () banked
 16973  015BDE  6F74               	movwf	CANsendMessage@data& (0+255),b
 16974  015BE0  0E00               	movlw	high _data_brake
 16975  015BE2  0100               	movlb	0	; () banked
 16976  015BE4  6F75               	movwf	(CANsendMessage@data+1)& (0+255),b
 16977  015BE6  0E08               	movlw	8
 16978  015BE8  0100               	movlb	0	; () banked
 16979  015BEA  6F76               	movwf	CANsendMessage@dataLength& (0+255),b
 16980  015BEC  0EBD               	movlw	189
 16981  015BEE  0100               	movlb	0	; () banked
 16982  015BF0  6F77               	movwf	CANsendMessage@flags& (0+255),b
 16983  015BF2  ECCD  F089         	call	_CANsendMessage	;wreg free
 16984  015BF6  0012               	return		;funcret
 16985  015BF8                     __end_of_CAN_Tx:
 16986                           	opt stack 0
 16987                           tblptru	equ	0xFF8
 16988                           tblptrh	equ	0xFF7
 16989                           tblptrl	equ	0xFF6
 16990                           tablat	equ	0xFF5
 16991                           prodh	equ	0xFF4
 16992                           prodl	equ	0xFF3
 16993                           intcon	equ	0xFF2
 16994                           postinc0	equ	0xFEE
 16995                           wreg	equ	0xFE8
 16996                           indf1	equ	0xFE7
 16997                           plusw1	equ	0xFE3
 16998                           fsr1h	equ	0xFE2
 16999                           fsr1l	equ	0xFE1
 17000                           indf2	equ	0xFDF
 17001                           postinc2	equ	0xFDE
 17002                           plusw2	equ	0xFDB
 17003                           fsr2h	equ	0xFDA
 17004                           fsr2l	equ	0xFD9
 17005                           status	equ	0xFD8
 17006                           
 17007 ;; *************** function _CANsendMessage *****************
 17008 ;; Defined at:
 17009 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 17010 ;; Parameters:    Size  Location     Type
 17011 ;;  identifier      4   16[BANK0 ] unsigned long 
 17012 ;;  data            2   20[BANK0 ] PTR unsigned char 
 17013 ;;		 -> data_speed(1), park_assist_state(8), data(1), data_brake(1), 
 17014 ;;		 -> data_steering(1), 
 17015 ;;  dataLength      1   22[BANK0 ] unsigned char 
 17016 ;;  flags           1   23[BANK0 ] enum E16909
 17017 ;; Auto vars:     Size  Location     Type
 17018 ;;  tamp            4   28[BANK0 ] unsigned long 
 17019 ;; Return value:  Size  Location     Type
 17020 ;;		None               void
 17021 ;; Registers used:
 17022 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17023 ;; Tracked objects:
 17024 ;;		On entry : 0/0
 17025 ;;		On exit  : 0/0
 17026 ;;		Unchanged: 0/0
 17027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17028 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17029 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17030 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17031 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17032 ;;Total ram usage:       16 bytes
 17033 ;; Hardware stack levels used:    1
 17034 ;; Hardware stack levels required when called:    9
 17035 ;; This function calls:
 17036 ;;		Nothing
 17037 ;; This function is called by:
 17038 ;;		_main
 17039 ;;		_LCD_Handler
 17040 ;;		_CAN_Tx
 17041 ;; This function uses a non-reentrant model
 17042 ;;
 17043                           
 17044                           	psect	text50
 17045  01139A                     __ptext50:
 17046                           	opt stack 0
 17047  01139A                     _CANsendMessage:
 17048                           	opt stack 20
 17049                           
 17050                           ;inc\CANlib.h: 296: unsigned long tamp;
 17051                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 17052                           
 17053                           ;incstack = 0
 17054  01139A  010F               	movlb	15	; () banked
 17055  01139C  B740               	btfsc	64,3,b	;volatile
 17056  01139E  D13F               	goto	l381
 17057                           
 17058                           ; BSR set to: 15
 17059                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 17060  0113A0  C076  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 17061                           
 17062                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 17063  0113A4  0100               	movlb	0	; () banked
 17064  0113A6  AD77               	btfss	CANsendMessage@flags& (0+255),6,b
 17065  0113A8  D003               	goto	l382
 17066                           
 17067                           ; BSR set to: 0
 17068                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 17069  0113AA  010F               	movlb	15	; () banked
 17070  0113AC  8D45               	bsf	69,6,b	;volatile
 17071  0113AE  D002               	goto	l383
 17072  0113B0                     l382:
 17073                           
 17074                           ; BSR set to: 0
 17075                           ;inc\CANlib.h: 302: else
 17076                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 17077  0113B0  010F               	movlb	15	; () banked
 17078  0113B2  9D45               	bcf	69,6,b	;volatile
 17079  0113B4                     l383:
 17080                           
 17081                           ; BSR set to: 15
 17082                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 17083  0113B4  0100               	movlb	0	; () banked
 17084  0113B6  A777               	btfss	CANsendMessage@flags& (0+255),3,b
 17085  0113B8  D079               	goto	l384
 17086                           
 17087                           ; BSR set to: 0
 17088                           ;inc\CANlib.h: 306: {
 17089                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 17090  0113BA  0100               	movlb	0	; () banked
 17091  0113BC  5170               	movf	CANsendMessage@identifier& (0+255),w,b
 17092  0113BE  0100               	movlb	0	; () banked
 17093  0113C0  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17094  0113C2  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17095  0113C4  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17096  0113C6  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17097                           
 17098                           ; BSR set to: 0
 17099                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 17100  0113C8  C07C  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 17101                           
 17102                           ; BSR set to: 0
 17103                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 17104  0113CC  0E00               	movlw	0
 17105  0113CE  0100               	movlb	0	; () banked
 17106  0113D0  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17107  0113D2  0100               	movlb	0	; () banked
 17108  0113D4  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17109  0113D6  0EFF               	movlw	255
 17110  0113D8  0100               	movlb	0	; () banked
 17111  0113DA  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17112  0113DC  0100               	movlb	0	; () banked
 17113  0113DE  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17114  0113E0  0E00               	movlw	0
 17115  0113E2  0100               	movlb	0	; () banked
 17116  0113E4  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17117  0113E6  0100               	movlb	0	; () banked
 17118  0113E8  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17119  0113EA  0E00               	movlw	0
 17120  0113EC  0100               	movlb	0	; () banked
 17121  0113EE  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17122  0113F0  0100               	movlb	0	; () banked
 17123  0113F2  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17124                           
 17125                           ; BSR set to: 0
 17126                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 17127  0113F4  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17128  0113F8  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17129  0113FC  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17130  011400  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17131  011404  C079  F078         	movff	??_CANsendMessage+1,??_CANsendMessage
 17132  011408  C07A  F079         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17133  01140C  C07B  F07A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17134  011410  0100               	movlb	0	; () banked
 17135  011412  6B7B               	clrf	(??_CANsendMessage+3)& (0+255),b
 17136  011414  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17137  011418  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17138  01141C  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17139  011420  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17140                           
 17141                           ; BSR set to: 0
 17142                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 17143  011424  C07C  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 17144                           
 17145                           ; BSR set to: 0
 17146                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 17147  011428  0E00               	movlw	0
 17148  01142A  010F               	movlb	15	; () banked
 17149  01142C  6F42               	movwf	66,b	;volatile
 17150                           
 17151                           ; BSR set to: 15
 17152                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 17153  01142E  010F               	movlb	15	; () banked
 17154  011430  8742               	bsf	66,3,b	;volatile
 17155                           
 17156                           ; BSR set to: 15
 17157                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 17158  011432  0100               	movlb	0	; () banked
 17159  011434  A172               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17160  011436  D002               	goto	l385
 17161                           
 17162                           ; BSR set to: 0
 17163                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 17164  011438  010F               	movlb	15	; () banked
 17165  01143A  8142               	bsf	66,0,b	;volatile
 17166  01143C                     l385:
 17167                           
 17168                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 17169  01143C  0100               	movlb	0	; () banked
 17170  01143E  A372               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17171  011440  D002               	goto	l386
 17172                           
 17173                           ; BSR set to: 0
 17174                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 17175  011442  010F               	movlb	15	; () banked
 17176  011444  8342               	bsf	66,1,b	;volatile
 17177  011446                     l386:
 17178                           
 17179                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 17180  011446  0100               	movlb	0	; () banked
 17181  011448  A572               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17182  01144A  D002               	goto	l387
 17183                           
 17184                           ; BSR set to: 0
 17185                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 17186  01144C  010F               	movlb	15	; () banked
 17187  01144E  8B42               	bsf	66,5,b	;volatile
 17188  011450                     l387:
 17189                           
 17190                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 17191  011450  0100               	movlb	0	; () banked
 17192  011452  A772               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17193  011454  D002               	goto	l388
 17194                           
 17195                           ; BSR set to: 0
 17196                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 17197  011456  010F               	movlb	15	; () banked
 17198  011458  8D42               	bsf	66,6,b	;volatile
 17199  01145A                     l388:
 17200                           
 17201                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 17202  01145A  0100               	movlb	0	; () banked
 17203  01145C  A972               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17204  01145E  D002               	goto	l6344
 17205                           
 17206                           ; BSR set to: 0
 17207                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 17208  011460  010F               	movlb	15	; () banked
 17209  011462  8F42               	bsf	66,7,b	;volatile
 17210  011464                     l6344:
 17211                           
 17212                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 17213  011464  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17214  011468  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17215  01146C  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17216  011470  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17217  011474  0E16               	movlw	22
 17218  011476  D006               	goto	u7720
 17219  011478                     u7725:
 17220  011478  0100               	movlb	0	; () banked
 17221  01147A  90D8               	bcf	status,0,c
 17222  01147C  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17223  01147E  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17224  011480  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17225  011482  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17226  011484                     u7720:
 17227  011484  2EE8               	decfsz	wreg,f,c
 17228  011486  D7F8               	goto	u7725
 17229  011488  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17230  01148C  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17231  011490  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17232  011494  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17233                           
 17234                           ; BSR set to: 0
 17235                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 17236  011498  0100               	movlb	0	; () banked
 17237  01149A  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 17238  01149C  0100               	movlb	0	; () banked
 17239  01149E  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17240  0114A0  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17241  0114A2  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17242  0114A4  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17243                           
 17244                           ; BSR set to: 0
 17245                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 17246  0114A6  C07C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17247                           
 17248                           ;inc\CANlib.h: 332: }
 17249  0114AA  D059               	goto	l6364
 17250  0114AC                     l384:
 17251                           
 17252                           ; BSR set to: 0
 17253                           ;inc\CANlib.h: 334: else
 17254                           ;inc\CANlib.h: 336: {
 17255                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 17256  0114AC  010F               	movlb	15	; () banked
 17257  0114AE  9742               	bcf	66,3,b	;volatile
 17258                           
 17259                           ; BSR set to: 15
 17260                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 17261  0114B0  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17262  0114B4  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17263  0114B8  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17264  0114BC  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17265  0114C0  0E04               	movlw	4
 17266  0114C2  D006               	goto	u7730
 17267  0114C4                     u7735:
 17268  0114C4  0100               	movlb	0	; () banked
 17269  0114C6  90D8               	bcf	status,0,c
 17270  0114C8  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17271  0114CA  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17272  0114CC  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17273  0114CE  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17274  0114D0                     u7730:
 17275  0114D0  2EE8               	decfsz	wreg,f,c
 17276  0114D2  D7F8               	goto	u7735
 17277  0114D4  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17278  0114D8  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17279  0114DC  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17280  0114E0  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17281                           
 17282                           ; BSR set to: 0
 17283                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 17284  0114E4  0100               	movlb	0	; () banked
 17285  0114E6  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 17286  0114E8  0100               	movlb	0	; () banked
 17287  0114EA  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17288  0114EC  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17289  0114EE  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17290  0114F0  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17291                           
 17292                           ; BSR set to: 0
 17293                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 17294  0114F2  C07C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17295                           
 17296                           ; BSR set to: 0
 17297                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 17298  0114F6  0E07               	movlw	7
 17299  0114F8  0100               	movlb	0	; () banked
 17300  0114FA  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17301  0114FC  0100               	movlb	0	; () banked
 17302  0114FE  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17303  011500  0E00               	movlw	0
 17304  011502  0100               	movlb	0	; () banked
 17305  011504  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17306  011506  0100               	movlb	0	; () banked
 17307  011508  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17308  01150A  0E00               	movlw	0
 17309  01150C  0100               	movlb	0	; () banked
 17310  01150E  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17311  011510  0100               	movlb	0	; () banked
 17312  011512  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17313  011514  0E00               	movlw	0
 17314  011516  0100               	movlb	0	; () banked
 17315  011518  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17316  01151A  0100               	movlb	0	; () banked
 17317  01151C  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17318                           
 17319                           ; BSR set to: 0
 17320                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 17321  01151E  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17322  011522  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17323  011526  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17324  01152A  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17325  01152E  0E05               	movlw	5
 17326  011530                     u7745:
 17327  011530  90D8               	bcf	status,0,c
 17328  011532  0100               	movlb	0	; () banked
 17329  011534  3778               	rlcf	??_CANsendMessage& (0+255),f,b
 17330  011536  3779               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17331  011538  377A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17332  01153A  377B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17333  01153C  2EE8               	decfsz	wreg,f,c
 17334  01153E  D7F8               	goto	u7745
 17335  011540  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17336  011544  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17337  011548  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17338  01154C  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17339                           
 17340                           ; BSR set to: 0
 17341                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 17342  011550  010F               	movlb	15	; () banked
 17343  011552  5142               	movf	66,w,b	;volatile
 17344  011554  0B1F               	andlw	31
 17345  011556  010F               	movlb	15	; () banked
 17346  011558  6F42               	movwf	66,b	;volatile
 17347                           
 17348                           ; BSR set to: 15
 17349                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 17350  01155A  C07C  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 17351  01155E                     l6364:
 17352                           
 17353                           ;inc\CANlib.h: 347: }
 17354                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 17355  01155E  0100               	movlb	0	; () banked
 17356  011560  A177               	btfss	CANsendMessage@flags& (0+255),0,b
 17357  011562  D003               	goto	l391
 17358                           
 17359                           ; BSR set to: 0
 17360                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 17361  011564  010F               	movlb	15	; () banked
 17362  011566  8140               	bsf	64,0,b	;volatile
 17363  011568  D002               	goto	l392
 17364  01156A                     l391:
 17365                           
 17366                           ; BSR set to: 0
 17367                           ;inc\CANlib.h: 351: else
 17368                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 17369  01156A  010F               	movlb	15	; () banked
 17370  01156C  9140               	bcf	64,0,b	;volatile
 17371  01156E                     l392:
 17372                           
 17373                           ; BSR set to: 15
 17374                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 17375  01156E  0100               	movlb	0	; () banked
 17376  011570  A377               	btfss	CANsendMessage@flags& (0+255),1,b
 17377  011572  D003               	goto	l393
 17378                           
 17379                           ; BSR set to: 0
 17380                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 17381  011574  010F               	movlb	15	; () banked
 17382  011576  8340               	bsf	64,1,b	;volatile
 17383  011578  D002               	goto	l6370
 17384  01157A                     l393:
 17385                           
 17386                           ; BSR set to: 0
 17387                           ;inc\CANlib.h: 355: else
 17388                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 17389  01157A  010F               	movlb	15	; () banked
 17390  01157C  9340               	bcf	64,1,b	;volatile
 17391  01157E                     l6370:
 17392                           
 17393                           ; BSR set to: 15
 17394                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 17395  01157E  C074  FFD9         	movff	CANsendMessage@data,fsr2l
 17396  011582  C075  FFDA         	movff	CANsendMessage@data+1,fsr2h
 17397  011586  50DF               	movf	indf2,w,c
 17398  011588  010F               	movlb	15	; () banked
 17399  01158A  6F46               	movwf	70,b	;volatile
 17400                           
 17401                           ; BSR set to: 15
 17402                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 17403  01158C  0100               	movlb	0	; () banked
 17404  01158E  EE20 F001          	lfsr	2,1
 17405  011592  5174               	movf	CANsendMessage@data& (0+255),w,b
 17406  011594  26D9               	addwf	fsr2l,f,c
 17407  011596  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17408  011598  22DA               	addwfc	fsr2h,f,c
 17409  01159A  50DF               	movf	indf2,w,c
 17410  01159C  010F               	movlb	15	; () banked
 17411  01159E  6F47               	movwf	71,b	;volatile
 17412                           
 17413                           ; BSR set to: 15
 17414                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 17415  0115A0  0100               	movlb	0	; () banked
 17416  0115A2  EE20 F002          	lfsr	2,2
 17417  0115A6  5174               	movf	CANsendMessage@data& (0+255),w,b
 17418  0115A8  26D9               	addwf	fsr2l,f,c
 17419  0115AA  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17420  0115AC  22DA               	addwfc	fsr2h,f,c
 17421  0115AE  50DF               	movf	indf2,w,c
 17422  0115B0  010F               	movlb	15	; () banked
 17423  0115B2  6F48               	movwf	72,b	;volatile
 17424                           
 17425                           ; BSR set to: 15
 17426                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 17427  0115B4  0100               	movlb	0	; () banked
 17428  0115B6  EE20 F003          	lfsr	2,3
 17429  0115BA  5174               	movf	CANsendMessage@data& (0+255),w,b
 17430  0115BC  26D9               	addwf	fsr2l,f,c
 17431  0115BE  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17432  0115C0  22DA               	addwfc	fsr2h,f,c
 17433  0115C2  50DF               	movf	indf2,w,c
 17434  0115C4  010F               	movlb	15	; () banked
 17435  0115C6  6F49               	movwf	73,b	;volatile
 17436                           
 17437                           ; BSR set to: 15
 17438                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 17439  0115C8  0100               	movlb	0	; () banked
 17440  0115CA  EE20 F004          	lfsr	2,4
 17441  0115CE  5174               	movf	CANsendMessage@data& (0+255),w,b
 17442  0115D0  26D9               	addwf	fsr2l,f,c
 17443  0115D2  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17444  0115D4  22DA               	addwfc	fsr2h,f,c
 17445  0115D6  50DF               	movf	indf2,w,c
 17446  0115D8  010F               	movlb	15	; () banked
 17447  0115DA  6F4A               	movwf	74,b	;volatile
 17448                           
 17449                           ; BSR set to: 15
 17450                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 17451  0115DC  0100               	movlb	0	; () banked
 17452  0115DE  EE20 F005          	lfsr	2,5
 17453  0115E2  5174               	movf	CANsendMessage@data& (0+255),w,b
 17454  0115E4  26D9               	addwf	fsr2l,f,c
 17455  0115E6  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17456  0115E8  22DA               	addwfc	fsr2h,f,c
 17457  0115EA  50DF               	movf	indf2,w,c
 17458  0115EC  010F               	movlb	15	; () banked
 17459  0115EE  6F4B               	movwf	75,b	;volatile
 17460                           
 17461                           ; BSR set to: 15
 17462                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 17463  0115F0  0100               	movlb	0	; () banked
 17464  0115F2  EE20 F006          	lfsr	2,6
 17465  0115F6  5174               	movf	CANsendMessage@data& (0+255),w,b
 17466  0115F8  26D9               	addwf	fsr2l,f,c
 17467  0115FA  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17468  0115FC  22DA               	addwfc	fsr2h,f,c
 17469  0115FE  50DF               	movf	indf2,w,c
 17470  011600  010F               	movlb	15	; () banked
 17471  011602  6F4C               	movwf	76,b	;volatile
 17472                           
 17473                           ; BSR set to: 15
 17474                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 17475  011604  0100               	movlb	0	; () banked
 17476  011606  EE20 F007          	lfsr	2,7
 17477  01160A  5174               	movf	CANsendMessage@data& (0+255),w,b
 17478  01160C  26D9               	addwf	fsr2l,f,c
 17479  01160E  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17480  011610  22DA               	addwfc	fsr2h,f,c
 17481  011612  50DF               	movf	indf2,w,c
 17482  011614  010F               	movlb	15	; () banked
 17483  011616  6F4D               	movwf	77,b	;volatile
 17484                           
 17485                           ; BSR set to: 15
 17486                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 17487  011618  010F               	movlb	15	; () banked
 17488  01161A  8740               	bsf	64,3,b	;volatile
 17489                           
 17490                           ; BSR set to: 15
 17491                           ;inc\CANlib.h: 368: return;
 17492  01161C  0012               	return	
 17493  01161E                     l381:
 17494                           
 17495                           ; BSR set to: 15
 17496                           ;inc\CANlib.h: 369: }
 17497                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 17498  01161E  010F               	movlb	15	; () banked
 17499  011620  B730               	btfsc	48,3,b	;volatile
 17500  011622  D13F               	goto	l396
 17501                           
 17502                           ; BSR set to: 15
 17503                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 17504  011624  C076  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 17505                           
 17506                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 17507  011628  0100               	movlb	0	; () banked
 17508  01162A  AD77               	btfss	CANsendMessage@flags& (0+255),6,b
 17509  01162C  D003               	goto	l397
 17510                           
 17511                           ; BSR set to: 0
 17512                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 17513  01162E  010F               	movlb	15	; () banked
 17514  011630  8D35               	bsf	53,6,b	;volatile
 17515  011632  D002               	goto	l398
 17516  011634                     l397:
 17517                           
 17518                           ; BSR set to: 0
 17519                           ;inc\CANlib.h: 378: else
 17520                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 17521  011634  010F               	movlb	15	; () banked
 17522  011636  9D35               	bcf	53,6,b	;volatile
 17523  011638                     l398:
 17524                           
 17525                           ; BSR set to: 15
 17526                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 17527  011638  0100               	movlb	0	; () banked
 17528  01163A  A777               	btfss	CANsendMessage@flags& (0+255),3,b
 17529  01163C  D079               	goto	l399
 17530                           
 17531                           ; BSR set to: 0
 17532                           ;inc\CANlib.h: 382: {
 17533                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 17534  01163E  0100               	movlb	0	; () banked
 17535  011640  5170               	movf	CANsendMessage@identifier& (0+255),w,b
 17536  011642  0100               	movlb	0	; () banked
 17537  011644  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17538  011646  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17539  011648  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17540  01164A  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17541                           
 17542                           ; BSR set to: 0
 17543                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 17544  01164C  C07C  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 17545                           
 17546                           ; BSR set to: 0
 17547                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 17548  011650  0E00               	movlw	0
 17549  011652  0100               	movlb	0	; () banked
 17550  011654  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17551  011656  0100               	movlb	0	; () banked
 17552  011658  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17553  01165A  0EFF               	movlw	255
 17554  01165C  0100               	movlb	0	; () banked
 17555  01165E  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17556  011660  0100               	movlb	0	; () banked
 17557  011662  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17558  011664  0E00               	movlw	0
 17559  011666  0100               	movlb	0	; () banked
 17560  011668  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17561  01166A  0100               	movlb	0	; () banked
 17562  01166C  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17563  01166E  0E00               	movlw	0
 17564  011670  0100               	movlb	0	; () banked
 17565  011672  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17566  011674  0100               	movlb	0	; () banked
 17567  011676  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17568                           
 17569                           ; BSR set to: 0
 17570                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 17571  011678  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17572  01167C  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17573  011680  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17574  011684  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17575  011688  C079  F078         	movff	??_CANsendMessage+1,??_CANsendMessage
 17576  01168C  C07A  F079         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17577  011690  C07B  F07A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17578  011694  0100               	movlb	0	; () banked
 17579  011696  6B7B               	clrf	(??_CANsendMessage+3)& (0+255),b
 17580  011698  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17581  01169C  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17582  0116A0  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17583  0116A4  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17584                           
 17585                           ; BSR set to: 0
 17586                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 17587  0116A8  C07C  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 17588                           
 17589                           ; BSR set to: 0
 17590                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 17591  0116AC  0E00               	movlw	0
 17592  0116AE  010F               	movlb	15	; () banked
 17593  0116B0  6F32               	movwf	50,b	;volatile
 17594                           
 17595                           ; BSR set to: 15
 17596                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 17597  0116B2  010F               	movlb	15	; () banked
 17598  0116B4  8732               	bsf	50,3,b	;volatile
 17599                           
 17600                           ; BSR set to: 15
 17601                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 17602  0116B6  0100               	movlb	0	; () banked
 17603  0116B8  A172               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17604  0116BA  D002               	goto	l400
 17605                           
 17606                           ; BSR set to: 0
 17607                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 17608  0116BC  010F               	movlb	15	; () banked
 17609  0116BE  8132               	bsf	50,0,b	;volatile
 17610  0116C0                     l400:
 17611                           
 17612                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 17613  0116C0  0100               	movlb	0	; () banked
 17614  0116C2  A372               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17615  0116C4  D002               	goto	l401
 17616                           
 17617                           ; BSR set to: 0
 17618                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 17619  0116C6  010F               	movlb	15	; () banked
 17620  0116C8  8332               	bsf	50,1,b	;volatile
 17621  0116CA                     l401:
 17622                           
 17623                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 17624  0116CA  0100               	movlb	0	; () banked
 17625  0116CC  A572               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17626  0116CE  D002               	goto	l402
 17627                           
 17628                           ; BSR set to: 0
 17629                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 17630  0116D0  010F               	movlb	15	; () banked
 17631  0116D2  8B32               	bsf	50,5,b	;volatile
 17632  0116D4                     l402:
 17633                           
 17634                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 17635  0116D4  0100               	movlb	0	; () banked
 17636  0116D6  A772               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17637  0116D8  D002               	goto	l403
 17638                           
 17639                           ; BSR set to: 0
 17640                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 17641  0116DA  010F               	movlb	15	; () banked
 17642  0116DC  8D32               	bsf	50,6,b	;volatile
 17643  0116DE                     l403:
 17644                           
 17645                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 17646  0116DE  0100               	movlb	0	; () banked
 17647  0116E0  A972               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17648  0116E2  D002               	goto	l6420
 17649                           
 17650                           ; BSR set to: 0
 17651                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 17652  0116E4  010F               	movlb	15	; () banked
 17653  0116E6  8F32               	bsf	50,7,b	;volatile
 17654  0116E8                     l6420:
 17655                           
 17656                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 17657  0116E8  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17658  0116EC  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17659  0116F0  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17660  0116F4  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17661  0116F8  0E16               	movlw	22
 17662  0116FA  D006               	goto	u7850
 17663  0116FC                     u7855:
 17664  0116FC  0100               	movlb	0	; () banked
 17665  0116FE  90D8               	bcf	status,0,c
 17666  011700  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17667  011702  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17668  011704  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17669  011706  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17670  011708                     u7850:
 17671  011708  2EE8               	decfsz	wreg,f,c
 17672  01170A  D7F8               	goto	u7855
 17673  01170C  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17674  011710  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17675  011714  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17676  011718  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17677                           
 17678                           ; BSR set to: 0
 17679                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 17680  01171C  0100               	movlb	0	; () banked
 17681  01171E  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 17682  011720  0100               	movlb	0	; () banked
 17683  011722  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17684  011724  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17685  011726  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17686  011728  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17687                           
 17688                           ; BSR set to: 0
 17689                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 17690  01172A  C07C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 17691                           
 17692                           ;inc\CANlib.h: 407: }
 17693  01172E  D059               	goto	l6440
 17694  011730                     l399:
 17695                           
 17696                           ; BSR set to: 0
 17697                           ;inc\CANlib.h: 409: else
 17698                           ;inc\CANlib.h: 411: {
 17699                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 17700  011730  010F               	movlb	15	; () banked
 17701  011732  9732               	bcf	50,3,b	;volatile
 17702                           
 17703                           ; BSR set to: 15
 17704                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 17705  011734  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 17706  011738  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17707  01173C  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17708  011740  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17709  011744  0E04               	movlw	4
 17710  011746  D006               	goto	u7860
 17711  011748                     u7865:
 17712  011748  0100               	movlb	0	; () banked
 17713  01174A  90D8               	bcf	status,0,c
 17714  01174C  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17715  01174E  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17716  011750  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17717  011752  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 17718  011754                     u7860:
 17719  011754  2EE8               	decfsz	wreg,f,c
 17720  011756  D7F8               	goto	u7865
 17721  011758  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17722  01175C  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17723  011760  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17724  011764  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17725                           
 17726                           ; BSR set to: 0
 17727                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 17728  011768  0100               	movlb	0	; () banked
 17729  01176A  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 17730  01176C  0100               	movlb	0	; () banked
 17731  01176E  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17732  011770  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17733  011772  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17734  011774  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17735                           
 17736                           ; BSR set to: 0
 17737                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 17738  011776  C07C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 17739                           
 17740                           ; BSR set to: 0
 17741                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 17742  01177A  0E07               	movlw	7
 17743  01177C  0100               	movlb	0	; () banked
 17744  01177E  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17745  011780  0100               	movlb	0	; () banked
 17746  011782  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17747  011784  0E00               	movlw	0
 17748  011786  0100               	movlb	0	; () banked
 17749  011788  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17750  01178A  0100               	movlb	0	; () banked
 17751  01178C  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17752  01178E  0E00               	movlw	0
 17753  011790  0100               	movlb	0	; () banked
 17754  011792  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17755  011794  0100               	movlb	0	; () banked
 17756  011796  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17757  011798  0E00               	movlw	0
 17758  01179A  0100               	movlb	0	; () banked
 17759  01179C  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17760  01179E  0100               	movlb	0	; () banked
 17761  0117A0  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17762                           
 17763                           ; BSR set to: 0
 17764                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 17765  0117A2  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 17766  0117A6  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17767  0117AA  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17768  0117AE  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17769  0117B2  0E05               	movlw	5
 17770  0117B4                     u7875:
 17771  0117B4  90D8               	bcf	status,0,c
 17772  0117B6  0100               	movlb	0	; () banked
 17773  0117B8  3778               	rlcf	??_CANsendMessage& (0+255),f,b
 17774  0117BA  3779               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17775  0117BC  377A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17776  0117BE  377B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17777  0117C0  2EE8               	decfsz	wreg,f,c
 17778  0117C2  D7F8               	goto	u7875
 17779  0117C4  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 17780  0117C8  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17781  0117CC  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17782  0117D0  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17783                           
 17784                           ; BSR set to: 0
 17785                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 17786  0117D4  010F               	movlb	15	; () banked
 17787  0117D6  5132               	movf	50,w,b	;volatile
 17788  0117D8  0B1F               	andlw	31
 17789  0117DA  010F               	movlb	15	; () banked
 17790  0117DC  6F32               	movwf	50,b	;volatile
 17791                           
 17792                           ; BSR set to: 15
 17793                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 17794  0117DE  C07C  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 17795  0117E2                     l6440:
 17796                           
 17797                           ;inc\CANlib.h: 422: }
 17798                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 17799  0117E2  0100               	movlb	0	; () banked
 17800  0117E4  A177               	btfss	CANsendMessage@flags& (0+255),0,b
 17801  0117E6  D003               	goto	l406
 17802                           
 17803                           ; BSR set to: 0
 17804                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 17805  0117E8  010F               	movlb	15	; () banked
 17806  0117EA  8130               	bsf	48,0,b	;volatile
 17807  0117EC  D002               	goto	l407
 17808  0117EE                     l406:
 17809                           
 17810                           ; BSR set to: 0
 17811                           ;inc\CANlib.h: 426: else
 17812                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 17813  0117EE  010F               	movlb	15	; () banked
 17814  0117F0  9130               	bcf	48,0,b	;volatile
 17815  0117F2                     l407:
 17816                           
 17817                           ; BSR set to: 15
 17818                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 17819  0117F2  0100               	movlb	0	; () banked
 17820  0117F4  A377               	btfss	CANsendMessage@flags& (0+255),1,b
 17821  0117F6  D003               	goto	l408
 17822                           
 17823                           ; BSR set to: 0
 17824                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 17825  0117F8  010F               	movlb	15	; () banked
 17826  0117FA  8330               	bsf	48,1,b	;volatile
 17827  0117FC  D002               	goto	l6446
 17828  0117FE                     l408:
 17829                           
 17830                           ; BSR set to: 0
 17831                           ;inc\CANlib.h: 430: else
 17832                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 17833  0117FE  010F               	movlb	15	; () banked
 17834  011800  9330               	bcf	48,1,b	;volatile
 17835  011802                     l6446:
 17836                           
 17837                           ; BSR set to: 15
 17838                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 17839  011802  C074  FFD9         	movff	CANsendMessage@data,fsr2l
 17840  011806  C075  FFDA         	movff	CANsendMessage@data+1,fsr2h
 17841  01180A  50DF               	movf	indf2,w,c
 17842  01180C  010F               	movlb	15	; () banked
 17843  01180E  6F36               	movwf	54,b	;volatile
 17844                           
 17845                           ; BSR set to: 15
 17846                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 17847  011810  0100               	movlb	0	; () banked
 17848  011812  EE20 F001          	lfsr	2,1
 17849  011816  5174               	movf	CANsendMessage@data& (0+255),w,b
 17850  011818  26D9               	addwf	fsr2l,f,c
 17851  01181A  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17852  01181C  22DA               	addwfc	fsr2h,f,c
 17853  01181E  50DF               	movf	indf2,w,c
 17854  011820  010F               	movlb	15	; () banked
 17855  011822  6F37               	movwf	55,b	;volatile
 17856                           
 17857                           ; BSR set to: 15
 17858                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 17859  011824  0100               	movlb	0	; () banked
 17860  011826  EE20 F002          	lfsr	2,2
 17861  01182A  5174               	movf	CANsendMessage@data& (0+255),w,b
 17862  01182C  26D9               	addwf	fsr2l,f,c
 17863  01182E  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17864  011830  22DA               	addwfc	fsr2h,f,c
 17865  011832  50DF               	movf	indf2,w,c
 17866  011834  010F               	movlb	15	; () banked
 17867  011836  6F38               	movwf	56,b	;volatile
 17868                           
 17869                           ; BSR set to: 15
 17870                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 17871  011838  0100               	movlb	0	; () banked
 17872  01183A  EE20 F003          	lfsr	2,3
 17873  01183E  5174               	movf	CANsendMessage@data& (0+255),w,b
 17874  011840  26D9               	addwf	fsr2l,f,c
 17875  011842  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17876  011844  22DA               	addwfc	fsr2h,f,c
 17877  011846  50DF               	movf	indf2,w,c
 17878  011848  010F               	movlb	15	; () banked
 17879  01184A  6F39               	movwf	57,b	;volatile
 17880                           
 17881                           ; BSR set to: 15
 17882                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 17883  01184C  0100               	movlb	0	; () banked
 17884  01184E  EE20 F004          	lfsr	2,4
 17885  011852  5174               	movf	CANsendMessage@data& (0+255),w,b
 17886  011854  26D9               	addwf	fsr2l,f,c
 17887  011856  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17888  011858  22DA               	addwfc	fsr2h,f,c
 17889  01185A  50DF               	movf	indf2,w,c
 17890  01185C  010F               	movlb	15	; () banked
 17891  01185E  6F3A               	movwf	58,b	;volatile
 17892                           
 17893                           ; BSR set to: 15
 17894                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 17895  011860  0100               	movlb	0	; () banked
 17896  011862  EE20 F005          	lfsr	2,5
 17897  011866  5174               	movf	CANsendMessage@data& (0+255),w,b
 17898  011868  26D9               	addwf	fsr2l,f,c
 17899  01186A  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17900  01186C  22DA               	addwfc	fsr2h,f,c
 17901  01186E  50DF               	movf	indf2,w,c
 17902  011870  010F               	movlb	15	; () banked
 17903  011872  6F3B               	movwf	59,b	;volatile
 17904                           
 17905                           ; BSR set to: 15
 17906                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 17907  011874  0100               	movlb	0	; () banked
 17908  011876  EE20 F006          	lfsr	2,6
 17909  01187A  5174               	movf	CANsendMessage@data& (0+255),w,b
 17910  01187C  26D9               	addwf	fsr2l,f,c
 17911  01187E  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17912  011880  22DA               	addwfc	fsr2h,f,c
 17913  011882  50DF               	movf	indf2,w,c
 17914  011884  010F               	movlb	15	; () banked
 17915  011886  6F3C               	movwf	60,b	;volatile
 17916                           
 17917                           ; BSR set to: 15
 17918                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 17919  011888  0100               	movlb	0	; () banked
 17920  01188A  EE20 F007          	lfsr	2,7
 17921  01188E  5174               	movf	CANsendMessage@data& (0+255),w,b
 17922  011890  26D9               	addwf	fsr2l,f,c
 17923  011892  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17924  011894  22DA               	addwfc	fsr2h,f,c
 17925  011896  50DF               	movf	indf2,w,c
 17926  011898  010F               	movlb	15	; () banked
 17927  01189A  6F3D               	movwf	61,b	;volatile
 17928                           
 17929                           ; BSR set to: 15
 17930                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 17931  01189C  010F               	movlb	15	; () banked
 17932  01189E  8730               	bsf	48,3,b	;volatile
 17933                           
 17934                           ; BSR set to: 15
 17935                           ;inc\CANlib.h: 444: return;
 17936  0118A0  0012               	return	
 17937  0118A2                     l396:
 17938                           
 17939                           ; BSR set to: 15
 17940                           ;inc\CANlib.h: 445: }
 17941                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 17942  0118A2  010F               	movlb	15	; () banked
 17943  0118A4  B720               	btfsc	32,3,b	;volatile
 17944  0118A6  0012               	return	
 17945                           
 17946                           ; BSR set to: 15
 17947                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 17948  0118A8  C076  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 17949                           
 17950                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 17951  0118AC  0100               	movlb	0	; () banked
 17952  0118AE  AD77               	btfss	CANsendMessage@flags& (0+255),6,b
 17953  0118B0  D003               	goto	l411
 17954                           
 17955                           ; BSR set to: 0
 17956                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 17957  0118B2  010F               	movlb	15	; () banked
 17958  0118B4  8D25               	bsf	37,6,b	;volatile
 17959  0118B6  D002               	goto	l412
 17960  0118B8                     l411:
 17961                           
 17962                           ; BSR set to: 0
 17963                           ;inc\CANlib.h: 454: else
 17964                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 17965  0118B8  010F               	movlb	15	; () banked
 17966  0118BA  9D25               	bcf	37,6,b	;volatile
 17967  0118BC                     l412:
 17968                           
 17969                           ; BSR set to: 15
 17970                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 17971  0118BC  0100               	movlb	0	; () banked
 17972  0118BE  A777               	btfss	CANsendMessage@flags& (0+255),3,b
 17973  0118C0  D079               	goto	l413
 17974                           
 17975                           ; BSR set to: 0
 17976                           ;inc\CANlib.h: 458: {
 17977                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 17978  0118C2  0100               	movlb	0	; () banked
 17979  0118C4  5170               	movf	CANsendMessage@identifier& (0+255),w,b
 17980  0118C6  0100               	movlb	0	; () banked
 17981  0118C8  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17982  0118CA  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17983  0118CC  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17984  0118CE  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17985                           
 17986                           ; BSR set to: 0
 17987                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 17988  0118D0  C07C  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 17989                           
 17990                           ; BSR set to: 0
 17991                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 17992  0118D4  0E00               	movlw	0
 17993  0118D6  0100               	movlb	0	; () banked
 17994  0118D8  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 17995  0118DA  0100               	movlb	0	; () banked
 17996  0118DC  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 17997  0118DE  0EFF               	movlw	255
 17998  0118E0  0100               	movlb	0	; () banked
 17999  0118E2  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18000  0118E4  0100               	movlb	0	; () banked
 18001  0118E6  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18002  0118E8  0E00               	movlw	0
 18003  0118EA  0100               	movlb	0	; () banked
 18004  0118EC  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18005  0118EE  0100               	movlb	0	; () banked
 18006  0118F0  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18007  0118F2  0E00               	movlw	0
 18008  0118F4  0100               	movlb	0	; () banked
 18009  0118F6  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18010  0118F8  0100               	movlb	0	; () banked
 18011  0118FA  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18012                           
 18013                           ; BSR set to: 0
 18014                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 18015  0118FC  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 18016  011900  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18017  011904  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18018  011908  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18019  01190C  C079  F078         	movff	??_CANsendMessage+1,??_CANsendMessage
 18020  011910  C07A  F079         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 18021  011914  C07B  F07A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 18022  011918  0100               	movlb	0	; () banked
 18023  01191A  6B7B               	clrf	(??_CANsendMessage+3)& (0+255),b
 18024  01191C  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18025  011920  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18026  011924  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18027  011928  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18028                           
 18029                           ; BSR set to: 0
 18030                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 18031  01192C  C07C  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 18032                           
 18033                           ; BSR set to: 0
 18034                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 18035  011930  0E00               	movlw	0
 18036  011932  010F               	movlb	15	; () banked
 18037  011934  6F22               	movwf	34,b	;volatile
 18038                           
 18039                           ; BSR set to: 15
 18040                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 18041  011936  010F               	movlb	15	; () banked
 18042  011938  8722               	bsf	34,3,b	;volatile
 18043                           
 18044                           ; BSR set to: 15
 18045                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 18046  01193A  0100               	movlb	0	; () banked
 18047  01193C  A172               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 18048  01193E  D002               	goto	l414
 18049                           
 18050                           ; BSR set to: 0
 18051                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 18052  011940  010F               	movlb	15	; () banked
 18053  011942  8122               	bsf	34,0,b	;volatile
 18054  011944                     l414:
 18055                           
 18056                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 18057  011944  0100               	movlb	0	; () banked
 18058  011946  A372               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 18059  011948  D002               	goto	l415
 18060                           
 18061                           ; BSR set to: 0
 18062                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 18063  01194A  010F               	movlb	15	; () banked
 18064  01194C  8322               	bsf	34,1,b	;volatile
 18065  01194E                     l415:
 18066                           
 18067                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 18068  01194E  0100               	movlb	0	; () banked
 18069  011950  A572               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 18070  011952  D002               	goto	l416
 18071                           
 18072                           ; BSR set to: 0
 18073                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 18074  011954  010F               	movlb	15	; () banked
 18075  011956  8B22               	bsf	34,5,b	;volatile
 18076  011958                     l416:
 18077                           
 18078                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 18079  011958  0100               	movlb	0	; () banked
 18080  01195A  A772               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 18081  01195C  D002               	goto	l417
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 18085  01195E  010F               	movlb	15	; () banked
 18086  011960  8D22               	bsf	34,6,b	;volatile
 18087  011962                     l417:
 18088                           
 18089                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 18090  011962  0100               	movlb	0	; () banked
 18091  011964  A972               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 18092  011966  D002               	goto	l6496
 18093                           
 18094                           ; BSR set to: 0
 18095                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 18096  011968  010F               	movlb	15	; () banked
 18097  01196A  8F22               	bsf	34,7,b	;volatile
 18098  01196C                     l6496:
 18099                           
 18100                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 18101  01196C  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 18102  011970  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18103  011974  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18104  011978  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18105  01197C  0E16               	movlw	22
 18106  01197E  D006               	goto	u7980
 18107  011980                     u7985:
 18108  011980  0100               	movlb	0	; () banked
 18109  011982  90D8               	bcf	status,0,c
 18110  011984  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18111  011986  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18112  011988  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18113  01198A  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 18114  01198C                     u7980:
 18115  01198C  2EE8               	decfsz	wreg,f,c
 18116  01198E  D7F8               	goto	u7985
 18117  011990  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18118  011994  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18119  011998  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18120  01199C  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18121                           
 18122                           ; BSR set to: 0
 18123                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 18124  0119A0  0100               	movlb	0	; () banked
 18125  0119A2  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 18126  0119A4  0100               	movlb	0	; () banked
 18127  0119A6  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18128  0119A8  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18129  0119AA  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18130  0119AC  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18131                           
 18132                           ; BSR set to: 0
 18133                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 18134  0119AE  C07C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 18135                           
 18136                           ;inc\CANlib.h: 483: }
 18137  0119B2  D059               	goto	l6516
 18138  0119B4                     l413:
 18139                           
 18140                           ; BSR set to: 0
 18141                           ;inc\CANlib.h: 485: else
 18142                           ;inc\CANlib.h: 487: {
 18143                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 18144  0119B4  010F               	movlb	15	; () banked
 18145  0119B6  9722               	bcf	34,3,b	;volatile
 18146                           
 18147                           ; BSR set to: 15
 18148                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 18149  0119B8  C070  F078         	movff	CANsendMessage@identifier,??_CANsendMessage
 18150  0119BC  C071  F079         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18151  0119C0  C072  F07A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18152  0119C4  C073  F07B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18153  0119C8  0E04               	movlw	4
 18154  0119CA  D006               	goto	u7990
 18155  0119CC                     u7995:
 18156  0119CC  0100               	movlb	0	; () banked
 18157  0119CE  90D8               	bcf	status,0,c
 18158  0119D0  337B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18159  0119D2  337A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18160  0119D4  3379               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18161  0119D6  3378               	rrcf	??_CANsendMessage& (0+255),f,b
 18162  0119D8                     u7990:
 18163  0119D8  2EE8               	decfsz	wreg,f,c
 18164  0119DA  D7F8               	goto	u7995
 18165  0119DC  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18166  0119E0  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18167  0119E4  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18168  0119E8  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18169                           
 18170                           ; BSR set to: 0
 18171                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 18172  0119EC  0100               	movlb	0	; () banked
 18173  0119EE  517C               	movf	CANsendMessage@tamp& (0+255),w,b
 18174  0119F0  0100               	movlb	0	; () banked
 18175  0119F2  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18176  0119F4  6B7D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18177  0119F6  6B7E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18178  0119F8  6B7F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18179                           
 18180                           ; BSR set to: 0
 18181                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 18182  0119FA  C07C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 18183                           
 18184                           ; BSR set to: 0
 18185                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 18186  0119FE  0E07               	movlw	7
 18187  011A00  0100               	movlb	0	; () banked
 18188  011A02  1570               	andwf	CANsendMessage@identifier& (0+255),w,b
 18189  011A04  0100               	movlb	0	; () banked
 18190  011A06  6F7C               	movwf	CANsendMessage@tamp& (0+255),b
 18191  011A08  0E00               	movlw	0
 18192  011A0A  0100               	movlb	0	; () banked
 18193  011A0C  1571               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18194  011A0E  0100               	movlb	0	; () banked
 18195  011A10  6F7D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18196  011A12  0E00               	movlw	0
 18197  011A14  0100               	movlb	0	; () banked
 18198  011A16  1572               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18199  011A18  0100               	movlb	0	; () banked
 18200  011A1A  6F7E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18201  011A1C  0E00               	movlw	0
 18202  011A1E  0100               	movlb	0	; () banked
 18203  011A20  1573               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18204  011A22  0100               	movlb	0	; () banked
 18205  011A24  6F7F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18206                           
 18207                           ; BSR set to: 0
 18208                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 18209  011A26  C07C  F078         	movff	CANsendMessage@tamp,??_CANsendMessage
 18210  011A2A  C07D  F079         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18211  011A2E  C07E  F07A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18212  011A32  C07F  F07B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18213  011A36  0E05               	movlw	5
 18214  011A38                     u8005:
 18215  011A38  90D8               	bcf	status,0,c
 18216  011A3A  0100               	movlb	0	; () banked
 18217  011A3C  3778               	rlcf	??_CANsendMessage& (0+255),f,b
 18218  011A3E  3779               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18219  011A40  377A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18220  011A42  377B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18221  011A44  2EE8               	decfsz	wreg,f,c
 18222  011A46  D7F8               	goto	u8005
 18223  011A48  C078  F07C         	movff	??_CANsendMessage,CANsendMessage@tamp
 18224  011A4C  C079  F07D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18225  011A50  C07A  F07E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18226  011A54  C07B  F07F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18227                           
 18228                           ; BSR set to: 0
 18229                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 18230  011A58  010F               	movlb	15	; () banked
 18231  011A5A  5122               	movf	34,w,b	;volatile
 18232  011A5C  0B1F               	andlw	31
 18233  011A5E  010F               	movlb	15	; () banked
 18234  011A60  6F22               	movwf	34,b	;volatile
 18235                           
 18236                           ; BSR set to: 15
 18237                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 18238  011A62  C07C  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 18239  011A66                     l6516:
 18240                           
 18241                           ;inc\CANlib.h: 498: }
 18242                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 18243  011A66  0100               	movlb	0	; () banked
 18244  011A68  A177               	btfss	CANsendMessage@flags& (0+255),0,b
 18245  011A6A  D003               	goto	l420
 18246                           
 18247                           ; BSR set to: 0
 18248                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 18249  011A6C  010F               	movlb	15	; () banked
 18250  011A6E  8120               	bsf	32,0,b	;volatile
 18251  011A70  D002               	goto	l421
 18252  011A72                     l420:
 18253                           
 18254                           ; BSR set to: 0
 18255                           ;inc\CANlib.h: 502: else
 18256                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 18257  011A72  010F               	movlb	15	; () banked
 18258  011A74  9120               	bcf	32,0,b	;volatile
 18259  011A76                     l421:
 18260                           
 18261                           ; BSR set to: 15
 18262                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 18263  011A76  0100               	movlb	0	; () banked
 18264  011A78  A377               	btfss	CANsendMessage@flags& (0+255),1,b
 18265  011A7A  D003               	goto	l422
 18266                           
 18267                           ; BSR set to: 0
 18268                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 18269  011A7C  010F               	movlb	15	; () banked
 18270  011A7E  8320               	bsf	32,1,b	;volatile
 18271  011A80  D002               	goto	l6522
 18272  011A82                     l422:
 18273                           
 18274                           ; BSR set to: 0
 18275                           ;inc\CANlib.h: 506: else
 18276                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 18277  011A82  010F               	movlb	15	; () banked
 18278  011A84  9320               	bcf	32,1,b	;volatile
 18279  011A86                     l6522:
 18280                           
 18281                           ; BSR set to: 15
 18282                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 18283  011A86  C074  FFD9         	movff	CANsendMessage@data,fsr2l
 18284  011A8A  C075  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18285  011A8E  50DF               	movf	indf2,w,c
 18286  011A90  010F               	movlb	15	; () banked
 18287  011A92  6F26               	movwf	38,b	;volatile
 18288                           
 18289                           ; BSR set to: 15
 18290                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 18291  011A94  0100               	movlb	0	; () banked
 18292  011A96  EE20 F001          	lfsr	2,1
 18293  011A9A  5174               	movf	CANsendMessage@data& (0+255),w,b
 18294  011A9C  26D9               	addwf	fsr2l,f,c
 18295  011A9E  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18296  011AA0  22DA               	addwfc	fsr2h,f,c
 18297  011AA2  50DF               	movf	indf2,w,c
 18298  011AA4  010F               	movlb	15	; () banked
 18299  011AA6  6F27               	movwf	39,b	;volatile
 18300                           
 18301                           ; BSR set to: 15
 18302                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 18303  011AA8  0100               	movlb	0	; () banked
 18304  011AAA  EE20 F002          	lfsr	2,2
 18305  011AAE  5174               	movf	CANsendMessage@data& (0+255),w,b
 18306  011AB0  26D9               	addwf	fsr2l,f,c
 18307  011AB2  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18308  011AB4  22DA               	addwfc	fsr2h,f,c
 18309  011AB6  50DF               	movf	indf2,w,c
 18310  011AB8  010F               	movlb	15	; () banked
 18311  011ABA  6F28               	movwf	40,b	;volatile
 18312                           
 18313                           ; BSR set to: 15
 18314                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 18315  011ABC  0100               	movlb	0	; () banked
 18316  011ABE  EE20 F003          	lfsr	2,3
 18317  011AC2  5174               	movf	CANsendMessage@data& (0+255),w,b
 18318  011AC4  26D9               	addwf	fsr2l,f,c
 18319  011AC6  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18320  011AC8  22DA               	addwfc	fsr2h,f,c
 18321  011ACA  50DF               	movf	indf2,w,c
 18322  011ACC  010F               	movlb	15	; () banked
 18323  011ACE  6F29               	movwf	41,b	;volatile
 18324                           
 18325                           ; BSR set to: 15
 18326                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 18327  011AD0  0100               	movlb	0	; () banked
 18328  011AD2  EE20 F004          	lfsr	2,4
 18329  011AD6  5174               	movf	CANsendMessage@data& (0+255),w,b
 18330  011AD8  26D9               	addwf	fsr2l,f,c
 18331  011ADA  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18332  011ADC  22DA               	addwfc	fsr2h,f,c
 18333  011ADE  50DF               	movf	indf2,w,c
 18334  011AE0  010F               	movlb	15	; () banked
 18335  011AE2  6F2A               	movwf	42,b	;volatile
 18336                           
 18337                           ; BSR set to: 15
 18338                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 18339  011AE4  0100               	movlb	0	; () banked
 18340  011AE6  EE20 F005          	lfsr	2,5
 18341  011AEA  5174               	movf	CANsendMessage@data& (0+255),w,b
 18342  011AEC  26D9               	addwf	fsr2l,f,c
 18343  011AEE  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18344  011AF0  22DA               	addwfc	fsr2h,f,c
 18345  011AF2  50DF               	movf	indf2,w,c
 18346  011AF4  010F               	movlb	15	; () banked
 18347  011AF6  6F2B               	movwf	43,b	;volatile
 18348                           
 18349                           ; BSR set to: 15
 18350                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 18351  011AF8  0100               	movlb	0	; () banked
 18352  011AFA  EE20 F006          	lfsr	2,6
 18353  011AFE  5174               	movf	CANsendMessage@data& (0+255),w,b
 18354  011B00  26D9               	addwf	fsr2l,f,c
 18355  011B02  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18356  011B04  22DA               	addwfc	fsr2h,f,c
 18357  011B06  50DF               	movf	indf2,w,c
 18358  011B08  010F               	movlb	15	; () banked
 18359  011B0A  6F2C               	movwf	44,b	;volatile
 18360                           
 18361                           ; BSR set to: 15
 18362                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 18363  011B0C  0100               	movlb	0	; () banked
 18364  011B0E  EE20 F007          	lfsr	2,7
 18365  011B12  5174               	movf	CANsendMessage@data& (0+255),w,b
 18366  011B14  26D9               	addwf	fsr2l,f,c
 18367  011B16  5175               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18368  011B18  22DA               	addwfc	fsr2h,f,c
 18369  011B1A  50DF               	movf	indf2,w,c
 18370  011B1C  010F               	movlb	15	; () banked
 18371  011B1E  6F2D               	movwf	45,b	;volatile
 18372                           
 18373                           ; BSR set to: 15
 18374                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 18375  011B20  010F               	movlb	15	; () banked
 18376  011B22  8720               	bsf	32,3,b	;volatile
 18377                           
 18378                           ; BSR set to: 15
 18379                           ;inc\CANlib.h: 520: return;
 18380  011B24  0012               	return	
 18381  011B26                     __end_of_CANsendMessage:
 18382                           	opt stack 0
 18383                           tblptru	equ	0xFF8
 18384                           tblptrh	equ	0xFF7
 18385                           tblptrl	equ	0xFF6
 18386                           tablat	equ	0xFF5
 18387                           prodh	equ	0xFF4
 18388                           prodl	equ	0xFF3
 18389                           intcon	equ	0xFF2
 18390                           postinc0	equ	0xFEE
 18391                           wreg	equ	0xFE8
 18392                           indf1	equ	0xFE7
 18393                           plusw1	equ	0xFE3
 18394                           fsr1h	equ	0xFE2
 18395                           fsr1l	equ	0xFE1
 18396                           indf2	equ	0xFDF
 18397                           postinc2	equ	0xFDE
 18398                           plusw2	equ	0xFDB
 18399                           fsr2h	equ	0xFDA
 18400                           fsr2l	equ	0xFD9
 18401                           status	equ	0xFD8
 18402                           
 18403 ;; *************** function _CANisTxReady *****************
 18404 ;; Defined at:
 18405 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 18406 ;; Parameters:    Size  Location     Type
 18407 ;;		None
 18408 ;; Auto vars:     Size  Location     Type
 18409 ;;		None
 18410 ;; Return value:  Size  Location     Type
 18411 ;;                  1    wreg      unsigned char 
 18412 ;; Registers used:
 18413 ;;		wreg, status,2
 18414 ;; Tracked objects:
 18415 ;;		On entry : 0/0
 18416 ;;		On exit  : 0/0
 18417 ;;		Unchanged: 0/0
 18418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18420 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18422 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18423 ;;Total ram usage:        1 bytes
 18424 ;; Hardware stack levels used:    1
 18425 ;; Hardware stack levels required when called:    9
 18426 ;; This function calls:
 18427 ;;		Nothing
 18428 ;; This function is called by:
 18429 ;;		_main
 18430 ;;		_LCD_Handler
 18431 ;;		_CAN_Tx
 18432 ;; This function uses a non-reentrant model
 18433 ;;
 18434                           
 18435                           	psect	text51
 18436  016706                     __ptext51:
 18437                           	opt stack 0
 18438  016706                     _CANisTxReady:
 18439                           	opt stack 20
 18440                           
 18441                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 18442                           
 18443                           ; BSR set to: 15
 18444                           ;incstack = 0
 18445  016706  0E01               	movlw	1
 18446  016708  0100               	movlb	0	; () banked
 18447  01670A  6F70               	movwf	_CANisTxReady$3247& (0+255),b
 18448                           
 18449                           ; BSR set to: 0
 18450  01670C  010F               	movlb	15	; () banked
 18451  01670E  A740               	btfss	64,3,b	;volatile
 18452  016710  D009               	goto	l574
 18453                           
 18454                           ; BSR set to: 15
 18455  016712  010F               	movlb	15	; () banked
 18456  016714  A730               	btfss	48,3,b	;volatile
 18457  016716  D006               	goto	l574
 18458                           
 18459                           ; BSR set to: 15
 18460  016718  010F               	movlb	15	; () banked
 18461  01671A  A720               	btfss	32,3,b	;volatile
 18462  01671C  D003               	goto	l574
 18463                           
 18464                           ; BSR set to: 15
 18465  01671E  0E00               	movlw	0
 18466  016720  0100               	movlb	0	; () banked
 18467  016722  6F70               	movwf	_CANisTxReady$3247& (0+255),b
 18468  016724                     l574:
 18469  016724  0100               	movlb	0	; () banked
 18470  016726  5170               	movf	_CANisTxReady$3247& (0+255),w,b
 18471  016728  0012               	return	
 18472  01672A                     __end_of_CANisTxReady:
 18473                           	opt stack 0
 18474                           tblptru	equ	0xFF8
 18475                           tblptrh	equ	0xFF7
 18476                           tblptrl	equ	0xFF6
 18477                           tablat	equ	0xFF5
 18478                           prodh	equ	0xFF4
 18479                           prodl	equ	0xFF3
 18480                           intcon	equ	0xFF2
 18481                           postinc0	equ	0xFEE
 18482                           wreg	equ	0xFE8
 18483                           indf1	equ	0xFE7
 18484                           plusw1	equ	0xFE3
 18485                           fsr1h	equ	0xFE2
 18486                           fsr1l	equ	0xFE1
 18487                           indf2	equ	0xFDF
 18488                           postinc2	equ	0xFDE
 18489                           plusw2	equ	0xFDB
 18490                           fsr2h	equ	0xFDA
 18491                           fsr2l	equ	0xFD9
 18492                           status	equ	0xFD8
 18493                           
 18494 ;; *************** function _CAN_Rx *****************
 18495 ;; Defined at:
 18496 ;;		line 532 in file "RemoteCan.c"
 18497 ;; Parameters:    Size  Location     Type
 18498 ;;		None
 18499 ;; Auto vars:     Size  Location     Type
 18500 ;;		None
 18501 ;; Return value:  Size  Location     Type
 18502 ;;		None               void
 18503 ;; Registers used:
 18504 ;;		wreg, status,2, status,0
 18505 ;; Tracked objects:
 18506 ;;		On entry : 0/0
 18507 ;;		On exit  : 0/0
 18508 ;;		Unchanged: 0/0
 18509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18512 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18513 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18514 ;;Total ram usage:        4 bytes
 18515 ;; Hardware stack levels used:    1
 18516 ;; Hardware stack levels required when called:    9
 18517 ;; This function calls:
 18518 ;;		Nothing
 18519 ;; This function is called by:
 18520 ;;		_main
 18521 ;; This function uses a non-reentrant model
 18522 ;;
 18523                           
 18524                           	psect	text52
 18525  015CB0                     __ptext52:
 18526                           	opt stack 0
 18527  015CB0                     _CAN_Rx:
 18528                           	opt stack 21
 18529                           
 18530                           ;RemoteCan.c: 533: if (id == 0b00000000010) {
 18531                           
 18532                           ; BSR set to: 0
 18533                           ;incstack = 0
 18534  015CB0  0E02               	movlw	2
 18535  015CB2  1801               	xorwf	_id,w,c	;volatile
 18536  015CB4  1002               	iorwf	_id+1,w,c	;volatile
 18537  015CB6  1003               	iorwf	_id+2,w,c	;volatile
 18538  015CB8  1004               	iorwf	_id+3,w,c	;volatile
 18539  015CBA  A4D8               	btfss	status,2,c
 18540  015CBC  D015               	goto	l7592
 18541                           
 18542                           ;RemoteCan.c: 534: if (RTR_Flag == 1) {
 18543  015CBE  A84C               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18544  015CC0  D00C               	goto	l7582
 18545                           
 18546                           ;RemoteCan.c: 535: pr_time_4 = time_counter;
 18547  015CC2  C019  F00D         	movff	_time_counter,_pr_time_4	;volatile
 18548  015CC6  C01A  F00E         	movff	_time_counter+1,_pr_time_4+1	;volatile
 18549  015CCA  C01B  F00F         	movff	_time_counter+2,_pr_time_4+2	;volatile
 18550  015CCE  C01C  F010         	movff	_time_counter+3,_pr_time_4+3	;volatile
 18551                           
 18552                           ;RemoteCan.c: 536: MotoreFlag = 1;
 18553  015CD2  864C               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 18554                           
 18555                           ;RemoteCan.c: 537: AbsFlag = 0;
 18556  015CD4  904C               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 18557                           
 18558                           ;RemoteCan.c: 538: SterzoFlag = 0;
 18559  015CD6  9A4C               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 18560                           
 18561                           ;RemoteCan.c: 539: } else {
 18562  015CD8  D007               	goto	l7592
 18563  015CDA                     l7582:
 18564                           
 18565                           ;RemoteCan.c: 540: if (data[0] == 0x01) {
 18566  015CDA  0425               	decf	_data,w,c
 18567  015CDC  B4D8               	btfsc	status,2,c
 18568                           
 18569                           ;RemoteCan.c: 541: AbsFlag = 1;
 18570  015CDE  804C               	bsf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 18571                           
 18572                           ;RemoteCan.c: 542: }
 18573                           ;RemoteCan.c: 543: if (data[0] == 0x02) {
 18574  015CE0  0E02               	movlw	2
 18575  015CE2  1825               	xorwf	_data,w,c
 18576  015CE4  B4D8               	btfsc	status,2,c
 18577                           
 18578                           ;RemoteCan.c: 544: SterzoFlag = 1;
 18579  015CE6  8A4C               	bsf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 18580  015CE8                     l7592:
 18581                           
 18582                           ;RemoteCan.c: 551: }
 18583                           ;RemoteCan.c: 553: if ((id == 0b00000000110)&&(RTR_Flag == 0)) {
 18584  015CE8  0E06               	movlw	6
 18585  015CEA  1801               	xorwf	_id,w,c	;volatile
 18586  015CEC  1002               	iorwf	_id+1,w,c	;volatile
 18587  015CEE  1003               	iorwf	_id+2,w,c	;volatile
 18588  015CF0  1004               	iorwf	_id+3,w,c	;volatile
 18589  015CF2  B4D8               	btfsc	status,2,c
 18590  015CF4  B84C               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18591  015CF6  D029               	goto	l7604
 18592                           
 18593                           ;RemoteCan.c: 554: left_speed = data_speed_rx[1];
 18594  015CF8  C101  F01D         	movff	_data_speed_rx+1,_left_speed
 18595  015CFC  6A1E               	clrf	_left_speed+1,c
 18596                           
 18597                           ;RemoteCan.c: 555: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 18598  015CFE  501D               	movf	_left_speed,w,c
 18599  015D00  0100               	movlb	0	; () banked
 18600  015D02  6F70               	movwf	??_CAN_Rx& (0+255),b
 18601  015D04  0101               	movlb	1	; () banked
 18602  015D06  5100               	movf	_data_speed_rx& (0+255),w,b
 18603  015D08  6E1D               	movwf	_left_speed,c
 18604  015D0A  C070  F01E         	movff	??_CAN_Rx,_left_speed+1
 18605                           
 18606                           ; BSR set to: 1
 18607                           ;RemoteCan.c: 556: right_speed = data_speed_rx[3];
 18608  015D0E  C103  F01F         	movff	_data_speed_rx+3,_right_speed
 18609  015D12  6A20               	clrf	_right_speed+1,c
 18610                           
 18611                           ;RemoteCan.c: 557: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 18612  015D14  501F               	movf	_right_speed,w,c
 18613  015D16  0100               	movlb	0	; () banked
 18614  015D18  6F70               	movwf	??_CAN_Rx& (0+255),b
 18615  015D1A  0101               	movlb	1	; () banked
 18616  015D1C  5102               	movf	(_data_speed_rx+2)& (0+255),w,b
 18617  015D1E  6E1F               	movwf	_right_speed,c
 18618  015D20  C070  F020         	movff	??_CAN_Rx,_right_speed+1
 18619                           
 18620                           ; BSR set to: 1
 18621                           ;RemoteCan.c: 558: actual_speed = (right_speed + left_speed) / 2;
 18622  015D24  501D               	movf	_left_speed,w,c
 18623  015D26  241F               	addwf	_right_speed,w,c
 18624  015D28  0100               	movlb	0	; () banked
 18625  015D2A  6F70               	movwf	??_CAN_Rx& (0+255),b
 18626  015D2C  501E               	movf	_left_speed+1,w,c
 18627  015D2E  2020               	addwfc	_right_speed+1,w,c
 18628  015D30  0100               	movlb	0	; () banked
 18629  015D32  6F71               	movwf	(??_CAN_Rx+1)& (0+255),b
 18630  015D34  90D8               	bcf	status,0,c
 18631  015D36  0100               	movlb	0	; () banked
 18632  015D38  3171               	rrcf	(??_CAN_Rx+1)& (0+255),w,b
 18633  015D3A  0100               	movlb	0	; () banked
 18634  015D3C  6F72               	movwf	(??_CAN_Rx+2)& (0+255),b
 18635  015D3E  0100               	movlb	0	; () banked
 18636  015D40  3170               	rrcf	??_CAN_Rx& (0+255),w,b
 18637  015D42  0100               	movlb	0	; () banked
 18638  015D44  6FDE               	movwf	_actual_speed& (0+255),b
 18639  015D46  C072  F0DF         	movff	??_CAN_Rx+2,_actual_speed+1
 18640  015D4A                     l7604:
 18641                           
 18642                           ;RemoteCan.c: 559: }
 18643                           ;RemoteCan.c: 561: if (id == 0b00000001001) {
 18644  015D4A  0E09               	movlw	9
 18645  015D4C  1801               	xorwf	_id,w,c	;volatile
 18646  015D4E  1002               	iorwf	_id+1,w,c	;volatile
 18647  015D50  1003               	iorwf	_id+2,w,c	;volatile
 18648  015D52  1004               	iorwf	_id+3,w,c	;volatile
 18649  015D54  A4D8               	btfss	status,2,c
 18650  015D56  0012               	return	
 18651                           
 18652                           ;RemoteCan.c: 562: battery = data[0];
 18653  015D58  C025  F023         	movff	_data,_battery	;volatile
 18654  015D5C  0012               	return	
 18655  015D5E                     __end_of_CAN_Rx:
 18656                           	opt stack 0
 18657                           tblptru	equ	0xFF8
 18658                           tblptrh	equ	0xFF7
 18659                           tblptrl	equ	0xFF6
 18660                           tablat	equ	0xFF5
 18661                           prodh	equ	0xFF4
 18662                           prodl	equ	0xFF3
 18663                           intcon	equ	0xFF2
 18664                           postinc0	equ	0xFEE
 18665                           wreg	equ	0xFE8
 18666                           indf1	equ	0xFE7
 18667                           plusw1	equ	0xFE3
 18668                           fsr1h	equ	0xFE2
 18669                           fsr1l	equ	0xFE1
 18670                           indf2	equ	0xFDF
 18671                           postinc2	equ	0xFDE
 18672                           plusw2	equ	0xFDB
 18673                           fsr2h	equ	0xFDA
 18674                           fsr2l	equ	0xFD9
 18675                           status	equ	0xFD8
 18676                           
 18677 ;; *************** function _ISR_bassa *****************
 18678 ;; Defined at:
 18679 ;;		line 186 in file "RemoteCan.c"
 18680 ;; Parameters:    Size  Location     Type
 18681 ;;		None
 18682 ;; Auto vars:     Size  Location     Type
 18683 ;;		None
 18684 ;; Return value:  Size  Location     Type
 18685 ;;		None               void
 18686 ;; Registers used:
 18687 ;;		wreg, status,2, status,0
 18688 ;; Tracked objects:
 18689 ;;		On entry : 0/0
 18690 ;;		On exit  : 0/0
 18691 ;;		Unchanged: 0/0
 18692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18695 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18696 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18697 ;;Total ram usage:       17 bytes
 18698 ;; Hardware stack levels used:    1
 18699 ;; Hardware stack levels required when called:    8
 18700 ;; This function calls:
 18701 ;;		Nothing
 18702 ;; This function is called by:
 18703 ;;		Interrupt level 1
 18704 ;; This function uses a non-reentrant model
 18705 ;;
 18706                           
 18707                           	psect	intcodelo
 18708  000018                     __pintcodelo:
 18709                           	opt stack 0
 18710  000018                     _ISR_bassa:
 18711                           	opt stack 14
 18712                           
 18713                           ;incstack = 0
 18714  000018  804E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 18715  00001A  CFD8 F027          	movff	status,??_ISR_bassa
 18716  00001E  CFE8 F028          	movff	wreg,??_ISR_bassa+1
 18717  000022  CFE0 F029          	movff	bsr,??_ISR_bassa+2
 18718  000026  CFFA F02A          	movff	pclath,??_ISR_bassa+3
 18719  00002A  CFFB F02B          	movff	pclatu,??_ISR_bassa+4
 18720  00002E  CFE9 F02C          	movff	fsr0l,??_ISR_bassa+5
 18721  000032  CFEA F02D          	movff	fsr0h,??_ISR_bassa+6
 18722  000036  CFE1 F02E          	movff	fsr1l,??_ISR_bassa+7
 18723  00003A  CFE2 F02F          	movff	fsr1h,??_ISR_bassa+8
 18724  00003E  CFD9 F030          	movff	fsr2l,??_ISR_bassa+9
 18725  000042  CFDA F031          	movff	fsr2h,??_ISR_bassa+10
 18726  000046  CFF3 F032          	movff	prodl,??_ISR_bassa+11
 18727  00004A  CFF4 F033          	movff	prodh,??_ISR_bassa+12
 18728  00004E  CFF6 F034          	movff	tblptrl,??_ISR_bassa+13
 18729  000052  CFF7 F035          	movff	tblptrh,??_ISR_bassa+14
 18730  000056  CFF8 F036          	movff	tblptru,??_ISR_bassa+15
 18731  00005A  CFF5 F037          	movff	tablat,??_ISR_bassa+16
 18732                           
 18733                           ;RemoteCan.c: 187: if (PIR2bits.TMR3IF == 1) {
 18734  00005E  A2A1               	btfss	4001,1,c	;volatile
 18735  000060  D00B               	goto	i1l792
 18736                           
 18737                           ;RemoteCan.c: 188: time_counter++;
 18738  000062  0E01               	movlw	1
 18739  000064  2619               	addwf	_time_counter,f,c	;volatile
 18740  000066  0E00               	movlw	0
 18741  000068  221A               	addwfc	_time_counter+1,f,c	;volatile
 18742  00006A  221B               	addwfc	_time_counter+2,f,c	;volatile
 18743  00006C  221C               	addwfc	_time_counter+3,f,c	;volatile
 18744                           
 18745                           ;RemoteCan.c: 189: TMR3H = 0x63;
 18746  00006E  0E63               	movlw	99
 18747  000070  6EB3               	movwf	4019,c	;volatile
 18748                           
 18749                           ;RemoteCan.c: 190: TMR3L = 0xC0;
 18750  000072  0EC0               	movlw	192
 18751  000074  6EB2               	movwf	4018,c	;volatile
 18752                           
 18753                           ;RemoteCan.c: 191: PIR2bits.TMR3IF = 0;
 18754  000076  92A1               	bcf	4001,1,c	;volatile
 18755  000078                     i1l792:
 18756  000078  C037  FFF5         	movff	??_ISR_bassa+16,tablat
 18757  00007C  C036  FFF8         	movff	??_ISR_bassa+15,tblptru
 18758  000080  C035  FFF7         	movff	??_ISR_bassa+14,tblptrh
 18759  000084  C034  FFF6         	movff	??_ISR_bassa+13,tblptrl
 18760  000088  C033  FFF4         	movff	??_ISR_bassa+12,prodh
 18761  00008C  C032  FFF3         	movff	??_ISR_bassa+11,prodl
 18762  000090  C031  FFDA         	movff	??_ISR_bassa+10,fsr2h
 18763  000094  C030  FFD9         	movff	??_ISR_bassa+9,fsr2l
 18764  000098  C02F  FFE2         	movff	??_ISR_bassa+8,fsr1h
 18765  00009C  C02E  FFE1         	movff	??_ISR_bassa+7,fsr1l
 18766  0000A0  C02D  FFEA         	movff	??_ISR_bassa+6,fsr0h
 18767  0000A4  C02C  FFE9         	movff	??_ISR_bassa+5,fsr0l
 18768  0000A8  C02B  FFFB         	movff	??_ISR_bassa+4,pclatu
 18769  0000AC  C02A  FFFA         	movff	??_ISR_bassa+3,pclath
 18770  0000B0  C029  FFE0         	movff	??_ISR_bassa+2,bsr
 18771  0000B4  C028  FFE8         	movff	??_ISR_bassa+1,wreg
 18772  0000B8  C027  FFD8         	movff	??_ISR_bassa,status
 18773  0000BC  904E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 18774  0000BE  0010               	retfie	
 18775  0000C0                     __end_of_ISR_bassa:
 18776                           	opt stack 0
 18777                           pclatu	equ	0xFFB
 18778                           pclath	equ	0xFFA
 18779                           tblptru	equ	0xFF8
 18780                           tblptrh	equ	0xFF7
 18781                           tblptrl	equ	0xFF6
 18782                           tablat	equ	0xFF5
 18783                           prodh	equ	0xFF4
 18784                           prodl	equ	0xFF3
 18785                           intcon	equ	0xFF2
 18786                           postinc0	equ	0xFEE
 18787                           fsr0h	equ	0xFEA
 18788                           fsr0l	equ	0xFE9
 18789                           wreg	equ	0xFE8
 18790                           indf1	equ	0xFE7
 18791                           plusw1	equ	0xFE3
 18792                           fsr1h	equ	0xFE2
 18793                           fsr1l	equ	0xFE1
 18794                           bsr	equ	0xFE0
 18795                           indf2	equ	0xFDF
 18796                           postinc2	equ	0xFDE
 18797                           plusw2	equ	0xFDB
 18798                           fsr2h	equ	0xFDA
 18799                           fsr2l	equ	0xFD9
 18800                           status	equ	0xFD8
 18801                           
 18802 ;; *************** function _ISR_alta *****************
 18803 ;; Defined at:
 18804 ;;		line 116 in file "RemoteCan.c"
 18805 ;; Parameters:    Size  Location     Type
 18806 ;;		None
 18807 ;; Auto vars:     Size  Location     Type
 18808 ;;  i               1   36[COMRAM] unsigned char 
 18809 ;; Return value:  Size  Location     Type
 18810 ;;		None               void
 18811 ;; Registers used:
 18812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18813 ;; Tracked objects:
 18814 ;;		On entry : 0/0
 18815 ;;		On exit  : 0/0
 18816 ;;		Unchanged: 0/0
 18817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18820 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18821 ;;      Totals:         1      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18822 ;;Total ram usage:       17 bytes
 18823 ;; Hardware stack levels used:    1
 18824 ;; Hardware stack levels required when called:    7
 18825 ;; This function calls:
 18826 ;;		_CANisRxReady
 18827 ;;		_CANreceiveMessage
 18828 ;;		_LCD_Gap
 18829 ;;		_LCD_Park
 18830 ;;		i2_CAN_Tx
 18831 ;;		i2_CANisTxReady
 18832 ;;		i2_CANsendMessage
 18833 ;; This function is called by:
 18834 ;;		Interrupt level 2
 18835 ;; This function uses a non-reentrant model
 18836 ;;
 18837                           
 18838                           	psect	intcode
 18839  000008                     __pintcode:
 18840                           	opt stack 0
 18841  000008                     _ISR_alta:
 18842                           	opt stack 14
 18843                           
 18844                           ;incstack = 0
 18845  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 18846  00000A  CFFA F062          	movff	pclath,??_ISR_alta+2
 18847  00000E  CFFB F063          	movff	pclatu,??_ISR_alta+3
 18848  000012  EF65  F0A3         	goto	int_func
 18849                           pclatu	equ	0xFFB
 18850                           pclath	equ	0xFFA
 18851                           tblptru	equ	0xFF8
 18852                           tblptrh	equ	0xFF7
 18853                           tblptrl	equ	0xFF6
 18854                           tablat	equ	0xFF5
 18855                           prodh	equ	0xFF4
 18856                           prodl	equ	0xFF3
 18857                           intcon	equ	0xFF2
 18858                           postinc0	equ	0xFEE
 18859                           fsr0h	equ	0xFEA
 18860                           fsr0l	equ	0xFE9
 18861                           wreg	equ	0xFE8
 18862                           indf1	equ	0xFE7
 18863                           plusw1	equ	0xFE3
 18864                           fsr1h	equ	0xFE2
 18865                           fsr1l	equ	0xFE1
 18866                           bsr	equ	0xFE0
 18867                           indf2	equ	0xFDF
 18868                           postinc2	equ	0xFDE
 18869                           plusw2	equ	0xFDB
 18870                           fsr2h	equ	0xFDA
 18871                           fsr2l	equ	0xFD9
 18872                           status	equ	0xFD8
 18873                           
 18874                           	psect	intcode_body
 18875  0146CA                     __pintcode_body:
 18876                           	opt stack 14
 18877  0146CA                     int_func:
 18878                           	opt stack 14
 18879  0146CA  CFE9 F064          	movff	fsr0l,??_ISR_alta+4
 18880  0146CE  CFEA F065          	movff	fsr0h,??_ISR_alta+5
 18881  0146D2  CFE1 F066          	movff	fsr1l,??_ISR_alta+6
 18882  0146D6  CFE2 F067          	movff	fsr1h,??_ISR_alta+7
 18883  0146DA  CFD9 F068          	movff	fsr2l,??_ISR_alta+8
 18884  0146DE  CFDA F069          	movff	fsr2h,??_ISR_alta+9
 18885  0146E2  CFF3 F06A          	movff	prodl,??_ISR_alta+10
 18886  0146E6  CFF4 F06B          	movff	prodh,??_ISR_alta+11
 18887  0146EA  CFF6 F06C          	movff	tblptrl,??_ISR_alta+12
 18888  0146EE  CFF7 F06D          	movff	tblptrh,??_ISR_alta+13
 18889  0146F2  CFF8 F06E          	movff	tblptru,??_ISR_alta+14
 18890  0146F6  CFF5 F06F          	movff	tablat,??_ISR_alta+15
 18891                           
 18892                           ;RemoteCan.c: 117: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 18893  0146FA  A2A4               	btfss	4004,1,c	;volatile
 18894  0146FC  B0A4               	btfsc	4004,0,c	;volatile
 18895  0146FE  D001               	goto	i2l9310
 18896  014700  D0C8               	goto	i2l788
 18897  014702                     i2l9310:
 18898                           
 18899                           ;RemoteCan.c: 118: if (CANisRxReady()) {
 18900  014702  EC07  F0B4         	call	_CANisRxReady	;wreg free
 18901  014706  0900               	iorlw	0
 18902  014708  B4D8               	btfsc	status,2,c
 18903  01470A  D0BF               	goto	i2l9380
 18904                           
 18905                           ;RemoteCan.c: 119: CANreceiveMessage(&msg);
 18906  01470C  0E11               	movlw	low _msg
 18907  01470E  6E38               	movwf	CANreceiveMessage@msg,c
 18908  014710  0E01               	movlw	high _msg
 18909  014712  6E39               	movwf	CANreceiveMessage@msg+1,c
 18910  014714  EC0E  F097         	call	_CANreceiveMessage	;wreg free
 18911                           
 18912                           ;RemoteCan.c: 120: RTR_Flag = msg.RTR;
 18913  014718  0101               	movlb	1	; () banked
 18914  01471A  A11F               	btfss	(_msg+14)& (0+255),0,b
 18915  01471C  D002               	goto	i2u1213_40
 18916  01471E  884C               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18917  014720  D001               	goto	i2l9316
 18918  014722                     i2u1213_40:
 18919  014722  984C               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18920  014724                     i2l9316:
 18921                           
 18922                           ;RemoteCan.c: 121: id = msg.identifier;
 18923  014724  C111  F001         	movff	_msg,_id	;volatile
 18924  014728  C112  F002         	movff	_msg+1,_id+1	;volatile
 18925  01472C  C113  F003         	movff	_msg+2,_id+2	;volatile
 18926  014730  C114  F004         	movff	_msg+3,_id+3	;volatile
 18927                           
 18928                           ;RemoteCan.c: 122: newMessageCan = 1;
 18929  014734  8E4C               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 18930                           
 18931                           ;RemoteCan.c: 123: if (id == 0b00000000110) {
 18932  014736  0E06               	movlw	6
 18933  014738  1801               	xorwf	_id,w,c	;volatile
 18934  01473A  1002               	iorwf	_id+1,w,c	;volatile
 18935  01473C  1003               	iorwf	_id+2,w,c	;volatile
 18936  01473E  1004               	iorwf	_id+3,w,c	;volatile
 18937  014740  A4D8               	btfss	status,2,c
 18938  014742  D01A               	goto	i2l9334
 18939                           
 18940                           ;RemoteCan.c: 124: for (unsigned char i = 0; i < 8; i++) {
 18941  014744  0E00               	movlw	0
 18942  014746  6E4B               	movwf	ISR_alta@i,c
 18943  014748                     i2l9324:
 18944  014748  0E07               	movlw	7
 18945  01474A  644B               	cpfsgt	ISR_alta@i,c
 18946  01474C  D001               	goto	i2l9328
 18947  01474E  D014               	goto	i2l9334
 18948  014750                     i2l9328:
 18949                           
 18950                           ;RemoteCan.c: 125: data_speed_rx[i] = msg.data[i];
 18951  014750  504B               	movf	ISR_alta@i,w,c
 18952  014752  0D01               	mullw	1
 18953  014754  0E15               	movlw	low (_msg+4)
 18954  014756  24F3               	addwf	prodl,w,c
 18955  014758  6ED9               	movwf	fsr2l,c
 18956  01475A  0E01               	movlw	high (_msg+4)
 18957  01475C  20F4               	addwfc	prodh,w,c
 18958  01475E  6EDA               	movwf	fsr2h,c
 18959  014760  504B               	movf	ISR_alta@i,w,c
 18960  014762  0D01               	mullw	1
 18961  014764  0E00               	movlw	low _data_speed_rx
 18962  014766  24F3               	addwf	prodl,w,c
 18963  014768  6EE1               	movwf	fsr1l,c
 18964  01476A  0E01               	movlw	high _data_speed_rx
 18965  01476C  20F4               	addwfc	prodh,w,c
 18966  01476E  6EE2               	movwf	fsr1h,c
 18967  014770  CFDF FFE7          	movff	indf2,indf1
 18968  014774  2A4B               	incf	ISR_alta@i,f,c
 18969  014776  D7E8               	goto	i2l9324
 18970  014778                     i2l9334:
 18971                           
 18972                           ;RemoteCan.c: 126: }
 18973                           ;RemoteCan.c: 127: }
 18974                           ;RemoteCan.c: 129: if (id == 0b00000001011) {
 18975  014778  0E0B               	movlw	11
 18976  01477A  1801               	xorwf	_id,w,c	;volatile
 18977  01477C  1002               	iorwf	_id+1,w,c	;volatile
 18978  01477E  1003               	iorwf	_id+2,w,c	;volatile
 18979  014780  1004               	iorwf	_id+3,w,c	;volatile
 18980  014782  A4D8               	btfss	status,2,c
 18981  014784  D034               	goto	i2l777
 18982                           
 18983                           ;RemoteCan.c: 130: if (msg.data[0] == 1) {
 18984  014786  0101               	movlb	1	; () banked
 18985  014788  0515               	decf	(_msg+4)& (0+255),w,b
 18986  01478A  A4D8               	btfss	status,2,c
 18987  01478C  D005               	goto	i2l9342
 18988                           
 18989                           ; BSR set to: 1
 18990                           ;RemoteCan.c: 131: space_available = 1;
 18991  01478E  824D               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 18992                           
 18993                           ;RemoteCan.c: 132: space_gap_reached = 0;
 18994  014790  944D               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 18995                           
 18996                           ;RemoteCan.c: 133: F2_switch = 0;
 18997  014792  944C               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 18998                           
 18999                           ; BSR set to: 1
 19000                           ;RemoteCan.c: 134: LCD_Gap();
 19001  014794  EC5F  F0B1         	call	_LCD_Gap	;wreg free
 19002  014798                     i2l9342:
 19003                           
 19004                           ;RemoteCan.c: 135: }
 19005                           ;RemoteCan.c: 137: if (msg.data[0] == 2) {
 19006  014798  0E02               	movlw	2
 19007  01479A  0101               	movlb	1	; () banked
 19008  01479C  1915               	xorwf	(_msg+4)& (0+255),w,b
 19009  01479E  A4D8               	btfss	status,2,c
 19010  0147A0  D014               	goto	i2l9352
 19011                           
 19012                           ; BSR set to: 1
 19013                           ;RemoteCan.c: 138: dir = 1;
 19014  0147A2  0E01               	movlw	1
 19015  0147A4  0100               	movlb	0	; () banked
 19016  0147A6  6FE4               	movwf	_dir& (0+255),b	;volatile
 19017                           
 19018                           ;RemoteCan.c: 139: set_speed = 0;
 19019  0147A8  0E00               	movlw	0
 19020  0147AA  0100               	movlb	0	; () banked
 19021  0147AC  6FE3               	movwf	(_set_speed+1)& (0+255),b	;volatile
 19022  0147AE  0E00               	movlw	0
 19023  0147B0  6FE2               	movwf	_set_speed& (0+255),b	;volatile
 19024                           
 19025                           ;RemoteCan.c: 140: data_steering [0] = 90;
 19026  0147B2  0E5A               	movlw	90
 19027  0147B4  0100               	movlb	0	; () banked
 19028  0147B6  6FEB               	movwf	_data_steering& (0+255),b
 19029                           
 19030                           ;RemoteCan.c: 141: data_brake [0] = 0;
 19031  0147B8  0E00               	movlw	0
 19032  0147BA  6E26               	movwf	_data_brake,c
 19033                           
 19034                           ;RemoteCan.c: 142: data_brake [1] = 1;
 19035  0147BC  0E01               	movlw	1
 19036  0147BE  6E27               	movwf	_data_brake+1,c
 19037                           
 19038                           ; BSR set to: 0
 19039                           ;RemoteCan.c: 143: CAN_Tx();
 19040  0147C0  EC52  F0AF         	call	i2_CAN_Tx	;wreg free
 19041                           
 19042                           ;RemoteCan.c: 144: space_gap_reached = 1;
 19043  0147C4  844D               	bsf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 19044                           
 19045                           ;RemoteCan.c: 145: LCD_Park();
 19046  0147C6  EC37  F0B1         	call	_LCD_Park	;wreg free
 19047  0147CA                     i2l9352:
 19048                           
 19049                           ;RemoteCan.c: 146: }
 19050                           ;RemoteCan.c: 148: if (msg.data[0] == 3) {
 19051  0147CA  0E03               	movlw	3
 19052  0147CC  0101               	movlb	1	; () banked
 19053  0147CE  1915               	xorwf	(_msg+4)& (0+255),w,b
 19054  0147D0  A4D8               	btfss	status,2,c
 19055  0147D2  D00D               	goto	i2l777
 19056                           
 19057                           ; BSR set to: 1
 19058                           ;RemoteCan.c: 149: F1_switch = 0;
 19059  0147D4  924C               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 19060                           
 19061                           ; BSR set to: 1
 19062                           ;RemoteCan.c: 150: pr_time_6 = time_counter + (2000 / 10);
 19063  0147D6  0EC8               	movlw	200
 19064  0147D8  2419               	addwf	_time_counter,w,c	;volatile
 19065  0147DA  6E15               	movwf	_pr_time_6,c	;volatile
 19066  0147DC  0E00               	movlw	0
 19067  0147DE  201A               	addwfc	_time_counter+1,w,c	;volatile
 19068  0147E0  6E16               	movwf	_pr_time_6+1,c	;volatile
 19069  0147E2  0E00               	movlw	0
 19070  0147E4  201B               	addwfc	_time_counter+2,w,c	;volatile
 19071  0147E6  6E17               	movwf	_pr_time_6+2,c	;volatile
 19072  0147E8  0E00               	movlw	0
 19073  0147EA  201C               	addwfc	_time_counter+3,w,c	;volatile
 19074  0147EC  6E18               	movwf	_pr_time_6+3,c	;volatile
 19075  0147EE                     i2l777:
 19076                           
 19077                           ;RemoteCan.c: 151: }
 19078                           ;RemoteCan.c: 152: }
 19079                           ;RemoteCan.c: 154: if (id == 0b00000001110) {
 19080  0147EE  0E0E               	movlw	14
 19081  0147F0  1801               	xorwf	_id,w,c	;volatile
 19082  0147F2  1002               	iorwf	_id+1,w,c	;volatile
 19083  0147F4  1003               	iorwf	_id+2,w,c	;volatile
 19084  0147F6  1004               	iorwf	_id+3,w,c	;volatile
 19085  0147F8  A4D8               	btfss	status,2,c
 19086  0147FA  D008               	goto	i2l9360
 19087                           
 19088                           ;RemoteCan.c: 155: steering_correction_dir = msg.data[1];
 19089  0147FC  0101               	movlb	1	; () banked
 19090  0147FE  A116               	btfss	(_msg+5)& (0+255),0,b
 19091  014800  D002               	goto	i2u1223_40
 19092  014802  864D               	bsf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 19093  014804  D001               	goto	i2u1224_45
 19094  014806                     i2u1223_40:
 19095  014806  964D               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 19096  014808                     i2u1224_45:
 19097                           
 19098                           ;RemoteCan.c: 156: steering_correction = msg.data[0];
 19099  014808  C115  F0E6         	movff	_msg+4,_steering_correction	;volatile
 19100  01480C                     i2l9360:
 19101                           
 19102                           ;RemoteCan.c: 157: }
 19103                           ;RemoteCan.c: 159: if (id == 0xAA) {
 19104  01480C  0EAA               	movlw	170
 19105  01480E  1801               	xorwf	_id,w,c	;volatile
 19106  014810  1002               	iorwf	_id+1,w,c	;volatile
 19107  014812  1003               	iorwf	_id+2,w,c	;volatile
 19108  014814  1004               	iorwf	_id+3,w,c	;volatile
 19109  014816  A4D8               	btfss	status,2,c
 19110  014818  D00B               	goto	i2l9366
 19111                           
 19112                           ;RemoteCan.c: 160: user_data = msg.data[1];
 19113  01481A  C116  F021         	movff	_msg+5,_user_data
 19114  01481E  6A22               	clrf	_user_data+1,c
 19115                           
 19116                           ;RemoteCan.c: 161: user_data = ((user_data << 8) | msg.data[0]);
 19117  014820  5021               	movf	_user_data,w,c
 19118  014822  0100               	movlb	0	; () banked
 19119  014824  6F60               	movwf	??_ISR_alta& (0+255),b
 19120  014826  0101               	movlb	1	; () banked
 19121  014828  5115               	movf	(_msg+4)& (0+255),w,b
 19122  01482A  6E21               	movwf	_user_data,c
 19123  01482C  C060  F022         	movff	??_ISR_alta,_user_data+1
 19124  014830                     i2l9366:
 19125                           
 19126                           ;RemoteCan.c: 162: }
 19127                           ;RemoteCan.c: 164: if (id == 0b00000000010) {
 19128  014830  0E02               	movlw	2
 19129  014832  1801               	xorwf	_id,w,c	;volatile
 19130  014834  1002               	iorwf	_id+1,w,c	;volatile
 19131  014836  1003               	iorwf	_id+2,w,c	;volatile
 19132  014838  1004               	iorwf	_id+3,w,c	;volatile
 19133  01483A  B4D8               	btfsc	status,2,c
 19134                           
 19135                           ;RemoteCan.c: 165: if (RTR_Flag == 1) {
 19136  01483C  A84C               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19137  01483E  D025               	goto	i2l9380
 19138                           
 19139                           ;RemoteCan.c: 166: pr_time_4 = time_counter;
 19140  014840  C019  F00D         	movff	_time_counter,_pr_time_4	;volatile
 19141  014844  C01A  F00E         	movff	_time_counter+1,_pr_time_4+1	;volatile
 19142  014848  C01B  F00F         	movff	_time_counter+2,_pr_time_4+2	;volatile
 19143  01484C  C01C  F010         	movff	_time_counter+3,_pr_time_4+3	;volatile
 19144                           
 19145                           ;RemoteCan.c: 167: data[0] = 0x03;
 19146  014850  0E03               	movlw	3
 19147  014852  6E25               	movwf	_data,c
 19148                           
 19149                           ;RemoteCan.c: 168: _delay((unsigned long)((10)*(16000000/4000000.0)));
 19150  014854  0E0D               	movlw	13
 19151  014856                     i2u1266_47:
 19152  014856  2EE8               	decfsz	wreg,f,c
 19153  014858  D7FE               	goto	i2u1266_47
 19154  01485A  F000               	nop	
 19155  01485C                     i2l9376:
 19156  01485C  ECA6  F0B3         	call	i2_CANisTxReady	;wreg free
 19157  014860  06E8               	decf	wreg,f,c
 19158  014862  A4D8               	btfss	status,2,c
 19159  014864  D7FB               	goto	i2l9376
 19160                           
 19161                           ;RemoteCan.c: 170: CANsendMessage(0b00000000010, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 19162  014866  0E02               	movlw	2
 19163  014868  6E38               	movwf	i2CANsendMessage@identifier,c
 19164  01486A  0E00               	movlw	0
 19165  01486C  6E39               	movwf	i2CANsendMessage@identifier+1,c
 19166  01486E  0E00               	movlw	0
 19167  014870  6E3A               	movwf	i2CANsendMessage@identifier+2,c
 19168  014872  0E00               	movlw	0
 19169  014874  6E3B               	movwf	i2CANsendMessage@identifier+3,c
 19170  014876  0E25               	movlw	low _data
 19171  014878  6E3C               	movwf	i2CANsendMessage@data,c
 19172  01487A  0E00               	movlw	high _data
 19173  01487C  6E3D               	movwf	i2CANsendMessage@data+1,c
 19174  01487E  0E08               	movlw	8
 19175  014880  6E3E               	movwf	i2CANsendMessage@dataLength,c
 19176  014882  0EBC               	movlw	188
 19177  014884  6E3F               	movwf	i2CANsendMessage@flags,c
 19178  014886  EC39  F091         	call	i2_CANsendMessage	;wreg free
 19179  01488A                     i2l9380:
 19180                           
 19181                           ;RemoteCan.c: 176: }
 19182                           ;RemoteCan.c: 177: }
 19183                           ;RemoteCan.c: 178: }
 19184                           ;RemoteCan.c: 179: LATDbits.LATD2 = 1;
 19185  01488A  848C               	bsf	3980,2,c	;volatile
 19186                           
 19187                           ;RemoteCan.c: 180: LATDbits.LATD3 = 1;
 19188  01488C  868C               	bsf	3980,3,c	;volatile
 19189                           
 19190                           ;RemoteCan.c: 181: PIR3bits.RXB1IF = 0;
 19191  01488E  92A4               	bcf	4004,1,c	;volatile
 19192                           
 19193                           ;RemoteCan.c: 182: PIR3bits.RXB0IF = 0;
 19194  014890  90A4               	bcf	4004,0,c	;volatile
 19195  014892                     i2l788:
 19196  014892  C06F  FFF5         	movff	??_ISR_alta+15,tablat
 19197  014896  C06E  FFF8         	movff	??_ISR_alta+14,tblptru
 19198  01489A  C06D  FFF7         	movff	??_ISR_alta+13,tblptrh
 19199  01489E  C06C  FFF6         	movff	??_ISR_alta+12,tblptrl
 19200  0148A2  C06B  FFF4         	movff	??_ISR_alta+11,prodh
 19201  0148A6  C06A  FFF3         	movff	??_ISR_alta+10,prodl
 19202  0148AA  C069  FFDA         	movff	??_ISR_alta+9,fsr2h
 19203  0148AE  C068  FFD9         	movff	??_ISR_alta+8,fsr2l
 19204  0148B2  C067  FFE2         	movff	??_ISR_alta+7,fsr1h
 19205  0148B6  C066  FFE1         	movff	??_ISR_alta+6,fsr1l
 19206  0148BA  C065  FFEA         	movff	??_ISR_alta+5,fsr0h
 19207  0148BE  C064  FFE9         	movff	??_ISR_alta+4,fsr0l
 19208  0148C2  C063  FFFB         	movff	??_ISR_alta+3,pclatu
 19209  0148C6  C062  FFFA         	movff	??_ISR_alta+2,pclath
 19210  0148CA  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 19211  0148CC  0011               	retfie		f
 19212  0148CE                     __end_of_ISR_alta:
 19213                           	opt stack 0
 19214                           pclatu	equ	0xFFB
 19215                           pclath	equ	0xFFA
 19216                           tblptru	equ	0xFF8
 19217                           tblptrh	equ	0xFF7
 19218                           tblptrl	equ	0xFF6
 19219                           tablat	equ	0xFF5
 19220                           prodh	equ	0xFF4
 19221                           prodl	equ	0xFF3
 19222                           intcon	equ	0xFF2
 19223                           postinc0	equ	0xFEE
 19224                           fsr0h	equ	0xFEA
 19225                           fsr0l	equ	0xFE9
 19226                           wreg	equ	0xFE8
 19227                           indf1	equ	0xFE7
 19228                           plusw1	equ	0xFE3
 19229                           fsr1h	equ	0xFE2
 19230                           fsr1l	equ	0xFE1
 19231                           bsr	equ	0xFE0
 19232                           indf2	equ	0xFDF
 19233                           postinc2	equ	0xFDE
 19234                           plusw2	equ	0xFDB
 19235                           fsr2h	equ	0xFDA
 19236                           fsr2l	equ	0xFD9
 19237                           status	equ	0xFD8
 19238                           
 19239 ;; *************** function i2_CAN_Tx *****************
 19240 ;; Defined at:
 19241 ;;		line 514 in file "RemoteCan.c"
 19242 ;; Parameters:    Size  Location     Type
 19243 ;;		None
 19244 ;; Auto vars:     Size  Location     Type
 19245 ;;		None
 19246 ;; Return value:  Size  Location     Type
 19247 ;;		None               void
 19248 ;; Registers used:
 19249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19250 ;; Tracked objects:
 19251 ;;		On entry : 0/0
 19252 ;;		On exit  : 0/0
 19253 ;;		Unchanged: 0/0
 19254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19259 ;;Total ram usage:        0 bytes
 19260 ;; Hardware stack levels used:    1
 19261 ;; Hardware stack levels required when called:    1
 19262 ;; This function calls:
 19263 ;;		i2_CANisTxReady
 19264 ;;		i2_CANsendMessage
 19265 ;; This function is called by:
 19266 ;;		_ISR_alta
 19267 ;; This function uses a non-reentrant model
 19268 ;;
 19269                           
 19270                           	psect	text55
 19271  015EA4                     __ptext55:
 19272                           	opt stack 0
 19273  015EA4                     i2_CAN_Tx:
 19274                           	opt stack 19
 19275  015EA4                     i2l7680:
 19276  015EA4  ECA6  F0B3         	call	i2_CANisTxReady	;wreg free
 19277  015EA8  06E8               	decf	wreg,f,c
 19278  015EAA  A4D8               	btfss	status,2,c
 19279  015EAC  D7FB               	goto	i2l7680
 19280                           
 19281                           ;RemoteCan.c: 517: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 19282  015EAE  0E05               	movlw	5
 19283  015EB0  6E38               	movwf	i2CANsendMessage@identifier,c
 19284  015EB2  0E00               	movlw	0
 19285  015EB4  6E39               	movwf	i2CANsendMessage@identifier+1,c
 19286  015EB6  0E00               	movlw	0
 19287  015EB8  6E3A               	movwf	i2CANsendMessage@identifier+2,c
 19288  015EBA  0E00               	movlw	0
 19289  015EBC  6E3B               	movwf	i2CANsendMessage@identifier+3,c
 19290  015EBE  0EEB               	movlw	low _data_steering
 19291  015EC0  6E3C               	movwf	i2CANsendMessage@data,c
 19292  015EC2  0E00               	movlw	high _data_steering
 19293  015EC4  6E3D               	movwf	i2CANsendMessage@data+1,c
 19294  015EC6  0E08               	movlw	8
 19295  015EC8  6E3E               	movwf	i2CANsendMessage@dataLength,c
 19296  015ECA  0EBC               	movlw	188
 19297  015ECC  6E3F               	movwf	i2CANsendMessage@flags,c
 19298  015ECE  EC39  F091         	call	i2_CANsendMessage	;wreg free
 19299                           
 19300                           ;RemoteCan.c: 520: data_speed[0] = set_speed;
 19301  015ED2  C0E2  F0EA         	movff	_set_speed,_data_speed	;volatile
 19302                           
 19303                           ;RemoteCan.c: 521: data_speed[1] = (set_speed >> 8);
 19304  015ED6  0100               	movlb	0	; () banked
 19305  015ED8  51E3               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 19306  015EDA  0100               	movlb	0	; () banked
 19307  015EDC  6FEB               	movwf	(_data_speed+1)& (0+255),b
 19308                           
 19309                           ; BSR set to: 0
 19310                           ;RemoteCan.c: 522: data_speed[2] = dir;
 19311  015EDE  C0E4  F0EC         	movff	_dir,_data_speed+2	;volatile
 19312  015EE2                     i2l7690:
 19313  015EE2  ECA6  F0B3         	call	i2_CANisTxReady	;wreg free
 19314  015EE6  06E8               	decf	wreg,f,c
 19315  015EE8  A4D8               	btfss	status,2,c
 19316  015EEA  D7FB               	goto	i2l7690
 19317                           
 19318                           ;RemoteCan.c: 524: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 19319  015EEC  0E03               	movlw	3
 19320  015EEE  6E38               	movwf	i2CANsendMessage@identifier,c
 19321  015EF0  0E00               	movlw	0
 19322  015EF2  6E39               	movwf	i2CANsendMessage@identifier+1,c
 19323  015EF4  0E00               	movlw	0
 19324  015EF6  6E3A               	movwf	i2CANsendMessage@identifier+2,c
 19325  015EF8  0E00               	movlw	0
 19326  015EFA  6E3B               	movwf	i2CANsendMessage@identifier+3,c
 19327  015EFC  0EEA               	movlw	low _data_speed
 19328  015EFE  6E3C               	movwf	i2CANsendMessage@data,c
 19329  015F00  0E00               	movlw	high _data_speed
 19330  015F02  6E3D               	movwf	i2CANsendMessage@data+1,c
 19331  015F04  0E08               	movlw	8
 19332  015F06  6E3E               	movwf	i2CANsendMessage@dataLength,c
 19333  015F08  0EBC               	movlw	188
 19334  015F0A  6E3F               	movwf	i2CANsendMessage@flags,c
 19335  015F0C  EC39  F091         	call	i2_CANsendMessage	;wreg free
 19336  015F10                     i2l7694:
 19337  015F10  ECA6  F0B3         	call	i2_CANisTxReady	;wreg free
 19338  015F14  06E8               	decf	wreg,f,c
 19339  015F16  A4D8               	btfss	status,2,c
 19340  015F18  D7FB               	goto	i2l7694
 19341                           
 19342                           ;RemoteCan.c: 528: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_1);
 19343  015F1A  0E04               	movlw	4
 19344  015F1C  6E38               	movwf	i2CANsendMessage@identifier,c
 19345  015F1E  0E00               	movlw	0
 19346  015F20  6E39               	movwf	i2CANsendMessage@identifier+1,c
 19347  015F22  0E00               	movlw	0
 19348  015F24  6E3A               	movwf	i2CANsendMessage@identifier+2,c
 19349  015F26  0E00               	movlw	0
 19350  015F28  6E3B               	movwf	i2CANsendMessage@identifier+3,c
 19351  015F2A  0E26               	movlw	low _data_brake
 19352  015F2C  6E3C               	movwf	i2CANsendMessage@data,c
 19353  015F2E  0E00               	movlw	high _data_brake
 19354  015F30  6E3D               	movwf	i2CANsendMessage@data+1,c
 19355  015F32  0E08               	movlw	8
 19356  015F34  6E3E               	movwf	i2CANsendMessage@dataLength,c
 19357  015F36  0EBD               	movlw	189
 19358  015F38  6E3F               	movwf	i2CANsendMessage@flags,c
 19359  015F3A  EC39  F091         	call	i2_CANsendMessage	;wreg free
 19360  015F3E  0012               	return		;funcret
 19361  015F40                     __end_ofi2_CAN_Tx:
 19362                           	opt stack 0
 19363                           pclatu	equ	0xFFB
 19364                           pclath	equ	0xFFA
 19365                           tblptru	equ	0xFF8
 19366                           tblptrh	equ	0xFF7
 19367                           tblptrl	equ	0xFF6
 19368                           tablat	equ	0xFF5
 19369                           prodh	equ	0xFF4
 19370                           prodl	equ	0xFF3
 19371                           intcon	equ	0xFF2
 19372                           postinc0	equ	0xFEE
 19373                           fsr0h	equ	0xFEA
 19374                           fsr0l	equ	0xFE9
 19375                           wreg	equ	0xFE8
 19376                           indf1	equ	0xFE7
 19377                           plusw1	equ	0xFE3
 19378                           fsr1h	equ	0xFE2
 19379                           fsr1l	equ	0xFE1
 19380                           bsr	equ	0xFE0
 19381                           indf2	equ	0xFDF
 19382                           postinc2	equ	0xFDE
 19383                           plusw2	equ	0xFDB
 19384                           fsr2h	equ	0xFDA
 19385                           fsr2l	equ	0xFD9
 19386                           status	equ	0xFD8
 19387                           
 19388 ;; *************** function i2_CANsendMessage *****************
 19389 ;; Defined at:
 19390 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 19391 ;; Parameters:    Size  Location     Type
 19392 ;;  identifier      4   17[COMRAM] unsigned long 
 19393 ;;  data            2   21[COMRAM] PTR unsigned char 
 19394 ;;		 -> data_speed(1), park_assist_state(8), data(1), data_brake(1), 
 19395 ;;		 -> data_steering(1), 
 19396 ;;  dataLength      1   23[COMRAM] unsigned char 
 19397 ;;  flags           1   24[COMRAM] enum E16909
 19398 ;; Auto vars:     Size  Location     Type
 19399 ;;  CANsendMessa    4   29[COMRAM] unsigned long 
 19400 ;; Return value:  Size  Location     Type
 19401 ;;		None               void
 19402 ;; Registers used:
 19403 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19404 ;; Tracked objects:
 19405 ;;		On entry : 0/0
 19406 ;;		On exit  : 0/0
 19407 ;;		Unchanged: 0/0
 19408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19409 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19410 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19411 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19412 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19413 ;;Total ram usage:       16 bytes
 19414 ;; Hardware stack levels used:    1
 19415 ;; This function calls:
 19416 ;;		Nothing
 19417 ;; This function is called by:
 19418 ;;		_ISR_alta
 19419 ;;		i2_CAN_Tx
 19420 ;; This function uses a non-reentrant model
 19421 ;;
 19422                           
 19423                           	psect	text56
 19424  012272                     __ptext56:
 19425                           	opt stack 0
 19426  012272                     i2_CANsendMessage:
 19427                           	opt stack 20
 19428                           
 19429                           ;inc\CANlib.h: 296: unsigned long tamp;
 19430                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 19431                           
 19432                           ;incstack = 0
 19433  012272  010F               	movlb	15	; () banked
 19434  012274  B740               	btfsc	64,3,b	;volatile
 19435  012276  D115               	goto	i2l381
 19436                           
 19437                           ; BSR set to: 15
 19438                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 19439  012278  C03E  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 19440                           
 19441                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 19442  01227C  AC3F               	btfss	i2CANsendMessage@flags,6,c
 19443  01227E  D003               	goto	i2l382
 19444                           
 19445                           ; BSR set to: 15
 19446                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 19447  012280  010F               	movlb	15	; () banked
 19448  012282  8D45               	bsf	69,6,b	;volatile
 19449  012284  D002               	goto	i2l383
 19450  012286                     i2l382:
 19451                           
 19452                           ; BSR set to: 15
 19453                           ;inc\CANlib.h: 302: else
 19454                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 19455  012286  010F               	movlb	15	; () banked
 19456  012288  9D45               	bcf	69,6,b	;volatile
 19457  01228A                     i2l383:
 19458                           
 19459                           ; BSR set to: 15
 19460                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 19461  01228A  A63F               	btfss	i2CANsendMessage@flags,3,c
 19462  01228C  D066               	goto	i2l384
 19463                           
 19464                           ; BSR set to: 15
 19465                           ;inc\CANlib.h: 306: {
 19466                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 19467  01228E  5038               	movf	i2CANsendMessage@identifier,w,c
 19468  012290  6E44               	movwf	i2CANsendMessage@tamp,c
 19469  012292  6A45               	clrf	i2CANsendMessage@tamp+1,c
 19470  012294  6A46               	clrf	i2CANsendMessage@tamp+2,c
 19471  012296  6A47               	clrf	i2CANsendMessage@tamp+3,c
 19472                           
 19473                           ; BSR set to: 15
 19474                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 19475  012298  C044  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 19476                           
 19477                           ; BSR set to: 15
 19478                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 19479  01229C  0E00               	movlw	0
 19480  01229E  1438               	andwf	i2CANsendMessage@identifier,w,c
 19481  0122A0  6E44               	movwf	i2CANsendMessage@tamp,c
 19482  0122A2  0EFF               	movlw	255
 19483  0122A4  1439               	andwf	i2CANsendMessage@identifier+1,w,c
 19484  0122A6  6E45               	movwf	i2CANsendMessage@tamp+1,c
 19485  0122A8  0E00               	movlw	0
 19486  0122AA  143A               	andwf	i2CANsendMessage@identifier+2,w,c
 19487  0122AC  6E46               	movwf	i2CANsendMessage@tamp+2,c
 19488  0122AE  0E00               	movlw	0
 19489  0122B0  143B               	andwf	i2CANsendMessage@identifier+3,w,c
 19490  0122B2  6E47               	movwf	i2CANsendMessage@tamp+3,c
 19491                           
 19492                           ; BSR set to: 15
 19493                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 19494  0122B4  C044  F040         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19495  0122B8  C045  F041         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19496  0122BC  C046  F042         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19497  0122C0  C047  F043         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19498  0122C4  C041  F040         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19499  0122C8  C042  F041         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19500  0122CC  C043  F042         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19501  0122D0  6A43               	clrf	??i2_CANsendMessage+3,c
 19502  0122D2  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19503  0122D6  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19504  0122DA  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19505  0122DE  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19506                           
 19507                           ; BSR set to: 15
 19508                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 19509  0122E2  C044  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 19510                           
 19511                           ; BSR set to: 15
 19512                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 19513  0122E6  0E00               	movlw	0
 19514  0122E8  010F               	movlb	15	; () banked
 19515  0122EA  6F42               	movwf	66,b	;volatile
 19516                           
 19517                           ; BSR set to: 15
 19518                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 19519  0122EC  010F               	movlb	15	; () banked
 19520  0122EE  8742               	bsf	66,3,b	;volatile
 19521                           
 19522                           ; BSR set to: 15
 19523                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 19524  0122F0  A03A               	btfss	i2CANsendMessage@identifier+2,0,c
 19525  0122F2  D002               	goto	i2l385
 19526                           
 19527                           ; BSR set to: 15
 19528                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 19529  0122F4  010F               	movlb	15	; () banked
 19530  0122F6  8142               	bsf	66,0,b	;volatile
 19531  0122F8                     i2l385:
 19532                           
 19533                           ; BSR set to: 15
 19534                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 19535  0122F8  A23A               	btfss	i2CANsendMessage@identifier+2,1,c
 19536  0122FA  D002               	goto	i2l386
 19537                           
 19538                           ; BSR set to: 15
 19539                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 19540  0122FC  010F               	movlb	15	; () banked
 19541  0122FE  8342               	bsf	66,1,b	;volatile
 19542  012300                     i2l386:
 19543                           
 19544                           ; BSR set to: 15
 19545                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 19546  012300  A43A               	btfss	i2CANsendMessage@identifier+2,2,c
 19547  012302  D002               	goto	i2l387
 19548                           
 19549                           ; BSR set to: 15
 19550                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 19551  012304  010F               	movlb	15	; () banked
 19552  012306  8B42               	bsf	66,5,b	;volatile
 19553  012308                     i2l387:
 19554                           
 19555                           ; BSR set to: 15
 19556                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 19557  012308  A63A               	btfss	i2CANsendMessage@identifier+2,3,c
 19558  01230A  D002               	goto	i2l388
 19559                           
 19560                           ; BSR set to: 15
 19561                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 19562  01230C  010F               	movlb	15	; () banked
 19563  01230E  8D42               	bsf	66,6,b	;volatile
 19564  012310                     i2l388:
 19565                           
 19566                           ; BSR set to: 15
 19567                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 19568  012310  A83A               	btfss	i2CANsendMessage@identifier+2,4,c
 19569  012312  D002               	goto	i2l7012
 19570                           
 19571                           ; BSR set to: 15
 19572                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 19573  012314  010F               	movlb	15	; () banked
 19574  012316  8F42               	bsf	66,7,b	;volatile
 19575  012318                     i2l7012:
 19576                           
 19577                           ; BSR set to: 15
 19578                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 19579  012318  C038  F040         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19580  01231C  C039  F041         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19581  012320  C03A  F042         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19582  012324  C03B  F043         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19583  012328  0E16               	movlw	22
 19584  01232A  D005               	goto	i2u877_40
 19585  01232C                     i2u877_45:
 19586  01232C  90D8               	bcf	status,0,c
 19587  01232E  3243               	rrcf	??i2_CANsendMessage+3,f,c
 19588  012330  3242               	rrcf	??i2_CANsendMessage+2,f,c
 19589  012332  3241               	rrcf	??i2_CANsendMessage+1,f,c
 19590  012334  3240               	rrcf	??i2_CANsendMessage,f,c
 19591  012336                     i2u877_40:
 19592  012336  2EE8               	decfsz	wreg,f,c
 19593  012338  D7F9               	goto	i2u877_45
 19594  01233A  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19595  01233E  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19596  012342  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19597  012346  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19598                           
 19599                           ; BSR set to: 15
 19600                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 19601  01234A  5044               	movf	i2CANsendMessage@tamp,w,c
 19602  01234C  6E44               	movwf	i2CANsendMessage@tamp,c
 19603  01234E  6A45               	clrf	i2CANsendMessage@tamp+1,c
 19604  012350  6A46               	clrf	i2CANsendMessage@tamp+2,c
 19605  012352  6A47               	clrf	i2CANsendMessage@tamp+3,c
 19606                           
 19607                           ; BSR set to: 15
 19608                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 19609  012354  C044  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 19610                           
 19611                           ;inc\CANlib.h: 332: }
 19612  012358  D04D               	goto	i2l7032
 19613  01235A                     i2l384:
 19614                           
 19615                           ; BSR set to: 15
 19616                           ;inc\CANlib.h: 334: else
 19617                           ;inc\CANlib.h: 336: {
 19618                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 19619  01235A  010F               	movlb	15	; () banked
 19620  01235C  9742               	bcf	66,3,b	;volatile
 19621                           
 19622                           ; BSR set to: 15
 19623                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 19624  01235E  C038  F040         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19625  012362  C039  F041         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19626  012366  C03A  F042         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19627  01236A  C03B  F043         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19628  01236E  0E04               	movlw	4
 19629  012370  D005               	goto	i2u878_40
 19630  012372                     i2u878_45:
 19631  012372  90D8               	bcf	status,0,c
 19632  012374  3243               	rrcf	??i2_CANsendMessage+3,f,c
 19633  012376  3242               	rrcf	??i2_CANsendMessage+2,f,c
 19634  012378  3241               	rrcf	??i2_CANsendMessage+1,f,c
 19635  01237A  3240               	rrcf	??i2_CANsendMessage,f,c
 19636  01237C                     i2u878_40:
 19637  01237C  2EE8               	decfsz	wreg,f,c
 19638  01237E  D7F9               	goto	i2u878_45
 19639  012380  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19640  012384  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19641  012388  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19642  01238C  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19643                           
 19644                           ; BSR set to: 15
 19645                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 19646  012390  5044               	movf	i2CANsendMessage@tamp,w,c
 19647  012392  6E44               	movwf	i2CANsendMessage@tamp,c
 19648  012394  6A45               	clrf	i2CANsendMessage@tamp+1,c
 19649  012396  6A46               	clrf	i2CANsendMessage@tamp+2,c
 19650  012398  6A47               	clrf	i2CANsendMessage@tamp+3,c
 19651                           
 19652                           ; BSR set to: 15
 19653                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 19654  01239A  C044  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 19655                           
 19656                           ; BSR set to: 15
 19657                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 19658  01239E  0E07               	movlw	7
 19659  0123A0  1438               	andwf	i2CANsendMessage@identifier,w,c
 19660  0123A2  6E44               	movwf	i2CANsendMessage@tamp,c
 19661  0123A4  0E00               	movlw	0
 19662  0123A6  1439               	andwf	i2CANsendMessage@identifier+1,w,c
 19663  0123A8  6E45               	movwf	i2CANsendMessage@tamp+1,c
 19664  0123AA  0E00               	movlw	0
 19665  0123AC  143A               	andwf	i2CANsendMessage@identifier+2,w,c
 19666  0123AE  6E46               	movwf	i2CANsendMessage@tamp+2,c
 19667  0123B0  0E00               	movlw	0
 19668  0123B2  143B               	andwf	i2CANsendMessage@identifier+3,w,c
 19669  0123B4  6E47               	movwf	i2CANsendMessage@tamp+3,c
 19670                           
 19671                           ; BSR set to: 15
 19672                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 19673  0123B6  C044  F040         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19674  0123BA  C045  F041         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19675  0123BE  C046  F042         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19676  0123C2  C047  F043         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19677  0123C6  0E05               	movlw	5
 19678  0123C8                     i2u879_45:
 19679  0123C8  90D8               	bcf	status,0,c
 19680  0123CA  3640               	rlcf	??i2_CANsendMessage,f,c
 19681  0123CC  3641               	rlcf	??i2_CANsendMessage+1,f,c
 19682  0123CE  3642               	rlcf	??i2_CANsendMessage+2,f,c
 19683  0123D0  3643               	rlcf	??i2_CANsendMessage+3,f,c
 19684  0123D2  2EE8               	decfsz	wreg,f,c
 19685  0123D4  D7F9               	goto	i2u879_45
 19686  0123D6  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19687  0123DA  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19688  0123DE  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19689  0123E2  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19690                           
 19691                           ; BSR set to: 15
 19692                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 19693  0123E6  010F               	movlb	15	; () banked
 19694  0123E8  5142               	movf	66,w,b	;volatile
 19695  0123EA  0B1F               	andlw	31
 19696  0123EC  010F               	movlb	15	; () banked
 19697  0123EE  6F42               	movwf	66,b	;volatile
 19698                           
 19699                           ; BSR set to: 15
 19700                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 19701  0123F0  C044  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 19702  0123F4                     i2l7032:
 19703                           
 19704                           ; BSR set to: 15
 19705                           ;inc\CANlib.h: 347: }
 19706                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 19707  0123F4  A03F               	btfss	i2CANsendMessage@flags,0,c
 19708  0123F6  D003               	goto	i2l391
 19709                           
 19710                           ; BSR set to: 15
 19711                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 19712  0123F8  010F               	movlb	15	; () banked
 19713  0123FA  8140               	bsf	64,0,b	;volatile
 19714  0123FC  D002               	goto	i2l392
 19715  0123FE                     i2l391:
 19716                           
 19717                           ; BSR set to: 15
 19718                           ;inc\CANlib.h: 351: else
 19719                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 19720  0123FE  010F               	movlb	15	; () banked
 19721  012400  9140               	bcf	64,0,b	;volatile
 19722  012402                     i2l392:
 19723                           
 19724                           ; BSR set to: 15
 19725                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 19726  012402  A23F               	btfss	i2CANsendMessage@flags,1,c
 19727  012404  D003               	goto	i2l393
 19728                           
 19729                           ; BSR set to: 15
 19730                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 19731  012406  010F               	movlb	15	; () banked
 19732  012408  8340               	bsf	64,1,b	;volatile
 19733  01240A  D002               	goto	i2l7038
 19734  01240C                     i2l393:
 19735                           
 19736                           ; BSR set to: 15
 19737                           ;inc\CANlib.h: 355: else
 19738                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 19739  01240C  010F               	movlb	15	; () banked
 19740  01240E  9340               	bcf	64,1,b	;volatile
 19741  012410                     i2l7038:
 19742                           
 19743                           ; BSR set to: 15
 19744                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 19745  012410  C03C  FFD9         	movff	i2CANsendMessage@data,fsr2l
 19746  012414  C03D  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 19747  012418  50DF               	movf	indf2,w,c
 19748  01241A  010F               	movlb	15	; () banked
 19749  01241C  6F46               	movwf	70,b	;volatile
 19750                           
 19751                           ; BSR set to: 15
 19752                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 19753  01241E  EE20 F001          	lfsr	2,1
 19754  012422  503C               	movf	i2CANsendMessage@data,w,c
 19755  012424  26D9               	addwf	fsr2l,f,c
 19756  012426  503D               	movf	i2CANsendMessage@data+1,w,c
 19757  012428  22DA               	addwfc	fsr2h,f,c
 19758  01242A  50DF               	movf	indf2,w,c
 19759  01242C  010F               	movlb	15	; () banked
 19760  01242E  6F47               	movwf	71,b	;volatile
 19761                           
 19762                           ; BSR set to: 15
 19763                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 19764  012430  EE20 F002          	lfsr	2,2
 19765  012434  503C               	movf	i2CANsendMessage@data,w,c
 19766  012436  26D9               	addwf	fsr2l,f,c
 19767  012438  503D               	movf	i2CANsendMessage@data+1,w,c
 19768  01243A  22DA               	addwfc	fsr2h,f,c
 19769  01243C  50DF               	movf	indf2,w,c
 19770  01243E  010F               	movlb	15	; () banked
 19771  012440  6F48               	movwf	72,b	;volatile
 19772                           
 19773                           ; BSR set to: 15
 19774                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 19775  012442  EE20 F003          	lfsr	2,3
 19776  012446  503C               	movf	i2CANsendMessage@data,w,c
 19777  012448  26D9               	addwf	fsr2l,f,c
 19778  01244A  503D               	movf	i2CANsendMessage@data+1,w,c
 19779  01244C  22DA               	addwfc	fsr2h,f,c
 19780  01244E  50DF               	movf	indf2,w,c
 19781  012450  010F               	movlb	15	; () banked
 19782  012452  6F49               	movwf	73,b	;volatile
 19783                           
 19784                           ; BSR set to: 15
 19785                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 19786  012454  EE20 F004          	lfsr	2,4
 19787  012458  503C               	movf	i2CANsendMessage@data,w,c
 19788  01245A  26D9               	addwf	fsr2l,f,c
 19789  01245C  503D               	movf	i2CANsendMessage@data+1,w,c
 19790  01245E  22DA               	addwfc	fsr2h,f,c
 19791  012460  50DF               	movf	indf2,w,c
 19792  012462  010F               	movlb	15	; () banked
 19793  012464  6F4A               	movwf	74,b	;volatile
 19794                           
 19795                           ; BSR set to: 15
 19796                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 19797  012466  EE20 F005          	lfsr	2,5
 19798  01246A  503C               	movf	i2CANsendMessage@data,w,c
 19799  01246C  26D9               	addwf	fsr2l,f,c
 19800  01246E  503D               	movf	i2CANsendMessage@data+1,w,c
 19801  012470  22DA               	addwfc	fsr2h,f,c
 19802  012472  50DF               	movf	indf2,w,c
 19803  012474  010F               	movlb	15	; () banked
 19804  012476  6F4B               	movwf	75,b	;volatile
 19805                           
 19806                           ; BSR set to: 15
 19807                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 19808  012478  EE20 F006          	lfsr	2,6
 19809  01247C  503C               	movf	i2CANsendMessage@data,w,c
 19810  01247E  26D9               	addwf	fsr2l,f,c
 19811  012480  503D               	movf	i2CANsendMessage@data+1,w,c
 19812  012482  22DA               	addwfc	fsr2h,f,c
 19813  012484  50DF               	movf	indf2,w,c
 19814  012486  010F               	movlb	15	; () banked
 19815  012488  6F4C               	movwf	76,b	;volatile
 19816                           
 19817                           ; BSR set to: 15
 19818                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 19819  01248A  EE20 F007          	lfsr	2,7
 19820  01248E  503C               	movf	i2CANsendMessage@data,w,c
 19821  012490  26D9               	addwf	fsr2l,f,c
 19822  012492  503D               	movf	i2CANsendMessage@data+1,w,c
 19823  012494  22DA               	addwfc	fsr2h,f,c
 19824  012496  50DF               	movf	indf2,w,c
 19825  012498  010F               	movlb	15	; () banked
 19826  01249A  6F4D               	movwf	77,b	;volatile
 19827                           
 19828                           ; BSR set to: 15
 19829                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 19830  01249C  010F               	movlb	15	; () banked
 19831  01249E  8740               	bsf	64,3,b	;volatile
 19832                           
 19833                           ; BSR set to: 15
 19834                           ;inc\CANlib.h: 368: return;
 19835  0124A0  0012               	return	
 19836  0124A2                     i2l381:
 19837                           
 19838                           ; BSR set to: 15
 19839                           ;inc\CANlib.h: 369: }
 19840                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 19841  0124A2  010F               	movlb	15	; () banked
 19842  0124A4  B730               	btfsc	48,3,b	;volatile
 19843  0124A6  D115               	goto	i2l396
 19844                           
 19845                           ; BSR set to: 15
 19846                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 19847  0124A8  C03E  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 19848                           
 19849                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 19850  0124AC  AC3F               	btfss	i2CANsendMessage@flags,6,c
 19851  0124AE  D003               	goto	i2l397
 19852                           
 19853                           ; BSR set to: 15
 19854                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 19855  0124B0  010F               	movlb	15	; () banked
 19856  0124B2  8D35               	bsf	53,6,b	;volatile
 19857  0124B4  D002               	goto	i2l398
 19858  0124B6                     i2l397:
 19859                           
 19860                           ; BSR set to: 15
 19861                           ;inc\CANlib.h: 378: else
 19862                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 19863  0124B6  010F               	movlb	15	; () banked
 19864  0124B8  9D35               	bcf	53,6,b	;volatile
 19865  0124BA                     i2l398:
 19866                           
 19867                           ; BSR set to: 15
 19868                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 19869  0124BA  A63F               	btfss	i2CANsendMessage@flags,3,c
 19870  0124BC  D066               	goto	i2l399
 19871                           
 19872                           ; BSR set to: 15
 19873                           ;inc\CANlib.h: 382: {
 19874                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 19875  0124BE  5038               	movf	i2CANsendMessage@identifier,w,c
 19876  0124C0  6E44               	movwf	i2CANsendMessage@tamp,c
 19877  0124C2  6A45               	clrf	i2CANsendMessage@tamp+1,c
 19878  0124C4  6A46               	clrf	i2CANsendMessage@tamp+2,c
 19879  0124C6  6A47               	clrf	i2CANsendMessage@tamp+3,c
 19880                           
 19881                           ; BSR set to: 15
 19882                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 19883  0124C8  C044  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 19884                           
 19885                           ; BSR set to: 15
 19886                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 19887  0124CC  0E00               	movlw	0
 19888  0124CE  1438               	andwf	i2CANsendMessage@identifier,w,c
 19889  0124D0  6E44               	movwf	i2CANsendMessage@tamp,c
 19890  0124D2  0EFF               	movlw	255
 19891  0124D4  1439               	andwf	i2CANsendMessage@identifier+1,w,c
 19892  0124D6  6E45               	movwf	i2CANsendMessage@tamp+1,c
 19893  0124D8  0E00               	movlw	0
 19894  0124DA  143A               	andwf	i2CANsendMessage@identifier+2,w,c
 19895  0124DC  6E46               	movwf	i2CANsendMessage@tamp+2,c
 19896  0124DE  0E00               	movlw	0
 19897  0124E0  143B               	andwf	i2CANsendMessage@identifier+3,w,c
 19898  0124E2  6E47               	movwf	i2CANsendMessage@tamp+3,c
 19899                           
 19900                           ; BSR set to: 15
 19901                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 19902  0124E4  C044  F040         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19903  0124E8  C045  F041         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19904  0124EC  C046  F042         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19905  0124F0  C047  F043         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19906  0124F4  C041  F040         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19907  0124F8  C042  F041         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19908  0124FC  C043  F042         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19909  012500  6A43               	clrf	??i2_CANsendMessage+3,c
 19910  012502  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19911  012506  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19912  01250A  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19913  01250E  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19914                           
 19915                           ; BSR set to: 15
 19916                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 19917  012512  C044  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 19918                           
 19919                           ; BSR set to: 15
 19920                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 19921  012516  0E00               	movlw	0
 19922  012518  010F               	movlb	15	; () banked
 19923  01251A  6F32               	movwf	50,b	;volatile
 19924                           
 19925                           ; BSR set to: 15
 19926                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 19927  01251C  010F               	movlb	15	; () banked
 19928  01251E  8732               	bsf	50,3,b	;volatile
 19929                           
 19930                           ; BSR set to: 15
 19931                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 19932  012520  A03A               	btfss	i2CANsendMessage@identifier+2,0,c
 19933  012522  D002               	goto	i2l400
 19934                           
 19935                           ; BSR set to: 15
 19936                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 19937  012524  010F               	movlb	15	; () banked
 19938  012526  8132               	bsf	50,0,b	;volatile
 19939  012528                     i2l400:
 19940                           
 19941                           ; BSR set to: 15
 19942                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 19943  012528  A23A               	btfss	i2CANsendMessage@identifier+2,1,c
 19944  01252A  D002               	goto	i2l401
 19945                           
 19946                           ; BSR set to: 15
 19947                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 19948  01252C  010F               	movlb	15	; () banked
 19949  01252E  8332               	bsf	50,1,b	;volatile
 19950  012530                     i2l401:
 19951                           
 19952                           ; BSR set to: 15
 19953                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 19954  012530  A43A               	btfss	i2CANsendMessage@identifier+2,2,c
 19955  012532  D002               	goto	i2l402
 19956                           
 19957                           ; BSR set to: 15
 19958                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 19959  012534  010F               	movlb	15	; () banked
 19960  012536  8B32               	bsf	50,5,b	;volatile
 19961  012538                     i2l402:
 19962                           
 19963                           ; BSR set to: 15
 19964                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 19965  012538  A63A               	btfss	i2CANsendMessage@identifier+2,3,c
 19966  01253A  D002               	goto	i2l403
 19967                           
 19968                           ; BSR set to: 15
 19969                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 19970  01253C  010F               	movlb	15	; () banked
 19971  01253E  8D32               	bsf	50,6,b	;volatile
 19972  012540                     i2l403:
 19973                           
 19974                           ; BSR set to: 15
 19975                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 19976  012540  A83A               	btfss	i2CANsendMessage@identifier+2,4,c
 19977  012542  D002               	goto	i2l7088
 19978                           
 19979                           ; BSR set to: 15
 19980                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 19981  012544  010F               	movlb	15	; () banked
 19982  012546  8F32               	bsf	50,7,b	;volatile
 19983  012548                     i2l7088:
 19984                           
 19985                           ; BSR set to: 15
 19986                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 19987  012548  C038  F040         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19988  01254C  C039  F041         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19989  012550  C03A  F042         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19990  012554  C03B  F043         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19991  012558  0E16               	movlw	22
 19992  01255A  D005               	goto	i2u890_40
 19993  01255C                     i2u890_45:
 19994  01255C  90D8               	bcf	status,0,c
 19995  01255E  3243               	rrcf	??i2_CANsendMessage+3,f,c
 19996  012560  3242               	rrcf	??i2_CANsendMessage+2,f,c
 19997  012562  3241               	rrcf	??i2_CANsendMessage+1,f,c
 19998  012564  3240               	rrcf	??i2_CANsendMessage,f,c
 19999  012566                     i2u890_40:
 20000  012566  2EE8               	decfsz	wreg,f,c
 20001  012568  D7F9               	goto	i2u890_45
 20002  01256A  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20003  01256E  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20004  012572  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20005  012576  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20006                           
 20007                           ; BSR set to: 15
 20008                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 20009  01257A  5044               	movf	i2CANsendMessage@tamp,w,c
 20010  01257C  6E44               	movwf	i2CANsendMessage@tamp,c
 20011  01257E  6A45               	clrf	i2CANsendMessage@tamp+1,c
 20012  012580  6A46               	clrf	i2CANsendMessage@tamp+2,c
 20013  012582  6A47               	clrf	i2CANsendMessage@tamp+3,c
 20014                           
 20015                           ; BSR set to: 15
 20016                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 20017  012584  C044  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 20018                           
 20019                           ;inc\CANlib.h: 407: }
 20020  012588  D04D               	goto	i2l7108
 20021  01258A                     i2l399:
 20022                           
 20023                           ; BSR set to: 15
 20024                           ;inc\CANlib.h: 409: else
 20025                           ;inc\CANlib.h: 411: {
 20026                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 20027  01258A  010F               	movlb	15	; () banked
 20028  01258C  9732               	bcf	50,3,b	;volatile
 20029                           
 20030                           ; BSR set to: 15
 20031                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 20032  01258E  C038  F040         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20033  012592  C039  F041         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20034  012596  C03A  F042         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20035  01259A  C03B  F043         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20036  01259E  0E04               	movlw	4
 20037  0125A0  D005               	goto	i2u891_40
 20038  0125A2                     i2u891_45:
 20039  0125A2  90D8               	bcf	status,0,c
 20040  0125A4  3243               	rrcf	??i2_CANsendMessage+3,f,c
 20041  0125A6  3242               	rrcf	??i2_CANsendMessage+2,f,c
 20042  0125A8  3241               	rrcf	??i2_CANsendMessage+1,f,c
 20043  0125AA  3240               	rrcf	??i2_CANsendMessage,f,c
 20044  0125AC                     i2u891_40:
 20045  0125AC  2EE8               	decfsz	wreg,f,c
 20046  0125AE  D7F9               	goto	i2u891_45
 20047  0125B0  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20048  0125B4  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20049  0125B8  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20050  0125BC  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20051                           
 20052                           ; BSR set to: 15
 20053                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 20054  0125C0  5044               	movf	i2CANsendMessage@tamp,w,c
 20055  0125C2  6E44               	movwf	i2CANsendMessage@tamp,c
 20056  0125C4  6A45               	clrf	i2CANsendMessage@tamp+1,c
 20057  0125C6  6A46               	clrf	i2CANsendMessage@tamp+2,c
 20058  0125C8  6A47               	clrf	i2CANsendMessage@tamp+3,c
 20059                           
 20060                           ; BSR set to: 15
 20061                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 20062  0125CA  C044  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 20063                           
 20064                           ; BSR set to: 15
 20065                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 20066  0125CE  0E07               	movlw	7
 20067  0125D0  1438               	andwf	i2CANsendMessage@identifier,w,c
 20068  0125D2  6E44               	movwf	i2CANsendMessage@tamp,c
 20069  0125D4  0E00               	movlw	0
 20070  0125D6  1439               	andwf	i2CANsendMessage@identifier+1,w,c
 20071  0125D8  6E45               	movwf	i2CANsendMessage@tamp+1,c
 20072  0125DA  0E00               	movlw	0
 20073  0125DC  143A               	andwf	i2CANsendMessage@identifier+2,w,c
 20074  0125DE  6E46               	movwf	i2CANsendMessage@tamp+2,c
 20075  0125E0  0E00               	movlw	0
 20076  0125E2  143B               	andwf	i2CANsendMessage@identifier+3,w,c
 20077  0125E4  6E47               	movwf	i2CANsendMessage@tamp+3,c
 20078                           
 20079                           ; BSR set to: 15
 20080                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 20081  0125E6  C044  F040         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20082  0125EA  C045  F041         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20083  0125EE  C046  F042         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20084  0125F2  C047  F043         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20085  0125F6  0E05               	movlw	5
 20086  0125F8                     i2u892_45:
 20087  0125F8  90D8               	bcf	status,0,c
 20088  0125FA  3640               	rlcf	??i2_CANsendMessage,f,c
 20089  0125FC  3641               	rlcf	??i2_CANsendMessage+1,f,c
 20090  0125FE  3642               	rlcf	??i2_CANsendMessage+2,f,c
 20091  012600  3643               	rlcf	??i2_CANsendMessage+3,f,c
 20092  012602  2EE8               	decfsz	wreg,f,c
 20093  012604  D7F9               	goto	i2u892_45
 20094  012606  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20095  01260A  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20096  01260E  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20097  012612  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20098                           
 20099                           ; BSR set to: 15
 20100                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 20101  012616  010F               	movlb	15	; () banked
 20102  012618  5132               	movf	50,w,b	;volatile
 20103  01261A  0B1F               	andlw	31
 20104  01261C  010F               	movlb	15	; () banked
 20105  01261E  6F32               	movwf	50,b	;volatile
 20106                           
 20107                           ; BSR set to: 15
 20108                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 20109  012620  C044  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 20110  012624                     i2l7108:
 20111                           
 20112                           ; BSR set to: 15
 20113                           ;inc\CANlib.h: 422: }
 20114                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 20115  012624  A03F               	btfss	i2CANsendMessage@flags,0,c
 20116  012626  D003               	goto	i2l406
 20117                           
 20118                           ; BSR set to: 15
 20119                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 20120  012628  010F               	movlb	15	; () banked
 20121  01262A  8130               	bsf	48,0,b	;volatile
 20122  01262C  D002               	goto	i2l407
 20123  01262E                     i2l406:
 20124                           
 20125                           ; BSR set to: 15
 20126                           ;inc\CANlib.h: 426: else
 20127                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 20128  01262E  010F               	movlb	15	; () banked
 20129  012630  9130               	bcf	48,0,b	;volatile
 20130  012632                     i2l407:
 20131                           
 20132                           ; BSR set to: 15
 20133                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 20134  012632  A23F               	btfss	i2CANsendMessage@flags,1,c
 20135  012634  D003               	goto	i2l408
 20136                           
 20137                           ; BSR set to: 15
 20138                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 20139  012636  010F               	movlb	15	; () banked
 20140  012638  8330               	bsf	48,1,b	;volatile
 20141  01263A  D002               	goto	i2l7114
 20142  01263C                     i2l408:
 20143                           
 20144                           ; BSR set to: 15
 20145                           ;inc\CANlib.h: 430: else
 20146                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 20147  01263C  010F               	movlb	15	; () banked
 20148  01263E  9330               	bcf	48,1,b	;volatile
 20149  012640                     i2l7114:
 20150                           
 20151                           ; BSR set to: 15
 20152                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 20153  012640  C03C  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20154  012644  C03D  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20155  012648  50DF               	movf	indf2,w,c
 20156  01264A  010F               	movlb	15	; () banked
 20157  01264C  6F36               	movwf	54,b	;volatile
 20158                           
 20159                           ; BSR set to: 15
 20160                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 20161  01264E  EE20 F001          	lfsr	2,1
 20162  012652  503C               	movf	i2CANsendMessage@data,w,c
 20163  012654  26D9               	addwf	fsr2l,f,c
 20164  012656  503D               	movf	i2CANsendMessage@data+1,w,c
 20165  012658  22DA               	addwfc	fsr2h,f,c
 20166  01265A  50DF               	movf	indf2,w,c
 20167  01265C  010F               	movlb	15	; () banked
 20168  01265E  6F37               	movwf	55,b	;volatile
 20169                           
 20170                           ; BSR set to: 15
 20171                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 20172  012660  EE20 F002          	lfsr	2,2
 20173  012664  503C               	movf	i2CANsendMessage@data,w,c
 20174  012666  26D9               	addwf	fsr2l,f,c
 20175  012668  503D               	movf	i2CANsendMessage@data+1,w,c
 20176  01266A  22DA               	addwfc	fsr2h,f,c
 20177  01266C  50DF               	movf	indf2,w,c
 20178  01266E  010F               	movlb	15	; () banked
 20179  012670  6F38               	movwf	56,b	;volatile
 20180                           
 20181                           ; BSR set to: 15
 20182                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 20183  012672  EE20 F003          	lfsr	2,3
 20184  012676  503C               	movf	i2CANsendMessage@data,w,c
 20185  012678  26D9               	addwf	fsr2l,f,c
 20186  01267A  503D               	movf	i2CANsendMessage@data+1,w,c
 20187  01267C  22DA               	addwfc	fsr2h,f,c
 20188  01267E  50DF               	movf	indf2,w,c
 20189  012680  010F               	movlb	15	; () banked
 20190  012682  6F39               	movwf	57,b	;volatile
 20191                           
 20192                           ; BSR set to: 15
 20193                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 20194  012684  EE20 F004          	lfsr	2,4
 20195  012688  503C               	movf	i2CANsendMessage@data,w,c
 20196  01268A  26D9               	addwf	fsr2l,f,c
 20197  01268C  503D               	movf	i2CANsendMessage@data+1,w,c
 20198  01268E  22DA               	addwfc	fsr2h,f,c
 20199  012690  50DF               	movf	indf2,w,c
 20200  012692  010F               	movlb	15	; () banked
 20201  012694  6F3A               	movwf	58,b	;volatile
 20202                           
 20203                           ; BSR set to: 15
 20204                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 20205  012696  EE20 F005          	lfsr	2,5
 20206  01269A  503C               	movf	i2CANsendMessage@data,w,c
 20207  01269C  26D9               	addwf	fsr2l,f,c
 20208  01269E  503D               	movf	i2CANsendMessage@data+1,w,c
 20209  0126A0  22DA               	addwfc	fsr2h,f,c
 20210  0126A2  50DF               	movf	indf2,w,c
 20211  0126A4  010F               	movlb	15	; () banked
 20212  0126A6  6F3B               	movwf	59,b	;volatile
 20213                           
 20214                           ; BSR set to: 15
 20215                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 20216  0126A8  EE20 F006          	lfsr	2,6
 20217  0126AC  503C               	movf	i2CANsendMessage@data,w,c
 20218  0126AE  26D9               	addwf	fsr2l,f,c
 20219  0126B0  503D               	movf	i2CANsendMessage@data+1,w,c
 20220  0126B2  22DA               	addwfc	fsr2h,f,c
 20221  0126B4  50DF               	movf	indf2,w,c
 20222  0126B6  010F               	movlb	15	; () banked
 20223  0126B8  6F3C               	movwf	60,b	;volatile
 20224                           
 20225                           ; BSR set to: 15
 20226                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 20227  0126BA  EE20 F007          	lfsr	2,7
 20228  0126BE  503C               	movf	i2CANsendMessage@data,w,c
 20229  0126C0  26D9               	addwf	fsr2l,f,c
 20230  0126C2  503D               	movf	i2CANsendMessage@data+1,w,c
 20231  0126C4  22DA               	addwfc	fsr2h,f,c
 20232  0126C6  50DF               	movf	indf2,w,c
 20233  0126C8  010F               	movlb	15	; () banked
 20234  0126CA  6F3D               	movwf	61,b	;volatile
 20235                           
 20236                           ; BSR set to: 15
 20237                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 20238  0126CC  010F               	movlb	15	; () banked
 20239  0126CE  8730               	bsf	48,3,b	;volatile
 20240                           
 20241                           ; BSR set to: 15
 20242                           ;inc\CANlib.h: 444: return;
 20243  0126D0  0012               	return	
 20244  0126D2                     i2l396:
 20245                           
 20246                           ; BSR set to: 15
 20247                           ;inc\CANlib.h: 445: }
 20248                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 20249  0126D2  010F               	movlb	15	; () banked
 20250  0126D4  B720               	btfsc	32,3,b	;volatile
 20251  0126D6  0012               	return	
 20252                           
 20253                           ; BSR set to: 15
 20254                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 20255  0126D8  C03E  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 20256                           
 20257                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 20258  0126DC  AC3F               	btfss	i2CANsendMessage@flags,6,c
 20259  0126DE  D003               	goto	i2l411
 20260                           
 20261                           ; BSR set to: 15
 20262                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 20263  0126E0  010F               	movlb	15	; () banked
 20264  0126E2  8D25               	bsf	37,6,b	;volatile
 20265  0126E4  D002               	goto	i2l412
 20266  0126E6                     i2l411:
 20267                           
 20268                           ; BSR set to: 15
 20269                           ;inc\CANlib.h: 454: else
 20270                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 20271  0126E6  010F               	movlb	15	; () banked
 20272  0126E8  9D25               	bcf	37,6,b	;volatile
 20273  0126EA                     i2l412:
 20274                           
 20275                           ; BSR set to: 15
 20276                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 20277  0126EA  A63F               	btfss	i2CANsendMessage@flags,3,c
 20278  0126EC  D066               	goto	i2l413
 20279                           
 20280                           ; BSR set to: 15
 20281                           ;inc\CANlib.h: 458: {
 20282                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 20283  0126EE  5038               	movf	i2CANsendMessage@identifier,w,c
 20284  0126F0  6E44               	movwf	i2CANsendMessage@tamp,c
 20285  0126F2  6A45               	clrf	i2CANsendMessage@tamp+1,c
 20286  0126F4  6A46               	clrf	i2CANsendMessage@tamp+2,c
 20287  0126F6  6A47               	clrf	i2CANsendMessage@tamp+3,c
 20288                           
 20289                           ; BSR set to: 15
 20290                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 20291  0126F8  C044  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 20292                           
 20293                           ; BSR set to: 15
 20294                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 20295  0126FC  0E00               	movlw	0
 20296  0126FE  1438               	andwf	i2CANsendMessage@identifier,w,c
 20297  012700  6E44               	movwf	i2CANsendMessage@tamp,c
 20298  012702  0EFF               	movlw	255
 20299  012704  1439               	andwf	i2CANsendMessage@identifier+1,w,c
 20300  012706  6E45               	movwf	i2CANsendMessage@tamp+1,c
 20301  012708  0E00               	movlw	0
 20302  01270A  143A               	andwf	i2CANsendMessage@identifier+2,w,c
 20303  01270C  6E46               	movwf	i2CANsendMessage@tamp+2,c
 20304  01270E  0E00               	movlw	0
 20305  012710  143B               	andwf	i2CANsendMessage@identifier+3,w,c
 20306  012712  6E47               	movwf	i2CANsendMessage@tamp+3,c
 20307                           
 20308                           ; BSR set to: 15
 20309                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 20310  012714  C044  F040         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20311  012718  C045  F041         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20312  01271C  C046  F042         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20313  012720  C047  F043         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20314  012724  C041  F040         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 20315  012728  C042  F041         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 20316  01272C  C043  F042         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 20317  012730  6A43               	clrf	??i2_CANsendMessage+3,c
 20318  012732  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20319  012736  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20320  01273A  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20321  01273E  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20322                           
 20323                           ; BSR set to: 15
 20324                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 20325  012742  C044  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 20326                           
 20327                           ; BSR set to: 15
 20328                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 20329  012746  0E00               	movlw	0
 20330  012748  010F               	movlb	15	; () banked
 20331  01274A  6F22               	movwf	34,b	;volatile
 20332                           
 20333                           ; BSR set to: 15
 20334                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 20335  01274C  010F               	movlb	15	; () banked
 20336  01274E  8722               	bsf	34,3,b	;volatile
 20337                           
 20338                           ; BSR set to: 15
 20339                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 20340  012750  A03A               	btfss	i2CANsendMessage@identifier+2,0,c
 20341  012752  D002               	goto	i2l414
 20342                           
 20343                           ; BSR set to: 15
 20344                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 20345  012754  010F               	movlb	15	; () banked
 20346  012756  8122               	bsf	34,0,b	;volatile
 20347  012758                     i2l414:
 20348                           
 20349                           ; BSR set to: 15
 20350                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 20351  012758  A23A               	btfss	i2CANsendMessage@identifier+2,1,c
 20352  01275A  D002               	goto	i2l415
 20353                           
 20354                           ; BSR set to: 15
 20355                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 20356  01275C  010F               	movlb	15	; () banked
 20357  01275E  8322               	bsf	34,1,b	;volatile
 20358  012760                     i2l415:
 20359                           
 20360                           ; BSR set to: 15
 20361                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 20362  012760  A43A               	btfss	i2CANsendMessage@identifier+2,2,c
 20363  012762  D002               	goto	i2l416
 20364                           
 20365                           ; BSR set to: 15
 20366                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 20367  012764  010F               	movlb	15	; () banked
 20368  012766  8B22               	bsf	34,5,b	;volatile
 20369  012768                     i2l416:
 20370                           
 20371                           ; BSR set to: 15
 20372                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 20373  012768  A63A               	btfss	i2CANsendMessage@identifier+2,3,c
 20374  01276A  D002               	goto	i2l417
 20375                           
 20376                           ; BSR set to: 15
 20377                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 20378  01276C  010F               	movlb	15	; () banked
 20379  01276E  8D22               	bsf	34,6,b	;volatile
 20380  012770                     i2l417:
 20381                           
 20382                           ; BSR set to: 15
 20383                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 20384  012770  A83A               	btfss	i2CANsendMessage@identifier+2,4,c
 20385  012772  D002               	goto	i2l7164
 20386                           
 20387                           ; BSR set to: 15
 20388                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 20389  012774  010F               	movlb	15	; () banked
 20390  012776  8F22               	bsf	34,7,b	;volatile
 20391  012778                     i2l7164:
 20392                           
 20393                           ; BSR set to: 15
 20394                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 20395  012778  C038  F040         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20396  01277C  C039  F041         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20397  012780  C03A  F042         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20398  012784  C03B  F043         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20399  012788  0E16               	movlw	22
 20400  01278A  D005               	goto	i2u903_40
 20401  01278C                     i2u903_45:
 20402  01278C  90D8               	bcf	status,0,c
 20403  01278E  3243               	rrcf	??i2_CANsendMessage+3,f,c
 20404  012790  3242               	rrcf	??i2_CANsendMessage+2,f,c
 20405  012792  3241               	rrcf	??i2_CANsendMessage+1,f,c
 20406  012794  3240               	rrcf	??i2_CANsendMessage,f,c
 20407  012796                     i2u903_40:
 20408  012796  2EE8               	decfsz	wreg,f,c
 20409  012798  D7F9               	goto	i2u903_45
 20410  01279A  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20411  01279E  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20412  0127A2  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20413  0127A6  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20414                           
 20415                           ; BSR set to: 15
 20416                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 20417  0127AA  5044               	movf	i2CANsendMessage@tamp,w,c
 20418  0127AC  6E44               	movwf	i2CANsendMessage@tamp,c
 20419  0127AE  6A45               	clrf	i2CANsendMessage@tamp+1,c
 20420  0127B0  6A46               	clrf	i2CANsendMessage@tamp+2,c
 20421  0127B2  6A47               	clrf	i2CANsendMessage@tamp+3,c
 20422                           
 20423                           ; BSR set to: 15
 20424                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 20425  0127B4  C044  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20426                           
 20427                           ;inc\CANlib.h: 483: }
 20428  0127B8  D04D               	goto	i2l7184
 20429  0127BA                     i2l413:
 20430                           
 20431                           ; BSR set to: 15
 20432                           ;inc\CANlib.h: 485: else
 20433                           ;inc\CANlib.h: 487: {
 20434                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 20435  0127BA  010F               	movlb	15	; () banked
 20436  0127BC  9722               	bcf	34,3,b	;volatile
 20437                           
 20438                           ; BSR set to: 15
 20439                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 20440  0127BE  C038  F040         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20441  0127C2  C039  F041         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20442  0127C6  C03A  F042         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20443  0127CA  C03B  F043         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20444  0127CE  0E04               	movlw	4
 20445  0127D0  D005               	goto	i2u904_40
 20446  0127D2                     i2u904_45:
 20447  0127D2  90D8               	bcf	status,0,c
 20448  0127D4  3243               	rrcf	??i2_CANsendMessage+3,f,c
 20449  0127D6  3242               	rrcf	??i2_CANsendMessage+2,f,c
 20450  0127D8  3241               	rrcf	??i2_CANsendMessage+1,f,c
 20451  0127DA  3240               	rrcf	??i2_CANsendMessage,f,c
 20452  0127DC                     i2u904_40:
 20453  0127DC  2EE8               	decfsz	wreg,f,c
 20454  0127DE  D7F9               	goto	i2u904_45
 20455  0127E0  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20456  0127E4  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20457  0127E8  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20458  0127EC  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20459                           
 20460                           ; BSR set to: 15
 20461                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 20462  0127F0  5044               	movf	i2CANsendMessage@tamp,w,c
 20463  0127F2  6E44               	movwf	i2CANsendMessage@tamp,c
 20464  0127F4  6A45               	clrf	i2CANsendMessage@tamp+1,c
 20465  0127F6  6A46               	clrf	i2CANsendMessage@tamp+2,c
 20466  0127F8  6A47               	clrf	i2CANsendMessage@tamp+3,c
 20467                           
 20468                           ; BSR set to: 15
 20469                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 20470  0127FA  C044  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20471                           
 20472                           ; BSR set to: 15
 20473                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 20474  0127FE  0E07               	movlw	7
 20475  012800  1438               	andwf	i2CANsendMessage@identifier,w,c
 20476  012802  6E44               	movwf	i2CANsendMessage@tamp,c
 20477  012804  0E00               	movlw	0
 20478  012806  1439               	andwf	i2CANsendMessage@identifier+1,w,c
 20479  012808  6E45               	movwf	i2CANsendMessage@tamp+1,c
 20480  01280A  0E00               	movlw	0
 20481  01280C  143A               	andwf	i2CANsendMessage@identifier+2,w,c
 20482  01280E  6E46               	movwf	i2CANsendMessage@tamp+2,c
 20483  012810  0E00               	movlw	0
 20484  012812  143B               	andwf	i2CANsendMessage@identifier+3,w,c
 20485  012814  6E47               	movwf	i2CANsendMessage@tamp+3,c
 20486                           
 20487                           ; BSR set to: 15
 20488                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 20489  012816  C044  F040         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20490  01281A  C045  F041         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20491  01281E  C046  F042         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20492  012822  C047  F043         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20493  012826  0E05               	movlw	5
 20494  012828                     i2u905_45:
 20495  012828  90D8               	bcf	status,0,c
 20496  01282A  3640               	rlcf	??i2_CANsendMessage,f,c
 20497  01282C  3641               	rlcf	??i2_CANsendMessage+1,f,c
 20498  01282E  3642               	rlcf	??i2_CANsendMessage+2,f,c
 20499  012830  3643               	rlcf	??i2_CANsendMessage+3,f,c
 20500  012832  2EE8               	decfsz	wreg,f,c
 20501  012834  D7F9               	goto	i2u905_45
 20502  012836  C040  F044         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20503  01283A  C041  F045         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20504  01283E  C042  F046         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20505  012842  C043  F047         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20506                           
 20507                           ; BSR set to: 15
 20508                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 20509  012846  010F               	movlb	15	; () banked
 20510  012848  5122               	movf	34,w,b	;volatile
 20511  01284A  0B1F               	andlw	31
 20512  01284C  010F               	movlb	15	; () banked
 20513  01284E  6F22               	movwf	34,b	;volatile
 20514                           
 20515                           ; BSR set to: 15
 20516                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 20517  012850  C044  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 20518  012854                     i2l7184:
 20519                           
 20520                           ; BSR set to: 15
 20521                           ;inc\CANlib.h: 498: }
 20522                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 20523  012854  A03F               	btfss	i2CANsendMessage@flags,0,c
 20524  012856  D003               	goto	i2l420
 20525                           
 20526                           ; BSR set to: 15
 20527                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 20528  012858  010F               	movlb	15	; () banked
 20529  01285A  8120               	bsf	32,0,b	;volatile
 20530  01285C  D002               	goto	i2l421
 20531  01285E                     i2l420:
 20532                           
 20533                           ; BSR set to: 15
 20534                           ;inc\CANlib.h: 502: else
 20535                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 20536  01285E  010F               	movlb	15	; () banked
 20537  012860  9120               	bcf	32,0,b	;volatile
 20538  012862                     i2l421:
 20539                           
 20540                           ; BSR set to: 15
 20541                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 20542  012862  A23F               	btfss	i2CANsendMessage@flags,1,c
 20543  012864  D003               	goto	i2l422
 20544                           
 20545                           ; BSR set to: 15
 20546                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 20547  012866  010F               	movlb	15	; () banked
 20548  012868  8320               	bsf	32,1,b	;volatile
 20549  01286A  D002               	goto	i2l7190
 20550  01286C                     i2l422:
 20551                           
 20552                           ; BSR set to: 15
 20553                           ;inc\CANlib.h: 506: else
 20554                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 20555  01286C  010F               	movlb	15	; () banked
 20556  01286E  9320               	bcf	32,1,b	;volatile
 20557  012870                     i2l7190:
 20558                           
 20559                           ; BSR set to: 15
 20560                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 20561  012870  C03C  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20562  012874  C03D  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20563  012878  50DF               	movf	indf2,w,c
 20564  01287A  010F               	movlb	15	; () banked
 20565  01287C  6F26               	movwf	38,b	;volatile
 20566                           
 20567                           ; BSR set to: 15
 20568                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 20569  01287E  EE20 F001          	lfsr	2,1
 20570  012882  503C               	movf	i2CANsendMessage@data,w,c
 20571  012884  26D9               	addwf	fsr2l,f,c
 20572  012886  503D               	movf	i2CANsendMessage@data+1,w,c
 20573  012888  22DA               	addwfc	fsr2h,f,c
 20574  01288A  50DF               	movf	indf2,w,c
 20575  01288C  010F               	movlb	15	; () banked
 20576  01288E  6F27               	movwf	39,b	;volatile
 20577                           
 20578                           ; BSR set to: 15
 20579                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 20580  012890  EE20 F002          	lfsr	2,2
 20581  012894  503C               	movf	i2CANsendMessage@data,w,c
 20582  012896  26D9               	addwf	fsr2l,f,c
 20583  012898  503D               	movf	i2CANsendMessage@data+1,w,c
 20584  01289A  22DA               	addwfc	fsr2h,f,c
 20585  01289C  50DF               	movf	indf2,w,c
 20586  01289E  010F               	movlb	15	; () banked
 20587  0128A0  6F28               	movwf	40,b	;volatile
 20588                           
 20589                           ; BSR set to: 15
 20590                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 20591  0128A2  EE20 F003          	lfsr	2,3
 20592  0128A6  503C               	movf	i2CANsendMessage@data,w,c
 20593  0128A8  26D9               	addwf	fsr2l,f,c
 20594  0128AA  503D               	movf	i2CANsendMessage@data+1,w,c
 20595  0128AC  22DA               	addwfc	fsr2h,f,c
 20596  0128AE  50DF               	movf	indf2,w,c
 20597  0128B0  010F               	movlb	15	; () banked
 20598  0128B2  6F29               	movwf	41,b	;volatile
 20599                           
 20600                           ; BSR set to: 15
 20601                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 20602  0128B4  EE20 F004          	lfsr	2,4
 20603  0128B8  503C               	movf	i2CANsendMessage@data,w,c
 20604  0128BA  26D9               	addwf	fsr2l,f,c
 20605  0128BC  503D               	movf	i2CANsendMessage@data+1,w,c
 20606  0128BE  22DA               	addwfc	fsr2h,f,c
 20607  0128C0  50DF               	movf	indf2,w,c
 20608  0128C2  010F               	movlb	15	; () banked
 20609  0128C4  6F2A               	movwf	42,b	;volatile
 20610                           
 20611                           ; BSR set to: 15
 20612                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 20613  0128C6  EE20 F005          	lfsr	2,5
 20614  0128CA  503C               	movf	i2CANsendMessage@data,w,c
 20615  0128CC  26D9               	addwf	fsr2l,f,c
 20616  0128CE  503D               	movf	i2CANsendMessage@data+1,w,c
 20617  0128D0  22DA               	addwfc	fsr2h,f,c
 20618  0128D2  50DF               	movf	indf2,w,c
 20619  0128D4  010F               	movlb	15	; () banked
 20620  0128D6  6F2B               	movwf	43,b	;volatile
 20621                           
 20622                           ; BSR set to: 15
 20623                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 20624  0128D8  EE20 F006          	lfsr	2,6
 20625  0128DC  503C               	movf	i2CANsendMessage@data,w,c
 20626  0128DE  26D9               	addwf	fsr2l,f,c
 20627  0128E0  503D               	movf	i2CANsendMessage@data+1,w,c
 20628  0128E2  22DA               	addwfc	fsr2h,f,c
 20629  0128E4  50DF               	movf	indf2,w,c
 20630  0128E6  010F               	movlb	15	; () banked
 20631  0128E8  6F2C               	movwf	44,b	;volatile
 20632                           
 20633                           ; BSR set to: 15
 20634                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 20635  0128EA  EE20 F007          	lfsr	2,7
 20636  0128EE  503C               	movf	i2CANsendMessage@data,w,c
 20637  0128F0  26D9               	addwf	fsr2l,f,c
 20638  0128F2  503D               	movf	i2CANsendMessage@data+1,w,c
 20639  0128F4  22DA               	addwfc	fsr2h,f,c
 20640  0128F6  50DF               	movf	indf2,w,c
 20641  0128F8  010F               	movlb	15	; () banked
 20642  0128FA  6F2D               	movwf	45,b	;volatile
 20643                           
 20644                           ; BSR set to: 15
 20645                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 20646  0128FC  010F               	movlb	15	; () banked
 20647  0128FE  8720               	bsf	32,3,b	;volatile
 20648                           
 20649                           ; BSR set to: 15
 20650                           ;inc\CANlib.h: 520: return;
 20651  012900  0012               	return	
 20652  012902                     __end_ofi2_CANsendMessage:
 20653                           	opt stack 0
 20654                           pclatu	equ	0xFFB
 20655                           pclath	equ	0xFFA
 20656                           tblptru	equ	0xFF8
 20657                           tblptrh	equ	0xFF7
 20658                           tblptrl	equ	0xFF6
 20659                           tablat	equ	0xFF5
 20660                           prodh	equ	0xFF4
 20661                           prodl	equ	0xFF3
 20662                           intcon	equ	0xFF2
 20663                           postinc0	equ	0xFEE
 20664                           fsr0h	equ	0xFEA
 20665                           fsr0l	equ	0xFE9
 20666                           wreg	equ	0xFE8
 20667                           indf1	equ	0xFE7
 20668                           plusw1	equ	0xFE3
 20669                           fsr1h	equ	0xFE2
 20670                           fsr1l	equ	0xFE1
 20671                           bsr	equ	0xFE0
 20672                           indf2	equ	0xFDF
 20673                           postinc2	equ	0xFDE
 20674                           plusw2	equ	0xFDB
 20675                           fsr2h	equ	0xFDA
 20676                           fsr2l	equ	0xFD9
 20677                           status	equ	0xFD8
 20678                           
 20679 ;; *************** function i2_CANisTxReady *****************
 20680 ;; Defined at:
 20681 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 20682 ;; Parameters:    Size  Location     Type
 20683 ;;		None
 20684 ;; Auto vars:     Size  Location     Type
 20685 ;;		None
 20686 ;; Return value:  Size  Location     Type
 20687 ;;                  1    wreg      unsigned char 
 20688 ;; Registers used:
 20689 ;;		wreg, status,2
 20690 ;; Tracked objects:
 20691 ;;		On entry : 0/0
 20692 ;;		On exit  : 0/0
 20693 ;;		Unchanged: 0/0
 20694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20698 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20699 ;;Total ram usage:        1 bytes
 20700 ;; Hardware stack levels used:    1
 20701 ;; This function calls:
 20702 ;;		Nothing
 20703 ;; This function is called by:
 20704 ;;		_ISR_alta
 20705 ;;		i2_CAN_Tx
 20706 ;; This function uses a non-reentrant model
 20707 ;;
 20708                           
 20709                           	psect	text57
 20710  01674C                     __ptext57:
 20711                           	opt stack 0
 20712  01674C                     i2_CANisTxReady:
 20713                           	opt stack 20
 20714                           
 20715                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 20716                           
 20717                           ; BSR set to: 15
 20718                           ;incstack = 0
 20719  01674C  0E01               	movlw	1
 20720  01674E  6E38               	movwf	i2_CANisTxReady$3247,c
 20721  016750  010F               	movlb	15	; () banked
 20722  016752  A740               	btfss	64,3,b	;volatile
 20723  016754  D008               	goto	i2l574
 20724                           
 20725                           ; BSR set to: 15
 20726  016756  010F               	movlb	15	; () banked
 20727  016758  A730               	btfss	48,3,b	;volatile
 20728  01675A  D005               	goto	i2l574
 20729                           
 20730                           ; BSR set to: 15
 20731  01675C  010F               	movlb	15	; () banked
 20732  01675E  A720               	btfss	32,3,b	;volatile
 20733  016760  D002               	goto	i2l574
 20734                           
 20735                           ; BSR set to: 15
 20736  016762  0E00               	movlw	0
 20737  016764  6E38               	movwf	i2_CANisTxReady$3247,c
 20738  016766                     i2l574:
 20739                           
 20740                           ; BSR set to: 15
 20741  016766  5038               	movf	i2_CANisTxReady$3247,w,c
 20742  016768  0012               	return	
 20743  01676A                     __end_ofi2_CANisTxReady:
 20744                           	opt stack 0
 20745                           pclatu	equ	0xFFB
 20746                           pclath	equ	0xFFA
 20747                           tblptru	equ	0xFF8
 20748                           tblptrh	equ	0xFF7
 20749                           tblptrl	equ	0xFF6
 20750                           tablat	equ	0xFF5
 20751                           prodh	equ	0xFF4
 20752                           prodl	equ	0xFF3
 20753                           intcon	equ	0xFF2
 20754                           postinc0	equ	0xFEE
 20755                           fsr0h	equ	0xFEA
 20756                           fsr0l	equ	0xFE9
 20757                           wreg	equ	0xFE8
 20758                           indf1	equ	0xFE7
 20759                           plusw1	equ	0xFE3
 20760                           fsr1h	equ	0xFE2
 20761                           fsr1l	equ	0xFE1
 20762                           bsr	equ	0xFE0
 20763                           indf2	equ	0xFDF
 20764                           postinc2	equ	0xFDE
 20765                           plusw2	equ	0xFDB
 20766                           fsr2h	equ	0xFDA
 20767                           fsr2l	equ	0xFD9
 20768                           status	equ	0xFD8
 20769                           
 20770 ;; *************** function _LCD_Park *****************
 20771 ;; Defined at:
 20772 ;;		line 451 in file "RemoteCan.c"
 20773 ;; Parameters:    Size  Location     Type
 20774 ;;		None
 20775 ;; Auto vars:     Size  Location     Type
 20776 ;;		None
 20777 ;; Return value:  Size  Location     Type
 20778 ;;		None               void
 20779 ;; Registers used:
 20780 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20781 ;; Tracked objects:
 20782 ;;		On entry : 0/0
 20783 ;;		On exit  : 0/0
 20784 ;;		Unchanged: 0/0
 20785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20790 ;;Total ram usage:        0 bytes
 20791 ;; Hardware stack levels used:    1
 20792 ;; Hardware stack levels required when called:    6
 20793 ;; This function calls:
 20794 ;;		i2_LCD_goto_line
 20795 ;;		i2_LCD_initialize
 20796 ;;		i2_LCD_write_message
 20797 ;; This function is called by:
 20798 ;;		_ISR_alta
 20799 ;; This function uses a non-reentrant model
 20800 ;;
 20801                           
 20802                           	psect	text58
 20803  01626E                     __ptext58:
 20804                           	opt stack 0
 20805  01626E                     _LCD_Park:
 20806                           	opt stack 14
 20807                           
 20808                           ;RemoteCan.c: 452: LCD_initialize(16);
 20809                           
 20810                           ; BSR set to: 15
 20811                           ;incstack = 0
 20812  01626E  0E10               	movlw	16
 20813  016270  ECFA  F0AA         	call	i2_LCD_initialize
 20814                           
 20815                           ;RemoteCan.c: 453: LCD_goto_line(1);
 20816  016274  0E01               	movlw	1
 20817  016276  ECFC  F0AD         	call	i2_LCD_goto_line
 20818                           
 20819                           ;RemoteCan.c: 454: LCD_write_message("= PARKING MESSAGES =");
 20820  01627A  0E2B               	movlw	low STR_16
 20821  01627C  6E49               	movwf	i2LCD_write_message@buffer,c
 20822  01627E  0EFF               	movlw	high STR_16
 20823  016280  6E4A               	movwf	i2LCD_write_message@buffer+1,c
 20824  016282  ECF0  F0B2         	call	i2_LCD_write_message	;wreg free
 20825                           
 20826                           ;RemoteCan.c: 455: LCD_goto_line(2);
 20827  016286  0E02               	movlw	2
 20828  016288  ECFC  F0AD         	call	i2_LCD_goto_line
 20829                           
 20830                           ;RemoteCan.c: 456: LCD_write_message("- DISTANCE REACHED -");
 20831  01628C  0E16               	movlw	low STR_21
 20832  01628E  6E49               	movwf	i2LCD_write_message@buffer,c
 20833  016290  0EFF               	movlw	high STR_21
 20834  016292  6E4A               	movwf	i2LCD_write_message@buffer+1,c
 20835  016294  ECF0  F0B2         	call	i2_LCD_write_message	;wreg free
 20836                           
 20837                           ;RemoteCan.c: 457: LCD_goto_line(3);
 20838  016298  0E03               	movlw	3
 20839  01629A  ECFC  F0AD         	call	i2_LCD_goto_line
 20840                           
 20841                           ;RemoteCan.c: 458: LCD_write_message("PRESS THE BUTTON TO ");
 20842  01629E  0ED7               	movlw	low STR_22
 20843  0162A0  6E49               	movwf	i2LCD_write_message@buffer,c
 20844  0162A2  0EFE               	movlw	high STR_22
 20845  0162A4  6E4A               	movwf	i2LCD_write_message@buffer+1,c
 20846  0162A6  ECF0  F0B2         	call	i2_LCD_write_message	;wreg free
 20847                           
 20848                           ;RemoteCan.c: 459: LCD_goto_line(4);
 20849  0162AA  0E04               	movlw	4
 20850  0162AC  ECFC  F0AD         	call	i2_LCD_goto_line
 20851                           
 20852                           ;RemoteCan.c: 460: LCD_write_message("   START PARKING    ");
 20853  0162B0  0E98               	movlw	low STR_23
 20854  0162B2  6E49               	movwf	i2LCD_write_message@buffer,c
 20855  0162B4  0EFE               	movlw	high STR_23
 20856  0162B6  6E4A               	movwf	i2LCD_write_message@buffer+1,c
 20857  0162B8  ECF0  F0B2         	call	i2_LCD_write_message	;wreg free
 20858  0162BC  0012               	return		;funcret
 20859  0162BE                     __end_of_LCD_Park:
 20860                           	opt stack 0
 20861                           pclatu	equ	0xFFB
 20862                           pclath	equ	0xFFA
 20863                           tblptru	equ	0xFF8
 20864                           tblptrh	equ	0xFF7
 20865                           tblptrl	equ	0xFF6
 20866                           tablat	equ	0xFF5
 20867                           prodh	equ	0xFF4
 20868                           prodl	equ	0xFF3
 20869                           intcon	equ	0xFF2
 20870                           postinc0	equ	0xFEE
 20871                           fsr0h	equ	0xFEA
 20872                           fsr0l	equ	0xFE9
 20873                           wreg	equ	0xFE8
 20874                           indf1	equ	0xFE7
 20875                           plusw1	equ	0xFE3
 20876                           fsr1h	equ	0xFE2
 20877                           fsr1l	equ	0xFE1
 20878                           bsr	equ	0xFE0
 20879                           indf2	equ	0xFDF
 20880                           postinc2	equ	0xFDE
 20881                           plusw2	equ	0xFDB
 20882                           fsr2h	equ	0xFDA
 20883                           fsr2l	equ	0xFD9
 20884                           status	equ	0xFD8
 20885                           
 20886 ;; *************** function _LCD_Gap *****************
 20887 ;; Defined at:
 20888 ;;		line 439 in file "RemoteCan.c"
 20889 ;; Parameters:    Size  Location     Type
 20890 ;;		None
 20891 ;; Auto vars:     Size  Location     Type
 20892 ;;		None
 20893 ;; Return value:  Size  Location     Type
 20894 ;;		None               void
 20895 ;; Registers used:
 20896 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20897 ;; Tracked objects:
 20898 ;;		On entry : 0/0
 20899 ;;		On exit  : 0/0
 20900 ;;		Unchanged: 0/0
 20901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20906 ;;Total ram usage:        0 bytes
 20907 ;; Hardware stack levels used:    1
 20908 ;; Hardware stack levels required when called:    6
 20909 ;; This function calls:
 20910 ;;		i2_LCD_goto_line
 20911 ;;		i2_LCD_initialize
 20912 ;;		i2_LCD_write_message
 20913 ;; This function is called by:
 20914 ;;		_ISR_alta
 20915 ;; This function uses a non-reentrant model
 20916 ;;
 20917                           
 20918                           	psect	text59
 20919  0162BE                     __ptext59:
 20920                           	opt stack 0
 20921  0162BE                     _LCD_Gap:
 20922                           	opt stack 14
 20923                           
 20924                           ;RemoteCan.c: 440: LCD_initialize(16);
 20925                           
 20926                           ;incstack = 0
 20927  0162BE  0E10               	movlw	16
 20928  0162C0  ECFA  F0AA         	call	i2_LCD_initialize
 20929                           
 20930                           ;RemoteCan.c: 441: LCD_goto_line(1);
 20931  0162C4  0E01               	movlw	1
 20932  0162C6  ECFC  F0AD         	call	i2_LCD_goto_line
 20933                           
 20934                           ;RemoteCan.c: 442: LCD_write_message("= PARKING MESSAGES =");
 20935  0162CA  0E2B               	movlw	low STR_16
 20936  0162CC  6E49               	movwf	i2LCD_write_message@buffer,c
 20937  0162CE  0EFF               	movlw	high STR_16
 20938  0162D0  6E4A               	movwf	i2LCD_write_message@buffer+1,c
 20939  0162D2  ECF0  F0B2         	call	i2_LCD_write_message	;wreg free
 20940                           
 20941                           ;RemoteCan.c: 443: LCD_goto_line(2);
 20942  0162D6  0E02               	movlw	2
 20943  0162D8  ECFC  F0AD         	call	i2_LCD_goto_line
 20944                           
 20945                           ;RemoteCan.c: 444: LCD_write_message(" PARKING SPACE FOUND");
 20946  0162DC  0E94               	movlw	low STR_17
 20947  0162DE  6E49               	movwf	i2LCD_write_message@buffer,c
 20948  0162E0  0EFF               	movlw	high STR_17
 20949  0162E2  6E4A               	movwf	i2LCD_write_message@buffer+1,c
 20950  0162E4  ECF0  F0B2         	call	i2_LCD_write_message	;wreg free
 20951                           
 20952                           ;RemoteCan.c: 445: LCD_goto_line(3);
 20953  0162E8  0E03               	movlw	3
 20954  0162EA  ECFC  F0AD         	call	i2_LCD_goto_line
 20955                           
 20956                           ;RemoteCan.c: 446: LCD_write_message("->  KEEP MOVING  <-?");
 20957  0162EE  0E7F               	movlw	low STR_18
 20958  0162F0  6E49               	movwf	i2LCD_write_message@buffer,c
 20959  0162F2  0EFF               	movlw	high STR_18
 20960  0162F4  6E4A               	movwf	i2LCD_write_message@buffer+1,c
 20961  0162F6  ECF0  F0B2         	call	i2_LCD_write_message	;wreg free
 20962                           
 20963                           ;RemoteCan.c: 447: LCD_goto_line(4);
 20964  0162FA  0E04               	movlw	4
 20965  0162FC  ECFC  F0AD         	call	i2_LCD_goto_line
 20966                           
 20967                           ;RemoteCan.c: 448: LCD_write_message(" until next message ");
 20968  016300  0E01               	movlw	low STR_19
 20969  016302  6E49               	movwf	i2LCD_write_message@buffer,c
 20970  016304  0EFF               	movlw	high STR_19
 20971  016306  6E4A               	movwf	i2LCD_write_message@buffer+1,c
 20972  016308  ECF0  F0B2         	call	i2_LCD_write_message	;wreg free
 20973  01630C  0012               	return		;funcret
 20974  01630E                     __end_of_LCD_Gap:
 20975                           	opt stack 0
 20976                           pclatu	equ	0xFFB
 20977                           pclath	equ	0xFFA
 20978                           tblptru	equ	0xFF8
 20979                           tblptrh	equ	0xFF7
 20980                           tblptrl	equ	0xFF6
 20981                           tablat	equ	0xFF5
 20982                           prodh	equ	0xFF4
 20983                           prodl	equ	0xFF3
 20984                           intcon	equ	0xFF2
 20985                           postinc0	equ	0xFEE
 20986                           fsr0h	equ	0xFEA
 20987                           fsr0l	equ	0xFE9
 20988                           wreg	equ	0xFE8
 20989                           indf1	equ	0xFE7
 20990                           plusw1	equ	0xFE3
 20991                           fsr1h	equ	0xFE2
 20992                           fsr1l	equ	0xFE1
 20993                           bsr	equ	0xFE0
 20994                           indf2	equ	0xFDF
 20995                           postinc2	equ	0xFDE
 20996                           plusw2	equ	0xFDB
 20997                           fsr2h	equ	0xFDA
 20998                           fsr2l	equ	0xFD9
 20999                           status	equ	0xFD8
 21000                           
 21001 ;; *************** function i2_LCD_write_message *****************
 21002 ;; Defined at:
 21003 ;;		line 178 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 21004 ;; Parameters:    Size  Location     Type
 21005 ;;  buffer          2   34[COMRAM] PTR const unsigned char 
 21006 ;;		 -> STR_27(21), STR_26(21), STR_25(21), STR_24(21), 
 21007 ;;		 -> STR_23(21), STR_22(21), STR_21(21), STR_20(21), 
 21008 ;;		 -> STR_19(21), STR_18(21), STR_17(21), STR_16(21), 
 21009 ;;		 -> STR_15(8), STR_14(8), STR_13(5), STR_12(5), 
 21010 ;;		 -> STR_11(5), STR_10(7), STR_9(14), STR_8(17), 
 21011 ;;		 -> STR_7(12), STR_6(21), STR_4(21), STR_3(21), 
 21012 ;;		 -> STR_2(21), STR_1(21), 
 21013 ;; Auto vars:     Size  Location     Type
 21014 ;;		None
 21015 ;; Return value:  Size  Location     Type
 21016 ;;		None               void
 21017 ;; Registers used:
 21018 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21019 ;; Tracked objects:
 21020 ;;		On entry : 0/0
 21021 ;;		On exit  : 0/0
 21022 ;;		Unchanged: 0/0
 21023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21024 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21027 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21028 ;;Total ram usage:        2 bytes
 21029 ;; Hardware stack levels used:    1
 21030 ;; Hardware stack levels required when called:    5
 21031 ;; This function calls:
 21032 ;;		i2_LCD_write_char
 21033 ;; This function is called by:
 21034 ;;		_LCD_Gap
 21035 ;;		_LCD_Park
 21036 ;; This function uses a non-reentrant model
 21037 ;;
 21038                           
 21039                           	psect	text60
 21040  0165E0                     __ptext60:
 21041                           	opt stack 0
 21042  0165E0                     i2_LCD_write_message:
 21043                           	opt stack 14
 21044                           
 21045                           ;src\LCD_44780.c: 181: while(*buffer) {
 21046                           
 21047                           ;incstack = 0
 21048  0165E0  D00C               	goto	i2l7240
 21049  0165E2                     i2l7236:
 21050                           
 21051                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 21052  0165E2  C049  FFF6         	movff	i2LCD_write_message@buffer,tblptrl
 21053  0165E6  C04A  FFF7         	movff	i2LCD_write_message@buffer+1,tblptrh
 21054  0165EA                     	if	0	;tblptru may be non-zero
 21055  0165EA                     	endif
 21056  0165EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21057  0165EA  0E00               	movlw	low (__mediumconst shr (0+16))
 21058  0165EC  6EF8               	movwf	tblptru,c
 21059  0165EE                     	endif
 21060  0165EE  0008               	tblrd		*
 21061  0165F0  50F5               	movf	tablat,w,c
 21062  0165F2  EC74  F0B0         	call	i2_LCD_write_char
 21063                           
 21064                           ;src\LCD_44780.c: 186: buffer++;
 21065  0165F6  4A49               	infsnz	i2LCD_write_message@buffer,f,c
 21066  0165F8  2A4A               	incf	i2LCD_write_message@buffer+1,f,c
 21067  0165FA                     i2l7240:
 21068  0165FA  C049  FFF6         	movff	i2LCD_write_message@buffer,tblptrl
 21069  0165FE  C04A  FFF7         	movff	i2LCD_write_message@buffer+1,tblptrh
 21070  016602                     	if	0	;tblptru may be non-zero
 21071  016602                     	endif
 21072  016602                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21073  016602  0E00               	movlw	low (__mediumconst shr (0+16))
 21074  016604  6EF8               	movwf	tblptru,c
 21075  016606                     	endif
 21076  016606  0008               	tblrd		*
 21077  016608  50F5               	movf	tablat,w,c
 21078  01660A  0900               	iorlw	0
 21079  01660C  B4D8               	btfsc	status,2,c
 21080  01660E  0012               	return	
 21081  016610  D7E8               	goto	i2l7236
 21082  016612                     __end_ofi2_LCD_write_message:
 21083                           	opt stack 0
 21084                           pclatu	equ	0xFFB
 21085                           pclath	equ	0xFFA
 21086                           tblptru	equ	0xFF8
 21087                           tblptrh	equ	0xFF7
 21088                           tblptrl	equ	0xFF6
 21089                           tablat	equ	0xFF5
 21090                           prodh	equ	0xFF4
 21091                           prodl	equ	0xFF3
 21092                           intcon	equ	0xFF2
 21093                           postinc0	equ	0xFEE
 21094                           fsr0h	equ	0xFEA
 21095                           fsr0l	equ	0xFE9
 21096                           wreg	equ	0xFE8
 21097                           indf1	equ	0xFE7
 21098                           plusw1	equ	0xFE3
 21099                           fsr1h	equ	0xFE2
 21100                           fsr1l	equ	0xFE1
 21101                           bsr	equ	0xFE0
 21102                           indf2	equ	0xFDF
 21103                           postinc2	equ	0xFDE
 21104                           plusw2	equ	0xFDB
 21105                           fsr2h	equ	0xFDA
 21106                           fsr2l	equ	0xFD9
 21107                           status	equ	0xFD8
 21108                           
 21109 ;; *************** function i2_LCD_write_char *****************
 21110 ;; Defined at:
 21111 ;;		line 145 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 21112 ;; Parameters:    Size  Location     Type
 21113 ;;  value           1    wreg     unsigned char 
 21114 ;; Auto vars:     Size  Location     Type
 21115 ;;  value           1   33[COMRAM] unsigned char 
 21116 ;;  LCD_write_ch    1   32[COMRAM] unsigned char 
 21117 ;;  LCD_write_ch    1   31[COMRAM] unsigned char 
 21118 ;;  LCD_write_ch    1   30[COMRAM] unsigned char 
 21119 ;;  LCD_write_ch    1   29[COMRAM] unsigned char 
 21120 ;; Return value:  Size  Location     Type
 21121 ;;		None               void
 21122 ;; Registers used:
 21123 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 21124 ;; Tracked objects:
 21125 ;;		On entry : 0/0
 21126 ;;		On exit  : 0/0
 21127 ;;		Unchanged: 0/0
 21128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21130 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21132 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21133 ;;Total ram usage:        5 bytes
 21134 ;; Hardware stack levels used:    1
 21135 ;; Hardware stack levels required when called:    4
 21136 ;; This function calls:
 21137 ;;		i2_LCD_send_command
 21138 ;; This function is called by:
 21139 ;;		i2_LCD_write_message
 21140 ;; This function uses a non-reentrant model
 21141 ;;
 21142                           
 21143                           	psect	text61
 21144  0160E8                     __ptext61:
 21145                           	opt stack 0
 21146  0160E8                     i2_LCD_write_char:
 21147                           	opt stack 14
 21148                           
 21149                           ;incstack = 0
 21150                           ;i2LCD_write_char@value stored from wreg
 21151  0160E8  6E48               	movwf	i2LCD_write_char@value,c
 21152                           
 21153                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 21154                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 21155  0160EA  848D               	bsf	3981,2,c	;volatile
 21156                           
 21157                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 21158  0160EC  4448               	rlncf	i2LCD_write_char@value,w,c
 21159  0160EE  0B01               	andlw	1
 21160  0160F0  6E44               	movwf	i2LCD_write_char@D3,c
 21161                           
 21162                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 21163  0160F2  4448               	rlncf	i2LCD_write_char@value,w,c
 21164  0160F4  46E8               	rlncf	wreg,f,c
 21165  0160F6  0B03               	andlw	3
 21166  0160F8  0B01               	andlw	1
 21167  0160FA  6E45               	movwf	i2LCD_write_char@D2,c
 21168                           
 21169                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 21170  0160FC  3848               	swapf	i2LCD_write_char@value,w,c
 21171  0160FE  42E8               	rrncf	wreg,f,c
 21172  016100  0B07               	andlw	7
 21173  016102  0B01               	andlw	1
 21174  016104  6E46               	movwf	i2LCD_write_char@D1,c
 21175                           
 21176                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 21177  016106  3848               	swapf	i2LCD_write_char@value,w,c
 21178  016108  0B0F               	andlw	15
 21179  01610A  0B01               	andlw	1
 21180  01610C  6E47               	movwf	i2LCD_write_char@D0,c
 21181                           
 21182                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 21183  01610E  C045  F040         	movff	i2LCD_write_char@D2,i2LCD_send_command@D2
 21184  016112  C046  F041         	movff	i2LCD_write_char@D1,i2LCD_send_command@D1
 21185  016116  C047  F042         	movff	i2LCD_write_char@D0,i2LCD_send_command@D0
 21186  01611A  5044               	movf	i2LCD_write_char@D3,w,c
 21187  01611C  EC09  F0B3         	call	i2_LCD_send_command
 21188                           
 21189                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 21190  016120  3848               	swapf	i2LCD_write_char@value,w,c
 21191  016122  46E8               	rlncf	wreg,f,c
 21192  016124  0B1F               	andlw	31
 21193  016126  0B01               	andlw	1
 21194  016128  6E44               	movwf	i2LCD_write_char@D3,c
 21195                           
 21196                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 21197  01612A  4048               	rrncf	i2LCD_write_char@value,w,c
 21198  01612C  42E8               	rrncf	wreg,f,c
 21199  01612E  0B3F               	andlw	63
 21200  016130  0B01               	andlw	1
 21201  016132  6E45               	movwf	i2LCD_write_char@D2,c
 21202                           
 21203                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 21204  016134  90D8               	bcf	status,0,c
 21205  016136  3048               	rrcf	i2LCD_write_char@value,w,c
 21206  016138  0B01               	andlw	1
 21207  01613A  6E46               	movwf	i2LCD_write_char@D1,c
 21208                           
 21209                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 21210  01613C  5048               	movf	i2LCD_write_char@value,w,c
 21211  01613E  0B01               	andlw	1
 21212  016140  6E47               	movwf	i2LCD_write_char@D0,c
 21213                           
 21214                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 21215  016142  C045  F040         	movff	i2LCD_write_char@D2,i2LCD_send_command@D2
 21216  016146  C046  F041         	movff	i2LCD_write_char@D1,i2LCD_send_command@D1
 21217  01614A  C047  F042         	movff	i2LCD_write_char@D0,i2LCD_send_command@D0
 21218  01614E  5044               	movf	i2LCD_write_char@D3,w,c
 21219  016150  EC09  F0B3         	call	i2_LCD_send_command
 21220                           
 21221                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 21222  016154  948D               	bcf	3981,2,c	;volatile
 21223  016156  0012               	return		;funcret
 21224  016158                     __end_ofi2_LCD_write_char:
 21225                           	opt stack 0
 21226                           pclatu	equ	0xFFB
 21227                           pclath	equ	0xFFA
 21228                           tblptru	equ	0xFF8
 21229                           tblptrh	equ	0xFF7
 21230                           tblptrl	equ	0xFF6
 21231                           tablat	equ	0xFF5
 21232                           prodh	equ	0xFF4
 21233                           prodl	equ	0xFF3
 21234                           intcon	equ	0xFF2
 21235                           postinc0	equ	0xFEE
 21236                           fsr0h	equ	0xFEA
 21237                           fsr0l	equ	0xFE9
 21238                           wreg	equ	0xFE8
 21239                           indf1	equ	0xFE7
 21240                           plusw1	equ	0xFE3
 21241                           fsr1h	equ	0xFE2
 21242                           fsr1l	equ	0xFE1
 21243                           bsr	equ	0xFE0
 21244                           indf2	equ	0xFDF
 21245                           postinc2	equ	0xFDE
 21246                           plusw2	equ	0xFDB
 21247                           fsr2h	equ	0xFDA
 21248                           fsr2l	equ	0xFD9
 21249                           status	equ	0xFD8
 21250                           
 21251 ;; *************** function i2_LCD_initialize *****************
 21252 ;; Defined at:
 21253 ;;		line 283 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 21254 ;; Parameters:    Size  Location     Type
 21255 ;;  quartz_frequ    1    wreg     unsigned char 
 21256 ;; Auto vars:     Size  Location     Type
 21257 ;;  quartz_frequ    1   31[COMRAM] unsigned char 
 21258 ;; Return value:  Size  Location     Type
 21259 ;;		None               void
 21260 ;; Registers used:
 21261 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 21262 ;; Tracked objects:
 21263 ;;		On entry : 0/0
 21264 ;;		On exit  : 0/0
 21265 ;;		Unchanged: 0/0
 21266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21270 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21271 ;;Total ram usage:        1 bytes
 21272 ;; Hardware stack levels used:    1
 21273 ;; Hardware stack levels required when called:    5
 21274 ;; This function calls:
 21275 ;;		i2_LCD_clear
 21276 ;;		i2_LCD_cursor
 21277 ;;		i2_LCD_send_command
 21278 ;;		i2_delay_ms
 21279 ;;		i2_delay_set_quartz
 21280 ;; This function is called by:
 21281 ;;		_LCD_Gap
 21282 ;;		_LCD_Park
 21283 ;; This function uses a non-reentrant model
 21284 ;;
 21285                           
 21286                           	psect	text62
 21287  0155F4                     __ptext62:
 21288                           	opt stack 0
 21289  0155F4                     i2_LCD_initialize:
 21290                           	opt stack 14
 21291                           
 21292                           ;incstack = 0
 21293                           ;i2LCD_initialize@quartz_frequency stored from wreg
 21294  0155F4  6E46               	movwf	i2LCD_initialize@quartz_frequency,c
 21295                           
 21296                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 21297  0155F6  5046               	movf	i2LCD_initialize@quartz_frequency,w,c
 21298  0155F8  EC17  F0B4         	call	i2_delay_set_quartz
 21299                           
 21300                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 21301  0155FC  948D               	bcf	3981,2,c	;volatile
 21302                           
 21303                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 21304  0155FE  928B               	bcf	3979,1,c	;volatile
 21305                           
 21306                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 21307  015600  908B               	bcf	3979,0,c	;volatile
 21308                           
 21309                           ;src\LCD_44780.c: 291: delay_ms (100);
 21310  015602  0E00               	movlw	0
 21311  015604  6E3F               	movwf	i2delay_ms@value_ms+1,c
 21312  015606  0E64               	movlw	100
 21313  015608  6E3E               	movwf	i2delay_ms@value_ms,c
 21314  01560A  EC6D  F0B2         	call	i2_delay_ms	;wreg free
 21315                           
 21316                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 21317  01560E  0E00               	movlw	0
 21318  015610  6E40               	movwf	i2LCD_send_command@D2,c
 21319  015612  0E01               	movlw	1
 21320  015614  6E41               	movwf	i2LCD_send_command@D1,c
 21321  015616  0E01               	movlw	1
 21322  015618  6E42               	movwf	i2LCD_send_command@D0,c
 21323  01561A  0E00               	movlw	0
 21324  01561C  EC09  F0B3         	call	i2_LCD_send_command
 21325                           
 21326                           ;src\LCD_44780.c: 293: delay_ms (100);
 21327  015620  0E00               	movlw	0
 21328  015622  6E3F               	movwf	i2delay_ms@value_ms+1,c
 21329  015624  0E64               	movlw	100
 21330  015626  6E3E               	movwf	i2delay_ms@value_ms,c
 21331  015628  EC6D  F0B2         	call	i2_delay_ms	;wreg free
 21332                           
 21333                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 21334  01562C  0E00               	movlw	0
 21335  01562E  6E40               	movwf	i2LCD_send_command@D2,c
 21336  015630  0E01               	movlw	1
 21337  015632  6E41               	movwf	i2LCD_send_command@D1,c
 21338  015634  0E01               	movlw	1
 21339  015636  6E42               	movwf	i2LCD_send_command@D0,c
 21340  015638  0E00               	movlw	0
 21341  01563A  EC09  F0B3         	call	i2_LCD_send_command
 21342                           
 21343                           ;src\LCD_44780.c: 295: delay_ms (10);
 21344  01563E  0E00               	movlw	0
 21345  015640  6E3F               	movwf	i2delay_ms@value_ms+1,c
 21346  015642  0E0A               	movlw	10
 21347  015644  6E3E               	movwf	i2delay_ms@value_ms,c
 21348  015646  EC6D  F0B2         	call	i2_delay_ms	;wreg free
 21349                           
 21350                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 21351  01564A  0E00               	movlw	0
 21352  01564C  6E40               	movwf	i2LCD_send_command@D2,c
 21353  01564E  0E01               	movlw	1
 21354  015650  6E41               	movwf	i2LCD_send_command@D1,c
 21355  015652  0E01               	movlw	1
 21356  015654  6E42               	movwf	i2LCD_send_command@D0,c
 21357  015656  0E00               	movlw	0
 21358  015658  EC09  F0B3         	call	i2_LCD_send_command
 21359                           
 21360                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 21361  01565C  0E00               	movlw	0
 21362  01565E  6E40               	movwf	i2LCD_send_command@D2,c
 21363  015660  0E01               	movlw	1
 21364  015662  6E41               	movwf	i2LCD_send_command@D1,c
 21365  015664  0E00               	movlw	0
 21366  015666  6E42               	movwf	i2LCD_send_command@D0,c
 21367  015668  0E00               	movlw	0
 21368  01566A  EC09  F0B3         	call	i2_LCD_send_command
 21369                           
 21370                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 21371  01566E  0E00               	movlw	0
 21372  015670  6E40               	movwf	i2LCD_send_command@D2,c
 21373  015672  0E01               	movlw	1
 21374  015674  6E41               	movwf	i2LCD_send_command@D1,c
 21375  015676  0E00               	movlw	0
 21376  015678  6E42               	movwf	i2LCD_send_command@D0,c
 21377  01567A  0E00               	movlw	0
 21378  01567C  EC09  F0B3         	call	i2_LCD_send_command
 21379                           
 21380                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 21381  015680  0E00               	movlw	0
 21382  015682  6E40               	movwf	i2LCD_send_command@D2,c
 21383  015684  0E00               	movlw	0
 21384  015686  6E41               	movwf	i2LCD_send_command@D1,c
 21385  015688  0E00               	movlw	0
 21386  01568A  6E42               	movwf	i2LCD_send_command@D0,c
 21387  01568C  0E01               	movlw	1
 21388  01568E  EC09  F0B3         	call	i2_LCD_send_command
 21389                           
 21390                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 21391  015692  0E00               	movlw	0
 21392  015694  6E40               	movwf	i2LCD_send_command@D2,c
 21393  015696  0E00               	movlw	0
 21394  015698  6E41               	movwf	i2LCD_send_command@D1,c
 21395  01569A  0E00               	movlw	0
 21396  01569C  6E42               	movwf	i2LCD_send_command@D0,c
 21397  01569E  0E00               	movlw	0
 21398  0156A0  EC09  F0B3         	call	i2_LCD_send_command
 21399                           
 21400                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 21401  0156A4  0E00               	movlw	0
 21402  0156A6  6E40               	movwf	i2LCD_send_command@D2,c
 21403  0156A8  0E00               	movlw	0
 21404  0156AA  6E41               	movwf	i2LCD_send_command@D1,c
 21405  0156AC  0E00               	movlw	0
 21406  0156AE  6E42               	movwf	i2LCD_send_command@D0,c
 21407  0156B0  0E01               	movlw	1
 21408  0156B2  EC09  F0B3         	call	i2_LCD_send_command
 21409                           
 21410                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 21411  0156B6  0E00               	movlw	0
 21412  0156B8  6E40               	movwf	i2LCD_send_command@D2,c
 21413  0156BA  0E00               	movlw	0
 21414  0156BC  6E41               	movwf	i2LCD_send_command@D1,c
 21415  0156BE  0E00               	movlw	0
 21416  0156C0  6E42               	movwf	i2LCD_send_command@D0,c
 21417  0156C2  0E00               	movlw	0
 21418  0156C4  EC09  F0B3         	call	i2_LCD_send_command
 21419                           
 21420                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 21421  0156C8  0E00               	movlw	0
 21422  0156CA  6E40               	movwf	i2LCD_send_command@D2,c
 21423  0156CC  0E00               	movlw	0
 21424  0156CE  6E41               	movwf	i2LCD_send_command@D1,c
 21425  0156D0  0E01               	movlw	1
 21426  0156D2  6E42               	movwf	i2LCD_send_command@D0,c
 21427  0156D4  0E00               	movlw	0
 21428  0156D6  EC09  F0B3         	call	i2_LCD_send_command
 21429                           
 21430                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 21431  0156DA  0E00               	movlw	0
 21432  0156DC  6E40               	movwf	i2LCD_send_command@D2,c
 21433  0156DE  0E00               	movlw	0
 21434  0156E0  6E41               	movwf	i2LCD_send_command@D1,c
 21435  0156E2  0E00               	movlw	0
 21436  0156E4  6E42               	movwf	i2LCD_send_command@D0,c
 21437  0156E6  0E00               	movlw	0
 21438  0156E8  EC09  F0B3         	call	i2_LCD_send_command
 21439                           
 21440                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 21441  0156EC  0E01               	movlw	1
 21442  0156EE  6E40               	movwf	i2LCD_send_command@D2,c
 21443  0156F0  0E01               	movlw	1
 21444  0156F2  6E41               	movwf	i2LCD_send_command@D1,c
 21445  0156F4  0E00               	movlw	0
 21446  0156F6  6E42               	movwf	i2LCD_send_command@D0,c
 21447  0156F8  0E00               	movlw	0
 21448  0156FA  EC09  F0B3         	call	i2_LCD_send_command
 21449                           
 21450                           ;src\LCD_44780.c: 312: LCD_clear ();
 21451  0156FE  EC5D  F0B3         	call	i2_LCD_clear	;wreg free
 21452                           
 21453                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 21454  015702  0E00               	movlw	0
 21455  015704  6E44               	movwf	i2LCD_cursor@blinking,c
 21456  015706  0E00               	movlw	0
 21457  015708  EC36  F0B3         	call	i2_LCD_cursor
 21458  01570C  0012               	return		;funcret
 21459  01570E                     __end_ofi2_LCD_initialize:
 21460                           	opt stack 0
 21461                           pclatu	equ	0xFFB
 21462                           pclath	equ	0xFFA
 21463                           tblptru	equ	0xFF8
 21464                           tblptrh	equ	0xFF7
 21465                           tblptrl	equ	0xFF6
 21466                           tablat	equ	0xFF5
 21467                           prodh	equ	0xFF4
 21468                           prodl	equ	0xFF3
 21469                           intcon	equ	0xFF2
 21470                           postinc0	equ	0xFEE
 21471                           fsr0h	equ	0xFEA
 21472                           fsr0l	equ	0xFE9
 21473                           wreg	equ	0xFE8
 21474                           indf1	equ	0xFE7
 21475                           plusw1	equ	0xFE3
 21476                           fsr1h	equ	0xFE2
 21477                           fsr1l	equ	0xFE1
 21478                           bsr	equ	0xFE0
 21479                           indf2	equ	0xFDF
 21480                           postinc2	equ	0xFDE
 21481                           plusw2	equ	0xFDB
 21482                           fsr2h	equ	0xFDA
 21483                           fsr2l	equ	0xFD9
 21484                           status	equ	0xFD8
 21485                           
 21486 ;; *************** function i2_delay_set_quartz *****************
 21487 ;; Defined at:
 21488 ;;		line 115 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 21489 ;; Parameters:    Size  Location     Type
 21490 ;;  frequency       1    wreg     unsigned char 
 21491 ;; Auto vars:     Size  Location     Type
 21492 ;;  frequency       1   17[COMRAM] unsigned char 
 21493 ;; Return value:  Size  Location     Type
 21494 ;;		None               void
 21495 ;; Registers used:
 21496 ;;		wreg
 21497 ;; Tracked objects:
 21498 ;;		On entry : 0/0
 21499 ;;		On exit  : 0/0
 21500 ;;		Unchanged: 0/0
 21501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21503 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21505 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21506 ;;Total ram usage:        1 bytes
 21507 ;; Hardware stack levels used:    1
 21508 ;; This function calls:
 21509 ;;		Nothing
 21510 ;; This function is called by:
 21511 ;;		i2_LCD_initialize
 21512 ;; This function uses a non-reentrant model
 21513 ;;
 21514                           
 21515                           	psect	text63
 21516  01682E                     __ptext63:
 21517                           	opt stack 0
 21518  01682E                     i2_delay_set_quartz:
 21519                           	opt stack 18
 21520                           
 21521                           ;incstack = 0
 21522                           ;i2delay_set_quartz@frequency stored from wreg
 21523  01682E  6E38               	movwf	i2delay_set_quartz@frequency,c
 21524                           
 21525                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 21526  016830  C038  F0EC         	movff	i2delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 21527  016834  0012               	return		;funcret
 21528  016836                     __end_ofi2_delay_set_quartz:
 21529                           	opt stack 0
 21530                           pclatu	equ	0xFFB
 21531                           pclath	equ	0xFFA
 21532                           tblptru	equ	0xFF8
 21533                           tblptrh	equ	0xFF7
 21534                           tblptrl	equ	0xFF6
 21535                           tablat	equ	0xFF5
 21536                           prodh	equ	0xFF4
 21537                           prodl	equ	0xFF3
 21538                           intcon	equ	0xFF2
 21539                           postinc0	equ	0xFEE
 21540                           fsr0h	equ	0xFEA
 21541                           fsr0l	equ	0xFE9
 21542                           wreg	equ	0xFE8
 21543                           indf1	equ	0xFE7
 21544                           plusw1	equ	0xFE3
 21545                           fsr1h	equ	0xFE2
 21546                           fsr1l	equ	0xFE1
 21547                           bsr	equ	0xFE0
 21548                           indf2	equ	0xFDF
 21549                           postinc2	equ	0xFDE
 21550                           plusw2	equ	0xFDB
 21551                           fsr2h	equ	0xFDA
 21552                           fsr2l	equ	0xFD9
 21553                           status	equ	0xFD8
 21554                           
 21555 ;; *************** function i2_LCD_cursor *****************
 21556 ;; Defined at:
 21557 ;;		line 266 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 21558 ;; Parameters:    Size  Location     Type
 21559 ;;  active          1    wreg     unsigned char 
 21560 ;;  blinking        1   29[COMRAM] unsigned char 
 21561 ;; Auto vars:     Size  Location     Type
 21562 ;;  active          1   30[COMRAM] unsigned char 
 21563 ;; Return value:  Size  Location     Type
 21564 ;;		None               void
 21565 ;; Registers used:
 21566 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 21567 ;; Tracked objects:
 21568 ;;		On entry : 0/0
 21569 ;;		On exit  : 0/0
 21570 ;;		Unchanged: 0/0
 21571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21572 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21573 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21575 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21576 ;;Total ram usage:        2 bytes
 21577 ;; Hardware stack levels used:    1
 21578 ;; Hardware stack levels required when called:    4
 21579 ;; This function calls:
 21580 ;;		i2_LCD_send_command
 21581 ;; This function is called by:
 21582 ;;		i2_LCD_initialize
 21583 ;; This function uses a non-reentrant model
 21584 ;;
 21585                           
 21586                           	psect	text64
 21587  01666C                     __ptext64:
 21588                           	opt stack 0
 21589  01666C                     i2_LCD_cursor:
 21590                           	opt stack 14
 21591                           
 21592                           ;incstack = 0
 21593                           ;i2LCD_cursor@active stored from wreg
 21594  01666C  6E45               	movwf	i2LCD_cursor@active,c
 21595                           
 21596                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 21597  01666E  0E00               	movlw	0
 21598  016670  6E40               	movwf	i2LCD_send_command@D2,c
 21599  016672  0E00               	movlw	0
 21600  016674  6E41               	movwf	i2LCD_send_command@D1,c
 21601  016676  0E00               	movlw	0
 21602  016678  6E42               	movwf	i2LCD_send_command@D0,c
 21603  01667A  0E00               	movlw	0
 21604  01667C  EC09  F0B3         	call	i2_LCD_send_command
 21605                           
 21606                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 21607  016680  0E01               	movlw	1
 21608  016682  6E40               	movwf	i2LCD_send_command@D2,c
 21609  016684  C045  F041         	movff	i2LCD_cursor@active,i2LCD_send_command@D1
 21610  016688  C044  F042         	movff	i2LCD_cursor@blinking,i2LCD_send_command@D0
 21611  01668C  0E01               	movlw	1
 21612  01668E  EC09  F0B3         	call	i2_LCD_send_command
 21613  016692  0012               	return		;funcret
 21614  016694                     __end_ofi2_LCD_cursor:
 21615                           	opt stack 0
 21616                           pclatu	equ	0xFFB
 21617                           pclath	equ	0xFFA
 21618                           tblptru	equ	0xFF8
 21619                           tblptrh	equ	0xFF7
 21620                           tblptrl	equ	0xFF6
 21621                           tablat	equ	0xFF5
 21622                           prodh	equ	0xFF4
 21623                           prodl	equ	0xFF3
 21624                           intcon	equ	0xFF2
 21625                           postinc0	equ	0xFEE
 21626                           fsr0h	equ	0xFEA
 21627                           fsr0l	equ	0xFE9
 21628                           wreg	equ	0xFE8
 21629                           indf1	equ	0xFE7
 21630                           plusw1	equ	0xFE3
 21631                           fsr1h	equ	0xFE2
 21632                           fsr1l	equ	0xFE1
 21633                           bsr	equ	0xFE0
 21634                           indf2	equ	0xFDF
 21635                           postinc2	equ	0xFDE
 21636                           plusw2	equ	0xFDB
 21637                           fsr2h	equ	0xFDA
 21638                           fsr2l	equ	0xFD9
 21639                           status	equ	0xFD8
 21640                           
 21641 ;; *************** function i2_LCD_clear *****************
 21642 ;; Defined at:
 21643 ;;		line 257 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 21644 ;; Parameters:    Size  Location     Type
 21645 ;;		None
 21646 ;; Auto vars:     Size  Location     Type
 21647 ;;		None
 21648 ;; Return value:  Size  Location     Type
 21649 ;;		None               void
 21650 ;; Registers used:
 21651 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 21652 ;; Tracked objects:
 21653 ;;		On entry : 0/0
 21654 ;;		On exit  : 0/0
 21655 ;;		Unchanged: 0/0
 21656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21661 ;;Total ram usage:        0 bytes
 21662 ;; Hardware stack levels used:    1
 21663 ;; Hardware stack levels required when called:    4
 21664 ;; This function calls:
 21665 ;;		i2_LCD_send_command
 21666 ;; This function is called by:
 21667 ;;		i2_LCD_initialize
 21668 ;; This function uses a non-reentrant model
 21669 ;;
 21670                           
 21671                           	psect	text65
 21672  0166BA                     __ptext65:
 21673                           	opt stack 0
 21674  0166BA                     i2_LCD_clear:
 21675                           	opt stack 14
 21676                           
 21677                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 21678                           
 21679                           ;incstack = 0
 21680  0166BA  0E00               	movlw	0
 21681  0166BC  6E40               	movwf	i2LCD_send_command@D2,c
 21682  0166BE  0E00               	movlw	0
 21683  0166C0  6E41               	movwf	i2LCD_send_command@D1,c
 21684  0166C2  0E00               	movlw	0
 21685  0166C4  6E42               	movwf	i2LCD_send_command@D0,c
 21686  0166C6  0E00               	movlw	0
 21687  0166C8  EC09  F0B3         	call	i2_LCD_send_command
 21688                           
 21689                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 21690  0166CC  0E00               	movlw	0
 21691  0166CE  6E40               	movwf	i2LCD_send_command@D2,c
 21692  0166D0  0E00               	movlw	0
 21693  0166D2  6E41               	movwf	i2LCD_send_command@D1,c
 21694  0166D4  0E01               	movlw	1
 21695  0166D6  6E42               	movwf	i2LCD_send_command@D0,c
 21696  0166D8  0E00               	movlw	0
 21697  0166DA  EC09  F0B3         	call	i2_LCD_send_command
 21698  0166DE  0012               	return		;funcret
 21699  0166E0                     __end_ofi2_LCD_clear:
 21700                           	opt stack 0
 21701                           pclatu	equ	0xFFB
 21702                           pclath	equ	0xFFA
 21703                           tblptru	equ	0xFF8
 21704                           tblptrh	equ	0xFF7
 21705                           tblptrl	equ	0xFF6
 21706                           tablat	equ	0xFF5
 21707                           prodh	equ	0xFF4
 21708                           prodl	equ	0xFF3
 21709                           intcon	equ	0xFF2
 21710                           postinc0	equ	0xFEE
 21711                           fsr0h	equ	0xFEA
 21712                           fsr0l	equ	0xFE9
 21713                           wreg	equ	0xFE8
 21714                           indf1	equ	0xFE7
 21715                           plusw1	equ	0xFE3
 21716                           fsr1h	equ	0xFE2
 21717                           fsr1l	equ	0xFE1
 21718                           bsr	equ	0xFE0
 21719                           indf2	equ	0xFDF
 21720                           postinc2	equ	0xFDE
 21721                           plusw2	equ	0xFDB
 21722                           fsr2h	equ	0xFDA
 21723                           fsr2l	equ	0xFD9
 21724                           status	equ	0xFD8
 21725                           
 21726 ;; *************** function i2_LCD_goto_line *****************
 21727 ;; Defined at:
 21728 ;;		line 111 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 21729 ;; Parameters:    Size  Location     Type
 21730 ;;  line            1    wreg     unsigned char 
 21731 ;; Auto vars:     Size  Location     Type
 21732 ;;  line            1   29[COMRAM] unsigned char 
 21733 ;; Return value:  Size  Location     Type
 21734 ;;		None               void
 21735 ;; Registers used:
 21736 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 21737 ;; Tracked objects:
 21738 ;;		On entry : 0/0
 21739 ;;		On exit  : 0/0
 21740 ;;		Unchanged: 0/0
 21741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21743 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21745 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21746 ;;Total ram usage:        1 bytes
 21747 ;; Hardware stack levels used:    1
 21748 ;; Hardware stack levels required when called:    4
 21749 ;; This function calls:
 21750 ;;		i2_LCD_send_command
 21751 ;; This function is called by:
 21752 ;;		_LCD_Gap
 21753 ;;		_LCD_Park
 21754 ;; This function uses a non-reentrant model
 21755 ;;
 21756                           
 21757                           	psect	text66
 21758  015BF8                     __ptext66:
 21759                           	opt stack 0
 21760  015BF8                     i2_LCD_goto_line:
 21761                           	opt stack 15
 21762                           
 21763                           ;incstack = 0
 21764                           ;i2LCD_goto_line@line stored from wreg
 21765  015BF8  6E44               	movwf	i2LCD_goto_line@line,c
 21766                           
 21767                           ;src\LCD_44780.c: 113: switch(line) {
 21768  015BFA  D04C               	goto	i2l7232
 21769  015BFC                     i2l7224:
 21770  015BFC  0E00               	movlw	0
 21771  015BFE  6E40               	movwf	i2LCD_send_command@D2,c
 21772  015C00  0E00               	movlw	0
 21773  015C02  6E41               	movwf	i2LCD_send_command@D1,c
 21774  015C04  0E00               	movlw	0
 21775  015C06  6E42               	movwf	i2LCD_send_command@D0,c
 21776  015C08  0E01               	movlw	1
 21777  015C0A  EC09  F0B3         	call	i2_LCD_send_command
 21778                           
 21779                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 21780  015C0E  0E00               	movlw	0
 21781  015C10  6E40               	movwf	i2LCD_send_command@D2,c
 21782  015C12  0E00               	movlw	0
 21783  015C14  6E41               	movwf	i2LCD_send_command@D1,c
 21784  015C16  0E00               	movlw	0
 21785  015C18  6E42               	movwf	i2LCD_send_command@D0,c
 21786  015C1A  0E00               	movlw	0
 21787  015C1C  EC09  F0B3         	call	i2_LCD_send_command
 21788                           
 21789                           ;src\LCD_44780.c: 117: break;
 21790  015C20  0012               	return	
 21791  015C22                     i2l7226:
 21792  015C22  0E01               	movlw	1
 21793  015C24  6E40               	movwf	i2LCD_send_command@D2,c
 21794  015C26  0E00               	movlw	0
 21795  015C28  6E41               	movwf	i2LCD_send_command@D1,c
 21796  015C2A  0E00               	movlw	0
 21797  015C2C  6E42               	movwf	i2LCD_send_command@D0,c
 21798  015C2E  0E01               	movlw	1
 21799  015C30  EC09  F0B3         	call	i2_LCD_send_command
 21800                           
 21801                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 21802  015C34  0E00               	movlw	0
 21803  015C36  6E40               	movwf	i2LCD_send_command@D2,c
 21804  015C38  0E00               	movlw	0
 21805  015C3A  6E41               	movwf	i2LCD_send_command@D1,c
 21806  015C3C  0E00               	movlw	0
 21807  015C3E  6E42               	movwf	i2LCD_send_command@D0,c
 21808  015C40  0E00               	movlw	0
 21809  015C42  EC09  F0B3         	call	i2_LCD_send_command
 21810                           
 21811                           ;src\LCD_44780.c: 121: break;
 21812  015C46  0012               	return	
 21813  015C48                     i2l7228:
 21814  015C48  0E00               	movlw	0
 21815  015C4A  6E40               	movwf	i2LCD_send_command@D2,c
 21816  015C4C  0E00               	movlw	0
 21817  015C4E  6E41               	movwf	i2LCD_send_command@D1,c
 21818  015C50  0E01               	movlw	1
 21819  015C52  6E42               	movwf	i2LCD_send_command@D0,c
 21820  015C54  0E01               	movlw	1
 21821  015C56  EC09  F0B3         	call	i2_LCD_send_command
 21822                           
 21823                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 21824  015C5A  0E01               	movlw	1
 21825  015C5C  6E40               	movwf	i2LCD_send_command@D2,c
 21826  015C5E  0E00               	movlw	0
 21827  015C60  6E41               	movwf	i2LCD_send_command@D1,c
 21828  015C62  0E00               	movlw	0
 21829  015C64  6E42               	movwf	i2LCD_send_command@D0,c
 21830  015C66  0E00               	movlw	0
 21831  015C68  EC09  F0B3         	call	i2_LCD_send_command
 21832                           
 21833                           ;src\LCD_44780.c: 125: break;
 21834  015C6C  0012               	return	
 21835  015C6E                     i2l7230:
 21836  015C6E  0E01               	movlw	1
 21837  015C70  6E40               	movwf	i2LCD_send_command@D2,c
 21838  015C72  0E00               	movlw	0
 21839  015C74  6E41               	movwf	i2LCD_send_command@D1,c
 21840  015C76  0E01               	movlw	1
 21841  015C78  6E42               	movwf	i2LCD_send_command@D0,c
 21842  015C7A  0E01               	movlw	1
 21843  015C7C  EC09  F0B3         	call	i2_LCD_send_command
 21844                           
 21845                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 21846  015C80  0E01               	movlw	1
 21847  015C82  6E40               	movwf	i2LCD_send_command@D2,c
 21848  015C84  0E00               	movlw	0
 21849  015C86  6E41               	movwf	i2LCD_send_command@D1,c
 21850  015C88  0E00               	movlw	0
 21851  015C8A  6E42               	movwf	i2LCD_send_command@D0,c
 21852  015C8C  0E00               	movlw	0
 21853  015C8E  EC09  F0B3         	call	i2_LCD_send_command
 21854                           
 21855                           ;src\LCD_44780.c: 129: }
 21856  015C92  0012               	return	
 21857  015C94                     i2l7232:
 21858  015C94  5044               	movf	i2LCD_goto_line@line,w,c
 21859                           
 21860                           ; Switch size 1, requested type "space"
 21861                           ; Number of cases is 4, Range of values is 1 to 4
 21862                           ; switch strategies available:
 21863                           ; Name         Instructions Cycles
 21864                           ; simple_byte           13     7 (average)
 21865                           ;	Chosen strategy is simple_byte
 21866  015C96  0A01               	xorlw	1	; case 1
 21867  015C98  B4D8               	btfsc	status,2,c
 21868  015C9A  D7B0               	goto	i2l7224
 21869  015C9C  0A03               	xorlw	3	; case 2
 21870  015C9E  B4D8               	btfsc	status,2,c
 21871  015CA0  D7C0               	goto	i2l7226
 21872  015CA2  0A01               	xorlw	1	; case 3
 21873  015CA4  B4D8               	btfsc	status,2,c
 21874  015CA6  D7D0               	goto	i2l7228
 21875  015CA8  0A07               	xorlw	7	; case 4
 21876  015CAA  A4D8               	btfss	status,2,c
 21877  015CAC  0012               	return	
 21878  015CAE  D7DF               	goto	i2l7230
 21879  015CB0                     __end_ofi2_LCD_goto_line:
 21880                           	opt stack 0
 21881                           pclatu	equ	0xFFB
 21882                           pclath	equ	0xFFA
 21883                           tblptru	equ	0xFF8
 21884                           tblptrh	equ	0xFF7
 21885                           tblptrl	equ	0xFF6
 21886                           tablat	equ	0xFF5
 21887                           prodh	equ	0xFF4
 21888                           prodl	equ	0xFF3
 21889                           intcon	equ	0xFF2
 21890                           postinc0	equ	0xFEE
 21891                           fsr0h	equ	0xFEA
 21892                           fsr0l	equ	0xFE9
 21893                           wreg	equ	0xFE8
 21894                           indf1	equ	0xFE7
 21895                           plusw1	equ	0xFE3
 21896                           fsr1h	equ	0xFE2
 21897                           fsr1l	equ	0xFE1
 21898                           bsr	equ	0xFE0
 21899                           indf2	equ	0xFDF
 21900                           postinc2	equ	0xFDE
 21901                           plusw2	equ	0xFDB
 21902                           fsr2h	equ	0xFDA
 21903                           fsr2l	equ	0xFD9
 21904                           status	equ	0xFD8
 21905                           
 21906 ;; *************** function i2_LCD_send_command *****************
 21907 ;; Defined at:
 21908 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 21909 ;; Parameters:    Size  Location     Type
 21910 ;;  D3              1    wreg     unsigned char 
 21911 ;;  D2              1   25[COMRAM] unsigned char 
 21912 ;;  D1              1   26[COMRAM] unsigned char 
 21913 ;;  D0              1   27[COMRAM] unsigned char 
 21914 ;; Auto vars:     Size  Location     Type
 21915 ;;  D3              1   28[COMRAM] unsigned char 
 21916 ;; Return value:  Size  Location     Type
 21917 ;;		None               void
 21918 ;; Registers used:
 21919 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 21920 ;; Tracked objects:
 21921 ;;		On entry : 0/0
 21922 ;;		On exit  : 0/0
 21923 ;;		Unchanged: 0/0
 21924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21925 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21926 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21928 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21929 ;;Total ram usage:        4 bytes
 21930 ;; Hardware stack levels used:    1
 21931 ;; Hardware stack levels required when called:    3
 21932 ;; This function calls:
 21933 ;;		i2_LCD_enable_pulse
 21934 ;; This function is called by:
 21935 ;;		i2_LCD_goto_line
 21936 ;;		i2_LCD_write_char
 21937 ;;		i2_LCD_clear
 21938 ;;		i2_LCD_cursor
 21939 ;;		i2_LCD_initialize
 21940 ;; This function uses a non-reentrant model
 21941 ;;
 21942                           
 21943                           	psect	text67
 21944  016612                     __ptext67:
 21945                           	opt stack 0
 21946  016612                     i2_LCD_send_command:
 21947                           	opt stack 14
 21948                           
 21949                           ;incstack = 0
 21950                           ;i2LCD_send_command@D3 stored from wreg
 21951  016612  6E43               	movwf	i2LCD_send_command@D3,c
 21952                           
 21953                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 21954  016614  B042               	btfsc	i2LCD_send_command@D0,0,c
 21955  016616  D002               	bra	i2u602_45
 21956  016618  948B               	bcf	3979,2,c	;volatile
 21957  01661A  D001               	bra	i2u602_46
 21958  01661C                     i2u602_45:
 21959  01661C  848B               	bsf	3979,2,c	;volatile
 21960  01661E                     i2u602_46:
 21961                           
 21962                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 21963  01661E  B041               	btfsc	i2LCD_send_command@D1,0,c
 21964  016620  D002               	bra	i2u603_45
 21965  016622  968B               	bcf	3979,3,c	;volatile
 21966  016624  D001               	bra	i2u603_46
 21967  016626                     i2u603_45:
 21968  016626  868B               	bsf	3979,3,c	;volatile
 21969  016628                     i2u603_46:
 21970                           
 21971                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 21972  016628  B040               	btfsc	i2LCD_send_command@D2,0,c
 21973  01662A  D002               	bra	i2u604_45
 21974  01662C  908C               	bcf	3980,0,c	;volatile
 21975  01662E  D001               	bra	i2u604_46
 21976  016630                     i2u604_45:
 21977  016630  808C               	bsf	3980,0,c	;volatile
 21978  016632                     i2u604_46:
 21979                           
 21980                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 21981  016632  B043               	btfsc	i2LCD_send_command@D3,0,c
 21982  016634  D002               	bra	i2u605_45
 21983  016636  928C               	bcf	3980,1,c	;volatile
 21984  016638  D001               	bra	i2u605_46
 21985  01663A                     i2u605_45:
 21986  01663A  828C               	bsf	3980,1,c	;volatile
 21987  01663C                     i2u605_46:
 21988                           
 21989                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 21990  01663C  ECB5  F0B3         	call	i2_LCD_enable_pulse	;wreg free
 21991  016640  0012               	return		;funcret
 21992  016642                     __end_ofi2_LCD_send_command:
 21993                           	opt stack 0
 21994                           pclatu	equ	0xFFB
 21995                           pclath	equ	0xFFA
 21996                           tblptru	equ	0xFF8
 21997                           tblptrh	equ	0xFF7
 21998                           tblptrl	equ	0xFF6
 21999                           tablat	equ	0xFF5
 22000                           prodh	equ	0xFF4
 22001                           prodl	equ	0xFF3
 22002                           intcon	equ	0xFF2
 22003                           postinc0	equ	0xFEE
 22004                           fsr0h	equ	0xFEA
 22005                           fsr0l	equ	0xFE9
 22006                           wreg	equ	0xFE8
 22007                           indf1	equ	0xFE7
 22008                           plusw1	equ	0xFE3
 22009                           fsr1h	equ	0xFE2
 22010                           fsr1l	equ	0xFE1
 22011                           bsr	equ	0xFE0
 22012                           indf2	equ	0xFDF
 22013                           postinc2	equ	0xFDE
 22014                           plusw2	equ	0xFDB
 22015                           fsr2h	equ	0xFDA
 22016                           fsr2l	equ	0xFD9
 22017                           status	equ	0xFD8
 22018                           
 22019 ;; *************** function i2_LCD_enable_pulse *****************
 22020 ;; Defined at:
 22021 ;;		line 49 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 22022 ;; Parameters:    Size  Location     Type
 22023 ;;		None
 22024 ;; Auto vars:     Size  Location     Type
 22025 ;;		None
 22026 ;; Return value:  Size  Location     Type
 22027 ;;		None               void
 22028 ;; Registers used:
 22029 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 22030 ;; Tracked objects:
 22031 ;;		On entry : 0/0
 22032 ;;		On exit  : 0/0
 22033 ;;		Unchanged: 0/0
 22034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22039 ;;Total ram usage:        0 bytes
 22040 ;; Hardware stack levels used:    1
 22041 ;; Hardware stack levels required when called:    2
 22042 ;; This function calls:
 22043 ;;		i2_delay_ms
 22044 ;; This function is called by:
 22045 ;;		i2_LCD_send_command
 22046 ;; This function uses a non-reentrant model
 22047 ;;
 22048                           
 22049                           	psect	text68
 22050  01676A                     __ptext68:
 22051                           	opt stack 0
 22052  01676A                     i2_LCD_enable_pulse:
 22053                           	opt stack 14
 22054                           
 22055                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 22056                           
 22057                           ;incstack = 0
 22058  01676A  828B               	bsf	3979,1,c	;volatile
 22059                           
 22060                           ;src\LCD_44780.c: 52: delay_ms (1);
 22061  01676C  0E00               	movlw	0
 22062  01676E  6E3F               	movwf	i2delay_ms@value_ms+1,c
 22063  016770  0E01               	movlw	1
 22064  016772  6E3E               	movwf	i2delay_ms@value_ms,c
 22065  016774  EC6D  F0B2         	call	i2_delay_ms	;wreg free
 22066                           
 22067                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 22068  016778  928B               	bcf	3979,1,c	;volatile
 22069                           
 22070                           ;src\LCD_44780.c: 54: delay_ms (1);
 22071  01677A  0E00               	movlw	0
 22072  01677C  6E3F               	movwf	i2delay_ms@value_ms+1,c
 22073  01677E  0E01               	movlw	1
 22074  016780  6E3E               	movwf	i2delay_ms@value_ms,c
 22075  016782  EC6D  F0B2         	call	i2_delay_ms	;wreg free
 22076  016786  0012               	return		;funcret
 22077  016788                     __end_ofi2_LCD_enable_pulse:
 22078                           	opt stack 0
 22079                           pclatu	equ	0xFFB
 22080                           pclath	equ	0xFFA
 22081                           tblptru	equ	0xFF8
 22082                           tblptrh	equ	0xFF7
 22083                           tblptrl	equ	0xFF6
 22084                           tablat	equ	0xFF5
 22085                           prodh	equ	0xFF4
 22086                           prodl	equ	0xFF3
 22087                           intcon	equ	0xFF2
 22088                           postinc0	equ	0xFEE
 22089                           fsr0h	equ	0xFEA
 22090                           fsr0l	equ	0xFE9
 22091                           wreg	equ	0xFE8
 22092                           indf1	equ	0xFE7
 22093                           plusw1	equ	0xFE3
 22094                           fsr1h	equ	0xFE2
 22095                           fsr1l	equ	0xFE1
 22096                           bsr	equ	0xFE0
 22097                           indf2	equ	0xFDF
 22098                           postinc2	equ	0xFDE
 22099                           plusw2	equ	0xFDB
 22100                           fsr2h	equ	0xFDA
 22101                           fsr2l	equ	0xFD9
 22102                           status	equ	0xFD8
 22103                           
 22104 ;; *************** function i2_delay_ms *****************
 22105 ;; Defined at:
 22106 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 22107 ;; Parameters:    Size  Location     Type
 22108 ;;  value_ms        2   23[COMRAM] unsigned int 
 22109 ;; Auto vars:     Size  Location     Type
 22110 ;;		None
 22111 ;; Return value:  Size  Location     Type
 22112 ;;		None               void
 22113 ;; Registers used:
 22114 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 22115 ;; Tracked objects:
 22116 ;;		On entry : 0/0
 22117 ;;		On exit  : 0/0
 22118 ;;		Unchanged: 0/0
 22119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22120 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22123 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22124 ;;Total ram usage:        2 bytes
 22125 ;; Hardware stack levels used:    1
 22126 ;; Hardware stack levels required when called:    1
 22127 ;; This function calls:
 22128 ;;		i2___wmul
 22129 ;; This function is called by:
 22130 ;;		i2_LCD_enable_pulse
 22131 ;;		i2_LCD_initialize
 22132 ;; This function uses a non-reentrant model
 22133 ;;
 22134                           
 22135                           	psect	text69
 22136  0164DA                     __ptext69:
 22137                           	opt stack 0
 22138  0164DA                     i2_delay_ms:
 22139                           	opt stack 14
 22140                           
 22141                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 22142                           
 22143                           ;incstack = 0
 22144  0164DA  C0EC  F038         	movff	_delay_quartz_frequency_value,i2___wmul@multiplier	;volatile
 22145  0164DE  6A39               	clrf	i2___wmul@multiplier+1,c
 22146  0164E0  C03E  F03A         	movff	i2delay_ms@value_ms,i2___wmul@multiplicand
 22147  0164E4  C03F  F03B         	movff	i2delay_ms@value_ms+1,i2___wmul@multiplicand+1
 22148  0164E8  EC70  F0B3         	call	i2___wmul	;wreg free
 22149  0164EC  C038  F0E0         	movff	?i2___wmul,_clock_counter_reference	;volatile
 22150  0164F0  C039  F0E1         	movff	?i2___wmul+1,_clock_counter_reference+1	;volatile
 22151                           
 22152                           ;src\delay.c: 75: while (clock_counter_reference) {
 22153  0164F4  D007               	goto	i2l587
 22154  0164F6                     i2l4910:
 22155                           
 22156                           ;src\delay.c: 85: _delay(240);
 22157  0164F6  0E50               	movlw	80
 22158  0164F8                     i2u1267_47:
 22159  0164F8  2EE8               	decfsz	wreg,f,c
 22160  0164FA  D7FE               	goto	i2u1267_47
 22161                           
 22162                           ;src\delay.c: 88: clock_counter_reference--;
 22163  0164FC  0100               	movlb	0	; () banked
 22164  0164FE  07E0               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 22165  016500  A0D8               	btfss	status,0,c
 22166  016502  07E1               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 22167  016504                     i2l587:
 22168  016504  0100               	movlb	0	; () banked
 22169  016506  51E0               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 22170  016508  0100               	movlb	0	; () banked
 22171  01650A  11E1               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 22172  01650C  B4D8               	btfsc	status,2,c
 22173  01650E  0012               	return	
 22174  016510  D7F2               	goto	i2l4910
 22175  016512                     __end_ofi2_delay_ms:
 22176                           	opt stack 0
 22177                           pclatu	equ	0xFFB
 22178                           pclath	equ	0xFFA
 22179                           tblptru	equ	0xFF8
 22180                           tblptrh	equ	0xFF7
 22181                           tblptrl	equ	0xFF6
 22182                           tablat	equ	0xFF5
 22183                           prodh	equ	0xFF4
 22184                           prodl	equ	0xFF3
 22185                           intcon	equ	0xFF2
 22186                           postinc0	equ	0xFEE
 22187                           fsr0h	equ	0xFEA
 22188                           fsr0l	equ	0xFE9
 22189                           wreg	equ	0xFE8
 22190                           indf1	equ	0xFE7
 22191                           plusw1	equ	0xFE3
 22192                           fsr1h	equ	0xFE2
 22193                           fsr1l	equ	0xFE1
 22194                           bsr	equ	0xFE0
 22195                           indf2	equ	0xFDF
 22196                           postinc2	equ	0xFDE
 22197                           plusw2	equ	0xFDB
 22198                           fsr2h	equ	0xFDA
 22199                           fsr2l	equ	0xFD9
 22200                           status	equ	0xFD8
 22201                           
 22202 ;; *************** function i2___wmul *****************
 22203 ;; Defined at:
 22204 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 22205 ;; Parameters:    Size  Location     Type
 22206 ;;  multiplier      2   17[COMRAM] unsigned int 
 22207 ;;  multiplicand    2   19[COMRAM] unsigned int 
 22208 ;; Auto vars:     Size  Location     Type
 22209 ;;  __wmul          2   21[COMRAM] unsigned int 
 22210 ;; Return value:  Size  Location     Type
 22211 ;;                  2   17[COMRAM] unsigned int 
 22212 ;; Registers used:
 22213 ;;		wreg, status,2, status,0, prodl, prodh
 22214 ;; Tracked objects:
 22215 ;;		On entry : 0/0
 22216 ;;		On exit  : 0/0
 22217 ;;		Unchanged: 0/0
 22218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22219 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22220 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22222 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22223 ;;Total ram usage:        6 bytes
 22224 ;; Hardware stack levels used:    1
 22225 ;; This function calls:
 22226 ;;		Nothing
 22227 ;; This function is called by:
 22228 ;;		i2_delay_ms
 22229 ;; This function uses a non-reentrant model
 22230 ;;
 22231                           
 22232                           	psect	text70
 22233  0166E0                     __ptext70:
 22234                           	opt stack 0
 22235  0166E0                     i2___wmul:
 22236                           	opt stack 14
 22237                           
 22238                           ; BSR set to: 0
 22239                           ;incstack = 0
 22240  0166E0  5038               	movf	i2___wmul@multiplier,w,c
 22241  0166E2  023A               	mulwf	i2___wmul@multiplicand,c
 22242  0166E4  CFF3 F03C          	movff	prodl,i2___wmul@product
 22243  0166E8  CFF4 F03D          	movff	prodh,i2___wmul@product+1
 22244  0166EC  5038               	movf	i2___wmul@multiplier,w,c
 22245  0166EE  023B               	mulwf	i2___wmul@multiplicand+1,c
 22246  0166F0  50F3               	movf	prodl,w,c
 22247  0166F2  263D               	addwf	i2___wmul@product+1,f,c
 22248  0166F4  5039               	movf	i2___wmul@multiplier+1,w,c
 22249  0166F6  023A               	mulwf	i2___wmul@multiplicand,c
 22250  0166F8  50F3               	movf	prodl,w,c
 22251  0166FA  263D               	addwf	i2___wmul@product+1,f,c
 22252  0166FC  C03C  F038         	movff	i2___wmul@product,?i2___wmul
 22253  016700  C03D  F039         	movff	i2___wmul@product+1,?i2___wmul+1
 22254  016704  0012               	return	
 22255  016706                     __end_ofi2___wmul:
 22256                           	opt stack 0
 22257                           pclatu	equ	0xFFB
 22258                           pclath	equ	0xFFA
 22259                           tblptru	equ	0xFF8
 22260                           tblptrh	equ	0xFF7
 22261                           tblptrl	equ	0xFF6
 22262                           tablat	equ	0xFF5
 22263                           prodh	equ	0xFF4
 22264                           prodl	equ	0xFF3
 22265                           intcon	equ	0xFF2
 22266                           postinc0	equ	0xFEE
 22267                           fsr0h	equ	0xFEA
 22268                           fsr0l	equ	0xFE9
 22269                           wreg	equ	0xFE8
 22270                           indf1	equ	0xFE7
 22271                           plusw1	equ	0xFE3
 22272                           fsr1h	equ	0xFE2
 22273                           fsr1l	equ	0xFE1
 22274                           bsr	equ	0xFE0
 22275                           indf2	equ	0xFDF
 22276                           postinc2	equ	0xFDE
 22277                           plusw2	equ	0xFDB
 22278                           fsr2h	equ	0xFDA
 22279                           fsr2l	equ	0xFD9
 22280                           status	equ	0xFD8
 22281                           
 22282 ;; *************** function _CANreceiveMessage *****************
 22283 ;; Defined at:
 22284 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 22285 ;; Parameters:    Size  Location     Type
 22286 ;;  msg             2   17[COMRAM] PTR struct .
 22287 ;;		 -> msg(15), 
 22288 ;; Auto vars:     Size  Location     Type
 22289 ;;  tamp            1   28[COMRAM] unsigned char 
 22290 ;;  error           1   27[COMRAM] unsigned char 
 22291 ;; Return value:  Size  Location     Type
 22292 ;;                  1    wreg      unsigned char 
 22293 ;; Registers used:
 22294 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22295 ;; Tracked objects:
 22296 ;;		On entry : 0/0
 22297 ;;		On exit  : 0/0
 22298 ;;		Unchanged: 0/0
 22299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22301 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22302 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22303 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22304 ;;Total ram usage:       12 bytes
 22305 ;; Hardware stack levels used:    1
 22306 ;; This function calls:
 22307 ;;		Nothing
 22308 ;; This function is called by:
 22309 ;;		_ISR_alta
 22310 ;; This function uses a non-reentrant model
 22311 ;;
 22312                           
 22313                           	psect	text71
 22314  012E1C                     __ptext71:
 22315                           	opt stack 0
 22316  012E1C                     _CANreceiveMessage:
 22317                           	opt stack 20
 22318                           
 22319                           ;inc\CANlib.h: 530: BYTE tamp;
 22320                           ;inc\CANlib.h: 531: BYTE error = 0;
 22321                           
 22322                           ;incstack = 0
 22323  012E1C  0E00               	movlw	0
 22324  012E1E  6E42               	movwf	CANreceiveMessage@error,c
 22325                           
 22326                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 22327  012E20  BE74               	btfsc	3956,7,c	;volatile
 22328                           
 22329                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 22330  012E22  8042               	bsf	CANreceiveMessage@error,0,c
 22331                           
 22332                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 22333  012E24  BC74               	btfsc	3956,6,c	;volatile
 22334                           
 22335                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 22336  012E26  8242               	bsf	CANreceiveMessage@error,1,c
 22337                           
 22338                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 22339  012E28  010F               	movlb	15	; () banked
 22340  012E2A  AF50               	btfss	80,7,b	;volatile
 22341  012E2C  D143               	goto	i2l428
 22342                           
 22343                           ; BSR set to: 15
 22344                           ;inc\CANlib.h: 541: {
 22345                           ;inc\CANlib.h: 542: msg->identifier = 0;
 22346  012E2E  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22347  012E32  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22348  012E36  6ADE               	clrf	postinc2,c
 22349  012E38  6ADE               	clrf	postinc2,c
 22350  012E3A  6ADE               	clrf	postinc2,c
 22351  012E3C  6ADD               	clrf	postdec2,c
 22352                           
 22353                           ; BSR set to: 15
 22354                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 22355  012E3E  EE20 F004          	lfsr	2,4
 22356  012E42  5038               	movf	CANreceiveMessage@msg,w,c
 22357  012E44  26D9               	addwf	fsr2l,f,c
 22358  012E46  5039               	movf	CANreceiveMessage@msg+1,w,c
 22359  012E48  22DA               	addwfc	fsr2h,f,c
 22360  012E4A  CF56 FFDF          	movff	3926,indf2	;volatile
 22361                           
 22362                           ; BSR set to: 15
 22363                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 22364  012E4E  EE20 F005          	lfsr	2,5
 22365  012E52  5038               	movf	CANreceiveMessage@msg,w,c
 22366  012E54  26D9               	addwf	fsr2l,f,c
 22367  012E56  5039               	movf	CANreceiveMessage@msg+1,w,c
 22368  012E58  22DA               	addwfc	fsr2h,f,c
 22369  012E5A  CF57 FFDF          	movff	3927,indf2	;volatile
 22370                           
 22371                           ; BSR set to: 15
 22372                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 22373  012E5E  EE20 F006          	lfsr	2,6
 22374  012E62  5038               	movf	CANreceiveMessage@msg,w,c
 22375  012E64  26D9               	addwf	fsr2l,f,c
 22376  012E66  5039               	movf	CANreceiveMessage@msg+1,w,c
 22377  012E68  22DA               	addwfc	fsr2h,f,c
 22378  012E6A  CF58 FFDF          	movff	3928,indf2	;volatile
 22379                           
 22380                           ; BSR set to: 15
 22381                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 22382  012E6E  EE20 F007          	lfsr	2,7
 22383  012E72  5038               	movf	CANreceiveMessage@msg,w,c
 22384  012E74  26D9               	addwf	fsr2l,f,c
 22385  012E76  5039               	movf	CANreceiveMessage@msg+1,w,c
 22386  012E78  22DA               	addwfc	fsr2h,f,c
 22387  012E7A  CF59 FFDF          	movff	3929,indf2	;volatile
 22388                           
 22389                           ; BSR set to: 15
 22390                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 22391  012E7E  EE20 F008          	lfsr	2,8
 22392  012E82  5038               	movf	CANreceiveMessage@msg,w,c
 22393  012E84  26D9               	addwf	fsr2l,f,c
 22394  012E86  5039               	movf	CANreceiveMessage@msg+1,w,c
 22395  012E88  22DA               	addwfc	fsr2h,f,c
 22396  012E8A  CF5A FFDF          	movff	3930,indf2	;volatile
 22397                           
 22398                           ; BSR set to: 15
 22399                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 22400  012E8E  EE20 F009          	lfsr	2,9
 22401  012E92  5038               	movf	CANreceiveMessage@msg,w,c
 22402  012E94  26D9               	addwf	fsr2l,f,c
 22403  012E96  5039               	movf	CANreceiveMessage@msg+1,w,c
 22404  012E98  22DA               	addwfc	fsr2h,f,c
 22405  012E9A  CF5B FFDF          	movff	3931,indf2	;volatile
 22406                           
 22407                           ; BSR set to: 15
 22408                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 22409  012E9E  EE20 F00A          	lfsr	2,10
 22410  012EA2  5038               	movf	CANreceiveMessage@msg,w,c
 22411  012EA4  26D9               	addwf	fsr2l,f,c
 22412  012EA6  5039               	movf	CANreceiveMessage@msg+1,w,c
 22413  012EA8  22DA               	addwfc	fsr2h,f,c
 22414  012EAA  CF5C FFDF          	movff	3932,indf2	;volatile
 22415                           
 22416                           ; BSR set to: 15
 22417                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 22418  012EAE  EE20 F00B          	lfsr	2,11
 22419  012EB2  5038               	movf	CANreceiveMessage@msg,w,c
 22420  012EB4  26D9               	addwf	fsr2l,f,c
 22421  012EB6  5039               	movf	CANreceiveMessage@msg+1,w,c
 22422  012EB8  22DA               	addwfc	fsr2h,f,c
 22423  012EBA  CF5D FFDF          	movff	3933,indf2	;volatile
 22424                           
 22425                           ; BSR set to: 15
 22426                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 22427  012EBE  EE20 F00E          	lfsr	2,14
 22428  012EC2  5038               	movf	CANreceiveMessage@msg,w,c
 22429  012EC4  26D9               	addwf	fsr2l,f,c
 22430  012EC6  5039               	movf	CANreceiveMessage@msg+1,w,c
 22431  012EC8  22DA               	addwfc	fsr2h,f,c
 22432  012ECA  010F               	movlb	15	; () banked
 22433  012ECC  AD55               	btfss	85,6,b	;volatile
 22434  012ECE  D002               	goto	i2u915_40
 22435  012ED0  0E01               	movlw	1
 22436  012ED2  D001               	goto	i2u915_46
 22437  012ED4                     i2u915_40:
 22438  012ED4  0E00               	movlw	0
 22439  012ED6                     i2u915_46:
 22440  012ED6  6EDF               	movwf	indf2,c
 22441                           
 22442                           ; BSR set to: 15
 22443                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 22444  012ED8  EE20 F00D          	lfsr	2,13
 22445  012EDC  5038               	movf	CANreceiveMessage@msg,w,c
 22446  012EDE  26D9               	addwf	fsr2l,f,c
 22447  012EE0  5039               	movf	CANreceiveMessage@msg+1,w,c
 22448  012EE2  22DA               	addwfc	fsr2h,f,c
 22449  012EE4  010F               	movlb	15	; () banked
 22450  012EE6  5155               	movf	85,w,b	;volatile
 22451  012EE8  0B0F               	andlw	15
 22452  012EEA  6EDF               	movwf	indf2,c
 22453                           
 22454                           ; BSR set to: 15
 22455                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 22456  012EEC  EE20 F00C          	lfsr	2,12
 22457  012EF0  5038               	movf	CANreceiveMessage@msg,w,c
 22458  012EF2  26D9               	addwf	fsr2l,f,c
 22459  012EF4  5039               	movf	CANreceiveMessage@msg+1,w,c
 22460  012EF6  22DA               	addwfc	fsr2h,f,c
 22461  012EF8  010F               	movlb	15	; () banked
 22462  012EFA  A752               	btfss	82,3,b	;volatile
 22463  012EFC  D002               	goto	i2u916_40
 22464  012EFE  0E01               	movlw	1
 22465  012F00  D001               	goto	i2u916_46
 22466  012F02                     i2u916_40:
 22467  012F02  0E00               	movlw	0
 22468  012F04                     i2u916_46:
 22469  012F04  6EDF               	movwf	indf2,c
 22470                           
 22471                           ; BSR set to: 15
 22472                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 22473  012F06  010F               	movlb	15	; () banked
 22474  012F08  B752               	btfsc	82,3,b	;volatile
 22475  012F0A  D044               	goto	i2l7328
 22476                           
 22477                           ; BSR set to: 15
 22478                           ;inc\CANlib.h: 559: {
 22479                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 22480  012F0C  CF51 F03A          	movff	3921,??_CANreceiveMessage	;volatile
 22481  012F10  6A3B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22482  012F12  6A3C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22483  012F14  6A3D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22484  012F16  0E03               	movlw	3
 22485  012F18                     i2u918_45:
 22486  012F18  90D8               	bcf	status,0,c
 22487  012F1A  363A               	rlcf	??_CANreceiveMessage,f,c
 22488  012F1C  363B               	rlcf	??_CANreceiveMessage+1,f,c
 22489  012F1E  363C               	rlcf	??_CANreceiveMessage+2,f,c
 22490  012F20  363D               	rlcf	??_CANreceiveMessage+3,f,c
 22491  012F22  2EE8               	decfsz	wreg,f,c
 22492  012F24  D7F9               	goto	i2u918_45
 22493  012F26  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22494  012F2A  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22495  012F2E  C03A  FFDE         	movff	??_CANreceiveMessage,postinc2
 22496  012F32  C03B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 22497  012F36  C03C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 22498  012F3A  C03D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 22499                           
 22500                           ; BSR set to: 15
 22501                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 22502  012F3E  010F               	movlb	15	; () banked
 22503  012F40  3952               	swapf	82,w,b	;volatile
 22504  012F42  42E8               	rrncf	wreg,f,c
 22505  012F44  0B07               	andlw	7
 22506  012F46  0B07               	andlw	7
 22507  012F48  6E43               	movwf	CANreceiveMessage@tamp,c
 22508                           
 22509                           ; BSR set to: 15
 22510                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 22511  012F4A  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22512  012F4E  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22513  012F52  CFDE F03A          	movff	postinc2,??_CANreceiveMessage
 22514  012F56  CFDE F03B          	movff	postinc2,??_CANreceiveMessage+1
 22515  012F5A  CFDE F03C          	movff	postinc2,??_CANreceiveMessage+2
 22516  012F5E  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+3
 22517  012F62  5043               	movf	CANreceiveMessage@tamp,w,c
 22518  012F64  243A               	addwf	??_CANreceiveMessage,w,c
 22519  012F66  6E3E               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 22520  012F68  0E00               	movlw	0
 22521  012F6A  203B               	addwfc	??_CANreceiveMessage+1,w,c
 22522  012F6C  6E3F               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 22523  012F6E  0E00               	movlw	0
 22524  012F70  203C               	addwfc	??_CANreceiveMessage+2,w,c
 22525  012F72  6E40               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 22526  012F74  0E00               	movlw	0
 22527  012F76  203D               	addwfc	??_CANreceiveMessage+3,w,c
 22528  012F78  6E41               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 22529  012F7A  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22530  012F7E  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22531  012F82  C03E  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 22532  012F86  C03F  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 22533  012F8A  C040  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 22534  012F8E  C041  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 22535                           
 22536                           ;inc\CANlib.h: 563: }
 22537  012F92  D08D               	goto	i2l7354
 22538  012F94                     i2l7328:
 22539                           
 22540                           ; BSR set to: 15
 22541                           ;inc\CANlib.h: 564: else
 22542                           ;inc\CANlib.h: 565: {
 22543                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 22544  012F94  CF54 F03A          	movff	3924,??_CANreceiveMessage	;volatile
 22545  012F98  6A3B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22546  012F9A  6A3C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22547  012F9C  6A3D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22548  012F9E  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22549  012FA2  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22550  012FA6  C03A  FFDE         	movff	??_CANreceiveMessage,postinc2
 22551  012FAA  C03B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 22552  012FAE  C03C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 22553  012FB2  C03D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 22554                           
 22555                           ; BSR set to: 15
 22556                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 22557  012FB6  CF53 F03A          	movff	3923,??_CANreceiveMessage	;volatile
 22558  012FBA  6A3B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22559  012FBC  6A3C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22560  012FBE  6A3D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22561  012FC0  C03C  F03D         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 22562  012FC4  C03B  F03C         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 22563  012FC8  C03A  F03B         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 22564  012FCC  6A3A               	clrf	??_CANreceiveMessage,c
 22565  012FCE  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22566  012FD2  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22567  012FD6  503A               	movf	??_CANreceiveMessage,w,c
 22568  012FD8  26DE               	addwf	postinc2,f,c
 22569  012FDA  503B               	movf	??_CANreceiveMessage+1,w,c
 22570  012FDC  22DE               	addwfc	postinc2,f,c
 22571  012FDE  503C               	movf	??_CANreceiveMessage+2,w,c
 22572  012FE0  22DE               	addwfc	postinc2,f,c
 22573  012FE2  503D               	movf	??_CANreceiveMessage+3,w,c
 22574  012FE4  22DE               	addwfc	postinc2,f,c
 22575                           
 22576                           ; BSR set to: 15
 22577                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 22578  012FE6  010F               	movlb	15	; () banked
 22579  012FE8  A152               	btfss	82,0,b	;volatile
 22580  012FEA  D00C               	goto	i2l7336
 22581                           
 22582                           ; BSR set to: 15
 22583                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 22584  012FEC  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22585  012FF0  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22586  012FF4  0E00               	movlw	0
 22587  012FF6  12DE               	iorwf	postinc2,f,c
 22588  012FF8  0E00               	movlw	0
 22589  012FFA  12DE               	iorwf	postinc2,f,c
 22590  012FFC  0E01               	movlw	1
 22591  012FFE  12DE               	iorwf	postinc2,f,c
 22592  013000  0E00               	movlw	0
 22593  013002  12DE               	iorwf	postinc2,f,c
 22594  013004                     i2l7336:
 22595                           
 22596                           ; BSR set to: 15
 22597                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 22598  013004  010F               	movlb	15	; () banked
 22599  013006  A352               	btfss	82,1,b	;volatile
 22600  013008  D00C               	goto	i2l7340
 22601                           
 22602                           ; BSR set to: 15
 22603                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 22604  01300A  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22605  01300E  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22606  013012  0E00               	movlw	0
 22607  013014  12DE               	iorwf	postinc2,f,c
 22608  013016  0E00               	movlw	0
 22609  013018  12DE               	iorwf	postinc2,f,c
 22610  01301A  0E02               	movlw	2
 22611  01301C  12DE               	iorwf	postinc2,f,c
 22612  01301E  0E00               	movlw	0
 22613  013020  12DE               	iorwf	postinc2,f,c
 22614  013022                     i2l7340:
 22615                           
 22616                           ; BSR set to: 15
 22617                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 22618  013022  010F               	movlb	15	; () banked
 22619  013024  AB52               	btfss	82,5,b	;volatile
 22620  013026  D00C               	goto	i2l7344
 22621                           
 22622                           ; BSR set to: 15
 22623                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 22624  013028  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22625  01302C  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22626  013030  0E00               	movlw	0
 22627  013032  12DE               	iorwf	postinc2,f,c
 22628  013034  0E00               	movlw	0
 22629  013036  12DE               	iorwf	postinc2,f,c
 22630  013038  0E04               	movlw	4
 22631  01303A  12DE               	iorwf	postinc2,f,c
 22632  01303C  0E00               	movlw	0
 22633  01303E  12DE               	iorwf	postinc2,f,c
 22634  013040                     i2l7344:
 22635                           
 22636                           ; BSR set to: 15
 22637                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 22638  013040  010F               	movlb	15	; () banked
 22639  013042  AD52               	btfss	82,6,b	;volatile
 22640  013044  D00C               	goto	i2l7348
 22641                           
 22642                           ; BSR set to: 15
 22643                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 22644  013046  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22645  01304A  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22646  01304E  0E00               	movlw	0
 22647  013050  12DE               	iorwf	postinc2,f,c
 22648  013052  0E00               	movlw	0
 22649  013054  12DE               	iorwf	postinc2,f,c
 22650  013056  0E08               	movlw	8
 22651  013058  12DE               	iorwf	postinc2,f,c
 22652  01305A  0E00               	movlw	0
 22653  01305C  12DE               	iorwf	postinc2,f,c
 22654  01305E                     i2l7348:
 22655                           
 22656                           ; BSR set to: 15
 22657                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 22658  01305E  010F               	movlb	15	; () banked
 22659  013060  AF52               	btfss	82,7,b	;volatile
 22660  013062  D00C               	goto	i2l7352
 22661                           
 22662                           ; BSR set to: 15
 22663                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 22664  013064  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22665  013068  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22666  01306C  0E00               	movlw	0
 22667  01306E  12DE               	iorwf	postinc2,f,c
 22668  013070  0E00               	movlw	0
 22669  013072  12DE               	iorwf	postinc2,f,c
 22670  013074  0E10               	movlw	16
 22671  013076  12DE               	iorwf	postinc2,f,c
 22672  013078  0E00               	movlw	0
 22673  01307A  12DE               	iorwf	postinc2,f,c
 22674  01307C                     i2l7352:
 22675                           
 22676                           ; BSR set to: 15
 22677                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 22678  01307C  CF51 F03A          	movff	3921,??_CANreceiveMessage	;volatile
 22679  013080  6A3B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22680  013082  6A3C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22681  013084  6A3D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22682  013086  0E15               	movlw	21
 22683  013088                     i2u924_45:
 22684  013088  90D8               	bcf	status,0,c
 22685  01308A  363A               	rlcf	??_CANreceiveMessage,f,c
 22686  01308C  363B               	rlcf	??_CANreceiveMessage+1,f,c
 22687  01308E  363C               	rlcf	??_CANreceiveMessage+2,f,c
 22688  013090  363D               	rlcf	??_CANreceiveMessage+3,f,c
 22689  013092  2EE8               	decfsz	wreg,f,c
 22690  013094  D7F9               	goto	i2u924_45
 22691  013096  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22692  01309A  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22693  01309E  503A               	movf	??_CANreceiveMessage,w,c
 22694  0130A0  12DE               	iorwf	postinc2,f,c
 22695  0130A2  503B               	movf	??_CANreceiveMessage+1,w,c
 22696  0130A4  12DE               	iorwf	postinc2,f,c
 22697  0130A6  503C               	movf	??_CANreceiveMessage+2,w,c
 22698  0130A8  12DE               	iorwf	postinc2,f,c
 22699  0130AA  503D               	movf	??_CANreceiveMessage+3,w,c
 22700  0130AC  12DE               	iorwf	postinc2,f,c
 22701  0130AE                     i2l7354:
 22702                           
 22703                           ; BSR set to: 15
 22704                           ;inc\CANlib.h: 581: }
 22705                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 22706  0130AE  010F               	movlb	15	; () banked
 22707  0130B0  9F50               	bcf	80,7,b	;volatile
 22708                           
 22709                           ; BSR set to: 15
 22710                           ;inc\CANlib.h: 584: return (error);
 22711                           ;	Return value of _CANreceiveMessage is never used
 22712  0130B2  0012               	return	
 22713  0130B4                     i2l428:
 22714                           
 22715                           ; BSR set to: 15
 22716                           ;inc\CANlib.h: 585: }
 22717                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 22718  0130B4  AE60               	btfss	3936,7,c	;volatile
 22719  0130B6  0012               	return	
 22720                           
 22721                           ; BSR set to: 15
 22722                           ;inc\CANlib.h: 588: {
 22723                           ;inc\CANlib.h: 589: msg->identifier = 0;
 22724  0130B8  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22725  0130BC  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22726  0130C0  6ADE               	clrf	postinc2,c
 22727  0130C2  6ADE               	clrf	postinc2,c
 22728  0130C4  6ADE               	clrf	postinc2,c
 22729  0130C6  6ADD               	clrf	postdec2,c
 22730                           
 22731                           ; BSR set to: 15
 22732                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 22733  0130C8  EE20 F004          	lfsr	2,4
 22734  0130CC  5038               	movf	CANreceiveMessage@msg,w,c
 22735  0130CE  26D9               	addwf	fsr2l,f,c
 22736  0130D0  5039               	movf	CANreceiveMessage@msg+1,w,c
 22737  0130D2  22DA               	addwfc	fsr2h,f,c
 22738  0130D4  CF66 FFDF          	movff	3942,indf2	;volatile
 22739                           
 22740                           ; BSR set to: 15
 22741                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 22742  0130D8  EE20 F005          	lfsr	2,5
 22743  0130DC  5038               	movf	CANreceiveMessage@msg,w,c
 22744  0130DE  26D9               	addwf	fsr2l,f,c
 22745  0130E0  5039               	movf	CANreceiveMessage@msg+1,w,c
 22746  0130E2  22DA               	addwfc	fsr2h,f,c
 22747  0130E4  CF67 FFDF          	movff	3943,indf2	;volatile
 22748                           
 22749                           ; BSR set to: 15
 22750                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 22751  0130E8  EE20 F006          	lfsr	2,6
 22752  0130EC  5038               	movf	CANreceiveMessage@msg,w,c
 22753  0130EE  26D9               	addwf	fsr2l,f,c
 22754  0130F0  5039               	movf	CANreceiveMessage@msg+1,w,c
 22755  0130F2  22DA               	addwfc	fsr2h,f,c
 22756  0130F4  CF68 FFDF          	movff	3944,indf2	;volatile
 22757                           
 22758                           ; BSR set to: 15
 22759                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 22760  0130F8  EE20 F007          	lfsr	2,7
 22761  0130FC  5038               	movf	CANreceiveMessage@msg,w,c
 22762  0130FE  26D9               	addwf	fsr2l,f,c
 22763  013100  5039               	movf	CANreceiveMessage@msg+1,w,c
 22764  013102  22DA               	addwfc	fsr2h,f,c
 22765  013104  CF69 FFDF          	movff	3945,indf2	;volatile
 22766                           
 22767                           ; BSR set to: 15
 22768                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 22769  013108  EE20 F008          	lfsr	2,8
 22770  01310C  5038               	movf	CANreceiveMessage@msg,w,c
 22771  01310E  26D9               	addwf	fsr2l,f,c
 22772  013110  5039               	movf	CANreceiveMessage@msg+1,w,c
 22773  013112  22DA               	addwfc	fsr2h,f,c
 22774  013114  CF6A FFDF          	movff	3946,indf2	;volatile
 22775                           
 22776                           ; BSR set to: 15
 22777                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 22778  013118  EE20 F009          	lfsr	2,9
 22779  01311C  5038               	movf	CANreceiveMessage@msg,w,c
 22780  01311E  26D9               	addwf	fsr2l,f,c
 22781  013120  5039               	movf	CANreceiveMessage@msg+1,w,c
 22782  013122  22DA               	addwfc	fsr2h,f,c
 22783  013124  CF6B FFDF          	movff	3947,indf2	;volatile
 22784                           
 22785                           ; BSR set to: 15
 22786                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 22787  013128  EE20 F00A          	lfsr	2,10
 22788  01312C  5038               	movf	CANreceiveMessage@msg,w,c
 22789  01312E  26D9               	addwf	fsr2l,f,c
 22790  013130  5039               	movf	CANreceiveMessage@msg+1,w,c
 22791  013132  22DA               	addwfc	fsr2h,f,c
 22792  013134  CF6C FFDF          	movff	3948,indf2	;volatile
 22793                           
 22794                           ; BSR set to: 15
 22795                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 22796  013138  EE20 F00B          	lfsr	2,11
 22797  01313C  5038               	movf	CANreceiveMessage@msg,w,c
 22798  01313E  26D9               	addwf	fsr2l,f,c
 22799  013140  5039               	movf	CANreceiveMessage@msg+1,w,c
 22800  013142  22DA               	addwfc	fsr2h,f,c
 22801  013144  CF6D FFDF          	movff	3949,indf2	;volatile
 22802                           
 22803                           ; BSR set to: 15
 22804                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 22805  013148  EE20 F00E          	lfsr	2,14
 22806  01314C  5038               	movf	CANreceiveMessage@msg,w,c
 22807  01314E  26D9               	addwf	fsr2l,f,c
 22808  013150  5039               	movf	CANreceiveMessage@msg+1,w,c
 22809  013152  22DA               	addwfc	fsr2h,f,c
 22810  013154  AC65               	btfss	3941,6,c	;volatile
 22811  013156  D002               	goto	i2u926_40
 22812  013158  0E01               	movlw	1
 22813  01315A  D001               	goto	i2u926_46
 22814  01315C                     i2u926_40:
 22815  01315C  0E00               	movlw	0
 22816  01315E                     i2u926_46:
 22817  01315E  6EDF               	movwf	indf2,c
 22818                           
 22819                           ; BSR set to: 15
 22820                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 22821  013160  EE20 F00D          	lfsr	2,13
 22822  013164  5038               	movf	CANreceiveMessage@msg,w,c
 22823  013166  26D9               	addwf	fsr2l,f,c
 22824  013168  5039               	movf	CANreceiveMessage@msg+1,w,c
 22825  01316A  22DA               	addwfc	fsr2h,f,c
 22826  01316C  5065               	movf	3941,w,c	;volatile
 22827  01316E  0B0F               	andlw	15
 22828  013170  6EDF               	movwf	indf2,c
 22829                           
 22830                           ; BSR set to: 15
 22831                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 22832  013172  EE20 F00C          	lfsr	2,12
 22833  013176  5038               	movf	CANreceiveMessage@msg,w,c
 22834  013178  26D9               	addwf	fsr2l,f,c
 22835  01317A  5039               	movf	CANreceiveMessage@msg+1,w,c
 22836  01317C  22DA               	addwfc	fsr2h,f,c
 22837  01317E  A662               	btfss	3938,3,c	;volatile
 22838  013180  D002               	goto	i2u927_40
 22839  013182  0E01               	movlw	1
 22840  013184  D001               	goto	i2u927_46
 22841  013186                     i2u927_40:
 22842  013186  0E00               	movlw	0
 22843  013188                     i2u927_46:
 22844  013188  6EDF               	movwf	indf2,c
 22845                           
 22846                           ; BSR set to: 15
 22847                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 22848  01318A  B662               	btfsc	3938,3,c	;volatile
 22849  01318C  D043               	goto	i2l7390
 22850                           
 22851                           ; BSR set to: 15
 22852                           ;inc\CANlib.h: 606: {
 22853                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 22854  01318E  CF61 F03A          	movff	3937,??_CANreceiveMessage	;volatile
 22855  013192  6A3B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22856  013194  6A3C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22857  013196  6A3D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22858  013198  0E03               	movlw	3
 22859  01319A                     i2u929_45:
 22860  01319A  90D8               	bcf	status,0,c
 22861  01319C  363A               	rlcf	??_CANreceiveMessage,f,c
 22862  01319E  363B               	rlcf	??_CANreceiveMessage+1,f,c
 22863  0131A0  363C               	rlcf	??_CANreceiveMessage+2,f,c
 22864  0131A2  363D               	rlcf	??_CANreceiveMessage+3,f,c
 22865  0131A4  2EE8               	decfsz	wreg,f,c
 22866  0131A6  D7F9               	goto	i2u929_45
 22867  0131A8  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22868  0131AC  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22869  0131B0  C03A  FFDE         	movff	??_CANreceiveMessage,postinc2
 22870  0131B4  C03B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 22871  0131B8  C03C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 22872  0131BC  C03D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 22873                           
 22874                           ; BSR set to: 15
 22875                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 22876  0131C0  3862               	swapf	3938,w,c	;volatile
 22877  0131C2  42E8               	rrncf	wreg,f,c
 22878  0131C4  0B07               	andlw	7
 22879  0131C6  0B07               	andlw	7
 22880  0131C8  6E43               	movwf	CANreceiveMessage@tamp,c
 22881                           
 22882                           ; BSR set to: 15
 22883                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 22884  0131CA  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22885  0131CE  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22886  0131D2  CFDE F03A          	movff	postinc2,??_CANreceiveMessage
 22887  0131D6  CFDE F03B          	movff	postinc2,??_CANreceiveMessage+1
 22888  0131DA  CFDE F03C          	movff	postinc2,??_CANreceiveMessage+2
 22889  0131DE  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+3
 22890  0131E2  5043               	movf	CANreceiveMessage@tamp,w,c
 22891  0131E4  243A               	addwf	??_CANreceiveMessage,w,c
 22892  0131E6  6E3E               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 22893  0131E8  0E00               	movlw	0
 22894  0131EA  203B               	addwfc	??_CANreceiveMessage+1,w,c
 22895  0131EC  6E3F               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 22896  0131EE  0E00               	movlw	0
 22897  0131F0  203C               	addwfc	??_CANreceiveMessage+2,w,c
 22898  0131F2  6E40               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 22899  0131F4  0E00               	movlw	0
 22900  0131F6  203D               	addwfc	??_CANreceiveMessage+3,w,c
 22901  0131F8  6E41               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 22902  0131FA  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22903  0131FE  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22904  013202  C03E  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 22905  013206  C03F  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 22906  01320A  C040  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 22907  01320E  C041  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 22908                           
 22909                           ;inc\CANlib.h: 610: }
 22910  013212  D088               	goto	i2l7416
 22911  013214                     i2l7390:
 22912                           
 22913                           ; BSR set to: 15
 22914                           ;inc\CANlib.h: 611: else
 22915                           ;inc\CANlib.h: 612: {
 22916                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 22917  013214  CF64 F03A          	movff	3940,??_CANreceiveMessage	;volatile
 22918  013218  6A3B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22919  01321A  6A3C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22920  01321C  6A3D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22921  01321E  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22922  013222  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22923  013226  C03A  FFDE         	movff	??_CANreceiveMessage,postinc2
 22924  01322A  C03B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 22925  01322E  C03C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 22926  013232  C03D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 22927                           
 22928                           ; BSR set to: 15
 22929                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 22930  013236  CF63 F03A          	movff	3939,??_CANreceiveMessage	;volatile
 22931  01323A  6A3B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 22932  01323C  6A3C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 22933  01323E  6A3D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 22934  013240  C03C  F03D         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 22935  013244  C03B  F03C         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 22936  013248  C03A  F03B         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 22937  01324C  6A3A               	clrf	??_CANreceiveMessage,c
 22938  01324E  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22939  013252  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22940  013256  503A               	movf	??_CANreceiveMessage,w,c
 22941  013258  26DE               	addwf	postinc2,f,c
 22942  01325A  503B               	movf	??_CANreceiveMessage+1,w,c
 22943  01325C  22DE               	addwfc	postinc2,f,c
 22944  01325E  503C               	movf	??_CANreceiveMessage+2,w,c
 22945  013260  22DE               	addwfc	postinc2,f,c
 22946  013262  503D               	movf	??_CANreceiveMessage+3,w,c
 22947  013264  22DE               	addwfc	postinc2,f,c
 22948                           
 22949                           ; BSR set to: 15
 22950                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 22951  013266  A062               	btfss	3938,0,c	;volatile
 22952  013268  D00C               	goto	i2l7398
 22953                           
 22954                           ; BSR set to: 15
 22955                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 22956  01326A  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22957  01326E  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22958  013272  0E00               	movlw	0
 22959  013274  12DE               	iorwf	postinc2,f,c
 22960  013276  0E00               	movlw	0
 22961  013278  12DE               	iorwf	postinc2,f,c
 22962  01327A  0E01               	movlw	1
 22963  01327C  12DE               	iorwf	postinc2,f,c
 22964  01327E  0E00               	movlw	0
 22965  013280  12DE               	iorwf	postinc2,f,c
 22966  013282                     i2l7398:
 22967                           
 22968                           ; BSR set to: 15
 22969                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 22970  013282  A262               	btfss	3938,1,c	;volatile
 22971  013284  D00C               	goto	i2l7402
 22972                           
 22973                           ; BSR set to: 15
 22974                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 22975  013286  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22976  01328A  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22977  01328E  0E00               	movlw	0
 22978  013290  12DE               	iorwf	postinc2,f,c
 22979  013292  0E00               	movlw	0
 22980  013294  12DE               	iorwf	postinc2,f,c
 22981  013296  0E02               	movlw	2
 22982  013298  12DE               	iorwf	postinc2,f,c
 22983  01329A  0E00               	movlw	0
 22984  01329C  12DE               	iorwf	postinc2,f,c
 22985  01329E                     i2l7402:
 22986                           
 22987                           ; BSR set to: 15
 22988                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 22989  01329E  AA62               	btfss	3938,5,c	;volatile
 22990  0132A0  D00C               	goto	i2l7406
 22991                           
 22992                           ; BSR set to: 15
 22993                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 22994  0132A2  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 22995  0132A6  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 22996  0132AA  0E00               	movlw	0
 22997  0132AC  12DE               	iorwf	postinc2,f,c
 22998  0132AE  0E00               	movlw	0
 22999  0132B0  12DE               	iorwf	postinc2,f,c
 23000  0132B2  0E04               	movlw	4
 23001  0132B4  12DE               	iorwf	postinc2,f,c
 23002  0132B6  0E00               	movlw	0
 23003  0132B8  12DE               	iorwf	postinc2,f,c
 23004  0132BA                     i2l7406:
 23005                           
 23006                           ; BSR set to: 15
 23007                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 23008  0132BA  AC62               	btfss	3938,6,c	;volatile
 23009  0132BC  D00C               	goto	i2l7410
 23010                           
 23011                           ; BSR set to: 15
 23012                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 23013  0132BE  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 23014  0132C2  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 23015  0132C6  0E00               	movlw	0
 23016  0132C8  12DE               	iorwf	postinc2,f,c
 23017  0132CA  0E00               	movlw	0
 23018  0132CC  12DE               	iorwf	postinc2,f,c
 23019  0132CE  0E08               	movlw	8
 23020  0132D0  12DE               	iorwf	postinc2,f,c
 23021  0132D2  0E00               	movlw	0
 23022  0132D4  12DE               	iorwf	postinc2,f,c
 23023  0132D6                     i2l7410:
 23024                           
 23025                           ; BSR set to: 15
 23026                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 23027  0132D6  AE62               	btfss	3938,7,c	;volatile
 23028  0132D8  D00C               	goto	i2l7414
 23029                           
 23030                           ; BSR set to: 15
 23031                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 23032  0132DA  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 23033  0132DE  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 23034  0132E2  0E00               	movlw	0
 23035  0132E4  12DE               	iorwf	postinc2,f,c
 23036  0132E6  0E00               	movlw	0
 23037  0132E8  12DE               	iorwf	postinc2,f,c
 23038  0132EA  0E10               	movlw	16
 23039  0132EC  12DE               	iorwf	postinc2,f,c
 23040  0132EE  0E00               	movlw	0
 23041  0132F0  12DE               	iorwf	postinc2,f,c
 23042  0132F2                     i2l7414:
 23043                           
 23044                           ; BSR set to: 15
 23045                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 23046  0132F2  CF61 F03A          	movff	3937,??_CANreceiveMessage	;volatile
 23047  0132F6  6A3B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 23048  0132F8  6A3C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 23049  0132FA  6A3D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 23050  0132FC  0E15               	movlw	21
 23051  0132FE                     i2u935_45:
 23052  0132FE  90D8               	bcf	status,0,c
 23053  013300  363A               	rlcf	??_CANreceiveMessage,f,c
 23054  013302  363B               	rlcf	??_CANreceiveMessage+1,f,c
 23055  013304  363C               	rlcf	??_CANreceiveMessage+2,f,c
 23056  013306  363D               	rlcf	??_CANreceiveMessage+3,f,c
 23057  013308  2EE8               	decfsz	wreg,f,c
 23058  01330A  D7F9               	goto	i2u935_45
 23059  01330C  C038  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 23060  013310  C039  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 23061  013314  503A               	movf	??_CANreceiveMessage,w,c
 23062  013316  12DE               	iorwf	postinc2,f,c
 23063  013318  503B               	movf	??_CANreceiveMessage+1,w,c
 23064  01331A  12DE               	iorwf	postinc2,f,c
 23065  01331C  503C               	movf	??_CANreceiveMessage+2,w,c
 23066  01331E  12DE               	iorwf	postinc2,f,c
 23067  013320  503D               	movf	??_CANreceiveMessage+3,w,c
 23068  013322  12DE               	iorwf	postinc2,f,c
 23069  013324                     i2l7416:
 23070                           
 23071                           ; BSR set to: 15
 23072                           ;inc\CANlib.h: 629: }
 23073                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 23074  013324  9E60               	bcf	3936,7,c	;volatile
 23075                           
 23076                           ; BSR set to: 15
 23077                           ;inc\CANlib.h: 632: return (error);
 23078                           ;	Return value of _CANreceiveMessage is never used
 23079  013326  0012               	return	
 23080  013328                     __end_of_CANreceiveMessage:
 23081                           	opt stack 0
 23082                           pclatu	equ	0xFFB
 23083                           pclath	equ	0xFFA
 23084                           tblptru	equ	0xFF8
 23085                           tblptrh	equ	0xFF7
 23086                           tblptrl	equ	0xFF6
 23087                           tablat	equ	0xFF5
 23088                           prodh	equ	0xFF4
 23089                           prodl	equ	0xFF3
 23090                           intcon	equ	0xFF2
 23091                           postinc0	equ	0xFEE
 23092                           fsr0h	equ	0xFEA
 23093                           fsr0l	equ	0xFE9
 23094                           wreg	equ	0xFE8
 23095                           indf1	equ	0xFE7
 23096                           plusw1	equ	0xFE3
 23097                           fsr1h	equ	0xFE2
 23098                           fsr1l	equ	0xFE1
 23099                           bsr	equ	0xFE0
 23100                           indf2	equ	0xFDF
 23101                           postinc2	equ	0xFDE
 23102                           postdec2	equ	0xFDD
 23103                           plusw2	equ	0xFDB
 23104                           fsr2h	equ	0xFDA
 23105                           fsr2l	equ	0xFD9
 23106                           status	equ	0xFD8
 23107                           
 23108 ;; *************** function _CANisRxReady *****************
 23109 ;; Defined at:
 23110 ;;		line 1163 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 23111 ;; Parameters:    Size  Location     Type
 23112 ;;		None
 23113 ;; Auto vars:     Size  Location     Type
 23114 ;;		None
 23115 ;; Return value:  Size  Location     Type
 23116 ;;                  1    wreg      unsigned char 
 23117 ;; Registers used:
 23118 ;;		wreg, status,2
 23119 ;; Tracked objects:
 23120 ;;		On entry : 0/0
 23121 ;;		On exit  : 0/0
 23122 ;;		Unchanged: 0/0
 23123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23127 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23128 ;;Total ram usage:        1 bytes
 23129 ;; Hardware stack levels used:    1
 23130 ;; This function calls:
 23131 ;;		Nothing
 23132 ;; This function is called by:
 23133 ;;		_ISR_alta
 23134 ;; This function uses a non-reentrant model
 23135 ;;
 23136                           
 23137                           	psect	text72
 23138  01680E                     __ptext72:
 23139                           	opt stack 0
 23140  01680E                     _CANisRxReady:
 23141                           	opt stack 20
 23142                           
 23143                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 23144                           
 23145                           ; BSR set to: 15
 23146                           ;incstack = 0
 23147  01680E  0E01               	movlw	1
 23148  016810  6E38               	movwf	_CANisRxReady$3249,c
 23149  016812  BE60               	btfsc	3936,7,c	;volatile
 23150  016814  D005               	goto	i2l579
 23151  016816  010F               	movlb	15	; () banked
 23152  016818  BF50               	btfsc	80,7,b	;volatile
 23153  01681A  D002               	goto	i2l579
 23154                           
 23155                           ; BSR set to: 15
 23156  01681C  0E00               	movlw	0
 23157  01681E  6E38               	movwf	_CANisRxReady$3249,c
 23158  016820                     i2l579:
 23159  016820  5038               	movf	_CANisRxReady$3249,w,c
 23160  016822  0012               	return	
 23161  016824                     __end_of_CANisRxReady:
 23162                           	opt stack 0
 23163                           pclatu	equ	0xFFB
 23164                           pclath	equ	0xFFA
 23165                           tblptru	equ	0xFF8
 23166                           tblptrh	equ	0xFF7
 23167                           tblptrl	equ	0xFF6
 23168                           tablat	equ	0xFF5
 23169                           prodh	equ	0xFF4
 23170                           prodl	equ	0xFF3
 23171                           intcon	equ	0xFF2
 23172                           postinc0	equ	0xFEE
 23173                           fsr0h	equ	0xFEA
 23174                           fsr0l	equ	0xFE9
 23175                           wreg	equ	0xFE8
 23176                           indf1	equ	0xFE7
 23177                           plusw1	equ	0xFE3
 23178                           fsr1h	equ	0xFE2
 23179                           fsr1l	equ	0xFE1
 23180                           bsr	equ	0xFE0
 23181                           indf2	equ	0xFDF
 23182                           postinc2	equ	0xFDE
 23183                           postdec2	equ	0xFDD
 23184                           plusw2	equ	0xFDB
 23185                           fsr2h	equ	0xFDA
 23186                           fsr2l	equ	0xFD9
 23187                           status	equ	0xFD8
 23188                           pclatu	equ	0xFFB
 23189                           pclath	equ	0xFFA
 23190                           tblptru	equ	0xFF8
 23191                           tblptrh	equ	0xFF7
 23192                           tblptrl	equ	0xFF6
 23193                           tablat	equ	0xFF5
 23194                           prodh	equ	0xFF4
 23195                           prodl	equ	0xFF3
 23196                           intcon	equ	0xFF2
 23197                           postinc0	equ	0xFEE
 23198                           fsr0h	equ	0xFEA
 23199                           fsr0l	equ	0xFE9
 23200                           wreg	equ	0xFE8
 23201                           indf1	equ	0xFE7
 23202                           plusw1	equ	0xFE3
 23203                           fsr1h	equ	0xFE2
 23204                           fsr1l	equ	0xFE1
 23205                           bsr	equ	0xFE0
 23206                           indf2	equ	0xFDF
 23207                           postinc2	equ	0xFDE
 23208                           postdec2	equ	0xFDD
 23209                           plusw2	equ	0xFDB
 23210                           fsr2h	equ	0xFDA
 23211                           fsr2l	equ	0xFD9
 23212                           status	equ	0xFD8
 23213                           
 23214                           	psect	rparam
 23215  0000                     pclatu	equ	0xFFB
 23216                           pclath	equ	0xFFA
 23217                           tblptru	equ	0xFF8
 23218                           tblptrh	equ	0xFF7
 23219                           tblptrl	equ	0xFF6
 23220                           tablat	equ	0xFF5
 23221                           prodh	equ	0xFF4
 23222                           prodl	equ	0xFF3
 23223                           intcon	equ	0xFF2
 23224                           postinc0	equ	0xFEE
 23225                           fsr0h	equ	0xFEA
 23226                           fsr0l	equ	0xFE9
 23227                           wreg	equ	0xFE8
 23228                           indf1	equ	0xFE7
 23229                           plusw1	equ	0xFE3
 23230                           fsr1h	equ	0xFE2
 23231                           fsr1l	equ	0xFE1
 23232                           bsr	equ	0xFE0
 23233                           indf2	equ	0xFDF
 23234                           postinc2	equ	0xFDE
 23235                           postdec2	equ	0xFDD
 23236                           plusw2	equ	0xFDB
 23237                           fsr2h	equ	0xFDA
 23238                           fsr2l	equ	0xFD9
 23239                           status	equ	0xFD8
 23240                           
 23241                           	psect	temp
 23242  00004E                     btemp:
 23243                           	opt stack 0
 23244  00004E                     	ds	1
 23245  0000                     int$flags	set	btemp
 23246                           pclatu	equ	0xFFB
 23247                           pclath	equ	0xFFA
 23248                           tblptru	equ	0xFF8
 23249                           tblptrh	equ	0xFF7
 23250                           tblptrl	equ	0xFF6
 23251                           tablat	equ	0xFF5
 23252                           prodh	equ	0xFF4
 23253                           prodl	equ	0xFF3
 23254                           intcon	equ	0xFF2
 23255                           postinc0	equ	0xFEE
 23256                           fsr0h	equ	0xFEA
 23257                           fsr0l	equ	0xFE9
 23258                           wreg	equ	0xFE8
 23259                           indf1	equ	0xFE7
 23260                           plusw1	equ	0xFE3
 23261                           fsr1h	equ	0xFE2
 23262                           fsr1l	equ	0xFE1
 23263                           bsr	equ	0xFE0
 23264                           indf2	equ	0xFDF
 23265                           postinc2	equ	0xFDE
 23266                           postdec2	equ	0xFDD
 23267                           plusw2	equ	0xFDB
 23268                           fsr2h	equ	0xFDA
 23269                           fsr2l	equ	0xFD9
 23270                           status	equ	0xFD8


Data Sizes:
    Strings     380
    Constant    144
    Data        1
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      77
    BANK0           160    108     141
    BANK1           256     33      85
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_27(CODE[21]), STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[21]), 
		 -> STR_23(CODE[21]), STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[21]), 
		 -> STR_19(CODE[21]), STR_18(CODE[21]), STR_17(CODE[21]), STR_16(CODE[21]), 
		 -> STR_15(CODE[8]), STR_14(CODE[8]), STR_13(CODE[5]), STR_12(CODE[5]), 
		 -> STR_11(CODE[5]), STR_10(CODE[7]), STR_9(CODE[14]), STR_8(CODE[17]), 
		 -> STR_7(CODE[12]), STR_6(CODE[21]), STR_4(CODE[21]), STR_3(CODE[21]), 
		 -> STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK0[1]), park_assist_state(BANK1[8]), data(COMRAM[1]), data_brake(COMRAM[1]), 
		 -> data_steering(BANK0[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    i2_CAN_Tx->i2_CANsendMessage
    _LCD_Park->i2_LCD_write_message
    _LCD_Gap->i2_LCD_write_message
    i2_LCD_write_message->i2_LCD_write_char
    i2_LCD_write_char->i2_LCD_send_command
    i2_LCD_initialize->i2_LCD_cursor
    i2_LCD_cursor->i2_LCD_send_command
    i2_LCD_clear->i2_LCD_send_command
    i2_LCD_goto_line->i2_LCD_send_command
    i2_LCD_enable_pulse->i2_delay_ms
    i2_delay_ms->i2___wmul

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___fldiv->___xxtofl
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_End->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Tx->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  310842
                                             25 BANK1      8     8      0
                             _CAN_Rx
                             _CAN_Tx
                       _CANisTxReady
                     _CANsendMessage
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                            _LCD_End
                        _LCD_Handler
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   51357
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             30 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             16 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             16 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  144151
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41630
                                             98 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9426
                                             55 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             16 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9147
                                             55 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4925
                                             30 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             22 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             16 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             16 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     861
                                             16 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             16 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             16 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     799
                                             88 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             88 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    3518
                                             68 BANK0     20    12      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             55 BANK0      4     0      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             16 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             30 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   12058
                                             40 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             32 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             23 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             16 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             16 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9525
                                             33 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18149
                                             31 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    8962
                                             28 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_End                                              0     0      0   47730
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2   11093
                                             33 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    9306
                                             28 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   27820
                                             30 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8925
                                             28 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8786
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8817
                                             28 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8786
                                             24 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0    1270
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1270
                                             22 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     700
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      68
                                             16 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_Tx                                               0     0      0    4107
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4083
                                             16 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             16 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Rx                                               4     4      0       0
                                             16 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_alta                                           17    17      0   33439
                                             36 COMRAM     1     1      0
                                              0 BANK0     16    16      0
                       _CANisRxReady
                  _CANreceiveMessage
                            _LCD_Gap
                           _LCD_Park
                           i2_CAN_Tx
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (11) i2_CAN_Tx                                            0     0      0    2579
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (11) i2_CANsendMessage                                   16     8      8    2555
                                             17 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (11) i2_CANisTxReady                                      1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _LCD_Park                                            0     0      0   13495
                    i2_LCD_goto_line
                   i2_LCD_initialize
                i2_LCD_write_message
 ---------------------------------------------------------------------------------
 (11) _LCD_Gap                                             0     0      0   13495
                    i2_LCD_goto_line
                   i2_LCD_initialize
                i2_LCD_write_message
 ---------------------------------------------------------------------------------
 (12) i2_LCD_write_message                                 2     0      2    3090
                                             34 COMRAM     2     0      2
                   i2_LCD_write_char
 ---------------------------------------------------------------------------------
 (13) i2_LCD_write_char                                    5     5      0    2837
                                             29 COMRAM     5     5      0
                 i2_LCD_send_command
 ---------------------------------------------------------------------------------
 (12) i2_LCD_initialize                                    1     1      0    7906
                                             31 COMRAM     1     1      0
                        i2_LCD_clear
                       i2_LCD_cursor
                 i2_LCD_send_command
                         i2_delay_ms
                 i2_delay_set_quartz
 ---------------------------------------------------------------------------------
 (13) i2_delay_set_quartz                                  1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_LCD_cursor                                        2     1      1    2547
                                             29 COMRAM     2     1      1
                 i2_LCD_send_command
 ---------------------------------------------------------------------------------
 (13) i2_LCD_clear                                         0     0      0    2477
                 i2_LCD_send_command
 ---------------------------------------------------------------------------------
 (12) i2_LCD_goto_line                                     1     1      0    2499
                                             29 COMRAM     1     1      0
                 i2_LCD_send_command
 ---------------------------------------------------------------------------------
 (14) i2_LCD_send_command                                  4     1      3    2477
                                             25 COMRAM     4     1      3
                 i2_LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (15) i2_LCD_enable_pulse                                  0     0      0     361
                         i2_delay_ms
 ---------------------------------------------------------------------------------
 (16) i2_delay_ms                                          2     0      2     361
                                             23 COMRAM     2     0      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___wmul                                            6     2      4     209
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (11) _CANreceiveMessage                                  12    10      2    1137
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (11) _CANisRxReady                                        1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Rx
   _CAN_Tx
     _CANisTxReady
     _CANsendMessage
   _CANisTxReady
   _CANsendMessage
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_End
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   _LCD_Gap
     i2_LCD_goto_line
       i2_LCD_send_command
         i2_LCD_enable_pulse
           i2_delay_ms
             i2___wmul
     i2_LCD_initialize
       i2_LCD_clear
         i2_LCD_send_command
           i2_LCD_enable_pulse
             i2_delay_ms
               i2___wmul
       i2_LCD_cursor
         i2_LCD_send_command
           i2_LCD_enable_pulse
             i2_delay_ms
               i2___wmul
       i2_LCD_send_command
         i2_LCD_enable_pulse
           i2_delay_ms
             i2___wmul
       i2_delay_ms
         i2___wmul
       i2_delay_set_quartz
     i2_LCD_write_message
       i2_LCD_write_char
         i2_LCD_send_command
           i2_LCD_enable_pulse
             i2_delay_ms
               i2___wmul
   _LCD_Park
     i2_LCD_goto_line
       i2_LCD_send_command
         i2_LCD_enable_pulse
           i2_delay_ms
             i2___wmul
     i2_LCD_initialize
       i2_LCD_clear
         i2_LCD_send_command
           i2_LCD_enable_pulse
             i2_delay_ms
               i2___wmul
       i2_LCD_cursor
         i2_LCD_send_command
           i2_LCD_enable_pulse
             i2_delay_ms
               i2___wmul
       i2_LCD_send_command
         i2_LCD_enable_pulse
           i2_delay_ms
             i2___wmul
       i2_delay_ms
         i2___wmul
       i2_delay_set_quartz
     i2_LCD_write_message
       i2_LCD_write_char
         i2_LCD_send_command
           i2_LCD_enable_pulse
             i2_delay_ms
               i2___wmul
   i2_CAN_Tx
     i2_CANisTxReady
     i2_CANsendMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     21      55       7       33.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6C      8D       5       88.1%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     25      4D       1       81.9%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12F      20        0.0%
DATA                 0      0     12F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu May 05 22:14:44 2016

                     ___fldiv@aexp 0096                       ___fldiv@bexp 0095  
                                _x 00E8                                  _y 026F  
                                _z 00E9          __size_of_delay_set_quartz 000A  
             __end_of_CANSetFilter 0B06                       ?_LCD_Handler 0027  
                     ___fldiv@sign 008A          i2LCD_write_message@buffer 0049  
                     ___awdiv@sign 007B                                 _id 0001  
             ?i2_LCD_write_message 0049                                 bsr 000FE0  
              ___wmul@multiplicand 0072                        __CFG_BORV$3 000000  
                     __CFG_CP0$OFF 000000                       __CFG_CP1$OFF 000000  
                     __CFG_CP2$OFF 000000                       __CFG_CP3$OFF 000000  
                      __CFG_OSC$HS 000000                       __CFG_CP4$OFF 000000  
                     __CFG_CP5$OFF 000000                                l400 16C0  
                              l401 16CA                                l402 16D4  
                              l411 18B8                                l403 16DE  
                              l420 1A72                                l412 18BC  
                              l500 064A                                l421 1A76  
                              l413 19B4                                l422 1A82  
                              l414 1944                                l406 17EE  
                              l510 075A                                l415 194E  
                              l407 17F2                                l511 0766  
                              l503 0726                                l416 1958  
                              l408 17FE                                l520 0872  
                              l504 072A                                l417 1962  
                              l521 0876                                l505 0736  
                              l530 0982                                l522 0882  
                              l514 0842                                l506 073A  
                              l450 4230                                l531 098E  
                              l515 0846                                l507 0746  
                              l451 4234                                l540 0A9A  
                              l532 0992                                l516 0852  
                              l508 074A                                l452 4240  
                              l381 161E                                l541 0A9E  
                              l533 099E                                l525 095E  
                              l517 0856                                l509 0756  
                              l461 4348                                l453 4244  
                              l382 13B0                                l542 0AAA  
                              l526 0962                                l518 0862  
                              l462 434C                                l454 4250  
                              l391 156A                                l383 13B4  
                              l543 0AAE                                l527 096E  
                              l519 0866                                l463 4358  
                              l455 4254                                l392 156E  
                              l384 14AC                                l544 0ABA  
                              l536 0A7A                                l528 0972  
                              l464 435C                                l456 4260  
                              l376 4B58                                l393 157A  
                              l385 143C                                l537 0A7E  
                              l529 097E                                l481 04F0  
                              l465 4368                                l457 4264  
                              l377 4B62                                l801 1CA0  
                              l386 1446                                l538 0A8A  
                              l482 04F4                                l466 436C  
                              l458 4270                                l387 1450  
                              l539 0A8E                                l483 0500  
                              l467 4378                                l396 18A2  
                              l388 145A                                l492 060A  
                              l484 0504                                l468 437C  
                              l397 1634                                l493 060E  
                              l485 0510                                l469 4388  
                              l574 6724                                l398 1638  
                              l494 061A                                l486 0514  
                              l399 1730                                l495 061E  
                              l487 0520                                l496 062A  
                              l488 0524                                l497 062E  
                              l489 0530                                l833 2024  
                              l817 1E26                                l498 063A  
                              l826 201C                                l587 6494  
                              l499 063E                                l819 1E50  
                              l892 67C8                                l796 1C94  
                              l885 67E4                                l878 6790  
                              l897 622A                                l899 622C  
             ??_PWR_Button_Polling 0070                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                        ?_LCD_cursor 007C  
                              _dir 00E4                                _msg 0111  
                              _str 0120                       ___awmod@sign 0075  
                              prod 000FF3                                wreg 000FE8  
                     ___flmul@aexp 008B                       ___flmul@bexp 0090  
                       i2_delay_ms 64DA                       ___flmul@sign 008A  
                     ___flmul@temp 0095                       ___flmul@prod 0091  
                  __end_of_LCD_Gap 630E                       __CFG_LVP$OFF 000000  
                  __end_of_LCD_End 621A             __size_of_LCD_goto_line 00EC  
                     ___fltol@exp1 00C1                       __CFG_WDT$OFF 000000  
                             l1006 10FA                               l1231 5474  
                             l1241 52AE                               l1335 515C  
                             l1520 34C8                               l1424 5B2C  
                             l1328 5098                               l1329 50DC  
                             l1434 5FC8                               l1611 3B20  
                             l1604 3884                               l1621 3C32  
                             l1613 3B8E                               l1518 3508  
                             l1535 367C                               l1519 34FC  
                             l1544 3710                               l1640 4A20  
                             l1641 4A38                               l1633 49C4  
                             l1626 4918                               l1477 60DE  
                             l1398 5A54                               l1574 3EA4  
                             l1487 61B0                               l1583 3EDC  
                             l1585 3F4A                               l1577 3E4C  
                             l6300 4B66                               l5406 5A0E  
                             l5432 6800                               l6304 4B6E  
                             l5602 02EA                               l5450 40EE  
                             l6306 4BB2                               l6420 16E8  
                             l5700 064E                               l5620 03A4  
                             l5524 438C                               l8102 33D8  
                             l6440 17E2                               l6344 1464  
                             l8032 6486                               l8200 365C  
                             l6522 1A86                               l6370 157E  
                             l4930 60A0                               l8114 340C  
                             l8106 33E2                               l5802 09A2  
                             l5706 0694                               l5466 41A4  
                             l6516 1A66                               l6364 155E  
                             l5396 59CC                               l8300 3872  
                             l9020 0DC6                               l5740 07B0  
                             l5548 00BE                               l5492 4274  
                             l6446 1802                               l4926 608E  
                             l4950 617E                               l8214 36C4  
                             l9102 1190                               l9030 0E6A  
                             l9022 0E02                               l9014 0D7E  
                             l9006 0CFA                               l5734 076A  
                             l5638 045E                               l5566 0176  
                             l4928 609A                               l8208 36AE  
                             l8224 36E4                               l8144 3448  
                             l8072 3346                               l8304 3898  
                             l9120 12AC                               l9112 1284  
                             l9024 0E18                               l5808 09E8  
                             l5672 057A                               l5584 0230  
                             l4938 60D0                               l4954 61A2  
                             l4946 616C                               l8234 370A  
                             l8218 36D0                               l8226 36EA  
                             l8162 34EC                               l8090 33A0  
                             l8082 3374                               l9114 1292  
                             l9050 0F84                               l9034 0E9C  
                             l9018 0DB0                               l9122 12BA  
                             l5666 0534                               l5498 42BA  
                             l6298 4B50                               l7604 5D4A  
                             l7444 5B3E                               l8500 6696  
                             l4948 6178                               l6900 3DA2  
                             l8252 379A                               l8244 3766  
                             l8180 356A                               l8172 352C  
                             l8156 34DC                               l8420 5962  
                             l8412 5938                               l8308 38AC  
                             l9140 1364                               l9132 1308  
                             l9044 0F06                               l9220 4E22  
                             l5836 0ABE                               l7454 5B86  
                             l6910 3E20                               l8182 3570  
                             l8190 358C                               l8158 34E2  
                             l8078 336A                               l8430 5998  
                             l8422 5968                               l8406 5922  
                             l8350 3B0A                               l9062 0FD0  
                             l9142 136A                               l5774 08CC  
                             l6496 196C                               l8504 66AA  
                             l5880 63CC                               l8264 37BE  
                             l8256 37A6                               l8248 3778  
                             l8096 33B4                               l8280 3812  
                             l8520 457A                               l9136 1338  
                             l9128 12E0                               l9048 0F7E  
                             l9144 138C                               l5768 0886  
                             l7458 5BBE                               l6930 3EC6  
                             l6850 3C94                               l8258 37AA  
                             l8186 357A                               l8418 5956  
                             l8434 59A6                               l8450 5E1E  
                             l8282 3818                               l8274 37EE  
                             l9090 10FE                               l9066 0FFC  
                             l7564 6220                               l6924 3EA0  
                             l6860 3CC2                               l8460 5E4E  
                             l8380 3C04                               l8356 3B34  
                             l8292 3848                               l8284 382A  
                             l9084 10C8                               l9068 1004  
                             l9076 10A0                               l9260 4F8E  
                             l7582 5CDA                               l6918 3E58  
                             l6870 3CF2                               l8438 59BA  
                             l8462 5E54                               l8470 5E86  
                             l8454 5E2E                               l8390 3C52  
                             l8382 3C18                               l8366 3B88  
                             l8542 2A92                               l9086 10DC  
                             l9078 10AE                               l7592 5CE8  
                             l8480 631A                               l6960 3FC8  
                             l6936 3EF0                               l6880 3D20  
                             l6856 3CB8                               l8712 520A  
                             l8624 5112                               l8392 3C5C  
                             l8376 3BDE                               l8528 4672  
                             l8560 2D18                               l8552 2B96  
                             l9256 4F6C                               l9248 4F3E  
                             l9512 1E86                               l9520 1EC6  
                             l8490 5852                               l6970 400E  
                             l6962 3FDC                               l6946 3F44  
                             l8722 52FA                               l8730 64C8  
                             l8650 534A                               l8634 5142  
                             l8474 5E9A                               l8466 5E78  
                             l8458 5E42                               l8298 386C  
                             l9098 112E                               l9258 4F7E  
                             l9522 1EC8                               l9434 1C7A  
                             l8492 5884                               l8484 634C  
                             l6972 4012                               l6964 3FFE  
                             l6956 3F9A                               l6892 3D74  
                             l6876 3D16                               l8716 525C  
                             l8708 51BC                               l8740 5734  
                             l8812 5FB6                               l8804 5F5C  
                             l8644 5324                               l8636 5152  
                             l8628 5126                               l8548 2B64  
                             l9540 1FF2                               l9524 1ECA  
                             l9444 1CAE                               l9428 1BE4  
                             l8494 58B6                               l8806 5F6C  
                             l8830 4958                               l8822 4928  
                             l8566 2DEA                               l9534 1F86  
                             l9446 1CBA                               l9438 1C8C  
                             l8488 5820                               l8496 58E8  
                             l8760 57B6                               l8808 5F72  
                             l8840 4A02                               l8832 4968  
                             l8672 53F2                               l8664 539E  
                             l9544 2014                               l8770 57EC  
                             l8842 4A12                               l8834 49A6  
                             l8594 5044                               l8578 6662  
                             l9562 2148                               l9554 20B8  
                             l9538 1FEC                               l9458 1CE4  
                             l9466 1D26                               l9394 1B4E  
                             l8756 57A2                               l8828 4950  
                             l8684 542A                               l8588 500A  
                             l9476 1D3E                               l9484 1D82  
                             l8862 654A                               l8774 5808  
                             l8766 57D2                               l8854 4A8A  
                             l8694 545A                               l8950 0B30  
                             l9558 213C                               l9486 1D88  
                             l8768 57E2                               l8784 5AB0  
                             l8696 546A                               l8688 543E  
                             l8944 0B16                               l9568 2152  
                             l9496 1E54                               l8866 6564  
                             l8786 5AC0                               l8962 0BB0  
                             l9586 2266                               l9578 21D6  
                             l8876 4CB8                               l8796 5B1A  
                             l8788 5AC6                               l8980 0C24  
                             l8972 0BE0                               l8964 0BCA  
                             l9588 226C                               l8878 4CC0  
                             l8894 4D98                               l8990 0C76  
                             l8974 0C0A                               l8958 0B66  
                             STR_1 FF6A                               l8888 4D58  
                             l8968 0BDA                               STR_2 FF40  
                             STR_3 FEC2                               l8898 4E10  
                             STR_4 FF6A                               STR_5 FFFA  
                             STR_6 FF55                               STR_7 FFC8  
                             STR_8 FFA9                               STR_9 FFBA  
                             _LATA 000F89                               _LATB 000F8A  
                             _LATC 000F8B                               _LATD 000F8C  
                             _LATE 000F8D                               u6105 40CA  
                             u6130 4120                               u7020 0ADE  
                             u6300 43AC                               u6220 4294  
                             u6135 4114                               u7025 0AD2  
                             u6305 43A0                               u6225 4288  
                             u6145 4180                               u6410 01AC  
                             u6330 003A                               u6090 406A  
                             u8005 1A38                               u6415 01A0  
                             u6335 002E                               u6095 405E  
                             u6505 0380                               u6425 020C  
                             u6345 009A                               u6530 03DA  
                             u6450 0266                               u6370 00F2  
                             u6700 066E                               u6620 0554  
                _F2_Button_Polling 67C0                               u6535 03CE  
                             u6455 025A                               u6375 00E6  
                             u6705 0662                               u6625 0548  
                             u6545 043A                               u6465 02C6  
                             u6385 0152                               u6490 0320  
                             u6495 0314                               u7720 1484  
                             u7730 14D0                               u6940 09C2  
                             u6860 08A6                               u6780 078A  
                             u7725 1478                               u7735 14C4  
                             u9440 679E                               u7745 1530  
                             u9505 67F4                               u6945 09B6  
                             u6865 089A                               u6785 077E  
                             u7850 1708                               u7860 1754  
                             u9540 67D6                               u8660 3FAE  
                             u7855 16FC                               u9455 67A0  
                             u7865 1748                               u9490 67F2  
                             u7875 17B4                               u9555 67D8  
                             u7980 198C                               u9580 624E  
                             u7990 19D8                               u7985 1980  
                             u9586 6250                               u7995 19CC  
        __size_ofi2_LCD_write_char 0070                __size_of_CANSetMask 039E  
                     ?_LCD_goto_xy 007F                               _data 0025  
                             _main 1B26                               _itoa 63A2  
               ?_F2_Button_Polling 0027          __size_of_LCD_send_command 003A  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             indf1 000FE7                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             btemp 004E                               _utoa 59C4  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 00C0  
                    __CFG_IESO$OFF 000000                    ___fldiv@new_exp 008F  
               __size_of_LCD_clear 0032               i2LCD_send_command@D0 0042  
             i2LCD_send_command@D1 0041               i2LCD_send_command@D2 0040  
             i2LCD_send_command@D3 0043                       _sprintf$4245 0134  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000010  
              ??_F2_Button_Polling 0070           __end_of_LCD_enable_pulse 674C  
                 _CANOperationMode 67F8              ??i2_LCD_write_message 004B  
                 __end_of_LCD_Park 62BE                    _space_available 0269  
          __size_of_LCD_initialize 016E         __size_of_CANreceiveMessage 050C  
                    ___fltol@sign1 00C0                    __end_of___fladd 37D0  
                            ?_main 0027                   __end_ofi2_CAN_Tx 5F40  
                  __end_of___fldiv 4036                              ?_itoa 0080  
                  __end_of___awdiv 59C4                    __end_of___flneg 64DA  
                            STR_10 FFE4                              STR_11 FFF0  
                            STR_20 FF2B                              STR_12 FFF5  
                            STR_13 FFEB                              STR_21 FF16  
                            STR_14 FFD4                              STR_22 FED7  
                            STR_15 FFDC                              STR_23 FE98  
                            STR_24 FF2B                              STR_16 FF2B  
                            STR_17 FF94                              STR_25 FEEC  
                            STR_18 FF7F                              STR_26 FEAD  
                            STR_19 FF01                              STR_27 FE83  
                  __end_of___awmod 5EA4                    __end_of___flmul 3C76  
                  __end_of___flsub 63A2                    __end_of___fltol 581A  
                  __end_of___lldiv 5B3E                              ?_utoa 0077  
                            u11201 5020                              u10335 643C  
                            u10336 643E                              u10345 6448  
                            u10346 644A                              u11410 5754  
                            u10355 6454                              u10356 6456  
                            u10460 3492                              u12300 1C48  
                  ___awdiv@divisor 0078                              u10365 6460  
                            u11181 4FE6                              u10366 6462  
                            u10470 34AA                              u12310 1C60  
                            u11415 5748                              u10480 34AC  
                  __end_of___llmod 5FDA                              u12316 1C62  
                            u10920 3BF2                              u10840 3AAC  
                            u12440 1DEC                              u11641 4C6C  
                            u12460 1E08                              u10845 3AA0  
                            u12630 224E                              u12550 2010  
                            u12480 1E34                              _T3CON 000FB1  
                            u11930 10F2                              u12466 1E0A  
                            u12590 21B6                              u12486 1E36  
                            u12657 6488                    __end_of___lwdiv 60E8  
                  __end_of___lwmod 61BA                              i2l400 2528  
                            i2l401 2530                              i2l402 2538  
                            i2l411 26E6                              i2l403 2540  
                            i2l420 285E                              i2l412 26EA  
                            i2l421 2862                              i2l413 27BA  
                            i2l422 286C                              i2l414 2758  
                            i2l406 262E                              i2l415 2760  
                            i2l407 2632                              i2l416 2768  
                            i2l408 263C                              i2l417 2770  
                            i2l428 30B4                              i2l381 24A2  
                            i2l382 2286                              i2l391 23FE  
                            i2l383 228A                              i2l392 2402  
                            i2l384 235A                              i1l792 0078  
                            i2l393 240C                              i2l385 22F8  
                            i2l386 2300                              i2l387 2308  
                            i2l396 26D2                              i2l388 2310  
                            i2l397 24B6                              i2l574 6766  
                            i2l398 24BA                              i2l399 258A  
                            i2l579 6820                              i2l587 6504  
                            i2l777 47EE                              i2l788 4892  
                  ___awdiv@counter 007A                              _TMR3H 000FB3  
                            _TMR3L 000FB2                  _CANisRxReady$3249 0038  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                    __CFG_WRT4$OFF 000000                 __size_of_ISR_bassa 00A8  
                    __CFG_WRT5$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
               CANInitialize@flags 0082                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                     __CFG_EBTR4$OFF 000000  
                 __end_of_ISR_alta 48CE                     __CFG_EBTR5$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                              _check 00D4  
                   __CFG_EBTRB$OFF 000000          __end_of_F2_Button_Polling 67DC  
                  __end_of_dpowers FE83                              _scale 2902  
                  __end_of_isdigit 666C          __size_of_LCD_shift_cursor 004C  
                     ?i2_LCD_clear 0027                     __pbitbssCOMRAM 0260  
             __end_of_CANisRxReady 6824                              tablat 000FF5  
             __end_of_CANisTxReady 672A                   i2_LCD_initialize 55F4  
                 __end_ofi2___wmul 6706                              plusw1 000FE3  
                            plusw2 000FDB                              utoa@c 007F  
                            utoa@v 007D                              status 000FD8  
                  __end_of_sprintf 139A        i2delay_set_quartz@frequency 0038  
              __size_of_LCD_cursor 0032                    __initialization 63EA  
                     __end_of_main 2272                       __end_of_itoa 63EA  
    __size_of_board_initialization 00A4                      _LCD_goto_line 581A  
                     __end_of_utoa 5A82                  ?_Joystick_Polling 0027  
               ??_Joystick_Polling 0070                  ?_LCD_write_string 0081  
                           ??_main 014D                             ??_itoa 0086  
                           ??_utoa 007D          __size_ofi2_CANsendMessage 0690  
                    __activetblptr 000003                          ??_LCD_Gap 004B  
                        ??_LCD_End 0083                     _JoystickValues 00DC  
               ??_LCD_write_string 0083               __size_of__tdiv_to_l_ 019E  
                _CANisTxReady$3247 0070           __size_ofi2_LCD_goto_line 00B8  
                __end_of_LCD_clear 65E0                        ?i2_delay_ms 003E  
            i2CANsendMessage@flags 003F             LCD_write_string@buffer 0081  
                           _ADCON1 000FC1                             _CANCON 000F6F  
                 ___llmod@dividend 0070                             ?_scale 0097  
                           _ADRESH 000FC4                   ___awdiv@dividend 0076  
                           _CAN_Rx 5CB0                             _CAN_Tx 5B3E  
                  __CFG_BBSIZ$1024 000000                             i2l7012 2318  
                           i2l7032 23F4                             i2l7114 2640  
                           i2l7108 2624                             i2l4910 64F6  
                           i2l7230 5C6E                             i2l7038 2410  
                           i2l7224 5BFC                             i2l7232 5C94  
                           i2l7240 65FA                             i2l7410 32D6  
                           i2l7402 329E                             i2l7226 5C22  
                           i2l7340 3022                             i2l7228 5C48  
                           i2l7236 65E2                             i2l7164 2778  
                           i2l7414 32F2                             i2l7406 32BA  
                           i2l7190 2870                             i2l7416 3324  
                           i2l7352 307C                             i2l7344 3040  
                           i2l7336 3004                             i2l7328 2F94  
                           i2l7184 2854                             i2l7088 2548  
                           i2l7354 30AE                             i2l7348 305E  
                           i2l7390 3214                             i2l9310 4702  
                           i2l9324 4748                             i2l9316 4724  
                           i2l7398 3282                             i2l9342 4798  
                           i2l9334 4778                             i2l7680 5EA4  
                           i2l9360 480C                             i2l9352 47CA  
                           i2l9328 4750                             i2l7690 5EE2  
                           i2l9380 488A                             i2l7694 5F10  
                           i2l9366 4830                             i2l9376 485C  
                           _RXB0D0 000F66                             _RXB0D1 000F67  
                           _RXB0D2 000F68                             _RXB0D3 000F69  
                           _RXB0D4 000F6A                             _RXB1D0 000F56  
                           _RXB0D5 000F6B                             _RXB1D1 000F57  
                           _RXB0D6 000F6C                             _RXB1D2 000F58  
                           _RXB0D7 000F6D                             _RXB1D3 000F59  
                           _RXB1D4 000F5A                             _RXB1D5 000F5B  
                           _RXB1D6 000F5C                             _RXB1D7 000F5D  
                           _TXB0D0 000F46                             _TXB0D1 000F47  
                           _TXB0D2 000F48                             _TXB0D3 000F49  
                           _TXB1D0 000F36                             _TXB0D4 000F4A  
                           _TXB1D1 000F37                             _TXB0D5 000F4B  
                           _TXB1D2 000F38                             _TXB0D6 000F4C  
                           _TXB1D3 000F39                             _TXB0D7 000F4D  
                           _TXB2D0 000F26                             _TXB1D4 000F3A  
                           _TXB2D1 000F27                             _TXB1D5 000F3B  
                           _TXB2D2 000F28                             _TXB1D6 000F3C  
                           _TXB2D3 000F29                             _TXB1D7 000F3D  
                           _TXB2D4 000F2A                             _TXB2D5 000F2B  
                           _TXB2D6 000F2C                             _TXB2D7 000F2D  
               CANsendMessage@data 0074                 i2_LCD_enable_pulse 676A  
               CANsendMessage@tamp 007C                   __end_of___xxtofl 4A9C  
                  _switch_position 00E7                   __end_of_delay_ms 64A2  
            __size_of_CANSetFilter 0B06                     __CFG_XINST$OFF 000000  
                __end_of_ISR_bassa 00C0                   __end_of__powers_ FE5B  
                       _MotoreFlag 0263                ?i2_LCD_enable_pulse 0027  
                   ?_LCD_goto_line 0027                             ___flge 516E  
                        ??___fladd 00AC                   _delay_set_quartz 6824  
                           ___wmul 6512                          ??___fldiv 0086  
                        ??___awdiv 007A                          ??___flneg 009B  
                   __CFG_STVREN$ON 000000                          ??___awmod 0074  
                        ??___flmul 0086                          ??___flsub 00C0  
                        ??___fltol 00BC                          ??___lldiv 0078  
                        ??___llmod 0078                          ??___lwdiv 0074  
                     ??_CANSetMask 0075                          ??___lwmod 0074  
          __size_of_LCD_write_char 0096                             _fround 43D4  
 i2LCD_initialize@quartz_frequency 0046     LCD_initialize@quartz_frequency 007E  
                           clear_0 63F0                             clear_1 63FC  
                           clear_2 640C                   ___awdiv@quotient 007C  
                  ___awmod@divisor 0072              i2LCD_write_char@value 0048  
             __size_of_LCD_Handler 01AE                    ___awmod@counter 0074  
                  __CFG_BOREN$BOHW 000000                  _JoystickConstants 00CC  
                           itoa@cp 0086                      ?i2_LCD_cursor 0044  
                        ??_isdigit 0070                       __mediumconst FDF2  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8               ??i2_LCD_enable_pulse 0040  
       __size_of_F2_Button_Polling 001C                          ??_sprintf 00CA  
                     _CANSetFilter 0000                   i2_LCD_write_char 60E8  
                       ___flge@ff1 0070                         ___flge@ff2 0074  
                     ___xxtofl@arg 007A                       ___xxtofl@exp 0079  
                     ___xxtofl@val 0070                         __accesstop 0060  
          __end_of__initialization 6424                 __end_of_CANSetMask 43D4  
                        ?_LCD_Park 0027                    __CFG_PBADEN$OFF 000000  
                       _SterzoFlag 0265                         ___flneg@f1 0097  
                 _LCD_send_command 642E                      ___rparam_used 000001  
LCD_write_integer@number_of_digits 008A                         ___fltol@f1 00B8  
                        ?i2_CAN_Tx 0027               __size_of_LCD_goto_xy 001C  
       __end_ofi2_delay_set_quartz 6836                     __pcstackCOMRAM 0027  
              __size_ofi2_delay_ms 0038                       __pidataBANK0 6836  
                        ?_ISR_alta 0027                       LCD_goto_xy@x 0080  
                     LCD_goto_xy@y 007F                      __end_of_scale 2E1C  
                   _LCD_initialize 5486                  _LCD_write_integer 4C62  
                _LCD_write_message 6548                     ??i2_LCD_cursor 0045  
            CANSetFilter@numBuffer 0079                          ?i2___wmul 0038  
               ?_LCD_write_integer 0088             LCD_write_integer@index 0097  
               ?_LCD_write_message 0081                         __div_to_l_ 52FE  
                     ??_LCD_cursor 007D             LCD_write_integer@value 0088  
    LCD_write_integer@convertedInt 0091                  _space_gap_reached 026A  
                    _newMessageCan 0267                       _actual_speed 00DE  
            __size_of_CANisRxReady 0016              __size_of_CANisTxReady 0024  
              ??_LCD_write_integer 008C                    __div_to_l_@exp1 007D  
              ??_LCD_write_message 0083                    __div_to_l_@cntr 007C  
                          ??_scale 009B                   _LCD_shift_cursor 630E  
                  __div_to_l_@quot 0078           __end_of_CANOperationMode 680E  
                          ?_CAN_Rx 0027                            ?_CAN_Tx 0027  
       __end_ofi2_LCD_send_command 6642                         __pbssBANK0 00CC  
                       __pbssBANK1 0100                  ??i2_LCD_goto_line 0044  
                       _data_brake 0026                         ??_LCD_Park 004B  
          __size_of_CANsendMessage 078C               __size_ofi2_LCD_clear 0026  
                       _data_speed 00EA                      __div_to_l_@f1 0070  
                    __div_to_l_@f2 0074                         ??i2_CAN_Tx 0048  
                  ??_LCD_goto_line 007C                 __end_of_LCD_cursor 65AE  
           __end_of_LCD_initialize 55F4                            ?___flge 0070  
                          ?___wmul 0070                         ??_ISR_alta 0060  
        __end_of_LCD_write_integer 4E22          __end_of_LCD_write_message 657C  
                ?_LCD_enable_pulse 0027                            ?_fround 0097  
                     _CANisRxReady 680E                            _CANSTAT 000F6E  
               ??_LCD_enable_pulse 0078           __end_ofi2_LCD_initialize 570E  
                     _CANisTxReady 6706                          ISR_alta@i 004B  
                          _BRGCON1 000F70                            _BRGCON2 000F71  
                          _BRGCON3 000F72                   i2_CANsendMessage 2272  
                       ??i2___wmul 003C        __size_of_PWR_Button_Polling 001C  
                          _LCD_Gap 62BE                            _LCD_End 61BA  
                        ?___xxtofl 0070            __size_ofi2_CANisTxReady 001E  
           __size_of_CANInitialize 01C6                   LCD_cursor@active 007D  
                        ?_delay_ms 0076                            _RXB0DLC 000F65  
                          _RXB1DLC 000F55                            _RXB0CON 000F60  
                          _RXB1CON 000F50                            _TXB0DLC 000F45  
                          _TXB1DLC 000F35                            _TXB2DLC 000F25  
              CANsendMessage@flags 0077                            _AbsFlag 0260  
                  __size_of_CAN_Rx 00AE                    __size_of_CAN_Tx 00BA  
                __end_of__npowers_ FE27        __end_ofi2_LCD_write_message 6612  
                          __Hparam 0000                         _left_speed 001D  
                       _scale$4244 009B                            __Lparam 0000  
                 delay_ms@value_ms 0076                    ?_LCD_initialize 0027  
                  __size_of___flge 0190                            ___fladd 3328  
                          ___fldiv 3C76                            ___awdiv 5906  
                          ___flneg 64A2                            ___awmod 5E02  
                          ___flmul 37D0                            ___flsub 635A  
                          ___fltol 570E                            ___lldiv 5A82  
                  __size_of___wmul 0036                     _LCD_write_char 5FDA  
                          ___llmod 5F40                            ___lwdiv 6070  
                          ___lwmod 6158               CANInitialize@propSeg 0087  
                          __pcinit 63EA                            _battery 0023  
                  __size_of_fround 02F6                            __ramtop 0D00  
              LCD_write_char@value 0080                            __ptext0 1B26  
                          __ptext1 5D5E                            __ptext2 4A9C  
                          __ptext3 4036                            __ptext4 0000  
                          __ptext5 67F8                            __ptext6 6788  
                          __ptext7 4E22                            __ptext8 0B06  
                          __ptext9 2902                        ?__div_to_l_ 0070  
                 LCD_write_char@D0 007F                   LCD_write_char@D1 007E  
                 LCD_write_char@D2 007D                   LCD_write_char@D3 007C  
                        _F1_switch 0261                            _dpowers FE5B  
                        _F2_switch 0262                            _isdigit 6642  
                       ??___xxtofl 0074                   ___awmod@dividend 0070  
                     ??i2_delay_ms 0040                         ??_delay_ms 0078  
           CANreceiveMessage@error 0042       __end_of_board_initialization 5E02  
        __size_of_Joystick_Polling 0054           __end_of_delay_set_quartz 682E  
                          _sprintf 0B06                     __pintcode_body 46CA  
                        _LCD_clear 65AE               end_of_initialization 6424  
        __size_of_LCD_write_string 0026                            itoa@buf 0080  
                          itoa@val 0082                            int_func 46CA  
              i2___wmul@multiplier 0038                          i2u1213_40 4722  
                        i2u1223_40 4806                          i2u1224_45 4808  
                        i2u1266_47 4856                          i2u1267_47 64F8  
             __end_ofi2_LCD_cursor 6694                      _CANInitialize 4A9C  
                  ___lldiv@divisor 0074                 LCD_cursor@blinking 007C  
                    _parking_state 00E5                    ___lldiv@counter 007C  
           __end_of_LCD_write_char 6070                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
       __size_of_LCD_write_integer 01C0         __size_of_LCD_write_message 0034  
               __end_ofi2_delay_ms 6512                            utoa@buf 0077  
                   __tdiv_to_l_@f1 0070                     __tdiv_to_l_@f2 0074  
                          utoa@val 0079                         _wait_low_1 026C  
                       _wait_low_2 026D                         _wait_low_3 026E  
                        _ISR_bassa 0018           __end_ofi2_LCD_write_char 6158  
                    ??__tdiv_to_l_ 0078            _steering_correction_dir 026B  
                        _PORTAbits 000F80                          _PORTBbits 000F81  
                   CANSetMask@mask 0070                          _PORTDbits 000F83  
                   CANSetMask@tamp 007A           __end_of_LCD_send_command 6468  
                   CANSetMask@type 0074                i2LCD_goto_line@line 0044  
                      ___fladd@grs 00B7                      ___xxtofl@sign 0078  
                      ___fldiv@grs 0091                        ___fldiv@rem 008B  
                _F1_Button_Polling 67DC                         ?_LCD_clear 0027  
               ?_F1_Button_Polling 0027                     __end_of_CAN_Rx 5D5E  
                   __end_of_CAN_Tx 5BF8            _clock_counter_reference 00E0  
                      ___flmul@grs 008C                     _CANsendMessage 139A  
                 CANInitialize@BRP 0081                   CANInitialize@SJW 0080  
                   ?_CANInitialize 007E                ??_F1_Button_Polling 0070  
                __size_of_LCD_Park 0050                __size_of__div_to_l_ 0188  
          LCD_write_integer@F17272 0107                    ?_LCD_write_char 0027  
                __size_ofi2_CAN_Tx 009C                      ??_LCD_Handler 00CC  
         __end_of_LCD_shift_cursor 635A                     __end_of___flge 52FE  
                       ?_ISR_bassa 0027                     __end_of___wmul 6548  
                __size_of_ISR_alta 48C6                  LCD_shift_cursor@i 007E  
                   __end_of_fround 46CA                 i2_delay_set_quartz 682E  
                 i2___wmul@product 003C                    i2_LCD_goto_line 5BF8  
                   i2_CANisTxReady 674C          __end_of_F1_Button_Polling 67F8  
              start_initialization 63EA                  __size_ofi2___wmul 0026  
              __end_of__tdiv_to_l_ 516E        __size_ofi2_LCD_enable_pulse 001E  
              ?i2_delay_set_quartz 0027                CANSetMask@numBuffer 0079  
                    _data_speed_rx 0100             __end_of_CANsendMessage 1B26  
                         ??_CAN_Rx 0070                           ??_CAN_Tx 0080  
                ?_CANOperationMode 0027                      _data_steering 00EB  
                    ??_LCD_goto_xy 0080         i2CANsendMessage@dataLength 003E  
             i2CANsendMessage@data 003C                 ??_CANOperationMode 0070  
             i2CANsendMessage@tamp 0044                    ___llmod@divisor 0074  
         __end_ofi2_CANsendMessage 2902         CANInitialize@FilterConfig1 0088  
       CANInitialize@FilterConfig2 0089                    ___llmod@counter 0078  
              _steering_correction 00E6                 i2_LCD_send_command 6612  
                         ??___flge 0078               ??i2_delay_set_quartz 0038  
             _board_initialization 5D5E                           ??___wmul 0074  
                      __pdataBANK0 00EC                   __CFG_LPT1OSC$OFF 000000  
                         ??_fround 009B             __end_ofi2_CANisTxReady 676A  
                    sprintf@tmpval 0142                ?i2_LCD_send_command 0040  
                ?i2_LCD_initialize 0027                          ___fladd@a 00A8  
                        ___fladd@b 00A4             CANInitialize@phaseSeg1 007E  
           CANInitialize@phaseSeg2 007F                         fround@prec 00A3  
              __end_of_LCD_Handler 4FD0                           ?_LCD_Gap 0027  
                         ?_LCD_End 0027                          ___fldiv@a 0082  
                        ___fldiv@b 007E                 ??i2_LCD_initialize 0046  
                        ___flmul@a 0082                          ___flmul@b 007E  
                      __pbssCOMRAM 0001                          ___flsub@a 00BC  
                        ___flsub@b 00B8                      __pcstackBANK0 0060  
                    __pcstackBANK1 0134                        _BRGCON2bits 000F71  
                      _BRGCON3bits 000F72                   _Joystick_Polling 621A  
                __size_of___xxtofl 01CE          __size_of_LCD_enable_pulse 0022  
                     _isdigit$3828 0071         i2CANsendMessage@identifier 0038  
                _park_assist_state 012C                      ??i2_LCD_clear 0044  
                __size_of_delay_ms 003A                        ??_LCD_clear 007C  
                  ?_CANsendMessage 0070            LCD_write_message@buffer 0081  
            __size_ofi2_LCD_cursor 0028                   _LCD_write_string 6694  
                  ??_CANInitialize 0083               ??i2_LCD_send_command 0043  
                      sprintf@flag 013A                        sprintf@fval 0148  
                      sprintf@prec 0146                   ??_LCD_initialize 007E  
               CANSetFilter@filter 0070          delay_set_quartz@frequency 0070  
                 ___lwdiv@dividend 0070                 LCD_send_command@D0 007A  
               LCD_send_command@D1 0079                 LCD_send_command@D2 0078  
               LCD_send_command@D3 007B                __end_of_LCD_goto_xy 67C0  
            __end_of_LCD_goto_line 5906              ?_board_initialization 0027  
                        __pintcode 0008                      __pmediumconst FDF2  
                         ?___fladd 00A4                           ?___fldiv 007E  
                         ?___awdiv 0076                           ?___flneg 0097  
                         ?___awmod 0070                           ?___flmul 007E  
                         ?___flsub 00B8                           ?___fltol 00B8  
                         ?___lldiv 0070                           ?___llmod 0070  
                        __npowers_ FDF3            __end_ofi2_LCD_goto_line 5CB0  
                         ?___lwdiv 0070                           ?___lwmod 0070  
                      ??_ISR_bassa 0027                        __pintcodelo 0018  
       __end_of_PWR_Button_Polling 67A4                    ?i2_CANisTxReady 0027  
                      __tdiv_to_l_ 4FD0                       ??__div_to_l_ 0078  
                      _COMSTATbits 000F74                           ?_isdigit 0027  
                     i2_LCD_cursor 666C         __size_of_F1_Button_Polling 001C  
                 ___lwdiv@quotient 0074                           ?_sprintf 00C2  
                   __size_of_scale 051A                  ?_delay_set_quartz 0027  
               i2LCD_cursor@active 0045              CANreceiveMessage@tamp 0043  
               ??_delay_set_quartz 0070                           _LCD_Park 626E  
                   ___wmul@product 0074                           _LATCbits 000F8B  
                         _LATDbits 000F8C                           _LATEbits 000F8D  
                         _IPR2bits 000FA2       _delay_quartz_frequency_value 00EC  
                         _IPR3bits 000FA5                           _PIE2bits 000FA0  
                         _PIE3bits 000FA3                           i2_CAN_Tx 5EA4  
              __end_ofi2_LCD_clear 66E0                 __end_of__div_to_l_ 5486  
                         i2u602_45 661C                           i2u602_46 661E  
                         _PIR2bits 000FA1                           i2u603_45 6626  
                         i2u603_46 6628                           i2u604_45 6630  
                         i2u604_46 6632                           _PIR3bits 000FA4  
                         i2u605_45 663A                           i2u605_46 663C  
                         i2u903_40 2796                           i2u903_45 278C  
                         i2u904_40 27DC                           i2u904_45 27D2  
                         i2u905_45 2828                           i2u915_40 2ED4  
                         i2u915_46 2ED6                           i2u916_40 2F02  
                         i2u924_45 3088                           i2u916_46 2F04  
                         i2u926_40 315C                           i2u918_45 2F18  
                         i2u926_46 315E                           i2u927_40 3186  
                         i2u935_45 32FE                           i2u927_46 3188  
                         _RXB0EIDH 000F63                           _RXB0EIDL 000F64  
                         i2u929_45 319A                           i2u890_40 2566  
                         i2u890_45 255C                           i2u891_40 25AC  
                         _RXB1EIDH 000F53                          _pr_time_1 00D8  
                        _pr_time_2 0005                           _RXB1EIDL 000F54  
                        _pr_time_3 0009                           i2u891_45 25A2  
                        _pr_time_4 000D                          _pr_time_5 0011  
                        _pr_time_6 0015                           i2u892_45 25F8  
                         i2u877_40 2336                           i2u877_45 232C  
                         i2u878_40 237C                          _set_speed 00E2  
                         i2u878_45 2372                           _RCONbits 000FD0  
                         i2u879_45 23C8                   __CFG_WDTPS$32768 000000  
                         _RXB0SIDH 000F61                           _RXB0SIDL 000F62  
                         _RXF0EIDH 000F02                           _RXB1SIDH 000F51  
                         _RXF0EIDL 000F03                           _RXB1SIDL 000F52  
                         _RXF1EIDH 000F06                           _RXF1EIDL 000F07  
                         _RXF2EIDH 000F0A                           _RXF2EIDL 000F0B  
                         _RXF3EIDH 000F0E                           _RXF3EIDL 000F0F  
                         _RXF4EIDH 000F12                           _RXF4EIDL 000F13  
                         _RXF5EIDH 000F16                           _RXF5EIDL 000F17  
                         _RXF0SIDH 000F00                           _RXF0SIDL 000F01  
                         _TXB0EIDH 000F43                           _RXF1SIDH 000F04  
                         _TXB0EIDL 000F44                           _RXF1SIDL 000F05  
                         _TXB1EIDH 000F33                           _RXF2SIDH 000F08  
                         _TXB1EIDL 000F34                           _RXF2SIDL 000F09  
                         _ISR_alta 0008                           _TXB2EIDH 000F23  
                         _RXF3SIDH 000F0C                           _TXB2EIDL 000F24  
                         _RXF3SIDL 000F0D                           _RXF4SIDH 000F10  
                         _RXF4SIDL 000F11                           _RXF5SIDH 000F14  
                         _RXF5SIDL 000F15                           _RXM0EIDH 000F1A  
                         _RXM0EIDL 000F1B                           _TXB0SIDH 000F41  
                         _RXM1EIDH 000F1E                           _TXB0SIDL 000F42  
                         _RXM1EIDL 000F1F                           _TXB1SIDH 000F31  
                         _TXB1SIDL 000F32                           _TXB2SIDH 000F21  
                         _TXB2SIDL 000F22                        _LCD_Handler 4E22  
                         _RXM0SIDH 000F18                           _RXM0SIDL 000F19  
                         _RXM1SIDH 000F1C                           _RXM1SIDL 000F1D  
                         _RXERRCNT 000F75       __size_ofi2_LCD_write_message 0032  
               i2delay_ms@value_ms 003E                  ?i2_LCD_write_char 0027  
   LCD_write_integer@zero_cleaning 008B                           _TXERRCNT 000F76  
                       _ADCON0bits 000FC2                         _ADCON2bits 000FC0  
                ___wmul@multiplier 0070                           _RTR_Flag 0264  
                         i2___wmul 66E0                  ?_LCD_send_command 0078  
               ??i2_LCD_write_char 0044                   _actual_speed_kmh 010D  
                        _user_data 0021                   __size_of_LCD_Gap 0050  
                 __size_of_LCD_End 0060                 ??_LCD_send_command 007B  
                    ?_CANSetFilter 0070                 i2LCD_write_char@D0 0047  
               i2LCD_write_char@D1 0046                 i2LCD_write_char@D2 0045  
               i2LCD_write_char@D3 0044                         _CANCONbits 000F6F  
                      _LCD_goto_xy 67A4                   ??_LCD_write_char 007C  
                LCD_goto_line@line 007C                           __Hrparam 0000  
                     _RXB0SIDLbits 000F62             ??_board_initialization 008A  
                         __Lrparam 0000                       _RXB1SIDLbits 000F52  
                 ?i2_LCD_goto_line 0027                   __size_of___fladd 04A8  
                       _CANSetMask 4036                   __size_of___fldiv 03C0  
                 __size_of___awdiv 00BE                   __size_of___flneg 0038  
                 __size_of___awmod 00A2                   __size_of___flmul 04A6  
                ?_LCD_shift_cursor 007C                   __size_of___flsub 0048  
                 __size_of___fltol 010C              i2___wmul@multiplicand 003A  
                 __size_of___lldiv 00BC                   __size_of___llmod 009A  
                 __size_of___lwdiv 0078                   __size_of___lwmod 0062  
                      _fround$4242 009F                        _fround$4243 009B  
               ??_LCD_shift_cursor 007D                         sprintf@exp 0140  
                       sprintf@val 013C                           ___xxtofl 48CE  
                     _RXF0SIDLbits 000F01                   __size_of_isdigit 002A  
                         _delay_ms 6468                    ___lwdiv@divisor 0072  
                     _RXF1SIDLbits 000F05                    ___lwdiv@counter 0076  
                   ??_CANSetFilter 0075                   _LCD_enable_pulse 672A  
                         __ptext10 6642                           __ptext11 43D4  
                         __ptext20 570E                           __ptext12 37D0  
                         __ptext21 635A                           __ptext13 5E02  
                         __ptext30 6070                           __ptext22 3328  
                         __ptext14 5906                           __ptext31 6694  
                         __ptext23 64A2                           __ptext15 4FD0  
                         __ptext40 65AE                           __ptext32 67A4  
                         __ptext24 516E                           __ptext16 52FE  
                         __ptext41 581A                           __ptext33 630E  
                         __ptext25 3C76                           __ptext17 48CE  
                         __ptext50 139A                           __ptext42 642E  
                         __ptext34 61BA                           __ptext26 4C62  
                         __ptext18 5F40                           __ptext51 6706  
                         __ptext43 672A                           __ptext35 6548  
                         __ptext27 63A2                           __ptext19 5A82  
                         __ptext60 65E0                           __ptext52 5CB0  
                         __ptext44 6468                           __ptext36 5FDA  
                         __ptext28 59C4                           __ptext61 60E8  
                         __ptext45 6512                           __ptext37 5486  
                         __ptext29 6158                           __ptext70 66E0  
                         __ptext62 55F4                           __ptext46 621A  
                         __ptext38 6824                           __ptext71 2E1C  
                         __ptext63 682E                           __ptext55 5EA4  
                         __ptext47 67C0                           __ptext39 657C  
                         __ptext72 680E                           __ptext64 666C  
                         __ptext56 2272                           __ptext48 67DC  
                         __ptext65 66BA                           __ptext57 674C  
                         __ptext49 5B3E                           __ptext66 5BF8  
                         __ptext58 626E                           __ptext67 6612  
                         __ptext59 62BE                           __ptext68 676A  
                         __ptext69 64DA                       _RXF2SIDLbits 000F09  
                         __powers_ FE27                       _RXF3SIDLbits 000F0D  
                      i2_LCD_clear 66BA                   __size_of_sprintf 0894  
                     _RXF4SIDLbits 000F11                       _RXF5SIDLbits 000F15  
         CANsendMessage@dataLength 0076                      __size_of_main 074C  
                    __size_of_itoa 0048                      __size_of_utoa 00BE  
                ?i2_CANsendMessage 0038               CANreceiveMessage@msg 0038  
            LCD_shift_cursor@shift 007D               i2LCD_cursor@blinking 0044  
              i2_CANisTxReady$3247 0038                       _TXB0SIDLbits 000F42  
                Joystick_Polling@i 0071                 ??i2_CANsendMessage 0040  
                     _TXB1SIDLbits 000F32           __end_of_Joystick_Polling 626E  
                     _TXB2SIDLbits 000F22                           int$flags 004E  
        __size_of_CANOperationMode 0016                      ?_CANisRxReady 0027  
                    ?_CANisTxReady 0027           __end_of_LCD_write_string 66BA  
                      _RXB0DLCbits 000F65                        _RXB1DLCbits 000F55  
                     _RXM0SIDLbits 000F19                        _RXB0CONbits 000F60  
                       _LCD_cursor 657C                        _RXB1CONbits 000F50  
                _CANreceiveMessage 2E1C                       _RXM1SIDLbits 000F1D  
       __end_ofi2_LCD_enable_pulse 6788                         _INTCONbits 000FF2  
                     _set_steering 0024                   ??_CANsendMessage 0078  
               ?_CANreceiveMessage 0038                           itoa@base 0084  
                         isdigit@c 0072                           scale@scl 009F  
         CANsendMessage@identifier 0070                       _time_counter 0019  
                         intlevel1 0000                           intlevel2 0000  
                        sprintf@ap 0138                   __tdiv_to_l_@exp1 0080  
                        sprintf@sp 00C2                   __tdiv_to_l_@cntr 007F  
                 CANSetFilter@tamp 007A                   __tdiv_to_l_@quot 007B  
        __size_ofi2_LCD_initialize 011A                   CANSetFilter@type 0074  
              ??_CANreceiveMessage 003A                   ___lwmod@dividend 0070  
                 ___lldiv@dividend 0070                        _TXB0DLCbits 000F45  
                      _right_speed 001F                        _TXB1DLCbits 000F35  
                      _TXB0CONbits 000F40                        _TXB2DLCbits 000F25  
                      _TXB1CONbits 000F30                        _TXB2CONbits 000F20  
                  _display_refresh 0266                   ??i2_CANisTxReady 0038  
      __size_ofi2_delay_set_quartz 0008               CANOperationMode@mode 0070  
                   ??_CANisRxReady 0038                        ?_CANSetMask 0070  
                   ??_CANisTxReady 0070                       ?__tdiv_to_l_ 0070  
        __end_of_CANreceiveMessage 3328                           utoa@base 007B  
                         sprintf@c 014C                           sprintf@f 00C4  
                 ___lldiv@quotient 0078                    ___lwmod@divisor 0072  
  LCD_shift_cursor@number_of_shift 007C                    ___lwmod@counter 0074  
                    ___fladd@signs 00B4                 _PWR_Button_Polling 6788  
              i2_LCD_write_message 65E0                       ___fladd@aexp 00B5  
                     ___fladd@bexp 00B6        __size_ofi2_LCD_send_command 0030  
            __end_of_CANInitialize 4C62                ?_PWR_Button_Polling 0027  
                     _power_switch 0268  
