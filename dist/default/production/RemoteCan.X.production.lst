

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Jun 07 19:35:04 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    78                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    84                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    85  0000                     
    86                           	psect	idataBANK0
    87  015FAE                     __pidataBANK0:
    88                           	opt stack 0
    89                           
    90                           ;initializer for _delay_quartz_frequency_value
    91  015FAE  10                 	db	16
    92                           
    93                           	psect	mediumconst
    94  00FD5E                     __pmediumconst:
    95                           	opt stack 0
    96  00FD5E  00                 	db	0
    97  00FD5F                     __npowers_:
    98                           	opt stack 0
    99  00FD5F  0000               	dw	0
   100  00FD61  3F80               	dw	16256
   101  00FD63  CCCD               	dw	52429
   102  00FD65  3DCC               	dw	15820
   103  00FD67  D70A               	dw	55050
   104  00FD69  3C23               	dw	15395
   105  00FD6B  126F               	dw	4719
   106  00FD6D  3A83               	dw	14979
   107  00FD6F  B717               	dw	46871
   108  00FD71  38D1               	dw	14545
   109  00FD73  C5AC               	dw	50604
   110  00FD75  3727               	dw	14119
   111  00FD77  37BD               	dw	14269
   112  00FD79  3586               	dw	13702
   113  00FD7B  BF95               	dw	49045
   114  00FD7D  33D6               	dw	13270
   115  00FD7F  CC77               	dw	52343
   116  00FD81  322B               	dw	12843
   117  00FD83  705F               	dw	28767
   118  00FD85  3089               	dw	12425
   119  00FD87  E6FF               	dw	59135
   120  00FD89  2EDB               	dw	11995
   121  00FD8B  E508               	dw	58632
   122  00FD8D  1E3C               	dw	7740
   123  00FD8F  4260               	dw	16992
   124  00FD91  0DA2               	dw	3490
   125  00FD93                     __end_of__npowers_:
   126                           	opt stack 0
   127  00FD93                     __powers_:
   128                           	opt stack 0
   129  00FD93  0000               	dw	0
   130  00FD95  3F80               	dw	16256
   131  00FD97  0000               	dw	0
   132  00FD99  4120               	dw	16672
   133  00FD9B  0000               	dw	0
   134  00FD9D  42C8               	dw	17096
   135  00FD9F  0000               	dw	0
   136  00FDA1  447A               	dw	17530
   137  00FDA3  4000               	dw	16384
   138  00FDA5  461C               	dw	17948
   139  00FDA7  5000               	dw	20480
   140  00FDA9  47C3               	dw	18371
   141  00FDAB  2400               	dw	9216
   142  00FDAD  4974               	dw	18804
   143  00FDAF  9680               	dw	38528
   144  00FDB1  4B18               	dw	19224
   145  00FDB3  BC20               	dw	48160
   146  00FDB5  4CBE               	dw	19646
   147  00FDB7  6B28               	dw	27432
   148  00FDB9  4E6E               	dw	20078
   149  00FDBB  02F9               	dw	761
   150  00FDBD  5015               	dw	20501
   151  00FDBF  78EC               	dw	30956
   152  00FDC1  60AD               	dw	24749
   153  00FDC3  F2CA               	dw	62154
   154  00FDC5  7149               	dw	29001
   155  00FDC7                     __end_of__powers_:
   156                           	opt stack 0
   157  00FDC7                     _dpowers:
   158                           	opt stack 0
   159  00FDC7  0001               	dw	1
   160  00FDC9  0000               	dw	0
   161  00FDCB  000A               	dw	10
   162  00FDCD  0000               	dw	0
   163  00FDCF  0064               	dw	100
   164  00FDD1  0000               	dw	0
   165  00FDD3  03E8               	dw	1000
   166  00FDD5  0000               	dw	0
   167  00FDD7  2710               	dw	10000
   168  00FDD9  0000               	dw	0
   169  00FDDB  86A0               	dw	34464
   170  00FDDD  0001               	dw	1
   171  00FDDF  4240               	dw	16960
   172  00FDE1  000F               	dw	15
   173  00FDE3  9680               	dw	38528
   174  00FDE5  0098               	dw	152
   175  00FDE7  E100               	dw	57600
   176  00FDE9  05F5               	dw	1525
   177  00FDEB  CA00               	dw	51712
   178  00FDED  3B9A               	dw	15258
   179  00FDEF                     __end_of_dpowers:
   180                           	opt stack 0
   181  0000                     _RXB1CON	set	3920
   182  0000                     _RXB1CONbits	set	3920
   183  0000                     _RXB1D0	set	3926
   184  0000                     _RXB1D1	set	3927
   185  0000                     _RXB1D2	set	3928
   186  0000                     _RXB1D3	set	3929
   187  0000                     _RXB1D4	set	3930
   188  0000                     _RXB1D5	set	3931
   189  0000                     _RXB1D6	set	3932
   190  0000                     _RXB1D7	set	3933
   191  0000                     _RXB1DLC	set	3925
   192  0000                     _RXB1DLCbits	set	3925
   193  0000                     _RXB1EIDH	set	3923
   194  0000                     _RXB1EIDL	set	3924
   195  0000                     _RXB1SIDH	set	3921
   196  0000                     _RXB1SIDL	set	3922
   197  0000                     _RXB1SIDLbits	set	3922
   198  0000                     _RXF0EIDH	set	3842
   199  0000                     _RXF0EIDL	set	3843
   200  0000                     _RXF0SIDH	set	3840
   201  0000                     _RXF0SIDL	set	3841
   202  0000                     _RXF0SIDLbits	set	3841
   203  0000                     _RXF1EIDH	set	3846
   204  0000                     _RXF1EIDL	set	3847
   205  0000                     _RXF1SIDH	set	3844
   206  0000                     _RXF1SIDL	set	3845
   207  0000                     _RXF1SIDLbits	set	3845
   208  0000                     _RXF2EIDH	set	3850
   209  0000                     _RXF2EIDL	set	3851
   210  0000                     _RXF2SIDH	set	3848
   211  0000                     _RXF2SIDL	set	3849
   212  0000                     _RXF2SIDLbits	set	3849
   213  0000                     _RXF3EIDH	set	3854
   214  0000                     _RXF3EIDL	set	3855
   215  0000                     _RXF3SIDH	set	3852
   216  0000                     _RXF3SIDL	set	3853
   217  0000                     _RXF3SIDLbits	set	3853
   218  0000                     _RXF4EIDH	set	3858
   219  0000                     _RXF4EIDL	set	3859
   220  0000                     _RXF4SIDH	set	3856
   221  0000                     _RXF4SIDL	set	3857
   222  0000                     _RXF4SIDLbits	set	3857
   223  0000                     _RXF5EIDH	set	3862
   224  0000                     _RXF5EIDL	set	3863
   225  0000                     _RXF5SIDH	set	3860
   226  0000                     _RXF5SIDL	set	3861
   227  0000                     _RXF5SIDLbits	set	3861
   228  0000                     _RXM0EIDH	set	3866
   229  0000                     _RXM0EIDL	set	3867
   230  0000                     _RXM0SIDH	set	3864
   231  0000                     _RXM0SIDL	set	3865
   232  0000                     _RXM0SIDLbits	set	3865
   233  0000                     _RXM1EIDH	set	3870
   234  0000                     _RXM1EIDL	set	3871
   235  0000                     _RXM1SIDH	set	3868
   236  0000                     _RXM1SIDL	set	3869
   237  0000                     _RXM1SIDLbits	set	3869
   238  0000                     _TXB0CONbits	set	3904
   239  0000                     _TXB0D0	set	3910
   240  0000                     _TXB0D1	set	3911
   241  0000                     _TXB0D2	set	3912
   242  0000                     _TXB0D3	set	3913
   243  0000                     _TXB0D4	set	3914
   244  0000                     _TXB0D5	set	3915
   245  0000                     _TXB0D6	set	3916
   246  0000                     _TXB0D7	set	3917
   247  0000                     _TXB0DLC	set	3909
   248  0000                     _TXB0DLCbits	set	3909
   249  0000                     _TXB0EIDH	set	3907
   250  0000                     _TXB0EIDL	set	3908
   251  0000                     _TXB0SIDH	set	3905
   252  0000                     _TXB0SIDL	set	3906
   253  0000                     _TXB0SIDLbits	set	3906
   254  0000                     _TXB1CONbits	set	3888
   255  0000                     _TXB1D0	set	3894
   256  0000                     _TXB1D1	set	3895
   257  0000                     _TXB1D2	set	3896
   258  0000                     _TXB1D3	set	3897
   259  0000                     _TXB1D4	set	3898
   260  0000                     _TXB1D5	set	3899
   261  0000                     _TXB1D6	set	3900
   262  0000                     _TXB1D7	set	3901
   263  0000                     _TXB1DLC	set	3893
   264  0000                     _TXB1DLCbits	set	3893
   265  0000                     _TXB1EIDH	set	3891
   266  0000                     _TXB1EIDL	set	3892
   267  0000                     _TXB1SIDH	set	3889
   268  0000                     _TXB1SIDL	set	3890
   269  0000                     _TXB1SIDLbits	set	3890
   270  0000                     _TXB2CONbits	set	3872
   271  0000                     _TXB2D0	set	3878
   272  0000                     _TXB2D1	set	3879
   273  0000                     _TXB2D2	set	3880
   274  0000                     _TXB2D3	set	3881
   275  0000                     _TXB2D4	set	3882
   276  0000                     _TXB2D5	set	3883
   277  0000                     _TXB2D6	set	3884
   278  0000                     _TXB2D7	set	3885
   279  0000                     _TXB2DLC	set	3877
   280  0000                     _TXB2DLCbits	set	3877
   281  0000                     _TXB2EIDH	set	3875
   282  0000                     _TXB2EIDL	set	3876
   283  0000                     _TXB2SIDH	set	3873
   284  0000                     _TXB2SIDL	set	3874
   285  0000                     _TXB2SIDLbits	set	3874
   286  0000                     _ADCON0bits	set	4034
   287  0000                     _ADCON1	set	4033
   288  0000                     _ADCON2bits	set	4032
   289  0000                     _ADRESH	set	4036
   290  0000                     _BRGCON1	set	3952
   291  0000                     _BRGCON2	set	3953
   292  0000                     _BRGCON2bits	set	3953
   293  0000                     _BRGCON3	set	3954
   294  0000                     _BRGCON3bits	set	3954
   295  0000                     _CANCON	set	3951
   296  0000                     _CANCONbits	set	3951
   297  0000                     _CANSTAT	set	3950
   298  0000                     _COMSTATbits	set	3956
   299  0000                     _INTCONbits	set	4082
   300  0000                     _IPR2bits	set	4002
   301  0000                     _IPR3bits	set	4005
   302  0000                     _LATA	set	3977
   303  0000                     _LATB	set	3978
   304  0000                     _LATC	set	3979
   305  0000                     _LATCbits	set	3979
   306  0000                     _LATD	set	3980
   307  0000                     _LATDbits	set	3980
   308  0000                     _LATE	set	3981
   309  0000                     _LATEbits	set	3981
   310  0000                     _PIE2bits	set	4000
   311  0000                     _PIE3bits	set	4003
   312  0000                     _PIR2bits	set	4001
   313  0000                     _PIR3bits	set	4004
   314  0000                     _PORTAbits	set	3968
   315  0000                     _PORTBbits	set	3969
   316  0000                     _PORTDbits	set	3971
   317  0000                     _RCONbits	set	4048
   318  0000                     _RXB0CON	set	3936
   319  0000                     _RXB0CONbits	set	3936
   320  0000                     _RXB0D0	set	3942
   321  0000                     _RXB0D1	set	3943
   322  0000                     _RXB0D2	set	3944
   323  0000                     _RXB0D3	set	3945
   324  0000                     _RXB0D4	set	3946
   325  0000                     _RXB0D5	set	3947
   326  0000                     _RXB0D6	set	3948
   327  0000                     _RXB0D7	set	3949
   328  0000                     _RXB0DLC	set	3941
   329  0000                     _RXB0DLCbits	set	3941
   330  0000                     _RXB0EIDH	set	3939
   331  0000                     _RXB0EIDL	set	3940
   332  0000                     _RXB0SIDH	set	3937
   333  0000                     _RXB0SIDL	set	3938
   334  0000                     _RXB0SIDLbits	set	3938
   335  0000                     _RXERRCNT	set	3957
   336  0000                     _T3CON	set	4017
   337  0000                     _TMR3H	set	4019
   338  0000                     _TMR3L	set	4018
   339  0000                     _TRISA	set	3986
   340  0000                     _TRISB	set	3987
   341  0000                     _TRISC	set	3988
   342  0000                     _TRISD	set	3989
   343  0000                     _TRISE	set	3990
   344  0000                     _TXERRCNT	set	3958
   345  00FDEF                     STR_11:
   346  00FDEF  44                 	db	68	;'D'
   347  00FDF0  69                 	db	105	;'i'
   348  00FDF1  72                 	db	114	;'r'
   349  00FDF2  65                 	db	101	;'e'
   350  00FDF3  63                 	db	99	;'c'
   351  00FDF4  74                 	db	116	;'t'
   352  00FDF5  69                 	db	105	;'i'
   353  00FDF6  6F                 	db	111	;'o'
   354  00FDF7  6E                 	db	110	;'n'
   355  00FDF8  3A                 	db	58	;':'
   356  00FDF9  20                 	db	32
   357  00FDFA  20                 	db	32
   358  00FDFB  20                 	db	32
   359  00FDFC  20                 	db	32
   360  00FDFD  20                 	db	32
   361  00FDFE  20                 	db	32
   362  00FDFF  20                 	db	32
   363  00FE00  20                 	db	32
   364  00FE01  20                 	db	32
   365  00FE02  20                 	db	32
   366  00FE03  00                 	db	0
   367  00FE04                     STR_37:
   368  00FE04  20                 	db	32
   369  00FE05  20                 	db	32
   370  00FE06  20                 	db	32
   371  00FE07  20                 	db	32
   372  00FE08  20                 	db	32
   373  00FE09  20                 	db	32
   374  00FE0A  20                 	db	32
   375  00FE0B  46                 	db	70	;'F'
   376  00FE0C  41                 	db	65	;'A'
   377  00FE0D  49                 	db	73	;'I'
   378  00FE0E  4C                 	db	76	;'L'
   379  00FE0F  45                 	db	69	;'E'
   380  00FE10  44                 	db	68	;'D'
   381  00FE11  21                 	db	33
   382  00FE12  20                 	db	32
   383  00FE13  20                 	db	32
   384  00FE14  20                 	db	32
   385  00FE15  20                 	db	32
   386  00FE16  20                 	db	32
   387  00FE17  20                 	db	32
   388  00FE18  00                 	db	0
   389  00FE19                     STR_34:
   390  00FE19  20                 	db	32
   391  00FE1A  20                 	db	32
   392  00FE1B  20                 	db	32
   393  00FE1C  20                 	db	32
   394  00FE1D  20                 	db	32
   395  00FE1E  43                 	db	67	;'C'
   396  00FE1F  4F                 	db	79	;'O'
   397  00FE20  4D                 	db	77	;'M'
   398  00FE21  50                 	db	80	;'P'
   399  00FE22  4C                 	db	76	;'L'
   400  00FE23  45                 	db	69	;'E'
   401  00FE24  54                 	db	84	;'T'
   402  00FE25  45                 	db	69	;'E'
   403  00FE26  44                 	db	68	;'D'
   404  00FE27  21                 	db	33
   405  00FE28  20                 	db	32
   406  00FE29  20                 	db	32
   407  00FE2A  20                 	db	32
   408  00FE2B  20                 	db	32
   409  00FE2C  20                 	db	32
   410  00FE2D  00                 	db	0
   411  00FE2E                     STR_33:
   412  00FE2E  20                 	db	32
   413  00FE2F  20                 	db	32
   414  00FE30  20                 	db	32
   415  00FE31  20                 	db	32
   416  00FE32  53                 	db	83	;'S'
   417  00FE33  55                 	db	85	;'U'
   418  00FE34  43                 	db	67	;'C'
   419  00FE35  43                 	db	67	;'C'
   420  00FE36  45                 	db	69	;'E'
   421  00FE37  53                 	db	83	;'S'
   422  00FE38  53                 	db	83	;'S'
   423  00FE39  46                 	db	70	;'F'
   424  00FE3A  55                 	db	85	;'U'
   425  00FE3B  4C                 	db	76	;'L'
   426  00FE3C  4C                 	db	76	;'L'
   427  00FE3D  59                 	db	89	;'Y'
   428  00FE3E  20                 	db	32
   429  00FE3F  20                 	db	32
   430  00FE40  20                 	db	32
   431  00FE41  20                 	db	32
   432  00FE42  00                 	db	0
   433  00FE43                     STR_26:
   434  00FE43  20                 	db	32
   435  00FE44  20                 	db	32
   436  00FE45  20                 	db	32
   437  00FE46  73                 	db	115	;'s'
   438  00FE47  74                 	db	116	;'t'
   439  00FE48  61                 	db	97	;'a'
   440  00FE49  72                 	db	114	;'r'
   441  00FE4A  74                 	db	116	;'t'
   442  00FE4B  20                 	db	32
   443  00FE4C  70                 	db	112	;'p'
   444  00FE4D  61                 	db	97	;'a'
   445  00FE4E  72                 	db	114	;'r'
   446  00FE4F  6B                 	db	107	;'k'
   447  00FE50  69                 	db	105	;'i'
   448  00FE51  6E                 	db	110	;'n'
   449  00FE52  67                 	db	103	;'g'
   450  00FE53  20                 	db	32
   451  00FE54  20                 	db	32
   452  00FE55  20                 	db	32
   453  00FE56  20                 	db	32
   454  00FE57  00                 	db	0
   455  00FE58                     STR_3:
   456  00FE58  20                 	db	32
   457  00FE59  20                 	db	32
   458  00FE5A  50                 	db	80	;'P'
   459  00FE5B  72                 	db	114	;'r'
   460  00FE5C  65                 	db	101	;'e'
   461  00FE5D  73                 	db	115	;'s'
   462  00FE5E  73                 	db	115	;'s'
   463  00FE5F  20                 	db	32
   464  00FE60  74                 	db	116	;'t'
   465  00FE61  68                 	db	104	;'h'
   466  00FE62  65                 	db	101	;'e'
   467  00FE63  20                 	db	32
   468  00FE64  62                 	db	98	;'b'
   469  00FE65  75                 	db	117	;'u'
   470  00FE66  74                 	db	116	;'t'
   471  00FE67  74                 	db	116	;'t'
   472  00FE68  6F                 	db	111	;'o'
   473  00FE69  6E                 	db	110	;'n'
   474  00FE6A  20                 	db	32
   475  00FE6B  20                 	db	32
   476  00FE6C  00                 	db	0
   477  00FE6D                     STR_38:
   478  00FE6D  20                 	db	32
   479  00FE6E  20                 	db	32
   480  00FE6F  20                 	db	32
   481  00FE70  64                 	db	100	;'d'
   482  00FE71  75                 	db	117	;'u'
   483  00FE72  65                 	db	101	;'e'
   484  00FE73  20                 	db	32
   485  00FE74  74                 	db	116	;'t'
   486  00FE75  6F                 	db	111	;'o'
   487  00FE76  20                 	db	32
   488  00FE77  61                 	db	97	;'a'
   489  00FE78  6E                 	db	110	;'n'
   490  00FE79  20                 	db	32
   491  00FE7A  65                 	db	101	;'e'
   492  00FE7B  72                 	db	114	;'r'
   493  00FE7C  72                 	db	114	;'r'
   494  00FE7D  6F                 	db	111	;'o'
   495  00FE7E  72                 	db	114	;'r'
   496  00FE7F  20                 	db	32
   497  00FE80  20                 	db	32
   498  00FE81  00                 	db	0
   499  00FE82                     STR_22:
   500  00FE82  20                 	db	32
   501  00FE83  75                 	db	117	;'u'
   502  00FE84  6E                 	db	110	;'n'
   503  00FE85  74                 	db	116	;'t'
   504  00FE86  69                 	db	105	;'i'
   505  00FE87  6C                 	db	108	;'l'
   506  00FE88  20                 	db	32
   507  00FE89  6E                 	db	110	;'n'
   508  00FE8A  65                 	db	101	;'e'
   509  00FE8B  78                 	db	120	;'x'
   510  00FE8C  74                 	db	116	;'t'
   511  00FE8D  20                 	db	32
   512  00FE8E  6D                 	db	109	;'m'
   513  00FE8F  65                 	db	101	;'e'
   514  00FE90  73                 	db	115	;'s'
   515  00FE91  73                 	db	115	;'s'
   516  00FE92  61                 	db	97	;'a'
   517  00FE93  67                 	db	103	;'g'
   518  00FE94  65                 	db	101	;'e'
   519  00FE95  20                 	db	32
   520  00FE96  00                 	db	0
   521  00FE97                     STR_25:
   522  00FE97  50                 	db	80	;'P'
   523  00FE98  72                 	db	114	;'r'
   524  00FE99  65                 	db	101	;'e'
   525  00FE9A  73                 	db	115	;'s'
   526  00FE9B  73                 	db	115	;'s'
   527  00FE9C  20                 	db	32
   528  00FE9D  74                 	db	116	;'t'
   529  00FE9E  68                 	db	104	;'h'
   530  00FE9F  65                 	db	101	;'e'
   531  00FEA0  20                 	db	32
   532  00FEA1  42                 	db	66	;'B'
   533  00FEA2  55                 	db	85	;'U'
   534  00FEA3  54                 	db	84	;'T'
   535  00FEA4  54                 	db	84	;'T'
   536  00FEA5  4F                 	db	79	;'O'
   537  00FEA6  4E                 	db	78	;'N'
   538  00FEA7  20                 	db	32
   539  00FEA8  74                 	db	116	;'t'
   540  00FEA9  6F                 	db	111	;'o'
   541  00FEAA  20                 	db	32
   542  00FEAB  00                 	db	0
   543  00FEAC                     STR_32:
   544  00FEAC  20                 	db	32
   545  00FEAD  50                 	db	80	;'P'
   546  00FEAE  61                 	db	97	;'a'
   547  00FEAF  72                 	db	114	;'r'
   548  00FEB0  6B                 	db	107	;'k'
   549  00FEB1  69                 	db	105	;'i'
   550  00FEB2  6E                 	db	110	;'n'
   551  00FEB3  67                 	db	103	;'g'
   552  00FEB4  20                 	db	32
   553  00FEB5  70                 	db	112	;'p'
   554  00FEB6  72                 	db	114	;'r'
   555  00FEB7  6F                 	db	111	;'o'
   556  00FEB8  63                 	db	99	;'c'
   557  00FEB9  65                 	db	101	;'e'
   558  00FEBA  64                 	db	100	;'d'
   559  00FEBB  75                 	db	117	;'u'
   560  00FEBC  72                 	db	114	;'r'
   561  00FEBD  65                 	db	101	;'e'
   562  00FEBE  73                 	db	115	;'s'
   563  00FEBF  20                 	db	32
   564  00FEC0  00                 	db	0
   565  00FEC1                     STR_24:
   566  00FEC1  2D                 	db	45
   567  00FEC2  20                 	db	32
   568  00FEC3  44                 	db	68	;'D'
   569  00FEC4  69                 	db	105	;'i'
   570  00FEC5  73                 	db	115	;'s'
   571  00FEC6  74                 	db	116	;'t'
   572  00FEC7  61                 	db	97	;'a'
   573  00FEC8  6E                 	db	110	;'n'
   574  00FEC9  63                 	db	99	;'c'
   575  00FECA  65                 	db	101	;'e'
   576  00FECB  20                 	db	32
   577  00FECC  52                 	db	82	;'R'
   578  00FECD  45                 	db	69	;'E'
   579  00FECE  41                 	db	65	;'A'
   580  00FECF  43                 	db	67	;'C'
   581  00FED0  48                 	db	72	;'H'
   582  00FED1  45                 	db	69	;'E'
   583  00FED2  44                 	db	68	;'D'
   584  00FED3  20                 	db	32
   585  00FED4  2D                 	db	45
   586  00FED5  00                 	db	0
   587  00FED6                     STR_21:
   588  00FED6  2D                 	db	45
   589  00FED7  3E                 	db	62	;'>'
   590  00FED8  20                 	db	32
   591  00FED9  20                 	db	32
   592  00FEDA  4B                 	db	75	;'K'
   593  00FEDB  45                 	db	69	;'E'
   594  00FEDC  45                 	db	69	;'E'
   595  00FEDD  50                 	db	80	;'P'
   596  00FEDE  20                 	db	32
   597  00FEDF  4D                 	db	77	;'M'
   598  00FEE0  4F                 	db	79	;'O'
   599  00FEE1  56                 	db	86	;'V'
   600  00FEE2  49                 	db	73	;'I'
   601  00FEE3  4E                 	db	78	;'N'
   602  00FEE4  47                 	db	71	;'G'
   603  00FEE5  20                 	db	32
   604  00FEE6  20                 	db	32
   605  00FEE7  20                 	db	32
   606  00FEE8  3C                 	db	60	;'<'
   607  00FEE9  2D                 	db	45
   608  00FEEA  00                 	db	0
   609  00FEEB                     STR_15:
   610  00FEEB  2D                 	db	45
   611  00FEEC  3E                 	db	62	;'>'
   612  00FEED  20                 	db	32
   613  00FEEE  53                 	db	83	;'S'
   614  00FEEF  61                 	db	97	;'a'
   615  00FEF0  66                 	db	102	;'f'
   616  00FEF1  65                 	db	101	;'e'
   617  00FEF2  74                 	db	116	;'t'
   618  00FEF3  79                 	db	121	;'y'
   619  00FEF4  20                 	db	32
   620  00FEF5  62                 	db	98	;'b'
   621  00FEF6  72                 	db	114	;'r'
   622  00FEF7  61                 	db	97	;'a'
   623  00FEF8  6B                 	db	107	;'k'
   624  00FEF9  65                 	db	101	;'e'
   625  00FEFA  20                 	db	32
   626  00FEFB  4F                 	db	79	;'O'
   627  00FEFC  4E                 	db	78	;'N'
   628  00FEFD  3C                 	db	60	;'<'
   629  00FEFE  2D                 	db	45
   630  00FEFF  00                 	db	0
   631  00FF00                     STR_28:
   632  00FF00  3D                 	db	61	;'='
   633  00FF01  20                 	db	32
   634  00FF02  20                 	db	32
   635  00FF03  20                 	db	32
   636  00FF04  20                 	db	32
   637  00FF05  50                 	db	80	;'P'
   638  00FF06  61                 	db	97	;'a'
   639  00FF07  72                 	db	114	;'r'
   640  00FF08  6B                 	db	107	;'k'
   641  00FF09  69                 	db	105	;'i'
   642  00FF0A  6E                 	db	110	;'n'
   643  00FF0B  67                 	db	103	;'g'
   644  00FF0C  20                 	db	32
   645  00FF0D  69                 	db	105	;'i'
   646  00FF0E  6E                 	db	110	;'n'
   647  00FF0F  20                 	db	32
   648  00FF10  20                 	db	32
   649  00FF11  20                 	db	32
   650  00FF12  20                 	db	32
   651  00FF13  3D                 	db	61	;'='
   652  00FF14  00                 	db	0
   653  00FF15                     STR_29:
   654  00FF15  3D                 	db	61	;'='
   655  00FF16  20                 	db	32
   656  00FF17  20                 	db	32
   657  00FF18  20                 	db	32
   658  00FF19  20                 	db	32
   659  00FF1A  70                 	db	112	;'p'
   660  00FF1B  72                 	db	114	;'r'
   661  00FF1C  6F                 	db	111	;'o'
   662  00FF1D  67                 	db	103	;'g'
   663  00FF1E  72                 	db	114	;'r'
   664  00FF1F  65                 	db	101	;'e'
   665  00FF20  73                 	db	115	;'s'
   666  00FF21  73                 	db	115	;'s'
   667  00FF22  2E                 	db	46
   668  00FF23  2E                 	db	46
   669  00FF24  2E                 	db	46
   670  00FF25  20                 	db	32
   671  00FF26  20                 	db	32
   672  00FF27  20                 	db	32
   673  00FF28  3D                 	db	61	;'='
   674  00FF29  00                 	db	0
   675  00FF2A                     STR_19:
   676  00FF2A  3D                 	db	61	;'='
   677  00FF2B  20                 	db	32
   678  00FF2C  50                 	db	80	;'P'
   679  00FF2D  41                 	db	65	;'A'
   680  00FF2E  52                 	db	82	;'R'
   681  00FF2F  4B                 	db	75	;'K'
   682  00FF30  49                 	db	73	;'I'
   683  00FF31  4E                 	db	78	;'N'
   684  00FF32  47                 	db	71	;'G'
   685  00FF33  20                 	db	32
   686  00FF34  4D                 	db	77	;'M'
   687  00FF35  45                 	db	69	;'E'
   688  00FF36  53                 	db	83	;'S'
   689  00FF37  53                 	db	83	;'S'
   690  00FF38  41                 	db	65	;'A'
   691  00FF39  47                 	db	71	;'G'
   692  00FF3A  45                 	db	69	;'E'
   693  00FF3B  53                 	db	83	;'S'
   694  00FF3C  20                 	db	32
   695  00FF3D  3D                 	db	61	;'='
   696  00FF3E  00                 	db	0
   697  00FF3F                     STR_2:
   698  00FF3F  3D                 	db	61	;'='
   699  00FF40  3D                 	db	61	;'='
   700  00FF41  3E                 	db	62	;'>'
   701  00FF42  20                 	db	32
   702  00FF43  56                 	db	86	;'V'
   703  00FF44  45                 	db	69	;'E'
   704  00FF45  48                 	db	72	;'H'
   705  00FF46  49                 	db	73	;'I'
   706  00FF47  43                 	db	67	;'C'
   707  00FF48  4C                 	db	76	;'L'
   708  00FF49  45                 	db	69	;'E'
   709  00FF4A  20                 	db	32
   710  00FF4B  20                 	db	32
   711  00FF4C  4F                 	db	79	;'O'
   712  00FF4D  46                 	db	70	;'F'
   713  00FF4E  46                 	db	70	;'F'
   714  00FF4F  20                 	db	32
   715  00FF50  3C                 	db	60	;'<'
   716  00FF51  3D                 	db	61	;'='
   717  00FF52  3D                 	db	61	;'='
   718  00FF53  00                 	db	0
   719  00FF54                     STR_6:
   720  00FF54  3D                 	db	61	;'='
   721  00FF55  3D                 	db	61	;'='
   722  00FF56  3D                 	db	61	;'='
   723  00FF57  20                 	db	32
   724  00FF58  56                 	db	86	;'V'
   725  00FF59  45                 	db	69	;'E'
   726  00FF5A  48                 	db	72	;'H'
   727  00FF5B  49                 	db	73	;'I'
   728  00FF5C  43                 	db	67	;'C'
   729  00FF5D  4C                 	db	76	;'L'
   730  00FF5E  45                 	db	69	;'E'
   731  00FF5F  20                 	db	32
   732  00FF60  44                 	db	68	;'D'
   733  00FF61  41                 	db	65	;'A'
   734  00FF62  54                 	db	84	;'T'
   735  00FF63  41                 	db	65	;'A'
   736  00FF64  20                 	db	32
   737  00FF65  3D                 	db	61	;'='
   738  00FF66  3D                 	db	61	;'='
   739  00FF67  3D                 	db	61	;'='
   740  00FF68  00                 	db	0
   741  00FF69                     STR_1:
   742  00FF69  3D                 	db	61	;'='
   743  00FF6A  3D                 	db	61	;'='
   744  00FF6B  3D                 	db	61	;'='
   745  00FF6C  3D                 	db	61	;'='
   746  00FF6D  3D                 	db	61	;'='
   747  00FF6E  3D                 	db	61	;'='
   748  00FF6F  3D                 	db	61	;'='
   749  00FF70  3D                 	db	61	;'='
   750  00FF71  3D                 	db	61	;'='
   751  00FF72  3D                 	db	61	;'='
   752  00FF73  3D                 	db	61	;'='
   753  00FF74  3D                 	db	61	;'='
   754  00FF75  3D                 	db	61	;'='
   755  00FF76  3D                 	db	61	;'='
   756  00FF77  3D                 	db	61	;'='
   757  00FF78  3D                 	db	61	;'='
   758  00FF79  3D                 	db	61	;'='
   759  00FF7A  3D                 	db	61	;'='
   760  00FF7B  3D                 	db	61	;'='
   761  00FF7C  3D                 	db	61	;'='
   762  00FF7D  00                 	db	0
   763  00FF7E                     STR_20:
   764  00FF7E  20                 	db	32
   765  00FF7F  50                 	db	80	;'P'
   766  00FF80  61                 	db	97	;'a'
   767  00FF81  72                 	db	114	;'r'
   768  00FF82  6B                 	db	107	;'k'
   769  00FF83  69                 	db	105	;'i'
   770  00FF84  6E                 	db	110	;'n'
   771  00FF85  67                 	db	103	;'g'
   772  00FF86  20                 	db	32
   773  00FF87  73                 	db	115	;'s'
   774  00FF88  70                 	db	112	;'p'
   775  00FF89  61                 	db	97	;'a'
   776  00FF8A  63                 	db	99	;'c'
   777  00FF8B  65                 	db	101	;'e'
   778  00FF8C  20                 	db	32
   779  00FF8D  46                 	db	70	;'F'
   780  00FF8E  4F                 	db	79	;'O'
   781  00FF8F  55                 	db	85	;'U'
   782  00FF90  4E                 	db	78	;'N'
   783  00FF91  44                 	db	68	;'D'
   784  00FF92  00                 	db	0
   785  00FF93                     STR_18:
   786  00FF93  5B                 	db	91	;'['
   787  00FF94  21                 	db	33
   788  00FF95  5D                 	db	93	;']'
   789  00FF96  20                 	db	32
   790  00FF97  20                 	db	32
   791  00FF98  4C                 	db	76	;'L'
   792  00FF99  6F                 	db	111	;'o'
   793  00FF9A  77                 	db	119	;'w'
   794  00FF9B  20                 	db	32
   795  00FF9C  62                 	db	98	;'b'
   796  00FF9D  61                 	db	97	;'a'
   797  00FF9E  74                 	db	116	;'t'
   798  00FF9F  74                 	db	116	;'t'
   799  00FFA0  65                 	db	101	;'e'
   800  00FFA1  72                 	db	114	;'r'
   801  00FFA2  79                 	db	121	;'y'
   802  00FFA3  20                 	db	32
   803  00FFA4  5B                 	db	91	;'['
   804  00FFA5  21                 	db	33
   805  00FFA6  5D                 	db	93	;']'
   806  00FFA7  00                 	db	0
   807  00FFA8                     STR_8:
   808  00FFA8  53                 	db	83	;'S'
   809  00FFA9  70                 	db	112	;'p'
   810  00FFAA  65                 	db	101	;'e'
   811  00FFAB  65                 	db	101	;'e'
   812  00FFAC  64                 	db	100	;'d'
   813  00FFAD  3A                 	db	58	;':'
   814  00FFAE  20                 	db	32
   815  00FFAF  30                 	db	48	;'0'
   816  00FFB0  2E                 	db	46
   817  00FFB1  30                 	db	48	;'0'
   818  00FFB2  30                 	db	48	;'0'
   819  00FFB3  20                 	db	32
   820  00FFB4  4B                 	db	75	;'K'
   821  00FFB5  6D                 	db	109	;'m'
   822  00FFB6  2F                 	db	47
   823  00FFB7  68                 	db	104	;'h'
   824  00FFB8  00                 	db	0
   825  00FFB9                     STR_9:
   826  00FFB9  50                 	db	80	;'P'
   827  00FFBA  61                 	db	97	;'a'
   828  00FFBB  72                 	db	114	;'r'
   829  00FFBC  6B                 	db	107	;'k'
   830  00FFBD  20                 	db	32
   831  00FFBE  61                 	db	97	;'a'
   832  00FFBF  73                 	db	115	;'s'
   833  00FFC0  73                 	db	115	;'s'
   834  00FFC1  69                 	db	105	;'i'
   835  00FFC2  73                 	db	115	;'s'
   836  00FFC3  74                 	db	116	;'t'
   837  00FFC4  3A                 	db	58	;':'
   838  00FFC5  20                 	db	32
   839  00FFC6  00                 	db	0
   840  00FFC7                     STR_7:
   841  00FFC7  44                 	db	68	;'D'
   842  00FFC8  69                 	db	105	;'i'
   843  00FFC9  72                 	db	114	;'r'
   844  00FFCA  65                 	db	101	;'e'
   845  00FFCB  63                 	db	99	;'c'
   846  00FFCC  74                 	db	116	;'t'
   847  00FFCD  69                 	db	105	;'i'
   848  00FFCE  6F                 	db	111	;'o'
   849  00FFCF  6E                 	db	110	;'n'
   850  00FFD0  3A                 	db	58	;':'
   851  00FFD1  20                 	db	32
   852  00FFD2  00                 	db	0
   853  00FFD3                     STR_16:
   854  00FFD3  4F                 	db	79	;'O'
   855  00FFD4  46                 	db	70	;'F'
   856  00FFD5  46                 	db	70	;'F'
   857  00FFD6  20                 	db	32
   858  00FFD7  20                 	db	32
   859  00FFD8  20                 	db	32
   860  00FFD9  20                 	db	32
   861  00FFDA  00                 	db	0
   862  00FFDB                     STR_17:
   863  00FFDB  53                 	db	83	;'S'
   864  00FFDC  45                 	db	69	;'E'
   865  00FFDD  41                 	db	65	;'A'
   866  00FFDE  52                 	db	82	;'R'
   867  00FFDF  43                 	db	67	;'C'
   868  00FFE0  48                 	db	72	;'H'
   869  00FFE1  20                 	db	32
   870  00FFE2  00                 	db	0
   871  00FFE3                     STR_10:
   872  00FFE3  44                 	db	68	;'D'
   873  00FFE4  61                 	db	97	;'a'
   874  00FFE5  74                 	db	116	;'t'
   875  00FFE6  61                 	db	97	;'a'
   876  00FFE7  3A                 	db	58	;':'
   877  00FFE8  20                 	db	32
   878  00FFE9  00                 	db	0
   879  00FFEA                     STR_14:
   880  00FFEA  50                 	db	80	;'P'
   881  00FFEB  20                 	db	32
   882  00FFEC  20                 	db	32
   883  00FFED  20                 	db	32
   884  00FFEE  00                 	db	0
   885  00FFEF                     STR_12:
   886  00FFEF  46                 	db	70	;'F'
   887  00FFF0  57                 	db	87	;'W'
   888  00FFF1  44                 	db	68	;'D'
   889  00FFF2  20                 	db	32
   890  00FFF3  00                 	db	0
   891  00FFF4                     STR_13:
   892  00FFF4  42                 	db	66	;'B'
   893  00FFF5  4B                 	db	75	;'K'
   894  00FFF6  57                 	db	87	;'W'
   895  00FFF7  44                 	db	68	;'D'
   896  00FFF8  00                 	db	0
   897  00FFF9                     STR_5:
   898  00FFF9  25                 	db	37
   899  00FFFA  2E                 	db	46
   900  00FFFB  32                 	db	50	;'2'
   901  00FFFC  66                 	db	102	;'f'
   902  00FFFD  00                 	db	0
   903  0000                     
   904                           ; #config settings
   905  00FFFE  00                 	db	0	; dummy byte at the end
   906  0000                     
   907                           	psect	cinit
   908  015BB6                     __pcinit:
   909                           	opt stack 0
   910  015BB6                     start_initialization:
   911                           	opt stack 0
   912  015BB6                     __initialization:
   913                           	opt stack 0
   914                           
   915                           ; Clear objects allocated to BANK1 (54 bytes)
   916  015BB6  EE01  F000         	lfsr	0,__pbssBANK1
   917  015BBA  0E36               	movlw	54
   918  015BBC                     clear_0:
   919  015BBC  6AEE               	clrf	postinc0,c
   920  015BBE  06E8               	decf	wreg,f,c
   921  015BC0  E1FD               	bnz	clear_0
   922                           
   923                           ; Clear objects allocated to BANK0 (50 bytes)
   924  015BC2  EE00  F0BB         	lfsr	0,__pbssBANK0
   925  015BC6  0E32               	movlw	50
   926  015BC8                     clear_1:
   927  015BC8  6AEE               	clrf	postinc0,c
   928  015BCA  06E8               	decf	wreg,f,c
   929  015BCC  E1FD               	bnz	clear_1
   930                           
   931                           ; Clear objects allocated to BITCOMRAM (3 bytes)
   932  015BCE  6A4C               	clrf	((__pbitbssCOMRAM/(0+8)+2))& (0+255),c
   933  015BD0  6A4B               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   934  015BD2  6A4A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   935                           
   936                           ; Clear objects allocated to COMRAM (40 bytes)
   937  015BD4  EE00  F001         	lfsr	0,__pbssCOMRAM
   938  015BD8  0E28               	movlw	40
   939  015BDA                     clear_2:
   940  015BDA  6AEE               	clrf	postinc0,c
   941  015BDC  06E8               	decf	wreg,f,c
   942  015BDE  E1FD               	bnz	clear_2
   943                           
   944                           ; Initialize objects allocated to BANK0 (1 bytes)
   945                           ; load TBLPTR registers with __pidataBANK0
   946  015BE0  0EAE               	movlw	low __pidataBANK0
   947  015BE2  6EF6               	movwf	tblptrl,c
   948  015BE4  0E5F               	movlw	high __pidataBANK0
   949  015BE6  6EF7               	movwf	tblptrh,c
   950  015BE8  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   951  015BEA  6EF8               	movwf	tblptru,c
   952  015BEC  0009               	tblrd		*+	;fetch initializer
   953  015BEE  CFF5 F0ED          	movff	tablat,__pdataBANK0
   954  015BF2                     end_of_initialization:
   955                           	opt stack 0
   956  015BF2                     __end_of__initialization:
   957                           	opt stack 0
   958  015BF2  0100               	movlb	0
   959  015BF4  EF1B  F08A         	goto	_main	;jump to C main() function
   960                           tblptru	equ	0xFF8
   961                           tblptrh	equ	0xFF7
   962                           tblptrl	equ	0xFF6
   963                           tablat	equ	0xFF5
   964                           postinc0	equ	0xFEE
   965                           wreg	equ	0xFE8
   966                           
   967                           	psect	bitbssCOMRAM
   968  000250                     __pbitbssCOMRAM:
   969                           	opt stack 0
   970  000250                     _Can_Tx_Force:
   971                           	opt stack 0
   972  000250                     	ds	1
   973  000251                     _F1_switch:
   974                           	opt stack 0
   975  000251                     	ds	1
   976  000252                     _F2_switch:
   977                           	opt stack 0
   978  000252                     	ds	1
   979  000253                     _RTR_Flag:
   980                           	opt stack 0
   981  000253                     	ds	1
   982  000254                     _collision_msg:
   983                           	opt stack 0
   984  000254                     	ds	1
   985  000255                     _display_refresh:
   986                           	opt stack 0
   987  000255                     	ds	1
   988  000256                     _low_battery:
   989                           	opt stack 0
   990  000256                     	ds	1
   991  000257                     _parking_error:
   992                           	opt stack 0
   993  000257                     	ds	1
   994  000258                     _parking_message_E:
   995                           	opt stack 0
   996  000258                     	ds	1
   997  000259                     _power_switch:
   998                           	opt stack 0
   999  000259                     	ds	1
  1000  00025A                     _row_refresh:
  1001                           	opt stack 0
  1002  00025A                     	ds	1
  1003  00025B                     _space_available:
  1004                           	opt stack 0
  1005  00025B                     	ds	1
  1006  00025C                     _space_gap_reached:
  1007                           	opt stack 0
  1008  00025C                     	ds	1
  1009  00025D                     _steering_correction_dir:
  1010                           	opt stack 0
  1011  00025D                     	ds	1
  1012  00025E                     _wait_low_1:
  1013                           	opt stack 0
  1014  00025E                     	ds	1
  1015  00025F                     _wait_low_2:
  1016                           	opt stack 0
  1017  00025F                     	ds	1
  1018  000260                     _wait_low_3:
  1019                           	opt stack 0
  1020  000260                     	ds	1
  1021  000261                     _x:
  1022                           	opt stack 0
  1023  000261                     	ds	1
  1024  000262                     _y:
  1025                           	opt stack 0
  1026  000262                     	ds	1
  1027  000263                     _z:
  1028                           	opt stack 0
  1029  000263                     	ds	1
  1030                           tblptru	equ	0xFF8
  1031                           tblptrh	equ	0xFF7
  1032                           tblptrl	equ	0xFF6
  1033                           tablat	equ	0xFF5
  1034                           postinc0	equ	0xFEE
  1035                           wreg	equ	0xFE8
  1036                           
  1037                           	psect	bssCOMRAM
  1038  000001                     __pbssCOMRAM:
  1039                           	opt stack 0
  1040  000001                     _id:
  1041                           	opt stack 0
  1042  000001                     	ds	4
  1043  000005                     _time_counter:
  1044                           	opt stack 0
  1045  000005                     	ds	4
  1046  000009                     _collision_sensor_distance:
  1047                           	opt stack 0
  1048  000009                     	ds	2
  1049  00000B                     _left_speed:
  1050                           	opt stack 0
  1051  00000B                     	ds	2
  1052  00000D                     _right_speed:
  1053                           	opt stack 0
  1054  00000D                     	ds	2
  1055  00000F                     _user_data:
  1056                           	opt stack 0
  1057  00000F                     	ds	2
  1058  000011                     _set_steering:
  1059                           	opt stack 0
  1060  000011                     	ds	1
  1061  000012                     _msg:
  1062                           	opt stack 0
  1063  000012                     	ds	15
  1064  000021                     _data_brake:
  1065                           	opt stack 0
  1066  000021                     	ds	8
  1067                           tblptru	equ	0xFF8
  1068                           tblptrh	equ	0xFF7
  1069                           tblptrl	equ	0xFF6
  1070                           tablat	equ	0xFF5
  1071                           postinc0	equ	0xFEE
  1072                           wreg	equ	0xFE8
  1073                           
  1074                           	psect	bssBANK0
  1075  0000BB                     __pbssBANK0:
  1076                           	opt stack 0
  1077  0000BB                     _JoystickConstants:
  1078                           	opt stack 0
  1079  0000BB                     	ds	8
  1080  0000C3                     _actual_speed_kmh:
  1081                           	opt stack 0
  1082  0000C3                     	ds	4
  1083  0000C7                     _check:
  1084                           	opt stack 0
  1085  0000C7                     	ds	4
  1086  0000CB                     _pr_time_1:
  1087                           	opt stack 0
  1088  0000CB                     	ds	4
  1089  0000CF                     _pr_time_2:
  1090                           	opt stack 0
  1091  0000CF                     	ds	4
  1092  0000D3                     _pr_time_3:
  1093                           	opt stack 0
  1094  0000D3                     	ds	4
  1095  0000D7                     _pr_time_5:
  1096                           	opt stack 0
  1097  0000D7                     	ds	4
  1098  0000DB                     _pr_time_6:
  1099                           	opt stack 0
  1100  0000DB                     	ds	4
  1101  0000DF                     _JoystickValues:
  1102                           	opt stack 0
  1103  0000DF                     	ds	2
  1104  0000E1                     _actual_speed:
  1105                           	opt stack 0
  1106  0000E1                     	ds	2
  1107  0000E3                     _clock_counter_reference:
  1108                           	opt stack 0
  1109  0000E3                     	ds	2
  1110  0000E5                     _set_speed:
  1111                           	opt stack 0
  1112  0000E5                     	ds	2
  1113  0000E7                     _collision_risk_value:
  1114                           	opt stack 0
  1115  0000E7                     	ds	1
  1116  0000E8                     _dir:
  1117                           	opt stack 0
  1118  0000E8                     	ds	1
  1119  0000E9                     _parking_message_ID:
  1120                           	opt stack 0
  1121  0000E9                     	ds	1
  1122  0000EA                     _parking_state:
  1123                           	opt stack 0
  1124  0000EA                     	ds	1
  1125  0000EB                     _steering_correction:
  1126                           	opt stack 0
  1127  0000EB                     	ds	1
  1128  0000EC                     _switch_position:
  1129                           	opt stack 0
  1130  0000EC                     	ds	1
  1131                           tblptru	equ	0xFF8
  1132                           tblptrh	equ	0xFF7
  1133                           tblptrl	equ	0xFF6
  1134                           tablat	equ	0xFF5
  1135                           postinc0	equ	0xFEE
  1136                           wreg	equ	0xFE8
  1137                           
  1138                           	psect	dataBANK0
  1139  0000ED                     __pdataBANK0:
  1140                           	opt stack 0
  1141  0000ED                     _delay_quartz_frequency_value:
  1142                           	opt stack 0
  1143  0000ED                     	ds	1
  1144                           tblptru	equ	0xFF8
  1145                           tblptrh	equ	0xFF7
  1146                           tblptrl	equ	0xFF6
  1147                           tablat	equ	0xFF5
  1148                           postinc0	equ	0xFEE
  1149                           wreg	equ	0xFE8
  1150                           
  1151                           	psect	bssBANK1
  1152  000100                     __pbssBANK1:
  1153                           	opt stack 0
  1154  000100                     LCD_write_integer@F17326:
  1155                           	opt stack 0
  1156  000100                     	ds	6
  1157  000106                     _pr_time_4:
  1158                           	opt stack 0
  1159  000106                     	ds	4
  1160  00010A                     _str:
  1161                           	opt stack 0
  1162  00010A                     	ds	12
  1163  000116                     _data:
  1164                           	opt stack 0
  1165  000116                     	ds	8
  1166  00011E                     _data_speed:
  1167                           	opt stack 0
  1168  00011E                     	ds	8
  1169  000126                     _data_steering:
  1170                           	opt stack 0
  1171  000126                     	ds	8
  1172  00012E                     _park_assist_state:
  1173                           	opt stack 0
  1174  00012E                     	ds	8
  1175                           tblptru	equ	0xFF8
  1176                           tblptrh	equ	0xFF7
  1177                           tblptrl	equ	0xFF6
  1178                           tablat	equ	0xFF5
  1179                           postinc0	equ	0xFEE
  1180                           wreg	equ	0xFE8
  1181                           
  1182                           	psect	cstackBANK1
  1183  000136                     __pcstackBANK1:
  1184                           	opt stack 0
  1185  000136                     ??_sprintf:
  1186                           
  1187                           ; 0 bytes @ 0x0
  1188  000136                     	ds	2
  1189  000138                     _sprintf$4230:
  1190                           	opt stack 0
  1191                           
  1192                           ; 4 bytes @ 0x2
  1193  000138                     	ds	4
  1194  00013C                     sprintf@ap:
  1195                           	opt stack 0
  1196                           
  1197                           ; 2 bytes @ 0x6
  1198  00013C                     	ds	2
  1199  00013E                     sprintf@flag:
  1200                           	opt stack 0
  1201                           
  1202                           ; 2 bytes @ 0x8
  1203  00013E                     	ds	2
  1204  000140                     sprintf@val:
  1205                           	opt stack 0
  1206                           
  1207                           ; 4 bytes @ 0xA
  1208  000140                     	ds	4
  1209  000144                     sprintf@exp:
  1210                           	opt stack 0
  1211                           
  1212                           ; 2 bytes @ 0xE
  1213  000144                     	ds	2
  1214  000146                     sprintf@tmpval:
  1215                           	opt stack 0
  1216                           
  1217                           ; 4 bytes @ 0x10
  1218  000146                     	ds	4
  1219  00014A                     sprintf@prec:
  1220                           	opt stack 0
  1221                           
  1222                           ; 2 bytes @ 0x14
  1223  00014A                     	ds	2
  1224  00014C                     sprintf@fval:
  1225                           	opt stack 0
  1226                           
  1227                           ; 4 bytes @ 0x16
  1228  00014C                     	ds	4
  1229  000150                     sprintf@c:
  1230                           	opt stack 0
  1231                           
  1232                           ; 1 bytes @ 0x1A
  1233  000150                     	ds	1
  1234  000151                     ??_main:
  1235                           
  1236                           ; 0 bytes @ 0x1B
  1237  000151                     	ds	8
  1238                           tblptru	equ	0xFF8
  1239                           tblptrh	equ	0xFF7
  1240                           tblptrl	equ	0xFF6
  1241                           tablat	equ	0xFF5
  1242                           postinc0	equ	0xFEE
  1243                           wreg	equ	0xFE8
  1244                           
  1245                           	psect	cstackBANK0
  1246  000060                     __pcstackBANK0:
  1247                           	opt stack 0
  1248  000060                     ??_ISR_alta:
  1249                           
  1250                           ; 0 bytes @ 0x0
  1251  000060                     	ds	18
  1252  000072                     ??_isdigit:
  1253  000072                     ?___wmul:
  1254                           	opt stack 0
  1255  000072                     ?___awmod:
  1256                           	opt stack 0
  1257  000072                     ?___lwdiv:
  1258                           	opt stack 0
  1259  000072                     ?___lwmod:
  1260                           	opt stack 0
  1261  000072                     ?__tdiv_to_l_:
  1262                           	opt stack 0
  1263  000072                     ?__div_to_l_:
  1264                           	opt stack 0
  1265  000072                     ?___flpack:
  1266                           	opt stack 0
  1267  000072                     ?___lldiv:
  1268                           	opt stack 0
  1269  000072                     ?___llmod:
  1270                           	opt stack 0
  1271  000072                     CANOperationMode@mode:
  1272                           	opt stack 0
  1273  000072                     _CANisTxReady$3251:
  1274                           	opt stack 0
  1275  000072                     delay_set_quartz@frequency:
  1276                           	opt stack 0
  1277  000072                     Joystick_Polling@i:
  1278                           	opt stack 0
  1279  000072                     ___wmul@multiplier:
  1280                           	opt stack 0
  1281  000072                     ___awmod@dividend:
  1282                           	opt stack 0
  1283  000072                     ___lwdiv@dividend:
  1284                           	opt stack 0
  1285  000072                     ___lwmod@dividend:
  1286                           	opt stack 0
  1287  000072                     CANsendMessage@identifier:
  1288                           	opt stack 0
  1289  000072                     CANSetMask@mask:
  1290                           	opt stack 0
  1291  000072                     CANSetFilter@filter:
  1292                           	opt stack 0
  1293  000072                     ___flpack@arg:
  1294                           	opt stack 0
  1295  000072                     __div_to_l_@f1:
  1296                           	opt stack 0
  1297  000072                     ___flge@ff1:
  1298                           	opt stack 0
  1299  000072                     __tdiv_to_l_@f1:
  1300                           	opt stack 0
  1301  000072                     ___lldiv@dividend:
  1302                           	opt stack 0
  1303  000072                     ___llmod@dividend:
  1304                           	opt stack 0
  1305                           
  1306                           ; 4 bytes @ 0x12
  1307  000072                     	ds	1
  1308  000073                     _isdigit$3903:
  1309                           	opt stack 0
  1310                           
  1311                           ; 1 bytes @ 0x13
  1312  000073                     	ds	1
  1313  000074                     isdigit@c:
  1314                           	opt stack 0
  1315  000074                     ___wmul@multiplicand:
  1316                           	opt stack 0
  1317  000074                     ___awmod@divisor:
  1318                           	opt stack 0
  1319  000074                     ___lwdiv@divisor:
  1320                           	opt stack 0
  1321  000074                     ___lwmod@divisor:
  1322                           	opt stack 0
  1323                           
  1324                           ; 2 bytes @ 0x14
  1325  000074                     	ds	2
  1326  000076                     CANSetMask@type:
  1327                           	opt stack 0
  1328  000076                     CANSetFilter@type:
  1329                           	opt stack 0
  1330  000076                     ___awmod@counter:
  1331                           	opt stack 0
  1332  000076                     ___flpack@exp:
  1333                           	opt stack 0
  1334  000076                     ___lwmod@counter:
  1335                           	opt stack 0
  1336  000076                     CANsendMessage@data:
  1337                           	opt stack 0
  1338  000076                     ___wmul@product:
  1339                           	opt stack 0
  1340  000076                     ___lwdiv@quotient:
  1341                           	opt stack 0
  1342  000076                     __div_to_l_@f2:
  1343                           	opt stack 0
  1344  000076                     ___flge@ff2:
  1345                           	opt stack 0
  1346  000076                     __tdiv_to_l_@f2:
  1347                           	opt stack 0
  1348  000076                     ___lldiv@divisor:
  1349                           	opt stack 0
  1350  000076                     ___llmod@divisor:
  1351                           	opt stack 0
  1352                           
  1353                           ; 4 bytes @ 0x16
  1354  000076                     	ds	1
  1355  000077                     ??_CANSetMask:
  1356  000077                     ??_CANSetFilter:
  1357  000077                     ___awmod@sign:
  1358                           	opt stack 0
  1359  000077                     ___flpack@sign:
  1360                           	opt stack 0
  1361                           
  1362                           ; 1 bytes @ 0x17
  1363  000077                     	ds	1
  1364  000078                     ??___flpack:
  1365  000078                     ?___awdiv:
  1366                           	opt stack 0
  1367  000078                     CANsendMessage@dataLength:
  1368                           	opt stack 0
  1369  000078                     ___lwdiv@counter:
  1370                           	opt stack 0
  1371  000078                     delay_ms@value_ms:
  1372                           	opt stack 0
  1373  000078                     ___awdiv@dividend:
  1374                           	opt stack 0
  1375                           
  1376                           ; 2 bytes @ 0x18
  1377  000078                     	ds	1
  1378  000079                     CANsendMessage@flags:
  1379                           	opt stack 0
  1380  000079                     utoa@buf:
  1381                           	opt stack 0
  1382                           
  1383                           ; 2 bytes @ 0x19
  1384  000079                     	ds	1
  1385  00007A                     ??__tdiv_to_l_:
  1386  00007A                     ??_CANsendMessage:
  1387  00007A                     ??___flge:
  1388  00007A                     LCD_send_command@D2:
  1389                           	opt stack 0
  1390  00007A                     ___llmod@counter:
  1391                           	opt stack 0
  1392  00007A                     ___awdiv@divisor:
  1393                           	opt stack 0
  1394  00007A                     __div_to_l_@quot:
  1395                           	opt stack 0
  1396  00007A                     ___lldiv@quotient:
  1397                           	opt stack 0
  1398                           
  1399                           ; 4 bytes @ 0x1A
  1400  00007A                     	ds	1
  1401  00007B                     CANSetMask@numBuffer:
  1402                           	opt stack 0
  1403  00007B                     CANSetFilter@numBuffer:
  1404                           	opt stack 0
  1405  00007B                     LCD_send_command@D1:
  1406                           	opt stack 0
  1407  00007B                     utoa@val:
  1408                           	opt stack 0
  1409                           
  1410                           ; 2 bytes @ 0x1B
  1411  00007B                     	ds	1
  1412  00007C                     ?___awtofl:
  1413                           	opt stack 0
  1414  00007C                     ?___lbtofl:
  1415                           	opt stack 0
  1416  00007C                     ?___lltofl:
  1417                           	opt stack 0
  1418  00007C                     ?___lwtofl:
  1419                           	opt stack 0
  1420  00007C                     LCD_send_command@D0:
  1421                           	opt stack 0
  1422  00007C                     ___awdiv@counter:
  1423                           	opt stack 0
  1424  00007C                     ___awtofl@c:
  1425                           	opt stack 0
  1426  00007C                     ___lwtofl@c:
  1427                           	opt stack 0
  1428  00007C                     CANSetMask@tamp:
  1429                           	opt stack 0
  1430  00007C                     CANSetFilter@tamp:
  1431                           	opt stack 0
  1432  00007C                     ___lltofl@c:
  1433                           	opt stack 0
  1434                           
  1435                           ; 4 bytes @ 0x1C
  1436  00007C                     	ds	1
  1437  00007D                     LCD_send_command@D3:
  1438                           	opt stack 0
  1439  00007D                     ___awdiv@sign:
  1440                           	opt stack 0
  1441  00007D                     utoa@base:
  1442                           	opt stack 0
  1443  00007D                     __tdiv_to_l_@quot:
  1444                           	opt stack 0
  1445                           
  1446                           ; 4 bytes @ 0x1D
  1447  00007D                     	ds	1
  1448  00007E                     LCD_shift_cursor@number_of_shift:
  1449                           	opt stack 0
  1450  00007E                     LCD_goto_line@line:
  1451                           	opt stack 0
  1452  00007E                     LCD_write_char@D3:
  1453                           	opt stack 0
  1454  00007E                     LCD_cursor@blinking:
  1455                           	opt stack 0
  1456  00007E                     __div_to_l_@cntr:
  1457                           	opt stack 0
  1458  00007E                     ___lldiv@counter:
  1459                           	opt stack 0
  1460  00007E                     ___awdiv@quotient:
  1461                           	opt stack 0
  1462  00007E                     CANsendMessage@tamp:
  1463                           	opt stack 0
  1464                           
  1465                           ; 4 bytes @ 0x1E
  1466  00007E                     	ds	1
  1467  00007F                     LCD_shift_cursor@shift:
  1468                           	opt stack 0
  1469  00007F                     LCD_write_char@D2:
  1470                           	opt stack 0
  1471  00007F                     LCD_cursor@active:
  1472                           	opt stack 0
  1473  00007F                     __div_to_l_@exp1:
  1474                           	opt stack 0
  1475  00007F                     utoa@v:
  1476                           	opt stack 0
  1477                           
  1478                           ; 2 bytes @ 0x1F
  1479  00007F                     	ds	1
  1480  000080                     ?___fldiv:
  1481                           	opt stack 0
  1482  000080                     CANInitialize@phaseSeg1:
  1483                           	opt stack 0
  1484  000080                     LCD_shift_cursor@i:
  1485                           	opt stack 0
  1486  000080                     LCD_write_char@D1:
  1487                           	opt stack 0
  1488  000080                     LCD_initialize@quartz_frequency:
  1489                           	opt stack 0
  1490  000080                     ___awtofl@sign:
  1491                           	opt stack 0
  1492  000080                     ___lbtofl@c:
  1493                           	opt stack 0
  1494  000080                     ___fldiv@f1:
  1495                           	opt stack 0
  1496                           
  1497                           ; 4 bytes @ 0x20
  1498  000080                     	ds	1
  1499  000081                     ?___flmul:
  1500                           	opt stack 0
  1501  000081                     CANInitialize@phaseSeg2:
  1502                           	opt stack 0
  1503  000081                     LCD_goto_xy@y:
  1504                           	opt stack 0
  1505  000081                     LCD_write_char@D0:
  1506                           	opt stack 0
  1507  000081                     __tdiv_to_l_@cntr:
  1508                           	opt stack 0
  1509  000081                     utoa@c:
  1510                           	opt stack 0
  1511  000081                     ___flmul@f1:
  1512                           	opt stack 0
  1513                           
  1514                           ; 4 bytes @ 0x21
  1515  000081                     	ds	1
  1516  000082                     CANInitialize@SJW:
  1517                           	opt stack 0
  1518  000082                     LCD_goto_xy@x:
  1519                           	opt stack 0
  1520  000082                     LCD_write_char@value:
  1521                           	opt stack 0
  1522  000082                     __tdiv_to_l_@exp1:
  1523                           	opt stack 0
  1524  000082                     itoa@buf:
  1525                           	opt stack 0
  1526                           
  1527                           ; 2 bytes @ 0x22
  1528  000082                     	ds	1
  1529  000083                     CANInitialize@BRP:
  1530                           	opt stack 0
  1531  000083                     LCD_write_message@buffer:
  1532                           	opt stack 0
  1533  000083                     LCD_write_string@buffer:
  1534                           	opt stack 0
  1535                           
  1536                           ; 2 bytes @ 0x23
  1537  000083                     	ds	1
  1538  000084                     CANInitialize@flags:
  1539                           	opt stack 0
  1540  000084                     itoa@val:
  1541                           	opt stack 0
  1542  000084                     ___fldiv@f2:
  1543                           	opt stack 0
  1544                           
  1545                           ; 4 bytes @ 0x24
  1546  000084                     	ds	1
  1547  000085                     ??_CANInitialize:
  1548  000085                     ___flmul@f2:
  1549                           	opt stack 0
  1550                           
  1551                           ; 4 bytes @ 0x25
  1552  000085                     	ds	1
  1553  000086                     itoa@base:
  1554                           	opt stack 0
  1555                           
  1556                           ; 2 bytes @ 0x26
  1557  000086                     	ds	2
  1558  000088                     itoa@cp:
  1559                           	opt stack 0
  1560  000088                     ___fldiv@f3:
  1561                           	opt stack 0
  1562                           
  1563                           ; 4 bytes @ 0x28
  1564  000088                     	ds	1
  1565  000089                     CANInitialize@propSeg:
  1566                           	opt stack 0
  1567  000089                     ___flmul@exp:
  1568                           	opt stack 0
  1569                           
  1570                           ; 1 bytes @ 0x29
  1571  000089                     	ds	1
  1572  00008A                     CANInitialize@FilterConfig1:
  1573                           	opt stack 0
  1574  00008A                     LCD_write_integer@value:
  1575                           	opt stack 0
  1576  00008A                     ___flmul@f3_as_product:
  1577                           	opt stack 0
  1578                           
  1579                           ; 4 bytes @ 0x2A
  1580  00008A                     	ds	1
  1581  00008B                     CANInitialize@FilterConfig2:
  1582                           	opt stack 0
  1583                           
  1584                           ; 1 bytes @ 0x2B
  1585  00008B                     	ds	1
  1586  00008C                     LCD_write_integer@number_of_digits:
  1587                           	opt stack 0
  1588  00008C                     ___fldiv@cntr:
  1589                           	opt stack 0
  1590                           
  1591                           ; 1 bytes @ 0x2C
  1592  00008C                     	ds	1
  1593  00008D                     LCD_write_integer@zero_cleaning:
  1594                           	opt stack 0
  1595  00008D                     ___fldiv@exp:
  1596                           	opt stack 0
  1597                           
  1598                           ; 1 bytes @ 0x2D
  1599  00008D                     	ds	1
  1600  00008E                     ??_LCD_write_integer:
  1601  00008E                     ___fldiv@sign:
  1602                           	opt stack 0
  1603  00008E                     ___flmul@cntr:
  1604                           	opt stack 0
  1605                           
  1606                           ; 1 bytes @ 0x2E
  1607  00008E                     	ds	1
  1608  00008F                     ___flmul@sign:
  1609                           	opt stack 0
  1610                           
  1611                           ; 1 bytes @ 0x2F
  1612  00008F                     	ds	1
  1613  000090                     ?_fround:
  1614                           	opt stack 0
  1615  000090                     ?_scale:
  1616                           	opt stack 0
  1617  000090                     ?___flneg:
  1618                           	opt stack 0
  1619  000090                     ___flneg@f1:
  1620                           	opt stack 0
  1621                           
  1622                           ; 4 bytes @ 0x30
  1623  000090                     	ds	3
  1624  000093                     LCD_write_integer@convertedInt:
  1625                           	opt stack 0
  1626                           
  1627                           ; 6 bytes @ 0x33
  1628  000093                     	ds	1
  1629  000094                     _fround$4228:
  1630                           	opt stack 0
  1631  000094                     _scale$4229:
  1632                           	opt stack 0
  1633                           
  1634                           ; 4 bytes @ 0x34
  1635  000094                     	ds	4
  1636  000098                     scale@scl:
  1637                           	opt stack 0
  1638  000098                     _fround$4227:
  1639                           	opt stack 0
  1640                           
  1641                           ; 4 bytes @ 0x38
  1642  000098                     	ds	1
  1643  000099                     LCD_write_integer@index:
  1644                           	opt stack 0
  1645                           
  1646                           ; 1 bytes @ 0x39
  1647  000099                     	ds	3
  1648  00009C                     fround@prec:
  1649                           	opt stack 0
  1650                           
  1651                           ; 1 bytes @ 0x3C
  1652  00009C                     	ds	1
  1653  00009D                     ?___fladd:
  1654                           	opt stack 0
  1655  00009D                     ___fladd@f1:
  1656                           	opt stack 0
  1657                           
  1658                           ; 4 bytes @ 0x3D
  1659  00009D                     	ds	4
  1660  0000A1                     ___fladd@f2:
  1661                           	opt stack 0
  1662                           
  1663                           ; 4 bytes @ 0x41
  1664  0000A1                     	ds	4
  1665  0000A5                     ??___fladd:
  1666                           
  1667                           ; 0 bytes @ 0x45
  1668  0000A5                     	ds	1
  1669  0000A6                     ___fladd@sign:
  1670                           	opt stack 0
  1671                           
  1672                           ; 1 bytes @ 0x46
  1673  0000A6                     	ds	1
  1674  0000A7                     ___fladd@exp2:
  1675                           	opt stack 0
  1676                           
  1677                           ; 1 bytes @ 0x47
  1678  0000A7                     	ds	1
  1679  0000A8                     ___fladd@exp1:
  1680                           	opt stack 0
  1681                           
  1682                           ; 1 bytes @ 0x48
  1683  0000A8                     	ds	1
  1684  0000A9                     ?___flsub:
  1685                           	opt stack 0
  1686  0000A9                     ?___fltol:
  1687                           	opt stack 0
  1688  0000A9                     ___flsub@f1:
  1689                           	opt stack 0
  1690  0000A9                     ___fltol@f1:
  1691                           	opt stack 0
  1692                           
  1693                           ; 4 bytes @ 0x49
  1694  0000A9                     	ds	4
  1695  0000AD                     ??___fltol:
  1696  0000AD                     ___flsub@f2:
  1697                           	opt stack 0
  1698                           
  1699                           ; 4 bytes @ 0x4D
  1700  0000AD                     	ds	4
  1701  0000B1                     ___fltol@sign1:
  1702                           	opt stack 0
  1703                           
  1704                           ; 1 bytes @ 0x51
  1705  0000B1                     	ds	1
  1706  0000B2                     ___fltol@exp1:
  1707                           	opt stack 0
  1708                           
  1709                           ; 1 bytes @ 0x52
  1710  0000B2                     	ds	1
  1711  0000B3                     ?_sprintf:
  1712                           	opt stack 0
  1713  0000B3                     sprintf@sp:
  1714                           	opt stack 0
  1715                           
  1716                           ; 2 bytes @ 0x53
  1717  0000B3                     	ds	2
  1718  0000B5                     sprintf@f:
  1719                           	opt stack 0
  1720                           
  1721                           ; 2 bytes @ 0x55
  1722  0000B5                     	ds	6
  1723  0000BB                     tblptru	equ	0xFF8
  1724                           tblptrh	equ	0xFF7
  1725                           tblptrl	equ	0xFF6
  1726                           tablat	equ	0xFF5
  1727                           postinc0	equ	0xFEE
  1728                           wreg	equ	0xFE8
  1729                           
  1730                           ; 0 bytes @ 0x5B
  1731                           
  1732                           	psect	cstackCOMRAM
  1733  000029                     __pcstackCOMRAM:
  1734                           	opt stack 0
  1735  000029                     ??_ISR_bassa:
  1736  000029                     
  1737                           ; 1 bytes @ 0x0
  1738  000029                     	ds	17
  1739  00003A                     _CANisRxReady$3253:
  1740                           	opt stack 0
  1741  00003A                     i2_CANisTxReady$3251:
  1742                           	opt stack 0
  1743  00003A                     CANreceiveMessage@msg:
  1744                           	opt stack 0
  1745  00003A                     i2CANsendMessage@identifier:
  1746                           	opt stack 0
  1747                           
  1748                           ; 4 bytes @ 0x11
  1749  00003A                     	ds	2
  1750  00003C                     ??_CANreceiveMessage:
  1751                           
  1752                           ; 0 bytes @ 0x13
  1753  00003C                     	ds	2
  1754  00003E                     i2CANsendMessage@data:
  1755                           	opt stack 0
  1756                           
  1757                           ; 2 bytes @ 0x15
  1758  00003E                     	ds	2
  1759  000040                     i2CANsendMessage@dataLength:
  1760                           	opt stack 0
  1761                           
  1762                           ; 1 bytes @ 0x17
  1763  000040                     	ds	1
  1764  000041                     i2CANsendMessage@flags:
  1765                           	opt stack 0
  1766                           
  1767                           ; 1 bytes @ 0x18
  1768  000041                     	ds	1
  1769  000042                     ??i2_CANsendMessage:
  1770                           
  1771                           ; 0 bytes @ 0x19
  1772  000042                     	ds	2
  1773  000044                     CANreceiveMessage@error:
  1774                           	opt stack 0
  1775                           
  1776                           ; 1 bytes @ 0x1B
  1777  000044                     	ds	1
  1778  000045                     CANreceiveMessage@tamp:
  1779                           	opt stack 0
  1780                           
  1781                           ; 1 bytes @ 0x1C
  1782  000045                     	ds	1
  1783  000046                     i2CANsendMessage@tamp:
  1784                           	opt stack 0
  1785                           
  1786                           ; 4 bytes @ 0x1D
  1787  000046                     	ds	4
  1788                           tblptru	equ	0xFF8
  1789                           tblptrh	equ	0xFF7
  1790                           tblptrl	equ	0xFF6
  1791                           tablat	equ	0xFF5
  1792                           postinc0	equ	0xFEE
  1793                           wreg	equ	0xFE8
  1794                           
  1795 ;;
  1796 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1797 ;;
  1798 ;; *************** function _main *****************
  1799 ;; Defined at:
  1800 ;;		line 209 in file "RemoteCan.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;		None
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;		None
  1805 ;; Return value:  Size  Location     Type
  1806 ;;		None               void
  1807 ;; Registers used:
  1808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1816 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1817 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1818 ;;Total ram usage:        8 bytes
  1819 ;; Hardware stack levels required when called:   11
  1820 ;; This function calls:
  1821 ;;		_CAN_Tx
  1822 ;;		_CANisTxReady
  1823 ;;		_CANsendMessage
  1824 ;;		_F1_Button_Polling
  1825 ;;		_F2_Button_Polling
  1826 ;;		_Joystick_Polling
  1827 ;;		_LCD_End
  1828 ;;		_LCD_Error
  1829 ;;		_LCD_Gap
  1830 ;;		_LCD_Handler
  1831 ;;		_LCD_Park
  1832 ;;		_LCD_Parking
  1833 ;;		_LCD_goto_line
  1834 ;;		_LCD_initialize
  1835 ;;		_LCD_write_message
  1836 ;;		_PWR_Button_Polling
  1837 ;;		___awdiv
  1838 ;;		___awtofl
  1839 ;;		___fladd
  1840 ;;		___flmul
  1841 ;;		___flneg
  1842 ;;		___fltol
  1843 ;;		___lbtofl
  1844 ;;		_board_initialization
  1845 ;;		_delay_ms
  1846 ;; This function is called by:
  1847 ;;		Startup code after reset
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text0
  1852  011436                     __ptext0:
  1853                           	opt stack 0
  1854  011436                     _main:
  1855                           	opt stack 20
  1856                           
  1857                           ;RemoteCan.c: 210: board_initialization();
  1858                           
  1859                           ;incstack = 0
  1860  011436  ECD8  F0AA         	call	_board_initialization	;wreg free
  1861                           
  1862                           ;RemoteCan.c: 212: JoystickConstants[0] = 0.703;
  1863  01143A  0ECF               	movlw	207
  1864  01143C  0100               	movlb	0	; () banked
  1865  01143E  6FBB               	movwf	_JoystickConstants& (0+255),b	;volatile
  1866  011440  0EF7               	movlw	247
  1867  011442  6FBC               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1868  011444  0E33               	movlw	51
  1869  011446  6FBD               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1870  011448  0E3F               	movlw	63
  1871  01144A  6FBE               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;RemoteCan.c: 213: JoystickConstants[1] = 20;
  1875  01144C  0E00               	movlw	0
  1876  01144E  0100               	movlb	0	; () banked
  1877  011450  6FBF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1878  011452  0E00               	movlw	0
  1879  011454  6FC0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1880  011456  0EA0               	movlw	160
  1881  011458  6FC1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1882  01145A  0E41               	movlw	65
  1883  01145C  6FC2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;RemoteCan.c: 215: data_brake [1] = 0;
  1887  01145E  0E00               	movlw	0
  1888  011460  6E22               	movwf	_data_brake+1,c
  1889  011462  D000               	goto	l8574
  1890  011464                     l8574:
  1891                           
  1892                           ;RemoteCan.c: 220: PWR_Button_Polling();
  1893  011464  ECB1  F0AF         	call	_PWR_Button_Polling	;wreg free
  1894                           
  1895                           ;RemoteCan.c: 221: F1_Button_Polling();
  1896  011468  ECC7  F0AF         	call	_F1_Button_Polling	;wreg free
  1897                           
  1898                           ;RemoteCan.c: 222: F2_Button_Polling();
  1899  01146C  ECBC  F0AF         	call	_F2_Button_Polling	;wreg free
  1900                           
  1901                           ;RemoteCan.c: 225: if (power_switch == 0) {
  1902  011470  B24B               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1903  011472  D08B               	goto	l808
  1904                           
  1905                           ;RemoteCan.c: 226: dir = 1;
  1906  011474  0E01               	movlw	1
  1907  011476  0100               	movlb	0	; () banked
  1908  011478  6FE8               	movwf	_dir& (0+255),b	;volatile
  1909                           
  1910                           ;RemoteCan.c: 227: set_speed = 0;
  1911  01147A  0E00               	movlw	0
  1912  01147C  0100               	movlb	0	; () banked
  1913  01147E  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1914  011480  0E00               	movlw	0
  1915  011482  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  1916                           
  1917                           ;RemoteCan.c: 228: data_steering [0] = 90;
  1918  011484  0E5A               	movlw	90
  1919  011486  0101               	movlb	1	; () banked
  1920  011488  6F26               	movwf	_data_steering& (0+255),b
  1921                           
  1922                           ;RemoteCan.c: 229: data_brake [0] = 0b00000000;
  1923  01148A  0E00               	movlw	0
  1924  01148C  6E21               	movwf	_data_brake,c
  1925                           
  1926                           ; BSR set to: 1
  1927                           ;RemoteCan.c: 230: CAN_Tx();
  1928  01148E  EC1E  F0AA         	call	_CAN_Tx	;wreg free
  1929                           
  1930                           ;RemoteCan.c: 231: PORTDbits.RD6 = 0;
  1931  011492  9C83               	bcf	3971,6,c	;volatile
  1932                           
  1933                           ;RemoteCan.c: 232: PORTDbits.RD5 = 0;
  1934  011494  9A83               	bcf	3971,5,c	;volatile
  1935                           
  1936                           ;RemoteCan.c: 233: LCD_initialize(16);
  1937  011496  0E10               	movlw	16
  1938  011498  EC6D  F0A5         	call	_LCD_initialize
  1939                           
  1940                           ;RemoteCan.c: 234: LCD_goto_line(1);
  1941  01149C  0E01               	movlw	1
  1942  01149E  EC7A  F0A8         	call	_LCD_goto_line
  1943                           
  1944                           ;RemoteCan.c: 235: LCD_write_message("====================");
  1945  0114A2  0E69               	movlw	low STR_1
  1946  0114A4  0100               	movlb	0	; () banked
  1947  0114A6  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1948  0114A8  0EFF               	movlw	high STR_1
  1949  0114AA  0100               	movlb	0	; () banked
  1950  0114AC  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1951  0114AE  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  1952                           
  1953                           ;RemoteCan.c: 236: LCD_goto_line(2);
  1954  0114B2  0E02               	movlw	2
  1955  0114B4  EC7A  F0A8         	call	_LCD_goto_line
  1956                           
  1957                           ;RemoteCan.c: 237: LCD_write_message("==> VEHICLE  OFF <==");
  1958  0114B8  0E3F               	movlw	low STR_2
  1959  0114BA  0100               	movlb	0	; () banked
  1960  0114BC  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1961  0114BE  0EFF               	movlw	high STR_2
  1962  0114C0  0100               	movlb	0	; () banked
  1963  0114C2  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1964  0114C4  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  1965                           
  1966                           ;RemoteCan.c: 238: LCD_goto_line(3);
  1967  0114C8  0E03               	movlw	3
  1968  0114CA  EC7A  F0A8         	call	_LCD_goto_line
  1969                           
  1970                           ;RemoteCan.c: 239: LCD_write_message("  Press the button  ");
  1971  0114CE  0E58               	movlw	low STR_3
  1972  0114D0  0100               	movlb	0	; () banked
  1973  0114D2  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1974  0114D4  0EFE               	movlw	high STR_3
  1975  0114D6  0100               	movlb	0	; () banked
  1976  0114D8  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1977  0114DA  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  1978                           
  1979                           ;RemoteCan.c: 240: LCD_goto_line(4);
  1980  0114DE  0E04               	movlw	4
  1981  0114E0  EC7A  F0A8         	call	_LCD_goto_line
  1982                           
  1983                           ;RemoteCan.c: 241: LCD_write_message("====================");
  1984  0114E4  0E69               	movlw	low STR_1
  1985  0114E6  0100               	movlb	0	; () banked
  1986  0114E8  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  1987  0114EA  0EFF               	movlw	high STR_1
  1988  0114EC  0100               	movlb	0	; () banked
  1989  0114EE  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1990  0114F0  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  1991                           
  1992                           ;RemoteCan.c: 242: while (power_switch == 0) {
  1993  0114F4  D046               	goto	l8616
  1994  0114F6                     l8608:
  1995                           
  1996                           ;RemoteCan.c: 243: if ((time_counter - pr_time_1) >= 30) {
  1997  0114F6  C0CB  F151         	movff	_pr_time_1,??_main	;volatile
  1998  0114FA  C0CC  F152         	movff	_pr_time_1+1,??_main+1	;volatile
  1999  0114FE  C0CD  F153         	movff	_pr_time_1+2,??_main+2	;volatile
  2000  011502  C0CE  F154         	movff	_pr_time_1+3,??_main+3	;volatile
  2001  011506  0101               	movlb	1	; () banked
  2002  011508  1F51               	comf	??_main& (0+255),f,b
  2003  01150A  1F52               	comf	(??_main+1)& (0+255),f,b
  2004  01150C  1F53               	comf	(??_main+2)& (0+255),f,b
  2005  01150E  1F54               	comf	(??_main+3)& (0+255),f,b
  2006  011510  2B51               	incf	??_main& (0+255),f,b
  2007  011512  0E00               	movlw	0
  2008  011514  2352               	addwfc	(??_main+1)& (0+255),f,b
  2009  011516  2353               	addwfc	(??_main+2)& (0+255),f,b
  2010  011518  2354               	addwfc	(??_main+3)& (0+255),f,b
  2011  01151A  5005               	movf	_time_counter,w,c	;volatile
  2012  01151C  0101               	movlb	1	; () banked
  2013  01151E  2551               	addwf	??_main& (0+255),w,b
  2014  011520  0101               	movlb	1	; () banked
  2015  011522  6F55               	movwf	(??_main+4)& (0+255),b
  2016  011524  5006               	movf	_time_counter+1,w,c	;volatile
  2017  011526  0101               	movlb	1	; () banked
  2018  011528  2152               	addwfc	(??_main+1)& (0+255),w,b
  2019  01152A  0101               	movlb	1	; () banked
  2020  01152C  6F56               	movwf	(??_main+5)& (0+255),b
  2021  01152E  5007               	movf	_time_counter+2,w,c	;volatile
  2022  011530  0101               	movlb	1	; () banked
  2023  011532  2153               	addwfc	(??_main+2)& (0+255),w,b
  2024  011534  0101               	movlb	1	; () banked
  2025  011536  6F57               	movwf	(??_main+6)& (0+255),b
  2026  011538  5008               	movf	_time_counter+3,w,c	;volatile
  2027  01153A  0101               	movlb	1	; () banked
  2028  01153C  2154               	addwfc	(??_main+3)& (0+255),w,b
  2029  01153E  0101               	movlb	1	; () banked
  2030  011540  6F58               	movwf	(??_main+7)& (0+255),b
  2031  011542  0101               	movlb	1	; () banked
  2032  011544  5158               	movf	(??_main+7)& (0+255),w,b
  2033  011546  0101               	movlb	1	; () banked
  2034  011548  1157               	iorwf	(??_main+6)& (0+255),w,b
  2035  01154A  0101               	movlb	1	; () banked
  2036  01154C  1156               	iorwf	(??_main+5)& (0+255),w,b
  2037  01154E  E105               	bnz	u10660
  2038  011550  0E1E               	movlw	30
  2039  011552  0101               	movlb	1	; () banked
  2040  011554  5D55               	subwf	(??_main+4)& (0+255),w,b
  2041  011556  A0D8               	btfss	status,0,c
  2042  011558  D00A               	goto	l8612
  2043  01155A                     u10660:
  2044                           
  2045                           ; BSR set to: 1
  2046                           ;RemoteCan.c: 244: pr_time_1 = time_counter;
  2047  01155A  C005  F0CB         	movff	_time_counter,_pr_time_1	;volatile
  2048  01155E  C006  F0CC         	movff	_time_counter+1,_pr_time_1+1	;volatile
  2049  011562  C007  F0CD         	movff	_time_counter+2,_pr_time_1+2	;volatile
  2050  011566  C008  F0CE         	movff	_time_counter+3,_pr_time_1+3	;volatile
  2051                           
  2052                           ;RemoteCan.c: 245: PORTDbits.RD7 = ~PORTDbits.RD7;
  2053  01156A  7E83               	btg	3971,7,c	;volatile
  2054  01156C  D000               	goto	l8612
  2055  01156E                     l8612:
  2056                           
  2057                           ; BSR set to: 1
  2058                           ;RemoteCan.c: 246: }
  2059                           ;RemoteCan.c: 247: PWR_Button_Polling();
  2060  01156E  ECB1  F0AF         	call	_PWR_Button_Polling	;wreg free
  2061                           
  2062                           ;RemoteCan.c: 248: delay_ms(10);
  2063  011572  0E00               	movlw	0
  2064  011574  0100               	movlb	0	; () banked
  2065  011576  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2066  011578  0E0A               	movlw	10
  2067  01157A  6F78               	movwf	delay_ms@value_ms& (0+255),b
  2068  01157C  EC58  F0AE         	call	_delay_ms	;wreg free
  2069  011580  D000               	goto	l8616
  2070  011582                     l8616:
  2071  011582  A24B               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  2072  011584  D7B8               	goto	l8608
  2073                           
  2074                           ;RemoteCan.c: 249: }
  2075                           ;RemoteCan.c: 250: PORTDbits.RD7 = 0;
  2076  011586  9E83               	bcf	3971,7,c	;volatile
  2077                           
  2078                           ;RemoteCan.c: 251: display_refresh = 1;
  2079  011588  8A4A               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  2080  01158A                     l808:
  2081                           
  2082                           ;RemoteCan.c: 252: }
  2083                           ;RemoteCan.c: 255: if (PORTAbits.RA2 == 1) {
  2084  01158A  A480               	btfss	3968,2,c	;volatile
  2085  01158C  D004               	goto	l813
  2086                           
  2087                           ;RemoteCan.c: 256: switch_position = 0;
  2088  01158E  0E00               	movlw	0
  2089  011590  0100               	movlb	0	; () banked
  2090  011592  6FEC               	movwf	_switch_position& (0+255),b	;volatile
  2091                           
  2092                           ;RemoteCan.c: 257: } else {
  2093  011594  D00E               	goto	l8624
  2094  011596                     l813:
  2095                           
  2096                           ;RemoteCan.c: 258: if (PORTAbits.RA3 == 0) {
  2097  011596  B680               	btfsc	3968,3,c	;volatile
  2098  011598  D005               	goto	l8622
  2099                           
  2100                           ;RemoteCan.c: 259: switch_position = 1;
  2101  01159A  0E01               	movlw	1
  2102  01159C  0100               	movlb	0	; () banked
  2103  01159E  6FEC               	movwf	_switch_position& (0+255),b	;volatile
  2104                           
  2105                           ;RemoteCan.c: 260: dir = 1;
  2106  0115A0  0E01               	movlw	1
  2107  0115A2  D004               	goto	L1
  2108  0115A4                     l8622:
  2109                           
  2110                           ;RemoteCan.c: 262: switch_position = 2;
  2111  0115A4  0E02               	movlw	2
  2112  0115A6  0100               	movlb	0	; () banked
  2113  0115A8  6FEC               	movwf	_switch_position& (0+255),b	;volatile
  2114                           
  2115                           ;RemoteCan.c: 263: dir = 0;
  2116  0115AA  0E00               	movlw	0
  2117  0115AC                     L1:
  2118  0115AC  0100               	movlb	0	; () banked
  2119  0115AE  6FE8               	movwf	_dir& (0+255),b	;volatile
  2120                           
  2121                           ; BSR set to: 0
  2122  0115B0  D000               	goto	l8624
  2123  0115B2                     l8624:
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;RemoteCan.c: 264: }
  2127                           ;RemoteCan.c: 265: }
  2128                           ;RemoteCan.c: 268: if (F1_switch == 1) {
  2129  0115B2  A24A               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  2130  0115B4  D0A9               	goto	l817
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;RemoteCan.c: 269: y = 0;
  2134  0115B6  944C               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  2135                           
  2136                           ;RemoteCan.c: 270: if ((x == 0)&&(F2_switch == 0)) {
  2137  0115B8  A24C               	btfss	_x/(0+8),_x& (0+7),c	;volatile
  2138                           
  2139                           ; BSR set to: 0
  2140  0115BA  B44A               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2141  0115BC  D02F               	goto	l8642
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;RemoteCan.c: 271: space_available = 0;
  2145  0115BE  964B               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;RemoteCan.c: 272: parking_state = 1;
  2149  0115C0  0E01               	movlw	1
  2150  0115C2  0100               	movlb	0	; () banked
  2151  0115C4  6FEA               	movwf	_parking_state& (0+255),b	;volatile
  2152                           
  2153                           ;RemoteCan.c: 273: JoystickConstants[1] = 5;
  2154  0115C6  0E00               	movlw	0
  2155  0115C8  0100               	movlb	0	; () banked
  2156  0115CA  6FBF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2157  0115CC  0E00               	movlw	0
  2158  0115CE  6FC0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2159  0115D0  0EA0               	movlw	160
  2160  0115D2  6FC1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2161  0115D4  0E40               	movlw	64
  2162  0115D6  6FC2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2163                           
  2164                           ; BSR set to: 0
  2165                           
  2166                           ;RemoteCan.c: 274: while (!CANisTxReady());
  2167  0115D8  D000               	goto	l8634
  2168  0115DA                     l8634:
  2169  0115DA  EC57  F0AF         	call	_CANisTxReady	;wreg free
  2170  0115DE  0900               	iorlw	0
  2171  0115E0  B4D8               	btfsc	status,2,c
  2172  0115E2  D7FB               	goto	l8634
  2173                           
  2174                           ;RemoteCan.c: 275: park_assist_state[0] = 0b00000001;
  2175  0115E4  0E01               	movlw	1
  2176  0115E6  0101               	movlb	1	; () banked
  2177  0115E8  6F2E               	movwf	_park_assist_state& (0+255),b
  2178                           
  2179                           ; BSR set to: 1
  2180                           ;RemoteCan.c: 276: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2181  0115EA  0E0C               	movlw	12
  2182  0115EC  0100               	movlb	0	; () banked
  2183  0115EE  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  2184  0115F0  0E00               	movlw	0
  2185  0115F2  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2186  0115F4  0E00               	movlw	0
  2187  0115F6  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2188  0115F8  0E00               	movlw	0
  2189  0115FA  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2190  0115FC  0E2E               	movlw	low _park_assist_state
  2191  0115FE  0100               	movlb	0	; () banked
  2192  011600  6F76               	movwf	CANsendMessage@data& (0+255),b
  2193  011602  0E01               	movlw	high _park_assist_state
  2194  011604  0100               	movlb	0	; () banked
  2195  011606  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  2196  011608  0E08               	movlw	8
  2197  01160A  0100               	movlb	0	; () banked
  2198  01160C  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  2199  01160E  0EBC               	movlw	188
  2200  011610  0100               	movlb	0	; () banked
  2201  011612  6F79               	movwf	CANsendMessage@flags& (0+255),b
  2202  011614  EC09  F08E         	call	_CANsendMessage	;wreg free
  2203                           
  2204                           ;RemoteCan.c: 277: x = 1;
  2205  011618  824C               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  2206  01161A  D000               	goto	l8642
  2207  01161C                     l8642:
  2208                           
  2209                           ;RemoteCan.c: 278: }
  2210                           ;RemoteCan.c: 280: if ((F2_switch == 1)&&(space_available == 1)&&(space_gap_reached == 1
      +                          )) {
  2211  01161C  B44A               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2212  01161E  A64B               	btfss	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2213  011620  D02A               	goto	l822
  2214  011622  A84B               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2215  011624  D028               	goto	l822
  2216                           
  2217                           ;RemoteCan.c: 281: if (z == 0) {
  2218  011626  B64C               	btfsc	_z/(0+8),_z& (0+7),c	;volatile
  2219  011628  D028               	goto	l8660
  2220                           
  2221                           ;RemoteCan.c: 282: parking_message_ID = 4;
  2222  01162A  0E04               	movlw	4
  2223  01162C  0100               	movlb	0	; () banked
  2224  01162E  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
  2225                           
  2226                           ;RemoteCan.c: 283: parking_state = 2;
  2227  011630  0E02               	movlw	2
  2228  011632  0100               	movlb	0	; () banked
  2229  011634  6FEA               	movwf	_parking_state& (0+255),b	;volatile
  2230                           
  2231                           ; BSR set to: 0
  2232                           
  2233                           ;RemoteCan.c: 284: while (!CANisTxReady());
  2234  011636  D000               	goto	l8652
  2235  011638                     l8652:
  2236  011638  EC57  F0AF         	call	_CANisTxReady	;wreg free
  2237  01163C  0900               	iorlw	0
  2238  01163E  B4D8               	btfsc	status,2,c
  2239  011640  D7FB               	goto	l8652
  2240                           
  2241                           ;RemoteCan.c: 285: CANsendMessage(0b00000001110, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  2242  011642  0E0E               	movlw	14
  2243  011644  0100               	movlb	0	; () banked
  2244  011646  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  2245  011648  0E00               	movlw	0
  2246  01164A  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2247  01164C  0E00               	movlw	0
  2248  01164E  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2249  011650  0E00               	movlw	0
  2250  011652  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2251  011654  0E16               	movlw	low _data
  2252  011656  0100               	movlb	0	; () banked
  2253  011658  6F76               	movwf	CANsendMessage@data& (0+255),b
  2254  01165A  0E01               	movlw	high _data
  2255  01165C  0100               	movlb	0	; () banked
  2256  01165E  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  2257  011660  0E08               	movlw	8
  2258  011662  0100               	movlb	0	; () banked
  2259  011664  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  2260  011666  0EBC               	movlw	188
  2261  011668  0100               	movlb	0	; () banked
  2262  01166A  6F79               	movwf	CANsendMessage@flags& (0+255),b
  2263  01166C  EC09  F08E         	call	_CANsendMessage	;wreg free
  2264                           
  2265                           ;RemoteCan.c: 286: x = 0;
  2266  011670  924C               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2267                           
  2268                           ;RemoteCan.c: 287: z = 1;
  2269  011672  864C               	bsf	_z/(0+8),_z& (0+7),c	;volatile
  2270                           
  2271                           ;RemoteCan.c: 288: }
  2272                           ;RemoteCan.c: 289: } else {
  2273  011674  D002               	goto	l8660
  2274  011676                     l822:
  2275                           
  2276                           ;RemoteCan.c: 290: z = 0;
  2277  011676  964C               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2278  011678  D000               	goto	l8660
  2279  01167A                     l8660:
  2280                           
  2281                           ;RemoteCan.c: 291: }
  2282                           ;RemoteCan.c: 293: if ((time_counter - pr_time_5) >= 30) {
  2283  01167A  C0D7  F151         	movff	_pr_time_5,??_main	;volatile
  2284  01167E  C0D8  F152         	movff	_pr_time_5+1,??_main+1	;volatile
  2285  011682  C0D9  F153         	movff	_pr_time_5+2,??_main+2	;volatile
  2286  011686  C0DA  F154         	movff	_pr_time_5+3,??_main+3	;volatile
  2287  01168A  0101               	movlb	1	; () banked
  2288  01168C  1F51               	comf	??_main& (0+255),f,b
  2289  01168E  1F52               	comf	(??_main+1)& (0+255),f,b
  2290  011690  1F53               	comf	(??_main+2)& (0+255),f,b
  2291  011692  1F54               	comf	(??_main+3)& (0+255),f,b
  2292  011694  2B51               	incf	??_main& (0+255),f,b
  2293  011696  0E00               	movlw	0
  2294  011698  2352               	addwfc	(??_main+1)& (0+255),f,b
  2295  01169A  2353               	addwfc	(??_main+2)& (0+255),f,b
  2296  01169C  2354               	addwfc	(??_main+3)& (0+255),f,b
  2297  01169E  5005               	movf	_time_counter,w,c	;volatile
  2298  0116A0  0101               	movlb	1	; () banked
  2299  0116A2  2551               	addwf	??_main& (0+255),w,b
  2300  0116A4  0101               	movlb	1	; () banked
  2301  0116A6  6F55               	movwf	(??_main+4)& (0+255),b
  2302  0116A8  5006               	movf	_time_counter+1,w,c	;volatile
  2303  0116AA  0101               	movlb	1	; () banked
  2304  0116AC  2152               	addwfc	(??_main+1)& (0+255),w,b
  2305  0116AE  0101               	movlb	1	; () banked
  2306  0116B0  6F56               	movwf	(??_main+5)& (0+255),b
  2307  0116B2  5007               	movf	_time_counter+2,w,c	;volatile
  2308  0116B4  0101               	movlb	1	; () banked
  2309  0116B6  2153               	addwfc	(??_main+2)& (0+255),w,b
  2310  0116B8  0101               	movlb	1	; () banked
  2311  0116BA  6F57               	movwf	(??_main+6)& (0+255),b
  2312  0116BC  5008               	movf	_time_counter+3,w,c	;volatile
  2313  0116BE  0101               	movlb	1	; () banked
  2314  0116C0  2154               	addwfc	(??_main+3)& (0+255),w,b
  2315  0116C2  0101               	movlb	1	; () banked
  2316  0116C4  6F58               	movwf	(??_main+7)& (0+255),b
  2317  0116C6  0101               	movlb	1	; () banked
  2318  0116C8  5158               	movf	(??_main+7)& (0+255),w,b
  2319  0116CA  0101               	movlb	1	; () banked
  2320  0116CC  1157               	iorwf	(??_main+6)& (0+255),w,b
  2321  0116CE  0101               	movlb	1	; () banked
  2322  0116D0  1156               	iorwf	(??_main+5)& (0+255),w,b
  2323  0116D2  E105               	bnz	u10790
  2324  0116D4  0E1E               	movlw	30
  2325  0116D6  0101               	movlb	1	; () banked
  2326  0116D8  5D55               	subwf	(??_main+4)& (0+255),w,b
  2327  0116DA  A0D8               	btfss	status,0,c
  2328  0116DC  D050               	goto	l8684
  2329  0116DE                     u10790:
  2330                           
  2331                           ; BSR set to: 1
  2332                           ;RemoteCan.c: 294: pr_time_5 = time_counter;
  2333  0116DE  C005  F0D7         	movff	_time_counter,_pr_time_5	;volatile
  2334  0116E2  C006  F0D8         	movff	_time_counter+1,_pr_time_5+1	;volatile
  2335  0116E6  C007  F0D9         	movff	_time_counter+2,_pr_time_5+2	;volatile
  2336  0116EA  C008  F0DA         	movff	_time_counter+3,_pr_time_5+3	;volatile
  2337                           
  2338                           ;RemoteCan.c: 295: if ((space_available == 1)&&(space_gap_reached == 1)) {
  2339  0116EE  B64B               	btfsc	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2340                           
  2341                           ; BSR set to: 1
  2342  0116F0  A84B               	btfss	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2343  0116F2  D007               	goto	l829
  2344                           
  2345                           ; BSR set to: 1
  2346                           ;RemoteCan.c: 296: PORTDbits.RD6 = 1;
  2347  0116F4  8C83               	bsf	3971,6,c	;volatile
  2348                           
  2349                           ;RemoteCan.c: 297: if (F2_switch == 0) {
  2350  0116F6  B44A               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2351  0116F8  D002               	goto	l830
  2352                           
  2353                           ; BSR set to: 1
  2354                           ;RemoteCan.c: 298: PORTDbits.RD5 = ~PORTDbits.RD5;
  2355  0116FA  7A83               	btg	3971,5,c	;volatile
  2356                           
  2357                           ;RemoteCan.c: 299: } else {
  2358  0116FC  D040               	goto	l8684
  2359  0116FE                     l830:
  2360                           
  2361                           ; BSR set to: 1
  2362                           ;RemoteCan.c: 300: PORTDbits.RD5 = 1;
  2363  0116FE  8A83               	bsf	3971,5,c	;volatile
  2364                           
  2365                           ; BSR set to: 1
  2366                           ;RemoteCan.c: 301: }
  2367                           ;RemoteCan.c: 302: } else {
  2368  011700  D03E               	goto	l8684
  2369  011702                     l829:
  2370                           
  2371                           ; BSR set to: 1
  2372                           ;RemoteCan.c: 303: PORTDbits.RD6 = ~PORTDbits.RD6;
  2373  011702  7C83               	btg	3971,6,c	;volatile
  2374  011704  D03A               	goto	l8682
  2375                           
  2376                           ; BSR set to: 1
  2377                           ;RemoteCan.c: 305: }
  2378                           ;RemoteCan.c: 306: }
  2379                           ;RemoteCan.c: 307: } else {
  2380                           
  2381                           ; BSR set to: 1
  2382                           
  2383                           ;RemoteCan.c: 304: PORTDbits.RD5 = 0;
  2384  011706  D03B               	goto	l8684
  2385  011708                     l817:
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;RemoteCan.c: 308: x = 0;
  2389  011708  924C               	bcf	_x/(0+8),_x& (0+7),c	;volatile
  2390                           
  2391                           ;RemoteCan.c: 309: z = 0;
  2392  01170A  964C               	bcf	_z/(0+8),_z& (0+7),c	;volatile
  2393                           
  2394                           ;RemoteCan.c: 310: parking_message_E = 0;
  2395  01170C  904B               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  2396                           
  2397                           ;RemoteCan.c: 311: F2_switch = 0;
  2398  01170E  944A               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2399                           
  2400                           ;RemoteCan.c: 312: space_available = 0;
  2401  011710  964B               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2402                           
  2403                           ;RemoteCan.c: 313: space_gap_reached = 0;
  2404  011712  984B               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
  2405                           
  2406                           ;RemoteCan.c: 314: PORTDbits.RD5 = 0;
  2407  011714  9A83               	bcf	3971,5,c	;volatile
  2408                           
  2409                           ;RemoteCan.c: 315: PORTDbits.RD6 = 0;
  2410  011716  9C83               	bcf	3971,6,c	;volatile
  2411                           
  2412                           ;RemoteCan.c: 316: if (y == 0) {
  2413  011718  B44C               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  2414  01171A  D02E               	goto	l8680
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;RemoteCan.c: 317: parking_state = 0;
  2418  01171C  0E00               	movlw	0
  2419  01171E  0100               	movlb	0	; () banked
  2420  011720  6FEA               	movwf	_parking_state& (0+255),b	;volatile
  2421                           
  2422                           ;RemoteCan.c: 318: JoystickConstants[1] = 20;
  2423  011722  0E00               	movlw	0
  2424  011724  0100               	movlb	0	; () banked
  2425  011726  6FBF               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2426  011728  0E00               	movlw	0
  2427  01172A  6FC0               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2428  01172C  0EA0               	movlw	160
  2429  01172E  6FC1               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2430  011730  0E41               	movlw	65
  2431  011732  6FC2               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2432                           
  2433                           ; BSR set to: 0
  2434                           
  2435                           ;RemoteCan.c: 319: while (!CANisTxReady());
  2436  011734  D000               	goto	l8672
  2437  011736                     l8672:
  2438  011736  EC57  F0AF         	call	_CANisTxReady	;wreg free
  2439  01173A  0900               	iorlw	0
  2440  01173C  B4D8               	btfsc	status,2,c
  2441  01173E  D7FB               	goto	l8672
  2442                           
  2443                           ;RemoteCan.c: 320: park_assist_state[0] = 0b00000000;
  2444  011740  0E00               	movlw	0
  2445  011742  0101               	movlb	1	; () banked
  2446  011744  6F2E               	movwf	_park_assist_state& (0+255),b
  2447                           
  2448                           ; BSR set to: 1
  2449                           ;RemoteCan.c: 321: CANsendMessage(0b00000001100, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2450  011746  0E0C               	movlw	12
  2451  011748  0100               	movlb	0	; () banked
  2452  01174A  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  2453  01174C  0E00               	movlw	0
  2454  01174E  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2455  011750  0E00               	movlw	0
  2456  011752  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2457  011754  0E00               	movlw	0
  2458  011756  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2459  011758  0E2E               	movlw	low _park_assist_state
  2460  01175A  0100               	movlb	0	; () banked
  2461  01175C  6F76               	movwf	CANsendMessage@data& (0+255),b
  2462  01175E  0E01               	movlw	high _park_assist_state
  2463  011760  0100               	movlb	0	; () banked
  2464  011762  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  2465  011764  0E08               	movlw	8
  2466  011766  0100               	movlb	0	; () banked
  2467  011768  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  2468  01176A  0EBC               	movlw	188
  2469  01176C  0100               	movlb	0	; () banked
  2470  01176E  6F79               	movwf	CANsendMessage@flags& (0+255),b
  2471  011770  EC09  F08E         	call	_CANsendMessage	;wreg free
  2472                           
  2473                           ;RemoteCan.c: 322: y = 1;
  2474  011774  844C               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2475  011776  D000               	goto	l8680
  2476  011778                     l8680:
  2477                           
  2478                           ;RemoteCan.c: 323: }
  2479                           ;RemoteCan.c: 324: PORTDbits.RD6 = 0;
  2480  011778  9C83               	bcf	3971,6,c	;volatile
  2481  01177A                     l8682:
  2482                           
  2483                           ;RemoteCan.c: 325: PORTDbits.RD5 = 0;
  2484  01177A  9A83               	bcf	3971,5,c	;volatile
  2485  01177C  D000               	goto	l8684
  2486  01177E                     l8684:
  2487                           
  2488                           ;RemoteCan.c: 326: }
  2489                           ;RemoteCan.c: 328: Joystick_Polling();
  2490  01177E  ECFC  F0AD         	call	_Joystick_Polling	;wreg free
  2491                           
  2492                           ;RemoteCan.c: 331: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2493  011782  0E00               	movlw	0
  2494  011784  0100               	movlb	0	; () banked
  2495  011786  6FA1               	movwf	___fladd@f2& (0+255),b
  2496  011788  0E00               	movlw	0
  2497  01178A  6FA2               	movwf	(___fladd@f2+1)& (0+255),b
  2498  01178C  0E34               	movlw	52
  2499  01178E  6FA3               	movwf	(___fladd@f2+2)& (0+255),b
  2500  011790  0E43               	movlw	67
  2501  011792  6FA4               	movwf	(___fladd@f2+3)& (0+255),b
  2502  011794  C0BB  F085         	movff	_JoystickConstants,___flmul@f2	;volatile
  2503  011798  C0BC  F086         	movff	_JoystickConstants+1,___flmul@f2+1	;volatile
  2504  01179C  C0BD  F087         	movff	_JoystickConstants+2,___flmul@f2+2	;volatile
  2505  0117A0  C0BE  F088         	movff	_JoystickConstants+3,___flmul@f2+3	;volatile
  2506  0117A4  0100               	movlb	0	; () banked
  2507  0117A6  51DF               	movf	_JoystickValues& (0+255),w,b	;volatile
  2508  0117A8  EC91  F0AE         	call	___lbtofl
  2509  0117AC  C07C  F081         	movff	?___lbtofl,___flmul@f1
  2510  0117B0  C07D  F082         	movff	?___lbtofl+1,___flmul@f1+1
  2511  0117B4  C07E  F083         	movff	?___lbtofl+2,___flmul@f1+2
  2512  0117B8  C07F  F084         	movff	?___lbtofl+3,___flmul@f1+3
  2513  0117BC  EC24  F0A6         	call	___flmul	;wreg free
  2514  0117C0  C081  F090         	movff	?___flmul,___flneg@f1
  2515  0117C4  C082  F091         	movff	?___flmul+1,___flneg@f1+1
  2516  0117C8  C083  F092         	movff	?___flmul+2,___flneg@f1+2
  2517  0117CC  C084  F093         	movff	?___flmul+3,___flneg@f1+3
  2518  0117D0  EC1D  F0AE         	call	___flneg	;wreg free
  2519  0117D4  C090  F09D         	movff	?___flneg,___fladd@f1
  2520  0117D8  C091  F09E         	movff	?___flneg+1,___fladd@f1+1
  2521  0117DC  C092  F09F         	movff	?___flneg+2,___fladd@f1+2
  2522  0117E0  C093  F0A0         	movff	?___flneg+3,___fladd@f1+3
  2523  0117E4  ECE2  F09E         	call	___fladd	;wreg free
  2524  0117E8  C09D  F0A9         	movff	?___fladd,___fltol@f1
  2525  0117EC  C09E  F0AA         	movff	?___fladd+1,___fltol@f1+1
  2526  0117F0  C09F  F0AB         	movff	?___fladd+2,___fltol@f1+2
  2527  0117F4  C0A0  F0AC         	movff	?___fladd+3,___fltol@f1+3
  2528  0117F8  EC71  F0A7         	call	___fltol	;wreg free
  2529  0117FC  0100               	movlb	0	; () banked
  2530  0117FE  51A9               	movf	?___fltol& (0+255),w,b
  2531  011800  0101               	movlb	1	; () banked
  2532  011802  6F26               	movwf	_data_steering& (0+255),b
  2533                           
  2534                           ; BSR set to: 1
  2535                           ;RemoteCan.c: 332: if (parking_state == 1) {
  2536  011804  0100               	movlb	0	; () banked
  2537  011806  05EA               	decf	_parking_state& (0+255),w,b	;volatile
  2538  011808  A4D8               	btfss	status,2,c
  2539  01180A  D05C               	goto	l838
  2540                           
  2541                           ; BSR set to: 0
  2542                           ;RemoteCan.c: 333: if (steering_correction_dir == 1) {
  2543  01180C  AA4B               	btfss	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2544  01180E  D00F               	goto	l8694
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;RemoteCan.c: 334: check = data_steering[0] + steering_correction;
  2548  011810  0100               	movlb	0	; () banked
  2549  011812  51EB               	movf	_steering_correction& (0+255),w,b	;volatile
  2550  011814  C126  F151         	movff	_data_steering,??_main
  2551  011818  0101               	movlb	1	; () banked
  2552  01181A  6B52               	clrf	(??_main+1)& (0+255),b
  2553  01181C  0101               	movlb	1	; () banked
  2554  01181E  2751               	addwf	??_main& (0+255),f,b
  2555  011820  0E00               	movlw	0
  2556  011822  2352               	addwfc	(??_main+1)& (0+255),f,b
  2557  011824  C151  F0C7         	movff	??_main,_check	;volatile
  2558  011828  C152  F0C8         	movff	??_main+1,_check+1	;volatile
  2559  01182C  D01B               	goto	L2
  2560  01182E                     l8694:
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;RemoteCan.c: 336: check = data_steering[0] - steering_correction;
  2564  01182E  0100               	movlb	0	; () banked
  2565  011830  51EB               	movf	_steering_correction& (0+255),w,b	;volatile
  2566  011832  0101               	movlb	1	; () banked
  2567  011834  6F51               	movwf	??_main& (0+255),b
  2568  011836  6B52               	clrf	(??_main+1)& (0+255),b
  2569  011838  0101               	movlb	1	; () banked
  2570  01183A  1F51               	comf	??_main& (0+255),f,b
  2571  01183C  1F52               	comf	(??_main+1)& (0+255),f,b
  2572  01183E  4B51               	infsnz	??_main& (0+255),f,b
  2573  011840  2B52               	incf	(??_main+1)& (0+255),f,b
  2574  011842  0101               	movlb	1	; () banked
  2575  011844  5126               	movf	_data_steering& (0+255),w,b
  2576  011846  0101               	movlb	1	; () banked
  2577  011848  6F53               	movwf	(??_main+2)& (0+255),b
  2578  01184A  6B54               	clrf	(??_main+3)& (0+255),b
  2579  01184C  0101               	movlb	1	; () banked
  2580  01184E  5151               	movf	??_main& (0+255),w,b
  2581  011850  0101               	movlb	1	; () banked
  2582  011852  2753               	addwf	(??_main+2)& (0+255),f,b
  2583  011854  0101               	movlb	1	; () banked
  2584  011856  5152               	movf	(??_main+1)& (0+255),w,b
  2585  011858  0101               	movlb	1	; () banked
  2586  01185A  2354               	addwfc	(??_main+3)& (0+255),f,b
  2587  01185C  C153  F0C7         	movff	??_main+2,_check	;volatile
  2588  011860  C154  F0C8         	movff	??_main+3,_check+1	;volatile
  2589  011864                     L2:
  2590  011864  0100               	movlb	0	; () banked
  2591  011866  0E00               	movlw	0
  2592  011868  BFC8               	btfsc	(_check+1)& (0+255),7,b	;volatile
  2593  01186A  0EFF               	movlw	-1
  2594  01186C  6FC9               	movwf	(_check+2)& (0+255),b	;volatile
  2595  01186E  6FCA               	movwf	(_check+3)& (0+255),b	;volatile
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;RemoteCan.c: 337: }
  2599                           ;RemoteCan.c: 338: if ((check >= 0)&&(check <= 180)) {
  2600  011870  0100               	movlb	0	; () banked
  2601  011872  BFCA               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2602  011874  D012               	goto	l8700
  2603                           
  2604                           ; BSR set to: 0
  2605  011876  0100               	movlb	0	; () banked
  2606  011878  BFCA               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2607  01187A  D00C               	goto	l8698
  2608  01187C  0100               	movlb	0	; () banked
  2609  01187E  51CA               	movf	(_check+3)& (0+255),w,b	;volatile
  2610  011880  0100               	movlb	0	; () banked
  2611  011882  11C9               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2612  011884  0100               	movlb	0	; () banked
  2613  011886  11C8               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2614  011888  E108               	bnz	l8700
  2615  01188A  0EB5               	movlw	181
  2616  01188C  0100               	movlb	0	; () banked
  2617  01188E  5DC7               	subwf	_check& (0+255),w,b	;volatile
  2618  011890  B0D8               	btfsc	status,0,c
  2619  011892  D003               	goto	l8700
  2620  011894                     l8698:
  2621                           
  2622                           ; BSR set to: 0
  2623                           ;RemoteCan.c: 339: data_steering[0] = check;
  2624  011894  C0C7  F126         	movff	_check,_data_steering	;volatile
  2625                           
  2626                           ;RemoteCan.c: 340: } else {
  2627  011898  D019               	goto	l845
  2628  01189A                     l8700:
  2629                           
  2630                           ; BSR set to: 0
  2631                           ;RemoteCan.c: 341: if (check > 180) {
  2632  01189A  0100               	movlb	0	; () banked
  2633  01189C  BFCA               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2634  01189E  D00E               	goto	l8704
  2635  0118A0  0100               	movlb	0	; () banked
  2636  0118A2  51CA               	movf	(_check+3)& (0+255),w,b	;volatile
  2637  0118A4  0100               	movlb	0	; () banked
  2638  0118A6  11C9               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2639  0118A8  0100               	movlb	0	; () banked
  2640  0118AA  11C8               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2641  0118AC  E105               	bnz	u10890
  2642  0118AE  0EB5               	movlw	181
  2643  0118B0  0100               	movlb	0	; () banked
  2644  0118B2  5DC7               	subwf	_check& (0+255),w,b	;volatile
  2645  0118B4  A0D8               	btfss	status,0,c
  2646  0118B6  D002               	goto	l8704
  2647  0118B8                     u10890:
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;RemoteCan.c: 342: data_steering[0] = 180;
  2651  0118B8  0EB4               	movlw	180
  2652  0118BA  D001               	goto	L3
  2653  0118BC                     l8704:
  2654                           
  2655                           ;RemoteCan.c: 344: data_steering[0] = 0;
  2656  0118BC  0E00               	movlw	0
  2657  0118BE                     L3:
  2658  0118BE  0101               	movlb	1	; () banked
  2659  0118C0  6F26               	movwf	_data_steering& (0+255),b
  2660                           
  2661                           ; BSR set to: 1
  2662                           ;RemoteCan.c: 345: }
  2663                           ;RemoteCan.c: 346: }
  2664                           ;RemoteCan.c: 347: } else {
  2665                           
  2666                           ; BSR set to: 1
  2667  0118C2  D004               	goto	l845
  2668  0118C4                     l838:
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;RemoteCan.c: 348: steering_correction_dir = 0;
  2672  0118C4  9A4B               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;RemoteCan.c: 349: steering_correction = 0;
  2676  0118C6  0E00               	movlw	0
  2677  0118C8  0100               	movlb	0	; () banked
  2678  0118CA  6FEB               	movwf	_steering_correction& (0+255),b	;volatile
  2679  0118CC                     l845:
  2680                           
  2681                           ;RemoteCan.c: 350: }
  2682                           ;RemoteCan.c: 354: if ((switch_position != 0)&&(collision_msg == 0)) {
  2683  0118CC  0100               	movlb	0	; () banked
  2684  0118CE  51EC               	movf	_switch_position& (0+255),w,b	;volatile
  2685  0118D0  A4D8               	btfss	status,2,c
  2686                           
  2687                           ; BSR set to: 0
  2688  0118D2  B84A               	btfsc	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  2689  0118D4  D07F               	goto	l8738
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;RemoteCan.c: 356: if (JoystickValues[1] > 132) {
  2693  0118D6  0E84               	movlw	132
  2694  0118D8  0100               	movlb	0	; () banked
  2695  0118DA  65E0               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  2696  0118DC  D05B               	goto	l8724
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;RemoteCan.c: 357: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  2700  0118DE  C0BF  F085         	movff	_JoystickConstants+4,___flmul@f2	;volatile
  2701  0118E2  C0C0  F086         	movff	_JoystickConstants+5,___flmul@f2+1	;volatile
  2702  0118E6  C0C1  F087         	movff	_JoystickConstants+6,___flmul@f2+2	;volatile
  2703  0118EA  C0C2  F088         	movff	_JoystickConstants+7,___flmul@f2+3	;volatile
  2704  0118EE  0E7E               	movlw	126
  2705  0118F0  0100               	movlb	0	; () banked
  2706  0118F2  25E0               	addwf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2707  0118F4  0100               	movlb	0	; () banked
  2708  0118F6  6F7C               	movwf	___awtofl@c& (0+255),b
  2709  0118F8  0100               	movlb	0	; () banked
  2710  0118FA  6B7D               	clrf	(___awtofl@c+1)& (0+255),b
  2711  0118FC  0EFF               	movlw	255
  2712  0118FE  237D               	addwfc	(___awtofl@c+1)& (0+255),f,b
  2713  011900  EC8F  F0AD         	call	___awtofl	;wreg free
  2714  011904  C07C  F081         	movff	?___awtofl,___flmul@f1
  2715  011908  C07D  F082         	movff	?___awtofl+1,___flmul@f1+1
  2716  01190C  C07E  F083         	movff	?___awtofl+2,___flmul@f1+2
  2717  011910  C07F  F084         	movff	?___awtofl+3,___flmul@f1+3
  2718  011914  EC24  F0A6         	call	___flmul	;wreg free
  2719  011918  C081  F0A9         	movff	?___flmul,___fltol@f1
  2720  01191C  C082  F0AA         	movff	?___flmul+1,___fltol@f1+1
  2721  011920  C083  F0AB         	movff	?___flmul+2,___fltol@f1+2
  2722  011924  C084  F0AC         	movff	?___flmul+3,___fltol@f1+3
  2723  011928  EC71  F0A7         	call	___fltol	;wreg free
  2724  01192C  C0A9  F0E5         	movff	?___fltol,_set_speed	;volatile
  2725  011930  C0AA  F0E6         	movff	?___fltol+1,_set_speed+1	;volatile
  2726                           
  2727                           ;RemoteCan.c: 358: data_brake [0] = 3;
  2728  011934  0E03               	movlw	3
  2729  011936  6E21               	movwf	_data_brake,c
  2730                           
  2731                           ;RemoteCan.c: 359: data_brake [1] = 0;
  2732  011938  0E00               	movlw	0
  2733  01193A  6E22               	movwf	_data_brake+1,c
  2734                           
  2735                           ;RemoteCan.c: 362: collision_risk_value = ((JoystickValues[1] - 130) / 3) + 4;
  2736  01193C  0E7E               	movlw	126
  2737  01193E  0100               	movlb	0	; () banked
  2738  011940  25E0               	addwf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2739  011942  0100               	movlb	0	; () banked
  2740  011944  6F78               	movwf	___awdiv@dividend& (0+255),b
  2741  011946  0100               	movlb	0	; () banked
  2742  011948  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  2743  01194A  0EFF               	movlw	255
  2744  01194C  2379               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
  2745  01194E  0E00               	movlw	0
  2746  011950  0100               	movlb	0	; () banked
  2747  011952  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  2748  011954  0E03               	movlw	3
  2749  011956  6F7A               	movwf	___awdiv@divisor& (0+255),b
  2750  011958  ECF1  F0A8         	call	___awdiv	;wreg free
  2751  01195C  0100               	movlb	0	; () banked
  2752  01195E  5178               	movf	?___awdiv& (0+255),w,b
  2753  011960  0F04               	addlw	4
  2754  011962  0100               	movlb	0	; () banked
  2755  011964  6FE7               	movwf	_collision_risk_value& (0+255),b	;volatile
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;RemoteCan.c: 363: if (collision_sensor_distance[dir] < collision_risk_value) {
  2759  011966  0100               	movlb	0	; () banked
  2760  011968  51E8               	movf	_dir& (0+255),w,b	;volatile
  2761  01196A  0D01               	mullw	1
  2762  01196C  0E09               	movlw	low _collision_sensor_distance
  2763  01196E  24F3               	addwf	prodl,w,c
  2764  011970  6ED9               	movwf	fsr2l,c
  2765  011972  0E00               	movlw	high _collision_sensor_distance
  2766  011974  20F4               	addwfc	prodh,w,c
  2767  011976  6EDA               	movwf	fsr2h,c
  2768  011978  0100               	movlb	0	; () banked
  2769  01197A  51E7               	movf	_collision_risk_value& (0+255),w,b	;volatile
  2770  01197C  5CDE               	subwf	postinc2,w,c
  2771  01197E  B0D8               	btfsc	status,0,c
  2772  011980  D055               	goto	l8746
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;RemoteCan.c: 364: set_speed = 0;
  2776  011982  0E00               	movlw	0
  2777  011984  0100               	movlb	0	; () banked
  2778  011986  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2779  011988  0E00               	movlw	0
  2780  01198A  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  2781                           
  2782                           ;RemoteCan.c: 365: data_brake [0] = 0b00000000;
  2783  01198C  0E00               	movlw	0
  2784  01198E  6E21               	movwf	_data_brake,c
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;RemoteCan.c: 366: collision_msg = 1;
  2788  011990  884A               	bsf	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;RemoteCan.c: 367: }
  2792                           ;RemoteCan.c: 368: } else {
  2793  011992  D04C               	goto	l8746
  2794  011994                     l8724:
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;RemoteCan.c: 369: set_speed = 0;
  2798  011994  0E00               	movlw	0
  2799  011996  0100               	movlb	0	; () banked
  2800  011998  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2801  01199A  0E00               	movlw	0
  2802  01199C  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;RemoteCan.c: 370: if (JoystickValues[1] <= 65) {
  2806  01199E  0E42               	movlw	66
  2807  0119A0  0100               	movlb	0	; () banked
  2808  0119A2  61E0               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2809  0119A4  D005               	goto	l8730
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;RemoteCan.c: 371: data_brake [0] = 0b00000010;
  2813  0119A6  0E02               	movlw	2
  2814  0119A8  6E21               	movwf	_data_brake,c
  2815                           
  2816                           ;RemoteCan.c: 372: data_brake [1] = 0;
  2817  0119AA  0E00               	movlw	0
  2818  0119AC  6E22               	movwf	_data_brake+1,c
  2819  0119AE  D000               	goto	l8730
  2820  0119B0                     l8730:
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;RemoteCan.c: 373: }
  2824                           ;RemoteCan.c: 374: if (JoystickValues[1] <= 20) {
  2825  0119B0  0E15               	movlw	21
  2826  0119B2  0100               	movlb	0	; () banked
  2827  0119B4  61E0               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2828  0119B6  D005               	goto	l8734
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;RemoteCan.c: 375: data_brake [0] = 0b00000001;
  2832  0119B8  0E01               	movlw	1
  2833  0119BA  6E21               	movwf	_data_brake,c
  2834                           
  2835                           ;RemoteCan.c: 376: data_brake [1] = 0;
  2836  0119BC  0E00               	movlw	0
  2837  0119BE  6E22               	movwf	_data_brake+1,c
  2838  0119C0  D000               	goto	l8734
  2839  0119C2                     l8734:
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;RemoteCan.c: 377: }
  2843                           ;RemoteCan.c: 378: if (JoystickValues[1] <= 5) {
  2844  0119C2  0E06               	movlw	6
  2845  0119C4  0100               	movlb	0	; () banked
  2846  0119C6  61E0               	cpfslt	(_JoystickValues+1)& (0+255),b	;volatile
  2847  0119C8  D031               	goto	l8746
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;RemoteCan.c: 379: data_brake [0] = 0b00000000;
  2851  0119CA  0E00               	movlw	0
  2852  0119CC  6E21               	movwf	_data_brake,c
  2853                           
  2854                           ;RemoteCan.c: 380: data_brake [1] = 0;
  2855  0119CE  0E00               	movlw	0
  2856  0119D0  6E22               	movwf	_data_brake+1,c
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;RemoteCan.c: 381: }
  2860                           ;RemoteCan.c: 382: }
  2861                           ;RemoteCan.c: 383: } else {
  2862                           
  2863                           ; BSR set to: 0
  2864  0119D2  D02C               	goto	l8746
  2865  0119D4                     l8738:
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;RemoteCan.c: 384: set_speed = 0;
  2869  0119D4  0E00               	movlw	0
  2870  0119D6  0100               	movlb	0	; () banked
  2871  0119D8  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2872  0119DA  0E00               	movlw	0
  2873  0119DC  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  2874                           
  2875                           ;RemoteCan.c: 385: data_brake [0] = 0b00000000;
  2876  0119DE  0E00               	movlw	0
  2877  0119E0  6E21               	movwf	_data_brake,c
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;RemoteCan.c: 386: collision_risk_value = ((JoystickValues[1] - 130) / 3) + 4;
  2881  0119E2  0E7E               	movlw	126
  2882  0119E4  0100               	movlb	0	; () banked
  2883  0119E6  25E0               	addwf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2884  0119E8  0100               	movlb	0	; () banked
  2885  0119EA  6F78               	movwf	___awdiv@dividend& (0+255),b
  2886  0119EC  0100               	movlb	0	; () banked
  2887  0119EE  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  2888  0119F0  0EFF               	movlw	255
  2889  0119F2  2379               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
  2890  0119F4  0E00               	movlw	0
  2891  0119F6  0100               	movlb	0	; () banked
  2892  0119F8  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  2893  0119FA  0E03               	movlw	3
  2894  0119FC  6F7A               	movwf	___awdiv@divisor& (0+255),b
  2895  0119FE  ECF1  F0A8         	call	___awdiv	;wreg free
  2896  011A02  0100               	movlb	0	; () banked
  2897  011A04  5178               	movf	?___awdiv& (0+255),w,b
  2898  011A06  0F04               	addlw	4
  2899  011A08  0100               	movlb	0	; () banked
  2900  011A0A  6FE7               	movwf	_collision_risk_value& (0+255),b	;volatile
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;RemoteCan.c: 387: if (collision_sensor_distance[dir] > collision_risk_value) {
  2904  011A0C  0100               	movlb	0	; () banked
  2905  011A0E  51E8               	movf	_dir& (0+255),w,b	;volatile
  2906  011A10  0D01               	mullw	1
  2907  011A12  0E09               	movlw	low _collision_sensor_distance
  2908  011A14  24F3               	addwf	prodl,w,c
  2909  011A16  6ED9               	movwf	fsr2l,c
  2910  011A18  0E00               	movlw	high _collision_sensor_distance
  2911  011A1A  20F4               	addwfc	prodh,w,c
  2912  011A1C  6EDA               	movwf	fsr2h,c
  2913  011A1E  50DE               	movf	postinc2,w,c
  2914  011A20  0100               	movlb	0	; () banked
  2915  011A22  5DE7               	subwf	_collision_risk_value& (0+255),w,b	;volatile
  2916  011A24  B0D8               	btfsc	status,0,c
  2917  011A26  D002               	goto	l8746
  2918                           
  2919                           ; BSR set to: 0
  2920                           ;RemoteCan.c: 388: collision_msg = 0;
  2921  011A28  984A               	bcf	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  2922                           
  2923                           ; BSR set to: 0
  2924  011A2A  D000               	goto	l8746
  2925  011A2C                     l8746:
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;RemoteCan.c: 389: }
  2929                           ;RemoteCan.c: 390: }
  2930                           ;RemoteCan.c: 392: if ((((time_counter - pr_time_2) >= 2) && (parking_message_ID < 2)) |
      +                          | (Can_Tx_Force == 1)) {
  2931  011A2C  C0CF  F151         	movff	_pr_time_2,??_main	;volatile
  2932  011A30  C0D0  F152         	movff	_pr_time_2+1,??_main+1	;volatile
  2933  011A34  C0D1  F153         	movff	_pr_time_2+2,??_main+2	;volatile
  2934  011A38  C0D2  F154         	movff	_pr_time_2+3,??_main+3	;volatile
  2935  011A3C  0101               	movlb	1	; () banked
  2936  011A3E  1F51               	comf	??_main& (0+255),f,b
  2937  011A40  1F52               	comf	(??_main+1)& (0+255),f,b
  2938  011A42  1F53               	comf	(??_main+2)& (0+255),f,b
  2939  011A44  1F54               	comf	(??_main+3)& (0+255),f,b
  2940  011A46  2B51               	incf	??_main& (0+255),f,b
  2941  011A48  0E00               	movlw	0
  2942  011A4A  2352               	addwfc	(??_main+1)& (0+255),f,b
  2943  011A4C  2353               	addwfc	(??_main+2)& (0+255),f,b
  2944  011A4E  2354               	addwfc	(??_main+3)& (0+255),f,b
  2945  011A50  5005               	movf	_time_counter,w,c	;volatile
  2946  011A52  0101               	movlb	1	; () banked
  2947  011A54  2551               	addwf	??_main& (0+255),w,b
  2948  011A56  0101               	movlb	1	; () banked
  2949  011A58  6F55               	movwf	(??_main+4)& (0+255),b
  2950  011A5A  5006               	movf	_time_counter+1,w,c	;volatile
  2951  011A5C  0101               	movlb	1	; () banked
  2952  011A5E  2152               	addwfc	(??_main+1)& (0+255),w,b
  2953  011A60  0101               	movlb	1	; () banked
  2954  011A62  6F56               	movwf	(??_main+5)& (0+255),b
  2955  011A64  5007               	movf	_time_counter+2,w,c	;volatile
  2956  011A66  0101               	movlb	1	; () banked
  2957  011A68  2153               	addwfc	(??_main+2)& (0+255),w,b
  2958  011A6A  0101               	movlb	1	; () banked
  2959  011A6C  6F57               	movwf	(??_main+6)& (0+255),b
  2960  011A6E  5008               	movf	_time_counter+3,w,c	;volatile
  2961  011A70  0101               	movlb	1	; () banked
  2962  011A72  2154               	addwfc	(??_main+3)& (0+255),w,b
  2963  011A74  0101               	movlb	1	; () banked
  2964  011A76  6F58               	movwf	(??_main+7)& (0+255),b
  2965  011A78  0101               	movlb	1	; () banked
  2966  011A7A  5158               	movf	(??_main+7)& (0+255),w,b
  2967  011A7C  0101               	movlb	1	; () banked
  2968  011A7E  1157               	iorwf	(??_main+6)& (0+255),w,b
  2969  011A80  0101               	movlb	1	; () banked
  2970  011A82  1156               	iorwf	(??_main+5)& (0+255),w,b
  2971  011A84  E105               	bnz	u10980
  2972  011A86  0E02               	movlw	2
  2973  011A88  0101               	movlb	1	; () banked
  2974  011A8A  5D55               	subwf	(??_main+4)& (0+255),w,b
  2975  011A8C  A0D8               	btfss	status,0,c
  2976  011A8E  D004               	goto	l859
  2977  011A90                     u10980:
  2978                           
  2979                           ; BSR set to: 1
  2980  011A90  0E01               	movlw	1
  2981  011A92  0100               	movlb	0	; () banked
  2982  011A94  65E9               	cpfsgt	_parking_message_ID& (0+255),b	;volatile
  2983  011A96  D002               	goto	l857
  2984  011A98                     l859:
  2985  011A98  A04A               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2986  011A9A  D01C               	goto	l8758
  2987  011A9C                     l857:
  2988                           
  2989                           ;RemoteCan.c: 393: if (Can_Tx_Force == 1) {
  2990  011A9C  A04A               	btfss	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  2991  011A9E  D00F               	goto	l8754
  2992                           
  2993                           ;RemoteCan.c: 394: dir = 1;
  2994  011AA0  0E01               	movlw	1
  2995  011AA2  0100               	movlb	0	; () banked
  2996  011AA4  6FE8               	movwf	_dir& (0+255),b	;volatile
  2997                           
  2998                           ;RemoteCan.c: 395: set_speed = 0;
  2999  011AA6  0E00               	movlw	0
  3000  011AA8  0100               	movlb	0	; () banked
  3001  011AAA  6FE6               	movwf	(_set_speed+1)& (0+255),b	;volatile
  3002  011AAC  0E00               	movlw	0
  3003  011AAE  6FE5               	movwf	_set_speed& (0+255),b	;volatile
  3004                           
  3005                           ;RemoteCan.c: 396: data_steering [0] = 90;
  3006  011AB0  0E5A               	movlw	90
  3007  011AB2  0101               	movlb	1	; () banked
  3008  011AB4  6F26               	movwf	_data_steering& (0+255),b
  3009                           
  3010                           ;RemoteCan.c: 397: data_brake [0] = 0b00000000;
  3011  011AB6  0E00               	movlw	0
  3012  011AB8  6E21               	movwf	_data_brake,c
  3013                           
  3014                           ; BSR set to: 1
  3015                           ;RemoteCan.c: 398: Can_Tx_Force = 0;
  3016  011ABA  904A               	bcf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
  3017  011ABC  D000               	goto	l8754
  3018  011ABE                     l8754:
  3019                           
  3020                           ;RemoteCan.c: 399: }
  3021                           ;RemoteCan.c: 400: pr_time_2 = time_counter;
  3022  011ABE  C005  F0CF         	movff	_time_counter,_pr_time_2	;volatile
  3023  011AC2  C006  F0D0         	movff	_time_counter+1,_pr_time_2+1	;volatile
  3024  011AC6  C007  F0D1         	movff	_time_counter+2,_pr_time_2+2	;volatile
  3025  011ACA  C008  F0D2         	movff	_time_counter+3,_pr_time_2+3	;volatile
  3026                           
  3027                           ;RemoteCan.c: 401: CAN_Tx();
  3028  011ACE  EC1E  F0AA         	call	_CAN_Tx	;wreg free
  3029  011AD2  D000               	goto	l8758
  3030  011AD4                     l8758:
  3031                           
  3032                           ;RemoteCan.c: 402: }
  3033                           ;RemoteCan.c: 405: if (time_counter >= pr_time_6) {
  3034  011AD4  0100               	movlb	0	; () banked
  3035  011AD6  51DB               	movf	_pr_time_6& (0+255),w,b	;volatile
  3036  011AD8  5C05               	subwf	_time_counter,w,c	;volatile
  3037  011ADA  0100               	movlb	0	; () banked
  3038  011ADC  51DC               	movf	(_pr_time_6+1)& (0+255),w,b	;volatile
  3039  011ADE  5806               	subwfb	_time_counter+1,w,c	;volatile
  3040  011AE0  0100               	movlb	0	; () banked
  3041  011AE2  51DD               	movf	(_pr_time_6+2)& (0+255),w,b	;volatile
  3042  011AE4  5807               	subwfb	_time_counter+2,w,c	;volatile
  3043  011AE6  0100               	movlb	0	; () banked
  3044  011AE8  51DE               	movf	(_pr_time_6+3)& (0+255),w,b	;volatile
  3045  011AEA  5808               	subwfb	_time_counter+3,w,c	;volatile
  3046  011AEC  A0D8               	btfss	status,0,c
  3047  011AEE  D05D               	goto	l8786
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;RemoteCan.c: 406: if ((time_counter - pr_time_3) >= (100 / 10)) {
  3051  011AF0  C0D3  F151         	movff	_pr_time_3,??_main	;volatile
  3052  011AF4  C0D4  F152         	movff	_pr_time_3+1,??_main+1	;volatile
  3053  011AF8  C0D5  F153         	movff	_pr_time_3+2,??_main+2	;volatile
  3054  011AFC  C0D6  F154         	movff	_pr_time_3+3,??_main+3	;volatile
  3055  011B00  0101               	movlb	1	; () banked
  3056  011B02  1F51               	comf	??_main& (0+255),f,b
  3057  011B04  1F52               	comf	(??_main+1)& (0+255),f,b
  3058  011B06  1F53               	comf	(??_main+2)& (0+255),f,b
  3059  011B08  1F54               	comf	(??_main+3)& (0+255),f,b
  3060  011B0A  2B51               	incf	??_main& (0+255),f,b
  3061  011B0C  0E00               	movlw	0
  3062  011B0E  2352               	addwfc	(??_main+1)& (0+255),f,b
  3063  011B10  2353               	addwfc	(??_main+2)& (0+255),f,b
  3064  011B12  2354               	addwfc	(??_main+3)& (0+255),f,b
  3065  011B14  5005               	movf	_time_counter,w,c	;volatile
  3066  011B16  0101               	movlb	1	; () banked
  3067  011B18  2551               	addwf	??_main& (0+255),w,b
  3068  011B1A  0101               	movlb	1	; () banked
  3069  011B1C  6F55               	movwf	(??_main+4)& (0+255),b
  3070  011B1E  5006               	movf	_time_counter+1,w,c	;volatile
  3071  011B20  0101               	movlb	1	; () banked
  3072  011B22  2152               	addwfc	(??_main+1)& (0+255),w,b
  3073  011B24  0101               	movlb	1	; () banked
  3074  011B26  6F56               	movwf	(??_main+5)& (0+255),b
  3075  011B28  5007               	movf	_time_counter+2,w,c	;volatile
  3076  011B2A  0101               	movlb	1	; () banked
  3077  011B2C  2153               	addwfc	(??_main+2)& (0+255),w,b
  3078  011B2E  0101               	movlb	1	; () banked
  3079  011B30  6F57               	movwf	(??_main+6)& (0+255),b
  3080  011B32  5008               	movf	_time_counter+3,w,c	;volatile
  3081  011B34  0101               	movlb	1	; () banked
  3082  011B36  2154               	addwfc	(??_main+3)& (0+255),w,b
  3083  011B38  0101               	movlb	1	; () banked
  3084  011B3A  6F58               	movwf	(??_main+7)& (0+255),b
  3085  011B3C  0101               	movlb	1	; () banked
  3086  011B3E  5158               	movf	(??_main+7)& (0+255),w,b
  3087  011B40  0101               	movlb	1	; () banked
  3088  011B42  1157               	iorwf	(??_main+6)& (0+255),w,b
  3089  011B44  0101               	movlb	1	; () banked
  3090  011B46  1156               	iorwf	(??_main+5)& (0+255),w,b
  3091  011B48  E105               	bnz	u11030
  3092  011B4A  0E0A               	movlw	10
  3093  011B4C  0101               	movlb	1	; () banked
  3094  011B4E  5D55               	subwf	(??_main+4)& (0+255),w,b
  3095  011B50  A0D8               	btfss	status,0,c
  3096  011B52  D488               	goto	l8574
  3097  011B54                     u11030:
  3098                           
  3099                           ; BSR set to: 1
  3100                           ;RemoteCan.c: 407: pr_time_3 = time_counter;
  3101  011B54  C005  F0D3         	movff	_time_counter,_pr_time_3	;volatile
  3102  011B58  C006  F0D4         	movff	_time_counter+1,_pr_time_3+1	;volatile
  3103  011B5C  C007  F0D5         	movff	_time_counter+2,_pr_time_3+2	;volatile
  3104  011B60  C008  F0D6         	movff	_time_counter+3,_pr_time_3+3	;volatile
  3105                           
  3106                           ;RemoteCan.c: 408: if (parking_message_E == 1) {
  3107  011B64  A04B               	btfss	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  3108  011B66  D01E               	goto	l8784
  3109                           
  3110                           ; BSR set to: 1
  3111                           ;RemoteCan.c: 409: display_refresh = 1;
  3112  011B68  8A4A               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  3113                           
  3114                           ; BSR set to: 1
  3115                           ;RemoteCan.c: 410: if (parking_message_ID == 0) {
  3116  011B6A  0100               	movlb	0	; () banked
  3117  011B6C  51E9               	movf	_parking_message_ID& (0+255),w,b	;volatile
  3118  011B6E  A4D8               	btfss	status,2,c
  3119  011B70  D005               	goto	l8772
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;RemoteCan.c: 411: LCD_Gap();
  3123  011B72  ECA2  F0AC         	call	_LCD_Gap	;wreg free
  3124                           
  3125                           ;RemoteCan.c: 412: parking_message_ID++;
  3126  011B76  0100               	movlb	0	; () banked
  3127  011B78  2BE9               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3128  011B7A  D000               	goto	l8772
  3129  011B7C                     l8772:
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;RemoteCan.c: 413: }
  3133                           ;RemoteCan.c: 414: if (parking_message_ID == 2) {
  3134  011B7C  0E02               	movlw	2
  3135  011B7E  0100               	movlb	0	; () banked
  3136  011B80  19E9               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3137  011B82  A4D8               	btfss	status,2,c
  3138  011B84  D005               	goto	l8778
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;RemoteCan.c: 415: LCD_Park();
  3142  011B86  EC70  F0AC         	call	_LCD_Park	;wreg free
  3143                           
  3144                           ;RemoteCan.c: 416: parking_message_ID++;
  3145  011B8A  0100               	movlb	0	; () banked
  3146  011B8C  2BE9               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3147  011B8E  D000               	goto	l8778
  3148  011B90                     l8778:
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;RemoteCan.c: 417: }
  3152                           ;RemoteCan.c: 418: if (parking_message_ID == 4) {
  3153  011B90  0E04               	movlw	4
  3154  011B92  0100               	movlb	0	; () banked
  3155  011B94  19E9               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3156  011B96  A4D8               	btfss	status,2,c
  3157  011B98  D465               	goto	l8574
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;RemoteCan.c: 419: LCD_Parking();
  3161  011B9A  EC3E  F0AC         	call	_LCD_Parking	;wreg free
  3162                           
  3163                           ;RemoteCan.c: 420: parking_message_ID++;
  3164  011B9E  0100               	movlb	0	; () banked
  3165  011BA0  2BE9               	incf	_parking_message_ID& (0+255),f,b	;volatile
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;RemoteCan.c: 421: }
  3169                           ;RemoteCan.c: 422: } else {
  3170  011BA2  D460               	goto	l8574
  3171  011BA4                     l8784:
  3172                           
  3173                           ;RemoteCan.c: 423: LCD_Handler();
  3174  011BA4  EC18  F0A0         	call	_LCD_Handler	;wreg free
  3175                           
  3176                           ;RemoteCan.c: 424: }
  3177                           ;RemoteCan.c: 425: }
  3178                           ;RemoteCan.c: 426: } else {
  3179  011BA8  D45D               	goto	l8574
  3180  011BAA                     l8786:
  3181                           
  3182                           ;RemoteCan.c: 427: if (parking_message_ID == 6) {
  3183  011BAA  0E06               	movlw	6
  3184  011BAC  0100               	movlb	0	; () banked
  3185  011BAE  19E9               	xorwf	_parking_message_ID& (0+255),w,b	;volatile
  3186  011BB0  A4D8               	btfss	status,2,c
  3187  011BB2  D458               	goto	l8574
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;RemoteCan.c: 428: if (parking_error == 1) {
  3191  011BB4  AE4A               	btfss	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
  3192  011BB6  D023               	goto	l8800
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;RemoteCan.c: 429: parking_error = 0;
  3196  011BB8  9E4A               	bcf	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;RemoteCan.c: 430: LCD_Error();
  3200  011BBA  ECD4  F0AC         	call	_LCD_Error	;wreg free
  3201                           
  3202                           ;RemoteCan.c: 431: while (CANisTxReady() != 1);
  3203  011BBE  D000               	goto	l8794
  3204  011BC0                     l8794:
  3205  011BC0  EC57  F0AF         	call	_CANisTxReady	;wreg free
  3206  011BC4  06E8               	decf	wreg,f,c
  3207  011BC6  A4D8               	btfss	status,2,c
  3208  011BC8  D7FB               	goto	l8794
  3209                           
  3210                           ;RemoteCan.c: 432: data_brake [0] = 0b00000000;
  3211  011BCA  0E00               	movlw	0
  3212  011BCC  6E21               	movwf	_data_brake,c
  3213                           
  3214                           ;RemoteCan.c: 433: CANsendMessage(0b00000000110, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3215  011BCE  0E06               	movlw	6
  3216  011BD0  0100               	movlb	0	; () banked
  3217  011BD2  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  3218  011BD4  0E00               	movlw	0
  3219  011BD6  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3220  011BD8  0E00               	movlw	0
  3221  011BDA  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3222  011BDC  0E00               	movlw	0
  3223  011BDE  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3224  011BE0  0E21               	movlw	low _data_brake
  3225  011BE2  0100               	movlb	0	; () banked
  3226  011BE4  6F76               	movwf	CANsendMessage@data& (0+255),b
  3227  011BE6  0E00               	movlw	high _data_brake
  3228  011BE8  0100               	movlb	0	; () banked
  3229  011BEA  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  3230  011BEC  0E08               	movlw	8
  3231  011BEE  0100               	movlb	0	; () banked
  3232  011BF0  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  3233  011BF2  0EBC               	movlw	188
  3234  011BF4  0100               	movlb	0	; () banked
  3235  011BF6  6F79               	movwf	CANsendMessage@flags& (0+255),b
  3236  011BF8  EC09  F08E         	call	_CANsendMessage	;wreg free
  3237                           
  3238                           ;RemoteCan.c: 434: } else {
  3239  011BFC  D003               	goto	l8802
  3240  011BFE                     l8800:
  3241                           
  3242                           ;RemoteCan.c: 435: LCD_End();
  3243  011BFE  EC06  F0AD         	call	_LCD_End	;wreg free
  3244  011C02  D000               	goto	l8802
  3245  011C04                     l8802:
  3246                           
  3247                           ;RemoteCan.c: 436: }
  3248                           ;RemoteCan.c: 437: parking_message_ID = 0;
  3249  011C04  0E00               	movlw	0
  3250  011C06  0100               	movlb	0	; () banked
  3251  011C08  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;RemoteCan.c: 438: parking_message_E = 0;
  3255  011C0A  904B               	bcf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
  3256                           
  3257                           ; BSR set to: 0
  3258                           
  3259                           ; BSR set to: 0
  3260                           
  3261                           ; BSR set to: 0
  3262  011C0C  D42B               	goto	l8574
  3263                           
  3264                           ; BSR set to: 0
  3265                           
  3266                           ; BSR set to: 0
  3267  011C0E  EF5F  F000         	goto	start
  3268  011C12                     __end_of_main:
  3269                           	opt stack 0
  3270                           tblptru	equ	0xFF8
  3271                           tblptrh	equ	0xFF7
  3272                           tblptrl	equ	0xFF6
  3273                           tablat	equ	0xFF5
  3274                           prodh	equ	0xFF4
  3275                           prodl	equ	0xFF3
  3276                           postinc0	equ	0xFEE
  3277                           wreg	equ	0xFE8
  3278                           postinc2	equ	0xFDE
  3279                           fsr2h	equ	0xFDA
  3280                           fsr2l	equ	0xFD9
  3281                           status	equ	0xFD8
  3282                           
  3283 ;; *************** function _board_initialization *****************
  3284 ;; Defined at:
  3285 ;;		line 640 in file "RemoteCan.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;		None
  3290 ;; Return value:  Size  Location     Type
  3291 ;;		None               void
  3292 ;; Registers used:
  3293 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3303 ;;Total ram usage:        0 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    9
  3306 ;; This function calls:
  3307 ;;		_CANInitialize
  3308 ;;		_LCD_clear
  3309 ;;		_LCD_goto_line
  3310 ;;		_LCD_initialize
  3311 ;; This function is called by:
  3312 ;;		_main
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text1
  3317  0155B0                     __ptext1:
  3318                           	opt stack 0
  3319  0155B0                     _board_initialization:
  3320                           	opt stack 21
  3321                           
  3322                           ;RemoteCan.c: 642: LATA = 0x00;
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;incstack = 0
  3326  0155B0  0E00               	movlw	0
  3327  0155B2  6E89               	movwf	3977,c	;volatile
  3328                           
  3329                           ;RemoteCan.c: 643: TRISA = 0b00011111;
  3330  0155B4  0E1F               	movlw	31
  3331  0155B6  6E92               	movwf	3986,c	;volatile
  3332                           
  3333                           ;RemoteCan.c: 644: LATB = 0x00;
  3334  0155B8  0E00               	movlw	0
  3335  0155BA  6E8A               	movwf	3978,c	;volatile
  3336                           
  3337                           ;RemoteCan.c: 645: TRISB = 0b11111011;
  3338  0155BC  0EFB               	movlw	251
  3339  0155BE  6E93               	movwf	3987,c	;volatile
  3340                           
  3341                           ;RemoteCan.c: 646: LATC = 0x00;
  3342  0155C0  0E00               	movlw	0
  3343  0155C2  6E8B               	movwf	3979,c	;volatile
  3344                           
  3345                           ;RemoteCan.c: 647: TRISC = 0b11110000;
  3346  0155C4  0EF0               	movlw	240
  3347  0155C6  6E94               	movwf	3988,c	;volatile
  3348                           
  3349                           ;RemoteCan.c: 648: LATD = 0x00;
  3350  0155C8  0E00               	movlw	0
  3351  0155CA  6E8C               	movwf	3980,c	;volatile
  3352                           
  3353                           ;RemoteCan.c: 649: TRISD = 0x00;
  3354  0155CC  0E00               	movlw	0
  3355  0155CE  6E95               	movwf	3989,c	;volatile
  3356                           
  3357                           ;RemoteCan.c: 650: LATE = 0x00;
  3358  0155D0  0E00               	movlw	0
  3359  0155D2  6E8D               	movwf	3981,c	;volatile
  3360                           
  3361                           ;RemoteCan.c: 651: TRISE = 0x00;
  3362  0155D4  0E00               	movlw	0
  3363  0155D6  6E96               	movwf	3990,c	;volatile
  3364                           
  3365                           ;RemoteCan.c: 653: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3366  0155D8  0E06               	movlw	6
  3367  0155DA  0100               	movlb	0	; () banked
  3368  0155DC  6F80               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3369  0155DE  0E05               	movlw	5
  3370  0155E0  0100               	movlb	0	; () banked
  3371  0155E2  6F81               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3372  0155E4  0E01               	movlw	1
  3373  0155E6  0100               	movlb	0	; () banked
  3374  0155E8  6F82               	movwf	CANInitialize@SJW& (0+255),b
  3375  0155EA  0E03               	movlw	3
  3376  0155EC  0100               	movlb	0	; () banked
  3377  0155EE  6F83               	movwf	CANInitialize@BRP& (0+255),b
  3378  0155F0  0E9D               	movlw	157
  3379  0155F2  0100               	movlb	0	; () banked
  3380  0155F4  6F84               	movwf	CANInitialize@flags& (0+255),b
  3381  0155F6  0E04               	movlw	4
  3382  0155F8  EC44  F0A1         	call	_CANInitialize
  3383                           
  3384                           ;RemoteCan.c: 657: PIR2bits.TMR3IF = 0;
  3385  0155FC  92A1               	bcf	4001,1,c	;volatile
  3386                           
  3387                           ;RemoteCan.c: 658: PIR3bits.RXB1IF = 0;
  3388  0155FE  92A4               	bcf	4004,1,c	;volatile
  3389                           
  3390                           ;RemoteCan.c: 659: PIR3bits.RXB0IF = 0;
  3391  015600  90A4               	bcf	4004,0,c	;volatile
  3392                           
  3393                           ;RemoteCan.c: 662: RCONbits.IPEN = 1;
  3394  015602  8ED0               	bsf	4048,7,c	;volatile
  3395                           
  3396                           ;RemoteCan.c: 663: IPR3bits.RXB1IP = 1;
  3397  015604  82A5               	bsf	4005,1,c	;volatile
  3398                           
  3399                           ;RemoteCan.c: 664: IPR3bits.RXB0IP = 1;
  3400  015606  80A5               	bsf	4005,0,c	;volatile
  3401                           
  3402                           ;RemoteCan.c: 665: IPR2bits.TMR3IP = 0;
  3403  015608  92A2               	bcf	4002,1,c	;volatile
  3404                           
  3405                           ;RemoteCan.c: 668: ADCON1 = 0b00001101;
  3406  01560A  0E0D               	movlw	13
  3407  01560C  6EC1               	movwf	4033,c	;volatile
  3408                           
  3409                           ;RemoteCan.c: 669: ADCON0bits.CHS2 = 0;
  3410  01560E  98C2               	bcf	4034,4,c	;volatile
  3411                           
  3412                           ;RemoteCan.c: 670: ADCON0bits.CHS1 = 0;
  3413  015610  96C2               	bcf	4034,3,c	;volatile
  3414                           
  3415                           ;RemoteCan.c: 671: ADCON0bits.CHS0 = 0;
  3416  015612  94C2               	bcf	4034,2,c	;volatile
  3417                           
  3418                           ;RemoteCan.c: 672: ADCON2bits.ACQT2 = 1;
  3419  015614  8AC0               	bsf	4032,5,c	;volatile
  3420                           
  3421                           ;RemoteCan.c: 673: ADCON2bits.ACQT1 = 1;
  3422  015616  88C0               	bsf	4032,4,c	;volatile
  3423                           
  3424                           ;RemoteCan.c: 674: ADCON2bits.ACQT0 = 0;
  3425  015618  96C0               	bcf	4032,3,c	;volatile
  3426                           
  3427                           ;RemoteCan.c: 675: ADCON2bits.ADCS2 = 1;
  3428  01561A  84C0               	bsf	4032,2,c	;volatile
  3429                           
  3430                           ;RemoteCan.c: 676: ADCON2bits.ADCS1 = 0;
  3431  01561C  92C0               	bcf	4032,1,c	;volatile
  3432                           
  3433                           ;RemoteCan.c: 677: ADCON2bits.ADCS0 = 1;
  3434  01561E  80C0               	bsf	4032,0,c	;volatile
  3435                           
  3436                           ;RemoteCan.c: 678: ADCON2bits.ADFM = 0;
  3437  015620  9EC0               	bcf	4032,7,c	;volatile
  3438                           
  3439                           ;RemoteCan.c: 679: ADCON0bits.ADON = 1;
  3440  015622  80C2               	bsf	4034,0,c	;volatile
  3441                           
  3442                           ;RemoteCan.c: 682: LCD_initialize(16);
  3443  015624  0E10               	movlw	16
  3444  015626  EC6D  F0A5         	call	_LCD_initialize
  3445                           
  3446                           ;RemoteCan.c: 684: LCD_clear();
  3447  01562A  EC13  F0AF         	call	_LCD_clear	;wreg free
  3448                           
  3449                           ;RemoteCan.c: 685: LCD_goto_line(1);
  3450  01562E  0E01               	movlw	1
  3451  015630  EC7A  F0A8         	call	_LCD_goto_line
  3452                           
  3453                           ;RemoteCan.c: 689: PORTDbits.RD2 = 0;
  3454  015634  9483               	bcf	3971,2,c	;volatile
  3455                           
  3456                           ;RemoteCan.c: 690: PORTDbits.RD3 = 0;
  3457  015636  9683               	bcf	3971,3,c	;volatile
  3458                           
  3459                           ;RemoteCan.c: 693: TMR3H = 0x63;
  3460  015638  0E63               	movlw	99
  3461  01563A  6EB3               	movwf	4019,c	;volatile
  3462                           
  3463                           ;RemoteCan.c: 694: TMR3L = 0xC0;
  3464  01563C  0EC0               	movlw	192
  3465  01563E  6EB2               	movwf	4018,c	;volatile
  3466                           
  3467                           ;RemoteCan.c: 697: PIE3bits.RXB1IE = 1;
  3468  015640  82A3               	bsf	4003,1,c	;volatile
  3469                           
  3470                           ;RemoteCan.c: 698: PIE3bits.RXB0IE = 1;
  3471  015642  80A3               	bsf	4003,0,c	;volatile
  3472                           
  3473                           ;RemoteCan.c: 699: PIE2bits.TMR3IE = 1;
  3474  015644  82A0               	bsf	4000,1,c	;volatile
  3475                           
  3476                           ;RemoteCan.c: 702: T3CON = 0x01;
  3477  015646  0E01               	movlw	1
  3478  015648  6EB1               	movwf	4017,c	;volatile
  3479                           
  3480                           ;RemoteCan.c: 703: LCD_clear();
  3481  01564A  EC13  F0AF         	call	_LCD_clear	;wreg free
  3482                           
  3483                           ;RemoteCan.c: 704: INTCONbits.GIEH = 1;
  3484  01564E  8EF2               	bsf	intcon,7,c	;volatile
  3485                           
  3486                           ;RemoteCan.c: 705: INTCONbits.GIEL = 1;
  3487  015650  8CF2               	bsf	intcon,6,c	;volatile
  3488  015652  0012               	return		;funcret
  3489  015654                     __end_of_board_initialization:
  3490                           	opt stack 0
  3491                           tblptru	equ	0xFF8
  3492                           tblptrh	equ	0xFF7
  3493                           tblptrl	equ	0xFF6
  3494                           tablat	equ	0xFF5
  3495                           prodh	equ	0xFF4
  3496                           prodl	equ	0xFF3
  3497                           intcon	equ	0xFF2
  3498                           postinc0	equ	0xFEE
  3499                           wreg	equ	0xFE8
  3500                           postinc2	equ	0xFDE
  3501                           fsr2h	equ	0xFDA
  3502                           fsr2l	equ	0xFD9
  3503                           status	equ	0xFD8
  3504                           
  3505 ;; *************** function _CANInitialize *****************
  3506 ;; Defined at:
  3507 ;;		line 218 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  propSeg         1    wreg     unsigned char 
  3510 ;;  phaseSeg1       1   32[BANK0 ] unsigned char 
  3511 ;;  phaseSeg2       1   33[BANK0 ] unsigned char 
  3512 ;;  SJW             1   34[BANK0 ] unsigned char 
  3513 ;;  BRP             1   35[BANK0 ] unsigned char 
  3514 ;;  flags           1   36[BANK0 ] enum E16928
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  propSeg         1   41[BANK0 ] unsigned char 
  3517 ;;  FilterConfig    1   43[BANK0 ] unsigned char 
  3518 ;;  FilterConfig    1   42[BANK0 ] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;		None               void
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3528 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3529 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3530 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3531 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3532 ;;Total ram usage:       12 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:    4
  3535 ;; This function calls:
  3536 ;;		_CANOperationMode
  3537 ;;		_CANSetFilter
  3538 ;;		_CANSetMask
  3539 ;; This function is called by:
  3540 ;;		_board_initialization
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text2
  3545  014288                     __ptext2:
  3546                           	opt stack 0
  3547  014288                     _CANInitialize:
  3548                           	opt stack 25
  3549                           
  3550                           ;incstack = 0
  3551                           ;CANInitialize@propSeg stored from wreg
  3552  014288  0100               	movlb	0	; () banked
  3553  01428A  6F89               	movwf	CANInitialize@propSeg& (0+255),b
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3557                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3558                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3559  01428C  0E80               	movlw	128
  3560  01428E  EC99  F0AF         	call	_CANOperationMode
  3561                           
  3562                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3563  014292  0E00               	movlw	0
  3564  014294  6E70               	movwf	3952,c	;volatile
  3565                           
  3566                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3567  014296  0E00               	movlw	0
  3568  014298  6E71               	movwf	3953,c	;volatile
  3569                           
  3570                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3571  01429A  0E00               	movlw	0
  3572  01429C  6E72               	movwf	3954,c	;volatile
  3573                           
  3574                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3575  01429E  0100               	movlb	0	; () banked
  3576  0142A0  4182               	rrncf	CANInitialize@SJW& (0+255),w,b
  3577  0142A2  42E8               	rrncf	wreg,f,c
  3578  0142A4  0BC0               	andlw	192
  3579  0142A6  0100               	movlb	0	; () banked
  3580  0142A8  6F82               	movwf	CANInitialize@SJW& (0+255),b
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3584  0142AA  0100               	movlb	0	; () banked
  3585  0142AC  5182               	movf	CANInitialize@SJW& (0+255),w,b
  3586  0142AE  1270               	iorwf	3952,f,c	;volatile
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3590  0142B0  0100               	movlb	0	; () banked
  3591  0142B2  5183               	movf	CANInitialize@BRP& (0+255),w,b
  3592  0142B4  1270               	iorwf	3952,f,c	;volatile
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3596  0142B6  0100               	movlb	0	; () banked
  3597  0142B8  5189               	movf	CANInitialize@propSeg& (0+255),w,b
  3598  0142BA  1271               	iorwf	3953,f,c	;volatile
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3602  0142BC  0100               	movlb	0	; () banked
  3603  0142BE  3980               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3604  0142C0  42E8               	rrncf	wreg,f,c
  3605  0142C2  0BF8               	andlw	248
  3606  0142C4  0100               	movlb	0	; () banked
  3607  0142C6  6F80               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3611  0142C8  0100               	movlb	0	; () banked
  3612  0142CA  5180               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3613  0142CC  1271               	iorwf	3953,f,c	;volatile
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3617  0142CE  0100               	movlb	0	; () banked
  3618  0142D0  A584               	btfss	CANInitialize@flags& (0+255),2,b
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3622  0142D2  8C71               	bsf	3953,6,c	;volatile
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3626  0142D4  0100               	movlb	0	; () banked
  3627  0142D6  A184               	btfss	CANInitialize@flags& (0+255),0,b
  3628  0142D8  D002               	goto	l5656
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3632  0142DA  8E71               	bsf	3953,7,c	;volatile
  3633  0142DC  D000               	goto	l5656
  3634  0142DE                     l5656:
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3638  0142DE  0100               	movlb	0	; () banked
  3639  0142E0  5181               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3640  0142E2  1272               	iorwf	3954,f,c	;volatile
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3644  0142E4  0100               	movlb	0	; () banked
  3645  0142E6  A384               	btfss	CANInitialize@flags& (0+255),1,b
  3646  0142E8  D002               	goto	l5662
  3647                           
  3648                           ; BSR set to: 0
  3649                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3650  0142EA  8C72               	bsf	3954,6,c	;volatile
  3651  0142EC  D000               	goto	l5662
  3652  0142EE                     l5662:
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3656  0142EE  0100               	movlb	0	; () banked
  3657  0142F0  5184               	movf	CANInitialize@flags& (0+255),w,b
  3658  0142F2  0B60               	andlw	96
  3659  0142F4  6E60               	movwf	3936,c	;volatile
  3660                           
  3661                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3662  0142F6  0100               	movlb	0	; () banked
  3663  0142F8  5184               	movf	CANInitialize@flags& (0+255),w,b
  3664  0142FA  0B10               	andlw	16
  3665  0142FC  0AFF               	xorlw	255
  3666  0142FE  B4D8               	btfsc	status,2,c
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3670  014300  8460               	bsf	3936,2,c	;volatile
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3674  014302  CF60 FF50          	movff	3936,3920	;volatile
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3678  014306  0E00               	movlw	0
  3679  014308  0100               	movlb	0	; () banked
  3680  01430A  6F72               	movwf	CANSetMask@mask& (0+255),b
  3681  01430C  0E00               	movlw	0
  3682  01430E  6F73               	movwf	(CANSetMask@mask+1)& (0+255),b
  3683  014310  0E00               	movlw	0
  3684  014312  6F74               	movwf	(CANSetMask@mask+2)& (0+255),b
  3685  014314  0E00               	movlw	0
  3686  014316  6F75               	movwf	(CANSetMask@mask+3)& (0+255),b
  3687  014318  0EF7               	movlw	247
  3688  01431A  0100               	movlb	0	; () banked
  3689  01431C  6F76               	movwf	CANSetMask@type& (0+255),b
  3690  01431E  0E01               	movlw	1
  3691  014320  EC56  F09A         	call	_CANSetMask
  3692                           
  3693                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3694  014324  0E00               	movlw	0
  3695  014326  0100               	movlb	0	; () banked
  3696  014328  6F72               	movwf	CANSetMask@mask& (0+255),b
  3697  01432A  0E00               	movlw	0
  3698  01432C  6F73               	movwf	(CANSetMask@mask+1)& (0+255),b
  3699  01432E  0E00               	movlw	0
  3700  014330  6F74               	movwf	(CANSetMask@mask+2)& (0+255),b
  3701  014332  0E00               	movlw	0
  3702  014334  6F75               	movwf	(CANSetMask@mask+3)& (0+255),b
  3703  014336  0EF7               	movlw	247
  3704  014338  0100               	movlb	0	; () banked
  3705  01433A  6F76               	movwf	CANSetMask@type& (0+255),b
  3706  01433C  0E02               	movlw	2
  3707  01433E  EC56  F09A         	call	_CANSetMask
  3708                           
  3709                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3710  014342  D00F               	goto	l5674
  3711  014344                     l5668:
  3712                           
  3713                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3714  014344  0EF7               	movlw	247
  3715  014346  0100               	movlb	0	; () banked
  3716  014348  6F8A               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3717  01434A  D007               	goto	l5670
  3718  01434C                     l378:
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3722  01434C  0100               	movlb	0	; () banked
  3723  01434E  698A               	setf	CANInitialize@FilterConfig1& (0+255),b
  3724                           
  3725                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3726  014350  0100               	movlb	0	; () banked
  3727  014352  698B               	setf	CANInitialize@FilterConfig2& (0+255),b
  3728                           
  3729                           ;inc\CANlib.h: 273: break;
  3730  014354  D028               	goto	l5676
  3731  014356                     l379:
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3735  014356  0100               	movlb	0	; () banked
  3736  014358  698A               	setf	CANInitialize@FilterConfig1& (0+255),b
  3737  01435A                     l5670:
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3741  01435A  0EF7               	movlw	247
  3742  01435C  0100               	movlb	0	; () banked
  3743  01435E  6F8B               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;inc\CANlib.h: 278: }
  3747                           
  3748                           ;inc\CANlib.h: 277: break;
  3749  014360  D022               	goto	l5676
  3750  014362                     l5674:
  3751  014362  0E9F               	movlw	159
  3752  014364  0100               	movlb	0	; () banked
  3753  014366  6F85               	movwf	??_CANInitialize& (0+255),b
  3754  014368  0EFF               	movlw	255
  3755  01436A  0100               	movlb	0	; () banked
  3756  01436C  6F86               	movwf	(??_CANInitialize+1)& (0+255),b
  3757  01436E  0100               	movlb	0	; () banked
  3758  014370  5184               	movf	CANInitialize@flags& (0+255),w,b
  3759  014372  0B60               	andlw	96
  3760  014374  0100               	movlb	0	; () banked
  3761  014376  6F87               	movwf	(??_CANInitialize+2)& (0+255),b
  3762  014378  6B88               	clrf	(??_CANInitialize+3)& (0+255),b
  3763  01437A  0100               	movlb	0	; () banked
  3764  01437C  5185               	movf	??_CANInitialize& (0+255),w,b
  3765  01437E  0100               	movlb	0	; () banked
  3766  014380  1387               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3767  014382  0100               	movlb	0	; () banked
  3768  014384  5186               	movf	(??_CANInitialize+1)& (0+255),w,b
  3769  014386  0100               	movlb	0	; () banked
  3770  014388  1388               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3771                           
  3772                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3773                           ; Switch size 1, requested type "space"
  3774                           ; Number of cases is 1, Range of values is 0 to 0
  3775                           ; switch strategies available:
  3776                           ; Name         Instructions Cycles
  3777                           ; simple_byte            4     3 (average)
  3778                           ;	Chosen strategy is simple_byte
  3779  01438A  0100               	movlb	0	; () banked
  3780  01438C  5188               	movf	(??_CANInitialize+3)& (0+255),w,b
  3781  01438E  0A00               	xorlw	0	; case 0
  3782  014390  A4D8               	btfss	status,2,c
  3783  014392  D7E1               	goto	l379
  3784                           
  3785                           ; BSR set to: 0
  3786                           ; Switch size 1, requested type "space"
  3787                           ; Number of cases is 2, Range of values is 191 to 223
  3788                           ; switch strategies available:
  3789                           ; Name         Instructions Cycles
  3790                           ; simple_byte            7     4 (average)
  3791                           ;	Chosen strategy is simple_byte
  3792  014394  0100               	movlb	0	; () banked
  3793  014396  5187               	movf	(??_CANInitialize+2)& (0+255),w,b
  3794  014398  0ABF               	xorlw	191	; case 191
  3795  01439A  B4D8               	btfsc	status,2,c
  3796  01439C  D7D7               	goto	l378
  3797  01439E  0A60               	xorlw	96	; case 223
  3798  0143A0  B4D8               	btfsc	status,2,c
  3799  0143A2  D7D0               	goto	l5668
  3800  0143A4  D7D8               	goto	l379
  3801  0143A6                     l5676:
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3805  0143A6  0E00               	movlw	0
  3806  0143A8  0100               	movlb	0	; () banked
  3807  0143AA  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3808  0143AC  0E00               	movlw	0
  3809  0143AE  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3810  0143B0  0E00               	movlw	0
  3811  0143B2  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3812  0143B4  0E00               	movlw	0
  3813  0143B6  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3814  0143B8  C08A  F076         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3815  0143BC  0E00               	movlw	0
  3816  0143BE  EC00  F080         	call	_CANSetFilter
  3817                           
  3818                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3819  0143C2  0E00               	movlw	0
  3820  0143C4  0100               	movlb	0	; () banked
  3821  0143C6  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3822  0143C8  0E00               	movlw	0
  3823  0143CA  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3824  0143CC  0E00               	movlw	0
  3825  0143CE  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3826  0143D0  0E00               	movlw	0
  3827  0143D2  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3828  0143D4  C08A  F076         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3829  0143D8  0E01               	movlw	1
  3830  0143DA  EC00  F080         	call	_CANSetFilter
  3831                           
  3832                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3833  0143DE  0E00               	movlw	0
  3834  0143E0  0100               	movlb	0	; () banked
  3835  0143E2  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3836  0143E4  0E00               	movlw	0
  3837  0143E6  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3838  0143E8  0E00               	movlw	0
  3839  0143EA  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3840  0143EC  0E00               	movlw	0
  3841  0143EE  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3842  0143F0  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3843  0143F4  0E02               	movlw	2
  3844  0143F6  EC00  F080         	call	_CANSetFilter
  3845                           
  3846                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3847  0143FA  0E00               	movlw	0
  3848  0143FC  0100               	movlb	0	; () banked
  3849  0143FE  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3850  014400  0E00               	movlw	0
  3851  014402  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3852  014404  0E00               	movlw	0
  3853  014406  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3854  014408  0E00               	movlw	0
  3855  01440A  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3856  01440C  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3857  014410  0E03               	movlw	3
  3858  014412  EC00  F080         	call	_CANSetFilter
  3859                           
  3860                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3861  014416  0E00               	movlw	0
  3862  014418  0100               	movlb	0	; () banked
  3863  01441A  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3864  01441C  0E00               	movlw	0
  3865  01441E  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3866  014420  0E00               	movlw	0
  3867  014422  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3868  014424  0E00               	movlw	0
  3869  014426  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3870  014428  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3871  01442C  0E04               	movlw	4
  3872  01442E  EC00  F080         	call	_CANSetFilter
  3873                           
  3874                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3875  014432  0E00               	movlw	0
  3876  014434  0100               	movlb	0	; () banked
  3877  014436  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3878  014438  0E00               	movlw	0
  3879  01443A  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3880  01443C  0E00               	movlw	0
  3881  01443E  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3882  014440  0E00               	movlw	0
  3883  014442  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3884  014444  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3885  014448  0E05               	movlw	5
  3886  01444A  EC00  F080         	call	_CANSetFilter
  3887                           
  3888                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3889  01444E  0E00               	movlw	0
  3890  014450  EC99  F0AF         	call	_CANOperationMode
  3891  014454  0012               	return		;funcret
  3892  014456                     __end_of_CANInitialize:
  3893                           	opt stack 0
  3894                           tblptru	equ	0xFF8
  3895                           tblptrh	equ	0xFF7
  3896                           tblptrl	equ	0xFF6
  3897                           tablat	equ	0xFF5
  3898                           prodh	equ	0xFF4
  3899                           prodl	equ	0xFF3
  3900                           intcon	equ	0xFF2
  3901                           postinc0	equ	0xFEE
  3902                           wreg	equ	0xFE8
  3903                           postinc2	equ	0xFDE
  3904                           fsr2h	equ	0xFDA
  3905                           fsr2l	equ	0xFD9
  3906                           status	equ	0xFD8
  3907                           
  3908 ;; *************** function _CANSetMask *****************
  3909 ;; Defined at:
  3910 ;;		line 640 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  numBuffer       1    wreg     enum E16962
  3913 ;;  mask            4   18[BANK0 ] unsigned long 
  3914 ;;  type            1   22[BANK0 ] enum E16928
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  numBuffer       1   27[BANK0 ] enum E16962
  3917 ;;  tamp            4   28[BANK0 ] unsigned long 
  3918 ;; Return value:  Size  Location     Type
  3919 ;;		None               void
  3920 ;; Registers used:
  3921 ;;		wreg, status,2, status,0
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3927 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3928 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3929 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3930 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3931 ;;Total ram usage:       14 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:    3
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_CANInitialize
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           	psect	text3
  3942  0134AC                     __ptext3:
  3943                           	opt stack 0
  3944  0134AC                     _CANSetMask:
  3945                           	opt stack 25
  3946                           
  3947                           ;incstack = 0
  3948                           ;CANSetMask@numBuffer stored from wreg
  3949  0134AC  0100               	movlb	0	; () banked
  3950  0134AE  6F7B               	movwf	CANSetMask@numBuffer& (0+255),b
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3954  0134B0  0100               	movlb	0	; () banked
  3955  0134B2  057B               	decf	CANSetMask@numBuffer& (0+255),w,b
  3956  0134B4  A4D8               	btfss	status,2,c
  3957  0134B6  D057               	goto	l4888
  3958                           
  3959                           ; BSR set to: 0
  3960  0134B8  0100               	movlb	0	; () banked
  3961  0134BA  2976               	incf	CANSetMask@type& (0+255),w,b
  3962  0134BC  A4D8               	btfss	status,2,c
  3963  0134BE  D053               	goto	l4888
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;inc\CANlib.h: 644: {
  3967                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3968  0134C0  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  3969  0134C4  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3970  0134C8  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3971  0134CC  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3972  0134D0  0E04               	movlw	4
  3973  0134D2  D006               	goto	u5110
  3974  0134D4                     u5115:
  3975  0134D4  0100               	movlb	0	; () banked
  3976  0134D6  90D8               	bcf	status,0,c
  3977  0134D8  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3978  0134DA  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3979  0134DC  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3980  0134DE  3377               	rrcf	??_CANSetMask& (0+255),f,b
  3981  0134E0                     u5110:
  3982  0134E0  2EE8               	decfsz	wreg,f,c
  3983  0134E2  D7F8               	goto	u5115
  3984  0134E4  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3985  0134E8  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3986  0134EC  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3987  0134F0  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3991  0134F4  0100               	movlb	0	; () banked
  3992  0134F6  517C               	movf	CANSetMask@tamp& (0+255),w,b
  3993  0134F8  0100               	movlb	0	; () banked
  3994  0134FA  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3995  0134FC  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3996  0134FE  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3997  013500  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  4001  013502  C07C  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  4005  013506  0E07               	movlw	7
  4006  013508  0100               	movlb	0	; () banked
  4007  01350A  1572               	andwf	CANSetMask@mask& (0+255),w,b
  4008  01350C  0100               	movlb	0	; () banked
  4009  01350E  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4010  013510  0E00               	movlw	0
  4011  013512  0100               	movlb	0	; () banked
  4012  013514  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4013  013516  0100               	movlb	0	; () banked
  4014  013518  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4015  01351A  0E00               	movlw	0
  4016  01351C  0100               	movlb	0	; () banked
  4017  01351E  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4018  013520  0100               	movlb	0	; () banked
  4019  013522  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4020  013524  0E00               	movlw	0
  4021  013526  0100               	movlb	0	; () banked
  4022  013528  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4023  01352A  0100               	movlb	0	; () banked
  4024  01352C  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  4028  01352E  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  4029  013532  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4030  013536  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4031  01353A  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4032  01353E  0E05               	movlw	5
  4033  013540                     u5125:
  4034  013540  90D8               	bcf	status,0,c
  4035  013542  0100               	movlb	0	; () banked
  4036  013544  3777               	rlcf	??_CANSetMask& (0+255),f,b
  4037  013546  3778               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4038  013548  3779               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4039  01354A  377A               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4040  01354C  2EE8               	decfsz	wreg,f,c
  4041  01354E  D7F8               	goto	u5125
  4042  013550  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4043  013554  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4044  013558  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4045  01355C  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  4049  013560  C07C  FF19         	movff	CANSetMask@tamp,3865	;volatile
  4050  013564  D000               	goto	l4888
  4051  013566                     l4888:
  4052                           
  4053                           ; BSR set to: 0
  4054                           ;inc\CANlib.h: 652: }
  4055                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  4056  013566  0E02               	movlw	2
  4057  013568  0100               	movlb	0	; () banked
  4058  01356A  197B               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4059  01356C  A4D8               	btfss	status,2,c
  4060  01356E  D057               	goto	l4904
  4061                           
  4062                           ; BSR set to: 0
  4063  013570  0100               	movlb	0	; () banked
  4064  013572  2976               	incf	CANSetMask@type& (0+255),w,b
  4065  013574  A4D8               	btfss	status,2,c
  4066  013576  D053               	goto	l4904
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;inc\CANlib.h: 655: {
  4070                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  4071  013578  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  4072  01357C  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4073  013580  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4074  013584  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4075  013588  0E04               	movlw	4
  4076  01358A  D006               	goto	u5150
  4077  01358C                     u5155:
  4078  01358C  0100               	movlb	0	; () banked
  4079  01358E  90D8               	bcf	status,0,c
  4080  013590  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4081  013592  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4082  013594  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4083  013596  3377               	rrcf	??_CANSetMask& (0+255),f,b
  4084  013598                     u5150:
  4085  013598  2EE8               	decfsz	wreg,f,c
  4086  01359A  D7F8               	goto	u5155
  4087  01359C  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4088  0135A0  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4089  0135A4  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4090  0135A8  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  4094  0135AC  0100               	movlb	0	; () banked
  4095  0135AE  517C               	movf	CANSetMask@tamp& (0+255),w,b
  4096  0135B0  0100               	movlb	0	; () banked
  4097  0135B2  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4098  0135B4  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4099  0135B6  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4100  0135B8  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  4104  0135BA  C07C  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  4108  0135BE  0E07               	movlw	7
  4109  0135C0  0100               	movlb	0	; () banked
  4110  0135C2  1572               	andwf	CANSetMask@mask& (0+255),w,b
  4111  0135C4  0100               	movlb	0	; () banked
  4112  0135C6  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4113  0135C8  0E00               	movlw	0
  4114  0135CA  0100               	movlb	0	; () banked
  4115  0135CC  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4116  0135CE  0100               	movlb	0	; () banked
  4117  0135D0  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4118  0135D2  0E00               	movlw	0
  4119  0135D4  0100               	movlb	0	; () banked
  4120  0135D6  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4121  0135D8  0100               	movlb	0	; () banked
  4122  0135DA  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4123  0135DC  0E00               	movlw	0
  4124  0135DE  0100               	movlb	0	; () banked
  4125  0135E0  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4126  0135E2  0100               	movlb	0	; () banked
  4127  0135E4  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  4131  0135E6  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  4132  0135EA  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4133  0135EE  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4134  0135F2  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4135  0135F6  0E05               	movlw	5
  4136  0135F8                     u5165:
  4137  0135F8  90D8               	bcf	status,0,c
  4138  0135FA  0100               	movlb	0	; () banked
  4139  0135FC  3777               	rlcf	??_CANSetMask& (0+255),f,b
  4140  0135FE  3778               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4141  013600  3779               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4142  013602  377A               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4143  013604  2EE8               	decfsz	wreg,f,c
  4144  013606  D7F8               	goto	u5165
  4145  013608  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4146  01360C  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4147  013610  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4148  013614  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4152  013618  C07C  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4153  01361C  D000               	goto	l4904
  4154  01361E                     l4904:
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;inc\CANlib.h: 663: }
  4158                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4159  01361E  0100               	movlb	0	; () banked
  4160  013620  057B               	decf	CANSetMask@numBuffer& (0+255),w,b
  4161  013622  A4D8               	btfss	status,2,c
  4162  013624  D089               	goto	l4936
  4163                           
  4164                           ; BSR set to: 0
  4165  013626  0EF7               	movlw	247
  4166  013628  0100               	movlb	0	; () banked
  4167  01362A  1976               	xorwf	CANSetMask@type& (0+255),w,b
  4168  01362C  A4D8               	btfss	status,2,c
  4169  01362E  D084               	goto	l4936
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;inc\CANlib.h: 666: {
  4173                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4174  013630  0100               	movlb	0	; () banked
  4175  013632  5172               	movf	CANSetMask@mask& (0+255),w,b
  4176  013634  0100               	movlb	0	; () banked
  4177  013636  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4178  013638  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4179  01363A  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4180  01363C  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4184  01363E  C07C  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4188  013642  0E00               	movlw	0
  4189  013644  0100               	movlb	0	; () banked
  4190  013646  1572               	andwf	CANSetMask@mask& (0+255),w,b
  4191  013648  0100               	movlb	0	; () banked
  4192  01364A  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4193  01364C  0EFF               	movlw	255
  4194  01364E  0100               	movlb	0	; () banked
  4195  013650  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4196  013652  0100               	movlb	0	; () banked
  4197  013654  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4198  013656  0E00               	movlw	0
  4199  013658  0100               	movlb	0	; () banked
  4200  01365A  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4201  01365C  0100               	movlb	0	; () banked
  4202  01365E  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4203  013660  0E00               	movlw	0
  4204  013662  0100               	movlb	0	; () banked
  4205  013664  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4206  013666  0100               	movlb	0	; () banked
  4207  013668  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4211  01366A  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  4212  01366E  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4213  013672  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4214  013676  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4215  01367A  C078  F077         	movff	??_CANSetMask+1,??_CANSetMask
  4216  01367E  C079  F078         	movff	??_CANSetMask+2,??_CANSetMask+1
  4217  013682  C07A  F079         	movff	??_CANSetMask+3,??_CANSetMask+2
  4218  013686  0100               	movlb	0	; () banked
  4219  013688  6B7A               	clrf	(??_CANSetMask+3)& (0+255),b
  4220  01368A  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4221  01368E  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4222  013692  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4223  013696  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4227  01369A  C07C  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4231  01369E  0100               	movlb	0	; () banked
  4232  0136A0  A174               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4233  0136A2  D003               	goto	l452
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4237  0136A4  010F               	movlb	15	; () banked
  4238  0136A6  8119               	bsf	25,0,b	;volatile
  4239  0136A8  D002               	goto	l453
  4240  0136AA                     l452:
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;inc\CANlib.h: 676: else
  4244                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4245  0136AA  010F               	movlb	15	; () banked
  4246  0136AC  9119               	bcf	25,0,b	;volatile
  4247  0136AE                     l453:
  4248                           
  4249                           ; BSR set to: 15
  4250                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4251  0136AE  0100               	movlb	0	; () banked
  4252  0136B0  A374               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4253  0136B2  D003               	goto	l454
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4257  0136B4  010F               	movlb	15	; () banked
  4258  0136B6  8319               	bsf	25,1,b	;volatile
  4259  0136B8  D002               	goto	l455
  4260  0136BA                     l454:
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;inc\CANlib.h: 681: else
  4264                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4265  0136BA  010F               	movlb	15	; () banked
  4266  0136BC  9319               	bcf	25,1,b	;volatile
  4267  0136BE                     l455:
  4268                           
  4269                           ; BSR set to: 15
  4270                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4271  0136BE  0100               	movlb	0	; () banked
  4272  0136C0  A574               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4273  0136C2  D003               	goto	l456
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4277  0136C4  010F               	movlb	15	; () banked
  4278  0136C6  8B19               	bsf	25,5,b	;volatile
  4279  0136C8  D002               	goto	l457
  4280  0136CA                     l456:
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;inc\CANlib.h: 686: else
  4284                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4285  0136CA  010F               	movlb	15	; () banked
  4286  0136CC  9B19               	bcf	25,5,b	;volatile
  4287  0136CE                     l457:
  4288                           
  4289                           ; BSR set to: 15
  4290                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4291  0136CE  0100               	movlb	0	; () banked
  4292  0136D0  A774               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4293  0136D2  D003               	goto	l458
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4297  0136D4  010F               	movlb	15	; () banked
  4298  0136D6  8D19               	bsf	25,6,b	;volatile
  4299  0136D8  D002               	goto	l459
  4300  0136DA                     l458:
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;inc\CANlib.h: 691: else
  4304                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4305  0136DA  010F               	movlb	15	; () banked
  4306  0136DC  9D19               	bcf	25,6,b	;volatile
  4307  0136DE                     l459:
  4308                           
  4309                           ; BSR set to: 15
  4310                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4311  0136DE  0100               	movlb	0	; () banked
  4312  0136E0  A974               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4313  0136E2  D003               	goto	l460
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4317  0136E4  010F               	movlb	15	; () banked
  4318  0136E6  8F19               	bsf	25,7,b	;volatile
  4319  0136E8  D003               	goto	l4930
  4320  0136EA                     l460:
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;inc\CANlib.h: 696: else
  4324                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4325  0136EA  010F               	movlb	15	; () banked
  4326  0136EC  9F19               	bcf	25,7,b	;volatile
  4327  0136EE  D000               	goto	l4930
  4328  0136F0                     l4930:
  4329                           
  4330                           ; BSR set to: 15
  4331                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4332  0136F0  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  4333  0136F4  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4334  0136F8  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4335  0136FC  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4336  013700  0E16               	movlw	22
  4337  013702  D006               	goto	u5240
  4338  013704                     u5245:
  4339  013704  0100               	movlb	0	; () banked
  4340  013706  90D8               	bcf	status,0,c
  4341  013708  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4342  01370A  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4343  01370C  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4344  01370E  3377               	rrcf	??_CANSetMask& (0+255),f,b
  4345  013710                     u5240:
  4346  013710  2EE8               	decfsz	wreg,f,c
  4347  013712  D7F8               	goto	u5245
  4348  013714  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4349  013718  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4350  01371C  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4351  013720  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4355  013724  0100               	movlb	0	; () banked
  4356  013726  517C               	movf	CANSetMask@tamp& (0+255),w,b
  4357  013728  0100               	movlb	0	; () banked
  4358  01372A  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4359  01372C  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4360  01372E  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4361  013730  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4365  013732  C07C  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4366  013736  D000               	goto	l4936
  4367  013738                     l4936:
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;inc\CANlib.h: 702: }
  4371                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4372  013738  0E02               	movlw	2
  4373  01373A  0100               	movlb	0	; () banked
  4374  01373C  197B               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4375  01373E  A4D8               	btfss	status,2,c
  4376  013740  0012               	return	
  4377                           
  4378                           ; BSR set to: 0
  4379  013742  0EF7               	movlw	247
  4380  013744  0100               	movlb	0	; () banked
  4381  013746  1976               	xorwf	CANSetMask@type& (0+255),w,b
  4382  013748  A4D8               	btfss	status,2,c
  4383  01374A  0012               	return	
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;inc\CANlib.h: 705: {
  4387                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4388  01374C  0100               	movlb	0	; () banked
  4389  01374E  5172               	movf	CANSetMask@mask& (0+255),w,b
  4390  013750  0100               	movlb	0	; () banked
  4391  013752  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4392  013754  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4393  013756  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4394  013758  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4398  01375A  C07C  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4402  01375E  0E00               	movlw	0
  4403  013760  0100               	movlb	0	; () banked
  4404  013762  1572               	andwf	CANSetMask@mask& (0+255),w,b
  4405  013764  0100               	movlb	0	; () banked
  4406  013766  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4407  013768  0EFF               	movlw	255
  4408  01376A  0100               	movlb	0	; () banked
  4409  01376C  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4410  01376E  0100               	movlb	0	; () banked
  4411  013770  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4412  013772  0E00               	movlw	0
  4413  013774  0100               	movlb	0	; () banked
  4414  013776  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4415  013778  0100               	movlb	0	; () banked
  4416  01377A  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4417  01377C  0E00               	movlw	0
  4418  01377E  0100               	movlb	0	; () banked
  4419  013780  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4420  013782  0100               	movlb	0	; () banked
  4421  013784  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4425  013786  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  4426  01378A  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4427  01378E  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4428  013792  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4429  013796  C078  F077         	movff	??_CANSetMask+1,??_CANSetMask
  4430  01379A  C079  F078         	movff	??_CANSetMask+2,??_CANSetMask+1
  4431  01379E  C07A  F079         	movff	??_CANSetMask+3,??_CANSetMask+2
  4432  0137A2  0100               	movlb	0	; () banked
  4433  0137A4  6B7A               	clrf	(??_CANSetMask+3)& (0+255),b
  4434  0137A6  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4435  0137AA  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4436  0137AE  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4437  0137B2  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4441  0137B6  C07C  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4445  0137BA  0100               	movlb	0	; () banked
  4446  0137BC  A174               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4447  0137BE  D003               	goto	l463
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4451  0137C0  010F               	movlb	15	; () banked
  4452  0137C2  811D               	bsf	29,0,b	;volatile
  4453  0137C4  D002               	goto	l464
  4454  0137C6                     l463:
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;inc\CANlib.h: 715: else
  4458                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4459  0137C6  010F               	movlb	15	; () banked
  4460  0137C8  911D               	bcf	29,0,b	;volatile
  4461  0137CA                     l464:
  4462                           
  4463                           ; BSR set to: 15
  4464                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4465  0137CA  0100               	movlb	0	; () banked
  4466  0137CC  A374               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4467  0137CE  D003               	goto	l465
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4471  0137D0  010F               	movlb	15	; () banked
  4472  0137D2  831D               	bsf	29,1,b	;volatile
  4473  0137D4  D002               	goto	l466
  4474  0137D6                     l465:
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;inc\CANlib.h: 720: else
  4478                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4479  0137D6  010F               	movlb	15	; () banked
  4480  0137D8  931D               	bcf	29,1,b	;volatile
  4481  0137DA                     l466:
  4482                           
  4483                           ; BSR set to: 15
  4484                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4485  0137DA  0100               	movlb	0	; () banked
  4486  0137DC  A574               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4487  0137DE  D003               	goto	l467
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4491  0137E0  010F               	movlb	15	; () banked
  4492  0137E2  8B1D               	bsf	29,5,b	;volatile
  4493  0137E4  D002               	goto	l468
  4494  0137E6                     l467:
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;inc\CANlib.h: 725: else
  4498                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4499  0137E6  010F               	movlb	15	; () banked
  4500  0137E8  9B1D               	bcf	29,5,b	;volatile
  4501  0137EA                     l468:
  4502                           
  4503                           ; BSR set to: 15
  4504                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4505  0137EA  0100               	movlb	0	; () banked
  4506  0137EC  A774               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4507  0137EE  D003               	goto	l469
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4511  0137F0  010F               	movlb	15	; () banked
  4512  0137F2  8D1D               	bsf	29,6,b	;volatile
  4513  0137F4  D002               	goto	l470
  4514  0137F6                     l469:
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;inc\CANlib.h: 730: else
  4518                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4519  0137F6  010F               	movlb	15	; () banked
  4520  0137F8  9D1D               	bcf	29,6,b	;volatile
  4521  0137FA                     l470:
  4522                           
  4523                           ; BSR set to: 15
  4524                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4525  0137FA  0100               	movlb	0	; () banked
  4526  0137FC  A974               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4527  0137FE  D003               	goto	l471
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4531  013800  010F               	movlb	15	; () banked
  4532  013802  8F1D               	bsf	29,7,b	;volatile
  4533  013804  D003               	goto	l4962
  4534  013806                     l471:
  4535                           
  4536                           ; BSR set to: 0
  4537                           ;inc\CANlib.h: 735: else
  4538                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4539  013806  010F               	movlb	15	; () banked
  4540  013808  9F1D               	bcf	29,7,b	;volatile
  4541  01380A  D000               	goto	l4962
  4542  01380C                     l4962:
  4543                           
  4544                           ; BSR set to: 15
  4545                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4546  01380C  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  4547  013810  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4548  013814  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4549  013818  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4550  01381C  0E16               	movlw	22
  4551  01381E  D006               	goto	u5320
  4552  013820                     u5325:
  4553  013820  0100               	movlb	0	; () banked
  4554  013822  90D8               	bcf	status,0,c
  4555  013824  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4556  013826  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4557  013828  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4558  01382A  3377               	rrcf	??_CANSetMask& (0+255),f,b
  4559  01382C                     u5320:
  4560  01382C  2EE8               	decfsz	wreg,f,c
  4561  01382E  D7F8               	goto	u5325
  4562  013830  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4563  013834  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4564  013838  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4565  01383C  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4566                           
  4567                           ; BSR set to: 0
  4568                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4569  013840  0100               	movlb	0	; () banked
  4570  013842  517C               	movf	CANSetMask@tamp& (0+255),w,b
  4571  013844  0100               	movlb	0	; () banked
  4572  013846  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4573  013848  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4574  01384A  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4575  01384C  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4579  01384E  C07C  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4580  013852  0012               	return	
  4581                           
  4582                           ; BSR set to: 0
  4583                           
  4584                           ; BSR set to: 0
  4585  013854  0012               	return		;funcret
  4586  013856                     __end_of_CANSetMask:
  4587                           	opt stack 0
  4588                           tblptru	equ	0xFF8
  4589                           tblptrh	equ	0xFF7
  4590                           tblptrl	equ	0xFF6
  4591                           tablat	equ	0xFF5
  4592                           prodh	equ	0xFF4
  4593                           prodl	equ	0xFF3
  4594                           intcon	equ	0xFF2
  4595                           postinc0	equ	0xFEE
  4596                           wreg	equ	0xFE8
  4597                           postinc2	equ	0xFDE
  4598                           fsr2h	equ	0xFDA
  4599                           fsr2l	equ	0xFD9
  4600                           status	equ	0xFD8
  4601                           
  4602 ;; *************** function _CANSetFilter *****************
  4603 ;; Defined at:
  4604 ;;		line 748 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  numBuffer       1    wreg     enum E16965
  4607 ;;  filter          4   18[BANK0 ] unsigned long 
  4608 ;;  type            1   22[BANK0 ] enum E16928
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;  numBuffer       1   27[BANK0 ] enum E16965
  4611 ;;  tamp            4   28[BANK0 ] unsigned long 
  4612 ;; Return value:  Size  Location     Type
  4613 ;;		None               void
  4614 ;; Registers used:
  4615 ;;		wreg, status,2, status,0
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4621 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4622 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4623 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4624 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4625 ;;Total ram usage:       14 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; Hardware stack levels required when called:    3
  4628 ;; This function calls:
  4629 ;;		Nothing
  4630 ;; This function is called by:
  4631 ;;		_CANInitialize
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text4
  4636  010000                     __ptext4:
  4637                           	opt stack 0
  4638  010000                     _CANSetFilter:
  4639                           	opt stack 25
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;incstack = 0
  4643                           ;CANSetFilter@numBuffer stored from wreg
  4644  010000  0100               	movlb	0	; () banked
  4645  010002  6F7B               	movwf	CANSetFilter@numBuffer& (0+255),b
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;inc\CANlib.h: 750: unsigned long tamp;
  4649                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4650  010004  0100               	movlb	0	; () banked
  4651  010006  517B               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4652  010008  0100               	movlb	0	; () banked
  4653  01000A  A4D8               	btfss	status,2,c
  4654  01000C  D059               	goto	l4986
  4655                           
  4656                           ; BSR set to: 0
  4657  01000E  0100               	movlb	0	; () banked
  4658  010010  2976               	incf	CANSetFilter@type& (0+255),w,b
  4659  010012  A4D8               	btfss	status,2,c
  4660  010014  D055               	goto	l4986
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;inc\CANlib.h: 753: {
  4664                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4665  010016  010F               	movlb	15	; () banked
  4666  010018  9701               	bcf	1,3,b	;volatile
  4667                           
  4668                           ; BSR set to: 15
  4669                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4670  01001A  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4671  01001E  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4672  010022  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4673  010026  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4674  01002A  0E04               	movlw	4
  4675  01002C  D006               	goto	u5350
  4676  01002E                     u5355:
  4677  01002E  0100               	movlb	0	; () banked
  4678  010030  90D8               	bcf	status,0,c
  4679  010032  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4680  010034  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4681  010036  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4682  010038  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4683  01003A                     u5350:
  4684  01003A  2EE8               	decfsz	wreg,f,c
  4685  01003C  D7F8               	goto	u5355
  4686  01003E  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4687  010042  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4688  010046  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4689  01004A  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4690                           
  4691                           ; BSR set to: 0
  4692                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4693  01004E  0100               	movlb	0	; () banked
  4694  010050  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4695  010052  0100               	movlb	0	; () banked
  4696  010054  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4697  010056  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4698  010058  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4699  01005A  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4703  01005C  C07C  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4707  010060  0E07               	movlw	7
  4708  010062  0100               	movlb	0	; () banked
  4709  010064  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4710  010066  0100               	movlb	0	; () banked
  4711  010068  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4712  01006A  0E00               	movlw	0
  4713  01006C  0100               	movlb	0	; () banked
  4714  01006E  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4715  010070  0100               	movlb	0	; () banked
  4716  010072  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4717  010074  0E00               	movlw	0
  4718  010076  0100               	movlb	0	; () banked
  4719  010078  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4720  01007A  0100               	movlb	0	; () banked
  4721  01007C  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4722  01007E  0E00               	movlw	0
  4723  010080  0100               	movlb	0	; () banked
  4724  010082  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4725  010084  0100               	movlb	0	; () banked
  4726  010086  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4727                           
  4728                           ; BSR set to: 0
  4729                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4730  010088  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4731  01008C  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4732  010090  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4733  010094  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4734  010098  0E05               	movlw	5
  4735  01009A                     u5365:
  4736  01009A  90D8               	bcf	status,0,c
  4737  01009C  0100               	movlb	0	; () banked
  4738  01009E  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4739  0100A0  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4740  0100A2  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4741  0100A4  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4742  0100A6  2EE8               	decfsz	wreg,f,c
  4743  0100A8  D7F8               	goto	u5365
  4744  0100AA  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4745  0100AE  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4746  0100B2  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4747  0100B6  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4751  0100BA  C07C  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4752  0100BE  D000               	goto	l4986
  4753  0100C0                     l4986:
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;inc\CANlib.h: 763: }
  4757                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4758  0100C0  0100               	movlb	0	; () banked
  4759  0100C2  057B               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4760  0100C4  A4D8               	btfss	status,2,c
  4761  0100C6  D059               	goto	l5004
  4762                           
  4763                           ; BSR set to: 0
  4764  0100C8  0100               	movlb	0	; () banked
  4765  0100CA  2976               	incf	CANSetFilter@type& (0+255),w,b
  4766  0100CC  A4D8               	btfss	status,2,c
  4767  0100CE  D055               	goto	l5004
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;inc\CANlib.h: 766: {
  4771                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4772  0100D0  010F               	movlb	15	; () banked
  4773  0100D2  9705               	bcf	5,3,b	;volatile
  4774                           
  4775                           ; BSR set to: 15
  4776                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4777  0100D4  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4778  0100D8  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4779  0100DC  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4780  0100E0  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4781  0100E4  0E04               	movlw	4
  4782  0100E6  D006               	goto	u5390
  4783  0100E8                     u5395:
  4784  0100E8  0100               	movlb	0	; () banked
  4785  0100EA  90D8               	bcf	status,0,c
  4786  0100EC  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4787  0100EE  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4788  0100F0  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4789  0100F2  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4790  0100F4                     u5390:
  4791  0100F4  2EE8               	decfsz	wreg,f,c
  4792  0100F6  D7F8               	goto	u5395
  4793  0100F8  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4794  0100FC  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4795  010100  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4796  010104  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4800  010108  0100               	movlb	0	; () banked
  4801  01010A  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4802  01010C  0100               	movlb	0	; () banked
  4803  01010E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4804  010110  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4805  010112  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4806  010114  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4810  010116  C07C  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4814  01011A  0E07               	movlw	7
  4815  01011C  0100               	movlb	0	; () banked
  4816  01011E  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4817  010120  0100               	movlb	0	; () banked
  4818  010122  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4819  010124  0E00               	movlw	0
  4820  010126  0100               	movlb	0	; () banked
  4821  010128  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4822  01012A  0100               	movlb	0	; () banked
  4823  01012C  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4824  01012E  0E00               	movlw	0
  4825  010130  0100               	movlb	0	; () banked
  4826  010132  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4827  010134  0100               	movlb	0	; () banked
  4828  010136  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4829  010138  0E00               	movlw	0
  4830  01013A  0100               	movlb	0	; () banked
  4831  01013C  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4832  01013E  0100               	movlb	0	; () banked
  4833  010140  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4837  010142  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4838  010146  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4839  01014A  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4840  01014E  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4841  010152  0E05               	movlw	5
  4842  010154                     u5405:
  4843  010154  90D8               	bcf	status,0,c
  4844  010156  0100               	movlb	0	; () banked
  4845  010158  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4846  01015A  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4847  01015C  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4848  01015E  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4849  010160  2EE8               	decfsz	wreg,f,c
  4850  010162  D7F8               	goto	u5405
  4851  010164  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4852  010168  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4853  01016C  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4854  010170  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4858  010174  C07C  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4859  010178  D000               	goto	l5004
  4860  01017A                     l5004:
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;inc\CANlib.h: 776: }
  4864                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4865  01017A  0E02               	movlw	2
  4866  01017C  0100               	movlb	0	; () banked
  4867  01017E  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4868  010180  A4D8               	btfss	status,2,c
  4869  010182  D059               	goto	l5022
  4870                           
  4871                           ; BSR set to: 0
  4872  010184  0100               	movlb	0	; () banked
  4873  010186  2976               	incf	CANSetFilter@type& (0+255),w,b
  4874  010188  A4D8               	btfss	status,2,c
  4875  01018A  D055               	goto	l5022
  4876                           
  4877                           ; BSR set to: 0
  4878                           ;inc\CANlib.h: 779: {
  4879                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4880  01018C  010F               	movlb	15	; () banked
  4881  01018E  9709               	bcf	9,3,b	;volatile
  4882                           
  4883                           ; BSR set to: 15
  4884                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4885  010190  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4886  010194  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4887  010198  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4888  01019C  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4889  0101A0  0E04               	movlw	4
  4890  0101A2  D006               	goto	u5430
  4891  0101A4                     u5435:
  4892  0101A4  0100               	movlb	0	; () banked
  4893  0101A6  90D8               	bcf	status,0,c
  4894  0101A8  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4895  0101AA  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4896  0101AC  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4897  0101AE  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4898  0101B0                     u5430:
  4899  0101B0  2EE8               	decfsz	wreg,f,c
  4900  0101B2  D7F8               	goto	u5435
  4901  0101B4  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4902  0101B8  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4903  0101BC  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4904  0101C0  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4908  0101C4  0100               	movlb	0	; () banked
  4909  0101C6  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4910  0101C8  0100               	movlb	0	; () banked
  4911  0101CA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4912  0101CC  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4913  0101CE  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4914  0101D0  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4918  0101D2  C07C  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4922  0101D6  0E07               	movlw	7
  4923  0101D8  0100               	movlb	0	; () banked
  4924  0101DA  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4925  0101DC  0100               	movlb	0	; () banked
  4926  0101DE  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4927  0101E0  0E00               	movlw	0
  4928  0101E2  0100               	movlb	0	; () banked
  4929  0101E4  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4930  0101E6  0100               	movlb	0	; () banked
  4931  0101E8  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4932  0101EA  0E00               	movlw	0
  4933  0101EC  0100               	movlb	0	; () banked
  4934  0101EE  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4935  0101F0  0100               	movlb	0	; () banked
  4936  0101F2  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4937  0101F4  0E00               	movlw	0
  4938  0101F6  0100               	movlb	0	; () banked
  4939  0101F8  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4940  0101FA  0100               	movlb	0	; () banked
  4941  0101FC  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4945  0101FE  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4946  010202  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4947  010206  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4948  01020A  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4949  01020E  0E05               	movlw	5
  4950  010210                     u5445:
  4951  010210  90D8               	bcf	status,0,c
  4952  010212  0100               	movlb	0	; () banked
  4953  010214  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4954  010216  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4955  010218  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4956  01021A  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4957  01021C  2EE8               	decfsz	wreg,f,c
  4958  01021E  D7F8               	goto	u5445
  4959  010220  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4960  010224  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4961  010228  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4962  01022C  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4966  010230  C07C  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4967  010234  D000               	goto	l5022
  4968  010236                     l5022:
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;inc\CANlib.h: 789: }
  4972                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4973  010236  0E03               	movlw	3
  4974  010238  0100               	movlb	0	; () banked
  4975  01023A  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4976  01023C  A4D8               	btfss	status,2,c
  4977  01023E  D059               	goto	l5040
  4978                           
  4979                           ; BSR set to: 0
  4980  010240  0100               	movlb	0	; () banked
  4981  010242  2976               	incf	CANSetFilter@type& (0+255),w,b
  4982  010244  A4D8               	btfss	status,2,c
  4983  010246  D055               	goto	l5040
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;inc\CANlib.h: 792: {
  4987                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4988  010248  010F               	movlb	15	; () banked
  4989  01024A  970D               	bcf	13,3,b	;volatile
  4990                           
  4991                           ; BSR set to: 15
  4992                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4993  01024C  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4994  010250  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4995  010254  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4996  010258  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4997  01025C  0E04               	movlw	4
  4998  01025E  D006               	goto	u5470
  4999  010260                     u5475:
  5000  010260  0100               	movlb	0	; () banked
  5001  010262  90D8               	bcf	status,0,c
  5002  010264  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5003  010266  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5004  010268  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5005  01026A  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5006  01026C                     u5470:
  5007  01026C  2EE8               	decfsz	wreg,f,c
  5008  01026E  D7F8               	goto	u5475
  5009  010270  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5010  010274  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5011  010278  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5012  01027C  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  5016  010280  0100               	movlb	0	; () banked
  5017  010282  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5018  010284  0100               	movlb	0	; () banked
  5019  010286  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5020  010288  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5021  01028A  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5022  01028C  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  5026  01028E  C07C  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  5030  010292  0E07               	movlw	7
  5031  010294  0100               	movlb	0	; () banked
  5032  010296  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5033  010298  0100               	movlb	0	; () banked
  5034  01029A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5035  01029C  0E00               	movlw	0
  5036  01029E  0100               	movlb	0	; () banked
  5037  0102A0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5038  0102A2  0100               	movlb	0	; () banked
  5039  0102A4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5040  0102A6  0E00               	movlw	0
  5041  0102A8  0100               	movlb	0	; () banked
  5042  0102AA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5043  0102AC  0100               	movlb	0	; () banked
  5044  0102AE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5045  0102B0  0E00               	movlw	0
  5046  0102B2  0100               	movlb	0	; () banked
  5047  0102B4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5048  0102B6  0100               	movlb	0	; () banked
  5049  0102B8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  5053  0102BA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5054  0102BE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5055  0102C2  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5056  0102C6  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5057  0102CA  0E05               	movlw	5
  5058  0102CC                     u5485:
  5059  0102CC  90D8               	bcf	status,0,c
  5060  0102CE  0100               	movlb	0	; () banked
  5061  0102D0  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  5062  0102D2  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5063  0102D4  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5064  0102D6  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5065  0102D8  2EE8               	decfsz	wreg,f,c
  5066  0102DA  D7F8               	goto	u5485
  5067  0102DC  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5068  0102E0  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5069  0102E4  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5070  0102E8  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5071                           
  5072                           ; BSR set to: 0
  5073                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  5074  0102EC  C07C  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  5075  0102F0  D000               	goto	l5040
  5076  0102F2                     l5040:
  5077                           
  5078                           ; BSR set to: 0
  5079                           ;inc\CANlib.h: 802: }
  5080                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  5081  0102F2  0E04               	movlw	4
  5082  0102F4  0100               	movlb	0	; () banked
  5083  0102F6  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5084  0102F8  A4D8               	btfss	status,2,c
  5085  0102FA  D059               	goto	l5058
  5086                           
  5087                           ; BSR set to: 0
  5088  0102FC  0100               	movlb	0	; () banked
  5089  0102FE  2976               	incf	CANSetFilter@type& (0+255),w,b
  5090  010300  A4D8               	btfss	status,2,c
  5091  010302  D055               	goto	l5058
  5092                           
  5093                           ; BSR set to: 0
  5094                           ;inc\CANlib.h: 805: {
  5095                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  5096  010304  010F               	movlb	15	; () banked
  5097  010306  9711               	bcf	17,3,b	;volatile
  5098                           
  5099                           ; BSR set to: 15
  5100                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  5101  010308  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5102  01030C  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5103  010310  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5104  010314  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5105  010318  0E04               	movlw	4
  5106  01031A  D006               	goto	u5510
  5107  01031C                     u5515:
  5108  01031C  0100               	movlb	0	; () banked
  5109  01031E  90D8               	bcf	status,0,c
  5110  010320  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5111  010322  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5112  010324  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5113  010326  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5114  010328                     u5510:
  5115  010328  2EE8               	decfsz	wreg,f,c
  5116  01032A  D7F8               	goto	u5515
  5117  01032C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5118  010330  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5119  010334  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5120  010338  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  5124  01033C  0100               	movlb	0	; () banked
  5125  01033E  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5126  010340  0100               	movlb	0	; () banked
  5127  010342  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5128  010344  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5129  010346  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5130  010348  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5134  01034A  C07C  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5135                           
  5136                           ; BSR set to: 0
  5137                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  5138  01034E  0E07               	movlw	7
  5139  010350  0100               	movlb	0	; () banked
  5140  010352  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5141  010354  0100               	movlb	0	; () banked
  5142  010356  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5143  010358  0E00               	movlw	0
  5144  01035A  0100               	movlb	0	; () banked
  5145  01035C  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5146  01035E  0100               	movlb	0	; () banked
  5147  010360  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5148  010362  0E00               	movlw	0
  5149  010364  0100               	movlb	0	; () banked
  5150  010366  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5151  010368  0100               	movlb	0	; () banked
  5152  01036A  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5153  01036C  0E00               	movlw	0
  5154  01036E  0100               	movlb	0	; () banked
  5155  010370  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5156  010372  0100               	movlb	0	; () banked
  5157  010374  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5161  010376  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5162  01037A  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5163  01037E  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5164  010382  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5165  010386  0E05               	movlw	5
  5166  010388                     u5525:
  5167  010388  90D8               	bcf	status,0,c
  5168  01038A  0100               	movlb	0	; () banked
  5169  01038C  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  5170  01038E  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5171  010390  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5172  010392  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5173  010394  2EE8               	decfsz	wreg,f,c
  5174  010396  D7F8               	goto	u5525
  5175  010398  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5176  01039C  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5177  0103A0  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5178  0103A4  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5179                           
  5180                           ; BSR set to: 0
  5181                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5182  0103A8  C07C  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5183  0103AC  D000               	goto	l5058
  5184  0103AE                     l5058:
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;inc\CANlib.h: 815: }
  5188                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5189  0103AE  0E05               	movlw	5
  5190  0103B0  0100               	movlb	0	; () banked
  5191  0103B2  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5192  0103B4  A4D8               	btfss	status,2,c
  5193  0103B6  D059               	goto	l5076
  5194                           
  5195                           ; BSR set to: 0
  5196  0103B8  0100               	movlb	0	; () banked
  5197  0103BA  2976               	incf	CANSetFilter@type& (0+255),w,b
  5198  0103BC  A4D8               	btfss	status,2,c
  5199  0103BE  D055               	goto	l5076
  5200                           
  5201                           ; BSR set to: 0
  5202                           ;inc\CANlib.h: 818: {
  5203                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5204  0103C0  010F               	movlb	15	; () banked
  5205  0103C2  9715               	bcf	21,3,b	;volatile
  5206                           
  5207                           ; BSR set to: 15
  5208                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5209  0103C4  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5210  0103C8  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5211  0103CC  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5212  0103D0  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5213  0103D4  0E04               	movlw	4
  5214  0103D6  D006               	goto	u5550
  5215  0103D8                     u5555:
  5216  0103D8  0100               	movlb	0	; () banked
  5217  0103DA  90D8               	bcf	status,0,c
  5218  0103DC  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5219  0103DE  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5220  0103E0  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5221  0103E2  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5222  0103E4                     u5550:
  5223  0103E4  2EE8               	decfsz	wreg,f,c
  5224  0103E6  D7F8               	goto	u5555
  5225  0103E8  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5226  0103EC  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5227  0103F0  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5228  0103F4  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5232  0103F8  0100               	movlb	0	; () banked
  5233  0103FA  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5234  0103FC  0100               	movlb	0	; () banked
  5235  0103FE  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5236  010400  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5237  010402  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5238  010404  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5242  010406  C07C  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5246  01040A  0E07               	movlw	7
  5247  01040C  0100               	movlb	0	; () banked
  5248  01040E  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5249  010410  0100               	movlb	0	; () banked
  5250  010412  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5251  010414  0E00               	movlw	0
  5252  010416  0100               	movlb	0	; () banked
  5253  010418  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5254  01041A  0100               	movlb	0	; () banked
  5255  01041C  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5256  01041E  0E00               	movlw	0
  5257  010420  0100               	movlb	0	; () banked
  5258  010422  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5259  010424  0100               	movlb	0	; () banked
  5260  010426  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5261  010428  0E00               	movlw	0
  5262  01042A  0100               	movlb	0	; () banked
  5263  01042C  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5264  01042E  0100               	movlb	0	; () banked
  5265  010430  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5269  010432  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5270  010436  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5271  01043A  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5272  01043E  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5273  010442  0E05               	movlw	5
  5274  010444                     u5565:
  5275  010444  90D8               	bcf	status,0,c
  5276  010446  0100               	movlb	0	; () banked
  5277  010448  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  5278  01044A  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5279  01044C  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5280  01044E  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5281  010450  2EE8               	decfsz	wreg,f,c
  5282  010452  D7F8               	goto	u5565
  5283  010454  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5284  010458  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5285  01045C  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5286  010460  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5290  010464  C07C  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5291  010468  D000               	goto	l5076
  5292  01046A                     l5076:
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;inc\CANlib.h: 828: }
  5296                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5297  01046A  0100               	movlb	0	; () banked
  5298  01046C  517B               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5299  01046E  0100               	movlb	0	; () banked
  5300  010470  A4D8               	btfss	status,2,c
  5301  010472  D08B               	goto	l5110
  5302                           
  5303                           ; BSR set to: 0
  5304  010474  0EF7               	movlw	247
  5305  010476  0100               	movlb	0	; () banked
  5306  010478  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5307  01047A  A4D8               	btfss	status,2,c
  5308  01047C  D086               	goto	l5110
  5309                           
  5310                           ; BSR set to: 0
  5311                           ;inc\CANlib.h: 832: {
  5312                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5313  01047E  010F               	movlb	15	; () banked
  5314  010480  8701               	bsf	1,3,b	;volatile
  5315                           
  5316                           ; BSR set to: 15
  5317                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5318  010482  0100               	movlb	0	; () banked
  5319  010484  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5320  010486  0100               	movlb	0	; () banked
  5321  010488  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5322  01048A  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5323  01048C  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5324  01048E  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5325                           
  5326                           ; BSR set to: 0
  5327                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5328  010490  C07C  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5332  010494  0E00               	movlw	0
  5333  010496  0100               	movlb	0	; () banked
  5334  010498  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5335  01049A  0100               	movlb	0	; () banked
  5336  01049C  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5337  01049E  0EFF               	movlw	255
  5338  0104A0  0100               	movlb	0	; () banked
  5339  0104A2  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5340  0104A4  0100               	movlb	0	; () banked
  5341  0104A6  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5342  0104A8  0E00               	movlw	0
  5343  0104AA  0100               	movlb	0	; () banked
  5344  0104AC  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5345  0104AE  0100               	movlb	0	; () banked
  5346  0104B0  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5347  0104B2  0E00               	movlw	0
  5348  0104B4  0100               	movlb	0	; () banked
  5349  0104B6  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5350  0104B8  0100               	movlb	0	; () banked
  5351  0104BA  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5352                           
  5353                           ; BSR set to: 0
  5354                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5355  0104BC  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5356  0104C0  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5357  0104C4  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5358  0104C8  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5359  0104CC  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5360  0104D0  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5361  0104D4  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5362  0104D8  0100               	movlb	0	; () banked
  5363  0104DA  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5364  0104DC  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5365  0104E0  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5366  0104E4  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5367  0104E8  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5371  0104EC  C07C  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5372                           
  5373                           ; BSR set to: 0
  5374                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5375  0104F0  0100               	movlb	0	; () banked
  5376  0104F2  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5377  0104F4  D003               	goto	l483
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5381  0104F6  010F               	movlb	15	; () banked
  5382  0104F8  8101               	bsf	1,0,b	;volatile
  5383  0104FA  D002               	goto	l484
  5384  0104FC                     l483:
  5385                           
  5386                           ; BSR set to: 0
  5387                           ;inc\CANlib.h: 844: else
  5388                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5389  0104FC  010F               	movlb	15	; () banked
  5390  0104FE  9101               	bcf	1,0,b	;volatile
  5391  010500                     l484:
  5392                           
  5393                           ; BSR set to: 15
  5394                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5395  010500  0100               	movlb	0	; () banked
  5396  010502  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5397  010504  D003               	goto	l485
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5401  010506  010F               	movlb	15	; () banked
  5402  010508  8301               	bsf	1,1,b	;volatile
  5403  01050A  D002               	goto	l486
  5404  01050C                     l485:
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;inc\CANlib.h: 849: else
  5408                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5409  01050C  010F               	movlb	15	; () banked
  5410  01050E  9301               	bcf	1,1,b	;volatile
  5411  010510                     l486:
  5412                           
  5413                           ; BSR set to: 15
  5414                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5415  010510  0100               	movlb	0	; () banked
  5416  010512  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5417  010514  D003               	goto	l487
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5421  010516  010F               	movlb	15	; () banked
  5422  010518  8B01               	bsf	1,5,b	;volatile
  5423  01051A  D002               	goto	l488
  5424  01051C                     l487:
  5425                           
  5426                           ; BSR set to: 0
  5427                           ;inc\CANlib.h: 854: else
  5428                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5429  01051C  010F               	movlb	15	; () banked
  5430  01051E  9B01               	bcf	1,5,b	;volatile
  5431  010520                     l488:
  5432                           
  5433                           ; BSR set to: 15
  5434                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5435  010520  0100               	movlb	0	; () banked
  5436  010522  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5437  010524  D003               	goto	l489
  5438                           
  5439                           ; BSR set to: 0
  5440                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5441  010526  010F               	movlb	15	; () banked
  5442  010528  8D01               	bsf	1,6,b	;volatile
  5443  01052A  D002               	goto	l490
  5444  01052C                     l489:
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;inc\CANlib.h: 859: else
  5448                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5449  01052C  010F               	movlb	15	; () banked
  5450  01052E  9D01               	bcf	1,6,b	;volatile
  5451  010530                     l490:
  5452                           
  5453                           ; BSR set to: 15
  5454                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5455  010530  0100               	movlb	0	; () banked
  5456  010532  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5457  010534  D003               	goto	l491
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5461  010536  010F               	movlb	15	; () banked
  5462  010538  8F01               	bsf	1,7,b	;volatile
  5463  01053A  D003               	goto	l5104
  5464  01053C                     l491:
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;inc\CANlib.h: 864: else
  5468                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5469  01053C  010F               	movlb	15	; () banked
  5470  01053E  9F01               	bcf	1,7,b	;volatile
  5471  010540  D000               	goto	l5104
  5472  010542                     l5104:
  5473                           
  5474                           ; BSR set to: 15
  5475                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5476  010542  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5477  010546  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5478  01054A  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5479  01054E  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5480  010552  0E16               	movlw	22
  5481  010554  D006               	goto	u5640
  5482  010556                     u5645:
  5483  010556  0100               	movlb	0	; () banked
  5484  010558  90D8               	bcf	status,0,c
  5485  01055A  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5486  01055C  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5487  01055E  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5488  010560  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5489  010562                     u5640:
  5490  010562  2EE8               	decfsz	wreg,f,c
  5491  010564  D7F8               	goto	u5645
  5492  010566  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5493  01056A  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5494  01056E  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5495  010572  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5499  010576  0100               	movlb	0	; () banked
  5500  010578  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5501  01057A  0100               	movlb	0	; () banked
  5502  01057C  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5503  01057E  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5504  010580  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5505  010582  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5506                           
  5507                           ; BSR set to: 0
  5508                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5509  010584  C07C  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5510  010588  D000               	goto	l5110
  5511  01058A                     l5110:
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;inc\CANlib.h: 870: }
  5515                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5516  01058A  0100               	movlb	0	; () banked
  5517  01058C  057B               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5518  01058E  A4D8               	btfss	status,2,c
  5519  010590  D08B               	goto	l5144
  5520                           
  5521                           ; BSR set to: 0
  5522  010592  0EF7               	movlw	247
  5523  010594  0100               	movlb	0	; () banked
  5524  010596  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5525  010598  A4D8               	btfss	status,2,c
  5526  01059A  D086               	goto	l5144
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;inc\CANlib.h: 873: {
  5530                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5531  01059C  010F               	movlb	15	; () banked
  5532  01059E  8705               	bsf	5,3,b	;volatile
  5533                           
  5534                           ; BSR set to: 15
  5535                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5536  0105A0  0100               	movlb	0	; () banked
  5537  0105A2  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5538  0105A4  0100               	movlb	0	; () banked
  5539  0105A6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5540  0105A8  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5541  0105AA  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5542  0105AC  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5546  0105AE  C07C  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5550  0105B2  0E00               	movlw	0
  5551  0105B4  0100               	movlb	0	; () banked
  5552  0105B6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5553  0105B8  0100               	movlb	0	; () banked
  5554  0105BA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5555  0105BC  0EFF               	movlw	255
  5556  0105BE  0100               	movlb	0	; () banked
  5557  0105C0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5558  0105C2  0100               	movlb	0	; () banked
  5559  0105C4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5560  0105C6  0E00               	movlw	0
  5561  0105C8  0100               	movlb	0	; () banked
  5562  0105CA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5563  0105CC  0100               	movlb	0	; () banked
  5564  0105CE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5565  0105D0  0E00               	movlw	0
  5566  0105D2  0100               	movlb	0	; () banked
  5567  0105D4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5568  0105D6  0100               	movlb	0	; () banked
  5569  0105D8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5573  0105DA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5574  0105DE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5575  0105E2  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5576  0105E6  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5577  0105EA  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5578  0105EE  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5579  0105F2  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5580  0105F6  0100               	movlb	0	; () banked
  5581  0105F8  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5582  0105FA  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5583  0105FE  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5584  010602  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5585  010606  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5586                           
  5587                           ; BSR set to: 0
  5588                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5589  01060A  C07C  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5593  01060E  0100               	movlb	0	; () banked
  5594  010610  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5595  010612  D003               	goto	l494
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5599  010614  010F               	movlb	15	; () banked
  5600  010616  8105               	bsf	5,0,b	;volatile
  5601  010618  D002               	goto	l495
  5602  01061A                     l494:
  5603                           
  5604                           ; BSR set to: 0
  5605                           ;inc\CANlib.h: 885: else
  5606                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5607  01061A  010F               	movlb	15	; () banked
  5608  01061C  9105               	bcf	5,0,b	;volatile
  5609  01061E                     l495:
  5610                           
  5611                           ; BSR set to: 15
  5612                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5613  01061E  0100               	movlb	0	; () banked
  5614  010620  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5615  010622  D003               	goto	l496
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5619  010624  010F               	movlb	15	; () banked
  5620  010626  8305               	bsf	5,1,b	;volatile
  5621  010628  D002               	goto	l497
  5622  01062A                     l496:
  5623                           
  5624                           ; BSR set to: 0
  5625                           ;inc\CANlib.h: 890: else
  5626                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5627  01062A  010F               	movlb	15	; () banked
  5628  01062C  9305               	bcf	5,1,b	;volatile
  5629  01062E                     l497:
  5630                           
  5631                           ; BSR set to: 15
  5632                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5633  01062E  0100               	movlb	0	; () banked
  5634  010630  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5635  010632  D003               	goto	l498
  5636                           
  5637                           ; BSR set to: 0
  5638                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5639  010634  010F               	movlb	15	; () banked
  5640  010636  8B05               	bsf	5,5,b	;volatile
  5641  010638  D002               	goto	l499
  5642  01063A                     l498:
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;inc\CANlib.h: 895: else
  5646                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5647  01063A  010F               	movlb	15	; () banked
  5648  01063C  9B05               	bcf	5,5,b	;volatile
  5649  01063E                     l499:
  5650                           
  5651                           ; BSR set to: 15
  5652                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5653  01063E  0100               	movlb	0	; () banked
  5654  010640  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5655  010642  D003               	goto	l500
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5659  010644  010F               	movlb	15	; () banked
  5660  010646  8D05               	bsf	5,6,b	;volatile
  5661  010648  D002               	goto	l501
  5662  01064A                     l500:
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;inc\CANlib.h: 900: else
  5666                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5667  01064A  010F               	movlb	15	; () banked
  5668  01064C  9D05               	bcf	5,6,b	;volatile
  5669  01064E                     l501:
  5670                           
  5671                           ; BSR set to: 15
  5672                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5673  01064E  0100               	movlb	0	; () banked
  5674  010650  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5675  010652  D003               	goto	l502
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5679  010654  010F               	movlb	15	; () banked
  5680  010656  8F05               	bsf	5,7,b	;volatile
  5681  010658  D003               	goto	l5138
  5682  01065A                     l502:
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;inc\CANlib.h: 905: else
  5686                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5687  01065A  010F               	movlb	15	; () banked
  5688  01065C  9F05               	bcf	5,7,b	;volatile
  5689  01065E  D000               	goto	l5138
  5690  010660                     l5138:
  5691                           
  5692                           ; BSR set to: 15
  5693                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5694  010660  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5695  010664  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5696  010668  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5697  01066C  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5698  010670  0E16               	movlw	22
  5699  010672  D006               	goto	u5720
  5700  010674                     u5725:
  5701  010674  0100               	movlb	0	; () banked
  5702  010676  90D8               	bcf	status,0,c
  5703  010678  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5704  01067A  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5705  01067C  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5706  01067E  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5707  010680                     u5720:
  5708  010680  2EE8               	decfsz	wreg,f,c
  5709  010682  D7F8               	goto	u5725
  5710  010684  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5711  010688  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5712  01068C  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5713  010690  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5717  010694  0100               	movlb	0	; () banked
  5718  010696  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5719  010698  0100               	movlb	0	; () banked
  5720  01069A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5721  01069C  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5722  01069E  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5723  0106A0  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5724                           
  5725                           ; BSR set to: 0
  5726                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5727  0106A2  C07C  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5728  0106A6  D000               	goto	l5144
  5729  0106A8                     l5144:
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;inc\CANlib.h: 911: }
  5733                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5734  0106A8  0E02               	movlw	2
  5735  0106AA  0100               	movlb	0	; () banked
  5736  0106AC  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5737  0106AE  A4D8               	btfss	status,2,c
  5738  0106B0  D08B               	goto	l5178
  5739                           
  5740                           ; BSR set to: 0
  5741  0106B2  0EF7               	movlw	247
  5742  0106B4  0100               	movlb	0	; () banked
  5743  0106B6  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5744  0106B8  A4D8               	btfss	status,2,c
  5745  0106BA  D086               	goto	l5178
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;inc\CANlib.h: 915: {
  5749                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5750  0106BC  010F               	movlb	15	; () banked
  5751  0106BE  8709               	bsf	9,3,b	;volatile
  5752                           
  5753                           ; BSR set to: 15
  5754                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5755  0106C0  0100               	movlb	0	; () banked
  5756  0106C2  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5757  0106C4  0100               	movlb	0	; () banked
  5758  0106C6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5759  0106C8  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5760  0106CA  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5761  0106CC  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5765  0106CE  C07C  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5769  0106D2  0E00               	movlw	0
  5770  0106D4  0100               	movlb	0	; () banked
  5771  0106D6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5772  0106D8  0100               	movlb	0	; () banked
  5773  0106DA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5774  0106DC  0EFF               	movlw	255
  5775  0106DE  0100               	movlb	0	; () banked
  5776  0106E0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5777  0106E2  0100               	movlb	0	; () banked
  5778  0106E4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5779  0106E6  0E00               	movlw	0
  5780  0106E8  0100               	movlb	0	; () banked
  5781  0106EA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5782  0106EC  0100               	movlb	0	; () banked
  5783  0106EE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5784  0106F0  0E00               	movlw	0
  5785  0106F2  0100               	movlb	0	; () banked
  5786  0106F4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5787  0106F6  0100               	movlb	0	; () banked
  5788  0106F8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5792  0106FA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5793  0106FE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5794  010702  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5795  010706  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5796  01070A  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5797  01070E  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5798  010712  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5799  010716  0100               	movlb	0	; () banked
  5800  010718  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5801  01071A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5802  01071E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5803  010722  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5804  010726  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5808  01072A  C07C  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5812  01072E  0100               	movlb	0	; () banked
  5813  010730  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5814  010732  D003               	goto	l505
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5818  010734  010F               	movlb	15	; () banked
  5819  010736  8109               	bsf	9,0,b	;volatile
  5820  010738  D002               	goto	l506
  5821  01073A                     l505:
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;inc\CANlib.h: 927: else
  5825                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5826  01073A  010F               	movlb	15	; () banked
  5827  01073C  9109               	bcf	9,0,b	;volatile
  5828  01073E                     l506:
  5829                           
  5830                           ; BSR set to: 15
  5831                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5832  01073E  0100               	movlb	0	; () banked
  5833  010740  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5834  010742  D003               	goto	l507
  5835                           
  5836                           ; BSR set to: 0
  5837                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5838  010744  010F               	movlb	15	; () banked
  5839  010746  8309               	bsf	9,1,b	;volatile
  5840  010748  D002               	goto	l508
  5841  01074A                     l507:
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;inc\CANlib.h: 932: else
  5845                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5846  01074A  010F               	movlb	15	; () banked
  5847  01074C  9309               	bcf	9,1,b	;volatile
  5848  01074E                     l508:
  5849                           
  5850                           ; BSR set to: 15
  5851                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5852  01074E  0100               	movlb	0	; () banked
  5853  010750  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5854  010752  D003               	goto	l509
  5855                           
  5856                           ; BSR set to: 0
  5857                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5858  010754  010F               	movlb	15	; () banked
  5859  010756  8B09               	bsf	9,5,b	;volatile
  5860  010758  D002               	goto	l510
  5861  01075A                     l509:
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;inc\CANlib.h: 937: else
  5865                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5866  01075A  010F               	movlb	15	; () banked
  5867  01075C  9B09               	bcf	9,5,b	;volatile
  5868  01075E                     l510:
  5869                           
  5870                           ; BSR set to: 15
  5871                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5872  01075E  0100               	movlb	0	; () banked
  5873  010760  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5874  010762  D003               	goto	l511
  5875                           
  5876                           ; BSR set to: 0
  5877                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5878  010764  010F               	movlb	15	; () banked
  5879  010766  8D09               	bsf	9,6,b	;volatile
  5880  010768  D002               	goto	l512
  5881  01076A                     l511:
  5882                           
  5883                           ; BSR set to: 0
  5884                           ;inc\CANlib.h: 942: else
  5885                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5886  01076A  010F               	movlb	15	; () banked
  5887  01076C  9D09               	bcf	9,6,b	;volatile
  5888  01076E                     l512:
  5889                           
  5890                           ; BSR set to: 15
  5891                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5892  01076E  0100               	movlb	0	; () banked
  5893  010770  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5894  010772  D003               	goto	l513
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5898  010774  010F               	movlb	15	; () banked
  5899  010776  8F09               	bsf	9,7,b	;volatile
  5900  010778  D003               	goto	l5172
  5901  01077A                     l513:
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;inc\CANlib.h: 947: else
  5905                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5906  01077A  010F               	movlb	15	; () banked
  5907  01077C  9F09               	bcf	9,7,b	;volatile
  5908  01077E  D000               	goto	l5172
  5909  010780                     l5172:
  5910                           
  5911                           ; BSR set to: 15
  5912                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5913  010780  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5914  010784  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5915  010788  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5916  01078C  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5917  010790  0E16               	movlw	22
  5918  010792  D006               	goto	u5800
  5919  010794                     u5805:
  5920  010794  0100               	movlb	0	; () banked
  5921  010796  90D8               	bcf	status,0,c
  5922  010798  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5923  01079A  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5924  01079C  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5925  01079E  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5926  0107A0                     u5800:
  5927  0107A0  2EE8               	decfsz	wreg,f,c
  5928  0107A2  D7F8               	goto	u5805
  5929  0107A4  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5930  0107A8  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5931  0107AC  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5932  0107B0  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5933                           
  5934                           ; BSR set to: 0
  5935                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5936  0107B4  0100               	movlb	0	; () banked
  5937  0107B6  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5938  0107B8  0100               	movlb	0	; () banked
  5939  0107BA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5940  0107BC  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5941  0107BE  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5942  0107C0  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5943                           
  5944                           ; BSR set to: 0
  5945                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5946  0107C2  C07C  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5947  0107C6  D000               	goto	l5178
  5948  0107C8                     l5178:
  5949                           
  5950                           ; BSR set to: 0
  5951                           ;inc\CANlib.h: 953: }
  5952                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5953  0107C8  0E03               	movlw	3
  5954  0107CA  0100               	movlb	0	; () banked
  5955  0107CC  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5956  0107CE  A4D8               	btfss	status,2,c
  5957  0107D0  D08B               	goto	l5212
  5958                           
  5959                           ; BSR set to: 0
  5960  0107D2  0EF7               	movlw	247
  5961  0107D4  0100               	movlb	0	; () banked
  5962  0107D6  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5963  0107D8  A4D8               	btfss	status,2,c
  5964  0107DA  D086               	goto	l5212
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;inc\CANlib.h: 956: {
  5968                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5969  0107DC  010F               	movlb	15	; () banked
  5970  0107DE  870D               	bsf	13,3,b	;volatile
  5971                           
  5972                           ; BSR set to: 15
  5973                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5974  0107E0  0100               	movlb	0	; () banked
  5975  0107E2  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5976  0107E4  0100               	movlb	0	; () banked
  5977  0107E6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5978  0107E8  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5979  0107EA  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5980  0107EC  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5981                           
  5982                           ; BSR set to: 0
  5983                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5984  0107EE  C07C  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5985                           
  5986                           ; BSR set to: 0
  5987                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5988  0107F2  0E00               	movlw	0
  5989  0107F4  0100               	movlb	0	; () banked
  5990  0107F6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5991  0107F8  0100               	movlb	0	; () banked
  5992  0107FA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5993  0107FC  0EFF               	movlw	255
  5994  0107FE  0100               	movlb	0	; () banked
  5995  010800  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5996  010802  0100               	movlb	0	; () banked
  5997  010804  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5998  010806  0E00               	movlw	0
  5999  010808  0100               	movlb	0	; () banked
  6000  01080A  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6001  01080C  0100               	movlb	0	; () banked
  6002  01080E  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6003  010810  0E00               	movlw	0
  6004  010812  0100               	movlb	0	; () banked
  6005  010814  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6006  010816  0100               	movlb	0	; () banked
  6007  010818  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  6011  01081A  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  6012  01081E  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6013  010822  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6014  010826  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6015  01082A  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  6016  01082E  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6017  010832  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6018  010836  0100               	movlb	0	; () banked
  6019  010838  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  6020  01083A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6021  01083E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6022  010842  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6023  010846  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  6027  01084A  C07C  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  6028                           
  6029                           ; BSR set to: 0
  6030                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  6031  01084E  0100               	movlb	0	; () banked
  6032  010850  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6033  010852  D003               	goto	l516
  6034                           
  6035                           ; BSR set to: 0
  6036                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  6037  010854  010F               	movlb	15	; () banked
  6038  010856  810D               	bsf	13,0,b	;volatile
  6039  010858  D002               	goto	l517
  6040  01085A                     l516:
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;inc\CANlib.h: 968: else
  6044                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  6045  01085A  010F               	movlb	15	; () banked
  6046  01085C  910D               	bcf	13,0,b	;volatile
  6047  01085E                     l517:
  6048                           
  6049                           ; BSR set to: 15
  6050                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  6051  01085E  0100               	movlb	0	; () banked
  6052  010860  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6053  010862  D003               	goto	l518
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  6057  010864  010F               	movlb	15	; () banked
  6058  010866  830D               	bsf	13,1,b	;volatile
  6059  010868  D002               	goto	l519
  6060  01086A                     l518:
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;inc\CANlib.h: 973: else
  6064                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  6065  01086A  010F               	movlb	15	; () banked
  6066  01086C  930D               	bcf	13,1,b	;volatile
  6067  01086E                     l519:
  6068                           
  6069                           ; BSR set to: 15
  6070                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  6071  01086E  0100               	movlb	0	; () banked
  6072  010870  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6073  010872  D003               	goto	l520
  6074                           
  6075                           ; BSR set to: 0
  6076                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  6077  010874  010F               	movlb	15	; () banked
  6078  010876  8B0D               	bsf	13,5,b	;volatile
  6079  010878  D002               	goto	l521
  6080  01087A                     l520:
  6081                           
  6082                           ; BSR set to: 0
  6083                           ;inc\CANlib.h: 978: else
  6084                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  6085  01087A  010F               	movlb	15	; () banked
  6086  01087C  9B0D               	bcf	13,5,b	;volatile
  6087  01087E                     l521:
  6088                           
  6089                           ; BSR set to: 15
  6090                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  6091  01087E  0100               	movlb	0	; () banked
  6092  010880  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6093  010882  D003               	goto	l522
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  6097  010884  010F               	movlb	15	; () banked
  6098  010886  8D0D               	bsf	13,6,b	;volatile
  6099  010888  D002               	goto	l523
  6100  01088A                     l522:
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;inc\CANlib.h: 983: else
  6104                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  6105  01088A  010F               	movlb	15	; () banked
  6106  01088C  9D0D               	bcf	13,6,b	;volatile
  6107  01088E                     l523:
  6108                           
  6109                           ; BSR set to: 15
  6110                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  6111  01088E  0100               	movlb	0	; () banked
  6112  010890  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6113  010892  D003               	goto	l524
  6114                           
  6115                           ; BSR set to: 0
  6116                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  6117  010894  010F               	movlb	15	; () banked
  6118  010896  8F0D               	bsf	13,7,b	;volatile
  6119  010898  D003               	goto	l5206
  6120  01089A                     l524:
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;inc\CANlib.h: 988: else
  6124                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6125  01089A  010F               	movlb	15	; () banked
  6126  01089C  9F0D               	bcf	13,7,b	;volatile
  6127  01089E  D000               	goto	l5206
  6128  0108A0                     l5206:
  6129                           
  6130                           ; BSR set to: 15
  6131                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  6132  0108A0  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  6133  0108A4  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6134  0108A8  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6135  0108AC  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6136  0108B0  0E16               	movlw	22
  6137  0108B2  D006               	goto	u5880
  6138  0108B4                     u5885:
  6139  0108B4  0100               	movlb	0	; () banked
  6140  0108B6  90D8               	bcf	status,0,c
  6141  0108B8  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6142  0108BA  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6143  0108BC  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6144  0108BE  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  6145  0108C0                     u5880:
  6146  0108C0  2EE8               	decfsz	wreg,f,c
  6147  0108C2  D7F8               	goto	u5885
  6148  0108C4  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6149  0108C8  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6150  0108CC  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6151  0108D0  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6152                           
  6153                           ; BSR set to: 0
  6154                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  6155  0108D4  0100               	movlb	0	; () banked
  6156  0108D6  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  6157  0108D8  0100               	movlb	0	; () banked
  6158  0108DA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6159  0108DC  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6160  0108DE  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6161  0108E0  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6162                           
  6163                           ; BSR set to: 0
  6164                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6165  0108E2  C07C  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6166  0108E6  D000               	goto	l5212
  6167  0108E8                     l5212:
  6168                           
  6169                           ; BSR set to: 0
  6170                           ;inc\CANlib.h: 994: }
  6171                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6172  0108E8  0E04               	movlw	4
  6173  0108EA  0100               	movlb	0	; () banked
  6174  0108EC  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6175  0108EE  A4D8               	btfss	status,2,c
  6176  0108F0  D08B               	goto	l5246
  6177                           
  6178                           ; BSR set to: 0
  6179  0108F2  0EF7               	movlw	247
  6180  0108F4  0100               	movlb	0	; () banked
  6181  0108F6  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  6182  0108F8  A4D8               	btfss	status,2,c
  6183  0108FA  D086               	goto	l5246
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;inc\CANlib.h: 997: {
  6187                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6188  0108FC  010F               	movlb	15	; () banked
  6189  0108FE  8711               	bsf	17,3,b	;volatile
  6190                           
  6191                           ; BSR set to: 15
  6192                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6193  010900  0100               	movlb	0	; () banked
  6194  010902  5172               	movf	CANSetFilter@filter& (0+255),w,b
  6195  010904  0100               	movlb	0	; () banked
  6196  010906  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6197  010908  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6198  01090A  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6199  01090C  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6200                           
  6201                           ; BSR set to: 0
  6202                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6203  01090E  C07C  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6204                           
  6205                           ; BSR set to: 0
  6206                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6207  010912  0E00               	movlw	0
  6208  010914  0100               	movlb	0	; () banked
  6209  010916  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  6210  010918  0100               	movlb	0	; () banked
  6211  01091A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6212  01091C  0EFF               	movlw	255
  6213  01091E  0100               	movlb	0	; () banked
  6214  010920  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6215  010922  0100               	movlb	0	; () banked
  6216  010924  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6217  010926  0E00               	movlw	0
  6218  010928  0100               	movlb	0	; () banked
  6219  01092A  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6220  01092C  0100               	movlb	0	; () banked
  6221  01092E  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6222  010930  0E00               	movlw	0
  6223  010932  0100               	movlb	0	; () banked
  6224  010934  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6225  010936  0100               	movlb	0	; () banked
  6226  010938  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6227                           
  6228                           ; BSR set to: 0
  6229                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6230  01093A  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  6231  01093E  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6232  010942  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6233  010946  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6234  01094A  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  6235  01094E  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6236  010952  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6237  010956  0100               	movlb	0	; () banked
  6238  010958  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  6239  01095A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6240  01095E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6241  010962  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6242  010966  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6243                           
  6244                           ; BSR set to: 0
  6245                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6246  01096A  C07C  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6250  01096E  0100               	movlb	0	; () banked
  6251  010970  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6252  010972  D003               	goto	l527
  6253                           
  6254                           ; BSR set to: 0
  6255                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6256  010974  010F               	movlb	15	; () banked
  6257  010976  8111               	bsf	17,0,b	;volatile
  6258  010978  D002               	goto	l528
  6259  01097A                     l527:
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;inc\CANlib.h: 1009: else
  6263                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6264  01097A  010F               	movlb	15	; () banked
  6265  01097C  9111               	bcf	17,0,b	;volatile
  6266  01097E                     l528:
  6267                           
  6268                           ; BSR set to: 15
  6269                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6270  01097E  0100               	movlb	0	; () banked
  6271  010980  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6272  010982  D003               	goto	l529
  6273                           
  6274                           ; BSR set to: 0
  6275                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6276  010984  010F               	movlb	15	; () banked
  6277  010986  8311               	bsf	17,1,b	;volatile
  6278  010988  D002               	goto	l530
  6279  01098A                     l529:
  6280                           
  6281                           ; BSR set to: 0
  6282                           ;inc\CANlib.h: 1014: else
  6283                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6284  01098A  010F               	movlb	15	; () banked
  6285  01098C  9311               	bcf	17,1,b	;volatile
  6286  01098E                     l530:
  6287                           
  6288                           ; BSR set to: 15
  6289                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6290  01098E  0100               	movlb	0	; () banked
  6291  010990  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6292  010992  D003               	goto	l531
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6296  010994  010F               	movlb	15	; () banked
  6297  010996  8B11               	bsf	17,5,b	;volatile
  6298  010998  D002               	goto	l532
  6299  01099A                     l531:
  6300                           
  6301                           ; BSR set to: 0
  6302                           ;inc\CANlib.h: 1019: else
  6303                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6304  01099A  010F               	movlb	15	; () banked
  6305  01099C  9B11               	bcf	17,5,b	;volatile
  6306  01099E                     l532:
  6307                           
  6308                           ; BSR set to: 15
  6309                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6310  01099E  0100               	movlb	0	; () banked
  6311  0109A0  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6312  0109A2  D003               	goto	l533
  6313                           
  6314                           ; BSR set to: 0
  6315                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6316  0109A4  010F               	movlb	15	; () banked
  6317  0109A6  8D11               	bsf	17,6,b	;volatile
  6318  0109A8  D002               	goto	l534
  6319  0109AA                     l533:
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;inc\CANlib.h: 1024: else
  6323                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6324  0109AA  010F               	movlb	15	; () banked
  6325  0109AC  9D11               	bcf	17,6,b	;volatile
  6326  0109AE                     l534:
  6327                           
  6328                           ; BSR set to: 15
  6329                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6330  0109AE  0100               	movlb	0	; () banked
  6331  0109B0  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6332  0109B2  D003               	goto	l535
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6336  0109B4  010F               	movlb	15	; () banked
  6337  0109B6  8F11               	bsf	17,7,b	;volatile
  6338  0109B8  D003               	goto	l5240
  6339  0109BA                     l535:
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;inc\CANlib.h: 1029: else
  6343                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6344  0109BA  010F               	movlb	15	; () banked
  6345  0109BC  9F11               	bcf	17,7,b	;volatile
  6346  0109BE  D000               	goto	l5240
  6347  0109C0                     l5240:
  6348                           
  6349                           ; BSR set to: 15
  6350                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6351  0109C0  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  6352  0109C4  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6353  0109C8  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6354  0109CC  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6355  0109D0  0E16               	movlw	22
  6356  0109D2  D006               	goto	u5960
  6357  0109D4                     u5965:
  6358  0109D4  0100               	movlb	0	; () banked
  6359  0109D6  90D8               	bcf	status,0,c
  6360  0109D8  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6361  0109DA  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6362  0109DC  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6363  0109DE  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  6364  0109E0                     u5960:
  6365  0109E0  2EE8               	decfsz	wreg,f,c
  6366  0109E2  D7F8               	goto	u5965
  6367  0109E4  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6368  0109E8  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6369  0109EC  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6370  0109F0  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6374  0109F4  0100               	movlb	0	; () banked
  6375  0109F6  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  6376  0109F8  0100               	movlb	0	; () banked
  6377  0109FA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6378  0109FC  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6379  0109FE  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6380  010A00  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6381                           
  6382                           ; BSR set to: 0
  6383                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6384  010A02  C07C  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6385  010A06  D000               	goto	l5246
  6386  010A08                     l5246:
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;inc\CANlib.h: 1035: }
  6390                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6391  010A08  0E05               	movlw	5
  6392  010A0A  0100               	movlb	0	; () banked
  6393  010A0C  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6394  010A0E  A4D8               	btfss	status,2,c
  6395  010A10  0012               	return	
  6396                           
  6397                           ; BSR set to: 0
  6398  010A12  0EF7               	movlw	247
  6399  010A14  0100               	movlb	0	; () banked
  6400  010A16  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  6401  010A18  A4D8               	btfss	status,2,c
  6402  010A1A  0012               	return	
  6403                           
  6404                           ; BSR set to: 0
  6405                           ;inc\CANlib.h: 1038: {
  6406                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6407  010A1C  010F               	movlb	15	; () banked
  6408  010A1E  8715               	bsf	21,3,b	;volatile
  6409                           
  6410                           ; BSR set to: 15
  6411                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6412  010A20  0100               	movlb	0	; () banked
  6413  010A22  5172               	movf	CANSetFilter@filter& (0+255),w,b
  6414  010A24  0100               	movlb	0	; () banked
  6415  010A26  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6416  010A28  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6417  010A2A  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6418  010A2C  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6422  010A2E  C07C  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6423                           
  6424                           ; BSR set to: 0
  6425                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6426  010A32  0E00               	movlw	0
  6427  010A34  0100               	movlb	0	; () banked
  6428  010A36  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  6429  010A38  0100               	movlb	0	; () banked
  6430  010A3A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6431  010A3C  0EFF               	movlw	255
  6432  010A3E  0100               	movlb	0	; () banked
  6433  010A40  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6434  010A42  0100               	movlb	0	; () banked
  6435  010A44  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6436  010A46  0E00               	movlw	0
  6437  010A48  0100               	movlb	0	; () banked
  6438  010A4A  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6439  010A4C  0100               	movlb	0	; () banked
  6440  010A4E  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6441  010A50  0E00               	movlw	0
  6442  010A52  0100               	movlb	0	; () banked
  6443  010A54  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6444  010A56  0100               	movlb	0	; () banked
  6445  010A58  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6446                           
  6447                           ; BSR set to: 0
  6448                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6449  010A5A  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  6450  010A5E  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6451  010A62  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6452  010A66  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6453  010A6A  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  6454  010A6E  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6455  010A72  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6456  010A76  0100               	movlb	0	; () banked
  6457  010A78  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  6458  010A7A  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6459  010A7E  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6460  010A82  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6461  010A86  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6465  010A8A  C07C  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6466                           
  6467                           ; BSR set to: 0
  6468                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6469  010A8E  0100               	movlb	0	; () banked
  6470  010A90  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6471  010A92  D003               	goto	l538
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6475  010A94  010F               	movlb	15	; () banked
  6476  010A96  8115               	bsf	21,0,b	;volatile
  6477  010A98  D002               	goto	l539
  6478  010A9A                     l538:
  6479                           
  6480                           ; BSR set to: 0
  6481                           ;inc\CANlib.h: 1050: else
  6482                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6483  010A9A  010F               	movlb	15	; () banked
  6484  010A9C  9115               	bcf	21,0,b	;volatile
  6485  010A9E                     l539:
  6486                           
  6487                           ; BSR set to: 15
  6488                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6489  010A9E  0100               	movlb	0	; () banked
  6490  010AA0  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6491  010AA2  D003               	goto	l540
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6495  010AA4  010F               	movlb	15	; () banked
  6496  010AA6  8315               	bsf	21,1,b	;volatile
  6497  010AA8  D002               	goto	l541
  6498  010AAA                     l540:
  6499                           
  6500                           ; BSR set to: 0
  6501                           ;inc\CANlib.h: 1055: else
  6502                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6503  010AAA  010F               	movlb	15	; () banked
  6504  010AAC  9315               	bcf	21,1,b	;volatile
  6505  010AAE                     l541:
  6506                           
  6507                           ; BSR set to: 15
  6508                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6509  010AAE  0100               	movlb	0	; () banked
  6510  010AB0  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6511  010AB2  D003               	goto	l542
  6512                           
  6513                           ; BSR set to: 0
  6514                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6515  010AB4  010F               	movlb	15	; () banked
  6516  010AB6  8B15               	bsf	21,5,b	;volatile
  6517  010AB8  D002               	goto	l543
  6518  010ABA                     l542:
  6519                           
  6520                           ; BSR set to: 0
  6521                           ;inc\CANlib.h: 1060: else
  6522                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6523  010ABA  010F               	movlb	15	; () banked
  6524  010ABC  9B15               	bcf	21,5,b	;volatile
  6525  010ABE                     l543:
  6526                           
  6527                           ; BSR set to: 15
  6528                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6529  010ABE  0100               	movlb	0	; () banked
  6530  010AC0  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6531  010AC2  D003               	goto	l544
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6535  010AC4  010F               	movlb	15	; () banked
  6536  010AC6  8D15               	bsf	21,6,b	;volatile
  6537  010AC8  D002               	goto	l545
  6538  010ACA                     l544:
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;inc\CANlib.h: 1065: else
  6542                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6543  010ACA  010F               	movlb	15	; () banked
  6544  010ACC  9D15               	bcf	21,6,b	;volatile
  6545  010ACE                     l545:
  6546                           
  6547                           ; BSR set to: 15
  6548                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6549  010ACE  0100               	movlb	0	; () banked
  6550  010AD0  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6551  010AD2  D003               	goto	l546
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6555  010AD4  010F               	movlb	15	; () banked
  6556  010AD6  8F15               	bsf	21,7,b	;volatile
  6557  010AD8  D003               	goto	l5274
  6558  010ADA                     l546:
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;inc\CANlib.h: 1070: else
  6562                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6563  010ADA  010F               	movlb	15	; () banked
  6564  010ADC  9F15               	bcf	21,7,b	;volatile
  6565  010ADE  D000               	goto	l5274
  6566  010AE0                     l5274:
  6567                           
  6568                           ; BSR set to: 15
  6569                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6570  010AE0  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  6571  010AE4  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6572  010AE8  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6573  010AEC  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6574  010AF0  0E16               	movlw	22
  6575  010AF2  D006               	goto	u6040
  6576  010AF4                     u6045:
  6577  010AF4  0100               	movlb	0	; () banked
  6578  010AF6  90D8               	bcf	status,0,c
  6579  010AF8  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6580  010AFA  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6581  010AFC  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6582  010AFE  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  6583  010B00                     u6040:
  6584  010B00  2EE8               	decfsz	wreg,f,c
  6585  010B02  D7F8               	goto	u6045
  6586  010B04  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6587  010B08  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6588  010B0C  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6589  010B10  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6590                           
  6591                           ; BSR set to: 0
  6592                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6593  010B14  0100               	movlb	0	; () banked
  6594  010B16  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  6595  010B18  0100               	movlb	0	; () banked
  6596  010B1A  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6597  010B1C  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6598  010B1E  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6599  010B20  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6600                           
  6601                           ; BSR set to: 0
  6602                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6603  010B22  C07C  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6604  010B26  0012               	return	
  6605                           
  6606                           ; BSR set to: 0
  6607                           
  6608                           ; BSR set to: 0
  6609  010B28  0012               	return		;funcret
  6610  010B2A                     __end_of_CANSetFilter:
  6611                           	opt stack 0
  6612                           tblptru	equ	0xFF8
  6613                           tblptrh	equ	0xFF7
  6614                           tblptrl	equ	0xFF6
  6615                           tablat	equ	0xFF5
  6616                           prodh	equ	0xFF4
  6617                           prodl	equ	0xFF3
  6618                           intcon	equ	0xFF2
  6619                           postinc0	equ	0xFEE
  6620                           wreg	equ	0xFE8
  6621                           postinc2	equ	0xFDE
  6622                           fsr2h	equ	0xFDA
  6623                           fsr2l	equ	0xFD9
  6624                           status	equ	0xFD8
  6625                           
  6626 ;; *************** function _CANOperationMode *****************
  6627 ;; Defined at:
  6628 ;;		line 206 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;  mode            1    wreg     enum E16922
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;  mode            1   18[BANK0 ] enum E16922
  6633 ;; Return value:  Size  Location     Type
  6634 ;;		None               void
  6635 ;; Registers used:
  6636 ;;		wreg, status,2, status,0
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6643 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6645 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6646 ;;Total ram usage:        1 bytes
  6647 ;; Hardware stack levels used:    1
  6648 ;; Hardware stack levels required when called:    3
  6649 ;; This function calls:
  6650 ;;		Nothing
  6651 ;; This function is called by:
  6652 ;;		_CANInitialize
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656                           	psect	text5
  6657  015F32                     __ptext5:
  6658                           	opt stack 0
  6659  015F32                     _CANOperationMode:
  6660                           	opt stack 25
  6661                           
  6662                           ; BSR set to: 0
  6663                           ;incstack = 0
  6664                           ;CANOperationMode@mode stored from wreg
  6665  015F32  0100               	movlb	0	; () banked
  6666  015F34  6F72               	movwf	CANOperationMode@mode& (0+255),b
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;inc\CANlib.h: 208: CANCON = mode;
  6670  015F36  C072  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6671                           
  6672                           ; BSR set to: 0
  6673                           
  6674                           ;inc\CANlib.h: 210: while((CANSTAT & 0b11100000) != mode );
  6675  015F3A  D000               	goto	l4870
  6676  015F3C                     l4870:
  6677                           
  6678                           ; BSR set to: 0
  6679  015F3C  506E               	movf	3950,w,c	;volatile
  6680  015F3E  0BE0               	andlw	224
  6681  015F40  0100               	movlb	0	; () banked
  6682  015F42  1972               	xorwf	CANOperationMode@mode& (0+255),w,b
  6683  015F44  A4D8               	btfss	status,2,c
  6684  015F46  D7FA               	goto	l4870
  6685                           
  6686                           ; BSR set to: 0
  6687                           
  6688                           ; BSR set to: 0
  6689  015F48  0012               	return		;funcret
  6690  015F4A                     __end_of_CANOperationMode:
  6691                           	opt stack 0
  6692                           tblptru	equ	0xFF8
  6693                           tblptrh	equ	0xFF7
  6694                           tblptrl	equ	0xFF6
  6695                           tablat	equ	0xFF5
  6696                           prodh	equ	0xFF4
  6697                           prodl	equ	0xFF3
  6698                           intcon	equ	0xFF2
  6699                           postinc0	equ	0xFEE
  6700                           wreg	equ	0xFE8
  6701                           postinc2	equ	0xFDE
  6702                           fsr2h	equ	0xFDA
  6703                           fsr2l	equ	0xFD9
  6704                           status	equ	0xFD8
  6705                           
  6706 ;; *************** function ___lbtofl *****************
  6707 ;; Defined at:
  6708 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtofl.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;  c               1    wreg     unsigned char 
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;  c               1   32[BANK0 ] unsigned char 
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  4   28[BANK0 ] unsigned char 
  6715 ;; Registers used:
  6716 ;;		wreg, status,2, status,0, cstack
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6722 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6723 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6725 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6726 ;;Total ram usage:        5 bytes
  6727 ;; Hardware stack levels used:    1
  6728 ;; Hardware stack levels required when called:    4
  6729 ;; This function calls:
  6730 ;;		___flpack
  6731 ;; This function is called by:
  6732 ;;		_main
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           
  6736                           	psect	text6
  6737  015D22                     __ptext6:
  6738                           	opt stack 0
  6739  015D22                     ___lbtofl:
  6740                           	opt stack 26
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;incstack = 0
  6744                           ;___lbtofl@c stored from wreg
  6745  015D22  0100               	movlb	0	; () banked
  6746  015D24  6F80               	movwf	___lbtofl@c& (0+255),b
  6747                           
  6748                           ; BSR set to: 0
  6749  015D26  0100               	movlb	0	; () banked
  6750  015D28  5180               	movf	___lbtofl@c& (0+255),w,b
  6751  015D2A  0100               	movlb	0	; () banked
  6752  015D2C  6F72               	movwf	___flpack@arg& (0+255),b
  6753  015D2E  6B73               	clrf	(___flpack@arg+1)& (0+255),b
  6754  015D30  6B74               	clrf	(___flpack@arg+2)& (0+255),b
  6755  015D32  6B75               	clrf	(___flpack@arg+3)& (0+255),b
  6756  015D34  0E96               	movlw	150
  6757  015D36  0100               	movlb	0	; () banked
  6758  015D38  6F76               	movwf	___flpack@exp& (0+255),b
  6759  015D3A  0E00               	movlw	0
  6760  015D3C  0100               	movlb	0	; () banked
  6761  015D3E  6F77               	movwf	___flpack@sign& (0+255),b
  6762  015D40  ECAD  F0A4         	call	___flpack	;wreg free
  6763  015D44  C072  F07C         	movff	?___flpack,?___lbtofl
  6764  015D48  C073  F07D         	movff	?___flpack+1,?___lbtofl+1
  6765  015D4C  C074  F07E         	movff	?___flpack+2,?___lbtofl+2
  6766  015D50  C075  F07F         	movff	?___flpack+3,?___lbtofl+3
  6767  015D54  0012               	return	
  6768  015D56  0012               	return		;funcret
  6769  015D58                     __end_of___lbtofl:
  6770                           	opt stack 0
  6771                           tblptru	equ	0xFF8
  6772                           tblptrh	equ	0xFF7
  6773                           tblptrl	equ	0xFF6
  6774                           tablat	equ	0xFF5
  6775                           prodh	equ	0xFF4
  6776                           prodl	equ	0xFF3
  6777                           intcon	equ	0xFF2
  6778                           postinc0	equ	0xFEE
  6779                           wreg	equ	0xFE8
  6780                           postinc2	equ	0xFDE
  6781                           fsr2h	equ	0xFDA
  6782                           fsr2l	equ	0xFD9
  6783                           status	equ	0xFD8
  6784                           
  6785 ;; *************** function ___awtofl *****************
  6786 ;; Defined at:
  6787 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtofl.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;  c               2   28[BANK0 ] int 
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;  f1              4    0        int 
  6792 ;;  sign            1   32[BANK0 ] unsigned char 
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  4   28[BANK0 ] unsigned char 
  6795 ;; Registers used:
  6796 ;;		wreg, status,2, status,0, cstack
  6797 ;; Tracked objects:
  6798 ;;		On entry : 0/0
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6802 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6803 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6805 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6806 ;;Total ram usage:        5 bytes
  6807 ;; Hardware stack levels used:    1
  6808 ;; Hardware stack levels required when called:    4
  6809 ;; This function calls:
  6810 ;;		___flpack
  6811 ;; This function is called by:
  6812 ;;		_main
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           	psect	text7
  6817  015B1E                     __ptext7:
  6818                           	opt stack 0
  6819  015B1E                     ___awtofl:
  6820                           	opt stack 26
  6821                           
  6822                           ;incstack = 0
  6823  015B1E  0E00               	movlw	0
  6824  015B20  0100               	movlb	0	; () banked
  6825  015B22  6F80               	movwf	___awtofl@sign& (0+255),b
  6826                           
  6827                           ; BSR set to: 0
  6828  015B24  0100               	movlb	0	; () banked
  6829  015B26  AF7D               	btfss	(___awtofl@c+1)& (0+255),7,b
  6830  015B28  D008               	goto	l8452
  6831                           
  6832                           ; BSR set to: 0
  6833  015B2A  0100               	movlb	0	; () banked
  6834  015B2C  6D7C               	negf	___awtofl@c& (0+255),b
  6835  015B2E  1F7D               	comf	(___awtofl@c+1)& (0+255),f,b
  6836  015B30  B0D8               	btfsc	status,0,c
  6837  015B32  2B7D               	incf	(___awtofl@c+1)& (0+255),f,b
  6838  015B34  0100               	movlb	0	; () banked
  6839  015B36  2B80               	incf	___awtofl@sign& (0+255),f,b
  6840  015B38  D000               	goto	l8452
  6841  015B3A                     l8452:
  6842                           
  6843                           ; BSR set to: 0
  6844  015B3A  C07C  F072         	movff	___awtofl@c,___flpack@arg
  6845  015B3E  C07D  F073         	movff	___awtofl@c+1,___flpack@arg+1
  6846  015B42  0100               	movlb	0	; () banked
  6847  015B44  6B74               	clrf	(___flpack@arg+2)& (0+255),b
  6848  015B46  6B75               	clrf	(___flpack@arg+3)& (0+255),b
  6849  015B48  0E96               	movlw	150
  6850  015B4A  0100               	movlb	0	; () banked
  6851  015B4C  6F76               	movwf	___flpack@exp& (0+255),b
  6852  015B4E  C080  F077         	movff	___awtofl@sign,___flpack@sign
  6853  015B52  ECAD  F0A4         	call	___flpack	;wreg free
  6854  015B56  C072  F07C         	movff	?___flpack,?___awtofl
  6855  015B5A  C073  F07D         	movff	?___flpack+1,?___awtofl+1
  6856  015B5E  C074  F07E         	movff	?___flpack+2,?___awtofl+2
  6857  015B62  C075  F07F         	movff	?___flpack+3,?___awtofl+3
  6858  015B66  0012               	return	
  6859  015B68  0012               	return		;funcret
  6860  015B6A                     __end_of___awtofl:
  6861                           	opt stack 0
  6862                           tblptru	equ	0xFF8
  6863                           tblptrh	equ	0xFF7
  6864                           tblptrl	equ	0xFF6
  6865                           tablat	equ	0xFF5
  6866                           prodh	equ	0xFF4
  6867                           prodl	equ	0xFF3
  6868                           intcon	equ	0xFF2
  6869                           postinc0	equ	0xFEE
  6870                           wreg	equ	0xFE8
  6871                           postinc2	equ	0xFDE
  6872                           fsr2h	equ	0xFDA
  6873                           fsr2l	equ	0xFD9
  6874                           status	equ	0xFD8
  6875                           
  6876 ;; *************** function _PWR_Button_Polling *****************
  6877 ;; Defined at:
  6878 ;;		line 583 in file "RemoteCan.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;		None
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;		None
  6883 ;; Return value:  Size  Location     Type
  6884 ;;		None               void
  6885 ;; Registers used:
  6886 ;;		None
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6896 ;;Total ram usage:        0 bytes
  6897 ;; Hardware stack levels used:    1
  6898 ;; Hardware stack levels required when called:    3
  6899 ;; This function calls:
  6900 ;;		Nothing
  6901 ;; This function is called by:
  6902 ;;		_main
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906                           	psect	text8
  6907  015F62                     __ptext8:
  6908                           	opt stack 0
  6909  015F62                     _PWR_Button_Polling:
  6910                           	opt stack 27
  6911                           
  6912                           ;RemoteCan.c: 584: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  6913                           
  6914                           ;incstack = 0
  6915  015F62  AA81               	btfss	3969,5,c	;volatile
  6916  015F64  D002               	goto	l919
  6917  015F66  BC4B               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6918  015F68  0012               	return	
  6919  015F6A                     l919:
  6920                           
  6921                           ;RemoteCan.c: 585: wait_low_1 = 0;
  6922  015F6A  9C4B               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6923                           
  6924                           ;RemoteCan.c: 586: if (PORTBbits.RB5 == 1) {
  6925  015F6C  AA81               	btfss	3969,5,c	;volatile
  6926  015F6E  0012               	return	
  6927                           
  6928                           ;RemoteCan.c: 587: power_switch = ~power_switch;
  6929  015F70  724B               	btg	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6930                           
  6931                           ;RemoteCan.c: 588: wait_low_1 = 1;
  6932  015F72  8C4B               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6933  015F74  0012               	return	
  6934  015F76  0012               	return		;funcret
  6935  015F78                     __end_of_PWR_Button_Polling:
  6936                           	opt stack 0
  6937                           tblptru	equ	0xFF8
  6938                           tblptrh	equ	0xFF7
  6939                           tblptrl	equ	0xFF6
  6940                           tablat	equ	0xFF5
  6941                           prodh	equ	0xFF4
  6942                           prodl	equ	0xFF3
  6943                           intcon	equ	0xFF2
  6944                           postinc0	equ	0xFEE
  6945                           wreg	equ	0xFE8
  6946                           postinc2	equ	0xFDE
  6947                           fsr2h	equ	0xFDA
  6948                           fsr2l	equ	0xFD9
  6949                           status	equ	0xFD8
  6950                           
  6951 ;; *************** function _LCD_Parking *****************
  6952 ;; Defined at:
  6953 ;;		line 544 in file "RemoteCan.c"
  6954 ;; Parameters:    Size  Location     Type
  6955 ;;		None
  6956 ;; Auto vars:     Size  Location     Type
  6957 ;;		None
  6958 ;; Return value:  Size  Location     Type
  6959 ;;		None               void
  6960 ;; Registers used:
  6961 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6962 ;; Tracked objects:
  6963 ;;		On entry : 0/0
  6964 ;;		On exit  : 0/0
  6965 ;;		Unchanged: 0/0
  6966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6971 ;;Total ram usage:        0 bytes
  6972 ;; Hardware stack levels used:    1
  6973 ;; Hardware stack levels required when called:    9
  6974 ;; This function calls:
  6975 ;;		_LCD_clear
  6976 ;;		_LCD_goto_line
  6977 ;;		_LCD_initialize
  6978 ;;		_LCD_write_message
  6979 ;; This function is called by:
  6980 ;;		_main
  6981 ;; This function uses a non-reentrant model
  6982 ;;
  6983                           
  6984                           	psect	text9
  6985  01587C                     __ptext9:
  6986                           	opt stack 0
  6987  01587C                     _LCD_Parking:
  6988                           	opt stack 21
  6989                           
  6990                           ;RemoteCan.c: 545: LCD_initialize(16);
  6991                           
  6992                           ;incstack = 0
  6993  01587C  0E10               	movlw	16
  6994  01587E  EC6D  F0A5         	call	_LCD_initialize
  6995                           
  6996                           ;RemoteCan.c: 546: LCD_clear();
  6997  015882  EC13  F0AF         	call	_LCD_clear	;wreg free
  6998                           
  6999                           ;RemoteCan.c: 547: LCD_goto_line(1);
  7000  015886  0E01               	movlw	1
  7001  015888  EC7A  F0A8         	call	_LCD_goto_line
  7002                           
  7003                           ;RemoteCan.c: 548: LCD_write_message("= PARKING MESSAGES =");
  7004  01588C  0E2A               	movlw	low STR_19
  7005  01588E  0100               	movlb	0	; () banked
  7006  015890  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7007  015892  0EFF               	movlw	high STR_19
  7008  015894  0100               	movlb	0	; () banked
  7009  015896  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7010  015898  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7011                           
  7012                           ;RemoteCan.c: 549: LCD_goto_line(2);
  7013  01589C  0E02               	movlw	2
  7014  01589E  EC7A  F0A8         	call	_LCD_goto_line
  7015                           
  7016                           ;RemoteCan.c: 550: LCD_write_message("=    Parking in    =");
  7017  0158A2  0E00               	movlw	low STR_28
  7018  0158A4  0100               	movlb	0	; () banked
  7019  0158A6  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7020  0158A8  0EFF               	movlw	high STR_28
  7021  0158AA  0100               	movlb	0	; () banked
  7022  0158AC  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7023  0158AE  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7024                           
  7025                           ;RemoteCan.c: 551: LCD_goto_line(3);
  7026  0158B2  0E03               	movlw	3
  7027  0158B4  EC7A  F0A8         	call	_LCD_goto_line
  7028                           
  7029                           ;RemoteCan.c: 552: LCD_write_message("=    progress...   =");
  7030  0158B8  0E15               	movlw	low STR_29
  7031  0158BA  0100               	movlb	0	; () banked
  7032  0158BC  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7033  0158BE  0EFF               	movlw	high STR_29
  7034  0158C0  0100               	movlb	0	; () banked
  7035  0158C2  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7036  0158C4  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7037                           
  7038                           ;RemoteCan.c: 553: LCD_goto_line(4);
  7039  0158C8  0E04               	movlw	4
  7040  0158CA  EC7A  F0A8         	call	_LCD_goto_line
  7041                           
  7042                           ;RemoteCan.c: 554: LCD_write_message("====================");
  7043  0158CE  0E69               	movlw	low STR_1
  7044  0158D0  0100               	movlb	0	; () banked
  7045  0158D2  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7046  0158D4  0EFF               	movlw	high STR_1
  7047  0158D6  0100               	movlb	0	; () banked
  7048  0158D8  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7049  0158DA  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7050  0158DE  0012               	return		;funcret
  7051  0158E0                     __end_of_LCD_Parking:
  7052                           	opt stack 0
  7053                           tblptru	equ	0xFF8
  7054                           tblptrh	equ	0xFF7
  7055                           tblptrl	equ	0xFF6
  7056                           tablat	equ	0xFF5
  7057                           prodh	equ	0xFF4
  7058                           prodl	equ	0xFF3
  7059                           intcon	equ	0xFF2
  7060                           postinc0	equ	0xFEE
  7061                           wreg	equ	0xFE8
  7062                           postinc2	equ	0xFDE
  7063                           fsr2h	equ	0xFDA
  7064                           fsr2l	equ	0xFD9
  7065                           status	equ	0xFD8
  7066                           
  7067 ;; *************** function _LCD_Park *****************
  7068 ;; Defined at:
  7069 ;;		line 531 in file "RemoteCan.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;		None
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;		None
  7074 ;; Return value:  Size  Location     Type
  7075 ;;		None               void
  7076 ;; Registers used:
  7077 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7087 ;;Total ram usage:        0 bytes
  7088 ;; Hardware stack levels used:    1
  7089 ;; Hardware stack levels required when called:    9
  7090 ;; This function calls:
  7091 ;;		_LCD_clear
  7092 ;;		_LCD_goto_line
  7093 ;;		_LCD_initialize
  7094 ;;		_LCD_write_message
  7095 ;; This function is called by:
  7096 ;;		_main
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           	psect	text10
  7101  0158E0                     __ptext10:
  7102                           	opt stack 0
  7103  0158E0                     _LCD_Park:
  7104                           	opt stack 21
  7105                           
  7106                           ;RemoteCan.c: 532: LCD_initialize(16);
  7107                           
  7108                           ;incstack = 0
  7109  0158E0  0E10               	movlw	16
  7110  0158E2  EC6D  F0A5         	call	_LCD_initialize
  7111                           
  7112                           ;RemoteCan.c: 533: LCD_clear();
  7113  0158E6  EC13  F0AF         	call	_LCD_clear	;wreg free
  7114                           
  7115                           ;RemoteCan.c: 534: LCD_goto_line(1);
  7116  0158EA  0E01               	movlw	1
  7117  0158EC  EC7A  F0A8         	call	_LCD_goto_line
  7118                           
  7119                           ;RemoteCan.c: 535: LCD_write_message("= PARKING MESSAGES =");
  7120  0158F0  0E2A               	movlw	low STR_19
  7121  0158F2  0100               	movlb	0	; () banked
  7122  0158F4  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7123  0158F6  0EFF               	movlw	high STR_19
  7124  0158F8  0100               	movlb	0	; () banked
  7125  0158FA  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7126  0158FC  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7127                           
  7128                           ;RemoteCan.c: 536: LCD_goto_line(2);
  7129  015900  0E02               	movlw	2
  7130  015902  EC7A  F0A8         	call	_LCD_goto_line
  7131                           
  7132                           ;RemoteCan.c: 537: LCD_write_message("- Distance REACHED -");
  7133  015906  0EC1               	movlw	low STR_24
  7134  015908  0100               	movlb	0	; () banked
  7135  01590A  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7136  01590C  0EFE               	movlw	high STR_24
  7137  01590E  0100               	movlb	0	; () banked
  7138  015910  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7139  015912  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7140                           
  7141                           ;RemoteCan.c: 538: LCD_goto_line(3);
  7142  015916  0E03               	movlw	3
  7143  015918  EC7A  F0A8         	call	_LCD_goto_line
  7144                           
  7145                           ;RemoteCan.c: 539: LCD_write_message("Press the BUTTON to ");
  7146  01591C  0E97               	movlw	low STR_25
  7147  01591E  0100               	movlb	0	; () banked
  7148  015920  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7149  015922  0EFE               	movlw	high STR_25
  7150  015924  0100               	movlb	0	; () banked
  7151  015926  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7152  015928  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7153                           
  7154                           ;RemoteCan.c: 540: LCD_goto_line(4);
  7155  01592C  0E04               	movlw	4
  7156  01592E  EC7A  F0A8         	call	_LCD_goto_line
  7157                           
  7158                           ;RemoteCan.c: 541: LCD_write_message("   start parking    ");
  7159  015932  0E43               	movlw	low STR_26
  7160  015934  0100               	movlb	0	; () banked
  7161  015936  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7162  015938  0EFE               	movlw	high STR_26
  7163  01593A  0100               	movlb	0	; () banked
  7164  01593C  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7165  01593E  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7166  015942  0012               	return		;funcret
  7167  015944                     __end_of_LCD_Park:
  7168                           	opt stack 0
  7169                           tblptru	equ	0xFF8
  7170                           tblptrh	equ	0xFF7
  7171                           tblptrl	equ	0xFF6
  7172                           tablat	equ	0xFF5
  7173                           prodh	equ	0xFF4
  7174                           prodl	equ	0xFF3
  7175                           intcon	equ	0xFF2
  7176                           postinc0	equ	0xFEE
  7177                           wreg	equ	0xFE8
  7178                           postinc2	equ	0xFDE
  7179                           fsr2h	equ	0xFDA
  7180                           fsr2l	equ	0xFD9
  7181                           status	equ	0xFD8
  7182                           
  7183 ;; *************** function _LCD_Handler *****************
  7184 ;; Defined at:
  7185 ;;		line 444 in file "RemoteCan.c"
  7186 ;; Parameters:    Size  Location     Type
  7187 ;;		None
  7188 ;; Auto vars:     Size  Location     Type
  7189 ;;		None
  7190 ;; Return value:  Size  Location     Type
  7191 ;;		None               void
  7192 ;; Registers used:
  7193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7194 ;; Tracked objects:
  7195 ;;		On entry : 0/0
  7196 ;;		On exit  : 0/0
  7197 ;;		Unchanged: 0/0
  7198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7203 ;;Total ram usage:        0 bytes
  7204 ;; Hardware stack levels used:    1
  7205 ;; Hardware stack levels required when called:   10
  7206 ;; This function calls:
  7207 ;;		_CANisTxReady
  7208 ;;		_CANsendMessage
  7209 ;;		_LCD_clear
  7210 ;;		_LCD_goto_line
  7211 ;;		_LCD_goto_xy
  7212 ;;		_LCD_initialize
  7213 ;;		_LCD_write_integer
  7214 ;;		_LCD_write_message
  7215 ;;		_LCD_write_string
  7216 ;;		___fldiv
  7217 ;;		___lwtofl
  7218 ;;		_sprintf
  7219 ;; This function is called by:
  7220 ;;		_main
  7221 ;; This function uses a non-reentrant model
  7222 ;;
  7223                           
  7224                           	psect	text11
  7225  014030                     __ptext11:
  7226                           	opt stack 0
  7227  014030                     _LCD_Handler:
  7228                           	opt stack 20
  7229                           
  7230                           ;RemoteCan.c: 446: while (CANisTxReady() != 1);
  7231                           
  7232                           ;incstack = 0
  7233  014030  D000               	goto	l8344
  7234  014032                     l8344:
  7235  014032  EC57  F0AF         	call	_CANisTxReady	;wreg free
  7236  014036  06E8               	decf	wreg,f,c
  7237  014038  A4D8               	btfss	status,2,c
  7238  01403A  D7FB               	goto	l8344
  7239                           
  7240                           ;RemoteCan.c: 447: CANsendMessage(0b00000001000, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  7241  01403C  0E08               	movlw	8
  7242  01403E  0100               	movlb	0	; () banked
  7243  014040  6F72               	movwf	CANsendMessage@identifier& (0+255),b
  7244  014042  0E00               	movlw	0
  7245  014044  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  7246  014046  0E00               	movlw	0
  7247  014048  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  7248  01404A  0E00               	movlw	0
  7249  01404C  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  7250  01404E  0E1E               	movlw	low _data_speed
  7251  014050  0100               	movlb	0	; () banked
  7252  014052  6F76               	movwf	CANsendMessage@data& (0+255),b
  7253  014054  0E01               	movlw	high _data_speed
  7254  014056  0100               	movlb	0	; () banked
  7255  014058  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
  7256  01405A  0E08               	movlw	8
  7257  01405C  0100               	movlb	0	; () banked
  7258  01405E  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
  7259  014060  0EFC               	movlw	252
  7260  014062  0100               	movlb	0	; () banked
  7261  014064  6F79               	movwf	CANsendMessage@flags& (0+255),b
  7262  014066  EC09  F08E         	call	_CANsendMessage	;wreg free
  7263                           
  7264                           ;RemoteCan.c: 449: actual_speed_kmh = ((actual_speed) / 278.0);
  7265  01406A  C0E1  F07C         	movff	_actual_speed,___lwtofl@c	;volatile
  7266  01406E  C0E2  F07D         	movff	_actual_speed+1,___lwtofl@c+1	;volatile
  7267  014072  ECE1  F0AE         	call	___lwtofl	;wreg free
  7268  014076  C07C  F080         	movff	?___lwtofl,___fldiv@f1
  7269  01407A  C07D  F081         	movff	?___lwtofl+1,___fldiv@f1+1
  7270  01407E  C07E  F082         	movff	?___lwtofl+2,___fldiv@f1+2
  7271  014082  C07F  F083         	movff	?___lwtofl+3,___fldiv@f1+3
  7272  014086  0E00               	movlw	0
  7273  014088  0100               	movlb	0	; () banked
  7274  01408A  6F84               	movwf	___fldiv@f2& (0+255),b
  7275  01408C  0E00               	movlw	0
  7276  01408E  6F85               	movwf	(___fldiv@f2+1)& (0+255),b
  7277  014090  0E8B               	movlw	139
  7278  014092  6F86               	movwf	(___fldiv@f2+2)& (0+255),b
  7279  014094  0E43               	movlw	67
  7280  014096  6F87               	movwf	(___fldiv@f2+3)& (0+255),b
  7281  014098  ECD6  F0A6         	call	___fldiv	;wreg free
  7282  01409C  C080  F0C3         	movff	?___fldiv,_actual_speed_kmh	;volatile
  7283  0140A0  C081  F0C4         	movff	?___fldiv+1,_actual_speed_kmh+1	;volatile
  7284  0140A4  C082  F0C5         	movff	?___fldiv+2,_actual_speed_kmh+2	;volatile
  7285  0140A8  C083  F0C6         	movff	?___fldiv+3,_actual_speed_kmh+3	;volatile
  7286                           
  7287                           ;RemoteCan.c: 450: sprintf(str, "%.2f", actual_speed_kmh);
  7288  0140AC  0E0A               	movlw	low _str
  7289  0140AE  0100               	movlb	0	; () banked
  7290  0140B0  6FB3               	movwf	sprintf@sp& (0+255),b
  7291  0140B2  0E01               	movlw	high _str
  7292  0140B4  0100               	movlb	0	; () banked
  7293  0140B6  6FB4               	movwf	(sprintf@sp+1)& (0+255),b
  7294  0140B8  0EF9               	movlw	low STR_5
  7295  0140BA  0100               	movlb	0	; () banked
  7296  0140BC  6FB5               	movwf	sprintf@f& (0+255),b
  7297  0140BE  0EFF               	movlw	high STR_5
  7298  0140C0  0100               	movlb	0	; () banked
  7299  0140C2  6FB6               	movwf	(sprintf@f+1)& (0+255),b
  7300  0140C4  C0C3  F0B7         	movff	_actual_speed_kmh,?_sprintf+4	;volatile
  7301  0140C8  C0C4  F0B8         	movff	_actual_speed_kmh+1,?_sprintf+5	;volatile
  7302  0140CC  C0C5  F0B9         	movff	_actual_speed_kmh+2,?_sprintf+6	;volatile
  7303  0140D0  C0C6  F0BA         	movff	_actual_speed_kmh+3,?_sprintf+7	;volatile
  7304  0140D4  EC95  F085         	call	_sprintf	;wreg free
  7305                           
  7306                           ;RemoteCan.c: 451: str[11] = '\0';
  7307  0140D8  0E00               	movlw	0
  7308  0140DA  0101               	movlb	1	; () banked
  7309  0140DC  6F15               	movwf	(_str+11)& (0+255),b	;volatile
  7310                           
  7311                           ; BSR set to: 1
  7312                           ;RemoteCan.c: 453: if (display_refresh == 1) {
  7313  0140DE  AA4A               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  7314  0140E0  D03E               	goto	l8372
  7315                           
  7316                           ; BSR set to: 1
  7317                           ;RemoteCan.c: 454: LCD_initialize(16);
  7318  0140E2  0E10               	movlw	16
  7319  0140E4  EC6D  F0A5         	call	_LCD_initialize
  7320                           
  7321                           ;RemoteCan.c: 455: LCD_clear();
  7322  0140E8  EC13  F0AF         	call	_LCD_clear	;wreg free
  7323                           
  7324                           ;RemoteCan.c: 456: LCD_goto_line(1);
  7325  0140EC  0E01               	movlw	1
  7326  0140EE  EC7A  F0A8         	call	_LCD_goto_line
  7327                           
  7328                           ;RemoteCan.c: 457: LCD_write_message("=== VEHICLE DATA ===");
  7329  0140F2  0E54               	movlw	low STR_6
  7330  0140F4  0100               	movlb	0	; () banked
  7331  0140F6  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7332  0140F8  0EFF               	movlw	high STR_6
  7333  0140FA  0100               	movlb	0	; () banked
  7334  0140FC  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7335  0140FE  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7336                           
  7337                           ;RemoteCan.c: 458: LCD_goto_line(2);
  7338  014102  0E02               	movlw	2
  7339  014104  EC7A  F0A8         	call	_LCD_goto_line
  7340                           
  7341                           ;RemoteCan.c: 459: LCD_write_message("Direction: ");
  7342  014108  0EC7               	movlw	low STR_7
  7343  01410A  0100               	movlb	0	; () banked
  7344  01410C  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7345  01410E  0EFF               	movlw	high STR_7
  7346  014110  0100               	movlb	0	; () banked
  7347  014112  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7348  014114  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7349                           
  7350                           ;RemoteCan.c: 460: LCD_goto_line(3);
  7351  014118  0E03               	movlw	3
  7352  01411A  EC7A  F0A8         	call	_LCD_goto_line
  7353                           
  7354                           ;RemoteCan.c: 461: LCD_write_message("Speed: 0.00 Km/h");
  7355  01411E  0EA8               	movlw	low STR_8
  7356  014120  0100               	movlb	0	; () banked
  7357  014122  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7358  014124  0EFF               	movlw	high STR_8
  7359  014126  0100               	movlb	0	; () banked
  7360  014128  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7361  01412A  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7362                           
  7363                           ;RemoteCan.c: 462: LCD_goto_line(4);
  7364  01412E  0E04               	movlw	4
  7365  014130  EC7A  F0A8         	call	_LCD_goto_line
  7366                           
  7367                           ;RemoteCan.c: 463: if (1 == 0) {
  7368  014134  D009               	goto	l8368
  7369                           
  7370                           ;RemoteCan.c: 464: LCD_write_message("Park assist: ");
  7371  014136  0EB9               	movlw	low STR_9
  7372  014138  0100               	movlb	0	; () banked
  7373  01413A  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7374  01413C  0EFF               	movlw	high STR_9
  7375  01413E  0100               	movlb	0	; () banked
  7376  014140  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7377  014142  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7378                           
  7379                           ;RemoteCan.c: 465: } else {
  7380  014146  D009               	goto	l8370
  7381  014148                     l8368:
  7382                           
  7383                           ;RemoteCan.c: 466: LCD_write_message("Data: ");
  7384  014148  0EE3               	movlw	low STR_10
  7385  01414A  0100               	movlb	0	; () banked
  7386  01414C  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7387  01414E  0EFF               	movlw	high STR_10
  7388  014150  0100               	movlb	0	; () banked
  7389  014152  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7390  014154  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7391  014158  D000               	goto	l8370
  7392  01415A                     l8370:
  7393                           
  7394                           ;RemoteCan.c: 467: }
  7395                           ;RemoteCan.c: 468: display_refresh = 0;
  7396  01415A  9A4A               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  7397  01415C  D000               	goto	l8372
  7398  01415E                     l8372:
  7399                           
  7400                           ;RemoteCan.c: 469: }
  7401                           ;RemoteCan.c: 471: if (collision_msg == 0) {
  7402  01415E  B84A               	btfsc	_collision_msg/(0+8),_collision_msg& (0+7),c	;volatile
  7403  014160  D038               	goto	l886
  7404                           
  7405                           ;RemoteCan.c: 472: if (row_refresh == 1) {
  7406  014162  A44B               	btfss	_row_refresh/(0+8),_row_refresh& (0+7),c	;volatile
  7407  014164  D00D               	goto	l8382
  7408                           
  7409                           ;RemoteCan.c: 473: LCD_goto_line(2);
  7410  014166  0E02               	movlw	2
  7411  014168  EC7A  F0A8         	call	_LCD_goto_line
  7412                           
  7413                           ;RemoteCan.c: 474: LCD_write_message("Direction:          ");
  7414  01416C  0EEF               	movlw	low STR_11
  7415  01416E  0100               	movlb	0	; () banked
  7416  014170  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7417  014172  0EFD               	movlw	high STR_11
  7418  014174  0100               	movlb	0	; () banked
  7419  014176  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7420  014178  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7421                           
  7422                           ;RemoteCan.c: 475: row_refresh = 0;
  7423  01417C  944B               	bcf	_row_refresh/(0+8),_row_refresh& (0+7),c	;volatile
  7424  01417E  D000               	goto	l8382
  7425  014180                     l8382:
  7426                           
  7427                           ;RemoteCan.c: 476: }
  7428                           ;RemoteCan.c: 478: LCD_goto_xy(12, 2);
  7429  014180  0E02               	movlw	2
  7430  014182  0100               	movlb	0	; () banked
  7431  014184  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  7432  014186  0E0C               	movlw	12
  7433  014188  EC8B  F0AF         	call	_LCD_goto_xy
  7434                           
  7435                           ;RemoteCan.c: 479: if (switch_position != 0) {
  7436  01418C  0100               	movlb	0	; () banked
  7437  01418E  51EC               	movf	_switch_position& (0+255),w,b	;volatile
  7438  014190  B4D8               	btfsc	status,2,c
  7439  014192  D016               	goto	l8392
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;RemoteCan.c: 480: if (dir == 1) {
  7443  014194  0100               	movlb	0	; () banked
  7444  014196  05E8               	decf	_dir& (0+255),w,b	;volatile
  7445  014198  A4D8               	btfss	status,2,c
  7446  01419A  D009               	goto	l8390
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;RemoteCan.c: 481: LCD_write_message("FWD ");
  7450  01419C  0EEF               	movlw	low STR_12
  7451  01419E  0100               	movlb	0	; () banked
  7452  0141A0  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7453  0141A2  0EFF               	movlw	high STR_12
  7454  0141A4  0100               	movlb	0	; () banked
  7455  0141A6  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7456  0141A8  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7457                           
  7458                           ;RemoteCan.c: 482: } else {
  7459  0141AC  D01F               	goto	l8398
  7460  0141AE                     l8390:
  7461                           
  7462                           ;RemoteCan.c: 483: LCD_write_message("BKWD");
  7463  0141AE  0EF4               	movlw	low STR_13
  7464  0141B0  0100               	movlb	0	; () banked
  7465  0141B2  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7466  0141B4  0EFF               	movlw	high STR_13
  7467  0141B6  0100               	movlb	0	; () banked
  7468  0141B8  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7469  0141BA  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7470                           
  7471                           ;RemoteCan.c: 484: }
  7472                           ;RemoteCan.c: 485: } else {
  7473  0141BE  D016               	goto	l8398
  7474  0141C0                     l8392:
  7475                           
  7476                           ;RemoteCan.c: 486: LCD_write_message("P   ");
  7477  0141C0  0EEA               	movlw	low STR_14
  7478  0141C2  0100               	movlb	0	; () banked
  7479  0141C4  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7480  0141C6  0EFF               	movlw	high STR_14
  7481  0141C8  0100               	movlb	0	; () banked
  7482  0141CA  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7483  0141CC  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7484                           
  7485                           ;RemoteCan.c: 487: }
  7486                           ;RemoteCan.c: 488: } else {
  7487  0141D0  D00D               	goto	l8398
  7488  0141D2                     l886:
  7489                           
  7490                           ;RemoteCan.c: 489: row_refresh = 1;
  7491  0141D2  844B               	bsf	_row_refresh/(0+8),_row_refresh& (0+7),c	;volatile
  7492                           
  7493                           ;RemoteCan.c: 490: LCD_goto_line(2);
  7494  0141D4  0E02               	movlw	2
  7495  0141D6  EC7A  F0A8         	call	_LCD_goto_line
  7496                           
  7497                           ;RemoteCan.c: 491: LCD_write_message("-> Safety brake ON<-");
  7498  0141DA  0EEB               	movlw	low STR_15
  7499  0141DC  0100               	movlb	0	; () banked
  7500  0141DE  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7501  0141E0  0EFE               	movlw	high STR_15
  7502  0141E2  0100               	movlb	0	; () banked
  7503  0141E4  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7504  0141E6  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7505  0141EA  D000               	goto	l8398
  7506  0141EC                     l8398:
  7507                           
  7508                           ;RemoteCan.c: 492: }
  7509                           ;RemoteCan.c: 495: LCD_goto_xy(8, 3);
  7510  0141EC  0E03               	movlw	3
  7511  0141EE  0100               	movlb	0	; () banked
  7512  0141F0  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  7513  0141F2  0E08               	movlw	8
  7514  0141F4  EC8B  F0AF         	call	_LCD_goto_xy
  7515                           
  7516                           ;RemoteCan.c: 496: LCD_write_string(str);
  7517  0141F8  0E0A               	movlw	low _str
  7518  0141FA  0100               	movlb	0	; () banked
  7519  0141FC  6F83               	movwf	LCD_write_string@buffer& (0+255),b
  7520  0141FE  0E01               	movlw	high _str
  7521  014200  0100               	movlb	0	; () banked
  7522  014202  6F84               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  7523  014204  EC43  F0AF         	call	_LCD_write_string	;wreg free
  7524                           
  7525                           ;RemoteCan.c: 498: if (low_battery == 0) {
  7526  014208  AC4A               	btfss	_low_battery/(0+8),_low_battery& (0+7),c	;volatile
  7527  01420A  D01E               	goto	l8414
  7528  01420C  D030               	goto	l8418
  7529                           
  7530                           ;RemoteCan.c: 499: if (1 == 0) {
  7531  01420E  D01C               	goto	l8414
  7532                           
  7533                           ;RemoteCan.c: 501: LCD_goto_xy(14, 4);
  7534  014210  0E04               	movlw	4
  7535  014212  0100               	movlb	0	; () banked
  7536  014214  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  7537  014216  0E0E               	movlw	14
  7538  014218  EC8B  F0AF         	call	_LCD_goto_xy
  7539                           
  7540                           ;RemoteCan.c: 502: if (parking_state == 0) {
  7541  01421C  0100               	movlb	0	; () banked
  7542  01421E  51EA               	movf	_parking_state& (0+255),w,b	;volatile
  7543  014220  A4D8               	btfss	status,2,c
  7544  014222  D009               	goto	l8412
  7545                           
  7546                           ; BSR set to: 0
  7547                           ;RemoteCan.c: 503: LCD_write_message("OFF    ");
  7548  014224  0ED3               	movlw	low STR_16
  7549  014226  0100               	movlb	0	; () banked
  7550  014228  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7551  01422A  0EFF               	movlw	high STR_16
  7552  01422C  0100               	movlb	0	; () banked
  7553  01422E  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7554  014230  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7555                           
  7556                           ;RemoteCan.c: 504: } else {
  7557  014234  0012               	return	
  7558  014236                     l8412:
  7559                           
  7560                           ;RemoteCan.c: 505: LCD_write_message("SEARCH ");
  7561  014236  0EDB               	movlw	low STR_17
  7562  014238  0100               	movlb	0	; () banked
  7563  01423A  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7564  01423C  0EFF               	movlw	high STR_17
  7565  01423E  0100               	movlb	0	; () banked
  7566  014240  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7567  014242  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7568                           
  7569                           ;RemoteCan.c: 506: }
  7570                           ;RemoteCan.c: 507: } else {
  7571  014246  0012               	return	
  7572  014248                     l8414:
  7573                           
  7574                           ;RemoteCan.c: 509: LCD_goto_xy(7, 4);
  7575  014248  0E04               	movlw	4
  7576  01424A  0100               	movlb	0	; () banked
  7577  01424C  6F81               	movwf	LCD_goto_xy@y& (0+255),b
  7578  01424E  0E07               	movlw	7
  7579  014250  EC8B  F0AF         	call	_LCD_goto_xy
  7580                           
  7581                           ;RemoteCan.c: 510: LCD_write_integer(user_data, 0, 0x01);
  7582  014254  C00F  F08A         	movff	_user_data,LCD_write_integer@value	;volatile
  7583  014258  C010  F08B         	movff	_user_data+1,LCD_write_integer@value+1	;volatile
  7584  01425C  0E00               	movlw	0
  7585  01425E  0100               	movlb	0	; () banked
  7586  014260  6F8C               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  7587  014262  0E01               	movlw	1
  7588  014264  0100               	movlb	0	; () banked
  7589  014266  6F8D               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  7590  014268  EC2B  F0A2         	call	_LCD_write_integer	;wreg free
  7591                           
  7592                           ;RemoteCan.c: 511: }
  7593                           ;RemoteCan.c: 512: } else {
  7594  01426C  0012               	return	
  7595  01426E                     l8418:
  7596                           
  7597                           ;RemoteCan.c: 513: LCD_goto_line(4);
  7598  01426E  0E04               	movlw	4
  7599  014270  EC7A  F0A8         	call	_LCD_goto_line
  7600                           
  7601                           ;RemoteCan.c: 514: LCD_write_message("[!]  Low battery [!]");
  7602  014274  0E93               	movlw	low STR_18
  7603  014276  0100               	movlb	0	; () banked
  7604  014278  6F83               	movwf	LCD_write_message@buffer& (0+255),b
  7605  01427A  0EFF               	movlw	high STR_18
  7606  01427C  0100               	movlb	0	; () banked
  7607  01427E  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  7608  014280  ECAC  F0AE         	call	_LCD_write_message	;wreg free
  7609  014284  0012               	return	
  7610  014286  0012               	return		;funcret
  7611  014288                     __end_of_LCD_Handler:
  7612                           	opt stack 0
  7613                           tblptru	equ	0xFF8
  7614                           tblptrh	equ	0xFF7
  7615                           tblptrl	equ	0xFF6
  7616                           tablat	equ	0xFF5
  7617                           prodh	equ	0xFF4
  7618                           prodl	equ	0xFF3
  7619                           intcon	equ	0xFF2
  7620                           postinc0	equ	0xFEE
  7621                           wreg	equ	0xFE8
  7622                           postinc2	equ	0xFDE
  7623                           fsr2h	equ	0xFDA
  7624                           fsr2l	equ	0xFD9
  7625                           status	equ	0xFD8
  7626                           
  7627 ;; *************** function _sprintf *****************
  7628 ;; Defined at:
  7629 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;  sp              2   83[BANK0 ] PTR unsigned char 
  7632 ;;		 -> str(12), 
  7633 ;;  f               2   85[BANK0 ] PTR const unsigned char 
  7634 ;;		 -> STR_5(5), 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;  fval            4   22[BANK1 ] PTR const unsigned char 
  7637 ;;  tmpval          4   16[BANK1 ] struct .
  7638 ;;  val             4   10[BANK1 ] unsigned long 
  7639 ;;  cp              3    0        PTR const unsigned char 
  7640 ;;  prec            2   20[BANK1 ] int 
  7641 ;;  exp             2   14[BANK1 ] int 
  7642 ;;  flag            2    8[BANK1 ] unsigned short 
  7643 ;;  ap              2    6[BANK1 ] PTR void [1]
  7644 ;;		 -> ?_sprintf(2), 
  7645 ;;  len             2    0        unsigned int 
  7646 ;;  width           2    0        int 
  7647 ;;  c               1   26[BANK1 ] char 
  7648 ;;  d               1    0        unsigned char 
  7649 ;; Return value:  Size  Location     Type
  7650 ;;                  2   83[BANK0 ] int 
  7651 ;; Registers used:
  7652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7653 ;; Tracked objects:
  7654 ;;		On entry : 0/0
  7655 ;;		On exit  : 0/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7658 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7659 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  7660 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7661 ;;      Totals:         0       8      27       0       0       0       0       0       0       0       0       0       
      +0       0
  7662 ;;Total ram usage:       35 bytes
  7663 ;; Hardware stack levels used:    1
  7664 ;; Hardware stack levels required when called:    6
  7665 ;; This function calls:
  7666 ;;		___awdiv
  7667 ;;		___fladd
  7668 ;;		___flge
  7669 ;;		___flmul
  7670 ;;		___flneg
  7671 ;;		___flsub
  7672 ;;		___fltol
  7673 ;;		___lldiv
  7674 ;;		___llmod
  7675 ;;		___lltofl
  7676 ;;		___wmul
  7677 ;;		__div_to_l_
  7678 ;;		__tdiv_to_l_
  7679 ;;		_fround
  7680 ;;		_isdigit
  7681 ;;		_scale
  7682 ;; This function is called by:
  7683 ;;		_LCD_Handler
  7684 ;; This function uses a non-reentrant model
  7685 ;;
  7686                           
  7687                           	psect	text12
  7688  010B2A                     __ptext12:
  7689                           	opt stack 0
  7690  010B2A                     _sprintf:
  7691                           	opt stack 23
  7692                           
  7693                           ;doprnt.c: 494: va_list ap;
  7694                           ;doprnt.c: 499: signed char c;
  7695                           ;doprnt.c: 501: int width;
  7696                           ;doprnt.c: 504: int prec;
  7697                           ;doprnt.c: 508: unsigned short flag;
  7698                           ;doprnt.c: 515: char d;
  7699                           ;doprnt.c: 516: double fval;
  7700                           ;doprnt.c: 517: int exp;
  7701                           ;doprnt.c: 523: union {
  7702                           ;doprnt.c: 524: unsigned long vd;
  7703                           ;doprnt.c: 525: double integ;
  7704                           ;doprnt.c: 526: } tmpval;
  7705                           ;doprnt.c: 528: unsigned long val;
  7706                           ;doprnt.c: 529: unsigned len;
  7707                           ;doprnt.c: 530: const char * cp;
  7708                           ;doprnt.c: 533: *ap = __va_start();
  7709                           
  7710                           ;incstack = 0
  7711  010B2A  0EB7               	movlw	low (?_sprintf+4)
  7712  010B2C  0101               	movlb	1	; () banked
  7713  010B2E  6F3C               	movwf	sprintf@ap& (0+255),b
  7714  010B30  0E00               	movlw	high (?_sprintf+4)
  7715  010B32  0101               	movlb	1	; () banked
  7716  010B34  6F3D               	movwf	(sprintf@ap+1)& (0+255),b
  7717                           
  7718                           ;doprnt.c: 536: while(c = *f++) {
  7719  010B36  EF00  F08A         	goto	l8186
  7720  010B3A                     l7988:
  7721                           
  7722                           ; BSR set to: 1
  7723                           ;doprnt.c: 538: if(c != '%')
  7724  010B3A  0E25               	movlw	37
  7725  010B3C  0101               	movlb	1	; () banked
  7726  010B3E  1950               	xorwf	sprintf@c& (0+255),w,b
  7727  010B40  B4D8               	btfsc	status,2,c
  7728  010B42  D008               	goto	l7994
  7729                           
  7730                           ; BSR set to: 1
  7731                           ;doprnt.c: 540: {
  7732                           ;doprnt.c: 541: ((*sp++ = (c)));
  7733  010B44  C0B3  FFD9         	movff	sprintf@sp,fsr2l
  7734  010B48  C0B4  FFDA         	movff	sprintf@sp+1,fsr2h
  7735  010B4C  C150  FFDF         	movff	sprintf@c,indf2
  7736  010B50  EFFC  F089         	goto	l8184
  7737  010B54                     l7994:
  7738                           
  7739                           ;doprnt.c: 543: }
  7740                           ;doprnt.c: 548: flag = 0;
  7741  010B54  0E00               	movlw	0
  7742  010B56  0101               	movlb	1	; () banked
  7743  010B58  6F3F               	movwf	(sprintf@flag+1)& (0+255),b
  7744  010B5A  0E00               	movlw	0
  7745  010B5C  6F3E               	movwf	sprintf@flag& (0+255),b
  7746                           
  7747                           ; BSR set to: 1
  7748                           ;doprnt.c: 611: if(*f == '.') {
  7749  010B5E  C0B5  FFF6         	movff	sprintf@f,tblptrl
  7750  010B62  C0B6  FFF7         	movff	sprintf@f+1,tblptrh
  7751  010B66                     	if	0	;tblptru may be non-zero
  7752  010B66                     	endif
  7753  010B66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7754  010B66  0E00               	movlw	low (__mediumconst shr (0+16))
  7755  010B68  6EF8               	movwf	tblptru,c
  7756  010B6A                     	endif
  7757  010B6A  0008               	tblrd		*
  7758  010B6C  50F5               	movf	tablat,w,c
  7759  010B6E  0A2E               	xorlw	46
  7760  010B70  A4D8               	btfss	status,2,c
  7761  010B72  D03F               	goto	l8008
  7762                           
  7763                           ; BSR set to: 1
  7764                           ;doprnt.c: 612: flag |= 0x4000;
  7765  010B74  0101               	movlb	1	; () banked
  7766  010B76  8D3F               	bsf	(sprintf@flag+1)& (0+255),6,b
  7767                           
  7768                           ;doprnt.c: 613: f++;
  7769  010B78  0100               	movlb	0	; () banked
  7770  010B7A  4BB5               	infsnz	sprintf@f& (0+255),f,b
  7771  010B7C  2BB6               	incf	(sprintf@f+1)& (0+255),f,b
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;doprnt.c: 620: {
  7775                           ;doprnt.c: 621: prec = 0;
  7776  010B7E  0E00               	movlw	0
  7777  010B80  0101               	movlb	1	; () banked
  7778  010B82  6F4B               	movwf	(sprintf@prec+1)& (0+255),b
  7779  010B84  0E00               	movlw	0
  7780  010B86  6F4A               	movwf	sprintf@prec& (0+255),b
  7781                           
  7782                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  7783  010B88  D026               	goto	l8006
  7784  010B8A                     l8002:
  7785                           
  7786                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  7787  010B8A  C14A  F072         	movff	sprintf@prec,___wmul@multiplier
  7788  010B8E  C14B  F073         	movff	sprintf@prec+1,___wmul@multiplier+1
  7789  010B92  0E00               	movlw	0
  7790  010B94  0100               	movlb	0	; () banked
  7791  010B96  6F75               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7792  010B98  0E0A               	movlw	10
  7793  010B9A  6F74               	movwf	___wmul@multiplicand& (0+255),b
  7794  010B9C  EC75  F0AE         	call	___wmul	;wreg free
  7795  010BA0  C0B5  FFF6         	movff	sprintf@f,tblptrl
  7796  010BA4  C0B6  FFF7         	movff	sprintf@f+1,tblptrh
  7797  010BA8                     	if	0	;tblptru may be non-zero
  7798  010BA8                     	endif
  7799  010BA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7800  010BA8  0E00               	movlw	low (__mediumconst shr (0+16))
  7801  010BAA  6EF8               	movwf	tblptru,c
  7802  010BAC                     	endif
  7803  010BAC  0008               	tblrd		*
  7804  010BAE  50F5               	movf	tablat,w,c
  7805  010BB0  0100               	movlb	0	; () banked
  7806  010BB2  2772               	addwf	?___wmul& (0+255),f,b
  7807  010BB4  0E00               	movlw	0
  7808  010BB6  0100               	movlb	0	; () banked
  7809  010BB8  2373               	addwfc	(?___wmul+1)& (0+255),f,b
  7810  010BBA  0ED0               	movlw	208
  7811  010BBC  0100               	movlb	0	; () banked
  7812  010BBE  2572               	addwf	?___wmul& (0+255),w,b
  7813  010BC0  0101               	movlb	1	; () banked
  7814  010BC2  6F4A               	movwf	sprintf@prec& (0+255),b
  7815  010BC4  0EFF               	movlw	255
  7816  010BC6  0100               	movlb	0	; () banked
  7817  010BC8  2173               	addwfc	(?___wmul+1)& (0+255),w,b
  7818  010BCA  0101               	movlb	1	; () banked
  7819  010BCC  6F4B               	movwf	(sprintf@prec+1)& (0+255),b
  7820                           
  7821                           ; BSR set to: 1
  7822  010BCE  0100               	movlb	0	; () banked
  7823  010BD0  4BB5               	infsnz	sprintf@f& (0+255),f,b
  7824  010BD2  2BB6               	incf	(sprintf@f+1)& (0+255),f,b
  7825  010BD4  D000               	goto	l8006
  7826  010BD6                     l8006:
  7827  010BD6  C0B5  FFF6         	movff	sprintf@f,tblptrl
  7828  010BDA  C0B6  FFF7         	movff	sprintf@f+1,tblptrh
  7829  010BDE                     	if	0	;tblptru may be non-zero
  7830  010BDE                     	endif
  7831  010BDE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7832  010BDE  0E00               	movlw	low (__mediumconst shr (0+16))
  7833  010BE0  6EF8               	movwf	tblptru,c
  7834  010BE2                     	endif
  7835  010BE2  0008               	tblrd		*
  7836  010BE4  50F5               	movf	tablat,w,c
  7837  010BE6  EC2C  F0AF         	call	_isdigit
  7838  010BEA  A0D8               	btfss	status,0,c
  7839  010BEC  D011               	goto	l8016
  7840  010BEE  D7CD               	goto	l8002
  7841                           
  7842                           ;doprnt.c: 624: }
  7843                           ;doprnt.c: 625: } else {
  7844  010BF0  D00F               	goto	l8016
  7845  010BF2                     l8008:
  7846                           
  7847                           ;doprnt.c: 626: prec = 0;
  7848  010BF2  0E00               	movlw	0
  7849  010BF4  0101               	movlb	1	; () banked
  7850  010BF6  6F4B               	movwf	(sprintf@prec+1)& (0+255),b
  7851  010BF8  0E00               	movlw	0
  7852  010BFA  6F4A               	movwf	sprintf@prec& (0+255),b
  7853                           
  7854                           ; BSR set to: 1
  7855                           ;doprnt.c: 628: flag |= 0x1000;
  7856  010BFC  0101               	movlb	1	; () banked
  7857  010BFE  893F               	bsf	(sprintf@flag+1)& (0+255),4,b
  7858                           
  7859                           ; BSR set to: 1
  7860                           ;doprnt.c: 630: }
  7861                           ;doprnt.c: 635: switch(c = *f++) {
  7862  010C00  D007               	goto	l8016
  7863                           
  7864                           ; BSR set to: 1
  7865                           ;doprnt.c: 638: goto alldone;
  7866                           
  7867                           ;doprnt.c: 637: case 0:
  7868  010C02  EF13  F08A         	goto	l8188
  7869  010C06                     l8012:
  7870                           
  7871                           ; BSR set to: 1
  7872                           ;doprnt.c: 663: flag |= 0x400;
  7873  010C06  0101               	movlb	1	; () banked
  7874  010C08  853F               	bsf	(sprintf@flag+1)& (0+255),2,b
  7875                           
  7876                           ;doprnt.c: 664: break;
  7877  010C0A  D017               	goto	l8018
  7878                           
  7879                           ; BSR set to: 1
  7880                           ;doprnt.c: 813: continue;
  7881                           
  7882                           ;doprnt.c: 802: default:
  7883  010C0C  D3F9               	goto	l8186
  7884                           
  7885                           ; BSR set to: 1
  7886                           ;doprnt.c: 822: }
  7887  010C0E  D015               	goto	l8018
  7888  010C10                     l8016:
  7889  010C10  C0B5  FFF6         	movff	sprintf@f,tblptrl
  7890  010C14  C0B6  FFF7         	movff	sprintf@f+1,tblptrh
  7891  010C18  0100               	movlb	0	; () banked
  7892  010C1A  4BB5               	infsnz	sprintf@f& (0+255),f,b
  7893  010C1C  2BB6               	incf	(sprintf@f+1)& (0+255),f,b
  7894  010C1E                     	if	0	;tblptru may be non-zero
  7895  010C1E                     	endif
  7896  010C1E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7897  010C1E  0E00               	movlw	low (__mediumconst shr (0+16))
  7898  010C20  6EF8               	movwf	tblptru,c
  7899  010C22                     	endif
  7900  010C22  0008               	tblrd		*
  7901  010C24  CFF5 F150          	movff	tablat,sprintf@c
  7902  010C28  0101               	movlb	1	; () banked
  7903  010C2A  5150               	movf	sprintf@c& (0+255),w,b
  7904                           
  7905                           ; Switch size 1, requested type "space"
  7906                           ; Number of cases is 2, Range of values is 0 to 102
  7907                           ; switch strategies available:
  7908                           ; Name         Instructions Cycles
  7909                           ; simple_byte            7     4 (average)
  7910                           ;	Chosen strategy is simple_byte
  7911  010C2C  0A00               	xorlw	0	; case 0
  7912  010C2E  B4D8               	btfsc	status,2,c
  7913  010C30  D3FA               	goto	l8188
  7914  010C32  0A66               	xorlw	102	; case 102
  7915  010C34  B4D8               	btfsc	status,2,c
  7916  010C36  D7E7               	goto	l8012
  7917  010C38  D3E3               	goto	l8186
  7918  010C3A                     l8018:
  7919                           
  7920                           ; BSR set to: 1
  7921                           ;doprnt.c: 825: if(flag & (0x700)) {
  7922  010C3A  0E07               	movlw	7
  7923  010C3C  0101               	movlb	1	; () banked
  7924  010C3E  153F               	andwf	(sprintf@flag+1)& (0+255),w,b
  7925  010C40  B4D8               	btfsc	status,2,c
  7926  010C42  D383               	goto	l8166
  7927                           
  7928                           ; BSR set to: 1
  7929                           ;doprnt.c: 827: if(flag & 0x1000)
  7930  010C44  0101               	movlb	1	; () banked
  7931  010C46  A93F               	btfss	(sprintf@flag+1)& (0+255),4,b
  7932  010C48  D006               	goto	l8024
  7933                           
  7934                           ; BSR set to: 1
  7935                           ;doprnt.c: 829: prec = 6;
  7936  010C4A  0E00               	movlw	0
  7937  010C4C  0101               	movlb	1	; () banked
  7938  010C4E  6F4B               	movwf	(sprintf@prec+1)& (0+255),b
  7939  010C50  0E06               	movlw	6
  7940  010C52  6F4A               	movwf	sprintf@prec& (0+255),b
  7941  010C54  D000               	goto	l8024
  7942  010C56                     l8024:
  7943                           
  7944                           ; BSR set to: 1
  7945                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7946  010C56  C13C  FFD9         	movff	sprintf@ap,fsr2l
  7947  010C5A  C13D  FFDA         	movff	sprintf@ap+1,fsr2h
  7948  010C5E  CFDE F14C          	movff	postinc2,sprintf@fval
  7949  010C62  CFDE F14D          	movff	postinc2,sprintf@fval+1
  7950  010C66  CFDE F14E          	movff	postinc2,sprintf@fval+2
  7951  010C6A  CFDE F14F          	movff	postinc2,sprintf@fval+3
  7952                           
  7953                           ; BSR set to: 1
  7954  010C6E  0E04               	movlw	4
  7955  010C70  0101               	movlb	1	; () banked
  7956  010C72  273C               	addwf	sprintf@ap& (0+255),f,b
  7957  010C74  0E00               	movlw	0
  7958  010C76  233D               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7959                           
  7960                           ; BSR set to: 1
  7961                           ;doprnt.c: 831: if(fval < 0.0) {
  7962  010C78  0101               	movlb	1	; () banked
  7963  010C7A  AF4F               	btfss	(sprintf@fval+3)& (0+255),7,b
  7964  010C7C  D016               	goto	l8034
  7965                           
  7966                           ; BSR set to: 1
  7967                           ;doprnt.c: 832: fval = -fval;
  7968  010C7E  C14C  F090         	movff	sprintf@fval,___flneg@f1
  7969  010C82  C14D  F091         	movff	sprintf@fval+1,___flneg@f1+1
  7970  010C86  C14E  F092         	movff	sprintf@fval+2,___flneg@f1+2
  7971  010C8A  C14F  F093         	movff	sprintf@fval+3,___flneg@f1+3
  7972  010C8E  EC1D  F0AE         	call	___flneg	;wreg free
  7973  010C92  C090  F14C         	movff	?___flneg,sprintf@fval
  7974  010C96  C091  F14D         	movff	?___flneg+1,sprintf@fval+1
  7975  010C9A  C092  F14E         	movff	?___flneg+2,sprintf@fval+2
  7976  010C9E  C093  F14F         	movff	?___flneg+3,sprintf@fval+3
  7977                           
  7978                           ;doprnt.c: 833: flag |= 0x03;
  7979  010CA2  0E03               	movlw	3
  7980  010CA4  0101               	movlb	1	; () banked
  7981  010CA6  133E               	iorwf	sprintf@flag& (0+255),f,b
  7982  010CA8  D000               	goto	l8034
  7983  010CAA                     l8034:
  7984                           
  7985                           ; BSR set to: 1
  7986                           ;doprnt.c: 834: }
  7987                           ;doprnt.c: 835: exp = 0;
  7988  010CAA  0E00               	movlw	0
  7989  010CAC  0101               	movlb	1	; () banked
  7990  010CAE  6F45               	movwf	(sprintf@exp+1)& (0+255),b
  7991  010CB0  0E00               	movlw	0
  7992  010CB2  6F44               	movwf	sprintf@exp& (0+255),b
  7993                           
  7994                           ; BSR set to: 1
  7995                           ;doprnt.c: 836: if( fval!=0) {
  7996  010CB4  0101               	movlb	1	; () banked
  7997  010CB6  514C               	movf	sprintf@fval& (0+255),w,b
  7998  010CB8  0101               	movlb	1	; () banked
  7999  010CBA  114D               	iorwf	(sprintf@fval+1)& (0+255),w,b
  8000  010CBC  0101               	movlb	1	; () banked
  8001  010CBE  114E               	iorwf	(sprintf@fval+2)& (0+255),w,b
  8002  010CC0  0101               	movlb	1	; () banked
  8003  010CC2  114F               	iorwf	(sprintf@fval+3)& (0+255),w,b
  8004  010CC4  B4D8               	btfsc	status,2,c
  8005  010CC6  D090               	goto	l8062
  8006                           
  8007                           ; BSR set to: 1
  8008                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  8009  010CC8  0101               	movlb	1	; () banked
  8010  010CCA  354E               	rlcf	(sprintf@fval+2)& (0+255),w,b
  8011  010CCC  354F               	rlcf	(sprintf@fval+3)& (0+255),w,b
  8012  010CCE  0F82               	addlw	130
  8013  010CD0  0101               	movlb	1	; () banked
  8014  010CD2  6F44               	movwf	sprintf@exp& (0+255),b
  8015  010CD4  0101               	movlb	1	; () banked
  8016  010CD6  6B45               	clrf	(sprintf@exp+1)& (0+255),b
  8017  010CD8  0EFF               	movlw	255
  8018  010CDA  2345               	addwfc	(sprintf@exp+1)& (0+255),f,b
  8019                           
  8020                           ; BSR set to: 1
  8021                           ;doprnt.c: 838: exp--;
  8022  010CDC  0101               	movlb	1	; () banked
  8023  010CDE  0744               	decf	sprintf@exp& (0+255),f,b
  8024  010CE0  A0D8               	btfss	status,0,c
  8025  010CE2  0745               	decf	(sprintf@exp+1)& (0+255),f,b
  8026                           
  8027                           ; BSR set to: 1
  8028                           ;doprnt.c: 839: exp *= 3;
  8029  010CE4  C144  F072         	movff	sprintf@exp,___wmul@multiplier
  8030  010CE8  C145  F073         	movff	sprintf@exp+1,___wmul@multiplier+1
  8031  010CEC  0E00               	movlw	0
  8032  010CEE  0100               	movlb	0	; () banked
  8033  010CF0  6F75               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8034  010CF2  0E03               	movlw	3
  8035  010CF4  6F74               	movwf	___wmul@multiplicand& (0+255),b
  8036  010CF6  EC75  F0AE         	call	___wmul	;wreg free
  8037  010CFA  C072  F144         	movff	?___wmul,sprintf@exp
  8038  010CFE  C073  F145         	movff	?___wmul+1,sprintf@exp+1
  8039                           
  8040                           ;doprnt.c: 840: exp /= 10;
  8041  010D02  C144  F078         	movff	sprintf@exp,___awdiv@dividend
  8042  010D06  C145  F079         	movff	sprintf@exp+1,___awdiv@dividend+1
  8043  010D0A  0E00               	movlw	0
  8044  010D0C  0100               	movlb	0	; () banked
  8045  010D0E  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  8046  010D10  0E0A               	movlw	10
  8047  010D12  6F7A               	movwf	___awdiv@divisor& (0+255),b
  8048  010D14  ECF1  F0A8         	call	___awdiv	;wreg free
  8049  010D18  C078  F144         	movff	?___awdiv,sprintf@exp
  8050  010D1C  C079  F145         	movff	?___awdiv+1,sprintf@exp+1
  8051                           
  8052                           ;doprnt.c: 841: if(exp < 0)
  8053  010D20  0101               	movlb	1	; () banked
  8054  010D22  AF45               	btfss	(sprintf@exp+1)& (0+255),7,b
  8055  010D24  D005               	goto	l8050
  8056                           
  8057                           ; BSR set to: 1
  8058                           ;doprnt.c: 842: exp--;
  8059  010D26  0101               	movlb	1	; () banked
  8060  010D28  0744               	decf	sprintf@exp& (0+255),f,b
  8061  010D2A  A0D8               	btfss	status,0,c
  8062  010D2C  0745               	decf	(sprintf@exp+1)& (0+255),f,b
  8063  010D2E  D000               	goto	l8050
  8064  010D30                     l8050:
  8065                           
  8066                           ; BSR set to: 1
  8067                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  8068  010D30  0101               	movlb	1	; () banked
  8069  010D32  5144               	movf	sprintf@exp& (0+255),w,b
  8070  010D34  0800               	sublw	0
  8071  010D36  ECC2  F097         	call	_scale
  8072  010D3A  C090  F146         	movff	?_scale,sprintf@tmpval
  8073  010D3E  C091  F147         	movff	?_scale+1,sprintf@tmpval+1
  8074  010D42  C092  F148         	movff	?_scale+2,sprintf@tmpval+2
  8075  010D46  C093  F149         	movff	?_scale+3,sprintf@tmpval+3
  8076                           
  8077                           ;doprnt.c: 847: tmpval.integ *= fval;
  8078  010D4A  C146  F081         	movff	sprintf@tmpval,___flmul@f1
  8079  010D4E  C147  F082         	movff	sprintf@tmpval+1,___flmul@f1+1
  8080  010D52  C148  F083         	movff	sprintf@tmpval+2,___flmul@f1+2
  8081  010D56  C149  F084         	movff	sprintf@tmpval+3,___flmul@f1+3
  8082  010D5A  C14C  F085         	movff	sprintf@fval,___flmul@f2
  8083  010D5E  C14D  F086         	movff	sprintf@fval+1,___flmul@f2+1
  8084  010D62  C14E  F087         	movff	sprintf@fval+2,___flmul@f2+2
  8085  010D66  C14F  F088         	movff	sprintf@fval+3,___flmul@f2+3
  8086  010D6A  EC24  F0A6         	call	___flmul	;wreg free
  8087  010D6E  C081  F146         	movff	?___flmul,sprintf@tmpval
  8088  010D72  C082  F147         	movff	?___flmul+1,sprintf@tmpval+1
  8089  010D76  C083  F148         	movff	?___flmul+2,sprintf@tmpval+2
  8090  010D7A  C084  F149         	movff	?___flmul+3,sprintf@tmpval+3
  8091                           
  8092                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  8093  010D7E  C146  F072         	movff	sprintf@tmpval,___flge@ff1
  8094  010D82  C147  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  8095  010D86  C148  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  8096  010D8A  C149  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  8097  010D8E  0E00               	movlw	0
  8098  010D90  0100               	movlb	0	; () banked
  8099  010D92  6F76               	movwf	___flge@ff2& (0+255),b
  8100  010D94  0E00               	movlw	0
  8101  010D96  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  8102  010D98  0E80               	movlw	128
  8103  010D9A  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  8104  010D9C  0E3F               	movlw	63
  8105  010D9E  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  8106  010DA0  ECFE  F0A7         	call	___flge	;wreg free
  8107  010DA4  0100               	movlb	0	; () banked
  8108  010DA6  B0D8               	btfsc	status,0,c
  8109  010DA8  D005               	goto	l8058
  8110                           
  8111                           ; BSR set to: 0
  8112                           ;doprnt.c: 849: exp--;
  8113  010DAA  0101               	movlb	1	; () banked
  8114  010DAC  0744               	decf	sprintf@exp& (0+255),f,b
  8115  010DAE  A0D8               	btfss	status,0,c
  8116  010DB0  0745               	decf	(sprintf@exp+1)& (0+255),f,b
  8117  010DB2  D01A               	goto	l8062
  8118  010DB4                     l8058:
  8119                           
  8120                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  8121  010DB4  C146  F072         	movff	sprintf@tmpval,___flge@ff1
  8122  010DB8  C147  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  8123  010DBC  C148  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  8124  010DC0  C149  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  8125  010DC4  0E00               	movlw	0
  8126  010DC6  0100               	movlb	0	; () banked
  8127  010DC8  6F76               	movwf	___flge@ff2& (0+255),b
  8128  010DCA  0E00               	movlw	0
  8129  010DCC  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  8130  010DCE  0E20               	movlw	32
  8131  010DD0  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  8132  010DD2  0E41               	movlw	65
  8133  010DD4  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  8134  010DD6  ECFE  F0A7         	call	___flge	;wreg free
  8135  010DDA  0100               	movlb	0	; () banked
  8136  010DDC  A0D8               	btfss	status,0,c
  8137  010DDE  D004               	goto	l8062
  8138                           
  8139                           ; BSR set to: 0
  8140                           ;doprnt.c: 851: exp++;
  8141  010DE0  0101               	movlb	1	; () banked
  8142  010DE2  4B44               	infsnz	sprintf@exp& (0+255),f,b
  8143  010DE4  2B45               	incf	(sprintf@exp+1)& (0+255),f,b
  8144                           
  8145                           ; BSR set to: 1
  8146                           
  8147                           ; BSR set to: 1
  8148  010DE6  D000               	goto	l8062
  8149  010DE8                     l8062:
  8150                           
  8151                           ;doprnt.c: 852: }
  8152                           ;doprnt.c: 1112: if(prec <= 12)
  8153  010DE8  0101               	movlb	1	; () banked
  8154  010DEA  BF4B               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8155  010DEC  D008               	goto	l8064
  8156  010DEE  0101               	movlb	1	; () banked
  8157  010DF0  514B               	movf	(sprintf@prec+1)& (0+255),w,b
  8158  010DF2  E124               	bnz	l8066
  8159  010DF4  0E0D               	movlw	13
  8160  010DF6  0101               	movlb	1	; () banked
  8161  010DF8  5D4A               	subwf	sprintf@prec& (0+255),w,b
  8162  010DFA  B0D8               	btfsc	status,0,c
  8163  010DFC  D01F               	goto	l8066
  8164  010DFE                     l8064:
  8165                           
  8166                           ; BSR set to: 1
  8167                           ;doprnt.c: 1113: fval += fround(prec);
  8168  010DFE  C14C  F09D         	movff	sprintf@fval,___fladd@f1
  8169  010E02  C14D  F09E         	movff	sprintf@fval+1,___fladd@f1+1
  8170  010E06  C14E  F09F         	movff	sprintf@fval+2,___fladd@f1+2
  8171  010E0A  C14F  F0A0         	movff	sprintf@fval+3,___fladd@f1+3
  8172  010E0E  0101               	movlb	1	; () banked
  8173  010E10  514A               	movf	sprintf@prec& (0+255),w,b
  8174  010E12  EC2B  F09C         	call	_fround
  8175  010E16  C090  F0A1         	movff	?_fround,___fladd@f2
  8176  010E1A  C091  F0A2         	movff	?_fround+1,___fladd@f2+1
  8177  010E1E  C092  F0A3         	movff	?_fround+2,___fladd@f2+2
  8178  010E22  C093  F0A4         	movff	?_fround+3,___fladd@f2+3
  8179  010E26  ECE2  F09E         	call	___fladd	;wreg free
  8180  010E2A  C09D  F14C         	movff	?___fladd,sprintf@fval
  8181  010E2E  C09E  F14D         	movff	?___fladd+1,sprintf@fval+1
  8182  010E32  C09F  F14E         	movff	?___fladd+2,sprintf@fval+2
  8183  010E36  C0A0  F14F         	movff	?___fladd+3,sprintf@fval+3
  8184  010E3A  D000               	goto	l8066
  8185  010E3C                     l8066:
  8186                           
  8187                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  8188  010E3C  0101               	movlb	1	; () banked
  8189  010E3E  BF45               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8190  010E40  D008               	goto	l8068
  8191  010E42  0101               	movlb	1	; () banked
  8192  010E44  5145               	movf	(sprintf@exp+1)& (0+255),w,b
  8193  010E46  E130               	bnz	l8074
  8194  010E48  0E0A               	movlw	10
  8195  010E4A  0101               	movlb	1	; () banked
  8196  010E4C  5D44               	subwf	sprintf@exp& (0+255),w,b
  8197  010E4E  B0D8               	btfsc	status,0,c
  8198  010E50  D02B               	goto	l8074
  8199  010E52                     l8068:
  8200                           
  8201                           ; BSR set to: 1
  8202  010E52  0101               	movlb	1	; () banked
  8203  010E54  514C               	movf	sprintf@fval& (0+255),w,b
  8204  010E56  0101               	movlb	1	; () banked
  8205  010E58  114D               	iorwf	(sprintf@fval+1)& (0+255),w,b
  8206  010E5A  0101               	movlb	1	; () banked
  8207  010E5C  114E               	iorwf	(sprintf@fval+2)& (0+255),w,b
  8208  010E5E  0101               	movlb	1	; () banked
  8209  010E60  114F               	iorwf	(sprintf@fval+3)& (0+255),w,b
  8210  010E62  B4D8               	btfsc	status,2,c
  8211  010E64  D08C               	goto	l8088
  8212                           
  8213                           ; BSR set to: 1
  8214  010E66  C14C  F0A9         	movff	sprintf@fval,___fltol@f1
  8215  010E6A  C14D  F0AA         	movff	sprintf@fval+1,___fltol@f1+1
  8216  010E6E  C14E  F0AB         	movff	sprintf@fval+2,___fltol@f1+2
  8217  010E72  C14F  F0AC         	movff	sprintf@fval+3,___fltol@f1+3
  8218  010E76  EC71  F0A7         	call	___fltol	;wreg free
  8219  010E7A  0100               	movlb	0	; () banked
  8220  010E7C  51A9               	movf	?___fltol& (0+255),w,b
  8221  010E7E  0100               	movlb	0	; () banked
  8222  010E80  11AA               	iorwf	(?___fltol+1)& (0+255),w,b
  8223  010E82  0100               	movlb	0	; () banked
  8224  010E84  11AB               	iorwf	(?___fltol+2)& (0+255),w,b
  8225  010E86  0100               	movlb	0	; () banked
  8226  010E88  11AC               	iorwf	(?___fltol+3)& (0+255),w,b
  8227  010E8A  A4D8               	btfss	status,2,c
  8228  010E8C  D078               	goto	l8088
  8229                           
  8230                           ; BSR set to: 0
  8231  010E8E  0101               	movlb	1	; () banked
  8232  010E90  BF45               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8233  010E92  D075               	goto	l8088
  8234  010E94  0101               	movlb	1	; () banked
  8235  010E96  5145               	movf	(sprintf@exp+1)& (0+255),w,b
  8236  010E98  E107               	bnz	l8074
  8237  010E9A  0E02               	movlw	2
  8238  010E9C  0101               	movlb	1	; () banked
  8239  010E9E  5D44               	subwf	sprintf@exp& (0+255),w,b
  8240  010EA0  B0D8               	btfsc	status,0,c
  8241  010EA2  D002               	goto	l8074
  8242  010EA4  D06C               	goto	l8088
  8243  010EA6  D000               	goto	l8074
  8244  010EA8                     l8074:
  8245                           
  8246                           ; BSR set to: 1
  8247                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  8248  010EA8  C146  F072         	movff	sprintf@tmpval,___flge@ff1
  8249  010EAC  C147  F073         	movff	sprintf@tmpval+1,___flge@ff1+1
  8250  010EB0  C148  F074         	movff	sprintf@tmpval+2,___flge@ff1+2
  8251  010EB4  C149  F075         	movff	sprintf@tmpval+3,___flge@ff1+3
  8252  010EB8  0E5F               	movlw	95
  8253  010EBA  0100               	movlb	0	; () banked
  8254  010EBC  6F76               	movwf	___flge@ff2& (0+255),b
  8255  010EBE  0E70               	movlw	112
  8256  010EC0  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  8257  010EC2  0E89               	movlw	137
  8258  010EC4  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  8259  010EC6  0E40               	movlw	64
  8260  010EC8  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  8261  010ECA  ECFE  F0A7         	call	___flge	;wreg free
  8262  010ECE  0100               	movlb	0	; () banked
  8263  010ED0  B0D8               	btfsc	status,0,c
  8264  010ED2  D003               	goto	l8078
  8265                           
  8266                           ; BSR set to: 0
  8267                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  8268  010ED4  0101               	movlb	1	; () banked
  8269  010ED6  0EF7               	movlw	247
  8270  010ED8  D002               	goto	L4
  8271  010EDA                     l8078:
  8272                           
  8273                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  8274  010EDA  0101               	movlb	1	; () banked
  8275  010EDC  0EF8               	movlw	248
  8276  010EDE                     L4:
  8277  010EDE  2744               	addwf	sprintf@exp& (0+255),f,b
  8278  010EE0  0EFF               	movlw	255
  8279  010EE2  2345               	addwfc	(sprintf@exp+1)& (0+255),f,b
  8280  010EE4  D000               	goto	l8080
  8281  010EE6                     l8080:
  8282                           
  8283                           ; BSR set to: 1
  8284                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  8285  010EE6  0101               	movlb	1	; () banked
  8286  010EE8  5144               	movf	sprintf@exp& (0+255),w,b
  8287  010EEA  ECC2  F097         	call	_scale
  8288  010EEE  C090  F146         	movff	?_scale,sprintf@tmpval
  8289  010EF2  C091  F147         	movff	?_scale+1,sprintf@tmpval+1
  8290  010EF6  C092  F148         	movff	?_scale+2,sprintf@tmpval+2
  8291  010EFA  C093  F149         	movff	?_scale+3,sprintf@tmpval+3
  8292  010EFE  C14C  F072         	movff	sprintf@fval,__div_to_l_@f1
  8293  010F02  C14D  F073         	movff	sprintf@fval+1,__div_to_l_@f1+1
  8294  010F06  C14E  F074         	movff	sprintf@fval+2,__div_to_l_@f1+2
  8295  010F0A  C14F  F075         	movff	sprintf@fval+3,__div_to_l_@f1+3
  8296  010F0E  C146  F076         	movff	sprintf@tmpval,__div_to_l_@f2
  8297  010F12  C147  F077         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  8298  010F16  C148  F078         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  8299  010F1A  C149  F079         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  8300  010F1E  ECE3  F0A3         	call	__div_to_l_	;wreg free
  8301  010F22  C072  F140         	movff	?__div_to_l_,sprintf@val
  8302  010F26  C073  F141         	movff	?__div_to_l_+1,sprintf@val+1
  8303  010F2A  C074  F142         	movff	?__div_to_l_+2,sprintf@val+2
  8304  010F2E  C075  F143         	movff	?__div_to_l_+3,sprintf@val+3
  8305  010F32  D01B               	goto	l8086
  8306  010F34  C14C  F072         	movff	sprintf@fval,__tdiv_to_l_@f1
  8307  010F38  C14D  F073         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  8308  010F3C  C14E  F074         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  8309  010F40  C14F  F075         	movff	sprintf@fval+3,__tdiv_to_l_@f1+3
  8310  010F44  C146  F076         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  8311  010F48  C147  F077         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  8312  010F4C  C148  F078         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  8313  010F50  C149  F079         	movff	sprintf@tmpval+3,__tdiv_to_l_@f2+3
  8314  010F54  EC10  F0A3         	call	__tdiv_to_l_	;wreg free
  8315  010F58  C072  F140         	movff	?__tdiv_to_l_,sprintf@val
  8316  010F5C  C073  F141         	movff	?__tdiv_to_l_+1,sprintf@val+1
  8317  010F60  C074  F142         	movff	?__tdiv_to_l_+2,sprintf@val+2
  8318  010F64  C075  F143         	movff	?__tdiv_to_l_+3,sprintf@val+3
  8319  010F68  D000               	goto	l8086
  8320  010F6A                     l8086:
  8321                           
  8322                           ;doprnt.c: 1129: fval = 0.0;
  8323  010F6A  0E00               	movlw	0
  8324  010F6C  0101               	movlb	1	; () banked
  8325  010F6E  6F4C               	movwf	sprintf@fval& (0+255),b
  8326  010F70  0E00               	movlw	0
  8327  010F72  6F4D               	movwf	(sprintf@fval+1)& (0+255),b
  8328  010F74  0E00               	movlw	0
  8329  010F76  6F4E               	movwf	(sprintf@fval+2)& (0+255),b
  8330  010F78  0E00               	movlw	0
  8331  010F7A  6F4F               	movwf	(sprintf@fval+3)& (0+255),b
  8332                           
  8333                           ;doprnt.c: 1130: } else {
  8334  010F7C  D03C               	goto	l8092
  8335  010F7E                     l8088:
  8336                           
  8337                           ;doprnt.c: 1131: val = (unsigned long)fval;
  8338  010F7E  C14C  F0A9         	movff	sprintf@fval,___fltol@f1
  8339  010F82  C14D  F0AA         	movff	sprintf@fval+1,___fltol@f1+1
  8340  010F86  C14E  F0AB         	movff	sprintf@fval+2,___fltol@f1+2
  8341  010F8A  C14F  F0AC         	movff	sprintf@fval+3,___fltol@f1+3
  8342  010F8E  EC71  F0A7         	call	___fltol	;wreg free
  8343  010F92  C0A9  F140         	movff	?___fltol,sprintf@val
  8344  010F96  C0AA  F141         	movff	?___fltol+1,sprintf@val+1
  8345  010F9A  C0AB  F142         	movff	?___fltol+2,sprintf@val+2
  8346  010F9E  C0AC  F143         	movff	?___fltol+3,sprintf@val+3
  8347                           
  8348                           ;doprnt.c: 1132: fval -= (double)val;
  8349  010FA2  C14C  F0A9         	movff	sprintf@fval,___flsub@f1
  8350  010FA6  C14D  F0AA         	movff	sprintf@fval+1,___flsub@f1+1
  8351  010FAA  C14E  F0AB         	movff	sprintf@fval+2,___flsub@f1+2
  8352  010FAE  C14F  F0AC         	movff	sprintf@fval+3,___flsub@f1+3
  8353  010FB2  C140  F07C         	movff	sprintf@val,___lltofl@c
  8354  010FB6  C141  F07D         	movff	sprintf@val+1,___lltofl@c+1
  8355  010FBA  C142  F07E         	movff	sprintf@val+2,___lltofl@c+2
  8356  010FBE  C143  F07F         	movff	sprintf@val+3,___lltofl@c+3
  8357  010FC2  ECC7  F0AE         	call	___lltofl	;wreg free
  8358  010FC6  C07C  F0AD         	movff	?___lltofl,___flsub@f2
  8359  010FCA  C07D  F0AE         	movff	?___lltofl+1,___flsub@f2+1
  8360  010FCE  C07E  F0AF         	movff	?___lltofl+2,___flsub@f2+2
  8361  010FD2  C07F  F0B0         	movff	?___lltofl+3,___flsub@f2+3
  8362  010FD6  EC38  F0AD         	call	___flsub	;wreg free
  8363  010FDA  C0A9  F14C         	movff	?___flsub,sprintf@fval
  8364  010FDE  C0AA  F14D         	movff	?___flsub+1,sprintf@fval+1
  8365  010FE2  C0AB  F14E         	movff	?___flsub+2,sprintf@fval+2
  8366  010FE6  C0AC  F14F         	movff	?___flsub+3,sprintf@fval+3
  8367                           
  8368                           ;doprnt.c: 1133: exp = 0;
  8369  010FEA  0E00               	movlw	0
  8370  010FEC  0101               	movlb	1	; () banked
  8371  010FEE  6F45               	movwf	(sprintf@exp+1)& (0+255),b
  8372  010FF0  0E00               	movlw	0
  8373  010FF2  6F44               	movwf	sprintf@exp& (0+255),b
  8374  010FF4  D000               	goto	l8092
  8375  010FF6                     l8092:
  8376                           
  8377                           ; BSR set to: 1
  8378                           ;doprnt.c: 1134: }
  8379                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8380  010FF6  0E01               	movlw	1
  8381  010FF8  0101               	movlb	1	; () banked
  8382  010FFA  6F50               	movwf	sprintf@c& (0+255),b
  8383  010FFC                     l8094:
  8384                           
  8385                           ; BSR set to: 1
  8386  010FFC  0E0A               	movlw	10
  8387  010FFE  0101               	movlb	1	; () banked
  8388  011000  1950               	xorwf	sprintf@c& (0+255),w,b
  8389  011002  B4D8               	btfsc	status,2,c
  8390  011004  D025               	goto	l8106
  8391  011006  D001               	goto	l8098
  8392                           
  8393                           ; BSR set to: 1
  8394  011008  D023               	goto	l8106
  8395  01100A                     l8098:
  8396                           
  8397                           ; BSR set to: 1
  8398                           ;doprnt.c: 1137: if(val < dpowers[c])
  8399  01100A  0101               	movlb	1	; () banked
  8400  01100C  5150               	movf	sprintf@c& (0+255),w,b
  8401  01100E  0D04               	mullw	4
  8402  011010  0EC7               	movlw	low _dpowers
  8403  011012  24F3               	addwf	prodl,w,c
  8404  011014  6EF6               	movwf	tblptrl,c
  8405  011016  0EFD               	movlw	high _dpowers
  8406  011018  20F4               	addwfc	prodh,w,c
  8407  01101A  6EF7               	movwf	tblptrh,c
  8408  01101C                     	if	1	;There are 3 active tblptr bytes
  8409  01101C  6AF8               	clrf	tblptru,c
  8410  01101E  0E00               	movlw	low (__mediumconst shr (0+16))
  8411  011020  22F8               	addwfc	tblptru,f,c
  8412  011022                     	endif
  8413  011022  0009               	tblrd		*+
  8414  011024  50F5               	movf	tablat,w,c
  8415  011026  0101               	movlb	1	; () banked
  8416  011028  5D40               	subwf	sprintf@val& (0+255),w,b
  8417  01102A  0009               	tblrd		*+
  8418  01102C  50F5               	movf	tablat,w,c
  8419  01102E  0101               	movlb	1	; () banked
  8420  011030  5941               	subwfb	(sprintf@val+1)& (0+255),w,b
  8421  011032  0009               	tblrd		*+
  8422  011034  50F5               	movf	tablat,w,c
  8423  011036  0101               	movlb	1	; () banked
  8424  011038  5942               	subwfb	(sprintf@val+2)& (0+255),w,b
  8425  01103A  0009               	tblrd		*+
  8426  01103C  50F5               	movf	tablat,w,c
  8427  01103E  0101               	movlb	1	; () banked
  8428  011040  5943               	subwfb	(sprintf@val+3)& (0+255),w,b
  8429  011042  A0D8               	btfss	status,0,c
  8430  011044  D005               	goto	l8106
  8431  011046  D001               	goto	l8102
  8432                           
  8433                           ; BSR set to: 1
  8434                           ;doprnt.c: 1138: break;
  8435  011048  D003               	goto	l8106
  8436  01104A                     l8102:
  8437                           
  8438                           ; BSR set to: 1
  8439  01104A  0101               	movlb	1	; () banked
  8440  01104C  2B50               	incf	sprintf@c& (0+255),f,b
  8441  01104E  D7D6               	goto	l8094
  8442  011050                     l8106:
  8443                           
  8444                           ; BSR set to: 1
  8445                           ;doprnt.c: 1175: {
  8446                           ;doprnt.c: 1188: if(flag & 0x03)
  8447  011050  0E03               	movlw	3
  8448  011052  0101               	movlb	1	; () banked
  8449  011054  153E               	andwf	sprintf@flag& (0+255),w,b
  8450  011056  0101               	movlb	1	; () banked
  8451  011058  6F36               	movwf	??_sprintf& (0+255),b
  8452  01105A  0E00               	movlw	0
  8453  01105C  0101               	movlb	1	; () banked
  8454  01105E  153F               	andwf	(sprintf@flag+1)& (0+255),w,b
  8455  011060  0101               	movlb	1	; () banked
  8456  011062  6F37               	movwf	(??_sprintf+1)& (0+255),b
  8457  011064  0101               	movlb	1	; () banked
  8458  011066  5136               	movf	??_sprintf& (0+255),w,b
  8459  011068  0101               	movlb	1	; () banked
  8460  01106A  1137               	iorwf	(??_sprintf+1)& (0+255),w,b
  8461  01106C  B4D8               	btfsc	status,2,c
  8462  01106E  D058               	goto	l8120
  8463                           
  8464                           ; BSR set to: 1
  8465                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  8466  011070  C0B3  FFD9         	movff	sprintf@sp,fsr2l
  8467  011074  C0B4  FFDA         	movff	sprintf@sp+1,fsr2h
  8468  011078  0E2D               	movlw	45
  8469  01107A  D050               	goto	L5
  8470  01107C                     l8110:
  8471                           
  8472                           ; BSR set to: 1
  8473  01107C  0100               	movlb	0	; () banked
  8474  01107E  4BB3               	infsnz	sprintf@sp& (0+255),f,b
  8475  011080  2BB4               	incf	(sprintf@sp+1)& (0+255),f,b
  8476                           
  8477                           ; BSR set to: 0
  8478                           ;doprnt.c: 1195: }
  8479                           ;doprnt.c: 1196: while(c--) {
  8480  011082  D04E               	goto	l8120
  8481  011084                     l8112:
  8482                           
  8483                           ;doprnt.c: 1200: {
  8484                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  8485  011084  C140  F072         	movff	sprintf@val,___lldiv@dividend
  8486  011088  C141  F073         	movff	sprintf@val+1,___lldiv@dividend+1
  8487  01108C  C142  F074         	movff	sprintf@val+2,___lldiv@dividend+2
  8488  011090  C143  F075         	movff	sprintf@val+3,___lldiv@dividend+3
  8489  011094  0101               	movlb	1	; () banked
  8490  011096  5150               	movf	sprintf@c& (0+255),w,b
  8491  011098  0D04               	mullw	4
  8492  01109A  0EC7               	movlw	low _dpowers
  8493  01109C  24F3               	addwf	prodl,w,c
  8494  01109E  6EF6               	movwf	tblptrl,c
  8495  0110A0  0EFD               	movlw	high _dpowers
  8496  0110A2  20F4               	addwfc	prodh,w,c
  8497  0110A4  6EF7               	movwf	tblptrh,c
  8498  0110A6                     	if	1	;There are 3 active tblptr bytes
  8499  0110A6  6AF8               	clrf	tblptru,c
  8500  0110A8  0E00               	movlw	low (__mediumconst shr (0+16))
  8501  0110AA  22F8               	addwfc	tblptru,f,c
  8502  0110AC                     	endif
  8503  0110AC  0009               	tblrd		*+
  8504  0110AE  CFF5 F076          	movff	tablat,___lldiv@divisor
  8505  0110B2  0009               	tblrd		*+
  8506  0110B4  CFF5 F077          	movff	tablat,___lldiv@divisor+1
  8507  0110B8  0009               	tblrd		*+
  8508  0110BA  CFF5 F078          	movff	tablat,___lldiv@divisor+2
  8509  0110BE  000A               	tblrd		*-
  8510  0110C0  CFF5 F079          	movff	tablat,___lldiv@divisor+3
  8511  0110C4  EC59  F0A9         	call	___lldiv	;wreg free
  8512  0110C8  C072  F146         	movff	?___lldiv,sprintf@tmpval
  8513  0110CC  C073  F147         	movff	?___lldiv+1,sprintf@tmpval+1
  8514  0110D0  C074  F148         	movff	?___lldiv+2,sprintf@tmpval+2
  8515  0110D4  C075  F149         	movff	?___lldiv+3,sprintf@tmpval+3
  8516                           
  8517                           ;doprnt.c: 1202: tmpval.vd %= 10;
  8518  0110D8  C146  F072         	movff	sprintf@tmpval,___llmod@dividend
  8519  0110DC  C147  F073         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8520  0110E0  C148  F074         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8521  0110E4  C149  F075         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8522  0110E8  0E0A               	movlw	10
  8523  0110EA  0100               	movlb	0	; () banked
  8524  0110EC  6F76               	movwf	___llmod@divisor& (0+255),b
  8525  0110EE  0E00               	movlw	0
  8526  0110F0  6F77               	movwf	(___llmod@divisor+1)& (0+255),b
  8527  0110F2  0E00               	movlw	0
  8528  0110F4  6F78               	movwf	(___llmod@divisor+2)& (0+255),b
  8529  0110F6  0E00               	movlw	0
  8530  0110F8  6F79               	movwf	(___llmod@divisor+3)& (0+255),b
  8531  0110FA  EC2A  F0AB         	call	___llmod	;wreg free
  8532  0110FE  C072  F146         	movff	?___llmod,sprintf@tmpval
  8533  011102  C073  F147         	movff	?___llmod+1,sprintf@tmpval+1
  8534  011106  C074  F148         	movff	?___llmod+2,sprintf@tmpval+2
  8535  01110A  C075  F149         	movff	?___llmod+3,sprintf@tmpval+3
  8536                           
  8537                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  8538  01110E  0101               	movlb	1	; () banked
  8539  011110  5146               	movf	sprintf@tmpval& (0+255),w,b
  8540  011112  0F30               	addlw	48
  8541  011114  C0B3  FFD9         	movff	sprintf@sp,fsr2l
  8542  011118  C0B4  FFDA         	movff	sprintf@sp+1,fsr2h
  8543  01111C                     L5:
  8544  01111C  6EDF               	movwf	indf2,c
  8545  01111E  D7AE               	goto	l8110
  8546  011120                     l8120:
  8547  011120  0101               	movlb	1	; () banked
  8548  011122  0750               	decf	sprintf@c& (0+255),f,b
  8549  011124  0101               	movlb	1	; () banked
  8550  011126  2950               	incf	sprintf@c& (0+255),w,b
  8551  011128  B4D8               	btfsc	status,2,c
  8552  01112A  D010               	goto	l8128
  8553  01112C  D7AB               	goto	l8112
  8554                           
  8555                           ; BSR set to: 1
  8556                           ;doprnt.c: 1204: }
  8557                           ;doprnt.c: 1206: }
  8558                           ;doprnt.c: 1207: while(exp > 0) {
  8559  01112E  D00E               	goto	l8128
  8560  011130                     l8122:
  8561                           
  8562                           ; BSR set to: 1
  8563                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  8564  011130  C0B3  FFD9         	movff	sprintf@sp,fsr2l
  8565  011134  C0B4  FFDA         	movff	sprintf@sp+1,fsr2h
  8566  011138  0E30               	movlw	48
  8567  01113A  6EDF               	movwf	indf2,c
  8568                           
  8569                           ; BSR set to: 1
  8570  01113C  0100               	movlb	0	; () banked
  8571  01113E  4BB3               	infsnz	sprintf@sp& (0+255),f,b
  8572  011140  2BB4               	incf	(sprintf@sp+1)& (0+255),f,b
  8573                           
  8574                           ; BSR set to: 0
  8575                           ;doprnt.c: 1209: exp--;
  8576  011142  0101               	movlb	1	; () banked
  8577  011144  0744               	decf	sprintf@exp& (0+255),f,b
  8578  011146  A0D8               	btfss	status,0,c
  8579  011148  0745               	decf	(sprintf@exp+1)& (0+255),f,b
  8580  01114A  D000               	goto	l8128
  8581  01114C                     l8128:
  8582                           
  8583                           ; BSR set to: 1
  8584  01114C  0101               	movlb	1	; () banked
  8585  01114E  BF45               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8586  011150  D007               	goto	l8130
  8587  011152  0101               	movlb	1	; () banked
  8588  011154  5145               	movf	(sprintf@exp+1)& (0+255),w,b
  8589  011156  E1EC               	bnz	l8122
  8590  011158  0101               	movlb	1	; () banked
  8591  01115A  0544               	decf	sprintf@exp& (0+255),w,b
  8592  01115C  B0D8               	btfsc	status,0,c
  8593  01115E  D7E8               	goto	l8122
  8594  011160                     l8130:
  8595                           
  8596                           ; BSR set to: 1
  8597                           ;doprnt.c: 1210: }
  8598                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  8599  011160  0101               	movlb	1	; () banked
  8600  011162  BF4B               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8601  011164  D00C               	goto	l1036
  8602  011166  0101               	movlb	1	; () banked
  8603  011168  514B               	movf	(sprintf@prec+1)& (0+255),w,b
  8604  01116A  E105               	bnz	u10220
  8605  01116C  0E09               	movlw	9
  8606  01116E  0101               	movlb	1	; () banked
  8607  011170  5D4A               	subwf	sprintf@prec& (0+255),w,b
  8608  011172  A0D8               	btfss	status,0,c
  8609  011174  D004               	goto	l1036
  8610  011176                     u10220:
  8611                           
  8612                           ; BSR set to: 1
  8613                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  8614  011176  0E08               	movlw	8
  8615  011178  0101               	movlb	1	; () banked
  8616  01117A  6F50               	movwf	sprintf@c& (0+255),b
  8617  01117C  D003               	goto	l8134
  8618  01117E                     l1036:
  8619                           
  8620                           ; BSR set to: 1
  8621                           ;doprnt.c: 1213: else
  8622                           ;doprnt.c: 1214: c = prec;
  8623  01117E  C14A  F150         	movff	sprintf@prec,sprintf@c
  8624  011182  D000               	goto	l8134
  8625  011184                     l8134:
  8626                           
  8627                           ; BSR set to: 1
  8628                           ;doprnt.c: 1215: prec -= c;
  8629  011184  0101               	movlb	1	; () banked
  8630  011186  5150               	movf	sprintf@c& (0+255),w,b
  8631  011188  0101               	movlb	1	; () banked
  8632  01118A  5F4A               	subwf	sprintf@prec& (0+255),f,b
  8633  01118C  0E00               	movlw	0
  8634  01118E  0101               	movlb	1	; () banked
  8635  011190  BF50               	btfsc	sprintf@c& (0+255),7,b
  8636  011192  0EFF               	movlw	255
  8637  011194  0101               	movlb	1	; () banked
  8638  011196  5B4B               	subwfb	(sprintf@prec+1)& (0+255),f,b
  8639                           
  8640                           ; BSR set to: 1
  8641                           ;doprnt.c: 1219: if(c)
  8642  011198  0101               	movlb	1	; () banked
  8643  01119A  5150               	movf	sprintf@c& (0+255),w,b
  8644  01119C  0101               	movlb	1	; () banked
  8645  01119E  B4D8               	btfsc	status,2,c
  8646  0111A0  D00A               	goto	l8142
  8647                           
  8648                           ; BSR set to: 1
  8649                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  8650  0111A2  C0B3  FFD9         	movff	sprintf@sp,fsr2l
  8651  0111A6  C0B4  FFDA         	movff	sprintf@sp+1,fsr2h
  8652  0111AA  0E2E               	movlw	46
  8653  0111AC  6EDF               	movwf	indf2,c
  8654                           
  8655                           ; BSR set to: 1
  8656  0111AE  0100               	movlb	0	; () banked
  8657  0111B0  4BB3               	infsnz	sprintf@sp& (0+255),f,b
  8658  0111B2  2BB4               	incf	(sprintf@sp+1)& (0+255),f,b
  8659  0111B4  D000               	goto	l8142
  8660  0111B6                     l8142:
  8661                           
  8662                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8663  0111B6  0101               	movlb	1	; () banked
  8664  0111B8  5150               	movf	sprintf@c& (0+255),w,b
  8665  0111BA  ECC2  F097         	call	_scale
  8666  0111BE  C090  F138         	movff	?_scale,_sprintf$4230
  8667  0111C2  C091  F139         	movff	?_scale+1,_sprintf$4230+1
  8668  0111C6  C092  F13A         	movff	?_scale+2,_sprintf$4230+2
  8669  0111CA  C093  F13B         	movff	?_scale+3,_sprintf$4230+3
  8670                           
  8671                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8672  0111CE  C14C  F085         	movff	sprintf@fval,___flmul@f2
  8673  0111D2  C14D  F086         	movff	sprintf@fval+1,___flmul@f2+1
  8674  0111D6  C14E  F087         	movff	sprintf@fval+2,___flmul@f2+2
  8675  0111DA  C14F  F088         	movff	sprintf@fval+3,___flmul@f2+3
  8676  0111DE  C138  F081         	movff	_sprintf$4230,___flmul@f1
  8677  0111E2  C139  F082         	movff	_sprintf$4230+1,___flmul@f1+1
  8678  0111E6  C13A  F083         	movff	_sprintf$4230+2,___flmul@f1+2
  8679  0111EA  C13B  F084         	movff	_sprintf$4230+3,___flmul@f1+3
  8680  0111EE  EC24  F0A6         	call	___flmul	;wreg free
  8681  0111F2  C081  F0A9         	movff	?___flmul,___fltol@f1
  8682  0111F6  C082  F0AA         	movff	?___flmul+1,___fltol@f1+1
  8683  0111FA  C083  F0AB         	movff	?___flmul+2,___fltol@f1+2
  8684  0111FE  C084  F0AC         	movff	?___flmul+3,___fltol@f1+3
  8685  011202  EC71  F0A7         	call	___fltol	;wreg free
  8686  011206  C0A9  F140         	movff	?___fltol,sprintf@val
  8687  01120A  C0AA  F141         	movff	?___fltol+1,sprintf@val+1
  8688  01120E  C0AB  F142         	movff	?___fltol+2,sprintf@val+2
  8689  011212  C0AC  F143         	movff	?___fltol+3,sprintf@val+3
  8690                           
  8691                           ;doprnt.c: 1228: while(c--) {
  8692  011216  D07B               	goto	l8156
  8693  011218                     l8146:
  8694                           
  8695                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  8696  011218  C140  F072         	movff	sprintf@val,___lldiv@dividend
  8697  01121C  C141  F073         	movff	sprintf@val+1,___lldiv@dividend+1
  8698  011220  C142  F074         	movff	sprintf@val+2,___lldiv@dividend+2
  8699  011224  C143  F075         	movff	sprintf@val+3,___lldiv@dividend+3
  8700  011228  0101               	movlb	1	; () banked
  8701  01122A  5150               	movf	sprintf@c& (0+255),w,b
  8702  01122C  0D04               	mullw	4
  8703  01122E  0EC7               	movlw	low _dpowers
  8704  011230  24F3               	addwf	prodl,w,c
  8705  011232  6EF6               	movwf	tblptrl,c
  8706  011234  0EFD               	movlw	high _dpowers
  8707  011236  20F4               	addwfc	prodh,w,c
  8708  011238  6EF7               	movwf	tblptrh,c
  8709  01123A                     	if	1	;There are 3 active tblptr bytes
  8710  01123A  6AF8               	clrf	tblptru,c
  8711  01123C  0E00               	movlw	low (__mediumconst shr (0+16))
  8712  01123E  22F8               	addwfc	tblptru,f,c
  8713  011240                     	endif
  8714  011240  0009               	tblrd		*+
  8715  011242  CFF5 F076          	movff	tablat,___lldiv@divisor
  8716  011246  0009               	tblrd		*+
  8717  011248  CFF5 F077          	movff	tablat,___lldiv@divisor+1
  8718  01124C  0009               	tblrd		*+
  8719  01124E  CFF5 F078          	movff	tablat,___lldiv@divisor+2
  8720  011252  000A               	tblrd		*-
  8721  011254  CFF5 F079          	movff	tablat,___lldiv@divisor+3
  8722  011258  EC59  F0A9         	call	___lldiv	;wreg free
  8723  01125C  C072  F146         	movff	?___lldiv,sprintf@tmpval
  8724  011260  C073  F147         	movff	?___lldiv+1,sprintf@tmpval+1
  8725  011264  C074  F148         	movff	?___lldiv+2,sprintf@tmpval+2
  8726  011268  C075  F149         	movff	?___lldiv+3,sprintf@tmpval+3
  8727                           
  8728                           ;doprnt.c: 1230: tmpval.vd %= 10;
  8729  01126C  C146  F072         	movff	sprintf@tmpval,___llmod@dividend
  8730  011270  C147  F073         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8731  011274  C148  F074         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8732  011278  C149  F075         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8733  01127C  0E0A               	movlw	10
  8734  01127E  0100               	movlb	0	; () banked
  8735  011280  6F76               	movwf	___llmod@divisor& (0+255),b
  8736  011282  0E00               	movlw	0
  8737  011284  6F77               	movwf	(___llmod@divisor+1)& (0+255),b
  8738  011286  0E00               	movlw	0
  8739  011288  6F78               	movwf	(___llmod@divisor+2)& (0+255),b
  8740  01128A  0E00               	movlw	0
  8741  01128C  6F79               	movwf	(___llmod@divisor+3)& (0+255),b
  8742  01128E  EC2A  F0AB         	call	___llmod	;wreg free
  8743  011292  C072  F146         	movff	?___llmod,sprintf@tmpval
  8744  011296  C073  F147         	movff	?___llmod+1,sprintf@tmpval+1
  8745  01129A  C074  F148         	movff	?___llmod+2,sprintf@tmpval+2
  8746  01129E  C075  F149         	movff	?___llmod+3,sprintf@tmpval+3
  8747                           
  8748                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  8749  0112A2  0101               	movlb	1	; () banked
  8750  0112A4  5146               	movf	sprintf@tmpval& (0+255),w,b
  8751  0112A6  0F30               	addlw	48
  8752  0112A8  C0B3  FFD9         	movff	sprintf@sp,fsr2l
  8753  0112AC  C0B4  FFDA         	movff	sprintf@sp+1,fsr2h
  8754  0112B0  6EDF               	movwf	indf2,c
  8755                           
  8756                           ; BSR set to: 1
  8757  0112B2  0100               	movlb	0	; () banked
  8758  0112B4  4BB3               	infsnz	sprintf@sp& (0+255),f,b
  8759  0112B6  2BB4               	incf	(sprintf@sp+1)& (0+255),f,b
  8760                           
  8761                           ; BSR set to: 0
  8762                           ;doprnt.c: 1232: val %= dpowers[c];
  8763  0112B8  C140  F072         	movff	sprintf@val,___llmod@dividend
  8764  0112BC  C141  F073         	movff	sprintf@val+1,___llmod@dividend+1
  8765  0112C0  C142  F074         	movff	sprintf@val+2,___llmod@dividend+2
  8766  0112C4  C143  F075         	movff	sprintf@val+3,___llmod@dividend+3
  8767  0112C8  0101               	movlb	1	; () banked
  8768  0112CA  5150               	movf	sprintf@c& (0+255),w,b
  8769  0112CC  0D04               	mullw	4
  8770  0112CE  0EC7               	movlw	low _dpowers
  8771  0112D0  24F3               	addwf	prodl,w,c
  8772  0112D2  6EF6               	movwf	tblptrl,c
  8773  0112D4  0EFD               	movlw	high _dpowers
  8774  0112D6  20F4               	addwfc	prodh,w,c
  8775  0112D8  6EF7               	movwf	tblptrh,c
  8776  0112DA                     	if	1	;There are 3 active tblptr bytes
  8777  0112DA  6AF8               	clrf	tblptru,c
  8778  0112DC  0E00               	movlw	low (__mediumconst shr (0+16))
  8779  0112DE  22F8               	addwfc	tblptru,f,c
  8780  0112E0                     	endif
  8781  0112E0  0009               	tblrd		*+
  8782  0112E2  CFF5 F076          	movff	tablat,___llmod@divisor
  8783  0112E6  0009               	tblrd		*+
  8784  0112E8  CFF5 F077          	movff	tablat,___llmod@divisor+1
  8785  0112EC  0009               	tblrd		*+
  8786  0112EE  CFF5 F078          	movff	tablat,___llmod@divisor+2
  8787  0112F2  000A               	tblrd		*-
  8788  0112F4  CFF5 F079          	movff	tablat,___llmod@divisor+3
  8789  0112F8  EC2A  F0AB         	call	___llmod	;wreg free
  8790  0112FC  C072  F140         	movff	?___llmod,sprintf@val
  8791  011300  C073  F141         	movff	?___llmod+1,sprintf@val+1
  8792  011304  C074  F142         	movff	?___llmod+2,sprintf@val+2
  8793  011308  C075  F143         	movff	?___llmod+3,sprintf@val+3
  8794  01130C  D000               	goto	l8156
  8795  01130E                     l8156:
  8796  01130E  0101               	movlb	1	; () banked
  8797  011310  0750               	decf	sprintf@c& (0+255),f,b
  8798  011312  0101               	movlb	1	; () banked
  8799  011314  2950               	incf	sprintf@c& (0+255),w,b
  8800  011316  B4D8               	btfsc	status,2,c
  8801  011318  D010               	goto	l8164
  8802  01131A  D77E               	goto	l8146
  8803                           
  8804                           ; BSR set to: 1
  8805                           ;doprnt.c: 1233: }
  8806                           ;doprnt.c: 1235: while(prec) {
  8807  01131C  D00E               	goto	l8164
  8808  01131E                     l8158:
  8809                           
  8810                           ; BSR set to: 1
  8811                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  8812  01131E  C0B3  FFD9         	movff	sprintf@sp,fsr2l
  8813  011322  C0B4  FFDA         	movff	sprintf@sp+1,fsr2h
  8814  011326  0E30               	movlw	48
  8815  011328  6EDF               	movwf	indf2,c
  8816                           
  8817                           ; BSR set to: 1
  8818  01132A  0100               	movlb	0	; () banked
  8819  01132C  4BB3               	infsnz	sprintf@sp& (0+255),f,b
  8820  01132E  2BB4               	incf	(sprintf@sp+1)& (0+255),f,b
  8821                           
  8822                           ; BSR set to: 0
  8823                           ;doprnt.c: 1237: prec--;
  8824  011330  0101               	movlb	1	; () banked
  8825  011332  074A               	decf	sprintf@prec& (0+255),f,b
  8826  011334  A0D8               	btfss	status,0,c
  8827  011336  074B               	decf	(sprintf@prec+1)& (0+255),f,b
  8828  011338  D000               	goto	l8164
  8829  01133A                     l8164:
  8830                           
  8831                           ; BSR set to: 1
  8832  01133A  0101               	movlb	1	; () banked
  8833  01133C  514A               	movf	sprintf@prec& (0+255),w,b
  8834  01133E  0101               	movlb	1	; () banked
  8835  011340  114B               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8836  011342  B4D8               	btfsc	status,2,c
  8837  011344  D05D               	goto	l8186
  8838  011346  D7EB               	goto	l8158
  8839                           
  8840                           ; BSR set to: 1
  8841                           ;doprnt.c: 1238: }
  8842                           ;doprnt.c: 1245: continue;
  8843  011348  D05B               	goto	l8186
  8844  01134A                     l8166:
  8845                           
  8846                           ; BSR set to: 1
  8847                           ;doprnt.c: 1246: }
  8848                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  8849  01134A  0101               	movlb	1	; () banked
  8850  01134C  514A               	movf	sprintf@prec& (0+255),w,b
  8851  01134E  0101               	movlb	1	; () banked
  8852  011350  114B               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8853  011352  A4D8               	btfss	status,2,c
  8854  011354  D00E               	goto	l8172
  8855                           
  8856                           ; BSR set to: 1
  8857  011356  0101               	movlb	1	; () banked
  8858  011358  5140               	movf	sprintf@val& (0+255),w,b
  8859  01135A  0101               	movlb	1	; () banked
  8860  01135C  1141               	iorwf	(sprintf@val+1)& (0+255),w,b
  8861  01135E  0101               	movlb	1	; () banked
  8862  011360  1142               	iorwf	(sprintf@val+2)& (0+255),w,b
  8863  011362  0101               	movlb	1	; () banked
  8864  011364  1143               	iorwf	(sprintf@val+3)& (0+255),w,b
  8865  011366  A4D8               	btfss	status,2,c
  8866  011368  D004               	goto	l8172
  8867                           
  8868                           ; BSR set to: 1
  8869                           ;doprnt.c: 1291: prec++;
  8870  01136A  0101               	movlb	1	; () banked
  8871  01136C  4B4A               	infsnz	sprintf@prec& (0+255),f,b
  8872  01136E  2B4B               	incf	(sprintf@prec+1)& (0+255),f,b
  8873  011370  D000               	goto	l8172
  8874  011372                     l8172:
  8875                           
  8876                           ; BSR set to: 1
  8877                           ;doprnt.c: 1339: if(c < prec)
  8878  011372  0E80               	movlw	128
  8879  011374  0101               	movlb	1	; () banked
  8880  011376  BF50               	btfsc	sprintf@c& (0+255),7,b
  8881  011378  0E7F               	movlw	127
  8882  01137A  0101               	movlb	1	; () banked
  8883  01137C  6F36               	movwf	??_sprintf& (0+255),b
  8884  01137E  0101               	movlb	1	; () banked
  8885  011380  514A               	movf	sprintf@prec& (0+255),w,b
  8886  011382  0101               	movlb	1	; () banked
  8887  011384  5D50               	subwf	sprintf@c& (0+255),w,b
  8888  011386  0101               	movlb	1	; () banked
  8889  011388  514B               	movf	(sprintf@prec+1)& (0+255),w,b
  8890  01138A  0A80               	xorlw	128
  8891  01138C  0101               	movlb	1	; () banked
  8892  01138E  5936               	subwfb	??_sprintf& (0+255),w,b
  8893  011390  B0D8               	btfsc	status,0,c
  8894  011392  D003               	goto	l8176
  8895                           
  8896                           ; BSR set to: 1
  8897                           ;doprnt.c: 1340: c = prec;
  8898  011394  C14A  F150         	movff	sprintf@prec,sprintf@c
  8899  011398  D019               	goto	l8180
  8900  01139A                     l8176:
  8901                           
  8902                           ; BSR set to: 1
  8903                           ;doprnt.c: 1341: else if(prec < c)
  8904  01139A  0101               	movlb	1	; () banked
  8905  01139C  514B               	movf	(sprintf@prec+1)& (0+255),w,b
  8906  01139E  0A80               	xorlw	128
  8907  0113A0  0101               	movlb	1	; () banked
  8908  0113A2  6F36               	movwf	??_sprintf& (0+255),b
  8909  0113A4  0101               	movlb	1	; () banked
  8910  0113A6  5150               	movf	sprintf@c& (0+255),w,b
  8911  0113A8  0101               	movlb	1	; () banked
  8912  0113AA  5D4A               	subwf	sprintf@prec& (0+255),w,b
  8913  0113AC  0E80               	movlw	128
  8914  0113AE  0101               	movlb	1	; () banked
  8915  0113B0  BF50               	btfsc	sprintf@c& (0+255),7,b
  8916  0113B2  0E7F               	movlw	127
  8917  0113B4  0101               	movlb	1	; () banked
  8918  0113B6  5936               	subwfb	??_sprintf& (0+255),w,b
  8919  0113B8  B0D8               	btfsc	status,0,c
  8920  0113BA  D008               	goto	l8180
  8921                           
  8922                           ; BSR set to: 1
  8923                           ;doprnt.c: 1342: prec = c;
  8924  0113BC  0101               	movlb	1	; () banked
  8925  0113BE  5150               	movf	sprintf@c& (0+255),w,b
  8926  0113C0  0101               	movlb	1	; () banked
  8927  0113C2  6F4A               	movwf	sprintf@prec& (0+255),b
  8928  0113C4  6B4B               	clrf	(sprintf@prec+1)& (0+255),b
  8929  0113C6  BF4A               	btfsc	sprintf@prec& (0+255),7,b
  8930  0113C8  074B               	decf	(sprintf@prec+1)& (0+255),f,b
  8931                           
  8932                           ; BSR set to: 1
  8933  0113CA  D000               	goto	l8180
  8934  0113CC                     l8180:
  8935                           
  8936                           ; BSR set to: 1
  8937                           ;doprnt.c: 1422: {
  8938                           ;doprnt.c: 1438: if(flag & 0x03)
  8939  0113CC  0E03               	movlw	3
  8940  0113CE  0101               	movlb	1	; () banked
  8941  0113D0  153E               	andwf	sprintf@flag& (0+255),w,b
  8942  0113D2  0101               	movlb	1	; () banked
  8943  0113D4  6F36               	movwf	??_sprintf& (0+255),b
  8944  0113D6  0E00               	movlw	0
  8945  0113D8  0101               	movlb	1	; () banked
  8946  0113DA  153F               	andwf	(sprintf@flag+1)& (0+255),w,b
  8947  0113DC  0101               	movlb	1	; () banked
  8948  0113DE  6F37               	movwf	(??_sprintf+1)& (0+255),b
  8949  0113E0  0101               	movlb	1	; () banked
  8950  0113E2  5136               	movf	??_sprintf& (0+255),w,b
  8951  0113E4  0101               	movlb	1	; () banked
  8952  0113E6  1137               	iorwf	(??_sprintf+1)& (0+255),w,b
  8953  0113E8  B4D8               	btfsc	status,2,c
  8954  0113EA  D00A               	goto	l8186
  8955                           
  8956                           ; BSR set to: 1
  8957                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8958  0113EC  C0B3  FFD9         	movff	sprintf@sp,fsr2l
  8959  0113F0  C0B4  FFDA         	movff	sprintf@sp+1,fsr2h
  8960  0113F4  0E2D               	movlw	45
  8961  0113F6  6EDF               	movwf	indf2,c
  8962  0113F8                     l8184:
  8963                           
  8964                           ; BSR set to: 1
  8965  0113F8  0100               	movlb	0	; () banked
  8966  0113FA  4BB3               	infsnz	sprintf@sp& (0+255),f,b
  8967  0113FC  2BB4               	incf	(sprintf@sp+1)& (0+255),f,b
  8968                           
  8969                           ; BSR set to: 0
  8970  0113FE  D000               	goto	l8186
  8971  011400                     l8186:
  8972  011400  C0B5  FFF6         	movff	sprintf@f,tblptrl
  8973  011404  C0B6  FFF7         	movff	sprintf@f+1,tblptrh
  8974  011408  0100               	movlb	0	; () banked
  8975  01140A  4BB5               	infsnz	sprintf@f& (0+255),f,b
  8976  01140C  2BB6               	incf	(sprintf@f+1)& (0+255),f,b
  8977  01140E                     	if	0	;tblptru may be non-zero
  8978  01140E                     	endif
  8979  01140E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8980  01140E  0E00               	movlw	low (__mediumconst shr (0+16))
  8981  011410  6EF8               	movwf	tblptru,c
  8982  011412                     	endif
  8983  011412  0008               	tblrd		*
  8984  011414  CFF5 F150          	movff	tablat,sprintf@c
  8985  011418  0101               	movlb	1	; () banked
  8986  01141A  5150               	movf	sprintf@c& (0+255),w,b
  8987  01141C  B4D8               	btfsc	status,2,c
  8988  01141E  D003               	goto	l8188
  8989  011420  EF9D  F085         	goto	l7988
  8990                           
  8991                           ; BSR set to: 1
  8992  011424  D000               	goto	l8188
  8993  011426                     l8188:
  8994                           
  8995                           ; BSR set to: 1
  8996                           ;doprnt.c: 1538: *sp = 0;
  8997  011426  C0B3  FFD9         	movff	sprintf@sp,fsr2l
  8998  01142A  C0B4  FFDA         	movff	sprintf@sp+1,fsr2h
  8999  01142E  0E00               	movlw	0
  9000  011430  6EDF               	movwf	indf2,c
  9001  011432  0012               	return	
  9002                           
  9003                           ; BSR set to: 1
  9004                           
  9005                           ; BSR set to: 1
  9006                           ;doprnt.c: 1540: return 0;
  9007                           ;	Return value of _sprintf is never used
  9008  011434  0012               	return		;funcret
  9009  011436                     __end_of_sprintf:
  9010                           	opt stack 0
  9011                           tblptru	equ	0xFF8
  9012                           tblptrh	equ	0xFF7
  9013                           tblptrl	equ	0xFF6
  9014                           tablat	equ	0xFF5
  9015                           prodh	equ	0xFF4
  9016                           prodl	equ	0xFF3
  9017                           intcon	equ	0xFF2
  9018                           postinc0	equ	0xFEE
  9019                           wreg	equ	0xFE8
  9020                           indf2	equ	0xFDF
  9021                           postinc2	equ	0xFDE
  9022                           fsr2h	equ	0xFDA
  9023                           fsr2l	equ	0xFD9
  9024                           status	equ	0xFD8
  9025                           
  9026 ;; *************** function _scale *****************
  9027 ;; Defined at:
  9028 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;  scl             1    wreg     char 
  9031 ;; Auto vars:     Size  Location     Type
  9032 ;;  scl             1   56[BANK0 ] char 
  9033 ;; Return value:  Size  Location     Type
  9034 ;;                  4   48[BANK0 ] char 
  9035 ;; Registers used:
  9036 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9037 ;; Tracked objects:
  9038 ;;		On entry : 0/0
  9039 ;;		On exit  : 0/0
  9040 ;;		Unchanged: 0/0
  9041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9042 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9043 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9045 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9046 ;;Total ram usage:        9 bytes
  9047 ;; Hardware stack levels used:    1
  9048 ;; Hardware stack levels required when called:    5
  9049 ;; This function calls:
  9050 ;;		___awdiv
  9051 ;;		___awmod
  9052 ;;		___flmul
  9053 ;; This function is called by:
  9054 ;;		_sprintf
  9055 ;; This function uses a non-reentrant model
  9056 ;;
  9057                           
  9058                           	psect	text13
  9059  012F84                     __ptext13:
  9060                           	opt stack 0
  9061  012F84                     _scale:
  9062                           	opt stack 23
  9063                           
  9064                           ; BSR set to: 1
  9065                           ;incstack = 0
  9066                           ;scale@scl stored from wreg
  9067  012F84  0100               	movlb	0	; () banked
  9068  012F86  6F98               	movwf	scale@scl& (0+255),b
  9069                           
  9070                           ; BSR set to: 0
  9071                           ;doprnt.c: 428: if(scl < 0) {
  9072  012F88  0100               	movlb	0	; () banked
  9073  012F8A  AF98               	btfss	scale@scl& (0+255),7,b
  9074  012F8C  D148               	goto	l7640
  9075                           
  9076                           ; BSR set to: 0
  9077                           ;doprnt.c: 429: scl = -scl;
  9078  012F8E  0100               	movlb	0	; () banked
  9079  012F90  6D98               	negf	scale@scl& (0+255),b
  9080                           
  9081                           ;doprnt.c: 430: if(scl>=110)
  9082  012F92  0100               	movlb	0	; () banked
  9083  012F94  5198               	movf	scale@scl& (0+255),w,b
  9084  012F96  0A80               	xorlw	128
  9085  012F98  0F12               	addlw	-238
  9086  012F9A  A0D8               	btfss	status,0,c
  9087  012F9C  D0BC               	goto	l7630
  9088                           
  9089                           ; BSR set to: 0
  9090                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9091  012F9E  0E00               	movlw	0
  9092  012FA0  0100               	movlb	0	; () banked
  9093  012FA2  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  9094  012FA4  0E0A               	movlw	10
  9095  012FA6  6F7A               	movwf	___awdiv@divisor& (0+255),b
  9096  012FA8  0E00               	movlw	0
  9097  012FAA  0100               	movlb	0	; () banked
  9098  012FAC  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  9099  012FAE  0E64               	movlw	100
  9100  012FB0  6F74               	movwf	___awmod@divisor& (0+255),b
  9101  012FB2  0100               	movlb	0	; () banked
  9102  012FB4  5198               	movf	scale@scl& (0+255),w,b
  9103  012FB6  0100               	movlb	0	; () banked
  9104  012FB8  6F72               	movwf	___awmod@dividend& (0+255),b
  9105  012FBA  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  9106  012FBC  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  9107  012FBE  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  9108  012FC0  EC7E  F0AA         	call	___awmod	;wreg free
  9109  012FC4  C072  F078         	movff	?___awmod,___awdiv@dividend
  9110  012FC8  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  9111  012FCC  ECF1  F0A8         	call	___awdiv	;wreg free
  9112  012FD0  0100               	movlb	0	; () banked
  9113  012FD2  90D8               	bcf	status,0,c
  9114  012FD4  3778               	rlcf	?___awdiv& (0+255),f,b
  9115  012FD6  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9116  012FD8  0100               	movlb	0	; () banked
  9117  012FDA  90D8               	bcf	status,0,c
  9118  012FDC  3778               	rlcf	?___awdiv& (0+255),f,b
  9119  012FDE  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9120  012FE0  0E24               	movlw	36
  9121  012FE2  0100               	movlb	0	; () banked
  9122  012FE4  2778               	addwf	?___awdiv& (0+255),f,b
  9123  012FE6  0E00               	movlw	0
  9124  012FE8  0100               	movlb	0	; () banked
  9125  012FEA  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  9126  012FEC  0E5F               	movlw	low __npowers_
  9127  012FEE  0100               	movlb	0	; () banked
  9128  012FF0  2578               	addwf	?___awdiv& (0+255),w,b
  9129  012FF2  6EF6               	movwf	tblptrl,c
  9130  012FF4  0EFD               	movlw	high __npowers_
  9131  012FF6  0100               	movlb	0	; () banked
  9132  012FF8  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  9133  012FFA  6EF7               	movwf	tblptrh,c
  9134  012FFC                     	if	1	;There are 3 active tblptr bytes
  9135  012FFC  6AF8               	clrf	tblptru,c
  9136  012FFE  0E00               	movlw	low (__mediumconst shr (0+16))
  9137  013000  22F8               	addwfc	tblptru,f,c
  9138  013002                     	endif
  9139  013002  0009               	tblrd		*+
  9140  013004  CFF5 F085          	movff	tablat,___flmul@f2
  9141  013008  0009               	tblrd		*+
  9142  01300A  CFF5 F086          	movff	tablat,___flmul@f2+1
  9143  01300E  0009               	tblrd		*+
  9144  013010  CFF5 F087          	movff	tablat,___flmul@f2+2
  9145  013014  000A               	tblrd		*-
  9146  013016  CFF5 F088          	movff	tablat,___flmul@f2+3
  9147  01301A  0E00               	movlw	0
  9148  01301C  0100               	movlb	0	; () banked
  9149  01301E  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  9150  013020  0E64               	movlw	100
  9151  013022  6F7A               	movwf	___awdiv@divisor& (0+255),b
  9152  013024  0100               	movlb	0	; () banked
  9153  013026  5198               	movf	scale@scl& (0+255),w,b
  9154  013028  0100               	movlb	0	; () banked
  9155  01302A  6F78               	movwf	___awdiv@dividend& (0+255),b
  9156  01302C  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  9157  01302E  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  9158  013030  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9159  013032  ECF1  F0A8         	call	___awdiv	;wreg free
  9160  013036  0100               	movlb	0	; () banked
  9161  013038  90D8               	bcf	status,0,c
  9162  01303A  3778               	rlcf	?___awdiv& (0+255),f,b
  9163  01303C  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9164  01303E  0100               	movlb	0	; () banked
  9165  013040  90D8               	bcf	status,0,c
  9166  013042  3778               	rlcf	?___awdiv& (0+255),f,b
  9167  013044  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9168  013046  0E48               	movlw	72
  9169  013048  0100               	movlb	0	; () banked
  9170  01304A  2778               	addwf	?___awdiv& (0+255),f,b
  9171  01304C  0E00               	movlw	0
  9172  01304E  0100               	movlb	0	; () banked
  9173  013050  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  9174  013052  0E5F               	movlw	low __npowers_
  9175  013054  0100               	movlb	0	; () banked
  9176  013056  2578               	addwf	?___awdiv& (0+255),w,b
  9177  013058  6EF6               	movwf	tblptrl,c
  9178  01305A  0EFD               	movlw	high __npowers_
  9179  01305C  0100               	movlb	0	; () banked
  9180  01305E  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  9181  013060  6EF7               	movwf	tblptrh,c
  9182  013062                     	if	1	;There are 3 active tblptr bytes
  9183  013062  6AF8               	clrf	tblptru,c
  9184  013064  0E00               	movlw	low (__mediumconst shr (0+16))
  9185  013066  22F8               	addwfc	tblptru,f,c
  9186  013068                     	endif
  9187  013068  0009               	tblrd		*+
  9188  01306A  CFF5 F081          	movff	tablat,___flmul@f1
  9189  01306E  0009               	tblrd		*+
  9190  013070  CFF5 F082          	movff	tablat,___flmul@f1+1
  9191  013074  0009               	tblrd		*+
  9192  013076  CFF5 F083          	movff	tablat,___flmul@f1+2
  9193  01307A  000A               	tblrd		*-
  9194  01307C  CFF5 F084          	movff	tablat,___flmul@f1+3
  9195  013080  EC24  F0A6         	call	___flmul	;wreg free
  9196  013084  C081  F094         	movff	?___flmul,_scale$4229
  9197  013088  C082  F095         	movff	?___flmul+1,_scale$4229+1
  9198  01308C  C083  F096         	movff	?___flmul+2,_scale$4229+2
  9199  013090  C084  F097         	movff	?___flmul+3,_scale$4229+3
  9200                           
  9201                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9202  013094  C094  F081         	movff	_scale$4229,___flmul@f1
  9203  013098  C095  F082         	movff	_scale$4229+1,___flmul@f1+1
  9204  01309C  C096  F083         	movff	_scale$4229+2,___flmul@f1+2
  9205  0130A0  C097  F084         	movff	_scale$4229+3,___flmul@f1+3
  9206  0130A4  0E00               	movlw	0
  9207  0130A6  0100               	movlb	0	; () banked
  9208  0130A8  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  9209  0130AA  0E0A               	movlw	10
  9210  0130AC  6F74               	movwf	___awmod@divisor& (0+255),b
  9211  0130AE  0100               	movlb	0	; () banked
  9212  0130B0  5198               	movf	scale@scl& (0+255),w,b
  9213  0130B2  0100               	movlb	0	; () banked
  9214  0130B4  6F72               	movwf	___awmod@dividend& (0+255),b
  9215  0130B6  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  9216  0130B8  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  9217  0130BA  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  9218  0130BC  EC7E  F0AA         	call	___awmod	;wreg free
  9219  0130C0  0100               	movlb	0	; () banked
  9220  0130C2  90D8               	bcf	status,0,c
  9221  0130C4  3772               	rlcf	?___awmod& (0+255),f,b
  9222  0130C6  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9223  0130C8  0100               	movlb	0	; () banked
  9224  0130CA  90D8               	bcf	status,0,c
  9225  0130CC  3772               	rlcf	?___awmod& (0+255),f,b
  9226  0130CE  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9227  0130D0  0E5F               	movlw	low __npowers_
  9228  0130D2  0100               	movlb	0	; () banked
  9229  0130D4  2572               	addwf	?___awmod& (0+255),w,b
  9230  0130D6  6EF6               	movwf	tblptrl,c
  9231  0130D8  0EFD               	movlw	high __npowers_
  9232  0130DA  0100               	movlb	0	; () banked
  9233  0130DC  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  9234  0130DE  6EF7               	movwf	tblptrh,c
  9235  0130E0                     	if	1	;There are 3 active tblptr bytes
  9236  0130E0  6AF8               	clrf	tblptru,c
  9237  0130E2  0E00               	movlw	low (__mediumconst shr (0+16))
  9238  0130E4  22F8               	addwfc	tblptru,f,c
  9239  0130E6                     	endif
  9240  0130E6  0009               	tblrd		*+
  9241  0130E8  CFF5 F085          	movff	tablat,___flmul@f2
  9242  0130EC  0009               	tblrd		*+
  9243  0130EE  CFF5 F086          	movff	tablat,___flmul@f2+1
  9244  0130F2  0009               	tblrd		*+
  9245  0130F4  CFF5 F087          	movff	tablat,___flmul@f2+2
  9246  0130F8  000A               	tblrd		*-
  9247  0130FA  CFF5 F088          	movff	tablat,___flmul@f2+3
  9248  0130FE  EC24  F0A6         	call	___flmul	;wreg free
  9249  013102  C081  F090         	movff	?___flmul,?_scale
  9250  013106  C082  F091         	movff	?___flmul+1,?_scale+1
  9251  01310A  C083  F092         	movff	?___flmul+2,?_scale+2
  9252  01310E  C084  F093         	movff	?___flmul+3,?_scale+3
  9253  013112  0012               	return	
  9254  013114  D06B               	goto	l7636
  9255  013116                     l7630:
  9256                           
  9257                           ;doprnt.c: 432: else if(scl > 10)
  9258  013116  0100               	movlb	0	; () banked
  9259  013118  5198               	movf	scale@scl& (0+255),w,b
  9260  01311A  0A80               	xorlw	128
  9261  01311C  0F75               	addlw	-139
  9262  01311E  A0D8               	btfss	status,0,c
  9263  013120  D065               	goto	l7636
  9264                           
  9265                           ; BSR set to: 0
  9266                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  9267  013122  0E00               	movlw	0
  9268  013124  0100               	movlb	0	; () banked
  9269  013126  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  9270  013128  0E0A               	movlw	10
  9271  01312A  6F7A               	movwf	___awdiv@divisor& (0+255),b
  9272  01312C  0100               	movlb	0	; () banked
  9273  01312E  5198               	movf	scale@scl& (0+255),w,b
  9274  013130  0100               	movlb	0	; () banked
  9275  013132  6F78               	movwf	___awdiv@dividend& (0+255),b
  9276  013134  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  9277  013136  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  9278  013138  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9279  01313A  ECF1  F0A8         	call	___awdiv	;wreg free
  9280  01313E  0100               	movlb	0	; () banked
  9281  013140  90D8               	bcf	status,0,c
  9282  013142  3778               	rlcf	?___awdiv& (0+255),f,b
  9283  013144  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9284  013146  0100               	movlb	0	; () banked
  9285  013148  90D8               	bcf	status,0,c
  9286  01314A  3778               	rlcf	?___awdiv& (0+255),f,b
  9287  01314C  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9288  01314E  0E24               	movlw	36
  9289  013150  0100               	movlb	0	; () banked
  9290  013152  2778               	addwf	?___awdiv& (0+255),f,b
  9291  013154  0E00               	movlw	0
  9292  013156  0100               	movlb	0	; () banked
  9293  013158  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  9294  01315A  0E5F               	movlw	low __npowers_
  9295  01315C  0100               	movlb	0	; () banked
  9296  01315E  2578               	addwf	?___awdiv& (0+255),w,b
  9297  013160  6EF6               	movwf	tblptrl,c
  9298  013162  0EFD               	movlw	high __npowers_
  9299  013164  0100               	movlb	0	; () banked
  9300  013166  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  9301  013168  6EF7               	movwf	tblptrh,c
  9302  01316A                     	if	1	;There are 3 active tblptr bytes
  9303  01316A  6AF8               	clrf	tblptru,c
  9304  01316C  0E00               	movlw	low (__mediumconst shr (0+16))
  9305  01316E  22F8               	addwfc	tblptru,f,c
  9306  013170                     	endif
  9307  013170  0009               	tblrd		*+
  9308  013172  CFF5 F081          	movff	tablat,___flmul@f1
  9309  013176  0009               	tblrd		*+
  9310  013178  CFF5 F082          	movff	tablat,___flmul@f1+1
  9311  01317C  0009               	tblrd		*+
  9312  01317E  CFF5 F083          	movff	tablat,___flmul@f1+2
  9313  013182  000A               	tblrd		*-
  9314  013184  CFF5 F084          	movff	tablat,___flmul@f1+3
  9315  013188  0E00               	movlw	0
  9316  01318A  0100               	movlb	0	; () banked
  9317  01318C  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  9318  01318E  0E0A               	movlw	10
  9319  013190  6F74               	movwf	___awmod@divisor& (0+255),b
  9320  013192  0100               	movlb	0	; () banked
  9321  013194  5198               	movf	scale@scl& (0+255),w,b
  9322  013196  0100               	movlb	0	; () banked
  9323  013198  6F72               	movwf	___awmod@dividend& (0+255),b
  9324  01319A  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  9325  01319C  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  9326  01319E  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  9327  0131A0  EC7E  F0AA         	call	___awmod	;wreg free
  9328  0131A4  0100               	movlb	0	; () banked
  9329  0131A6  90D8               	bcf	status,0,c
  9330  0131A8  3772               	rlcf	?___awmod& (0+255),f,b
  9331  0131AA  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9332  0131AC  0100               	movlb	0	; () banked
  9333  0131AE  90D8               	bcf	status,0,c
  9334  0131B0  3772               	rlcf	?___awmod& (0+255),f,b
  9335  0131B2  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9336  0131B4  0E5F               	movlw	low __npowers_
  9337  0131B6  0100               	movlb	0	; () banked
  9338  0131B8  2572               	addwf	?___awmod& (0+255),w,b
  9339  0131BA  6EF6               	movwf	tblptrl,c
  9340  0131BC  0EFD               	movlw	high __npowers_
  9341  0131BE  0100               	movlb	0	; () banked
  9342  0131C0  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  9343  0131C2  6EF7               	movwf	tblptrh,c
  9344  0131C4                     	if	1	;There are 3 active tblptr bytes
  9345  0131C4  6AF8               	clrf	tblptru,c
  9346  0131C6  0E00               	movlw	low (__mediumconst shr (0+16))
  9347  0131C8  22F8               	addwfc	tblptru,f,c
  9348  0131CA                     	endif
  9349  0131CA  0009               	tblrd		*+
  9350  0131CC  CFF5 F085          	movff	tablat,___flmul@f2
  9351  0131D0  0009               	tblrd		*+
  9352  0131D2  CFF5 F086          	movff	tablat,___flmul@f2+1
  9353  0131D6  0009               	tblrd		*+
  9354  0131D8  CFF5 F087          	movff	tablat,___flmul@f2+2
  9355  0131DC  000A               	tblrd		*-
  9356  0131DE  CFF5 F088          	movff	tablat,___flmul@f2+3
  9357  0131E2  EC24  F0A6         	call	___flmul	;wreg free
  9358  0131E6  D78D               	goto	L6
  9359  0131E8  0012               	return	
  9360  0131EA  D000               	goto	l7636
  9361  0131EC                     l7636:
  9362                           
  9363                           ;doprnt.c: 434: return _npowers_[scl];
  9364  0131EC  0100               	movlb	0	; () banked
  9365  0131EE  5198               	movf	scale@scl& (0+255),w,b
  9366  0131F0  0D04               	mullw	4
  9367  0131F2  0E5F               	movlw	low __npowers_
  9368  0131F4  24F3               	addwf	prodl,w,c
  9369  0131F6  6EF6               	movwf	tblptrl,c
  9370  0131F8  0EFD               	movlw	high __npowers_
  9371  0131FA  20F4               	addwfc	prodh,w,c
  9372  0131FC  6EF7               	movwf	tblptrh,c
  9373  0131FE                     	if	1	;There are 3 active tblptr bytes
  9374  0131FE  6AF8               	clrf	tblptru,c
  9375  013200  0E00               	movlw	low (__mediumconst shr (0+16))
  9376  013202  22F8               	addwfc	tblptru,f,c
  9377  013204                     	endif
  9378  013204  0009               	tblrd		*+
  9379  013206  CFF5 F090          	movff	tablat,?_scale
  9380  01320A  0009               	tblrd		*+
  9381  01320C  CFF5 F091          	movff	tablat,?_scale+1
  9382  013210  0009               	tblrd		*+
  9383  013212  CFF5 F092          	movff	tablat,?_scale+2
  9384  013216  000A               	tblrd		*-
  9385  013218  CFF5 F093          	movff	tablat,?_scale+3
  9386                           
  9387                           ; BSR set to: 0
  9388  01321C  0012               	return	
  9389  01321E                     l7640:
  9390                           
  9391                           ; BSR set to: 0
  9392                           ;doprnt.c: 435: }
  9393                           ;doprnt.c: 436: if(scl>=110)
  9394  01321E  0100               	movlb	0	; () banked
  9395  013220  5198               	movf	scale@scl& (0+255),w,b
  9396  013222  0A80               	xorlw	128
  9397  013224  0F12               	addlw	-238
  9398  013226  A0D8               	btfss	status,0,c
  9399  013228  D0BC               	goto	l7648
  9400                           
  9401                           ; BSR set to: 0
  9402                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9403  01322A  0E00               	movlw	0
  9404  01322C  0100               	movlb	0	; () banked
  9405  01322E  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  9406  013230  0E0A               	movlw	10
  9407  013232  6F7A               	movwf	___awdiv@divisor& (0+255),b
  9408  013234  0E00               	movlw	0
  9409  013236  0100               	movlb	0	; () banked
  9410  013238  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  9411  01323A  0E64               	movlw	100
  9412  01323C  6F74               	movwf	___awmod@divisor& (0+255),b
  9413  01323E  0100               	movlb	0	; () banked
  9414  013240  5198               	movf	scale@scl& (0+255),w,b
  9415  013242  0100               	movlb	0	; () banked
  9416  013244  6F72               	movwf	___awmod@dividend& (0+255),b
  9417  013246  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  9418  013248  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  9419  01324A  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  9420  01324C  EC7E  F0AA         	call	___awmod	;wreg free
  9421  013250  C072  F078         	movff	?___awmod,___awdiv@dividend
  9422  013254  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  9423  013258  ECF1  F0A8         	call	___awdiv	;wreg free
  9424  01325C  0100               	movlb	0	; () banked
  9425  01325E  90D8               	bcf	status,0,c
  9426  013260  3778               	rlcf	?___awdiv& (0+255),f,b
  9427  013262  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9428  013264  0100               	movlb	0	; () banked
  9429  013266  90D8               	bcf	status,0,c
  9430  013268  3778               	rlcf	?___awdiv& (0+255),f,b
  9431  01326A  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9432  01326C  0E24               	movlw	36
  9433  01326E  0100               	movlb	0	; () banked
  9434  013270  2778               	addwf	?___awdiv& (0+255),f,b
  9435  013272  0E00               	movlw	0
  9436  013274  0100               	movlb	0	; () banked
  9437  013276  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  9438  013278  0E93               	movlw	low __powers_
  9439  01327A  0100               	movlb	0	; () banked
  9440  01327C  2578               	addwf	?___awdiv& (0+255),w,b
  9441  01327E  6EF6               	movwf	tblptrl,c
  9442  013280  0EFD               	movlw	high __powers_
  9443  013282  0100               	movlb	0	; () banked
  9444  013284  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  9445  013286  6EF7               	movwf	tblptrh,c
  9446  013288                     	if	1	;There are 3 active tblptr bytes
  9447  013288  6AF8               	clrf	tblptru,c
  9448  01328A  0E00               	movlw	low (__mediumconst shr (0+16))
  9449  01328C  22F8               	addwfc	tblptru,f,c
  9450  01328E                     	endif
  9451  01328E  0009               	tblrd		*+
  9452  013290  CFF5 F085          	movff	tablat,___flmul@f2
  9453  013294  0009               	tblrd		*+
  9454  013296  CFF5 F086          	movff	tablat,___flmul@f2+1
  9455  01329A  0009               	tblrd		*+
  9456  01329C  CFF5 F087          	movff	tablat,___flmul@f2+2
  9457  0132A0  000A               	tblrd		*-
  9458  0132A2  CFF5 F088          	movff	tablat,___flmul@f2+3
  9459  0132A6  0E00               	movlw	0
  9460  0132A8  0100               	movlb	0	; () banked
  9461  0132AA  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  9462  0132AC  0E64               	movlw	100
  9463  0132AE  6F7A               	movwf	___awdiv@divisor& (0+255),b
  9464  0132B0  0100               	movlb	0	; () banked
  9465  0132B2  5198               	movf	scale@scl& (0+255),w,b
  9466  0132B4  0100               	movlb	0	; () banked
  9467  0132B6  6F78               	movwf	___awdiv@dividend& (0+255),b
  9468  0132B8  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  9469  0132BA  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  9470  0132BC  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9471  0132BE  ECF1  F0A8         	call	___awdiv	;wreg free
  9472  0132C2  0100               	movlb	0	; () banked
  9473  0132C4  90D8               	bcf	status,0,c
  9474  0132C6  3778               	rlcf	?___awdiv& (0+255),f,b
  9475  0132C8  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9476  0132CA  0100               	movlb	0	; () banked
  9477  0132CC  90D8               	bcf	status,0,c
  9478  0132CE  3778               	rlcf	?___awdiv& (0+255),f,b
  9479  0132D0  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9480  0132D2  0E48               	movlw	72
  9481  0132D4  0100               	movlb	0	; () banked
  9482  0132D6  2778               	addwf	?___awdiv& (0+255),f,b
  9483  0132D8  0E00               	movlw	0
  9484  0132DA  0100               	movlb	0	; () banked
  9485  0132DC  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  9486  0132DE  0E93               	movlw	low __powers_
  9487  0132E0  0100               	movlb	0	; () banked
  9488  0132E2  2578               	addwf	?___awdiv& (0+255),w,b
  9489  0132E4  6EF6               	movwf	tblptrl,c
  9490  0132E6  0EFD               	movlw	high __powers_
  9491  0132E8  0100               	movlb	0	; () banked
  9492  0132EA  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  9493  0132EC  6EF7               	movwf	tblptrh,c
  9494  0132EE                     	if	1	;There are 3 active tblptr bytes
  9495  0132EE  6AF8               	clrf	tblptru,c
  9496  0132F0  0E00               	movlw	low (__mediumconst shr (0+16))
  9497  0132F2  22F8               	addwfc	tblptru,f,c
  9498  0132F4                     	endif
  9499  0132F4  0009               	tblrd		*+
  9500  0132F6  CFF5 F081          	movff	tablat,___flmul@f1
  9501  0132FA  0009               	tblrd		*+
  9502  0132FC  CFF5 F082          	movff	tablat,___flmul@f1+1
  9503  013300  0009               	tblrd		*+
  9504  013302  CFF5 F083          	movff	tablat,___flmul@f1+2
  9505  013306  000A               	tblrd		*-
  9506  013308  CFF5 F084          	movff	tablat,___flmul@f1+3
  9507  01330C  EC24  F0A6         	call	___flmul	;wreg free
  9508  013310  C081  F094         	movff	?___flmul,_scale$4229
  9509  013314  C082  F095         	movff	?___flmul+1,_scale$4229+1
  9510  013318  C083  F096         	movff	?___flmul+2,_scale$4229+2
  9511  01331C  C084  F097         	movff	?___flmul+3,_scale$4229+3
  9512                           
  9513                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9514  013320  C094  F081         	movff	_scale$4229,___flmul@f1
  9515  013324  C095  F082         	movff	_scale$4229+1,___flmul@f1+1
  9516  013328  C096  F083         	movff	_scale$4229+2,___flmul@f1+2
  9517  01332C  C097  F084         	movff	_scale$4229+3,___flmul@f1+3
  9518  013330  0E00               	movlw	0
  9519  013332  0100               	movlb	0	; () banked
  9520  013334  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  9521  013336  0E0A               	movlw	10
  9522  013338  6F74               	movwf	___awmod@divisor& (0+255),b
  9523  01333A  0100               	movlb	0	; () banked
  9524  01333C  5198               	movf	scale@scl& (0+255),w,b
  9525  01333E  0100               	movlb	0	; () banked
  9526  013340  6F72               	movwf	___awmod@dividend& (0+255),b
  9527  013342  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  9528  013344  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  9529  013346  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  9530  013348  EC7E  F0AA         	call	___awmod	;wreg free
  9531  01334C  0100               	movlb	0	; () banked
  9532  01334E  90D8               	bcf	status,0,c
  9533  013350  3772               	rlcf	?___awmod& (0+255),f,b
  9534  013352  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9535  013354  0100               	movlb	0	; () banked
  9536  013356  90D8               	bcf	status,0,c
  9537  013358  3772               	rlcf	?___awmod& (0+255),f,b
  9538  01335A  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9539  01335C  0E93               	movlw	low __powers_
  9540  01335E  0100               	movlb	0	; () banked
  9541  013360  2572               	addwf	?___awmod& (0+255),w,b
  9542  013362  6EF6               	movwf	tblptrl,c
  9543  013364  0EFD               	movlw	high __powers_
  9544  013366  0100               	movlb	0	; () banked
  9545  013368  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  9546  01336A  6EF7               	movwf	tblptrh,c
  9547  01336C                     	if	1	;There are 3 active tblptr bytes
  9548  01336C  6AF8               	clrf	tblptru,c
  9549  01336E  0E00               	movlw	low (__mediumconst shr (0+16))
  9550  013370  22F8               	addwfc	tblptru,f,c
  9551  013372                     	endif
  9552  013372  0009               	tblrd		*+
  9553  013374  CFF5 F085          	movff	tablat,___flmul@f2
  9554  013378  0009               	tblrd		*+
  9555  01337A  CFF5 F086          	movff	tablat,___flmul@f2+1
  9556  01337E  0009               	tblrd		*+
  9557  013380  CFF5 F087          	movff	tablat,___flmul@f2+2
  9558  013384  000A               	tblrd		*-
  9559  013386  CFF5 F088          	movff	tablat,___flmul@f2+3
  9560  01338A  EC24  F0A6         	call	___flmul	;wreg free
  9561  01338E  C081  F090         	movff	?___flmul,?_scale
  9562  013392  C082  F091         	movff	?___flmul+1,?_scale+1
  9563  013396  C083  F092         	movff	?___flmul+2,?_scale+2
  9564  01339A  C084  F093         	movff	?___flmul+3,?_scale+3
  9565  01339E  0012               	return	
  9566  0133A0  D06B               	goto	l7654
  9567  0133A2                     l7648:
  9568                           
  9569                           ;doprnt.c: 438: else if(scl > 10)
  9570  0133A2  0100               	movlb	0	; () banked
  9571  0133A4  5198               	movf	scale@scl& (0+255),w,b
  9572  0133A6  0A80               	xorlw	128
  9573  0133A8  0F75               	addlw	-139
  9574  0133AA  A0D8               	btfss	status,0,c
  9575  0133AC  D065               	goto	l7654
  9576                           
  9577                           ; BSR set to: 0
  9578                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  9579  0133AE  0E00               	movlw	0
  9580  0133B0  0100               	movlb	0	; () banked
  9581  0133B2  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  9582  0133B4  0E0A               	movlw	10
  9583  0133B6  6F7A               	movwf	___awdiv@divisor& (0+255),b
  9584  0133B8  0100               	movlb	0	; () banked
  9585  0133BA  5198               	movf	scale@scl& (0+255),w,b
  9586  0133BC  0100               	movlb	0	; () banked
  9587  0133BE  6F78               	movwf	___awdiv@dividend& (0+255),b
  9588  0133C0  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  9589  0133C2  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  9590  0133C4  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  9591  0133C6  ECF1  F0A8         	call	___awdiv	;wreg free
  9592  0133CA  0100               	movlb	0	; () banked
  9593  0133CC  90D8               	bcf	status,0,c
  9594  0133CE  3778               	rlcf	?___awdiv& (0+255),f,b
  9595  0133D0  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9596  0133D2  0100               	movlb	0	; () banked
  9597  0133D4  90D8               	bcf	status,0,c
  9598  0133D6  3778               	rlcf	?___awdiv& (0+255),f,b
  9599  0133D8  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9600  0133DA  0E24               	movlw	36
  9601  0133DC  0100               	movlb	0	; () banked
  9602  0133DE  2778               	addwf	?___awdiv& (0+255),f,b
  9603  0133E0  0E00               	movlw	0
  9604  0133E2  0100               	movlb	0	; () banked
  9605  0133E4  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  9606  0133E6  0E93               	movlw	low __powers_
  9607  0133E8  0100               	movlb	0	; () banked
  9608  0133EA  2578               	addwf	?___awdiv& (0+255),w,b
  9609  0133EC  6EF6               	movwf	tblptrl,c
  9610  0133EE  0EFD               	movlw	high __powers_
  9611  0133F0  0100               	movlb	0	; () banked
  9612  0133F2  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  9613  0133F4  6EF7               	movwf	tblptrh,c
  9614  0133F6                     	if	1	;There are 3 active tblptr bytes
  9615  0133F6  6AF8               	clrf	tblptru,c
  9616  0133F8  0E00               	movlw	low (__mediumconst shr (0+16))
  9617  0133FA  22F8               	addwfc	tblptru,f,c
  9618  0133FC                     	endif
  9619  0133FC  0009               	tblrd		*+
  9620  0133FE  CFF5 F081          	movff	tablat,___flmul@f1
  9621  013402  0009               	tblrd		*+
  9622  013404  CFF5 F082          	movff	tablat,___flmul@f1+1
  9623  013408  0009               	tblrd		*+
  9624  01340A  CFF5 F083          	movff	tablat,___flmul@f1+2
  9625  01340E  000A               	tblrd		*-
  9626  013410  CFF5 F084          	movff	tablat,___flmul@f1+3
  9627  013414  0E00               	movlw	0
  9628  013416  0100               	movlb	0	; () banked
  9629  013418  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  9630  01341A  0E0A               	movlw	10
  9631  01341C  6F74               	movwf	___awmod@divisor& (0+255),b
  9632  01341E  0100               	movlb	0	; () banked
  9633  013420  5198               	movf	scale@scl& (0+255),w,b
  9634  013422  0100               	movlb	0	; () banked
  9635  013424  6F72               	movwf	___awmod@dividend& (0+255),b
  9636  013426  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  9637  013428  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  9638  01342A  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  9639  01342C  EC7E  F0AA         	call	___awmod	;wreg free
  9640  013430  0100               	movlb	0	; () banked
  9641  013432  90D8               	bcf	status,0,c
  9642  013434  3772               	rlcf	?___awmod& (0+255),f,b
  9643  013436  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9644  013438  0100               	movlb	0	; () banked
  9645  01343A  90D8               	bcf	status,0,c
  9646  01343C  3772               	rlcf	?___awmod& (0+255),f,b
  9647  01343E  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9648  013440  0E93               	movlw	low __powers_
  9649  013442  0100               	movlb	0	; () banked
  9650  013444  2572               	addwf	?___awmod& (0+255),w,b
  9651  013446  6EF6               	movwf	tblptrl,c
  9652  013448  0EFD               	movlw	high __powers_
  9653  01344A  0100               	movlb	0	; () banked
  9654  01344C  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  9655  01344E  6EF7               	movwf	tblptrh,c
  9656  013450                     	if	1	;There are 3 active tblptr bytes
  9657  013450  6AF8               	clrf	tblptru,c
  9658  013452  0E00               	movlw	low (__mediumconst shr (0+16))
  9659  013454  22F8               	addwfc	tblptru,f,c
  9660  013456                     	endif
  9661  013456  0009               	tblrd		*+
  9662  013458  CFF5 F085          	movff	tablat,___flmul@f2
  9663  01345C  0009               	tblrd		*+
  9664  01345E  CFF5 F086          	movff	tablat,___flmul@f2+1
  9665  013462  0009               	tblrd		*+
  9666  013464  CFF5 F087          	movff	tablat,___flmul@f2+2
  9667  013468  000A               	tblrd		*-
  9668  01346A  CFF5 F088          	movff	tablat,___flmul@f2+3
  9669  01346E  EC24  F0A6         	call	___flmul	;wreg free
  9670  013472  D78D               	goto	L7
  9671  013474  0012               	return	
  9672  013476  D000               	goto	l7654
  9673  013478                     l7654:
  9674                           
  9675                           ;doprnt.c: 440: return _powers_[scl];
  9676  013478  0100               	movlb	0	; () banked
  9677  01347A  5198               	movf	scale@scl& (0+255),w,b
  9678  01347C  0D04               	mullw	4
  9679  01347E  0E93               	movlw	low __powers_
  9680  013480  24F3               	addwf	prodl,w,c
  9681  013482  6EF6               	movwf	tblptrl,c
  9682  013484  0EFD               	movlw	high __powers_
  9683  013486  20F4               	addwfc	prodh,w,c
  9684  013488  6EF7               	movwf	tblptrh,c
  9685  01348A                     	if	1	;There are 3 active tblptr bytes
  9686  01348A  6AF8               	clrf	tblptru,c
  9687  01348C  0E00               	movlw	low (__mediumconst shr (0+16))
  9688  01348E  22F8               	addwfc	tblptru,f,c
  9689  013490                     	endif
  9690  013490  0009               	tblrd		*+
  9691  013492  CFF5 F090          	movff	tablat,?_scale
  9692  013496  0009               	tblrd		*+
  9693  013498  CFF5 F091          	movff	tablat,?_scale+1
  9694  01349C  0009               	tblrd		*+
  9695  01349E  CFF5 F092          	movff	tablat,?_scale+2
  9696  0134A2  000A               	tblrd		*-
  9697  0134A4  CFF5 F093          	movff	tablat,?_scale+3
  9698  0134A8  0012               	return	
  9699                           
  9700                           ; BSR set to: 0
  9701  0134AA  0012               	return		;funcret
  9702  0134AC                     __end_of_scale:
  9703                           	opt stack 0
  9704                           tblptru	equ	0xFF8
  9705                           tblptrh	equ	0xFF7
  9706                           tblptrl	equ	0xFF6
  9707                           tablat	equ	0xFF5
  9708                           prodh	equ	0xFF4
  9709                           prodl	equ	0xFF3
  9710                           intcon	equ	0xFF2
  9711                           postinc0	equ	0xFEE
  9712                           wreg	equ	0xFE8
  9713                           indf2	equ	0xFDF
  9714                           postinc2	equ	0xFDE
  9715                           fsr2h	equ	0xFDA
  9716                           fsr2l	equ	0xFD9
  9717                           status	equ	0xFD8
  9718                           
  9719 ;; *************** function _isdigit *****************
  9720 ;; Defined at:
  9721 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  9722 ;; Parameters:    Size  Location     Type
  9723 ;;  c               1    wreg     unsigned char 
  9724 ;; Auto vars:     Size  Location     Type
  9725 ;;  c               1   20[BANK0 ] unsigned char 
  9726 ;; Return value:  Size  Location     Type
  9727 ;;		None               void
  9728 ;; Registers used:
  9729 ;;		wreg, status,2, status,0
  9730 ;; Tracked objects:
  9731 ;;		On entry : 0/0
  9732 ;;		On exit  : 0/0
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9736 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9737 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9738 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9739 ;;Total ram usage:        3 bytes
  9740 ;; Hardware stack levels used:    1
  9741 ;; Hardware stack levels required when called:    3
  9742 ;; This function calls:
  9743 ;;		Nothing
  9744 ;; This function is called by:
  9745 ;;		_sprintf
  9746 ;; This function uses a non-reentrant model
  9747 ;;
  9748                           
  9749                           	psect	text14
  9750  015E58                     __ptext14:
  9751                           	opt stack 0
  9752  015E58                     _isdigit:
  9753                           	opt stack 25
  9754                           
  9755                           ;incstack = 0
  9756                           ;isdigit@c stored from wreg
  9757  015E58  0100               	movlb	0	; () banked
  9758  015E5A  6F74               	movwf	isdigit@c& (0+255),b
  9759                           
  9760                           ; BSR set to: 0
  9761  015E5C  0E00               	movlw	0
  9762  015E5E  0100               	movlb	0	; () banked
  9763  015E60  6F73               	movwf	_isdigit$3903& (0+255),b
  9764                           
  9765                           ; BSR set to: 0
  9766  015E62  0E3A               	movlw	58
  9767  015E64  0100               	movlb	0	; () banked
  9768  015E66  6174               	cpfslt	isdigit@c& (0+255),b
  9769  015E68  D008               	goto	l7666
  9770                           
  9771                           ; BSR set to: 0
  9772  015E6A  0E2F               	movlw	47
  9773  015E6C  0100               	movlb	0	; () banked
  9774  015E6E  6574               	cpfsgt	isdigit@c& (0+255),b
  9775  015E70  D004               	goto	l7666
  9776                           
  9777                           ; BSR set to: 0
  9778  015E72  0E01               	movlw	1
  9779  015E74  0100               	movlb	0	; () banked
  9780  015E76  6F73               	movwf	_isdigit$3903& (0+255),b
  9781  015E78  D000               	goto	l7666
  9782  015E7A                     l7666:
  9783                           
  9784                           ; BSR set to: 0
  9785  015E7A  C073  F072         	movff	_isdigit$3903,??_isdigit
  9786  015E7E  0100               	movlb	0	; () banked
  9787  015E80  3172               	rrcf	??_isdigit& (0+255),w,b
  9788  015E82  0012               	return	
  9789                           
  9790                           ; BSR set to: 0
  9791                           
  9792                           ; BSR set to: 0
  9793  015E84  0012               	return		;funcret
  9794  015E86                     __end_of_isdigit:
  9795                           	opt stack 0
  9796                           tblptru	equ	0xFF8
  9797                           tblptrh	equ	0xFF7
  9798                           tblptrl	equ	0xFF6
  9799                           tablat	equ	0xFF5
  9800                           prodh	equ	0xFF4
  9801                           prodl	equ	0xFF3
  9802                           intcon	equ	0xFF2
  9803                           postinc0	equ	0xFEE
  9804                           wreg	equ	0xFE8
  9805                           indf2	equ	0xFDF
  9806                           postinc2	equ	0xFDE
  9807                           fsr2h	equ	0xFDA
  9808                           fsr2l	equ	0xFD9
  9809                           status	equ	0xFD8
  9810                           
  9811 ;; *************** function _fround *****************
  9812 ;; Defined at:
  9813 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  9814 ;; Parameters:    Size  Location     Type
  9815 ;;  prec            1    wreg     unsigned char 
  9816 ;; Auto vars:     Size  Location     Type
  9817 ;;  prec            1   60[BANK0 ] unsigned char 
  9818 ;; Return value:  Size  Location     Type
  9819 ;;                  4   48[BANK0 ] unsigned char 
  9820 ;; Registers used:
  9821 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9822 ;; Tracked objects:
  9823 ;;		On entry : 0/0
  9824 ;;		On exit  : 0/0
  9825 ;;		Unchanged: 0/0
  9826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9827 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9828 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9830 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9831 ;;Total ram usage:       13 bytes
  9832 ;; Hardware stack levels used:    1
  9833 ;; Hardware stack levels required when called:    5
  9834 ;; This function calls:
  9835 ;;		___awdiv
  9836 ;;		___awmod
  9837 ;;		___flmul
  9838 ;; This function is called by:
  9839 ;;		_sprintf
  9840 ;; This function uses a non-reentrant model
  9841 ;;
  9842                           
  9843                           	psect	text15
  9844  013856                     __ptext15:
  9845                           	opt stack 0
  9846  013856                     _fround:
  9847                           	opt stack 23
  9848                           
  9849                           ; BSR set to: 0
  9850                           ;incstack = 0
  9851                           ;fround@prec stored from wreg
  9852  013856  0100               	movlb	0	; () banked
  9853  013858  6F9C               	movwf	fround@prec& (0+255),b
  9854                           
  9855                           ; BSR set to: 0
  9856                           ;doprnt.c: 413: if(prec>=110)
  9857  01385A  0E6D               	movlw	109
  9858  01385C  0100               	movlb	0	; () banked
  9859  01385E  659C               	cpfsgt	fround@prec& (0+255),b
  9860  013860  D0CE               	goto	l7608
  9861                           
  9862                           ; BSR set to: 0
  9863                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9864  013862  0E00               	movlw	0
  9865  013864  0100               	movlb	0	; () banked
  9866  013866  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  9867  013868  0E0A               	movlw	10
  9868  01386A  6F7A               	movwf	___awdiv@divisor& (0+255),b
  9869  01386C  0E00               	movlw	0
  9870  01386E  0100               	movlb	0	; () banked
  9871  013870  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  9872  013872  0E64               	movlw	100
  9873  013874  6F74               	movwf	___awmod@divisor& (0+255),b
  9874  013876  C09C  F072         	movff	fround@prec,___awmod@dividend
  9875  01387A  0100               	movlb	0	; () banked
  9876  01387C  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  9877  01387E  EC7E  F0AA         	call	___awmod	;wreg free
  9878  013882  C072  F078         	movff	?___awmod,___awdiv@dividend
  9879  013886  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  9880  01388A  ECF1  F0A8         	call	___awdiv	;wreg free
  9881  01388E  0100               	movlb	0	; () banked
  9882  013890  90D8               	bcf	status,0,c
  9883  013892  3778               	rlcf	?___awdiv& (0+255),f,b
  9884  013894  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9885  013896  0100               	movlb	0	; () banked
  9886  013898  90D8               	bcf	status,0,c
  9887  01389A  3778               	rlcf	?___awdiv& (0+255),f,b
  9888  01389C  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9889  01389E  0E24               	movlw	36
  9890  0138A0  0100               	movlb	0	; () banked
  9891  0138A2  2778               	addwf	?___awdiv& (0+255),f,b
  9892  0138A4  0E00               	movlw	0
  9893  0138A6  0100               	movlb	0	; () banked
  9894  0138A8  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  9895  0138AA  0E5F               	movlw	low __npowers_
  9896  0138AC  0100               	movlb	0	; () banked
  9897  0138AE  2578               	addwf	?___awdiv& (0+255),w,b
  9898  0138B0  6EF6               	movwf	tblptrl,c
  9899  0138B2  0EFD               	movlw	high __npowers_
  9900  0138B4  0100               	movlb	0	; () banked
  9901  0138B6  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  9902  0138B8  6EF7               	movwf	tblptrh,c
  9903  0138BA                     	if	1	;There are 3 active tblptr bytes
  9904  0138BA  6AF8               	clrf	tblptru,c
  9905  0138BC  0E00               	movlw	low (__mediumconst shr (0+16))
  9906  0138BE  22F8               	addwfc	tblptru,f,c
  9907  0138C0                     	endif
  9908  0138C0  0009               	tblrd		*+
  9909  0138C2  CFF5 F085          	movff	tablat,___flmul@f2
  9910  0138C6  0009               	tblrd		*+
  9911  0138C8  CFF5 F086          	movff	tablat,___flmul@f2+1
  9912  0138CC  0009               	tblrd		*+
  9913  0138CE  CFF5 F087          	movff	tablat,___flmul@f2+2
  9914  0138D2  000A               	tblrd		*-
  9915  0138D4  CFF5 F088          	movff	tablat,___flmul@f2+3
  9916  0138D8  0E00               	movlw	0
  9917  0138DA  0100               	movlb	0	; () banked
  9918  0138DC  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  9919  0138DE  0E64               	movlw	100
  9920  0138E0  6F7A               	movwf	___awdiv@divisor& (0+255),b
  9921  0138E2  C09C  F078         	movff	fround@prec,___awdiv@dividend
  9922  0138E6  0100               	movlb	0	; () banked
  9923  0138E8  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  9924  0138EA  ECF1  F0A8         	call	___awdiv	;wreg free
  9925  0138EE  0100               	movlb	0	; () banked
  9926  0138F0  90D8               	bcf	status,0,c
  9927  0138F2  3778               	rlcf	?___awdiv& (0+255),f,b
  9928  0138F4  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9929  0138F6  0100               	movlb	0	; () banked
  9930  0138F8  90D8               	bcf	status,0,c
  9931  0138FA  3778               	rlcf	?___awdiv& (0+255),f,b
  9932  0138FC  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  9933  0138FE  0E48               	movlw	72
  9934  013900  0100               	movlb	0	; () banked
  9935  013902  2778               	addwf	?___awdiv& (0+255),f,b
  9936  013904  0E00               	movlw	0
  9937  013906  0100               	movlb	0	; () banked
  9938  013908  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  9939  01390A  0E5F               	movlw	low __npowers_
  9940  01390C  0100               	movlb	0	; () banked
  9941  01390E  2578               	addwf	?___awdiv& (0+255),w,b
  9942  013910  6EF6               	movwf	tblptrl,c
  9943  013912  0EFD               	movlw	high __npowers_
  9944  013914  0100               	movlb	0	; () banked
  9945  013916  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  9946  013918  6EF7               	movwf	tblptrh,c
  9947  01391A                     	if	1	;There are 3 active tblptr bytes
  9948  01391A  6AF8               	clrf	tblptru,c
  9949  01391C  0E00               	movlw	low (__mediumconst shr (0+16))
  9950  01391E  22F8               	addwfc	tblptru,f,c
  9951  013920                     	endif
  9952  013920  0009               	tblrd		*+
  9953  013922  CFF5 F081          	movff	tablat,___flmul@f1
  9954  013926  0009               	tblrd		*+
  9955  013928  CFF5 F082          	movff	tablat,___flmul@f1+1
  9956  01392C  0009               	tblrd		*+
  9957  01392E  CFF5 F083          	movff	tablat,___flmul@f1+2
  9958  013932  000A               	tblrd		*-
  9959  013934  CFF5 F084          	movff	tablat,___flmul@f1+3
  9960  013938  EC24  F0A6         	call	___flmul	;wreg free
  9961  01393C  C081  F098         	movff	?___flmul,_fround$4227
  9962  013940  C082  F099         	movff	?___flmul+1,_fround$4227+1
  9963  013944  C083  F09A         	movff	?___flmul+2,_fround$4227+2
  9964  013948  C084  F09B         	movff	?___flmul+3,_fround$4227+3
  9965                           
  9966                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9967  01394C  0E00               	movlw	0
  9968  01394E  0100               	movlb	0	; () banked
  9969  013950  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  9970  013952  0E0A               	movlw	10
  9971  013954  6F74               	movwf	___awmod@divisor& (0+255),b
  9972  013956  C09C  F072         	movff	fround@prec,___awmod@dividend
  9973  01395A  0100               	movlb	0	; () banked
  9974  01395C  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  9975  01395E  EC7E  F0AA         	call	___awmod	;wreg free
  9976  013962  0100               	movlb	0	; () banked
  9977  013964  90D8               	bcf	status,0,c
  9978  013966  3772               	rlcf	?___awmod& (0+255),f,b
  9979  013968  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9980  01396A  0100               	movlb	0	; () banked
  9981  01396C  90D8               	bcf	status,0,c
  9982  01396E  3772               	rlcf	?___awmod& (0+255),f,b
  9983  013970  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  9984  013972  0E5F               	movlw	low __npowers_
  9985  013974  0100               	movlb	0	; () banked
  9986  013976  2572               	addwf	?___awmod& (0+255),w,b
  9987  013978  6EF6               	movwf	tblptrl,c
  9988  01397A  0EFD               	movlw	high __npowers_
  9989  01397C  0100               	movlb	0	; () banked
  9990  01397E  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  9991  013980  6EF7               	movwf	tblptrh,c
  9992  013982                     	if	1	;There are 3 active tblptr bytes
  9993  013982  6AF8               	clrf	tblptru,c
  9994  013984  0E00               	movlw	low (__mediumconst shr (0+16))
  9995  013986  22F8               	addwfc	tblptru,f,c
  9996  013988                     	endif
  9997  013988  0009               	tblrd		*+
  9998  01398A  CFF5 F085          	movff	tablat,___flmul@f2
  9999  01398E  0009               	tblrd		*+
 10000  013990  CFF5 F086          	movff	tablat,___flmul@f2+1
 10001  013994  0009               	tblrd		*+
 10002  013996  CFF5 F087          	movff	tablat,___flmul@f2+2
 10003  01399A  000A               	tblrd		*-
 10004  01399C  CFF5 F088          	movff	tablat,___flmul@f2+3
 10005  0139A0  C098  F081         	movff	_fround$4227,___flmul@f1
 10006  0139A4  C099  F082         	movff	_fround$4227+1,___flmul@f1+1
 10007  0139A8  C09A  F083         	movff	_fround$4227+2,___flmul@f1+2
 10008  0139AC  C09B  F084         	movff	_fround$4227+3,___flmul@f1+3
 10009  0139B0  EC24  F0A6         	call	___flmul	;wreg free
 10010  0139B4  C081  F094         	movff	?___flmul,_fround$4228
 10011  0139B8  C082  F095         	movff	?___flmul+1,_fround$4228+1
 10012  0139BC  C083  F096         	movff	?___flmul+2,_fround$4228+2
 10013  0139C0  C084  F097         	movff	?___flmul+3,_fround$4228+3
 10014                           
 10015                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10016  0139C4  C094  F081         	movff	_fround$4228,___flmul@f1
 10017  0139C8  C095  F082         	movff	_fround$4228+1,___flmul@f1+1
 10018  0139CC  C096  F083         	movff	_fround$4228+2,___flmul@f1+2
 10019  0139D0  C097  F084         	movff	_fround$4228+3,___flmul@f1+3
 10020  0139D4  0E00               	movlw	0
 10021  0139D6  0100               	movlb	0	; () banked
 10022  0139D8  6F85               	movwf	___flmul@f2& (0+255),b
 10023  0139DA  0E00               	movlw	0
 10024  0139DC  6F86               	movwf	(___flmul@f2+1)& (0+255),b
 10025  0139DE  0E00               	movlw	0
 10026  0139E0  6F87               	movwf	(___flmul@f2+2)& (0+255),b
 10027  0139E2  0E3F               	movlw	63
 10028  0139E4  6F88               	movwf	(___flmul@f2+3)& (0+255),b
 10029  0139E6  EC24  F0A6         	call	___flmul	;wreg free
 10030  0139EA  C081  F090         	movff	?___flmul,?_fround
 10031  0139EE  C082  F091         	movff	?___flmul+1,?_fround+1
 10032  0139F2  C083  F092         	movff	?___flmul+2,?_fround+2
 10033  0139F6  C084  F093         	movff	?___flmul+3,?_fround+3
 10034  0139FA  0012               	return	
 10035  0139FC  D07E               	goto	l7616
 10036  0139FE                     l7608:
 10037                           
 10038                           ;doprnt.c: 415: else if(prec > 10)
 10039  0139FE  0E0A               	movlw	10
 10040  013A00  0100               	movlb	0	; () banked
 10041  013A02  659C               	cpfsgt	fround@prec& (0+255),b
 10042  013A04  D07A               	goto	l7616
 10043                           
 10044                           ; BSR set to: 0
 10045                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 10046  013A06  0E00               	movlw	0
 10047  013A08  0100               	movlb	0	; () banked
 10048  013A0A  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
 10049  013A0C  0E0A               	movlw	10
 10050  013A0E  6F74               	movwf	___awmod@divisor& (0+255),b
 10051  013A10  C09C  F072         	movff	fround@prec,___awmod@dividend
 10052  013A14  0100               	movlb	0	; () banked
 10053  013A16  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
 10054  013A18  EC7E  F0AA         	call	___awmod	;wreg free
 10055  013A1C  0100               	movlb	0	; () banked
 10056  013A1E  90D8               	bcf	status,0,c
 10057  013A20  3772               	rlcf	?___awmod& (0+255),f,b
 10058  013A22  3773               	rlcf	(?___awmod+1)& (0+255),f,b
 10059  013A24  0100               	movlb	0	; () banked
 10060  013A26  90D8               	bcf	status,0,c
 10061  013A28  3772               	rlcf	?___awmod& (0+255),f,b
 10062  013A2A  3773               	rlcf	(?___awmod+1)& (0+255),f,b
 10063  013A2C  0E5F               	movlw	low __npowers_
 10064  013A2E  0100               	movlb	0	; () banked
 10065  013A30  2572               	addwf	?___awmod& (0+255),w,b
 10066  013A32  6EF6               	movwf	tblptrl,c
 10067  013A34  0EFD               	movlw	high __npowers_
 10068  013A36  0100               	movlb	0	; () banked
 10069  013A38  2173               	addwfc	(?___awmod+1)& (0+255),w,b
 10070  013A3A  6EF7               	movwf	tblptrh,c
 10071  013A3C                     	if	1	;There are 3 active tblptr bytes
 10072  013A3C  6AF8               	clrf	tblptru,c
 10073  013A3E  0E00               	movlw	low (__mediumconst shr (0+16))
 10074  013A40  22F8               	addwfc	tblptru,f,c
 10075  013A42                     	endif
 10076  013A42  0009               	tblrd		*+
 10077  013A44  CFF5 F085          	movff	tablat,___flmul@f2
 10078  013A48  0009               	tblrd		*+
 10079  013A4A  CFF5 F086          	movff	tablat,___flmul@f2+1
 10080  013A4E  0009               	tblrd		*+
 10081  013A50  CFF5 F087          	movff	tablat,___flmul@f2+2
 10082  013A54  000A               	tblrd		*-
 10083  013A56  CFF5 F088          	movff	tablat,___flmul@f2+3
 10084  013A5A  0E00               	movlw	0
 10085  013A5C  0100               	movlb	0	; () banked
 10086  013A5E  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
 10087  013A60  0E0A               	movlw	10
 10088  013A62  6F7A               	movwf	___awdiv@divisor& (0+255),b
 10089  013A64  C09C  F078         	movff	fround@prec,___awdiv@dividend
 10090  013A68  0100               	movlb	0	; () banked
 10091  013A6A  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
 10092  013A6C  ECF1  F0A8         	call	___awdiv	;wreg free
 10093  013A70  0100               	movlb	0	; () banked
 10094  013A72  90D8               	bcf	status,0,c
 10095  013A74  3778               	rlcf	?___awdiv& (0+255),f,b
 10096  013A76  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
 10097  013A78  0100               	movlb	0	; () banked
 10098  013A7A  90D8               	bcf	status,0,c
 10099  013A7C  3778               	rlcf	?___awdiv& (0+255),f,b
 10100  013A7E  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
 10101  013A80  0E24               	movlw	36
 10102  013A82  0100               	movlb	0	; () banked
 10103  013A84  2778               	addwf	?___awdiv& (0+255),f,b
 10104  013A86  0E00               	movlw	0
 10105  013A88  0100               	movlb	0	; () banked
 10106  013A8A  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
 10107  013A8C  0E5F               	movlw	low __npowers_
 10108  013A8E  0100               	movlb	0	; () banked
 10109  013A90  2578               	addwf	?___awdiv& (0+255),w,b
 10110  013A92  6EF6               	movwf	tblptrl,c
 10111  013A94  0EFD               	movlw	high __npowers_
 10112  013A96  0100               	movlb	0	; () banked
 10113  013A98  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
 10114  013A9A  6EF7               	movwf	tblptrh,c
 10115  013A9C                     	if	1	;There are 3 active tblptr bytes
 10116  013A9C  6AF8               	clrf	tblptru,c
 10117  013A9E  0E00               	movlw	low (__mediumconst shr (0+16))
 10118  013AA0  22F8               	addwfc	tblptru,f,c
 10119  013AA2                     	endif
 10120  013AA2  0009               	tblrd		*+
 10121  013AA4  CFF5 F081          	movff	tablat,___flmul@f1
 10122  013AA8  0009               	tblrd		*+
 10123  013AAA  CFF5 F082          	movff	tablat,___flmul@f1+1
 10124  013AAE  0009               	tblrd		*+
 10125  013AB0  CFF5 F083          	movff	tablat,___flmul@f1+2
 10126  013AB4  000A               	tblrd		*-
 10127  013AB6  CFF5 F084          	movff	tablat,___flmul@f1+3
 10128  013ABA  EC24  F0A6         	call	___flmul	;wreg free
 10129  013ABE  C081  F098         	movff	?___flmul,_fround$4227
 10130  013AC2  C082  F099         	movff	?___flmul+1,_fround$4227+1
 10131  013AC6  C083  F09A         	movff	?___flmul+2,_fround$4227+2
 10132  013ACA  C084  F09B         	movff	?___flmul+3,_fround$4227+3
 10133                           
 10134                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 10135  013ACE  C098  F081         	movff	_fround$4227,___flmul@f1
 10136  013AD2  C099  F082         	movff	_fround$4227+1,___flmul@f1+1
 10137  013AD6  C09A  F083         	movff	_fround$4227+2,___flmul@f1+2
 10138  013ADA  C09B  F084         	movff	_fround$4227+3,___flmul@f1+3
 10139  013ADE  0E00               	movlw	0
 10140  013AE0  0100               	movlb	0	; () banked
 10141  013AE2  6F85               	movwf	___flmul@f2& (0+255),b
 10142  013AE4  0E00               	movlw	0
 10143  013AE6  6F86               	movwf	(___flmul@f2+1)& (0+255),b
 10144  013AE8  0E00               	movlw	0
 10145  013AEA  6F87               	movwf	(___flmul@f2+2)& (0+255),b
 10146  013AEC  0E3F               	movlw	63
 10147  013AEE  6F88               	movwf	(___flmul@f2+3)& (0+255),b
 10148  013AF0  EC24  F0A6         	call	___flmul	;wreg free
 10149  013AF4  D77A               	goto	L8
 10150  013AF6  0012               	return	
 10151  013AF8  D000               	goto	l7616
 10152  013AFA                     l7616:
 10153                           
 10154                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 10155  013AFA  0100               	movlb	0	; () banked
 10156  013AFC  519C               	movf	fround@prec& (0+255),w,b
 10157  013AFE  0D04               	mullw	4
 10158  013B00  0E5F               	movlw	low __npowers_
 10159  013B02  24F3               	addwf	prodl,w,c
 10160  013B04  6EF6               	movwf	tblptrl,c
 10161  013B06  0EFD               	movlw	high __npowers_
 10162  013B08  20F4               	addwfc	prodh,w,c
 10163  013B0A  6EF7               	movwf	tblptrh,c
 10164  013B0C                     	if	1	;There are 3 active tblptr bytes
 10165  013B0C  6AF8               	clrf	tblptru,c
 10166  013B0E  0E00               	movlw	low (__mediumconst shr (0+16))
 10167  013B10  22F8               	addwfc	tblptru,f,c
 10168  013B12                     	endif
 10169  013B12  0009               	tblrd		*+
 10170  013B14  CFF5 F081          	movff	tablat,___flmul@f1
 10171  013B18  0009               	tblrd		*+
 10172  013B1A  CFF5 F082          	movff	tablat,___flmul@f1+1
 10173  013B1E  0009               	tblrd		*+
 10174  013B20  CFF5 F083          	movff	tablat,___flmul@f1+2
 10175  013B24  000A               	tblrd		*-
 10176  013B26  CFF5 F084          	movff	tablat,___flmul@f1+3
 10177  013B2A  0E00               	movlw	0
 10178  013B2C  0100               	movlb	0	; () banked
 10179  013B2E  6F85               	movwf	___flmul@f2& (0+255),b
 10180  013B30  0E00               	movlw	0
 10181  013B32  6F86               	movwf	(___flmul@f2+1)& (0+255),b
 10182  013B34  0E00               	movlw	0
 10183  013B36  6F87               	movwf	(___flmul@f2+2)& (0+255),b
 10184  013B38  0E3F               	movlw	63
 10185  013B3A  6F88               	movwf	(___flmul@f2+3)& (0+255),b
 10186  013B3C  EC24  F0A6         	call	___flmul	;wreg free
 10187  013B40  C081  F090         	movff	?___flmul,?_fround
 10188  013B44  C082  F091         	movff	?___flmul+1,?_fround+1
 10189  013B48  C083  F092         	movff	?___flmul+2,?_fround+2
 10190  013B4C  C084  F093         	movff	?___flmul+3,?_fround+3
 10191  013B50  0012               	return	
 10192  013B52  0012               	return		;funcret
 10193  013B54                     __end_of_fround:
 10194                           	opt stack 0
 10195                           tblptru	equ	0xFF8
 10196                           tblptrh	equ	0xFF7
 10197                           tblptrl	equ	0xFF6
 10198                           tablat	equ	0xFF5
 10199                           prodh	equ	0xFF4
 10200                           prodl	equ	0xFF3
 10201                           intcon	equ	0xFF2
 10202                           postinc0	equ	0xFEE
 10203                           wreg	equ	0xFE8
 10204                           indf2	equ	0xFDF
 10205                           postinc2	equ	0xFDE
 10206                           fsr2h	equ	0xFDA
 10207                           fsr2l	equ	0xFD9
 10208                           status	equ	0xFD8
 10209                           
 10210 ;; *************** function ___flmul *****************
 10211 ;; Defined at:
 10212 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flmul.c"
 10213 ;; Parameters:    Size  Location     Type
 10214 ;;  f1              4   33[BANK0 ] unsigned char 
 10215 ;;  f2              4   37[BANK0 ] unsigned char 
 10216 ;; Auto vars:     Size  Location     Type
 10217 ;;  f3_as_produc    4   42[BANK0 ] unsigned long 
 10218 ;;  sign            1   47[BANK0 ] unsigned char 
 10219 ;;  cntr            1   46[BANK0 ] unsigned char 
 10220 ;;  exp             1   41[BANK0 ] unsigned char 
 10221 ;; Return value:  Size  Location     Type
 10222 ;;                  4   33[BANK0 ] unsigned char 
 10223 ;; Registers used:
 10224 ;;		wreg, status,2, status,0, cstack
 10225 ;; Tracked objects:
 10226 ;;		On entry : 0/0
 10227 ;;		On exit  : 0/0
 10228 ;;		Unchanged: 0/0
 10229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10230 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10231 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10233 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10234 ;;Total ram usage:       15 bytes
 10235 ;; Hardware stack levels used:    1
 10236 ;; Hardware stack levels required when called:    4
 10237 ;; This function calls:
 10238 ;;		___flpack
 10239 ;; This function is called by:
 10240 ;;		_main
 10241 ;;		_fround
 10242 ;;		_scale
 10243 ;;		_sprintf
 10244 ;; This function uses a non-reentrant model
 10245 ;;
 10246                           
 10247                           	psect	text16
 10248  014C48                     __ptext16:
 10249                           	opt stack 0
 10250  014C48                     ___flmul:
 10251                           	opt stack 26
 10252                           
 10253                           ;incstack = 0
 10254  014C48  0100               	movlb	0	; () banked
 10255  014C4A  3583               	rlcf	(___flmul@f1+2)& (0+255),w,b
 10256  014C4C  3584               	rlcf	(___flmul@f1+3)& (0+255),w,b
 10257  014C4E  0100               	movlb	0	; () banked
 10258  014C50  6F89               	movwf	___flmul@exp& (0+255),b
 10259  014C52  0100               	movlb	0	; () banked
 10260  014C54  5189               	movf	___flmul@exp& (0+255),w,b
 10261  014C56  A4D8               	btfss	status,2,c
 10262  014C58  D00A               	goto	l7442
 10263                           
 10264                           ; BSR set to: 0
 10265  014C5A  0E00               	movlw	0
 10266  014C5C  0100               	movlb	0	; () banked
 10267  014C5E  6F81               	movwf	?___flmul& (0+255),b
 10268  014C60  0E00               	movlw	0
 10269  014C62  6F82               	movwf	(?___flmul+1)& (0+255),b
 10270  014C64  0E00               	movlw	0
 10271  014C66  6F83               	movwf	(?___flmul+2)& (0+255),b
 10272  014C68  0E00               	movlw	0
 10273  014C6A  6F84               	movwf	(?___flmul+3)& (0+255),b
 10274                           
 10275                           ; BSR set to: 0
 10276  014C6C  0012               	return	
 10277  014C6E                     l7442:
 10278                           
 10279                           ; BSR set to: 0
 10280  014C6E  0100               	movlb	0	; () banked
 10281  014C70  3587               	rlcf	(___flmul@f2+2)& (0+255),w,b
 10282  014C72  3588               	rlcf	(___flmul@f2+3)& (0+255),w,b
 10283  014C74  0100               	movlb	0	; () banked
 10284  014C76  6F8F               	movwf	___flmul@sign& (0+255),b
 10285  014C78  0100               	movlb	0	; () banked
 10286  014C7A  518F               	movf	___flmul@sign& (0+255),w,b
 10287  014C7C  A4D8               	btfss	status,2,c
 10288  014C7E  D00A               	goto	l7448
 10289                           
 10290                           ; BSR set to: 0
 10291  014C80  0E00               	movlw	0
 10292  014C82  0100               	movlb	0	; () banked
 10293  014C84  6F81               	movwf	?___flmul& (0+255),b
 10294  014C86  0E00               	movlw	0
 10295  014C88  6F82               	movwf	(?___flmul+1)& (0+255),b
 10296  014C8A  0E00               	movlw	0
 10297  014C8C  6F83               	movwf	(?___flmul+2)& (0+255),b
 10298  014C8E  0E00               	movlw	0
 10299  014C90  6F84               	movwf	(?___flmul+3)& (0+255),b
 10300                           
 10301                           ; BSR set to: 0
 10302  014C92  0012               	return	
 10303  014C94                     l7448:
 10304                           
 10305                           ; BSR set to: 0
 10306  014C94  0100               	movlb	0	; () banked
 10307  014C96  518F               	movf	___flmul@sign& (0+255),w,b
 10308  014C98  0F7B               	addlw	123
 10309  014C9A  0100               	movlb	0	; () banked
 10310  014C9C  2789               	addwf	___flmul@exp& (0+255),f,b
 10311                           
 10312                           ; BSR set to: 0
 10313  014C9E  C084  F08F         	movff	___flmul@f1+3,___flmul@sign
 10314  014CA2  0100               	movlb	0	; () banked
 10315  014CA4  5188               	movf	(___flmul@f2+3)& (0+255),w,b
 10316  014CA6  0100               	movlb	0	; () banked
 10317  014CA8  1B8F               	xorwf	___flmul@sign& (0+255),f,b
 10318  014CAA  0E80               	movlw	128
 10319  014CAC  0100               	movlb	0	; () banked
 10320  014CAE  178F               	andwf	___flmul@sign& (0+255),f,b
 10321                           
 10322                           ; BSR set to: 0
 10323  014CB0  0100               	movlb	0	; () banked
 10324  014CB2  8F83               	bsf	(___flmul@f1+2)& (0+255),7,b
 10325                           
 10326                           ; BSR set to: 0
 10327  014CB4  0100               	movlb	0	; () banked
 10328  014CB6  8F87               	bsf	(___flmul@f2+2)& (0+255),7,b
 10329  014CB8  0EFF               	movlw	255
 10330  014CBA  0100               	movlb	0	; () banked
 10331  014CBC  1785               	andwf	___flmul@f2& (0+255),f,b
 10332  014CBE  0EFF               	movlw	255
 10333  014CC0  1786               	andwf	(___flmul@f2+1)& (0+255),f,b
 10334  014CC2  0EFF               	movlw	255
 10335  014CC4  1787               	andwf	(___flmul@f2+2)& (0+255),f,b
 10336  014CC6  0E00               	movlw	0
 10337  014CC8  1788               	andwf	(___flmul@f2+3)& (0+255),f,b
 10338                           
 10339                           ; BSR set to: 0
 10340  014CCA  0E00               	movlw	0
 10341  014CCC  0100               	movlb	0	; () banked
 10342  014CCE  6F8A               	movwf	___flmul@f3_as_product& (0+255),b
 10343  014CD0  0E00               	movlw	0
 10344  014CD2  6F8B               	movwf	(___flmul@f3_as_product+1)& (0+255),b
 10345  014CD4  0E00               	movlw	0
 10346  014CD6  6F8C               	movwf	(___flmul@f3_as_product+2)& (0+255),b
 10347  014CD8  0E00               	movlw	0
 10348  014CDA  6F8D               	movwf	(___flmul@f3_as_product+3)& (0+255),b
 10349                           
 10350                           ; BSR set to: 0
 10351  014CDC  0E07               	movlw	7
 10352  014CDE  0100               	movlb	0	; () banked
 10353  014CE0  6F8E               	movwf	___flmul@cntr& (0+255),b
 10354  014CE2  D000               	goto	l7460
 10355  014CE4                     l7460:
 10356                           
 10357                           ; BSR set to: 0
 10358  014CE4  0100               	movlb	0	; () banked
 10359  014CE6  A181               	btfss	___flmul@f1& (0+255),0,b
 10360  014CE8  D011               	goto	l7464
 10361                           
 10362                           ; BSR set to: 0
 10363  014CEA  0100               	movlb	0	; () banked
 10364  014CEC  5185               	movf	___flmul@f2& (0+255),w,b
 10365  014CEE  0100               	movlb	0	; () banked
 10366  014CF0  278A               	addwf	___flmul@f3_as_product& (0+255),f,b
 10367  014CF2  0100               	movlb	0	; () banked
 10368  014CF4  5186               	movf	(___flmul@f2+1)& (0+255),w,b
 10369  014CF6  0100               	movlb	0	; () banked
 10370  014CF8  238B               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
 10371  014CFA  0100               	movlb	0	; () banked
 10372  014CFC  5187               	movf	(___flmul@f2+2)& (0+255),w,b
 10373  014CFE  0100               	movlb	0	; () banked
 10374  014D00  238C               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
 10375  014D02  0100               	movlb	0	; () banked
 10376  014D04  5188               	movf	(___flmul@f2+3)& (0+255),w,b
 10377  014D06  0100               	movlb	0	; () banked
 10378  014D08  238D               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
 10379  014D0A  D000               	goto	l7464
 10380  014D0C                     l7464:
 10381                           
 10382                           ; BSR set to: 0
 10383  014D0C  0100               	movlb	0	; () banked
 10384  014D0E  90D8               	bcf	status,0,c
 10385  014D10  3384               	rrcf	(___flmul@f1+3)& (0+255),f,b
 10386  014D12  3383               	rrcf	(___flmul@f1+2)& (0+255),f,b
 10387  014D14  3382               	rrcf	(___flmul@f1+1)& (0+255),f,b
 10388  014D16  3381               	rrcf	___flmul@f1& (0+255),f,b
 10389                           
 10390                           ; BSR set to: 0
 10391  014D18  0100               	movlb	0	; () banked
 10392  014D1A  90D8               	bcf	status,0,c
 10393  014D1C  3785               	rlcf	___flmul@f2& (0+255),f,b
 10394  014D1E  3786               	rlcf	(___flmul@f2+1)& (0+255),f,b
 10395  014D20  3787               	rlcf	(___flmul@f2+2)& (0+255),f,b
 10396  014D22  3788               	rlcf	(___flmul@f2+3)& (0+255),f,b
 10397                           
 10398                           ; BSR set to: 0
 10399  014D24  0100               	movlb	0	; () banked
 10400  014D26  2F8E               	decfsz	___flmul@cntr& (0+255),f,b
 10401  014D28  D7DD               	goto	l7460
 10402  014D2A  D000               	goto	l7470
 10403  014D2C                     l7470:
 10404                           
 10405                           ; BSR set to: 0
 10406  014D2C  0E11               	movlw	17
 10407  014D2E  0100               	movlb	0	; () banked
 10408  014D30  6F8E               	movwf	___flmul@cntr& (0+255),b
 10409  014D32  D000               	goto	l7472
 10410  014D34                     l7472:
 10411                           
 10412                           ; BSR set to: 0
 10413  014D34  0100               	movlb	0	; () banked
 10414  014D36  A181               	btfss	___flmul@f1& (0+255),0,b
 10415  014D38  D011               	goto	l7476
 10416                           
 10417                           ; BSR set to: 0
 10418  014D3A  0100               	movlb	0	; () banked
 10419  014D3C  5185               	movf	___flmul@f2& (0+255),w,b
 10420  014D3E  0100               	movlb	0	; () banked
 10421  014D40  278A               	addwf	___flmul@f3_as_product& (0+255),f,b
 10422  014D42  0100               	movlb	0	; () banked
 10423  014D44  5186               	movf	(___flmul@f2+1)& (0+255),w,b
 10424  014D46  0100               	movlb	0	; () banked
 10425  014D48  238B               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
 10426  014D4A  0100               	movlb	0	; () banked
 10427  014D4C  5187               	movf	(___flmul@f2+2)& (0+255),w,b
 10428  014D4E  0100               	movlb	0	; () banked
 10429  014D50  238C               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
 10430  014D52  0100               	movlb	0	; () banked
 10431  014D54  5188               	movf	(___flmul@f2+3)& (0+255),w,b
 10432  014D56  0100               	movlb	0	; () banked
 10433  014D58  238D               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
 10434  014D5A  D000               	goto	l7476
 10435  014D5C                     l7476:
 10436                           
 10437                           ; BSR set to: 0
 10438  014D5C  0100               	movlb	0	; () banked
 10439  014D5E  90D8               	bcf	status,0,c
 10440  014D60  3384               	rrcf	(___flmul@f1+3)& (0+255),f,b
 10441  014D62  3383               	rrcf	(___flmul@f1+2)& (0+255),f,b
 10442  014D64  3382               	rrcf	(___flmul@f1+1)& (0+255),f,b
 10443  014D66  3381               	rrcf	___flmul@f1& (0+255),f,b
 10444                           
 10445                           ; BSR set to: 0
 10446  014D68  0100               	movlb	0	; () banked
 10447  014D6A  90D8               	bcf	status,0,c
 10448  014D6C  338D               	rrcf	(___flmul@f3_as_product+3)& (0+255),f,b
 10449  014D6E  338C               	rrcf	(___flmul@f3_as_product+2)& (0+255),f,b
 10450  014D70  338B               	rrcf	(___flmul@f3_as_product+1)& (0+255),f,b
 10451  014D72  338A               	rrcf	___flmul@f3_as_product& (0+255),f,b
 10452                           
 10453                           ; BSR set to: 0
 10454  014D74  0100               	movlb	0	; () banked
 10455  014D76  2F8E               	decfsz	___flmul@cntr& (0+255),f,b
 10456  014D78  D7DD               	goto	l7472
 10457  014D7A  D000               	goto	l7482
 10458  014D7C                     l7482:
 10459                           
 10460                           ; BSR set to: 0
 10461  014D7C  C08A  F072         	movff	___flmul@f3_as_product,___flpack@arg
 10462  014D80  C08B  F073         	movff	___flmul@f3_as_product+1,___flpack@arg+1
 10463  014D84  C08C  F074         	movff	___flmul@f3_as_product+2,___flpack@arg+2
 10464  014D88  C08D  F075         	movff	___flmul@f3_as_product+3,___flpack@arg+3
 10465  014D8C  C089  F076         	movff	___flmul@exp,___flpack@exp
 10466  014D90  C08F  F077         	movff	___flmul@sign,___flpack@sign
 10467  014D94  ECAD  F0A4         	call	___flpack	;wreg free
 10468  014D98  C072  F081         	movff	?___flpack,?___flmul
 10469  014D9C  C073  F082         	movff	?___flpack+1,?___flmul+1
 10470  014DA0  C074  F083         	movff	?___flpack+2,?___flmul+2
 10471  014DA4  C075  F084         	movff	?___flpack+3,?___flmul+3
 10472  014DA8  0012               	return	
 10473  014DAA  0012               	return		;funcret
 10474  014DAC                     __end_of___flmul:
 10475                           	opt stack 0
 10476                           tblptru	equ	0xFF8
 10477                           tblptrh	equ	0xFF7
 10478                           tblptrl	equ	0xFF6
 10479                           tablat	equ	0xFF5
 10480                           prodh	equ	0xFF4
 10481                           prodl	equ	0xFF3
 10482                           intcon	equ	0xFF2
 10483                           postinc0	equ	0xFEE
 10484                           wreg	equ	0xFE8
 10485                           indf2	equ	0xFDF
 10486                           postinc2	equ	0xFDE
 10487                           fsr2h	equ	0xFDA
 10488                           fsr2l	equ	0xFD9
 10489                           status	equ	0xFD8
 10490                           
 10491 ;; *************** function ___awmod *****************
 10492 ;; Defined at:
 10493 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 10494 ;; Parameters:    Size  Location     Type
 10495 ;;  dividend        2   18[BANK0 ] int 
 10496 ;;  divisor         2   20[BANK0 ] int 
 10497 ;; Auto vars:     Size  Location     Type
 10498 ;;  sign            1   23[BANK0 ] unsigned char 
 10499 ;;  counter         1   22[BANK0 ] unsigned char 
 10500 ;; Return value:  Size  Location     Type
 10501 ;;                  2   18[BANK0 ] int 
 10502 ;; Registers used:
 10503 ;;		wreg, status,2, status,0
 10504 ;; Tracked objects:
 10505 ;;		On entry : 0/0
 10506 ;;		On exit  : 0/0
 10507 ;;		Unchanged: 0/0
 10508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10509 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10510 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10512 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10513 ;;Total ram usage:        6 bytes
 10514 ;; Hardware stack levels used:    1
 10515 ;; Hardware stack levels required when called:    3
 10516 ;; This function calls:
 10517 ;;		Nothing
 10518 ;; This function is called by:
 10519 ;;		_fround
 10520 ;;		_scale
 10521 ;; This function uses a non-reentrant model
 10522 ;;
 10523                           
 10524                           	psect	text17
 10525  0154FC                     __ptext17:
 10526                           	opt stack 0
 10527  0154FC                     ___awmod:
 10528                           	opt stack 24
 10529                           
 10530                           ;incstack = 0
 10531  0154FC  0E00               	movlw	0
 10532  0154FE  0100               	movlb	0	; () banked
 10533  015500  6F77               	movwf	___awmod@sign& (0+255),b
 10534                           
 10535                           ; BSR set to: 0
 10536  015502  0100               	movlb	0	; () banked
 10537  015504  AF73               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10538  015506  D009               	goto	l7538
 10539                           
 10540                           ; BSR set to: 0
 10541  015508  0100               	movlb	0	; () banked
 10542  01550A  6D72               	negf	___awmod@dividend& (0+255),b
 10543  01550C  1F73               	comf	(___awmod@dividend+1)& (0+255),f,b
 10544  01550E  B0D8               	btfsc	status,0,c
 10545  015510  2B73               	incf	(___awmod@dividend+1)& (0+255),f,b
 10546                           
 10547                           ; BSR set to: 0
 10548  015512  0E01               	movlw	1
 10549  015514  0100               	movlb	0	; () banked
 10550  015516  6F77               	movwf	___awmod@sign& (0+255),b
 10551  015518  D000               	goto	l7538
 10552  01551A                     l7538:
 10553                           
 10554                           ; BSR set to: 0
 10555  01551A  0100               	movlb	0	; () banked
 10556  01551C  AF75               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10557  01551E  D006               	goto	l7542
 10558                           
 10559                           ; BSR set to: 0
 10560  015520  0100               	movlb	0	; () banked
 10561  015522  6D74               	negf	___awmod@divisor& (0+255),b
 10562  015524  1F75               	comf	(___awmod@divisor+1)& (0+255),f,b
 10563  015526  B0D8               	btfsc	status,0,c
 10564  015528  2B75               	incf	(___awmod@divisor+1)& (0+255),f,b
 10565  01552A  D000               	goto	l7542
 10566  01552C                     l7542:
 10567                           
 10568                           ; BSR set to: 0
 10569  01552C  0100               	movlb	0	; () banked
 10570  01552E  5174               	movf	___awmod@divisor& (0+255),w,b
 10571  015530  0100               	movlb	0	; () banked
 10572  015532  1175               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10573  015534  B4D8               	btfsc	status,2,c
 10574  015536  D02B               	goto	l7558
 10575                           
 10576                           ; BSR set to: 0
 10577  015538  0E01               	movlw	1
 10578  01553A  0100               	movlb	0	; () banked
 10579  01553C  6F76               	movwf	___awmod@counter& (0+255),b
 10580  01553E  D007               	goto	l7548
 10581  015540                     l7546:
 10582                           
 10583                           ; BSR set to: 0
 10584  015540  0100               	movlb	0	; () banked
 10585  015542  90D8               	bcf	status,0,c
 10586  015544  3774               	rlcf	___awmod@divisor& (0+255),f,b
 10587  015546  3775               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10588  015548  0100               	movlb	0	; () banked
 10589  01554A  2B76               	incf	___awmod@counter& (0+255),f,b
 10590  01554C  D000               	goto	l7548
 10591  01554E                     l7548:
 10592                           
 10593                           ; BSR set to: 0
 10594  01554E  0100               	movlb	0	; () banked
 10595  015550  BF75               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 10596  015552  D002               	goto	l7550
 10597  015554  D7F5               	goto	l7546
 10598                           
 10599                           ; BSR set to: 0
 10600  015556  D000               	goto	l7550
 10601  015558                     l7550:
 10602                           
 10603                           ; BSR set to: 0
 10604  015558  0100               	movlb	0	; () banked
 10605  01555A  5174               	movf	___awmod@divisor& (0+255),w,b
 10606  01555C  0100               	movlb	0	; () banked
 10607  01555E  5D72               	subwf	___awmod@dividend& (0+255),w,b
 10608  015560  0100               	movlb	0	; () banked
 10609  015562  5175               	movf	(___awmod@divisor+1)& (0+255),w,b
 10610  015564  0100               	movlb	0	; () banked
 10611  015566  5973               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10612  015568  A0D8               	btfss	status,0,c
 10613  01556A  D009               	goto	l7554
 10614                           
 10615                           ; BSR set to: 0
 10616  01556C  0100               	movlb	0	; () banked
 10617  01556E  5174               	movf	___awmod@divisor& (0+255),w,b
 10618  015570  0100               	movlb	0	; () banked
 10619  015572  5F72               	subwf	___awmod@dividend& (0+255),f,b
 10620  015574  0100               	movlb	0	; () banked
 10621  015576  5175               	movf	(___awmod@divisor+1)& (0+255),w,b
 10622  015578  0100               	movlb	0	; () banked
 10623  01557A  5B73               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10624  01557C  D000               	goto	l7554
 10625  01557E                     l7554:
 10626                           
 10627                           ; BSR set to: 0
 10628  01557E  0100               	movlb	0	; () banked
 10629  015580  90D8               	bcf	status,0,c
 10630  015582  3375               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10631  015584  3374               	rrcf	___awmod@divisor& (0+255),f,b
 10632                           
 10633                           ; BSR set to: 0
 10634  015586  0100               	movlb	0	; () banked
 10635  015588  2F76               	decfsz	___awmod@counter& (0+255),f,b
 10636  01558A  D7E6               	goto	l7550
 10637                           
 10638                           ; BSR set to: 0
 10639  01558C  D000               	goto	l7558
 10640  01558E                     l7558:
 10641                           
 10642                           ; BSR set to: 0
 10643  01558E  0100               	movlb	0	; () banked
 10644  015590  5177               	movf	___awmod@sign& (0+255),w,b
 10645  015592  0100               	movlb	0	; () banked
 10646  015594  B4D8               	btfsc	status,2,c
 10647  015596  D006               	goto	l7562
 10648                           
 10649                           ; BSR set to: 0
 10650  015598  0100               	movlb	0	; () banked
 10651  01559A  6D72               	negf	___awmod@dividend& (0+255),b
 10652  01559C  1F73               	comf	(___awmod@dividend+1)& (0+255),f,b
 10653  01559E  B0D8               	btfsc	status,0,c
 10654  0155A0  2B73               	incf	(___awmod@dividend+1)& (0+255),f,b
 10655  0155A2  D000               	goto	l7562
 10656  0155A4                     l7562:
 10657                           
 10658                           ; BSR set to: 0
 10659  0155A4  C072  F072         	movff	___awmod@dividend,?___awmod
 10660  0155A8  C073  F073         	movff	___awmod@dividend+1,?___awmod+1
 10661  0155AC  0012               	return	
 10662                           
 10663                           ; BSR set to: 0
 10664                           
 10665                           ; BSR set to: 0
 10666  0155AE  0012               	return		;funcret
 10667  0155B0                     __end_of___awmod:
 10668                           	opt stack 0
 10669                           tblptru	equ	0xFF8
 10670                           tblptrh	equ	0xFF7
 10671                           tblptrl	equ	0xFF6
 10672                           tablat	equ	0xFF5
 10673                           prodh	equ	0xFF4
 10674                           prodl	equ	0xFF3
 10675                           intcon	equ	0xFF2
 10676                           postinc0	equ	0xFEE
 10677                           wreg	equ	0xFE8
 10678                           indf2	equ	0xFDF
 10679                           postinc2	equ	0xFDE
 10680                           fsr2h	equ	0xFDA
 10681                           fsr2l	equ	0xFD9
 10682                           status	equ	0xFD8
 10683                           
 10684 ;; *************** function ___awdiv *****************
 10685 ;; Defined at:
 10686 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 10687 ;; Parameters:    Size  Location     Type
 10688 ;;  dividend        2   24[BANK0 ] int 
 10689 ;;  divisor         2   26[BANK0 ] int 
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;  quotient        2   30[BANK0 ] int 
 10692 ;;  sign            1   29[BANK0 ] unsigned char 
 10693 ;;  counter         1   28[BANK0 ] unsigned char 
 10694 ;; Return value:  Size  Location     Type
 10695 ;;                  2   24[BANK0 ] int 
 10696 ;; Registers used:
 10697 ;;		wreg, status,2, status,0
 10698 ;; Tracked objects:
 10699 ;;		On entry : 0/0
 10700 ;;		On exit  : 0/0
 10701 ;;		Unchanged: 0/0
 10702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10703 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10704 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10706 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10707 ;;Total ram usage:        8 bytes
 10708 ;; Hardware stack levels used:    1
 10709 ;; Hardware stack levels required when called:    3
 10710 ;; This function calls:
 10711 ;;		Nothing
 10712 ;; This function is called by:
 10713 ;;		_main
 10714 ;;		_fround
 10715 ;;		_scale
 10716 ;;		_sprintf
 10717 ;; This function uses a non-reentrant model
 10718 ;;
 10719                           
 10720                           	psect	text18
 10721  0151E2                     __ptext18:
 10722                           	opt stack 0
 10723  0151E2                     ___awdiv:
 10724                           	opt stack 27
 10725                           
 10726                           ; BSR set to: 0
 10727                           ;incstack = 0
 10728  0151E2  0E00               	movlw	0
 10729  0151E4  0100               	movlb	0	; () banked
 10730  0151E6  6F7D               	movwf	___awdiv@sign& (0+255),b
 10731                           
 10732                           ; BSR set to: 0
 10733  0151E8  0100               	movlb	0	; () banked
 10734  0151EA  AF7B               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10735  0151EC  D009               	goto	l7494
 10736                           
 10737                           ; BSR set to: 0
 10738  0151EE  0100               	movlb	0	; () banked
 10739  0151F0  6D7A               	negf	___awdiv@divisor& (0+255),b
 10740  0151F2  1F7B               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10741  0151F4  B0D8               	btfsc	status,0,c
 10742  0151F6  2B7B               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10743                           
 10744                           ; BSR set to: 0
 10745  0151F8  0E01               	movlw	1
 10746  0151FA  0100               	movlb	0	; () banked
 10747  0151FC  6F7D               	movwf	___awdiv@sign& (0+255),b
 10748  0151FE  D000               	goto	l7494
 10749  015200                     l7494:
 10750                           
 10751                           ; BSR set to: 0
 10752  015200  0100               	movlb	0	; () banked
 10753  015202  AF79               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10754  015204  D009               	goto	l7500
 10755                           
 10756                           ; BSR set to: 0
 10757  015206  0100               	movlb	0	; () banked
 10758  015208  6D78               	negf	___awdiv@dividend& (0+255),b
 10759  01520A  1F79               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10760  01520C  B0D8               	btfsc	status,0,c
 10761  01520E  2B79               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10762                           
 10763                           ; BSR set to: 0
 10764  015210  0E01               	movlw	1
 10765  015212  0100               	movlb	0	; () banked
 10766  015214  1B7D               	xorwf	___awdiv@sign& (0+255),f,b
 10767  015216  D000               	goto	l7500
 10768  015218                     l7500:
 10769                           
 10770                           ; BSR set to: 0
 10771  015218  0E00               	movlw	0
 10772  01521A  0100               	movlb	0	; () banked
 10773  01521C  6F7F               	movwf	(___awdiv@quotient+1)& (0+255),b
 10774  01521E  0E00               	movlw	0
 10775  015220  6F7E               	movwf	___awdiv@quotient& (0+255),b
 10776                           
 10777                           ; BSR set to: 0
 10778  015222  0100               	movlb	0	; () banked
 10779  015224  517A               	movf	___awdiv@divisor& (0+255),w,b
 10780  015226  0100               	movlb	0	; () banked
 10781  015228  117B               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10782  01522A  B4D8               	btfsc	status,2,c
 10783  01522C  D031               	goto	l7522
 10784                           
 10785                           ; BSR set to: 0
 10786  01522E  0E01               	movlw	1
 10787  015230  0100               	movlb	0	; () banked
 10788  015232  6F7C               	movwf	___awdiv@counter& (0+255),b
 10789  015234  D007               	goto	l7508
 10790  015236                     l7506:
 10791                           
 10792                           ; BSR set to: 0
 10793  015236  0100               	movlb	0	; () banked
 10794  015238  90D8               	bcf	status,0,c
 10795  01523A  377A               	rlcf	___awdiv@divisor& (0+255),f,b
 10796  01523C  377B               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10797  01523E  0100               	movlb	0	; () banked
 10798  015240  2B7C               	incf	___awdiv@counter& (0+255),f,b
 10799  015242  D000               	goto	l7508
 10800  015244                     l7508:
 10801                           
 10802                           ; BSR set to: 0
 10803  015244  0100               	movlb	0	; () banked
 10804  015246  BF7B               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 10805  015248  D002               	goto	l7510
 10806  01524A  D7F5               	goto	l7506
 10807                           
 10808                           ; BSR set to: 0
 10809  01524C  D000               	goto	l7510
 10810  01524E                     l7510:
 10811                           
 10812                           ; BSR set to: 0
 10813  01524E  0100               	movlb	0	; () banked
 10814  015250  90D8               	bcf	status,0,c
 10815  015252  377E               	rlcf	___awdiv@quotient& (0+255),f,b
 10816  015254  377F               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10817                           
 10818                           ; BSR set to: 0
 10819  015256  0100               	movlb	0	; () banked
 10820  015258  517A               	movf	___awdiv@divisor& (0+255),w,b
 10821  01525A  0100               	movlb	0	; () banked
 10822  01525C  5D78               	subwf	___awdiv@dividend& (0+255),w,b
 10823  01525E  0100               	movlb	0	; () banked
 10824  015260  517B               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10825  015262  0100               	movlb	0	; () banked
 10826  015264  5979               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10827  015266  A0D8               	btfss	status,0,c
 10828  015268  D00B               	goto	l7518
 10829                           
 10830                           ; BSR set to: 0
 10831  01526A  0100               	movlb	0	; () banked
 10832  01526C  517A               	movf	___awdiv@divisor& (0+255),w,b
 10833  01526E  0100               	movlb	0	; () banked
 10834  015270  5F78               	subwf	___awdiv@dividend& (0+255),f,b
 10835  015272  0100               	movlb	0	; () banked
 10836  015274  517B               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10837  015276  0100               	movlb	0	; () banked
 10838  015278  5B79               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10839                           
 10840                           ; BSR set to: 0
 10841  01527A  0100               	movlb	0	; () banked
 10842  01527C  817E               	bsf	___awdiv@quotient& (0+255),0,b
 10843  01527E  D000               	goto	l7518
 10844  015280                     l7518:
 10845                           
 10846                           ; BSR set to: 0
 10847  015280  0100               	movlb	0	; () banked
 10848  015282  90D8               	bcf	status,0,c
 10849  015284  337B               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10850  015286  337A               	rrcf	___awdiv@divisor& (0+255),f,b
 10851                           
 10852                           ; BSR set to: 0
 10853  015288  0100               	movlb	0	; () banked
 10854  01528A  2F7C               	decfsz	___awdiv@counter& (0+255),f,b
 10855  01528C  D7E0               	goto	l7510
 10856                           
 10857                           ; BSR set to: 0
 10858  01528E  D000               	goto	l7522
 10859  015290                     l7522:
 10860                           
 10861                           ; BSR set to: 0
 10862  015290  0100               	movlb	0	; () banked
 10863  015292  517D               	movf	___awdiv@sign& (0+255),w,b
 10864  015294  0100               	movlb	0	; () banked
 10865  015296  B4D8               	btfsc	status,2,c
 10866  015298  D006               	goto	l7526
 10867                           
 10868                           ; BSR set to: 0
 10869  01529A  0100               	movlb	0	; () banked
 10870  01529C  6D7E               	negf	___awdiv@quotient& (0+255),b
 10871  01529E  1F7F               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10872  0152A0  B0D8               	btfsc	status,0,c
 10873  0152A2  2B7F               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10874  0152A4  D000               	goto	l7526
 10875  0152A6                     l7526:
 10876                           
 10877                           ; BSR set to: 0
 10878  0152A6  C07E  F078         	movff	___awdiv@quotient,?___awdiv
 10879  0152AA  C07F  F079         	movff	___awdiv@quotient+1,?___awdiv+1
 10880  0152AE  0012               	return	
 10881                           
 10882                           ; BSR set to: 0
 10883                           
 10884                           ; BSR set to: 0
 10885  0152B0  0012               	return		;funcret
 10886  0152B2                     __end_of___awdiv:
 10887                           	opt stack 0
 10888                           tblptru	equ	0xFF8
 10889                           tblptrh	equ	0xFF7
 10890                           tblptrl	equ	0xFF6
 10891                           tablat	equ	0xFF5
 10892                           prodh	equ	0xFF4
 10893                           prodl	equ	0xFF3
 10894                           intcon	equ	0xFF2
 10895                           postinc0	equ	0xFEE
 10896                           wreg	equ	0xFE8
 10897                           indf2	equ	0xFDF
 10898                           postinc2	equ	0xFDE
 10899                           fsr2h	equ	0xFDA
 10900                           fsr2l	equ	0xFD9
 10901                           status	equ	0xFD8
 10902                           
 10903 ;; *************** function __tdiv_to_l_ *****************
 10904 ;; Defined at:
 10905 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
 10906 ;; Parameters:    Size  Location     Type
 10907 ;;  f1              4   18[BANK0 ] float 
 10908 ;;  f2              4   22[BANK0 ] float 
 10909 ;; Auto vars:     Size  Location     Type
 10910 ;;  quot            4   29[BANK0 ] unsigned long 
 10911 ;;  exp1            1   34[BANK0 ] unsigned char 
 10912 ;;  cntr            1   33[BANK0 ] unsigned char 
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  4   18[BANK0 ] unsigned long 
 10915 ;; Registers used:
 10916 ;;		wreg, status,2, status,0
 10917 ;; Tracked objects:
 10918 ;;		On entry : 0/0
 10919 ;;		On exit  : 0/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10922 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10923 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10924 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10925 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10926 ;;Total ram usage:       17 bytes
 10927 ;; Hardware stack levels used:    1
 10928 ;; Hardware stack levels required when called:    3
 10929 ;; This function calls:
 10930 ;;		Nothing
 10931 ;; This function is called by:
 10932 ;;		_sprintf
 10933 ;; This function uses a non-reentrant model
 10934 ;;
 10935                           
 10936                           	psect	text19
 10937  014620                     __ptext19:
 10938                           	opt stack 0
 10939  014620                     __tdiv_to_l_:
 10940                           	opt stack 25
 10941                           
 10942                           ; BSR set to: 0
 10943                           ;incstack = 0
 10944  014620  C074  F07A         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10945  014624  0100               	movlb	0	; () banked
 10946  014626  6B7B               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10947  014628  6B7C               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10948  01462A  0100               	movlb	0	; () banked
 10949  01462C  3573               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10950  01462E  0100               	movlb	0	; () banked
 10951  014630  377A               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10952  014632  E301               	bnc	u9581
 10953  014634  817B               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10954  014636                     u9581:
 10955  014636  0100               	movlb	0	; () banked
 10956  014638  517A               	movf	??__tdiv_to_l_& (0+255),w,b
 10957  01463A  0100               	movlb	0	; () banked
 10958  01463C  6F82               	movwf	__tdiv_to_l_@exp1& (0+255),b
 10959  01463E  0100               	movlb	0	; () banked
 10960  014640  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10961  014642  A4D8               	btfss	status,2,c
 10962  014644  D00A               	goto	l7676
 10963                           
 10964                           ; BSR set to: 0
 10965  014646  0E00               	movlw	0
 10966  014648  0100               	movlb	0	; () banked
 10967  01464A  6F72               	movwf	?__tdiv_to_l_& (0+255),b
 10968  01464C  0E00               	movlw	0
 10969  01464E  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10970  014650  0E00               	movlw	0
 10971  014652  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10972  014654  0E00               	movlw	0
 10973  014656  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10974                           
 10975                           ; BSR set to: 0
 10976  014658  0012               	return	
 10977  01465A                     l7676:
 10978                           
 10979                           ; BSR set to: 0
 10980  01465A  C078  F07A         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10981  01465E  0100               	movlb	0	; () banked
 10982  014660  6B7B               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10983  014662  6B7C               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10984  014664  0100               	movlb	0	; () banked
 10985  014666  3577               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10986  014668  0100               	movlb	0	; () banked
 10987  01466A  377A               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10988  01466C  E301               	bnc	u9601
 10989  01466E  817B               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10990  014670                     u9601:
 10991  014670  0100               	movlb	0	; () banked
 10992  014672  517A               	movf	??__tdiv_to_l_& (0+255),w,b
 10993  014674  0100               	movlb	0	; () banked
 10994  014676  6F81               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10995  014678  0100               	movlb	0	; () banked
 10996  01467A  5181               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10997  01467C  A4D8               	btfss	status,2,c
 10998  01467E  D00A               	goto	l7682
 10999                           
 11000                           ; BSR set to: 0
 11001  014680  0E00               	movlw	0
 11002  014682  0100               	movlb	0	; () banked
 11003  014684  6F72               	movwf	?__tdiv_to_l_& (0+255),b
 11004  014686  0E00               	movlw	0
 11005  014688  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11006  01468A  0E00               	movlw	0
 11007  01468C  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11008  01468E  0E00               	movlw	0
 11009  014690  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11010                           
 11011                           ; BSR set to: 0
 11012  014692  0012               	return	
 11013  014694                     l7682:
 11014                           
 11015                           ; BSR set to: 0
 11016  014694  0100               	movlb	0	; () banked
 11017  014696  8F73               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 11018                           
 11019                           ; BSR set to: 0
 11020  014698  0EFF               	movlw	255
 11021  01469A  0100               	movlb	0	; () banked
 11022  01469C  1772               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 11023  01469E  0EFF               	movlw	255
 11024  0146A0  0100               	movlb	0	; () banked
 11025  0146A2  1773               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11026  0146A4  0E00               	movlw	0
 11027  0146A6  0100               	movlb	0	; () banked
 11028  0146A8  1774               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11029  0146AA  0100               	movlb	0	; () banked
 11030  0146AC  8F77               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 11031                           
 11032                           ; BSR set to: 0
 11033  0146AE  0EFF               	movlw	255
 11034  0146B0  0100               	movlb	0	; () banked
 11035  0146B2  1776               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 11036  0146B4  0EFF               	movlw	255
 11037  0146B6  0100               	movlb	0	; () banked
 11038  0146B8  1777               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 11039  0146BA  0E00               	movlw	0
 11040  0146BC  0100               	movlb	0	; () banked
 11041  0146BE  1778               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 11042                           
 11043                           ; BSR set to: 0
 11044  0146C0  0E00               	movlw	0
 11045  0146C2  0100               	movlb	0	; () banked
 11046  0146C4  6F7D               	movwf	__tdiv_to_l_@quot& (0+255),b
 11047  0146C6  0E00               	movlw	0
 11048  0146C8  6F7E               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 11049  0146CA  0E00               	movlw	0
 11050  0146CC  6F7F               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 11051  0146CE  0E00               	movlw	0
 11052  0146D0  6F80               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 11053                           
 11054                           ; BSR set to: 0
 11055  0146D2  0E7F               	movlw	127
 11056  0146D4  0100               	movlb	0	; () banked
 11057  0146D6  5F82               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 11058                           
 11059                           ; BSR set to: 0
 11060  0146D8  0100               	movlb	0	; () banked
 11061  0146DA  5181               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 11062  0146DC  0F98               	addlw	152
 11063  0146DE  0100               	movlb	0	; () banked
 11064  0146E0  5F82               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 11065                           
 11066                           ; BSR set to: 0
 11067  0146E2  0E18               	movlw	24
 11068  0146E4  0100               	movlb	0	; () banked
 11069  0146E6  6F81               	movwf	__tdiv_to_l_@cntr& (0+255),b
 11070  0146E8                     l1461:
 11071                           
 11072                           ; BSR set to: 0
 11073  0146E8  0100               	movlb	0	; () banked
 11074  0146EA  90D8               	bcf	status,0,c
 11075  0146EC  377D               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 11076  0146EE  377E               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11077  0146F0  377F               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11078  0146F2  3780               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11079                           
 11080                           ; BSR set to: 0
 11081  0146F4  0100               	movlb	0	; () banked
 11082  0146F6  5176               	movf	__tdiv_to_l_@f2& (0+255),w,b
 11083  0146F8  0100               	movlb	0	; () banked
 11084  0146FA  5D72               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 11085  0146FC  0100               	movlb	0	; () banked
 11086  0146FE  5177               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11087  014700  0100               	movlb	0	; () banked
 11088  014702  5973               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 11089  014704  0100               	movlb	0	; () banked
 11090  014706  5178               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 11091  014708  0100               	movlb	0	; () banked
 11092  01470A  5974               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 11093  01470C  A0D8               	btfss	status,0,c
 11094  01470E  D00E               	goto	l1462
 11095                           
 11096                           ; BSR set to: 0
 11097  014710  0100               	movlb	0	; () banked
 11098  014712  5176               	movf	__tdiv_to_l_@f2& (0+255),w,b
 11099  014714  0100               	movlb	0	; () banked
 11100  014716  5F72               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 11101  014718  0100               	movlb	0	; () banked
 11102  01471A  5177               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 11103  01471C  0100               	movlb	0	; () banked
 11104  01471E  5B73               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11105  014720  0100               	movlb	0	; () banked
 11106  014722  5178               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 11107  014724  0100               	movlb	0	; () banked
 11108  014726  5B74               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11109                           
 11110                           ; BSR set to: 0
 11111  014728  0100               	movlb	0	; () banked
 11112  01472A  817D               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 11113  01472C                     l1462:
 11114                           
 11115                           ; BSR set to: 0
 11116  01472C  0100               	movlb	0	; () banked
 11117  01472E  90D8               	bcf	status,0,c
 11118  014730  3772               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 11119  014732  3773               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 11120  014734  3774               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 11121                           
 11122                           ; BSR set to: 0
 11123  014736  0100               	movlb	0	; () banked
 11124  014738  2F81               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 11125  01473A  D7D6               	goto	l1461
 11126  01473C  D000               	goto	l7704
 11127  01473E                     l7704:
 11128                           
 11129                           ; BSR set to: 0
 11130  01473E  0100               	movlb	0	; () banked
 11131  014740  AF82               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 11132  014742  D01B               	goto	l7716
 11133                           
 11134                           ; BSR set to: 0
 11135  014744  0100               	movlb	0	; () banked
 11136  014746  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11137  014748  0A80               	xorlw	128
 11138  01474A  0F97               	addlw	151
 11139  01474C  B0D8               	btfsc	status,0,c
 11140  01474E  D00B               	goto	l7712
 11141                           
 11142                           ; BSR set to: 0
 11143  014750  0E00               	movlw	0
 11144  014752  0100               	movlb	0	; () banked
 11145  014754  6F72               	movwf	?__tdiv_to_l_& (0+255),b
 11146  014756  0E00               	movlw	0
 11147  014758  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11148  01475A  0E00               	movlw	0
 11149  01475C  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11150  01475E  0E00               	movlw	0
 11151  014760  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11152                           
 11153                           ; BSR set to: 0
 11154  014762  0012               	return	
 11155                           
 11156                           ; BSR set to: 0
 11157  014764  D000               	goto	l7712
 11158  014766                     l7712:
 11159                           
 11160                           ; BSR set to: 0
 11161  014766  0100               	movlb	0	; () banked
 11162  014768  90D8               	bcf	status,0,c
 11163  01476A  3380               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11164  01476C  337F               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11165  01476E  337E               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11166  014770  337D               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 11167                           
 11168                           ; BSR set to: 0
 11169  014772  0100               	movlb	0	; () banked
 11170  014774  3F82               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 11171  014776  D7F7               	goto	l7712
 11172                           
 11173                           ; BSR set to: 0
 11174  014778  D01D               	goto	l1468
 11175  01477A                     l7716:
 11176                           
 11177                           ; BSR set to: 0
 11178  01477A  0E17               	movlw	23
 11179  01477C  0100               	movlb	0	; () banked
 11180  01477E  6582               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 11181  014780  D014               	goto	l7724
 11182                           
 11183                           ; BSR set to: 0
 11184  014782  0E00               	movlw	0
 11185  014784  0100               	movlb	0	; () banked
 11186  014786  6F72               	movwf	?__tdiv_to_l_& (0+255),b
 11187  014788  0E00               	movlw	0
 11188  01478A  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 11189  01478C  0E00               	movlw	0
 11190  01478E  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 11191  014790  0E00               	movlw	0
 11192  014792  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 11193                           
 11194                           ; BSR set to: 0
 11195  014794  0012               	return	
 11196                           
 11197                           ; BSR set to: 0
 11198  014796  D009               	goto	l7724
 11199  014798                     l7722:
 11200                           
 11201                           ; BSR set to: 0
 11202  014798  0100               	movlb	0	; () banked
 11203  01479A  90D8               	bcf	status,0,c
 11204  01479C  377D               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 11205  01479E  377E               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 11206  0147A0  377F               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 11207  0147A2  3780               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 11208  0147A4  0100               	movlb	0	; () banked
 11209  0147A6  0782               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 11210  0147A8  D000               	goto	l7724
 11211  0147AA                     l7724:
 11212                           
 11213                           ; BSR set to: 0
 11214  0147AA  0100               	movlb	0	; () banked
 11215  0147AC  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 11216  0147AE  0100               	movlb	0	; () banked
 11217  0147B0  A4D8               	btfss	status,2,c
 11218  0147B2  D7F2               	goto	l7722
 11219  0147B4                     l1468:
 11220                           
 11221                           ; BSR set to: 0
 11222  0147B4  C07D  F072         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 11223  0147B8  C07E  F073         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 11224  0147BC  C07F  F074         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 11225  0147C0  C080  F075         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 11226                           
 11227                           ; BSR set to: 0
 11228  0147C4  0012               	return		;funcret
 11229  0147C6                     __end_of__tdiv_to_l_:
 11230                           	opt stack 0
 11231                           tblptru	equ	0xFF8
 11232                           tblptrh	equ	0xFF7
 11233                           tblptrl	equ	0xFF6
 11234                           tablat	equ	0xFF5
 11235                           prodh	equ	0xFF4
 11236                           prodl	equ	0xFF3
 11237                           intcon	equ	0xFF2
 11238                           postinc0	equ	0xFEE
 11239                           wreg	equ	0xFE8
 11240                           indf2	equ	0xFDF
 11241                           postinc2	equ	0xFDE
 11242                           fsr2h	equ	0xFDA
 11243                           fsr2l	equ	0xFD9
 11244                           status	equ	0xFD8
 11245                           
 11246 ;; *************** function __div_to_l_ *****************
 11247 ;; Defined at:
 11248 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
 11249 ;; Parameters:    Size  Location     Type
 11250 ;;  f1              4   18[BANK0 ] unsigned long 
 11251 ;;  f2              4   22[BANK0 ] unsigned long 
 11252 ;; Auto vars:     Size  Location     Type
 11253 ;;  quot            4   26[BANK0 ] unsigned long 
 11254 ;;  exp1            1   31[BANK0 ] unsigned char 
 11255 ;;  cntr            1   30[BANK0 ] unsigned char 
 11256 ;; Return value:  Size  Location     Type
 11257 ;;                  4   18[BANK0 ] unsigned long 
 11258 ;; Registers used:
 11259 ;;		wreg, status,2, status,0
 11260 ;; Tracked objects:
 11261 ;;		On entry : 0/0
 11262 ;;		On exit  : 0/0
 11263 ;;		Unchanged: 0/0
 11264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11265 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11266 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11268 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11269 ;;Total ram usage:       14 bytes
 11270 ;; Hardware stack levels used:    1
 11271 ;; Hardware stack levels required when called:    3
 11272 ;; This function calls:
 11273 ;;		Nothing
 11274 ;; This function is called by:
 11275 ;;		_sprintf
 11276 ;; This function uses a non-reentrant model
 11277 ;;
 11278                           
 11279                           	psect	text20
 11280  0147C6                     __ptext20:
 11281                           	opt stack 0
 11282  0147C6                     __div_to_l_:
 11283                           	opt stack 25
 11284                           
 11285                           ; BSR set to: 0
 11286                           ;incstack = 0
 11287  0147C6  0100               	movlb	0	; () banked
 11288  0147C8  3574               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 11289  0147CA  3575               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 11290  0147CC  0100               	movlb	0	; () banked
 11291  0147CE  6F7F               	movwf	__div_to_l_@exp1& (0+255),b
 11292  0147D0  0100               	movlb	0	; () banked
 11293  0147D2  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 11294  0147D4  A4D8               	btfss	status,2,c
 11295  0147D6  D00A               	goto	l7732
 11296                           
 11297                           ; BSR set to: 0
 11298  0147D8  0E00               	movlw	0
 11299  0147DA  0100               	movlb	0	; () banked
 11300  0147DC  6F72               	movwf	?__div_to_l_& (0+255),b
 11301  0147DE  0E00               	movlw	0
 11302  0147E0  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 11303  0147E2  0E00               	movlw	0
 11304  0147E4  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 11305  0147E6  0E00               	movlw	0
 11306  0147E8  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 11307                           
 11308                           ; BSR set to: 0
 11309  0147EA  0012               	return	
 11310  0147EC                     l7732:
 11311                           
 11312                           ; BSR set to: 0
 11313  0147EC  0100               	movlb	0	; () banked
 11314  0147EE  3578               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 11315  0147F0  3579               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 11316  0147F2  0100               	movlb	0	; () banked
 11317  0147F4  6F7E               	movwf	__div_to_l_@cntr& (0+255),b
 11318  0147F6  0100               	movlb	0	; () banked
 11319  0147F8  517E               	movf	__div_to_l_@cntr& (0+255),w,b
 11320  0147FA  A4D8               	btfss	status,2,c
 11321  0147FC  D00A               	goto	l7738
 11322                           
 11323                           ; BSR set to: 0
 11324  0147FE  0E00               	movlw	0
 11325  014800  0100               	movlb	0	; () banked
 11326  014802  6F72               	movwf	?__div_to_l_& (0+255),b
 11327  014804  0E00               	movlw	0
 11328  014806  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 11329  014808  0E00               	movlw	0
 11330  01480A  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 11331  01480C  0E00               	movlw	0
 11332  01480E  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 11333                           
 11334                           ; BSR set to: 0
 11335  014810  0012               	return	
 11336  014812                     l7738:
 11337                           
 11338                           ; BSR set to: 0
 11339  014812  0100               	movlb	0	; () banked
 11340  014814  8F74               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 11341                           
 11342                           ; BSR set to: 0
 11343  014816  0EFF               	movlw	255
 11344  014818  0100               	movlb	0	; () banked
 11345  01481A  1772               	andwf	__div_to_l_@f1& (0+255),f,b
 11346  01481C  0EFF               	movlw	255
 11347  01481E  1773               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 11348  014820  0EFF               	movlw	255
 11349  014822  1774               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 11350  014824  0E00               	movlw	0
 11351  014826  1775               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 11352                           
 11353                           ; BSR set to: 0
 11354  014828  0100               	movlb	0	; () banked
 11355  01482A  8F78               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 11356  01482C  0EFF               	movlw	255
 11357  01482E  0100               	movlb	0	; () banked
 11358  014830  1776               	andwf	__div_to_l_@f2& (0+255),f,b
 11359  014832  0EFF               	movlw	255
 11360  014834  1777               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 11361  014836  0EFF               	movlw	255
 11362  014838  1778               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 11363  01483A  0E00               	movlw	0
 11364  01483C  1779               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 11365                           
 11366                           ; BSR set to: 0
 11367  01483E  0E00               	movlw	0
 11368  014840  0100               	movlb	0	; () banked
 11369  014842  6F7A               	movwf	__div_to_l_@quot& (0+255),b
 11370  014844  0E00               	movlw	0
 11371  014846  6F7B               	movwf	(__div_to_l_@quot+1)& (0+255),b
 11372  014848  0E00               	movlw	0
 11373  01484A  6F7C               	movwf	(__div_to_l_@quot+2)& (0+255),b
 11374  01484C  0E00               	movlw	0
 11375  01484E  6F7D               	movwf	(__div_to_l_@quot+3)& (0+255),b
 11376                           
 11377                           ; BSR set to: 0
 11378  014850  0E7F               	movlw	127
 11379  014852  0100               	movlb	0	; () banked
 11380  014854  5F7F               	subwf	__div_to_l_@exp1& (0+255),f,b
 11381                           
 11382                           ; BSR set to: 0
 11383  014856  0100               	movlb	0	; () banked
 11384  014858  517E               	movf	__div_to_l_@cntr& (0+255),w,b
 11385  01485A  0FA0               	addlw	160
 11386  01485C  0100               	movlb	0	; () banked
 11387  01485E  5F7F               	subwf	__div_to_l_@exp1& (0+255),f,b
 11388                           
 11389                           ; BSR set to: 0
 11390  014860  0E20               	movlw	32
 11391  014862  0100               	movlb	0	; () banked
 11392  014864  6F7E               	movwf	__div_to_l_@cntr& (0+255),b
 11393  014866  D000               	goto	l7752
 11394  014868                     l7752:
 11395                           
 11396                           ; BSR set to: 0
 11397  014868  0100               	movlb	0	; () banked
 11398  01486A  90D8               	bcf	status,0,c
 11399  01486C  377A               	rlcf	__div_to_l_@quot& (0+255),f,b
 11400  01486E  377B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11401  014870  377C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11402  014872  377D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11403                           
 11404                           ; BSR set to: 0
 11405  014874  0100               	movlb	0	; () banked
 11406  014876  5176               	movf	__div_to_l_@f2& (0+255),w,b
 11407  014878  0100               	movlb	0	; () banked
 11408  01487A  5D72               	subwf	__div_to_l_@f1& (0+255),w,b
 11409  01487C  0100               	movlb	0	; () banked
 11410  01487E  5177               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11411  014880  0100               	movlb	0	; () banked
 11412  014882  5973               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 11413  014884  0100               	movlb	0	; () banked
 11414  014886  5178               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11415  014888  0100               	movlb	0	; () banked
 11416  01488A  5974               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 11417  01488C  0100               	movlb	0	; () banked
 11418  01488E  5179               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11419  014890  0100               	movlb	0	; () banked
 11420  014892  5975               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 11421  014894  A0D8               	btfss	status,0,c
 11422  014896  D013               	goto	l7760
 11423                           
 11424                           ; BSR set to: 0
 11425  014898  0100               	movlb	0	; () banked
 11426  01489A  5176               	movf	__div_to_l_@f2& (0+255),w,b
 11427  01489C  0100               	movlb	0	; () banked
 11428  01489E  5F72               	subwf	__div_to_l_@f1& (0+255),f,b
 11429  0148A0  0100               	movlb	0	; () banked
 11430  0148A2  5177               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 11431  0148A4  0100               	movlb	0	; () banked
 11432  0148A6  5B73               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 11433  0148A8  0100               	movlb	0	; () banked
 11434  0148AA  5178               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 11435  0148AC  0100               	movlb	0	; () banked
 11436  0148AE  5B74               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 11437  0148B0  0100               	movlb	0	; () banked
 11438  0148B2  5179               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 11439  0148B4  0100               	movlb	0	; () banked
 11440  0148B6  5B75               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 11441                           
 11442                           ; BSR set to: 0
 11443  0148B8  0100               	movlb	0	; () banked
 11444  0148BA  817A               	bsf	__div_to_l_@quot& (0+255),0,b
 11445  0148BC  D000               	goto	l7760
 11446  0148BE                     l7760:
 11447                           
 11448                           ; BSR set to: 0
 11449  0148BE  0100               	movlb	0	; () banked
 11450  0148C0  90D8               	bcf	status,0,c
 11451  0148C2  3772               	rlcf	__div_to_l_@f1& (0+255),f,b
 11452  0148C4  3773               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 11453  0148C6  3774               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 11454  0148C8  3775               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 11455                           
 11456                           ; BSR set to: 0
 11457  0148CA  0100               	movlb	0	; () banked
 11458  0148CC  2F7E               	decfsz	__div_to_l_@cntr& (0+255),f,b
 11459  0148CE  D7CC               	goto	l7752
 11460  0148D0  D000               	goto	l7764
 11461  0148D2                     l7764:
 11462                           
 11463                           ; BSR set to: 0
 11464  0148D2  0100               	movlb	0	; () banked
 11465  0148D4  AF7F               	btfss	__div_to_l_@exp1& (0+255),7,b
 11466  0148D6  D01B               	goto	l7776
 11467                           
 11468                           ; BSR set to: 0
 11469  0148D8  0100               	movlb	0	; () banked
 11470  0148DA  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 11471  0148DC  0A80               	xorlw	128
 11472  0148DE  0F9F               	addlw	159
 11473  0148E0  B0D8               	btfsc	status,0,c
 11474  0148E2  D00B               	goto	l7772
 11475                           
 11476                           ; BSR set to: 0
 11477  0148E4  0E00               	movlw	0
 11478  0148E6  0100               	movlb	0	; () banked
 11479  0148E8  6F72               	movwf	?__div_to_l_& (0+255),b
 11480  0148EA  0E00               	movlw	0
 11481  0148EC  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 11482  0148EE  0E00               	movlw	0
 11483  0148F0  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 11484  0148F2  0E00               	movlw	0
 11485  0148F4  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 11486                           
 11487                           ; BSR set to: 0
 11488  0148F6  0012               	return	
 11489                           
 11490                           ; BSR set to: 0
 11491  0148F8  D000               	goto	l7772
 11492  0148FA                     l7772:
 11493                           
 11494                           ; BSR set to: 0
 11495  0148FA  0100               	movlb	0	; () banked
 11496  0148FC  90D8               	bcf	status,0,c
 11497  0148FE  337D               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 11498  014900  337C               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 11499  014902  337B               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 11500  014904  337A               	rrcf	__div_to_l_@quot& (0+255),f,b
 11501                           
 11502                           ; BSR set to: 0
 11503  014906  0100               	movlb	0	; () banked
 11504  014908  3F7F               	incfsz	__div_to_l_@exp1& (0+255),f,b
 11505  01490A  D7F7               	goto	l7772
 11506                           
 11507                           ; BSR set to: 0
 11508  01490C  D01D               	goto	l1347
 11509  01490E                     l7776:
 11510                           
 11511                           ; BSR set to: 0
 11512  01490E  0E1F               	movlw	31
 11513  014910  0100               	movlb	0	; () banked
 11514  014912  657F               	cpfsgt	__div_to_l_@exp1& (0+255),b
 11515  014914  D014               	goto	l7784
 11516                           
 11517                           ; BSR set to: 0
 11518  014916  0E00               	movlw	0
 11519  014918  0100               	movlb	0	; () banked
 11520  01491A  6F72               	movwf	?__div_to_l_& (0+255),b
 11521  01491C  0E00               	movlw	0
 11522  01491E  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 11523  014920  0E00               	movlw	0
 11524  014922  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 11525  014924  0E00               	movlw	0
 11526  014926  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 11527                           
 11528                           ; BSR set to: 0
 11529  014928  0012               	return	
 11530                           
 11531                           ; BSR set to: 0
 11532  01492A  D009               	goto	l7784
 11533  01492C                     l7782:
 11534                           
 11535                           ; BSR set to: 0
 11536  01492C  0100               	movlb	0	; () banked
 11537  01492E  90D8               	bcf	status,0,c
 11538  014930  377A               	rlcf	__div_to_l_@quot& (0+255),f,b
 11539  014932  377B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 11540  014934  377C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 11541  014936  377D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 11542  014938  0100               	movlb	0	; () banked
 11543  01493A  077F               	decf	__div_to_l_@exp1& (0+255),f,b
 11544  01493C  D000               	goto	l7784
 11545  01493E                     l7784:
 11546                           
 11547                           ; BSR set to: 0
 11548  01493E  0100               	movlb	0	; () banked
 11549  014940  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 11550  014942  0100               	movlb	0	; () banked
 11551  014944  A4D8               	btfss	status,2,c
 11552  014946  D7F2               	goto	l7782
 11553  014948                     l1347:
 11554                           
 11555                           ; BSR set to: 0
 11556  014948  C07A  F072         	movff	__div_to_l_@quot,?__div_to_l_
 11557  01494C  C07B  F073         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 11558  014950  C07C  F074         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 11559  014954  C07D  F075         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 11560                           
 11561                           ; BSR set to: 0
 11562  014958  0012               	return		;funcret
 11563  01495A                     __end_of__div_to_l_:
 11564                           	opt stack 0
 11565                           tblptru	equ	0xFF8
 11566                           tblptrh	equ	0xFF7
 11567                           tblptrl	equ	0xFF6
 11568                           tablat	equ	0xFF5
 11569                           prodh	equ	0xFF4
 11570                           prodl	equ	0xFF3
 11571                           intcon	equ	0xFF2
 11572                           postinc0	equ	0xFEE
 11573                           wreg	equ	0xFE8
 11574                           indf2	equ	0xFDF
 11575                           postinc2	equ	0xFDE
 11576                           fsr2h	equ	0xFDA
 11577                           fsr2l	equ	0xFD9
 11578                           status	equ	0xFD8
 11579                           
 11580 ;; *************** function ___lltofl *****************
 11581 ;; Defined at:
 11582 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltofl.c"
 11583 ;; Parameters:    Size  Location     Type
 11584 ;;  c               4   28[BANK0 ] unsigned long 
 11585 ;; Auto vars:     Size  Location     Type
 11586 ;;		None
 11587 ;; Return value:  Size  Location     Type
 11588 ;;                  4   28[BANK0 ] unsigned long 
 11589 ;; Registers used:
 11590 ;;		wreg, status,2, status,0, cstack
 11591 ;; Tracked objects:
 11592 ;;		On entry : 0/0
 11593 ;;		On exit  : 0/0
 11594 ;;		Unchanged: 0/0
 11595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11596 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11599 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11600 ;;Total ram usage:        4 bytes
 11601 ;; Hardware stack levels used:    1
 11602 ;; Hardware stack levels required when called:    4
 11603 ;; This function calls:
 11604 ;;		___flpack
 11605 ;; This function is called by:
 11606 ;;		_sprintf
 11607 ;; This function uses a non-reentrant model
 11608 ;;
 11609                           
 11610                           	psect	text21
 11611  015D8E                     __ptext21:
 11612                           	opt stack 0
 11613  015D8E                     ___lltofl:
 11614                           	opt stack 24
 11615                           
 11616                           ; BSR set to: 0
 11617                           ;incstack = 0
 11618  015D8E  C07C  F072         	movff	___lltofl@c,___flpack@arg
 11619  015D92  C07D  F073         	movff	___lltofl@c+1,___flpack@arg+1
 11620  015D96  C07E  F074         	movff	___lltofl@c+2,___flpack@arg+2
 11621  015D9A  C07F  F075         	movff	___lltofl@c+3,___flpack@arg+3
 11622  015D9E  0E96               	movlw	150
 11623  015DA0  0100               	movlb	0	; () banked
 11624  015DA2  6F76               	movwf	___flpack@exp& (0+255),b
 11625  015DA4  0E00               	movlw	0
 11626  015DA6  0100               	movlb	0	; () banked
 11627  015DA8  6F77               	movwf	___flpack@sign& (0+255),b
 11628  015DAA  ECAD  F0A4         	call	___flpack	;wreg free
 11629  015DAE  C072  F07C         	movff	?___flpack,?___lltofl
 11630  015DB2  C073  F07D         	movff	?___flpack+1,?___lltofl+1
 11631  015DB6  C074  F07E         	movff	?___flpack+2,?___lltofl+2
 11632  015DBA  C075  F07F         	movff	?___flpack+3,?___lltofl+3
 11633  015DBE  0012               	return	
 11634  015DC0  0012               	return		;funcret
 11635  015DC2                     __end_of___lltofl:
 11636                           	opt stack 0
 11637                           tblptru	equ	0xFF8
 11638                           tblptrh	equ	0xFF7
 11639                           tblptrl	equ	0xFF6
 11640                           tablat	equ	0xFF5
 11641                           prodh	equ	0xFF4
 11642                           prodl	equ	0xFF3
 11643                           intcon	equ	0xFF2
 11644                           postinc0	equ	0xFEE
 11645                           wreg	equ	0xFE8
 11646                           indf2	equ	0xFDF
 11647                           postinc2	equ	0xFDE
 11648                           fsr2h	equ	0xFDA
 11649                           fsr2l	equ	0xFD9
 11650                           status	equ	0xFD8
 11651                           
 11652 ;; *************** function ___llmod *****************
 11653 ;; Defined at:
 11654 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
 11655 ;; Parameters:    Size  Location     Type
 11656 ;;  dividend        4   18[BANK0 ] unsigned long 
 11657 ;;  divisor         4   22[BANK0 ] unsigned long 
 11658 ;; Auto vars:     Size  Location     Type
 11659 ;;  counter         1   26[BANK0 ] unsigned char 
 11660 ;; Return value:  Size  Location     Type
 11661 ;;                  4   18[BANK0 ] unsigned long 
 11662 ;; Registers used:
 11663 ;;		wreg, status,2, status,0
 11664 ;; Tracked objects:
 11665 ;;		On entry : 0/0
 11666 ;;		On exit  : 0/0
 11667 ;;		Unchanged: 0/0
 11668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11669 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11670 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11672 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11673 ;;Total ram usage:        9 bytes
 11674 ;; Hardware stack levels used:    1
 11675 ;; Hardware stack levels required when called:    3
 11676 ;; This function calls:
 11677 ;;		Nothing
 11678 ;; This function is called by:
 11679 ;;		_sprintf
 11680 ;; This function uses a non-reentrant model
 11681 ;;
 11682                           
 11683                           	psect	text22
 11684  015654                     __ptext22:
 11685                           	opt stack 0
 11686  015654                     ___llmod:
 11687                           	opt stack 25
 11688                           
 11689                           ;incstack = 0
 11690  015654  0100               	movlb	0	; () banked
 11691  015656  5176               	movf	___llmod@divisor& (0+255),w,b
 11692  015658  0100               	movlb	0	; () banked
 11693  01565A  1177               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11694  01565C  0100               	movlb	0	; () banked
 11695  01565E  1178               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11696  015660  0100               	movlb	0	; () banked
 11697  015662  1179               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11698  015664  B4D8               	btfsc	status,2,c
 11699  015666  D03F               	goto	l1572
 11700                           
 11701                           ; BSR set to: 0
 11702  015668  0E01               	movlw	1
 11703  01566A  0100               	movlb	0	; () banked
 11704  01566C  6F7A               	movwf	___llmod@counter& (0+255),b
 11705  01566E  D009               	goto	l7888
 11706  015670                     l7886:
 11707                           
 11708                           ; BSR set to: 0
 11709  015670  0100               	movlb	0	; () banked
 11710  015672  90D8               	bcf	status,0,c
 11711  015674  3776               	rlcf	___llmod@divisor& (0+255),f,b
 11712  015676  3777               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11713  015678  3778               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11714  01567A  3779               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11715  01567C  0100               	movlb	0	; () banked
 11716  01567E  2B7A               	incf	___llmod@counter& (0+255),f,b
 11717  015680  D000               	goto	l7888
 11718  015682                     l7888:
 11719                           
 11720                           ; BSR set to: 0
 11721  015682  0100               	movlb	0	; () banked
 11722  015684  BF79               	btfsc	(___llmod@divisor+3)& (0+255),7,b
 11723  015686  D002               	goto	l7890
 11724  015688  D7F3               	goto	l7886
 11725                           
 11726                           ; BSR set to: 0
 11727  01568A  D000               	goto	l7890
 11728  01568C                     l7890:
 11729                           
 11730                           ; BSR set to: 0
 11731  01568C  0100               	movlb	0	; () banked
 11732  01568E  5176               	movf	___llmod@divisor& (0+255),w,b
 11733  015690  0100               	movlb	0	; () banked
 11734  015692  5D72               	subwf	___llmod@dividend& (0+255),w,b
 11735  015694  0100               	movlb	0	; () banked
 11736  015696  5177               	movf	(___llmod@divisor+1)& (0+255),w,b
 11737  015698  0100               	movlb	0	; () banked
 11738  01569A  5973               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11739  01569C  0100               	movlb	0	; () banked
 11740  01569E  5178               	movf	(___llmod@divisor+2)& (0+255),w,b
 11741  0156A0  0100               	movlb	0	; () banked
 11742  0156A2  5974               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11743  0156A4  0100               	movlb	0	; () banked
 11744  0156A6  5179               	movf	(___llmod@divisor+3)& (0+255),w,b
 11745  0156A8  0100               	movlb	0	; () banked
 11746  0156AA  5975               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11747  0156AC  A0D8               	btfss	status,0,c
 11748  0156AE  D011               	goto	l7894
 11749                           
 11750                           ; BSR set to: 0
 11751  0156B0  0100               	movlb	0	; () banked
 11752  0156B2  5176               	movf	___llmod@divisor& (0+255),w,b
 11753  0156B4  0100               	movlb	0	; () banked
 11754  0156B6  5F72               	subwf	___llmod@dividend& (0+255),f,b
 11755  0156B8  0100               	movlb	0	; () banked
 11756  0156BA  5177               	movf	(___llmod@divisor+1)& (0+255),w,b
 11757  0156BC  0100               	movlb	0	; () banked
 11758  0156BE  5B73               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11759  0156C0  0100               	movlb	0	; () banked
 11760  0156C2  5178               	movf	(___llmod@divisor+2)& (0+255),w,b
 11761  0156C4  0100               	movlb	0	; () banked
 11762  0156C6  5B74               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11763  0156C8  0100               	movlb	0	; () banked
 11764  0156CA  5179               	movf	(___llmod@divisor+3)& (0+255),w,b
 11765  0156CC  0100               	movlb	0	; () banked
 11766  0156CE  5B75               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11767  0156D0  D000               	goto	l7894
 11768  0156D2                     l7894:
 11769                           
 11770                           ; BSR set to: 0
 11771  0156D2  0100               	movlb	0	; () banked
 11772  0156D4  90D8               	bcf	status,0,c
 11773  0156D6  3379               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11774  0156D8  3378               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11775  0156DA  3377               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11776  0156DC  3376               	rrcf	___llmod@divisor& (0+255),f,b
 11777                           
 11778                           ; BSR set to: 0
 11779  0156DE  0100               	movlb	0	; () banked
 11780  0156E0  2F7A               	decfsz	___llmod@counter& (0+255),f,b
 11781  0156E2  D7D4               	goto	l7890
 11782  0156E4  D000               	goto	l1572
 11783  0156E6                     l1572:
 11784                           
 11785                           ; BSR set to: 0
 11786  0156E6  C072  F072         	movff	___llmod@dividend,?___llmod
 11787  0156EA  C073  F073         	movff	___llmod@dividend+1,?___llmod+1
 11788  0156EE  C074  F074         	movff	___llmod@dividend+2,?___llmod+2
 11789  0156F2  C075  F075         	movff	___llmod@dividend+3,?___llmod+3
 11790                           
 11791                           ; BSR set to: 0
 11792  0156F6  0012               	return		;funcret
 11793  0156F8                     __end_of___llmod:
 11794                           	opt stack 0
 11795                           tblptru	equ	0xFF8
 11796                           tblptrh	equ	0xFF7
 11797                           tblptrl	equ	0xFF6
 11798                           tablat	equ	0xFF5
 11799                           prodh	equ	0xFF4
 11800                           prodl	equ	0xFF3
 11801                           intcon	equ	0xFF2
 11802                           postinc0	equ	0xFEE
 11803                           wreg	equ	0xFE8
 11804                           indf2	equ	0xFDF
 11805                           postinc2	equ	0xFDE
 11806                           fsr2h	equ	0xFDA
 11807                           fsr2l	equ	0xFD9
 11808                           status	equ	0xFD8
 11809                           
 11810 ;; *************** function ___lldiv *****************
 11811 ;; Defined at:
 11812 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 11813 ;; Parameters:    Size  Location     Type
 11814 ;;  dividend        4   18[BANK0 ] unsigned long 
 11815 ;;  divisor         4   22[BANK0 ] unsigned long 
 11816 ;; Auto vars:     Size  Location     Type
 11817 ;;  quotient        4   26[BANK0 ] unsigned long 
 11818 ;;  counter         1   30[BANK0 ] unsigned char 
 11819 ;; Return value:  Size  Location     Type
 11820 ;;                  4   18[BANK0 ] unsigned long 
 11821 ;; Registers used:
 11822 ;;		wreg, status,2, status,0
 11823 ;; Tracked objects:
 11824 ;;		On entry : 0/0
 11825 ;;		On exit  : 0/0
 11826 ;;		Unchanged: 0/0
 11827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11828 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11829 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11831 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11832 ;;Total ram usage:       13 bytes
 11833 ;; Hardware stack levels used:    1
 11834 ;; Hardware stack levels required when called:    3
 11835 ;; This function calls:
 11836 ;;		Nothing
 11837 ;; This function is called by:
 11838 ;;		_sprintf
 11839 ;; This function uses a non-reentrant model
 11840 ;;
 11841                           
 11842                           	psect	text23
 11843  0152B2                     __ptext23:
 11844                           	opt stack 0
 11845  0152B2                     ___lldiv:
 11846                           	opt stack 25
 11847                           
 11848                           ; BSR set to: 0
 11849                           ;incstack = 0
 11850  0152B2  0E00               	movlw	0
 11851  0152B4  0100               	movlb	0	; () banked
 11852  0152B6  6F7A               	movwf	___lldiv@quotient& (0+255),b
 11853  0152B8  0E00               	movlw	0
 11854  0152BA  6F7B               	movwf	(___lldiv@quotient+1)& (0+255),b
 11855  0152BC  0E00               	movlw	0
 11856  0152BE  6F7C               	movwf	(___lldiv@quotient+2)& (0+255),b
 11857  0152C0  0E00               	movlw	0
 11858  0152C2  6F7D               	movwf	(___lldiv@quotient+3)& (0+255),b
 11859                           
 11860                           ; BSR set to: 0
 11861  0152C4  0100               	movlb	0	; () banked
 11862  0152C6  5176               	movf	___lldiv@divisor& (0+255),w,b
 11863  0152C8  0100               	movlb	0	; () banked
 11864  0152CA  1177               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11865  0152CC  0100               	movlb	0	; () banked
 11866  0152CE  1178               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11867  0152D0  0100               	movlb	0	; () banked
 11868  0152D2  1179               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11869  0152D4  B4D8               	btfsc	status,2,c
 11870  0152D6  D047               	goto	l1562
 11871                           
 11872                           ; BSR set to: 0
 11873  0152D8  0E01               	movlw	1
 11874  0152DA  0100               	movlb	0	; () banked
 11875  0152DC  6F7E               	movwf	___lldiv@counter& (0+255),b
 11876  0152DE  D009               	goto	l7868
 11877  0152E0                     l7866:
 11878                           
 11879                           ; BSR set to: 0
 11880  0152E0  0100               	movlb	0	; () banked
 11881  0152E2  90D8               	bcf	status,0,c
 11882  0152E4  3776               	rlcf	___lldiv@divisor& (0+255),f,b
 11883  0152E6  3777               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11884  0152E8  3778               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11885  0152EA  3779               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11886  0152EC  0100               	movlb	0	; () banked
 11887  0152EE  2B7E               	incf	___lldiv@counter& (0+255),f,b
 11888  0152F0  D000               	goto	l7868
 11889  0152F2                     l7868:
 11890                           
 11891                           ; BSR set to: 0
 11892  0152F2  0100               	movlb	0	; () banked
 11893  0152F4  BF79               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
 11894  0152F6  D002               	goto	l7870
 11895  0152F8  D7F3               	goto	l7866
 11896                           
 11897                           ; BSR set to: 0
 11898  0152FA  D000               	goto	l7870
 11899  0152FC                     l7870:
 11900                           
 11901                           ; BSR set to: 0
 11902  0152FC  0100               	movlb	0	; () banked
 11903  0152FE  90D8               	bcf	status,0,c
 11904  015300  377A               	rlcf	___lldiv@quotient& (0+255),f,b
 11905  015302  377B               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11906  015304  377C               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11907  015306  377D               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11908                           
 11909                           ; BSR set to: 0
 11910  015308  0100               	movlb	0	; () banked
 11911  01530A  5176               	movf	___lldiv@divisor& (0+255),w,b
 11912  01530C  0100               	movlb	0	; () banked
 11913  01530E  5D72               	subwf	___lldiv@dividend& (0+255),w,b
 11914  015310  0100               	movlb	0	; () banked
 11915  015312  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11916  015314  0100               	movlb	0	; () banked
 11917  015316  5973               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11918  015318  0100               	movlb	0	; () banked
 11919  01531A  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11920  01531C  0100               	movlb	0	; () banked
 11921  01531E  5974               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11922  015320  0100               	movlb	0	; () banked
 11923  015322  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11924  015324  0100               	movlb	0	; () banked
 11925  015326  5975               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11926  015328  A0D8               	btfss	status,0,c
 11927  01532A  D013               	goto	l7878
 11928                           
 11929                           ; BSR set to: 0
 11930  01532C  0100               	movlb	0	; () banked
 11931  01532E  5176               	movf	___lldiv@divisor& (0+255),w,b
 11932  015330  0100               	movlb	0	; () banked
 11933  015332  5F72               	subwf	___lldiv@dividend& (0+255),f,b
 11934  015334  0100               	movlb	0	; () banked
 11935  015336  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11936  015338  0100               	movlb	0	; () banked
 11937  01533A  5B73               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11938  01533C  0100               	movlb	0	; () banked
 11939  01533E  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11940  015340  0100               	movlb	0	; () banked
 11941  015342  5B74               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11942  015344  0100               	movlb	0	; () banked
 11943  015346  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11944  015348  0100               	movlb	0	; () banked
 11945  01534A  5B75               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11946                           
 11947                           ; BSR set to: 0
 11948  01534C  0100               	movlb	0	; () banked
 11949  01534E  817A               	bsf	___lldiv@quotient& (0+255),0,b
 11950  015350  D000               	goto	l7878
 11951  015352                     l7878:
 11952                           
 11953                           ; BSR set to: 0
 11954  015352  0100               	movlb	0	; () banked
 11955  015354  90D8               	bcf	status,0,c
 11956  015356  3379               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11957  015358  3378               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11958  01535A  3377               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11959  01535C  3376               	rrcf	___lldiv@divisor& (0+255),f,b
 11960                           
 11961                           ; BSR set to: 0
 11962  01535E  0100               	movlb	0	; () banked
 11963  015360  2F7E               	decfsz	___lldiv@counter& (0+255),f,b
 11964  015362  D7CC               	goto	l7870
 11965  015364  D000               	goto	l1562
 11966  015366                     l1562:
 11967                           
 11968                           ; BSR set to: 0
 11969  015366  C07A  F072         	movff	___lldiv@quotient,?___lldiv
 11970  01536A  C07B  F073         	movff	___lldiv@quotient+1,?___lldiv+1
 11971  01536E  C07C  F074         	movff	___lldiv@quotient+2,?___lldiv+2
 11972  015372  C07D  F075         	movff	___lldiv@quotient+3,?___lldiv+3
 11973                           
 11974                           ; BSR set to: 0
 11975  015376  0012               	return		;funcret
 11976  015378                     __end_of___lldiv:
 11977                           	opt stack 0
 11978                           tblptru	equ	0xFF8
 11979                           tblptrh	equ	0xFF7
 11980                           tblptrl	equ	0xFF6
 11981                           tablat	equ	0xFF5
 11982                           prodh	equ	0xFF4
 11983                           prodl	equ	0xFF3
 11984                           intcon	equ	0xFF2
 11985                           postinc0	equ	0xFEE
 11986                           wreg	equ	0xFE8
 11987                           indf2	equ	0xFDF
 11988                           postinc2	equ	0xFDE
 11989                           fsr2h	equ	0xFDA
 11990                           fsr2l	equ	0xFD9
 11991                           status	equ	0xFD8
 11992                           
 11993 ;; *************** function ___fltol *****************
 11994 ;; Defined at:
 11995 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fltol.c"
 11996 ;; Parameters:    Size  Location     Type
 11997 ;;  f1              4   73[BANK0 ] unsigned long 
 11998 ;; Auto vars:     Size  Location     Type
 11999 ;;  exp1            1   82[BANK0 ] unsigned char 
 12000 ;;  sign1           1   81[BANK0 ] unsigned char 
 12001 ;; Return value:  Size  Location     Type
 12002 ;;                  4   73[BANK0 ] long 
 12003 ;; Registers used:
 12004 ;;		wreg, status,2, status,0
 12005 ;; Tracked objects:
 12006 ;;		On entry : 0/0
 12007 ;;		On exit  : 0/0
 12008 ;;		Unchanged: 0/0
 12009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12010 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12011 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12012 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12013 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12014 ;;Total ram usage:       10 bytes
 12015 ;; Hardware stack levels used:    1
 12016 ;; Hardware stack levels required when called:    3
 12017 ;; This function calls:
 12018 ;;		Nothing
 12019 ;; This function is called by:
 12020 ;;		_main
 12021 ;;		_sprintf
 12022 ;; This function uses a non-reentrant model
 12023 ;;
 12024                           
 12025                           	psect	text24
 12026  014EE2                     __ptext24:
 12027                           	opt stack 0
 12028  014EE2                     ___fltol:
 12029                           	opt stack 27
 12030                           
 12031                           ; BSR set to: 0
 12032                           ;incstack = 0
 12033  014EE2  0100               	movlb	0	; () banked
 12034  014EE4  35AB               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12035  014EE6  35AC               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12036  014EE8  0100               	movlb	0	; () banked
 12037  014EEA  6FB2               	movwf	___fltol@exp1& (0+255),b
 12038  014EEC  0100               	movlb	0	; () banked
 12039  014EEE  51B2               	movf	___fltol@exp1& (0+255),w,b
 12040  014EF0  A4D8               	btfss	status,2,c
 12041  014EF2  D00A               	goto	l7822
 12042                           
 12043                           ; BSR set to: 0
 12044  014EF4  0E00               	movlw	0
 12045  014EF6  0100               	movlb	0	; () banked
 12046  014EF8  6FA9               	movwf	?___fltol& (0+255),b
 12047  014EFA  0E00               	movlw	0
 12048  014EFC  6FAA               	movwf	(?___fltol+1)& (0+255),b
 12049  014EFE  0E00               	movlw	0
 12050  014F00  6FAB               	movwf	(?___fltol+2)& (0+255),b
 12051  014F02  0E00               	movlw	0
 12052  014F04  6FAC               	movwf	(?___fltol+3)& (0+255),b
 12053                           
 12054                           ; BSR set to: 0
 12055  014F06  0012               	return	
 12056  014F08                     l7822:
 12057                           
 12058                           ; BSR set to: 0
 12059  014F08  C0A9  F0AD         	movff	___fltol@f1,??___fltol
 12060  014F0C  C0AA  F0AE         	movff	___fltol@f1+1,??___fltol+1
 12061  014F10  C0AB  F0AF         	movff	___fltol@f1+2,??___fltol+2
 12062  014F14  C0AC  F0B0         	movff	___fltol@f1+3,??___fltol+3
 12063  014F18  0E20               	movlw	32
 12064  014F1A  D006               	goto	u9800
 12065  014F1C                     u9805:
 12066  014F1C  0100               	movlb	0	; () banked
 12067  014F1E  90D8               	bcf	status,0,c
 12068  014F20  33B0               	rrcf	(??___fltol+3)& (0+255),f,b
 12069  014F22  33AF               	rrcf	(??___fltol+2)& (0+255),f,b
 12070  014F24  33AE               	rrcf	(??___fltol+1)& (0+255),f,b
 12071  014F26  33AD               	rrcf	??___fltol& (0+255),f,b
 12072  014F28                     u9800:
 12073  014F28  2EE8               	decfsz	wreg,f,c
 12074  014F2A  D7F8               	goto	u9805
 12075  014F2C  0100               	movlb	0	; () banked
 12076  014F2E  51AD               	movf	??___fltol& (0+255),w,b
 12077  014F30  0100               	movlb	0	; () banked
 12078  014F32  6FB1               	movwf	___fltol@sign1& (0+255),b
 12079                           
 12080                           ; BSR set to: 0
 12081  014F34  0100               	movlb	0	; () banked
 12082  014F36  8FAB               	bsf	(___fltol@f1+2)& (0+255),7,b
 12083                           
 12084                           ; BSR set to: 0
 12085  014F38  0EFF               	movlw	255
 12086  014F3A  0100               	movlb	0	; () banked
 12087  014F3C  17A9               	andwf	___fltol@f1& (0+255),f,b
 12088  014F3E  0EFF               	movlw	255
 12089  014F40  17AA               	andwf	(___fltol@f1+1)& (0+255),f,b
 12090  014F42  0EFF               	movlw	255
 12091  014F44  17AB               	andwf	(___fltol@f1+2)& (0+255),f,b
 12092  014F46  0E00               	movlw	0
 12093  014F48  17AC               	andwf	(___fltol@f1+3)& (0+255),f,b
 12094                           
 12095                           ; BSR set to: 0
 12096  014F4A  0E96               	movlw	150
 12097  014F4C  0100               	movlb	0	; () banked
 12098  014F4E  5FB2               	subwf	___fltol@exp1& (0+255),f,b
 12099                           
 12100                           ; BSR set to: 0
 12101  014F50  0100               	movlb	0	; () banked
 12102  014F52  AFB2               	btfss	___fltol@exp1& (0+255),7,b
 12103  014F54  D01B               	goto	l7842
 12104                           
 12105                           ; BSR set to: 0
 12106  014F56  0100               	movlb	0	; () banked
 12107  014F58  51B2               	movf	___fltol@exp1& (0+255),w,b
 12108  014F5A  0A80               	xorlw	128
 12109  014F5C  0F97               	addlw	151
 12110  014F5E  B0D8               	btfsc	status,0,c
 12111  014F60  D00B               	goto	l7838
 12112                           
 12113                           ; BSR set to: 0
 12114  014F62  0E00               	movlw	0
 12115  014F64  0100               	movlb	0	; () banked
 12116  014F66  6FA9               	movwf	?___fltol& (0+255),b
 12117  014F68  0E00               	movlw	0
 12118  014F6A  6FAA               	movwf	(?___fltol+1)& (0+255),b
 12119  014F6C  0E00               	movlw	0
 12120  014F6E  6FAB               	movwf	(?___fltol+2)& (0+255),b
 12121  014F70  0E00               	movlw	0
 12122  014F72  6FAC               	movwf	(?___fltol+3)& (0+255),b
 12123                           
 12124                           ; BSR set to: 0
 12125  014F74  0012               	return	
 12126                           
 12127                           ; BSR set to: 0
 12128  014F76  D000               	goto	l7838
 12129  014F78                     l7838:
 12130                           
 12131                           ; BSR set to: 0
 12132  014F78  0100               	movlb	0	; () banked
 12133  014F7A  90D8               	bcf	status,0,c
 12134  014F7C  33AC               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12135  014F7E  33AB               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12136  014F80  33AA               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12137  014F82  33A9               	rrcf	___fltol@f1& (0+255),f,b
 12138                           
 12139                           ; BSR set to: 0
 12140  014F84  0100               	movlb	0	; () banked
 12141  014F86  3FB2               	incfsz	___fltol@exp1& (0+255),f,b
 12142  014F88  D7F7               	goto	l7838
 12143                           
 12144                           ; BSR set to: 0
 12145  014F8A  D01F               	goto	l7852
 12146  014F8C                     l7842:
 12147                           
 12148                           ; BSR set to: 0
 12149  014F8C  0E1F               	movlw	31
 12150  014F8E  0100               	movlb	0	; () banked
 12151  014F90  65B2               	cpfsgt	___fltol@exp1& (0+255),b
 12152  014F92  D014               	goto	l7850
 12153                           
 12154                           ; BSR set to: 0
 12155  014F94  0E00               	movlw	0
 12156  014F96  0100               	movlb	0	; () banked
 12157  014F98  6FA9               	movwf	?___fltol& (0+255),b
 12158  014F9A  0E00               	movlw	0
 12159  014F9C  6FAA               	movwf	(?___fltol+1)& (0+255),b
 12160  014F9E  0E00               	movlw	0
 12161  014FA0  6FAB               	movwf	(?___fltol+2)& (0+255),b
 12162  014FA2  0E00               	movlw	0
 12163  014FA4  6FAC               	movwf	(?___fltol+3)& (0+255),b
 12164                           
 12165                           ; BSR set to: 0
 12166  014FA6  0012               	return	
 12167                           
 12168                           ; BSR set to: 0
 12169  014FA8  D009               	goto	l7850
 12170  014FAA                     l7848:
 12171                           
 12172                           ; BSR set to: 0
 12173  014FAA  0100               	movlb	0	; () banked
 12174  014FAC  90D8               	bcf	status,0,c
 12175  014FAE  37A9               	rlcf	___fltol@f1& (0+255),f,b
 12176  014FB0  37AA               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12177  014FB2  37AB               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12178  014FB4  37AC               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12179  014FB6  0100               	movlb	0	; () banked
 12180  014FB8  07B2               	decf	___fltol@exp1& (0+255),f,b
 12181  014FBA  D000               	goto	l7850
 12182  014FBC                     l7850:
 12183                           
 12184                           ; BSR set to: 0
 12185  014FBC  0100               	movlb	0	; () banked
 12186  014FBE  51B2               	movf	___fltol@exp1& (0+255),w,b
 12187  014FC0  0100               	movlb	0	; () banked
 12188  014FC2  B4D8               	btfsc	status,2,c
 12189  014FC4  D002               	goto	l7852
 12190  014FC6  D7F1               	goto	l7848
 12191                           
 12192                           ; BSR set to: 0
 12193  014FC8  D000               	goto	l7852
 12194  014FCA                     l7852:
 12195                           
 12196                           ; BSR set to: 0
 12197  014FCA  0100               	movlb	0	; () banked
 12198  014FCC  51B1               	movf	___fltol@sign1& (0+255),w,b
 12199  014FCE  0100               	movlb	0	; () banked
 12200  014FD0  B4D8               	btfsc	status,2,c
 12201  014FD2  D00A               	goto	l7856
 12202                           
 12203                           ; BSR set to: 0
 12204  014FD4  0100               	movlb	0	; () banked
 12205  014FD6  1FAC               	comf	(___fltol@f1+3)& (0+255),f,b
 12206  014FD8  1FAB               	comf	(___fltol@f1+2)& (0+255),f,b
 12207  014FDA  1FAA               	comf	(___fltol@f1+1)& (0+255),f,b
 12208  014FDC  6DA9               	negf	___fltol@f1& (0+255),b
 12209  014FDE  0E00               	movlw	0
 12210  014FE0  23AA               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12211  014FE2  23AB               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12212  014FE4  23AC               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12213  014FE6  D000               	goto	l7856
 12214  014FE8                     l7856:
 12215                           
 12216                           ; BSR set to: 0
 12217  014FE8  C0A9  F0A9         	movff	___fltol@f1,?___fltol
 12218  014FEC  C0AA  F0AA         	movff	___fltol@f1+1,?___fltol+1
 12219  014FF0  C0AB  F0AB         	movff	___fltol@f1+2,?___fltol+2
 12220  014FF4  C0AC  F0AC         	movff	___fltol@f1+3,?___fltol+3
 12221  014FF8  0012               	return	
 12222                           
 12223                           ; BSR set to: 0
 12224                           
 12225                           ; BSR set to: 0
 12226  014FFA  0012               	return		;funcret
 12227  014FFC                     __end_of___fltol:
 12228                           	opt stack 0
 12229                           tblptru	equ	0xFF8
 12230                           tblptrh	equ	0xFF7
 12231                           tblptrl	equ	0xFF6
 12232                           tablat	equ	0xFF5
 12233                           prodh	equ	0xFF4
 12234                           prodl	equ	0xFF3
 12235                           intcon	equ	0xFF2
 12236                           postinc0	equ	0xFEE
 12237                           wreg	equ	0xFE8
 12238                           indf2	equ	0xFDF
 12239                           postinc2	equ	0xFDE
 12240                           fsr2h	equ	0xFDA
 12241                           fsr2l	equ	0xFD9
 12242                           status	equ	0xFD8
 12243                           
 12244 ;; *************** function ___flsub *****************
 12245 ;; Defined at:
 12246 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flsub.c"
 12247 ;; Parameters:    Size  Location     Type
 12248 ;;  f1              4   73[BANK0 ] long 
 12249 ;;  f2              4   77[BANK0 ] long 
 12250 ;; Auto vars:     Size  Location     Type
 12251 ;;		None
 12252 ;; Return value:  Size  Location     Type
 12253 ;;                  4   73[BANK0 ] long 
 12254 ;; Registers used:
 12255 ;;		wreg, status,2, status,0, cstack
 12256 ;; Tracked objects:
 12257 ;;		On entry : 0/0
 12258 ;;		On exit  : 0/0
 12259 ;;		Unchanged: 0/0
 12260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12261 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12264 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12265 ;;Total ram usage:        8 bytes
 12266 ;; Hardware stack levels used:    1
 12267 ;; Hardware stack levels required when called:    5
 12268 ;; This function calls:
 12269 ;;		___fladd
 12270 ;; This function is called by:
 12271 ;;		_sprintf
 12272 ;; This function uses a non-reentrant model
 12273 ;;
 12274                           
 12275                           	psect	text25
 12276  015A70                     __ptext25:
 12277                           	opt stack 0
 12278  015A70                     ___flsub:
 12279                           	opt stack 23
 12280                           
 12281                           ; BSR set to: 0
 12282                           ;incstack = 0
 12283  015A70  0100               	movlb	0	; () banked
 12284  015A72  51AD               	movf	___flsub@f2& (0+255),w,b
 12285  015A74  0100               	movlb	0	; () banked
 12286  015A76  11AE               	iorwf	(___flsub@f2+1)& (0+255),w,b
 12287  015A78  0100               	movlb	0	; () banked
 12288  015A7A  11AF               	iorwf	(___flsub@f2+2)& (0+255),w,b
 12289  015A7C  0100               	movlb	0	; () banked
 12290  015A7E  11B0               	iorwf	(___flsub@f2+3)& (0+255),w,b
 12291  015A80  B4D8               	btfsc	status,2,c
 12292  015A82  D00A               	goto	l7790
 12293                           
 12294                           ; BSR set to: 0
 12295  015A84  0E00               	movlw	0
 12296  015A86  0100               	movlb	0	; () banked
 12297  015A88  1BAD               	xorwf	___flsub@f2& (0+255),f,b
 12298  015A8A  0E00               	movlw	0
 12299  015A8C  1BAE               	xorwf	(___flsub@f2+1)& (0+255),f,b
 12300  015A8E  0E00               	movlw	0
 12301  015A90  1BAF               	xorwf	(___flsub@f2+2)& (0+255),f,b
 12302  015A92  0E80               	movlw	128
 12303  015A94  1BB0               	xorwf	(___flsub@f2+3)& (0+255),f,b
 12304  015A96  D000               	goto	l7790
 12305  015A98                     l7790:
 12306                           
 12307                           ; BSR set to: 0
 12308  015A98  C0A9  F09D         	movff	___flsub@f1,___fladd@f1
 12309  015A9C  C0AA  F09E         	movff	___flsub@f1+1,___fladd@f1+1
 12310  015AA0  C0AB  F09F         	movff	___flsub@f1+2,___fladd@f1+2
 12311  015AA4  C0AC  F0A0         	movff	___flsub@f1+3,___fladd@f1+3
 12312  015AA8  C0AD  F0A1         	movff	___flsub@f2,___fladd@f2
 12313  015AAC  C0AE  F0A2         	movff	___flsub@f2+1,___fladd@f2+1
 12314  015AB0  C0AF  F0A3         	movff	___flsub@f2+2,___fladd@f2+2
 12315  015AB4  C0B0  F0A4         	movff	___flsub@f2+3,___fladd@f2+3
 12316  015AB8  ECE2  F09E         	call	___fladd	;wreg free
 12317  015ABC  C09D  F0A9         	movff	?___fladd,?___flsub
 12318  015AC0  C09E  F0AA         	movff	?___fladd+1,?___flsub+1
 12319  015AC4  C09F  F0AB         	movff	?___fladd+2,?___flsub+2
 12320  015AC8  C0A0  F0AC         	movff	?___fladd+3,?___flsub+3
 12321  015ACC  0012               	return	
 12322  015ACE  0012               	return		;funcret
 12323  015AD0                     __end_of___flsub:
 12324                           	opt stack 0
 12325                           tblptru	equ	0xFF8
 12326                           tblptrh	equ	0xFF7
 12327                           tblptrl	equ	0xFF6
 12328                           tablat	equ	0xFF5
 12329                           prodh	equ	0xFF4
 12330                           prodl	equ	0xFF3
 12331                           intcon	equ	0xFF2
 12332                           postinc0	equ	0xFEE
 12333                           wreg	equ	0xFE8
 12334                           indf2	equ	0xFDF
 12335                           postinc2	equ	0xFDE
 12336                           fsr2h	equ	0xFDA
 12337                           fsr2l	equ	0xFD9
 12338                           status	equ	0xFD8
 12339                           
 12340 ;; *************** function ___fladd *****************
 12341 ;; Defined at:
 12342 ;;		line 88 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fladd.c"
 12343 ;; Parameters:    Size  Location     Type
 12344 ;;  f1              4   61[BANK0 ] long 
 12345 ;;  f2              4   65[BANK0 ] long 
 12346 ;; Auto vars:     Size  Location     Type
 12347 ;;  exp1            1   72[BANK0 ] unsigned char 
 12348 ;;  exp2            1   71[BANK0 ] unsigned char 
 12349 ;;  sign            1   70[BANK0 ] unsigned char 
 12350 ;; Return value:  Size  Location     Type
 12351 ;;                  4   61[BANK0 ] unsigned char 
 12352 ;; Registers used:
 12353 ;;		wreg, status,2, status,0, cstack
 12354 ;; Tracked objects:
 12355 ;;		On entry : 0/0
 12356 ;;		On exit  : 0/0
 12357 ;;		Unchanged: 0/0
 12358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12359 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12360 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12361 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12362 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12363 ;;Total ram usage:       12 bytes
 12364 ;; Hardware stack levels used:    1
 12365 ;; Hardware stack levels required when called:    4
 12366 ;; This function calls:
 12367 ;;		___flpack
 12368 ;; This function is called by:
 12369 ;;		_main
 12370 ;;		_sprintf
 12371 ;;		___flsub
 12372 ;; This function uses a non-reentrant model
 12373 ;;
 12374                           
 12375                           	psect	text26
 12376  013DC4                     __ptext26:
 12377                           	opt stack 0
 12378  013DC4                     ___fladd:
 12379                           	opt stack 26
 12380                           
 12381                           ;incstack = 0
 12382  013DC4  0100               	movlb	0	; () banked
 12383  013DC6  359F               	rlcf	(___fladd@f1+2)& (0+255),w,b
 12384  013DC8  35A0               	rlcf	(___fladd@f1+3)& (0+255),w,b
 12385  013DCA  0100               	movlb	0	; () banked
 12386  013DCC  6FA8               	movwf	___fladd@exp1& (0+255),b
 12387  013DCE  0100               	movlb	0	; () banked
 12388  013DD0  35A3               	rlcf	(___fladd@f2+2)& (0+255),w,b
 12389  013DD2  35A4               	rlcf	(___fladd@f2+3)& (0+255),w,b
 12390  013DD4  0100               	movlb	0	; () banked
 12391  013DD6  6FA7               	movwf	___fladd@exp2& (0+255),b
 12392  013DD8  0100               	movlb	0	; () banked
 12393  013DDA  51A8               	movf	___fladd@exp1& (0+255),w,b
 12394  013DDC  0100               	movlb	0	; () banked
 12395  013DDE  B4D8               	btfsc	status,2,c
 12396  013DE0  D011               	goto	l1298
 12397                           
 12398                           ; BSR set to: 0
 12399  013DE2  0100               	movlb	0	; () banked
 12400  013DE4  51A7               	movf	___fladd@exp2& (0+255),w,b
 12401  013DE6  0100               	movlb	0	; () banked
 12402  013DE8  5DA8               	subwf	___fladd@exp1& (0+255),w,b
 12403  013DEA  B0D8               	btfsc	status,0,c
 12404  013DEC  D014               	goto	l7374
 12405                           
 12406                           ; BSR set to: 0
 12407  013DEE  0100               	movlb	0	; () banked
 12408  013DF0  51A8               	movf	___fladd@exp1& (0+255),w,b
 12409  013DF2  0800               	sublw	0
 12410  013DF4  0100               	movlb	0	; () banked
 12411  013DF6  25A7               	addwf	___fladd@exp2& (0+255),w,b
 12412  013DF8  0100               	movlb	0	; () banked
 12413  013DFA  6FA5               	movwf	??___fladd& (0+255),b
 12414  013DFC  0E20               	movlw	32
 12415  013DFE  0100               	movlb	0	; () banked
 12416  013E00  65A5               	cpfsgt	??___fladd& (0+255),b
 12417  013E02  D009               	goto	l7374
 12418  013E04                     l1298:
 12419                           
 12420                           ; BSR set to: 0
 12421  013E04  C0A1  F09D         	movff	___fladd@f2,?___fladd
 12422  013E08  C0A2  F09E         	movff	___fladd@f2+1,?___fladd+1
 12423  013E0C  C0A3  F09F         	movff	___fladd@f2+2,?___fladd+2
 12424  013E10  C0A4  F0A0         	movff	___fladd@f2+3,?___fladd+3
 12425  013E14  0012               	return	
 12426  013E16                     l7374:
 12427                           
 12428                           ; BSR set to: 0
 12429  013E16  0100               	movlb	0	; () banked
 12430  013E18  51A7               	movf	___fladd@exp2& (0+255),w,b
 12431  013E1A  0100               	movlb	0	; () banked
 12432  013E1C  B4D8               	btfsc	status,2,c
 12433  013E1E  D011               	goto	l1302
 12434                           
 12435                           ; BSR set to: 0
 12436  013E20  0100               	movlb	0	; () banked
 12437  013E22  51A8               	movf	___fladd@exp1& (0+255),w,b
 12438  013E24  0100               	movlb	0	; () banked
 12439  013E26  5DA7               	subwf	___fladd@exp2& (0+255),w,b
 12440  013E28  B0D8               	btfsc	status,0,c
 12441  013E2A  D014               	goto	l7380
 12442                           
 12443                           ; BSR set to: 0
 12444  013E2C  0100               	movlb	0	; () banked
 12445  013E2E  51A7               	movf	___fladd@exp2& (0+255),w,b
 12446  013E30  0800               	sublw	0
 12447  013E32  0100               	movlb	0	; () banked
 12448  013E34  25A8               	addwf	___fladd@exp1& (0+255),w,b
 12449  013E36  0100               	movlb	0	; () banked
 12450  013E38  6FA5               	movwf	??___fladd& (0+255),b
 12451  013E3A  0E20               	movlw	32
 12452  013E3C  0100               	movlb	0	; () banked
 12453  013E3E  65A5               	cpfsgt	??___fladd& (0+255),b
 12454  013E40  D009               	goto	l7380
 12455  013E42                     l1302:
 12456                           
 12457                           ; BSR set to: 0
 12458  013E42  C09D  F09D         	movff	___fladd@f1,?___fladd
 12459  013E46  C09E  F09E         	movff	___fladd@f1+1,?___fladd+1
 12460  013E4A  C09F  F09F         	movff	___fladd@f1+2,?___fladd+2
 12461  013E4E  C0A0  F0A0         	movff	___fladd@f1+3,?___fladd+3
 12462  013E52  0012               	return	
 12463  013E54                     l7380:
 12464                           
 12465                           ; BSR set to: 0
 12466  013E54  0E06               	movlw	6
 12467  013E56  0100               	movlb	0	; () banked
 12468  013E58  6FA6               	movwf	___fladd@sign& (0+255),b
 12469                           
 12470                           ; BSR set to: 0
 12471  013E5A  0100               	movlb	0	; () banked
 12472  013E5C  AFA0               	btfss	(___fladd@f1+3)& (0+255),7,b
 12473  013E5E  D003               	goto	l7386
 12474                           
 12475                           ; BSR set to: 0
 12476  013E60  0100               	movlb	0	; () banked
 12477  013E62  8FA6               	bsf	___fladd@sign& (0+255),7,b
 12478  013E64  D000               	goto	l7386
 12479  013E66                     l7386:
 12480                           
 12481                           ; BSR set to: 0
 12482  013E66  0100               	movlb	0	; () banked
 12483  013E68  AFA4               	btfss	(___fladd@f2+3)& (0+255),7,b
 12484  013E6A  D002               	goto	l1304
 12485                           
 12486                           ; BSR set to: 0
 12487  013E6C  0100               	movlb	0	; () banked
 12488  013E6E  8DA6               	bsf	___fladd@sign& (0+255),6,b
 12489  013E70                     l1304:
 12490                           
 12491                           ; BSR set to: 0
 12492  013E70  0100               	movlb	0	; () banked
 12493  013E72  8F9F               	bsf	(___fladd@f1+2)& (0+255),7,b
 12494                           
 12495                           ; BSR set to: 0
 12496  013E74  0EFF               	movlw	255
 12497  013E76  0100               	movlb	0	; () banked
 12498  013E78  179D               	andwf	___fladd@f1& (0+255),f,b
 12499  013E7A  0EFF               	movlw	255
 12500  013E7C  179E               	andwf	(___fladd@f1+1)& (0+255),f,b
 12501  013E7E  0EFF               	movlw	255
 12502  013E80  179F               	andwf	(___fladd@f1+2)& (0+255),f,b
 12503  013E82  0E00               	movlw	0
 12504  013E84  17A0               	andwf	(___fladd@f1+3)& (0+255),f,b
 12505                           
 12506                           ; BSR set to: 0
 12507  013E86  0100               	movlb	0	; () banked
 12508  013E88  8FA3               	bsf	(___fladd@f2+2)& (0+255),7,b
 12509  013E8A  0EFF               	movlw	255
 12510  013E8C  0100               	movlb	0	; () banked
 12511  013E8E  17A1               	andwf	___fladd@f2& (0+255),f,b
 12512  013E90  0EFF               	movlw	255
 12513  013E92  17A2               	andwf	(___fladd@f2+1)& (0+255),f,b
 12514  013E94  0EFF               	movlw	255
 12515  013E96  17A3               	andwf	(___fladd@f2+2)& (0+255),f,b
 12516  013E98  0E00               	movlw	0
 12517  013E9A  17A4               	andwf	(___fladd@f2+3)& (0+255),f,b
 12518  013E9C  0100               	movlb	0	; () banked
 12519  013E9E  51A7               	movf	___fladd@exp2& (0+255),w,b
 12520  013EA0  0100               	movlb	0	; () banked
 12521  013EA2  5DA8               	subwf	___fladd@exp1& (0+255),w,b
 12522  013EA4  B0D8               	btfsc	status,0,c
 12523  013EA6  D02A               	goto	l7404
 12524  013EA8                     l7394:
 12525                           
 12526                           ; BSR set to: 0
 12527  013EA8  0100               	movlb	0	; () banked
 12528  013EAA  90D8               	bcf	status,0,c
 12529  013EAC  37A1               	rlcf	___fladd@f2& (0+255),f,b
 12530  013EAE  37A2               	rlcf	(___fladd@f2+1)& (0+255),f,b
 12531  013EB0  37A3               	rlcf	(___fladd@f2+2)& (0+255),f,b
 12532  013EB2  37A4               	rlcf	(___fladd@f2+3)& (0+255),f,b
 12533  013EB4  0100               	movlb	0	; () banked
 12534  013EB6  07A7               	decf	___fladd@exp2& (0+255),f,b
 12535                           
 12536                           ; BSR set to: 0
 12537  013EB8  0100               	movlb	0	; () banked
 12538  013EBA  51A8               	movf	___fladd@exp1& (0+255),w,b
 12539  013EBC  0100               	movlb	0	; () banked
 12540  013EBE  19A7               	xorwf	___fladd@exp2& (0+255),w,b
 12541  013EC0  B4D8               	btfsc	status,2,c
 12542  013EC2  D014               	goto	l7402
 12543                           
 12544                           ; BSR set to: 0
 12545  013EC4  0100               	movlb	0	; () banked
 12546  013EC6  07A6               	decf	___fladd@sign& (0+255),f,b
 12547  013EC8  C0A6  F0A5         	movff	___fladd@sign,??___fladd
 12548  013ECC  0E07               	movlw	7
 12549  013ECE  0100               	movlb	0	; () banked
 12550  013ED0  17A5               	andwf	??___fladd& (0+255),f,b
 12551  013ED2  B4D8               	btfsc	status,2,c
 12552  013ED4  D00B               	goto	l7402
 12553  013ED6  D7E8               	goto	l7394
 12554                           
 12555                           ; BSR set to: 0
 12556                           
 12557                           ; BSR set to: 0
 12558  013ED8  D009               	goto	l7402
 12559  013EDA                     l7400:
 12560                           
 12561                           ; BSR set to: 0
 12562  013EDA  0100               	movlb	0	; () banked
 12563  013EDC  90D8               	bcf	status,0,c
 12564  013EDE  33A0               	rrcf	(___fladd@f1+3)& (0+255),f,b
 12565  013EE0  339F               	rrcf	(___fladd@f1+2)& (0+255),f,b
 12566  013EE2  339E               	rrcf	(___fladd@f1+1)& (0+255),f,b
 12567  013EE4  339D               	rrcf	___fladd@f1& (0+255),f,b
 12568  013EE6  0100               	movlb	0	; () banked
 12569  013EE8  2BA8               	incf	___fladd@exp1& (0+255),f,b
 12570  013EEA  D000               	goto	l7402
 12571  013EEC                     l7402:
 12572                           
 12573                           ; BSR set to: 0
 12574  013EEC  0100               	movlb	0	; () banked
 12575  013EEE  51A7               	movf	___fladd@exp2& (0+255),w,b
 12576  013EF0  0100               	movlb	0	; () banked
 12577  013EF2  19A8               	xorwf	___fladd@exp1& (0+255),w,b
 12578  013EF4  B4D8               	btfsc	status,2,c
 12579  013EF6  D032               	goto	l1313
 12580  013EF8  D7F0               	goto	l7400
 12581                           
 12582                           ; BSR set to: 0
 12583  013EFA  D030               	goto	l1313
 12584  013EFC                     l7404:
 12585                           
 12586                           ; BSR set to: 0
 12587  013EFC  0100               	movlb	0	; () banked
 12588  013EFE  51A8               	movf	___fladd@exp1& (0+255),w,b
 12589  013F00  0100               	movlb	0	; () banked
 12590  013F02  5DA7               	subwf	___fladd@exp2& (0+255),w,b
 12591  013F04  B0D8               	btfsc	status,0,c
 12592  013F06  D02A               	goto	l1313
 12593  013F08                     l7406:
 12594                           
 12595                           ; BSR set to: 0
 12596  013F08  0100               	movlb	0	; () banked
 12597  013F0A  90D8               	bcf	status,0,c
 12598  013F0C  379D               	rlcf	___fladd@f1& (0+255),f,b
 12599  013F0E  379E               	rlcf	(___fladd@f1+1)& (0+255),f,b
 12600  013F10  379F               	rlcf	(___fladd@f1+2)& (0+255),f,b
 12601  013F12  37A0               	rlcf	(___fladd@f1+3)& (0+255),f,b
 12602  013F14  0100               	movlb	0	; () banked
 12603  013F16  07A8               	decf	___fladd@exp1& (0+255),f,b
 12604                           
 12605                           ; BSR set to: 0
 12606  013F18  0100               	movlb	0	; () banked
 12607  013F1A  51A8               	movf	___fladd@exp1& (0+255),w,b
 12608  013F1C  0100               	movlb	0	; () banked
 12609  013F1E  19A7               	xorwf	___fladd@exp2& (0+255),w,b
 12610  013F20  B4D8               	btfsc	status,2,c
 12611  013F22  D014               	goto	l7414
 12612                           
 12613                           ; BSR set to: 0
 12614  013F24  0100               	movlb	0	; () banked
 12615  013F26  07A6               	decf	___fladd@sign& (0+255),f,b
 12616  013F28  C0A6  F0A5         	movff	___fladd@sign,??___fladd
 12617  013F2C  0E07               	movlw	7
 12618  013F2E  0100               	movlb	0	; () banked
 12619  013F30  17A5               	andwf	??___fladd& (0+255),f,b
 12620  013F32  B4D8               	btfsc	status,2,c
 12621  013F34  D00B               	goto	l7414
 12622  013F36  D7E8               	goto	l7406
 12623                           
 12624                           ; BSR set to: 0
 12625                           
 12626                           ; BSR set to: 0
 12627  013F38  D009               	goto	l7414
 12628  013F3A                     l7412:
 12629                           
 12630                           ; BSR set to: 0
 12631  013F3A  0100               	movlb	0	; () banked
 12632  013F3C  90D8               	bcf	status,0,c
 12633  013F3E  33A4               	rrcf	(___fladd@f2+3)& (0+255),f,b
 12634  013F40  33A3               	rrcf	(___fladd@f2+2)& (0+255),f,b
 12635  013F42  33A2               	rrcf	(___fladd@f2+1)& (0+255),f,b
 12636  013F44  33A1               	rrcf	___fladd@f2& (0+255),f,b
 12637  013F46  0100               	movlb	0	; () banked
 12638  013F48  2BA7               	incf	___fladd@exp2& (0+255),f,b
 12639  013F4A  D000               	goto	l7414
 12640  013F4C                     l7414:
 12641                           
 12642                           ; BSR set to: 0
 12643  013F4C  0100               	movlb	0	; () banked
 12644  013F4E  51A7               	movf	___fladd@exp2& (0+255),w,b
 12645  013F50  0100               	movlb	0	; () banked
 12646  013F52  19A8               	xorwf	___fladd@exp1& (0+255),w,b
 12647  013F54  B4D8               	btfsc	status,2,c
 12648  013F56  D002               	goto	l1313
 12649  013F58  D7F0               	goto	l7412
 12650                           
 12651                           ; BSR set to: 0
 12652  013F5A  D000               	goto	l1313
 12653  013F5C                     l1313:
 12654                           
 12655                           ; BSR set to: 0
 12656  013F5C  0100               	movlb	0	; () banked
 12657  013F5E  AFA6               	btfss	___fladd@sign& (0+255),7,b
 12658  013F60  D011               	goto	l7418
 12659                           
 12660                           ; BSR set to: 0
 12661  013F62  0EFF               	movlw	255
 12662  013F64  0100               	movlb	0	; () banked
 12663  013F66  1B9D               	xorwf	___fladd@f1& (0+255),f,b
 12664  013F68  0EFF               	movlw	255
 12665  013F6A  1B9E               	xorwf	(___fladd@f1+1)& (0+255),f,b
 12666  013F6C  0EFF               	movlw	255
 12667  013F6E  1B9F               	xorwf	(___fladd@f1+2)& (0+255),f,b
 12668  013F70  0EFF               	movlw	255
 12669  013F72  1BA0               	xorwf	(___fladd@f1+3)& (0+255),f,b
 12670  013F74  0E01               	movlw	1
 12671  013F76  0100               	movlb	0	; () banked
 12672  013F78  279D               	addwf	___fladd@f1& (0+255),f,b
 12673  013F7A  0E00               	movlw	0
 12674  013F7C  239E               	addwfc	(___fladd@f1+1)& (0+255),f,b
 12675  013F7E  239F               	addwfc	(___fladd@f1+2)& (0+255),f,b
 12676  013F80  23A0               	addwfc	(___fladd@f1+3)& (0+255),f,b
 12677  013F82  D000               	goto	l7418
 12678  013F84                     l7418:
 12679                           
 12680                           ; BSR set to: 0
 12681  013F84  0100               	movlb	0	; () banked
 12682  013F86  ADA6               	btfss	___fladd@sign& (0+255),6,b
 12683  013F88  D011               	goto	l7422
 12684                           
 12685                           ; BSR set to: 0
 12686  013F8A  0EFF               	movlw	255
 12687  013F8C  0100               	movlb	0	; () banked
 12688  013F8E  1BA1               	xorwf	___fladd@f2& (0+255),f,b
 12689  013F90  0EFF               	movlw	255
 12690  013F92  1BA2               	xorwf	(___fladd@f2+1)& (0+255),f,b
 12691  013F94  0EFF               	movlw	255
 12692  013F96  1BA3               	xorwf	(___fladd@f2+2)& (0+255),f,b
 12693  013F98  0EFF               	movlw	255
 12694  013F9A  1BA4               	xorwf	(___fladd@f2+3)& (0+255),f,b
 12695  013F9C  0E01               	movlw	1
 12696  013F9E  0100               	movlb	0	; () banked
 12697  013FA0  27A1               	addwf	___fladd@f2& (0+255),f,b
 12698  013FA2  0E00               	movlw	0
 12699  013FA4  23A2               	addwfc	(___fladd@f2+1)& (0+255),f,b
 12700  013FA6  23A3               	addwfc	(___fladd@f2+2)& (0+255),f,b
 12701  013FA8  23A4               	addwfc	(___fladd@f2+3)& (0+255),f,b
 12702  013FAA  D000               	goto	l7422
 12703  013FAC                     l7422:
 12704                           
 12705                           ; BSR set to: 0
 12706  013FAC  0E00               	movlw	0
 12707  013FAE  0100               	movlb	0	; () banked
 12708  013FB0  6FA6               	movwf	___fladd@sign& (0+255),b
 12709                           
 12710                           ; BSR set to: 0
 12711  013FB2  0100               	movlb	0	; () banked
 12712  013FB4  519D               	movf	___fladd@f1& (0+255),w,b
 12713  013FB6  0100               	movlb	0	; () banked
 12714  013FB8  27A1               	addwf	___fladd@f2& (0+255),f,b
 12715  013FBA  0100               	movlb	0	; () banked
 12716  013FBC  519E               	movf	(___fladd@f1+1)& (0+255),w,b
 12717  013FBE  0100               	movlb	0	; () banked
 12718  013FC0  23A2               	addwfc	(___fladd@f2+1)& (0+255),f,b
 12719  013FC2  0100               	movlb	0	; () banked
 12720  013FC4  519F               	movf	(___fladd@f1+2)& (0+255),w,b
 12721  013FC6  0100               	movlb	0	; () banked
 12722  013FC8  23A3               	addwfc	(___fladd@f2+2)& (0+255),f,b
 12723  013FCA  0100               	movlb	0	; () banked
 12724  013FCC  51A0               	movf	(___fladd@f1+3)& (0+255),w,b
 12725  013FCE  0100               	movlb	0	; () banked
 12726  013FD0  23A4               	addwfc	(___fladd@f2+3)& (0+255),f,b
 12727                           
 12728                           ; BSR set to: 0
 12729  013FD2  0100               	movlb	0	; () banked
 12730  013FD4  AFA4               	btfss	(___fladd@f2+3)& (0+255),7,b
 12731  013FD6  D014               	goto	l7432
 12732                           
 12733                           ; BSR set to: 0
 12734  013FD8  0EFF               	movlw	255
 12735  013FDA  0100               	movlb	0	; () banked
 12736  013FDC  1BA1               	xorwf	___fladd@f2& (0+255),f,b
 12737  013FDE  0EFF               	movlw	255
 12738  013FE0  1BA2               	xorwf	(___fladd@f2+1)& (0+255),f,b
 12739  013FE2  0EFF               	movlw	255
 12740  013FE4  1BA3               	xorwf	(___fladd@f2+2)& (0+255),f,b
 12741  013FE6  0EFF               	movlw	255
 12742  013FE8  1BA4               	xorwf	(___fladd@f2+3)& (0+255),f,b
 12743  013FEA  0E01               	movlw	1
 12744  013FEC  0100               	movlb	0	; () banked
 12745  013FEE  27A1               	addwf	___fladd@f2& (0+255),f,b
 12746  013FF0  0E00               	movlw	0
 12747  013FF2  23A2               	addwfc	(___fladd@f2+1)& (0+255),f,b
 12748  013FF4  23A3               	addwfc	(___fladd@f2+2)& (0+255),f,b
 12749  013FF6  23A4               	addwfc	(___fladd@f2+3)& (0+255),f,b
 12750                           
 12751                           ; BSR set to: 0
 12752  013FF8  0E01               	movlw	1
 12753  013FFA  0100               	movlb	0	; () banked
 12754  013FFC  6FA6               	movwf	___fladd@sign& (0+255),b
 12755  013FFE  D000               	goto	l7432
 12756  014000                     l7432:
 12757                           
 12758                           ; BSR set to: 0
 12759  014000  C0A1  F072         	movff	___fladd@f2,___flpack@arg
 12760  014004  C0A2  F073         	movff	___fladd@f2+1,___flpack@arg+1
 12761  014008  C0A3  F074         	movff	___fladd@f2+2,___flpack@arg+2
 12762  01400C  C0A4  F075         	movff	___fladd@f2+3,___flpack@arg+3
 12763  014010  C0A8  F076         	movff	___fladd@exp1,___flpack@exp
 12764  014014  C0A6  F077         	movff	___fladd@sign,___flpack@sign
 12765  014018  ECAD  F0A4         	call	___flpack	;wreg free
 12766  01401C  C072  F09D         	movff	?___flpack,?___fladd
 12767  014020  C073  F09E         	movff	?___flpack+1,?___fladd+1
 12768  014024  C074  F09F         	movff	?___flpack+2,?___fladd+2
 12769  014028  C075  F0A0         	movff	?___flpack+3,?___fladd+3
 12770  01402C  0012               	return	
 12771  01402E  0012               	return		;funcret
 12772  014030                     __end_of___fladd:
 12773                           	opt stack 0
 12774                           tblptru	equ	0xFF8
 12775                           tblptrh	equ	0xFF7
 12776                           tblptrl	equ	0xFF6
 12777                           tablat	equ	0xFF5
 12778                           prodh	equ	0xFF4
 12779                           prodl	equ	0xFF3
 12780                           intcon	equ	0xFF2
 12781                           postinc0	equ	0xFEE
 12782                           wreg	equ	0xFE8
 12783                           indf2	equ	0xFDF
 12784                           postinc2	equ	0xFDE
 12785                           fsr2h	equ	0xFDA
 12786                           fsr2l	equ	0xFD9
 12787                           status	equ	0xFD8
 12788                           
 12789 ;; *************** function ___flneg *****************
 12790 ;; Defined at:
 12791 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flneg.c"
 12792 ;; Parameters:    Size  Location     Type
 12793 ;;  f1              4   48[BANK0 ] unsigned char 
 12794 ;; Auto vars:     Size  Location     Type
 12795 ;;		None
 12796 ;; Return value:  Size  Location     Type
 12797 ;;                  4   48[BANK0 ] unsigned char 
 12798 ;; Registers used:
 12799 ;;		wreg, status,2, status,0
 12800 ;; Tracked objects:
 12801 ;;		On entry : 0/0
 12802 ;;		On exit  : 0/0
 12803 ;;		Unchanged: 0/0
 12804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12805 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12808 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12809 ;;Total ram usage:        4 bytes
 12810 ;; Hardware stack levels used:    1
 12811 ;; Hardware stack levels required when called:    3
 12812 ;; This function calls:
 12813 ;;		Nothing
 12814 ;; This function is called by:
 12815 ;;		_main
 12816 ;;		_sprintf
 12817 ;; This function uses a non-reentrant model
 12818 ;;
 12819                           
 12820                           	psect	text27
 12821  015C3A                     __ptext27:
 12822                           	opt stack 0
 12823  015C3A                     ___flneg:
 12824                           	opt stack 27
 12825                           
 12826                           ;incstack = 0
 12827  015C3A  0100               	movlb	0	; () banked
 12828  015C3C  5190               	movf	___flneg@f1& (0+255),w,b
 12829  015C3E  0100               	movlb	0	; () banked
 12830  015C40  1191               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12831  015C42  0100               	movlb	0	; () banked
 12832  015C44  1192               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12833  015C46  0100               	movlb	0	; () banked
 12834  015C48  1193               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12835  015C4A  B4D8               	btfsc	status,2,c
 12836  015C4C  D00A               	goto	l7812
 12837                           
 12838                           ; BSR set to: 0
 12839  015C4E  0E00               	movlw	0
 12840  015C50  0100               	movlb	0	; () banked
 12841  015C52  1B90               	xorwf	___flneg@f1& (0+255),f,b
 12842  015C54  0E00               	movlw	0
 12843  015C56  1B91               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12844  015C58  0E00               	movlw	0
 12845  015C5A  1B92               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12846  015C5C  0E80               	movlw	128
 12847  015C5E  1B93               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12848  015C60  D000               	goto	l7812
 12849  015C62                     l7812:
 12850                           
 12851                           ; BSR set to: 0
 12852  015C62  C090  F090         	movff	___flneg@f1,?___flneg
 12853  015C66  C091  F091         	movff	___flneg@f1+1,?___flneg+1
 12854  015C6A  C092  F092         	movff	___flneg@f1+2,?___flneg+2
 12855  015C6E  C093  F093         	movff	___flneg@f1+3,?___flneg+3
 12856  015C72  0012               	return	
 12857                           
 12858                           ; BSR set to: 0
 12859                           
 12860                           ; BSR set to: 0
 12861  015C74  0012               	return		;funcret
 12862  015C76                     __end_of___flneg:
 12863                           	opt stack 0
 12864                           tblptru	equ	0xFF8
 12865                           tblptrh	equ	0xFF7
 12866                           tblptrl	equ	0xFF6
 12867                           tablat	equ	0xFF5
 12868                           prodh	equ	0xFF4
 12869                           prodl	equ	0xFF3
 12870                           intcon	equ	0xFF2
 12871                           postinc0	equ	0xFEE
 12872                           wreg	equ	0xFE8
 12873                           indf2	equ	0xFDF
 12874                           postinc2	equ	0xFDE
 12875                           fsr2h	equ	0xFDA
 12876                           fsr2l	equ	0xFD9
 12877                           status	equ	0xFD8
 12878                           
 12879 ;; *************** function ___flge *****************
 12880 ;; Defined at:
 12881 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flge.c"
 12882 ;; Parameters:    Size  Location     Type
 12883 ;;  ff1             4   18[BANK0 ] unsigned char 
 12884 ;;  ff2             4   22[BANK0 ] unsigned char 
 12885 ;; Auto vars:     Size  Location     Type
 12886 ;;		None
 12887 ;; Return value:  Size  Location     Type
 12888 ;;		None               void
 12889 ;; Registers used:
 12890 ;;		wreg, status,2, status,0
 12891 ;; Tracked objects:
 12892 ;;		On entry : 0/0
 12893 ;;		On exit  : 0/0
 12894 ;;		Unchanged: 0/0
 12895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12896 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12898 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12899 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12900 ;;Total ram usage:       12 bytes
 12901 ;; Hardware stack levels used:    1
 12902 ;; Hardware stack levels required when called:    3
 12903 ;; This function calls:
 12904 ;;		Nothing
 12905 ;; This function is called by:
 12906 ;;		_sprintf
 12907 ;; This function uses a non-reentrant model
 12908 ;;
 12909                           
 12910                           	psect	text28
 12911  014FFC                     __ptext28:
 12912                           	opt stack 0
 12913  014FFC                     ___flge:
 12914                           	opt stack 25
 12915                           
 12916                           ; BSR set to: 0
 12917                           ;incstack = 0
 12918  014FFC  0100               	movlb	0	; () banked
 12919  014FFE  AF75               	btfss	(___flge@ff1+3)& (0+255),7,b
 12920  015000  D027               	goto	l7798
 12921                           
 12922                           ; BSR set to: 0
 12923  015002  C072  F07A         	movff	___flge@ff1,??___flge
 12924  015006  C073  F07B         	movff	___flge@ff1+1,??___flge+1
 12925  01500A  C074  F07C         	movff	___flge@ff1+2,??___flge+2
 12926  01500E  C075  F07D         	movff	___flge@ff1+3,??___flge+3
 12927  015012  0100               	movlb	0	; () banked
 12928  015014  1F7A               	comf	??___flge& (0+255),f,b
 12929  015016  1F7B               	comf	(??___flge+1)& (0+255),f,b
 12930  015018  1F7C               	comf	(??___flge+2)& (0+255),f,b
 12931  01501A  1F7D               	comf	(??___flge+3)& (0+255),f,b
 12932  01501C  2B7A               	incf	??___flge& (0+255),f,b
 12933  01501E  0E00               	movlw	0
 12934  015020  237B               	addwfc	(??___flge+1)& (0+255),f,b
 12935  015022  237C               	addwfc	(??___flge+2)& (0+255),f,b
 12936  015024  237D               	addwfc	(??___flge+3)& (0+255),f,b
 12937  015026  0E00               	movlw	0
 12938  015028  0100               	movlb	0	; () banked
 12939  01502A  257A               	addwf	??___flge& (0+255),w,b
 12940  01502C  0100               	movlb	0	; () banked
 12941  01502E  6F72               	movwf	___flge@ff1& (0+255),b
 12942  015030  0E00               	movlw	0
 12943  015032  0100               	movlb	0	; () banked
 12944  015034  217B               	addwfc	(??___flge+1)& (0+255),w,b
 12945  015036  0100               	movlb	0	; () banked
 12946  015038  6F73               	movwf	(___flge@ff1+1)& (0+255),b
 12947  01503A  0E00               	movlw	0
 12948  01503C  0100               	movlb	0	; () banked
 12949  01503E  217C               	addwfc	(??___flge+2)& (0+255),w,b
 12950  015040  0100               	movlb	0	; () banked
 12951  015042  6F74               	movwf	(___flge@ff1+2)& (0+255),b
 12952  015044  0E80               	movlw	128
 12953  015046  0100               	movlb	0	; () banked
 12954  015048  217D               	addwfc	(??___flge+3)& (0+255),w,b
 12955  01504A  0100               	movlb	0	; () banked
 12956  01504C  6F75               	movwf	(___flge@ff1+3)& (0+255),b
 12957  01504E  D000               	goto	l7798
 12958  015050                     l7798:
 12959                           
 12960                           ; BSR set to: 0
 12961  015050  0100               	movlb	0	; () banked
 12962  015052  AF79               	btfss	(___flge@ff2+3)& (0+255),7,b
 12963  015054  D026               	goto	l1355
 12964                           
 12965                           ; BSR set to: 0
 12966  015056  C076  F07A         	movff	___flge@ff2,??___flge
 12967  01505A  C077  F07B         	movff	___flge@ff2+1,??___flge+1
 12968  01505E  C078  F07C         	movff	___flge@ff2+2,??___flge+2
 12969  015062  C079  F07D         	movff	___flge@ff2+3,??___flge+3
 12970  015066  0100               	movlb	0	; () banked
 12971  015068  1F7A               	comf	??___flge& (0+255),f,b
 12972  01506A  1F7B               	comf	(??___flge+1)& (0+255),f,b
 12973  01506C  1F7C               	comf	(??___flge+2)& (0+255),f,b
 12974  01506E  1F7D               	comf	(??___flge+3)& (0+255),f,b
 12975  015070  2B7A               	incf	??___flge& (0+255),f,b
 12976  015072  0E00               	movlw	0
 12977  015074  237B               	addwfc	(??___flge+1)& (0+255),f,b
 12978  015076  237C               	addwfc	(??___flge+2)& (0+255),f,b
 12979  015078  237D               	addwfc	(??___flge+3)& (0+255),f,b
 12980  01507A  0E00               	movlw	0
 12981  01507C  0100               	movlb	0	; () banked
 12982  01507E  257A               	addwf	??___flge& (0+255),w,b
 12983  015080  0100               	movlb	0	; () banked
 12984  015082  6F76               	movwf	___flge@ff2& (0+255),b
 12985  015084  0E00               	movlw	0
 12986  015086  0100               	movlb	0	; () banked
 12987  015088  217B               	addwfc	(??___flge+1)& (0+255),w,b
 12988  01508A  0100               	movlb	0	; () banked
 12989  01508C  6F77               	movwf	(___flge@ff2+1)& (0+255),b
 12990  01508E  0E00               	movlw	0
 12991  015090  0100               	movlb	0	; () banked
 12992  015092  217C               	addwfc	(??___flge+2)& (0+255),w,b
 12993  015094  0100               	movlb	0	; () banked
 12994  015096  6F78               	movwf	(___flge@ff2+2)& (0+255),b
 12995  015098  0E80               	movlw	128
 12996  01509A  0100               	movlb	0	; () banked
 12997  01509C  217D               	addwfc	(??___flge+3)& (0+255),w,b
 12998  01509E  0100               	movlb	0	; () banked
 12999  0150A0  6F79               	movwf	(___flge@ff2+3)& (0+255),b
 13000  0150A2                     l1355:
 13001                           
 13002                           ; BSR set to: 0
 13003  0150A2  0E00               	movlw	0
 13004  0150A4  0100               	movlb	0	; () banked
 13005  0150A6  1B72               	xorwf	___flge@ff1& (0+255),f,b
 13006  0150A8  0E00               	movlw	0
 13007  0150AA  1B73               	xorwf	(___flge@ff1+1)& (0+255),f,b
 13008  0150AC  0E00               	movlw	0
 13009  0150AE  1B74               	xorwf	(___flge@ff1+2)& (0+255),f,b
 13010  0150B0  0E80               	movlw	128
 13011  0150B2  1B75               	xorwf	(___flge@ff1+3)& (0+255),f,b
 13012  0150B4  0E00               	movlw	0
 13013  0150B6  0100               	movlb	0	; () banked
 13014  0150B8  1B76               	xorwf	___flge@ff2& (0+255),f,b
 13015  0150BA  0E00               	movlw	0
 13016  0150BC  1B77               	xorwf	(___flge@ff2+1)& (0+255),f,b
 13017  0150BE  0E00               	movlw	0
 13018  0150C0  1B78               	xorwf	(___flge@ff2+2)& (0+255),f,b
 13019  0150C2  0E80               	movlw	128
 13020  0150C4  1B79               	xorwf	(___flge@ff2+3)& (0+255),f,b
 13021  0150C6  0100               	movlb	0	; () banked
 13022  0150C8  5176               	movf	___flge@ff2& (0+255),w,b
 13023  0150CA  0100               	movlb	0	; () banked
 13024  0150CC  5D72               	subwf	___flge@ff1& (0+255),w,b
 13025  0150CE  0100               	movlb	0	; () banked
 13026  0150D0  5177               	movf	(___flge@ff2+1)& (0+255),w,b
 13027  0150D2  0100               	movlb	0	; () banked
 13028  0150D4  5973               	subwfb	(___flge@ff1+1)& (0+255),w,b
 13029  0150D6  0100               	movlb	0	; () banked
 13030  0150D8  5178               	movf	(___flge@ff2+2)& (0+255),w,b
 13031  0150DA  0100               	movlb	0	; () banked
 13032  0150DC  5974               	subwfb	(___flge@ff1+2)& (0+255),w,b
 13033  0150DE  0100               	movlb	0	; () banked
 13034  0150E0  5179               	movf	(___flge@ff2+3)& (0+255),w,b
 13035  0150E2  0100               	movlb	0	; () banked
 13036  0150E4  5975               	subwfb	(___flge@ff1+3)& (0+255),w,b
 13037  0150E6  B0D8               	btfsc	status,0,c
 13038  0150E8  D002               	goto	l7804
 13039                           
 13040                           ; BSR set to: 0
 13041  0150EA  90D8               	bcf	status,0,c
 13042  0150EC  0012               	return	
 13043  0150EE                     l7804:
 13044                           
 13045                           ; BSR set to: 0
 13046  0150EE  80D8               	bsf	status,0,c
 13047                           
 13048                           ; BSR set to: 0
 13049  0150F0  0012               	return	
 13050                           
 13051                           ; BSR set to: 0
 13052                           
 13053                           ; BSR set to: 0
 13054  0150F2  0012               	return		;funcret
 13055  0150F4                     __end_of___flge:
 13056                           	opt stack 0
 13057                           tblptru	equ	0xFF8
 13058                           tblptrh	equ	0xFF7
 13059                           tblptrl	equ	0xFF6
 13060                           tablat	equ	0xFF5
 13061                           prodh	equ	0xFF4
 13062                           prodl	equ	0xFF3
 13063                           intcon	equ	0xFF2
 13064                           postinc0	equ	0xFEE
 13065                           wreg	equ	0xFE8
 13066                           indf2	equ	0xFDF
 13067                           postinc2	equ	0xFDE
 13068                           fsr2h	equ	0xFDA
 13069                           fsr2l	equ	0xFD9
 13070                           status	equ	0xFD8
 13071                           
 13072 ;; *************** function ___lwtofl *****************
 13073 ;; Defined at:
 13074 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtofl.c"
 13075 ;; Parameters:    Size  Location     Type
 13076 ;;  c               2   28[BANK0 ] unsigned int 
 13077 ;; Auto vars:     Size  Location     Type
 13078 ;;		None
 13079 ;; Return value:  Size  Location     Type
 13080 ;;                  4   28[BANK0 ] unsigned int 
 13081 ;; Registers used:
 13082 ;;		wreg, status,2, status,0, cstack
 13083 ;; Tracked objects:
 13084 ;;		On entry : 0/0
 13085 ;;		On exit  : 0/0
 13086 ;;		Unchanged: 0/0
 13087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13088 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13091 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13092 ;;Total ram usage:        4 bytes
 13093 ;; Hardware stack levels used:    1
 13094 ;; Hardware stack levels required when called:    4
 13095 ;; This function calls:
 13096 ;;		___flpack
 13097 ;; This function is called by:
 13098 ;;		_LCD_Handler
 13099 ;; This function uses a non-reentrant model
 13100 ;;
 13101                           
 13102                           	psect	text29
 13103  015DC2                     __ptext29:
 13104                           	opt stack 0
 13105  015DC2                     ___lwtofl:
 13106                           	opt stack 25
 13107                           
 13108                           ; BSR set to: 0
 13109                           ;incstack = 0
 13110  015DC2  C07C  F072         	movff	___lwtofl@c,___flpack@arg
 13111  015DC6  C07D  F073         	movff	___lwtofl@c+1,___flpack@arg+1
 13112  015DCA  0100               	movlb	0	; () banked
 13113  015DCC  6B74               	clrf	(___flpack@arg+2)& (0+255),b
 13114  015DCE  6B75               	clrf	(___flpack@arg+3)& (0+255),b
 13115  015DD0  0E96               	movlw	150
 13116  015DD2  0100               	movlb	0	; () banked
 13117  015DD4  6F76               	movwf	___flpack@exp& (0+255),b
 13118  015DD6  0E00               	movlw	0
 13119  015DD8  0100               	movlb	0	; () banked
 13120  015DDA  6F77               	movwf	___flpack@sign& (0+255),b
 13121  015DDC  ECAD  F0A4         	call	___flpack	;wreg free
 13122  015DE0  C072  F07C         	movff	?___flpack,?___lwtofl
 13123  015DE4  C073  F07D         	movff	?___flpack+1,?___lwtofl+1
 13124  015DE8  C074  F07E         	movff	?___flpack+2,?___lwtofl+2
 13125  015DEC  C075  F07F         	movff	?___flpack+3,?___lwtofl+3
 13126  015DF0  0012               	return	
 13127  015DF2  0012               	return		;funcret
 13128  015DF4                     __end_of___lwtofl:
 13129                           	opt stack 0
 13130                           tblptru	equ	0xFF8
 13131                           tblptrh	equ	0xFF7
 13132                           tblptrl	equ	0xFF6
 13133                           tablat	equ	0xFF5
 13134                           prodh	equ	0xFF4
 13135                           prodl	equ	0xFF3
 13136                           intcon	equ	0xFF2
 13137                           postinc0	equ	0xFEE
 13138                           wreg	equ	0xFE8
 13139                           indf2	equ	0xFDF
 13140                           postinc2	equ	0xFDE
 13141                           fsr2h	equ	0xFDA
 13142                           fsr2l	equ	0xFD9
 13143                           status	equ	0xFD8
 13144                           
 13145 ;; *************** function ___fldiv *****************
 13146 ;; Defined at:
 13147 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldiv.c"
 13148 ;; Parameters:    Size  Location     Type
 13149 ;;  f1              4   32[BANK0 ] unsigned int 
 13150 ;;  f2              4   36[BANK0 ] unsigned int 
 13151 ;; Auto vars:     Size  Location     Type
 13152 ;;  f3              4   40[BANK0 ] unsigned int 
 13153 ;;  sign            1   46[BANK0 ] unsigned char 
 13154 ;;  exp             1   45[BANK0 ] unsigned char 
 13155 ;;  cntr            1   44[BANK0 ] unsigned char 
 13156 ;; Return value:  Size  Location     Type
 13157 ;;                  4   32[BANK0 ] unsigned char 
 13158 ;; Registers used:
 13159 ;;		wreg, status,2, status,0, cstack
 13160 ;; Tracked objects:
 13161 ;;		On entry : 0/0
 13162 ;;		On exit  : 0/0
 13163 ;;		Unchanged: 0/0
 13164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13165 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13166 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13168 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13169 ;;Total ram usage:       15 bytes
 13170 ;; Hardware stack levels used:    1
 13171 ;; Hardware stack levels required when called:    4
 13172 ;; This function calls:
 13173 ;;		___flpack
 13174 ;; This function is called by:
 13175 ;;		_LCD_Handler
 13176 ;; This function uses a non-reentrant model
 13177 ;;
 13178                           
 13179                           	psect	text30
 13180  014DAC                     __ptext30:
 13181                           	opt stack 0
 13182  014DAC                     ___fldiv:
 13183                           	opt stack 25
 13184                           
 13185                           ;incstack = 0
 13186  014DAC  0100               	movlb	0	; () banked
 13187  014DAE  3582               	rlcf	(___fldiv@f1+2)& (0+255),w,b
 13188  014DB0  3583               	rlcf	(___fldiv@f1+3)& (0+255),w,b
 13189  014DB2  0100               	movlb	0	; () banked
 13190  014DB4  6F8D               	movwf	___fldiv@exp& (0+255),b
 13191  014DB6  0100               	movlb	0	; () banked
 13192  014DB8  518D               	movf	___fldiv@exp& (0+255),w,b
 13193  014DBA  A4D8               	btfss	status,2,c
 13194  014DBC  D00A               	goto	l8198
 13195                           
 13196                           ; BSR set to: 0
 13197  014DBE  0E00               	movlw	0
 13198  014DC0  0100               	movlb	0	; () banked
 13199  014DC2  6F80               	movwf	?___fldiv& (0+255),b
 13200  014DC4  0E00               	movlw	0
 13201  014DC6  6F81               	movwf	(?___fldiv+1)& (0+255),b
 13202  014DC8  0E00               	movlw	0
 13203  014DCA  6F82               	movwf	(?___fldiv+2)& (0+255),b
 13204  014DCC  0E00               	movlw	0
 13205  014DCE  6F83               	movwf	(?___fldiv+3)& (0+255),b
 13206                           
 13207                           ; BSR set to: 0
 13208  014DD0  0012               	return	
 13209  014DD2                     l8198:
 13210                           
 13211                           ; BSR set to: 0
 13212  014DD2  0100               	movlb	0	; () banked
 13213  014DD4  3586               	rlcf	(___fldiv@f2+2)& (0+255),w,b
 13214  014DD6  3587               	rlcf	(___fldiv@f2+3)& (0+255),w,b
 13215  014DD8  0100               	movlb	0	; () banked
 13216  014DDA  6F8E               	movwf	___fldiv@sign& (0+255),b
 13217  014DDC  0100               	movlb	0	; () banked
 13218  014DDE  518E               	movf	___fldiv@sign& (0+255),w,b
 13219  014DE0  A4D8               	btfss	status,2,c
 13220  014DE2  D00A               	goto	l8204
 13221                           
 13222                           ; BSR set to: 0
 13223  014DE4  0E00               	movlw	0
 13224  014DE6  0100               	movlb	0	; () banked
 13225  014DE8  6F80               	movwf	?___fldiv& (0+255),b
 13226  014DEA  0E00               	movlw	0
 13227  014DEC  6F81               	movwf	(?___fldiv+1)& (0+255),b
 13228  014DEE  0E00               	movlw	0
 13229  014DF0  6F82               	movwf	(?___fldiv+2)& (0+255),b
 13230  014DF2  0E00               	movlw	0
 13231  014DF4  6F83               	movwf	(?___fldiv+3)& (0+255),b
 13232                           
 13233                           ; BSR set to: 0
 13234  014DF6  0012               	return	
 13235  014DF8                     l8204:
 13236                           
 13237                           ; BSR set to: 0
 13238  014DF8  0100               	movlb	0	; () banked
 13239  014DFA  518E               	movf	___fldiv@sign& (0+255),w,b
 13240  014DFC  0F89               	addlw	137
 13241  014DFE  0100               	movlb	0	; () banked
 13242  014E00  5F8D               	subwf	___fldiv@exp& (0+255),f,b
 13243                           
 13244                           ; BSR set to: 0
 13245  014E02  C083  F08E         	movff	___fldiv@f1+3,___fldiv@sign
 13246  014E06  0100               	movlb	0	; () banked
 13247  014E08  5187               	movf	(___fldiv@f2+3)& (0+255),w,b
 13248  014E0A  0100               	movlb	0	; () banked
 13249  014E0C  1B8E               	xorwf	___fldiv@sign& (0+255),f,b
 13250  014E0E  0E80               	movlw	128
 13251  014E10  0100               	movlb	0	; () banked
 13252  014E12  178E               	andwf	___fldiv@sign& (0+255),f,b
 13253                           
 13254                           ; BSR set to: 0
 13255  014E14  0100               	movlb	0	; () banked
 13256  014E16  8F82               	bsf	(___fldiv@f1+2)& (0+255),7,b
 13257                           
 13258                           ; BSR set to: 0
 13259  014E18  0EFF               	movlw	255
 13260  014E1A  0100               	movlb	0	; () banked
 13261  014E1C  1780               	andwf	___fldiv@f1& (0+255),f,b
 13262  014E1E  0EFF               	movlw	255
 13263  014E20  1781               	andwf	(___fldiv@f1+1)& (0+255),f,b
 13264  014E22  0EFF               	movlw	255
 13265  014E24  1782               	andwf	(___fldiv@f1+2)& (0+255),f,b
 13266  014E26  0E00               	movlw	0
 13267  014E28  1783               	andwf	(___fldiv@f1+3)& (0+255),f,b
 13268  014E2A  0100               	movlb	0	; () banked
 13269  014E2C  8F86               	bsf	(___fldiv@f2+2)& (0+255),7,b
 13270                           
 13271                           ; BSR set to: 0
 13272  014E2E  0EFF               	movlw	255
 13273  014E30  0100               	movlb	0	; () banked
 13274  014E32  1784               	andwf	___fldiv@f2& (0+255),f,b
 13275  014E34  0EFF               	movlw	255
 13276  014E36  1785               	andwf	(___fldiv@f2+1)& (0+255),f,b
 13277  014E38  0EFF               	movlw	255
 13278  014E3A  1786               	andwf	(___fldiv@f2+2)& (0+255),f,b
 13279  014E3C  0E00               	movlw	0
 13280  014E3E  1787               	andwf	(___fldiv@f2+3)& (0+255),f,b
 13281                           
 13282                           ; BSR set to: 0
 13283  014E40  0E20               	movlw	32
 13284  014E42  0100               	movlb	0	; () banked
 13285  014E44  6F8C               	movwf	___fldiv@cntr& (0+255),b
 13286  014E46  D000               	goto	l8216
 13287  014E48                     l8216:
 13288                           
 13289                           ; BSR set to: 0
 13290  014E48  0100               	movlb	0	; () banked
 13291  014E4A  90D8               	bcf	status,0,c
 13292  014E4C  3788               	rlcf	___fldiv@f3& (0+255),f,b
 13293  014E4E  3789               	rlcf	(___fldiv@f3+1)& (0+255),f,b
 13294  014E50  378A               	rlcf	(___fldiv@f3+2)& (0+255),f,b
 13295  014E52  378B               	rlcf	(___fldiv@f3+3)& (0+255),f,b
 13296                           
 13297                           ; BSR set to: 0
 13298  014E54  0100               	movlb	0	; () banked
 13299  014E56  5184               	movf	___fldiv@f2& (0+255),w,b
 13300  014E58  0100               	movlb	0	; () banked
 13301  014E5A  5D80               	subwf	___fldiv@f1& (0+255),w,b
 13302  014E5C  0100               	movlb	0	; () banked
 13303  014E5E  5185               	movf	(___fldiv@f2+1)& (0+255),w,b
 13304  014E60  0100               	movlb	0	; () banked
 13305  014E62  5981               	subwfb	(___fldiv@f1+1)& (0+255),w,b
 13306  014E64  0100               	movlb	0	; () banked
 13307  014E66  5186               	movf	(___fldiv@f2+2)& (0+255),w,b
 13308  014E68  0100               	movlb	0	; () banked
 13309  014E6A  5982               	subwfb	(___fldiv@f1+2)& (0+255),w,b
 13310  014E6C  0100               	movlb	0	; () banked
 13311  014E6E  5187               	movf	(___fldiv@f2+3)& (0+255),w,b
 13312  014E70  0100               	movlb	0	; () banked
 13313  014E72  5983               	subwfb	(___fldiv@f1+3)& (0+255),w,b
 13314  014E74  A0D8               	btfss	status,0,c
 13315  014E76  D013               	goto	l8224
 13316                           
 13317                           ; BSR set to: 0
 13318  014E78  0100               	movlb	0	; () banked
 13319  014E7A  5184               	movf	___fldiv@f2& (0+255),w,b
 13320  014E7C  0100               	movlb	0	; () banked
 13321  014E7E  5F80               	subwf	___fldiv@f1& (0+255),f,b
 13322  014E80  0100               	movlb	0	; () banked
 13323  014E82  5185               	movf	(___fldiv@f2+1)& (0+255),w,b
 13324  014E84  0100               	movlb	0	; () banked
 13325  014E86  5B81               	subwfb	(___fldiv@f1+1)& (0+255),f,b
 13326  014E88  0100               	movlb	0	; () banked
 13327  014E8A  5186               	movf	(___fldiv@f2+2)& (0+255),w,b
 13328  014E8C  0100               	movlb	0	; () banked
 13329  014E8E  5B82               	subwfb	(___fldiv@f1+2)& (0+255),f,b
 13330  014E90  0100               	movlb	0	; () banked
 13331  014E92  5187               	movf	(___fldiv@f2+3)& (0+255),w,b
 13332  014E94  0100               	movlb	0	; () banked
 13333  014E96  5B83               	subwfb	(___fldiv@f1+3)& (0+255),f,b
 13334                           
 13335                           ; BSR set to: 0
 13336  014E98  0100               	movlb	0	; () banked
 13337  014E9A  8188               	bsf	___fldiv@f3& (0+255),0,b
 13338  014E9C  D000               	goto	l8224
 13339  014E9E                     l8224:
 13340                           
 13341                           ; BSR set to: 0
 13342  014E9E  0100               	movlb	0	; () banked
 13343  014EA0  90D8               	bcf	status,0,c
 13344  014EA2  3780               	rlcf	___fldiv@f1& (0+255),f,b
 13345  014EA4  3781               	rlcf	(___fldiv@f1+1)& (0+255),f,b
 13346  014EA6  3782               	rlcf	(___fldiv@f1+2)& (0+255),f,b
 13347  014EA8  3783               	rlcf	(___fldiv@f1+3)& (0+255),f,b
 13348                           
 13349                           ; BSR set to: 0
 13350  014EAA  0100               	movlb	0	; () banked
 13351  014EAC  2F8C               	decfsz	___fldiv@cntr& (0+255),f,b
 13352  014EAE  D7CC               	goto	l8216
 13353  014EB0  D000               	goto	l8228
 13354  014EB2                     l8228:
 13355                           
 13356                           ; BSR set to: 0
 13357  014EB2  C088  F072         	movff	___fldiv@f3,___flpack@arg
 13358  014EB6  C089  F073         	movff	___fldiv@f3+1,___flpack@arg+1
 13359  014EBA  C08A  F074         	movff	___fldiv@f3+2,___flpack@arg+2
 13360  014EBE  C08B  F075         	movff	___fldiv@f3+3,___flpack@arg+3
 13361  014EC2  C08D  F076         	movff	___fldiv@exp,___flpack@exp
 13362  014EC6  C08E  F077         	movff	___fldiv@sign,___flpack@sign
 13363  014ECA  ECAD  F0A4         	call	___flpack	;wreg free
 13364  014ECE  C072  F080         	movff	?___flpack,?___fldiv
 13365  014ED2  C073  F081         	movff	?___flpack+1,?___fldiv+1
 13366  014ED6  C074  F082         	movff	?___flpack+2,?___fldiv+2
 13367  014EDA  C075  F083         	movff	?___flpack+3,?___fldiv+3
 13368  014EDE  0012               	return	
 13369  014EE0  0012               	return		;funcret
 13370  014EE2                     __end_of___fldiv:
 13371                           	opt stack 0
 13372                           tblptru	equ	0xFF8
 13373                           tblptrh	equ	0xFF7
 13374                           tblptrl	equ	0xFF6
 13375                           tablat	equ	0xFF5
 13376                           prodh	equ	0xFF4
 13377                           prodl	equ	0xFF3
 13378                           intcon	equ	0xFF2
 13379                           postinc0	equ	0xFEE
 13380                           wreg	equ	0xFE8
 13381                           indf2	equ	0xFDF
 13382                           postinc2	equ	0xFDE
 13383                           fsr2h	equ	0xFDA
 13384                           fsr2l	equ	0xFD9
 13385                           status	equ	0xFD8
 13386                           
 13387 ;; *************** function ___flpack *****************
 13388 ;; Defined at:
 13389 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\double.c"
 13390 ;; Parameters:    Size  Location     Type
 13391 ;;  arg             4   18[BANK0 ] unsigned long 
 13392 ;;  exp             1   22[BANK0 ] unsigned char 
 13393 ;;  sign            1   23[BANK0 ] unsigned char 
 13394 ;; Auto vars:     Size  Location     Type
 13395 ;;		None
 13396 ;; Return value:  Size  Location     Type
 13397 ;;                  4   18[BANK0 ] unsigned char 
 13398 ;; Registers used:
 13399 ;;		wreg, status,2, status,0
 13400 ;; Tracked objects:
 13401 ;;		On entry : 0/0
 13402 ;;		On exit  : 0/0
 13403 ;;		Unchanged: 0/0
 13404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13405 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13407 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13408 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13409 ;;Total ram usage:       10 bytes
 13410 ;; Hardware stack levels used:    1
 13411 ;; Hardware stack levels required when called:    3
 13412 ;; This function calls:
 13413 ;;		Nothing
 13414 ;; This function is called by:
 13415 ;;		___awtofl
 13416 ;;		___fladd
 13417 ;;		___fldiv
 13418 ;;		___flmul
 13419 ;;		___lbtofl
 13420 ;;		___lltofl
 13421 ;;		___lwtofl
 13422 ;; This function uses a non-reentrant model
 13423 ;;
 13424                           
 13425                           	psect	text31
 13426  01495A                     __ptext31:
 13427                           	opt stack 0
 13428  01495A                     ___flpack:
 13429                           	opt stack 26
 13430                           
 13431                           ;incstack = 0
 13432  01495A  0100               	movlb	0	; () banked
 13433  01495C  5176               	movf	___flpack@exp& (0+255),w,b
 13434  01495E  0100               	movlb	0	; () banked
 13435  014960  B4D8               	btfsc	status,2,c
 13436  014962  D00A               	goto	l7320
 13437                           
 13438                           ; BSR set to: 0
 13439  014964  0100               	movlb	0	; () banked
 13440  014966  5172               	movf	___flpack@arg& (0+255),w,b
 13441  014968  0100               	movlb	0	; () banked
 13442  01496A  1173               	iorwf	(___flpack@arg+1)& (0+255),w,b
 13443  01496C  0100               	movlb	0	; () banked
 13444  01496E  1174               	iorwf	(___flpack@arg+2)& (0+255),w,b
 13445  014970  0100               	movlb	0	; () banked
 13446  014972  1175               	iorwf	(___flpack@arg+3)& (0+255),w,b
 13447  014974  A4D8               	btfss	status,2,c
 13448  014976  D014               	goto	l7326
 13449  014978                     l7320:
 13450                           
 13451                           ; BSR set to: 0
 13452  014978  0E00               	movlw	0
 13453  01497A  0100               	movlb	0	; () banked
 13454  01497C  6F72               	movwf	?___flpack& (0+255),b
 13455  01497E  0E00               	movlw	0
 13456  014980  6F73               	movwf	(?___flpack+1)& (0+255),b
 13457  014982  0E00               	movlw	0
 13458  014984  6F74               	movwf	(?___flpack+2)& (0+255),b
 13459  014986  0E00               	movlw	0
 13460  014988  6F75               	movwf	(?___flpack+3)& (0+255),b
 13461                           
 13462                           ; BSR set to: 0
 13463  01498A  0012               	return	
 13464                           
 13465                           ; BSR set to: 0
 13466  01498C  D009               	goto	l7326
 13467  01498E                     l7324:
 13468                           
 13469                           ; BSR set to: 0
 13470  01498E  0100               	movlb	0	; () banked
 13471  014990  2B76               	incf	___flpack@exp& (0+255),f,b
 13472  014992  0100               	movlb	0	; () banked
 13473  014994  90D8               	bcf	status,0,c
 13474  014996  3375               	rrcf	(___flpack@arg+3)& (0+255),f,b
 13475  014998  3374               	rrcf	(___flpack@arg+2)& (0+255),f,b
 13476  01499A  3373               	rrcf	(___flpack@arg+1)& (0+255),f,b
 13477  01499C  3372               	rrcf	___flpack@arg& (0+255),f,b
 13478  01499E  D000               	goto	l7326
 13479  0149A0                     l7326:
 13480                           
 13481                           ; BSR set to: 0
 13482  0149A0  0E00               	movlw	0
 13483  0149A2  0100               	movlb	0	; () banked
 13484  0149A4  1572               	andwf	___flpack@arg& (0+255),w,b
 13485  0149A6  0100               	movlb	0	; () banked
 13486  0149A8  6F78               	movwf	??___flpack& (0+255),b
 13487  0149AA  0E00               	movlw	0
 13488  0149AC  0100               	movlb	0	; () banked
 13489  0149AE  1573               	andwf	(___flpack@arg+1)& (0+255),w,b
 13490  0149B0  0100               	movlb	0	; () banked
 13491  0149B2  6F79               	movwf	(??___flpack+1)& (0+255),b
 13492  0149B4  0E00               	movlw	0
 13493  0149B6  0100               	movlb	0	; () banked
 13494  0149B8  1574               	andwf	(___flpack@arg+2)& (0+255),w,b
 13495  0149BA  0100               	movlb	0	; () banked
 13496  0149BC  6F7A               	movwf	(??___flpack+2)& (0+255),b
 13497  0149BE  0EFE               	movlw	254
 13498  0149C0  0100               	movlb	0	; () banked
 13499  0149C2  1575               	andwf	(___flpack@arg+3)& (0+255),w,b
 13500  0149C4  0100               	movlb	0	; () banked
 13501  0149C6  6F7B               	movwf	(??___flpack+3)& (0+255),b
 13502  0149C8  0100               	movlb	0	; () banked
 13503  0149CA  5178               	movf	??___flpack& (0+255),w,b
 13504  0149CC  0100               	movlb	0	; () banked
 13505  0149CE  1179               	iorwf	(??___flpack+1)& (0+255),w,b
 13506  0149D0  0100               	movlb	0	; () banked
 13507  0149D2  117A               	iorwf	(??___flpack+2)& (0+255),w,b
 13508  0149D4  0100               	movlb	0	; () banked
 13509  0149D6  117B               	iorwf	(??___flpack+3)& (0+255),w,b
 13510  0149D8  B4D8               	btfsc	status,2,c
 13511  0149DA  D011               	goto	l1282
 13512  0149DC  D7D8               	goto	l7324
 13513                           
 13514                           ; BSR set to: 0
 13515  0149DE  D00F               	goto	l1282
 13516  0149E0                     l7328:
 13517                           
 13518                           ; BSR set to: 0
 13519  0149E0  0100               	movlb	0	; () banked
 13520  0149E2  2B76               	incf	___flpack@exp& (0+255),f,b
 13521                           
 13522                           ; BSR set to: 0
 13523  0149E4  0E01               	movlw	1
 13524  0149E6  0100               	movlb	0	; () banked
 13525  0149E8  2772               	addwf	___flpack@arg& (0+255),f,b
 13526  0149EA  0E00               	movlw	0
 13527  0149EC  2373               	addwfc	(___flpack@arg+1)& (0+255),f,b
 13528  0149EE  2374               	addwfc	(___flpack@arg+2)& (0+255),f,b
 13529  0149F0  2375               	addwfc	(___flpack@arg+3)& (0+255),f,b
 13530                           
 13531                           ; BSR set to: 0
 13532  0149F2  0100               	movlb	0	; () banked
 13533  0149F4  90D8               	bcf	status,0,c
 13534  0149F6  3375               	rrcf	(___flpack@arg+3)& (0+255),f,b
 13535  0149F8  3374               	rrcf	(___flpack@arg+2)& (0+255),f,b
 13536  0149FA  3373               	rrcf	(___flpack@arg+1)& (0+255),f,b
 13537  0149FC  3372               	rrcf	___flpack@arg& (0+255),f,b
 13538  0149FE                     l1282:
 13539                           
 13540                           ; BSR set to: 0
 13541  0149FE  0E00               	movlw	0
 13542  014A00  0100               	movlb	0	; () banked
 13543  014A02  1572               	andwf	___flpack@arg& (0+255),w,b
 13544  014A04  0100               	movlb	0	; () banked
 13545  014A06  6F78               	movwf	??___flpack& (0+255),b
 13546  014A08  0E00               	movlw	0
 13547  014A0A  0100               	movlb	0	; () banked
 13548  014A0C  1573               	andwf	(___flpack@arg+1)& (0+255),w,b
 13549  014A0E  0100               	movlb	0	; () banked
 13550  014A10  6F79               	movwf	(??___flpack+1)& (0+255),b
 13551  014A12  0E00               	movlw	0
 13552  014A14  0100               	movlb	0	; () banked
 13553  014A16  1574               	andwf	(___flpack@arg+2)& (0+255),w,b
 13554  014A18  0100               	movlb	0	; () banked
 13555  014A1A  6F7A               	movwf	(??___flpack+2)& (0+255),b
 13556  014A1C  0EFF               	movlw	255
 13557  014A1E  0100               	movlb	0	; () banked
 13558  014A20  1575               	andwf	(___flpack@arg+3)& (0+255),w,b
 13559  014A22  0100               	movlb	0	; () banked
 13560  014A24  6F7B               	movwf	(??___flpack+3)& (0+255),b
 13561  014A26  0100               	movlb	0	; () banked
 13562  014A28  5178               	movf	??___flpack& (0+255),w,b
 13563  014A2A  0100               	movlb	0	; () banked
 13564  014A2C  1179               	iorwf	(??___flpack+1)& (0+255),w,b
 13565  014A2E  0100               	movlb	0	; () banked
 13566  014A30  117A               	iorwf	(??___flpack+2)& (0+255),w,b
 13567  014A32  0100               	movlb	0	; () banked
 13568  014A34  117B               	iorwf	(??___flpack+3)& (0+255),w,b
 13569  014A36  B4D8               	btfsc	status,2,c
 13570  014A38  D00B               	goto	l7336
 13571  014A3A  D7D2               	goto	l7328
 13572                           
 13573                           ; BSR set to: 0
 13574  014A3C  D009               	goto	l7336
 13575  014A3E                     l7334:
 13576                           
 13577                           ; BSR set to: 0
 13578  014A3E  0100               	movlb	0	; () banked
 13579  014A40  0776               	decf	___flpack@exp& (0+255),f,b
 13580  014A42  0100               	movlb	0	; () banked
 13581  014A44  90D8               	bcf	status,0,c
 13582  014A46  3772               	rlcf	___flpack@arg& (0+255),f,b
 13583  014A48  3773               	rlcf	(___flpack@arg+1)& (0+255),f,b
 13584  014A4A  3774               	rlcf	(___flpack@arg+2)& (0+255),f,b
 13585  014A4C  3775               	rlcf	(___flpack@arg+3)& (0+255),f,b
 13586  014A4E  D000               	goto	l7336
 13587  014A50                     l7336:
 13588                           
 13589                           ; BSR set to: 0
 13590  014A50  0100               	movlb	0	; () banked
 13591  014A52  BF74               	btfsc	(___flpack@arg+2)& (0+255),7,b
 13592  014A54  D005               	goto	l1289
 13593                           
 13594                           ; BSR set to: 0
 13595  014A56  0E02               	movlw	2
 13596  014A58  0100               	movlb	0	; () banked
 13597  014A5A  6176               	cpfslt	___flpack@exp& (0+255),b
 13598  014A5C  D7F0               	goto	l7334
 13599  014A5E  D000               	goto	l1289
 13600  014A60                     l1289:
 13601                           
 13602                           ; BSR set to: 0
 13603  014A60  0100               	movlb	0	; () banked
 13604  014A62  B176               	btfsc	___flpack@exp& (0+255),0,b
 13605  014A64  D009               	goto	l1290
 13606                           
 13607                           ; BSR set to: 0
 13608  014A66  0EFF               	movlw	255
 13609  014A68  0100               	movlb	0	; () banked
 13610  014A6A  1772               	andwf	___flpack@arg& (0+255),f,b
 13611  014A6C  0EFF               	movlw	255
 13612  014A6E  1773               	andwf	(___flpack@arg+1)& (0+255),f,b
 13613  014A70  0E7F               	movlw	127
 13614  014A72  1774               	andwf	(___flpack@arg+2)& (0+255),f,b
 13615  014A74  0EFF               	movlw	255
 13616  014A76  1775               	andwf	(___flpack@arg+3)& (0+255),f,b
 13617  014A78                     l1290:
 13618                           
 13619                           ; BSR set to: 0
 13620  014A78  0100               	movlb	0	; () banked
 13621  014A7A  90D8               	bcf	status,0,c
 13622  014A7C  3376               	rrcf	___flpack@exp& (0+255),f,b
 13623  014A7E  C076  F078         	movff	___flpack@exp,??___flpack
 13624  014A82  0100               	movlb	0	; () banked
 13625  014A84  6B79               	clrf	(??___flpack+1)& (0+255),b
 13626  014A86  6B7A               	clrf	(??___flpack+2)& (0+255),b
 13627  014A88  6B7B               	clrf	(??___flpack+3)& (0+255),b
 13628  014A8A  C078  F07B         	movff	??___flpack,??___flpack+3
 13629  014A8E  0100               	movlb	0	; () banked
 13630  014A90  6B7A               	clrf	(??___flpack+2)& (0+255),b
 13631  014A92  6B79               	clrf	(??___flpack+1)& (0+255),b
 13632  014A94  6B78               	clrf	??___flpack& (0+255),b
 13633  014A96  0100               	movlb	0	; () banked
 13634  014A98  5178               	movf	??___flpack& (0+255),w,b
 13635  014A9A  0100               	movlb	0	; () banked
 13636  014A9C  1372               	iorwf	___flpack@arg& (0+255),f,b
 13637  014A9E  0100               	movlb	0	; () banked
 13638  014AA0  5179               	movf	(??___flpack+1)& (0+255),w,b
 13639  014AA2  0100               	movlb	0	; () banked
 13640  014AA4  1373               	iorwf	(___flpack@arg+1)& (0+255),f,b
 13641  014AA6  0100               	movlb	0	; () banked
 13642  014AA8  517A               	movf	(??___flpack+2)& (0+255),w,b
 13643  014AAA  0100               	movlb	0	; () banked
 13644  014AAC  1374               	iorwf	(___flpack@arg+2)& (0+255),f,b
 13645  014AAE  0100               	movlb	0	; () banked
 13646  014AB0  517B               	movf	(??___flpack+3)& (0+255),w,b
 13647  014AB2  0100               	movlb	0	; () banked
 13648  014AB4  1375               	iorwf	(___flpack@arg+3)& (0+255),f,b
 13649                           
 13650                           ; BSR set to: 0
 13651  014AB6  0100               	movlb	0	; () banked
 13652  014AB8  5177               	movf	___flpack@sign& (0+255),w,b
 13653  014ABA  0100               	movlb	0	; () banked
 13654  014ABC  B4D8               	btfsc	status,2,c
 13655  014ABE  D003               	goto	l7346
 13656                           
 13657                           ; BSR set to: 0
 13658  014AC0  0100               	movlb	0	; () banked
 13659  014AC2  8F75               	bsf	(___flpack@arg+3)& (0+255),7,b
 13660  014AC4  D000               	goto	l7346
 13661  014AC6                     l7346:
 13662                           
 13663                           ; BSR set to: 0
 13664  014AC6  C072  F072         	movff	___flpack@arg,?___flpack
 13665  014ACA  C073  F073         	movff	___flpack@arg+1,?___flpack+1
 13666  014ACE  C074  F074         	movff	___flpack@arg+2,?___flpack+2
 13667  014AD2  C075  F075         	movff	___flpack@arg+3,?___flpack+3
 13668  014AD6  0012               	return	
 13669                           
 13670                           ; BSR set to: 0
 13671                           
 13672                           ; BSR set to: 0
 13673  014AD8  0012               	return		;funcret
 13674  014ADA                     __end_of___flpack:
 13675                           	opt stack 0
 13676                           tblptru	equ	0xFF8
 13677                           tblptrh	equ	0xFF7
 13678                           tblptrl	equ	0xFF6
 13679                           tablat	equ	0xFF5
 13680                           prodh	equ	0xFF4
 13681                           prodl	equ	0xFF3
 13682                           intcon	equ	0xFF2
 13683                           postinc0	equ	0xFEE
 13684                           wreg	equ	0xFE8
 13685                           indf2	equ	0xFDF
 13686                           postinc2	equ	0xFDE
 13687                           fsr2h	equ	0xFDA
 13688                           fsr2l	equ	0xFD9
 13689                           status	equ	0xFD8
 13690                           
 13691 ;; *************** function _LCD_write_integer *****************
 13692 ;; Defined at:
 13693 ;;		line 210 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 13694 ;; Parameters:    Size  Location     Type
 13695 ;;  value           2   42[BANK0 ] int 
 13696 ;;  number_of_di    1   44[BANK0 ] unsigned char 
 13697 ;;  zero_cleanin    1   45[BANK0 ] unsigned char 
 13698 ;; Auto vars:     Size  Location     Type
 13699 ;;  convertedInt    6   51[BANK0 ] unsigned char [6]
 13700 ;;  index           1   57[BANK0 ] unsigned char 
 13701 ;; Return value:  Size  Location     Type
 13702 ;;		None               void
 13703 ;; Registers used:
 13704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13705 ;; Tracked objects:
 13706 ;;		On entry : 0/0
 13707 ;;		On exit  : 0/0
 13708 ;;		Unchanged: 0/0
 13709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13710 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13711 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13712 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13713 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13714 ;;Total ram usage:       16 bytes
 13715 ;; Hardware stack levels used:    1
 13716 ;; Hardware stack levels required when called:    9
 13717 ;; This function calls:
 13718 ;;		_LCD_write_string
 13719 ;;		_itoa
 13720 ;; This function is called by:
 13721 ;;		_LCD_Handler
 13722 ;; This function uses a non-reentrant model
 13723 ;;
 13724                           
 13725                           	psect	text32
 13726  014456                     __ptext32:
 13727                           	opt stack 0
 13728  014456                     _LCD_write_integer:
 13729                           	opt stack 20
 13730                           
 13731                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 13732                           
 13733                           ; BSR set to: 0
 13734                           ;incstack = 0
 13735  014456  EE21  F000         	lfsr	2,LCD_write_integer@F17326
 13736  01445A  EE10  F093         	lfsr	1,LCD_write_integer@convertedInt
 13737  01445E  0E05               	movlw	5
 13738  014460                     u9931:
 13739  014460  CFDB FFE3          	movff	plusw2,plusw1
 13740  014464  06E8               	decf	wreg,f,c
 13741  014466  E2FC               	bc	u9931
 13742                           
 13743                           ;src\LCD_44780.c: 216: unsigned char index;
 13744                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 13745  014468  0E93               	movlw	low LCD_write_integer@convertedInt
 13746  01446A  0100               	movlb	0	; () banked
 13747  01446C  6F82               	movwf	itoa@buf& (0+255),b
 13748  01446E  0E00               	movlw	high LCD_write_integer@convertedInt
 13749  014470  0100               	movlb	0	; () banked
 13750  014472  6F83               	movwf	(itoa@buf+1)& (0+255),b
 13751  014474  C08A  F084         	movff	LCD_write_integer@value,itoa@val
 13752  014478  C08B  F085         	movff	LCD_write_integer@value+1,itoa@val+1
 13753  01447C  0E00               	movlw	0
 13754  01447E  0100               	movlb	0	; () banked
 13755  014480  6F87               	movwf	(itoa@base+1)& (0+255),b
 13756  014482  0E0A               	movlw	10
 13757  014484  6F86               	movwf	itoa@base& (0+255),b
 13758  014486  ECB5  F0AD         	call	_itoa	;wreg free
 13759                           
 13760                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 13761  01448A  0100               	movlb	0	; () banked
 13762  01448C  518C               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13763  01448E  0100               	movlb	0	; () banked
 13764  014490  B4D8               	btfsc	status,2,c
 13765  014492  D0BD               	goto	l7942
 13766                           
 13767                           ; BSR set to: 0
 13768                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 13769  014494  0100               	movlb	0	; () banked
 13770  014496  518C               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13771  014498  0D01               	mullw	1
 13772  01449A  0E93               	movlw	low LCD_write_integer@convertedInt
 13773  01449C  24F3               	addwf	prodl,w,c
 13774  01449E  6ED9               	movwf	fsr2l,c
 13775  0144A0  0E00               	movlw	high LCD_write_integer@convertedInt
 13776  0144A2  20F4               	addwfc	prodh,w,c
 13777  0144A4  6EDA               	movwf	fsr2h,c
 13778  0144A6  0E00               	movlw	0
 13779  0144A8  6EDF               	movwf	indf2,c
 13780                           
 13781                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 13782  0144AA  D074               	goto	l7938
 13783  0144AC                     l7920:
 13784                           
 13785                           ; BSR set to: 0
 13786                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 13787  0144AC  0100               	movlb	0	; () banked
 13788  0144AE  058C               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 13789  0144B0  0100               	movlb	0	; () banked
 13790  0144B2  6F99               	movwf	LCD_write_integer@index& (0+255),b
 13791  0144B4                     l7922:
 13792                           
 13793                           ; BSR set to: 0
 13794  0144B4  0100               	movlb	0	; () banked
 13795  0144B6  5199               	movf	LCD_write_integer@index& (0+255),w,b
 13796  0144B8  0100               	movlb	0	; () banked
 13797  0144BA  B4D8               	btfsc	status,2,c
 13798  0144BC  D06B               	goto	l7938
 13799  0144BE  D001               	goto	l7926
 13800                           
 13801                           ; BSR set to: 0
 13802  0144C0  D069               	goto	l7938
 13803  0144C2                     l7926:
 13804                           
 13805                           ; BSR set to: 0
 13806                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 13807  0144C2  0EFF               	movlw	255
 13808  0144C4  0100               	movlb	0	; () banked
 13809  0144C6  6F8E               	movwf	??_LCD_write_integer& (0+255),b
 13810  0144C8  0EFF               	movlw	255
 13811  0144CA  0100               	movlb	0	; () banked
 13812  0144CC  6F8F               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13813  0144CE  0100               	movlb	0	; () banked
 13814  0144D0  5199               	movf	LCD_write_integer@index& (0+255),w,b
 13815  0144D2  0100               	movlb	0	; () banked
 13816  0144D4  6F90               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13817  0144D6  6B91               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13818  0144D8  0100               	movlb	0	; () banked
 13819  0144DA  518E               	movf	??_LCD_write_integer& (0+255),w,b
 13820  0144DC  0100               	movlb	0	; () banked
 13821  0144DE  2790               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13822  0144E0  0100               	movlb	0	; () banked
 13823  0144E2  518F               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13824  0144E4  0100               	movlb	0	; () banked
 13825  0144E6  2391               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13826  0144E8  0E93               	movlw	low LCD_write_integer@convertedInt
 13827  0144EA  0100               	movlb	0	; () banked
 13828  0144EC  2590               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13829  0144EE  6ED9               	movwf	fsr2l,c
 13830  0144F0  0E00               	movlw	high LCD_write_integer@convertedInt
 13831  0144F2  0100               	movlb	0	; () banked
 13832  0144F4  2191               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13833  0144F6  6EDA               	movwf	fsr2h,c
 13834  0144F8  0100               	movlb	0	; () banked
 13835  0144FA  5199               	movf	LCD_write_integer@index& (0+255),w,b
 13836  0144FC  0D01               	mullw	1
 13837  0144FE  0E93               	movlw	low LCD_write_integer@convertedInt
 13838  014500  24F3               	addwf	prodl,w,c
 13839  014502  6EE1               	movwf	fsr1l,c
 13840  014504  0E00               	movlw	high LCD_write_integer@convertedInt
 13841  014506  20F4               	addwfc	prodh,w,c
 13842  014508  6EE2               	movwf	fsr1h,c
 13843  01450A  CFDF FFE7          	movff	indf2,indf1
 13844                           
 13845                           ; BSR set to: 0
 13846                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 13847  01450E  0100               	movlb	0	; () banked
 13848  014510  058D               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 13849  014512  A4D8               	btfss	status,2,c
 13850  014514  D01D               	goto	l7932
 13851                           
 13852                           ; BSR set to: 0
 13853                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 13854  014516  0EFF               	movlw	255
 13855  014518  0100               	movlb	0	; () banked
 13856  01451A  6F8E               	movwf	??_LCD_write_integer& (0+255),b
 13857  01451C  0EFF               	movlw	255
 13858  01451E  0100               	movlb	0	; () banked
 13859  014520  6F8F               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13860  014522  0100               	movlb	0	; () banked
 13861  014524  5199               	movf	LCD_write_integer@index& (0+255),w,b
 13862  014526  0100               	movlb	0	; () banked
 13863  014528  6F90               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13864  01452A  6B91               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13865  01452C  0100               	movlb	0	; () banked
 13866  01452E  518E               	movf	??_LCD_write_integer& (0+255),w,b
 13867  014530  0100               	movlb	0	; () banked
 13868  014532  2790               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13869  014534  0100               	movlb	0	; () banked
 13870  014536  518F               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13871  014538  0100               	movlb	0	; () banked
 13872  01453A  2391               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13873  01453C  0E93               	movlw	low LCD_write_integer@convertedInt
 13874  01453E  0100               	movlb	0	; () banked
 13875  014540  2590               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13876  014542  6ED9               	movwf	fsr2l,c
 13877  014544  0E00               	movlw	high LCD_write_integer@convertedInt
 13878  014546  0100               	movlb	0	; () banked
 13879  014548  2191               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13880  01454A  6EDA               	movwf	fsr2h,c
 13881  01454C  0E20               	movlw	32
 13882  01454E  D01C               	goto	L9
 13883  014550                     l7932:
 13884                           
 13885                           ; BSR set to: 0
 13886                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 13887  014550  0EFF               	movlw	255
 13888  014552  0100               	movlb	0	; () banked
 13889  014554  6F8E               	movwf	??_LCD_write_integer& (0+255),b
 13890  014556  0EFF               	movlw	255
 13891  014558  0100               	movlb	0	; () banked
 13892  01455A  6F8F               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13893  01455C  0100               	movlb	0	; () banked
 13894  01455E  5199               	movf	LCD_write_integer@index& (0+255),w,b
 13895  014560  0100               	movlb	0	; () banked
 13896  014562  6F90               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13897  014564  6B91               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13898  014566  0100               	movlb	0	; () banked
 13899  014568  518E               	movf	??_LCD_write_integer& (0+255),w,b
 13900  01456A  0100               	movlb	0	; () banked
 13901  01456C  2790               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13902  01456E  0100               	movlb	0	; () banked
 13903  014570  518F               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13904  014572  0100               	movlb	0	; () banked
 13905  014574  2391               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13906  014576  0E93               	movlw	low LCD_write_integer@convertedInt
 13907  014578  0100               	movlb	0	; () banked
 13908  01457A  2590               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13909  01457C  6ED9               	movwf	fsr2l,c
 13910  01457E  0E00               	movlw	high LCD_write_integer@convertedInt
 13911  014580  0100               	movlb	0	; () banked
 13912  014582  2191               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13913  014584  6EDA               	movwf	fsr2h,c
 13914  014586  0E30               	movlw	48
 13915  014588                     L9:
 13916  014588  6EDF               	movwf	indf2,c
 13917  01458A  D000               	goto	l7934
 13918  01458C                     l7934:
 13919                           
 13920                           ; BSR set to: 0
 13921  01458C  0100               	movlb	0	; () banked
 13922  01458E  0799               	decf	LCD_write_integer@index& (0+255),f,b
 13923  014590  D791               	goto	l7922
 13924                           
 13925                           ; BSR set to: 0
 13926                           
 13927                           ; BSR set to: 0
 13928  014592  D000               	goto	l7938
 13929  014594                     l7938:
 13930                           
 13931                           ; BSR set to: 0
 13932  014594  0EFF               	movlw	255
 13933  014596  0100               	movlb	0	; () banked
 13934  014598  6F8E               	movwf	??_LCD_write_integer& (0+255),b
 13935  01459A  0EFF               	movlw	255
 13936  01459C  0100               	movlb	0	; () banked
 13937  01459E  6F8F               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13938  0145A0  0100               	movlb	0	; () banked
 13939  0145A2  518C               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13940  0145A4  0100               	movlb	0	; () banked
 13941  0145A6  6F90               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13942  0145A8  6B91               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13943  0145AA  0100               	movlb	0	; () banked
 13944  0145AC  518E               	movf	??_LCD_write_integer& (0+255),w,b
 13945  0145AE  0100               	movlb	0	; () banked
 13946  0145B0  2790               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13947  0145B2  0100               	movlb	0	; () banked
 13948  0145B4  518F               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13949  0145B6  0100               	movlb	0	; () banked
 13950  0145B8  2391               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13951  0145BA  0E93               	movlw	low LCD_write_integer@convertedInt
 13952  0145BC  0100               	movlb	0	; () banked
 13953  0145BE  2590               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13954  0145C0  6ED9               	movwf	fsr2l,c
 13955  0145C2  0E00               	movlw	high LCD_write_integer@convertedInt
 13956  0145C4  0100               	movlb	0	; () banked
 13957  0145C6  2191               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13958  0145C8  6EDA               	movwf	fsr2h,c
 13959  0145CA  0E3A               	movlw	58
 13960  0145CC  60DF               	cpfslt	indf2,c
 13961  0145CE  D76E               	goto	l7920
 13962                           
 13963                           ; BSR set to: 0
 13964  0145D0  0EFF               	movlw	255
 13965  0145D2  0100               	movlb	0	; () banked
 13966  0145D4  6F8E               	movwf	??_LCD_write_integer& (0+255),b
 13967  0145D6  0EFF               	movlw	255
 13968  0145D8  0100               	movlb	0	; () banked
 13969  0145DA  6F8F               	movwf	(??_LCD_write_integer+1)& (0+255),b
 13970  0145DC  0100               	movlb	0	; () banked
 13971  0145DE  518C               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13972  0145E0  0100               	movlb	0	; () banked
 13973  0145E2  6F90               	movwf	(??_LCD_write_integer+2)& (0+255),b
 13974  0145E4  6B91               	clrf	(??_LCD_write_integer+3)& (0+255),b
 13975  0145E6  0100               	movlb	0	; () banked
 13976  0145E8  518E               	movf	??_LCD_write_integer& (0+255),w,b
 13977  0145EA  0100               	movlb	0	; () banked
 13978  0145EC  2790               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 13979  0145EE  0100               	movlb	0	; () banked
 13980  0145F0  518F               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 13981  0145F2  0100               	movlb	0	; () banked
 13982  0145F4  2391               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 13983  0145F6  0E93               	movlw	low LCD_write_integer@convertedInt
 13984  0145F8  0100               	movlb	0	; () banked
 13985  0145FA  2590               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 13986  0145FC  6ED9               	movwf	fsr2l,c
 13987  0145FE  0E00               	movlw	high LCD_write_integer@convertedInt
 13988  014600  0100               	movlb	0	; () banked
 13989  014602  2191               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 13990  014604  6EDA               	movwf	fsr2h,c
 13991  014606  0E2F               	movlw	47
 13992  014608  64DF               	cpfsgt	indf2,c
 13993  01460A  D750               	goto	l7920
 13994                           
 13995                           ; BSR set to: 0
 13996  01460C  D000               	goto	l7942
 13997  01460E                     l7942:
 13998                           
 13999                           ; BSR set to: 0
 14000                           ;src\LCD_44780.c: 243: }
 14001                           ;src\LCD_44780.c: 245: }
 14002                           ;src\LCD_44780.c: 246: }
 14003                           ;src\LCD_44780.c: 247: }
 14004                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 14005  01460E  0E93               	movlw	low LCD_write_integer@convertedInt
 14006  014610  0100               	movlb	0	; () banked
 14007  014612  6F83               	movwf	LCD_write_string@buffer& (0+255),b
 14008  014614  0E00               	movlw	high LCD_write_integer@convertedInt
 14009  014616  0100               	movlb	0	; () banked
 14010  014618  6F84               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 14011  01461A  EC43  F0AF         	call	_LCD_write_string	;wreg free
 14012  01461E  0012               	return		;funcret
 14013  014620                     __end_of_LCD_write_integer:
 14014                           	opt stack 0
 14015                           tblptru	equ	0xFF8
 14016                           tblptrh	equ	0xFF7
 14017                           tblptrl	equ	0xFF6
 14018                           tablat	equ	0xFF5
 14019                           prodh	equ	0xFF4
 14020                           prodl	equ	0xFF3
 14021                           intcon	equ	0xFF2
 14022                           postinc0	equ	0xFEE
 14023                           wreg	equ	0xFE8
 14024                           indf1	equ	0xFE7
 14025                           plusw1	equ	0xFE3
 14026                           fsr1h	equ	0xFE2
 14027                           fsr1l	equ	0xFE1
 14028                           indf2	equ	0xFDF
 14029                           postinc2	equ	0xFDE
 14030                           plusw2	equ	0xFDB
 14031                           fsr2h	equ	0xFDA
 14032                           fsr2l	equ	0xFD9
 14033                           status	equ	0xFD8
 14034                           
 14035 ;; *************** function _itoa *****************
 14036 ;; Defined at:
 14037 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\itoa.c"
 14038 ;; Parameters:    Size  Location     Type
 14039 ;;  buf             2   34[BANK0 ] PTR unsigned char 
 14040 ;;		 -> LCD_write_integer@convertedInt(6), 
 14041 ;;  val             2   36[BANK0 ] int 
 14042 ;;  base            2   38[BANK0 ] int 
 14043 ;; Auto vars:     Size  Location     Type
 14044 ;;  cp              2   40[BANK0 ] PTR unsigned char 
 14045 ;;		 -> LCD_write_integer@convertedInt(6), 
 14046 ;; Return value:  Size  Location     Type
 14047 ;;                  2   34[BANK0 ] PTR unsigned char 
 14048 ;; Registers used:
 14049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14050 ;; Tracked objects:
 14051 ;;		On entry : 0/0
 14052 ;;		On exit  : 0/0
 14053 ;;		Unchanged: 0/0
 14054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14055 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14056 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14058 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14059 ;;Total ram usage:        8 bytes
 14060 ;; Hardware stack levels used:    1
 14061 ;; Hardware stack levels required when called:    5
 14062 ;; This function calls:
 14063 ;;		_utoa
 14064 ;; This function is called by:
 14065 ;;		_LCD_write_integer
 14066 ;; This function uses a non-reentrant model
 14067 ;;
 14068                           
 14069                           	psect	text33
 14070  015B6A                     __ptext33:
 14071                           	opt stack 0
 14072  015B6A                     _itoa:
 14073                           	opt stack 23
 14074                           
 14075                           ;incstack = 0
 14076  015B6A  C082  F088         	movff	itoa@buf,itoa@cp
 14077  015B6E  C083  F089         	movff	itoa@buf+1,itoa@cp+1
 14078  015B72  0100               	movlb	0	; () banked
 14079  015B74  AF85               	btfss	(itoa@val+1)& (0+255),7,b
 14080  015B76  D00F               	goto	l5318
 14081                           
 14082                           ; BSR set to: 0
 14083  015B78  C082  FFD9         	movff	itoa@buf,fsr2l
 14084  015B7C  C083  FFDA         	movff	itoa@buf+1,fsr2h
 14085  015B80  0E2D               	movlw	45
 14086  015B82  6EDF               	movwf	indf2,c
 14087                           
 14088                           ; BSR set to: 0
 14089  015B84  0100               	movlb	0	; () banked
 14090  015B86  4B82               	infsnz	itoa@buf& (0+255),f,b
 14091  015B88  2B83               	incf	(itoa@buf+1)& (0+255),f,b
 14092                           
 14093                           ; BSR set to: 0
 14094  015B8A  0100               	movlb	0	; () banked
 14095  015B8C  6D84               	negf	itoa@val& (0+255),b
 14096  015B8E  1F85               	comf	(itoa@val+1)& (0+255),f,b
 14097  015B90  B0D8               	btfsc	status,0,c
 14098  015B92  2B85               	incf	(itoa@val+1)& (0+255),f,b
 14099  015B94  D000               	goto	l5318
 14100  015B96                     l5318:
 14101                           
 14102                           ; BSR set to: 0
 14103  015B96  C082  F079         	movff	itoa@buf,utoa@buf
 14104  015B9A  C083  F07A         	movff	itoa@buf+1,utoa@buf+1
 14105  015B9E  C084  F07B         	movff	itoa@val,utoa@val
 14106  015BA2  C085  F07C         	movff	itoa@val+1,utoa@val+1
 14107  015BA6  C086  F07D         	movff	itoa@base,utoa@base
 14108  015BAA  C087  F07E         	movff	itoa@base+1,utoa@base+1
 14109  015BAE  ECBC  F0A9         	call	_utoa	;wreg free
 14110  015BB2  0012               	return	
 14111                           
 14112                           ;	Return value of _itoa is never used
 14113  015BB4  0012               	return		;funcret
 14114  015BB6                     __end_of_itoa:
 14115                           	opt stack 0
 14116                           tblptru	equ	0xFF8
 14117                           tblptrh	equ	0xFF7
 14118                           tblptrl	equ	0xFF6
 14119                           tablat	equ	0xFF5
 14120                           prodh	equ	0xFF4
 14121                           prodl	equ	0xFF3
 14122                           intcon	equ	0xFF2
 14123                           postinc0	equ	0xFEE
 14124                           wreg	equ	0xFE8
 14125                           indf1	equ	0xFE7
 14126                           plusw1	equ	0xFE3
 14127                           fsr1h	equ	0xFE2
 14128                           fsr1l	equ	0xFE1
 14129                           indf2	equ	0xFDF
 14130                           postinc2	equ	0xFDE
 14131                           plusw2	equ	0xFDB
 14132                           fsr2h	equ	0xFDA
 14133                           fsr2l	equ	0xFD9
 14134                           status	equ	0xFD8
 14135                           
 14136 ;; *************** function _utoa *****************
 14137 ;; Defined at:
 14138 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\itoa.c"
 14139 ;; Parameters:    Size  Location     Type
 14140 ;;  buf             2   25[BANK0 ] PTR unsigned char 
 14141 ;;		 -> LCD_write_integer@convertedInt(6), 
 14142 ;;  val             2   27[BANK0 ] unsigned int 
 14143 ;;  base            2   29[BANK0 ] int 
 14144 ;; Auto vars:     Size  Location     Type
 14145 ;;  v               2   31[BANK0 ] unsigned int 
 14146 ;;  c               1   33[BANK0 ] unsigned char 
 14147 ;; Return value:  Size  Location     Type
 14148 ;;                  2   25[BANK0 ] PTR unsigned char 
 14149 ;; Registers used:
 14150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14151 ;; Tracked objects:
 14152 ;;		On entry : 0/0
 14153 ;;		On exit  : 0/0
 14154 ;;		Unchanged: 0/0
 14155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14156 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14157 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14159 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14160 ;;Total ram usage:        9 bytes
 14161 ;; Hardware stack levels used:    1
 14162 ;; Hardware stack levels required when called:    4
 14163 ;; This function calls:
 14164 ;;		___lwdiv
 14165 ;;		___lwmod
 14166 ;; This function is called by:
 14167 ;;		_itoa
 14168 ;; This function uses a non-reentrant model
 14169 ;;
 14170                           
 14171                           	psect	text34
 14172  015378                     __ptext34:
 14173                           	opt stack 0
 14174  015378                     _utoa:
 14175                           	opt stack 23
 14176                           
 14177                           ;incstack = 0
 14178  015378  C07B  F07F         	movff	utoa@val,utoa@v
 14179  01537C  C07C  F080         	movff	utoa@val+1,utoa@v+1
 14180  015380  D000               	goto	l4840
 14181  015382                     l4840:
 14182  015382  C07F  F072         	movff	utoa@v,___lwdiv@dividend
 14183  015386  C080  F073         	movff	utoa@v+1,___lwdiv@dividend+1
 14184  01538A  C07D  F074         	movff	utoa@base,___lwdiv@divisor
 14185  01538E  C07E  F075         	movff	utoa@base+1,___lwdiv@divisor+1
 14186  015392  ECC7  F0AB         	call	___lwdiv	;wreg free
 14187  015396  C072  F07F         	movff	?___lwdiv,utoa@v
 14188  01539A  C073  F080         	movff	?___lwdiv+1,utoa@v+1
 14189  01539E  0100               	movlb	0	; () banked
 14190  0153A0  4B79               	infsnz	utoa@buf& (0+255),f,b
 14191  0153A2  2B7A               	incf	(utoa@buf+1)& (0+255),f,b
 14192                           
 14193                           ; BSR set to: 0
 14194  0153A4  0100               	movlb	0	; () banked
 14195  0153A6  517F               	movf	utoa@v& (0+255),w,b
 14196  0153A8  0100               	movlb	0	; () banked
 14197  0153AA  1180               	iorwf	(utoa@v+1)& (0+255),w,b
 14198  0153AC  A4D8               	btfss	status,2,c
 14199  0153AE  D7E9               	goto	l4840
 14200                           
 14201                           ; BSR set to: 0
 14202                           
 14203                           ; BSR set to: 0
 14204  0153B0  C079  FFD9         	movff	utoa@buf,fsr2l
 14205  0153B4  C07A  FFDA         	movff	utoa@buf+1,fsr2h
 14206  0153B8  0E00               	movlw	0
 14207  0153BA  6EDF               	movwf	indf2,c
 14208                           
 14209                           ; BSR set to: 0
 14210  0153BC  0100               	movlb	0	; () banked
 14211  0153BE  0779               	decf	utoa@buf& (0+255),f,b
 14212  0153C0  A0D8               	btfss	status,0,c
 14213  0153C2  077A               	decf	(utoa@buf+1)& (0+255),f,b
 14214  0153C4  D000               	goto	l4850
 14215  0153C6                     l4850:
 14216                           
 14217                           ; BSR set to: 0
 14218  0153C6  C07B  F072         	movff	utoa@val,___lwmod@dividend
 14219  0153CA  C07C  F073         	movff	utoa@val+1,___lwmod@dividend+1
 14220  0153CE  C07D  F074         	movff	utoa@base,___lwmod@divisor
 14221  0153D2  C07E  F075         	movff	utoa@base+1,___lwmod@divisor+1
 14222  0153D6  EC08  F0AC         	call	___lwmod	;wreg free
 14223  0153DA  0100               	movlb	0	; () banked
 14224  0153DC  5172               	movf	?___lwmod& (0+255),w,b
 14225  0153DE  0100               	movlb	0	; () banked
 14226  0153E0  6F81               	movwf	utoa@c& (0+255),b
 14227                           
 14228                           ; BSR set to: 0
 14229  0153E2  C07B  F072         	movff	utoa@val,___lwdiv@dividend
 14230  0153E6  C07C  F073         	movff	utoa@val+1,___lwdiv@dividend+1
 14231  0153EA  C07D  F074         	movff	utoa@base,___lwdiv@divisor
 14232  0153EE  C07E  F075         	movff	utoa@base+1,___lwdiv@divisor+1
 14233  0153F2  ECC7  F0AB         	call	___lwdiv	;wreg free
 14234  0153F6  C072  F07B         	movff	?___lwdiv,utoa@val
 14235  0153FA  C073  F07C         	movff	?___lwdiv+1,utoa@val+1
 14236  0153FE  0E09               	movlw	9
 14237  015400  0100               	movlb	0	; () banked
 14238  015402  6581               	cpfsgt	utoa@c& (0+255),b
 14239  015404  D003               	goto	l1531
 14240                           
 14241                           ; BSR set to: 0
 14242  015406  0E07               	movlw	7
 14243  015408  0100               	movlb	0	; () banked
 14244  01540A  2781               	addwf	utoa@c& (0+255),f,b
 14245  01540C                     l1531:
 14246                           
 14247                           ; BSR set to: 0
 14248  01540C  0E30               	movlw	48
 14249  01540E  0100               	movlb	0	; () banked
 14250  015410  2781               	addwf	utoa@c& (0+255),f,b
 14251                           
 14252                           ; BSR set to: 0
 14253  015412  C079  FFD9         	movff	utoa@buf,fsr2l
 14254  015416  C07A  FFDA         	movff	utoa@buf+1,fsr2h
 14255  01541A  C081  FFDF         	movff	utoa@c,indf2
 14256                           
 14257                           ; BSR set to: 0
 14258  01541E  0100               	movlb	0	; () banked
 14259  015420  0779               	decf	utoa@buf& (0+255),f,b
 14260  015422  A0D8               	btfss	status,0,c
 14261  015424  077A               	decf	(utoa@buf+1)& (0+255),f,b
 14262                           
 14263                           ; BSR set to: 0
 14264  015426  0100               	movlb	0	; () banked
 14265  015428  517B               	movf	utoa@val& (0+255),w,b
 14266  01542A  0100               	movlb	0	; () banked
 14267  01542C  117C               	iorwf	(utoa@val+1)& (0+255),w,b
 14268  01542E  A4D8               	btfss	status,2,c
 14269  015430  D7CA               	goto	l4850
 14270                           
 14271                           ; BSR set to: 0
 14272                           ;	Return value of _utoa is never used
 14273                           
 14274                           ; BSR set to: 0
 14275  015432  0100               	movlb	0	; () banked
 14276  015434  4B79               	infsnz	utoa@buf& (0+255),f,b
 14277  015436  2B7A               	incf	(utoa@buf+1)& (0+255),f,b
 14278  015438  0012               	return	
 14279                           
 14280                           ; BSR set to: 0
 14281                           
 14282                           ; BSR set to: 0
 14283  01543A  0012               	return		;funcret
 14284  01543C                     __end_of_utoa:
 14285                           	opt stack 0
 14286                           tblptru	equ	0xFF8
 14287                           tblptrh	equ	0xFF7
 14288                           tblptrl	equ	0xFF6
 14289                           tablat	equ	0xFF5
 14290                           prodh	equ	0xFF4
 14291                           prodl	equ	0xFF3
 14292                           intcon	equ	0xFF2
 14293                           postinc0	equ	0xFEE
 14294                           wreg	equ	0xFE8
 14295                           indf1	equ	0xFE7
 14296                           plusw1	equ	0xFE3
 14297                           fsr1h	equ	0xFE2
 14298                           fsr1l	equ	0xFE1
 14299                           indf2	equ	0xFDF
 14300                           postinc2	equ	0xFDE
 14301                           plusw2	equ	0xFDB
 14302                           fsr2h	equ	0xFDA
 14303                           fsr2l	equ	0xFD9
 14304                           status	equ	0xFD8
 14305                           
 14306 ;; *************** function ___lwmod *****************
 14307 ;; Defined at:
 14308 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
 14309 ;; Parameters:    Size  Location     Type
 14310 ;;  dividend        2   18[BANK0 ] unsigned int 
 14311 ;;  divisor         2   20[BANK0 ] unsigned int 
 14312 ;; Auto vars:     Size  Location     Type
 14313 ;;  counter         1   22[BANK0 ] unsigned char 
 14314 ;; Return value:  Size  Location     Type
 14315 ;;                  2   18[BANK0 ] unsigned int 
 14316 ;; Registers used:
 14317 ;;		wreg, status,2, status,0
 14318 ;; Tracked objects:
 14319 ;;		On entry : 0/0
 14320 ;;		On exit  : 0/0
 14321 ;;		Unchanged: 0/0
 14322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14323 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14324 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14326 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14327 ;;Total ram usage:        5 bytes
 14328 ;; Hardware stack levels used:    1
 14329 ;; Hardware stack levels required when called:    3
 14330 ;; This function calls:
 14331 ;;		Nothing
 14332 ;; This function is called by:
 14333 ;;		_utoa
 14334 ;; This function uses a non-reentrant model
 14335 ;;
 14336                           
 14337                           	psect	text35
 14338  015810                     __ptext35:
 14339                           	opt stack 0
 14340  015810                     ___lwmod:
 14341                           	opt stack 23
 14342                           
 14343                           ; BSR set to: 0
 14344                           ;incstack = 0
 14345  015810  0100               	movlb	0	; () banked
 14346  015812  5174               	movf	___lwmod@divisor& (0+255),w,b
 14347  015814  0100               	movlb	0	; () banked
 14348  015816  1175               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14349  015818  B4D8               	btfsc	status,2,c
 14350  01581A  D02B               	goto	l1635
 14351                           
 14352                           ; BSR set to: 0
 14353  01581C  0E01               	movlw	1
 14354  01581E  0100               	movlb	0	; () banked
 14355  015820  6F76               	movwf	___lwmod@counter& (0+255),b
 14356  015822  D007               	goto	l4612
 14357  015824                     l4610:
 14358                           
 14359                           ; BSR set to: 0
 14360  015824  0100               	movlb	0	; () banked
 14361  015826  90D8               	bcf	status,0,c
 14362  015828  3774               	rlcf	___lwmod@divisor& (0+255),f,b
 14363  01582A  3775               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14364  01582C  0100               	movlb	0	; () banked
 14365  01582E  2B76               	incf	___lwmod@counter& (0+255),f,b
 14366  015830  D000               	goto	l4612
 14367  015832                     l4612:
 14368                           
 14369                           ; BSR set to: 0
 14370  015832  0100               	movlb	0	; () banked
 14371  015834  BF75               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
 14372  015836  D002               	goto	l4614
 14373  015838  D7F5               	goto	l4610
 14374                           
 14375                           ; BSR set to: 0
 14376  01583A  D000               	goto	l4614
 14377  01583C                     l4614:
 14378                           
 14379                           ; BSR set to: 0
 14380  01583C  0100               	movlb	0	; () banked
 14381  01583E  5174               	movf	___lwmod@divisor& (0+255),w,b
 14382  015840  0100               	movlb	0	; () banked
 14383  015842  5D72               	subwf	___lwmod@dividend& (0+255),w,b
 14384  015844  0100               	movlb	0	; () banked
 14385  015846  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14386  015848  0100               	movlb	0	; () banked
 14387  01584A  5973               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14388  01584C  A0D8               	btfss	status,0,c
 14389  01584E  D009               	goto	l4618
 14390                           
 14391                           ; BSR set to: 0
 14392  015850  0100               	movlb	0	; () banked
 14393  015852  5174               	movf	___lwmod@divisor& (0+255),w,b
 14394  015854  0100               	movlb	0	; () banked
 14395  015856  5F72               	subwf	___lwmod@dividend& (0+255),f,b
 14396  015858  0100               	movlb	0	; () banked
 14397  01585A  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14398  01585C  0100               	movlb	0	; () banked
 14399  01585E  5B73               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14400  015860  D000               	goto	l4618
 14401  015862                     l4618:
 14402                           
 14403                           ; BSR set to: 0
 14404  015862  0100               	movlb	0	; () banked
 14405  015864  90D8               	bcf	status,0,c
 14406  015866  3375               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14407  015868  3374               	rrcf	___lwmod@divisor& (0+255),f,b
 14408                           
 14409                           ; BSR set to: 0
 14410  01586A  0100               	movlb	0	; () banked
 14411  01586C  2F76               	decfsz	___lwmod@counter& (0+255),f,b
 14412  01586E  D7E6               	goto	l4614
 14413  015870  D000               	goto	l1635
 14414  015872                     l1635:
 14415                           
 14416                           ; BSR set to: 0
 14417  015872  C072  F072         	movff	___lwmod@dividend,?___lwmod
 14418  015876  C073  F073         	movff	___lwmod@dividend+1,?___lwmod+1
 14419                           
 14420                           ; BSR set to: 0
 14421  01587A  0012               	return		;funcret
 14422  01587C                     __end_of___lwmod:
 14423                           	opt stack 0
 14424                           tblptru	equ	0xFF8
 14425                           tblptrh	equ	0xFF7
 14426                           tblptrl	equ	0xFF6
 14427                           tablat	equ	0xFF5
 14428                           prodh	equ	0xFF4
 14429                           prodl	equ	0xFF3
 14430                           intcon	equ	0xFF2
 14431                           postinc0	equ	0xFEE
 14432                           wreg	equ	0xFE8
 14433                           indf1	equ	0xFE7
 14434                           plusw1	equ	0xFE3
 14435                           fsr1h	equ	0xFE2
 14436                           fsr1l	equ	0xFE1
 14437                           indf2	equ	0xFDF
 14438                           postinc2	equ	0xFDE
 14439                           plusw2	equ	0xFDB
 14440                           fsr2h	equ	0xFDA
 14441                           fsr2l	equ	0xFD9
 14442                           status	equ	0xFD8
 14443                           
 14444 ;; *************** function ___lwdiv *****************
 14445 ;; Defined at:
 14446 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
 14447 ;; Parameters:    Size  Location     Type
 14448 ;;  dividend        2   18[BANK0 ] unsigned int 
 14449 ;;  divisor         2   20[BANK0 ] unsigned int 
 14450 ;; Auto vars:     Size  Location     Type
 14451 ;;  quotient        2   22[BANK0 ] unsigned int 
 14452 ;;  counter         1   24[BANK0 ] unsigned char 
 14453 ;; Return value:  Size  Location     Type
 14454 ;;                  2   18[BANK0 ] unsigned int 
 14455 ;; Registers used:
 14456 ;;		wreg, status,2, status,0
 14457 ;; Tracked objects:
 14458 ;;		On entry : 0/0
 14459 ;;		On exit  : 0/0
 14460 ;;		Unchanged: 0/0
 14461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14462 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14463 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14465 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14466 ;;Total ram usage:        7 bytes
 14467 ;; Hardware stack levels used:    1
 14468 ;; Hardware stack levels required when called:    3
 14469 ;; This function calls:
 14470 ;;		Nothing
 14471 ;; This function is called by:
 14472 ;;		_utoa
 14473 ;; This function uses a non-reentrant model
 14474 ;;
 14475                           
 14476                           	psect	text36
 14477  01578E                     __ptext36:
 14478                           	opt stack 0
 14479  01578E                     ___lwdiv:
 14480                           	opt stack 23
 14481                           
 14482                           ; BSR set to: 0
 14483                           ;incstack = 0
 14484  01578E  0E00               	movlw	0
 14485  015790  0100               	movlb	0	; () banked
 14486  015792  6F77               	movwf	(___lwdiv@quotient+1)& (0+255),b
 14487  015794  0E00               	movlw	0
 14488  015796  6F76               	movwf	___lwdiv@quotient& (0+255),b
 14489                           
 14490                           ; BSR set to: 0
 14491  015798  0100               	movlb	0	; () banked
 14492  01579A  5174               	movf	___lwdiv@divisor& (0+255),w,b
 14493  01579C  0100               	movlb	0	; () banked
 14494  01579E  1175               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 14495  0157A0  B4D8               	btfsc	status,2,c
 14496  0157A2  D031               	goto	l1625
 14497                           
 14498                           ; BSR set to: 0
 14499  0157A4  0E01               	movlw	1
 14500  0157A6  0100               	movlb	0	; () banked
 14501  0157A8  6F78               	movwf	___lwdiv@counter& (0+255),b
 14502  0157AA  D007               	goto	l4592
 14503  0157AC                     l4590:
 14504                           
 14505                           ; BSR set to: 0
 14506  0157AC  0100               	movlb	0	; () banked
 14507  0157AE  90D8               	bcf	status,0,c
 14508  0157B0  3774               	rlcf	___lwdiv@divisor& (0+255),f,b
 14509  0157B2  3775               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 14510  0157B4  0100               	movlb	0	; () banked
 14511  0157B6  2B78               	incf	___lwdiv@counter& (0+255),f,b
 14512  0157B8  D000               	goto	l4592
 14513  0157BA                     l4592:
 14514                           
 14515                           ; BSR set to: 0
 14516  0157BA  0100               	movlb	0	; () banked
 14517  0157BC  BF75               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
 14518  0157BE  D002               	goto	l4594
 14519  0157C0  D7F5               	goto	l4590
 14520                           
 14521                           ; BSR set to: 0
 14522  0157C2  D000               	goto	l4594
 14523  0157C4                     l4594:
 14524                           
 14525                           ; BSR set to: 0
 14526  0157C4  0100               	movlb	0	; () banked
 14527  0157C6  90D8               	bcf	status,0,c
 14528  0157C8  3776               	rlcf	___lwdiv@quotient& (0+255),f,b
 14529  0157CA  3777               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 14530                           
 14531                           ; BSR set to: 0
 14532  0157CC  0100               	movlb	0	; () banked
 14533  0157CE  5174               	movf	___lwdiv@divisor& (0+255),w,b
 14534  0157D0  0100               	movlb	0	; () banked
 14535  0157D2  5D72               	subwf	___lwdiv@dividend& (0+255),w,b
 14536  0157D4  0100               	movlb	0	; () banked
 14537  0157D6  5175               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14538  0157D8  0100               	movlb	0	; () banked
 14539  0157DA  5973               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 14540  0157DC  A0D8               	btfss	status,0,c
 14541  0157DE  D00B               	goto	l4602
 14542                           
 14543                           ; BSR set to: 0
 14544  0157E0  0100               	movlb	0	; () banked
 14545  0157E2  5174               	movf	___lwdiv@divisor& (0+255),w,b
 14546  0157E4  0100               	movlb	0	; () banked
 14547  0157E6  5F72               	subwf	___lwdiv@dividend& (0+255),f,b
 14548  0157E8  0100               	movlb	0	; () banked
 14549  0157EA  5175               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14550  0157EC  0100               	movlb	0	; () banked
 14551  0157EE  5B73               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 14552                           
 14553                           ; BSR set to: 0
 14554  0157F0  0100               	movlb	0	; () banked
 14555  0157F2  8176               	bsf	___lwdiv@quotient& (0+255),0,b
 14556  0157F4  D000               	goto	l4602
 14557  0157F6                     l4602:
 14558                           
 14559                           ; BSR set to: 0
 14560  0157F6  0100               	movlb	0	; () banked
 14561  0157F8  90D8               	bcf	status,0,c
 14562  0157FA  3375               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 14563  0157FC  3374               	rrcf	___lwdiv@divisor& (0+255),f,b
 14564                           
 14565                           ; BSR set to: 0
 14566  0157FE  0100               	movlb	0	; () banked
 14567  015800  2F78               	decfsz	___lwdiv@counter& (0+255),f,b
 14568  015802  D7E0               	goto	l4594
 14569  015804  D000               	goto	l1625
 14570  015806                     l1625:
 14571                           
 14572                           ; BSR set to: 0
 14573  015806  C076  F072         	movff	___lwdiv@quotient,?___lwdiv
 14574  01580A  C077  F073         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14575                           
 14576                           ; BSR set to: 0
 14577  01580E  0012               	return		;funcret
 14578  015810                     __end_of___lwdiv:
 14579                           	opt stack 0
 14580                           tblptru	equ	0xFF8
 14581                           tblptrh	equ	0xFF7
 14582                           tblptrl	equ	0xFF6
 14583                           tablat	equ	0xFF5
 14584                           prodh	equ	0xFF4
 14585                           prodl	equ	0xFF3
 14586                           intcon	equ	0xFF2
 14587                           postinc0	equ	0xFEE
 14588                           wreg	equ	0xFE8
 14589                           indf1	equ	0xFE7
 14590                           plusw1	equ	0xFE3
 14591                           fsr1h	equ	0xFE2
 14592                           fsr1l	equ	0xFE1
 14593                           indf2	equ	0xFDF
 14594                           postinc2	equ	0xFDE
 14595                           plusw2	equ	0xFDB
 14596                           fsr2h	equ	0xFDA
 14597                           fsr2l	equ	0xFD9
 14598                           status	equ	0xFD8
 14599                           
 14600 ;; *************** function _LCD_write_string *****************
 14601 ;; Defined at:
 14602 ;;		line 194 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14603 ;; Parameters:    Size  Location     Type
 14604 ;;  buffer          2   35[BANK0 ] PTR unsigned char 
 14605 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 14606 ;; Auto vars:     Size  Location     Type
 14607 ;;		None
 14608 ;; Return value:  Size  Location     Type
 14609 ;;		None               void
 14610 ;; Registers used:
 14611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14612 ;; Tracked objects:
 14613 ;;		On entry : 0/0
 14614 ;;		On exit  : 0/0
 14615 ;;		Unchanged: 0/0
 14616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14617 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14620 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14621 ;;Total ram usage:        2 bytes
 14622 ;; Hardware stack levels used:    1
 14623 ;; Hardware stack levels required when called:    8
 14624 ;; This function calls:
 14625 ;;		_LCD_write_char
 14626 ;; This function is called by:
 14627 ;;		_LCD_write_integer
 14628 ;;		_LCD_Handler
 14629 ;; This function uses a non-reentrant model
 14630 ;;
 14631                           
 14632                           	psect	text37
 14633  015E86                     __ptext37:
 14634                           	opt stack 0
 14635  015E86                     _LCD_write_string:
 14636                           	opt stack 21
 14637                           
 14638                           ;src\LCD_44780.c: 197: while(*buffer){
 14639                           
 14640                           ; BSR set to: 0
 14641                           ;incstack = 0
 14642  015E86  D00B               	goto	l7592
 14643  015E88                     l7588:
 14644                           
 14645                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 14646  015E88  C083  FFD9         	movff	LCD_write_string@buffer,fsr2l
 14647  015E8C  C084  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 14648  015E90  50DF               	movf	indf2,w,c
 14649  015E92  EC7C  F0AB         	call	_LCD_write_char
 14650                           
 14651                           ;src\LCD_44780.c: 202: buffer++;
 14652  015E96  0100               	movlb	0	; () banked
 14653  015E98  4B83               	infsnz	LCD_write_string@buffer& (0+255),f,b
 14654  015E9A  2B84               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 14655  015E9C  D000               	goto	l7592
 14656  015E9E                     l7592:
 14657  015E9E  C083  FFD9         	movff	LCD_write_string@buffer,fsr2l
 14658  015EA2  C084  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 14659  015EA6  50DF               	movf	indf2,w,c
 14660  015EA8  A4D8               	btfss	status,2,c
 14661  015EAA  D7EE               	goto	l7588
 14662  015EAC  0012               	return		;funcret
 14663  015EAE                     __end_of_LCD_write_string:
 14664                           	opt stack 0
 14665                           tblptru	equ	0xFF8
 14666                           tblptrh	equ	0xFF7
 14667                           tblptrl	equ	0xFF6
 14668                           tablat	equ	0xFF5
 14669                           prodh	equ	0xFF4
 14670                           prodl	equ	0xFF3
 14671                           intcon	equ	0xFF2
 14672                           postinc0	equ	0xFEE
 14673                           wreg	equ	0xFE8
 14674                           indf1	equ	0xFE7
 14675                           plusw1	equ	0xFE3
 14676                           fsr1h	equ	0xFE2
 14677                           fsr1l	equ	0xFE1
 14678                           indf2	equ	0xFDF
 14679                           postinc2	equ	0xFDE
 14680                           plusw2	equ	0xFDB
 14681                           fsr2h	equ	0xFDA
 14682                           fsr2l	equ	0xFD9
 14683                           status	equ	0xFD8
 14684                           
 14685 ;; *************** function _LCD_goto_xy *****************
 14686 ;; Defined at:
 14687 ;;		line 136 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14688 ;; Parameters:    Size  Location     Type
 14689 ;;  x               1    wreg     unsigned char 
 14690 ;;  y               1   33[BANK0 ] unsigned char 
 14691 ;; Auto vars:     Size  Location     Type
 14692 ;;  x               1   34[BANK0 ] unsigned char 
 14693 ;; Return value:  Size  Location     Type
 14694 ;;		None               void
 14695 ;; Registers used:
 14696 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14697 ;; Tracked objects:
 14698 ;;		On entry : 0/0
 14699 ;;		On exit  : 0/0
 14700 ;;		Unchanged: 0/0
 14701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14702 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14703 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14705 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14706 ;;Total ram usage:        2 bytes
 14707 ;; Hardware stack levels used:    1
 14708 ;; Hardware stack levels required when called:    8
 14709 ;; This function calls:
 14710 ;;		_LCD_goto_line
 14711 ;;		_LCD_shift_cursor
 14712 ;; This function is called by:
 14713 ;;		_LCD_Handler
 14714 ;; This function uses a non-reentrant model
 14715 ;;
 14716                           
 14717                           	psect	text38
 14718  015F16                     __ptext38:
 14719                           	opt stack 0
 14720  015F16                     _LCD_goto_xy:
 14721                           	opt stack 21
 14722                           
 14723                           ;incstack = 0
 14724                           ;LCD_goto_xy@x stored from wreg
 14725  015F16  0100               	movlb	0	; () banked
 14726  015F18  6F82               	movwf	LCD_goto_xy@x& (0+255),b
 14727                           
 14728                           ; BSR set to: 0
 14729                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 14730  015F1A  0100               	movlb	0	; () banked
 14731  015F1C  5181               	movf	LCD_goto_xy@y& (0+255),w,b
 14732  015F1E  EC7A  F0A8         	call	_LCD_goto_line
 14733                           
 14734                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 14735  015F22  0100               	movlb	0	; () banked
 14736  015F24  0582               	decf	LCD_goto_xy@x& (0+255),w,b
 14737  015F26  0100               	movlb	0	; () banked
 14738  015F28  6F7E               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 14739  015F2A  0E01               	movlw	1
 14740  015F2C  EC68  F0AD         	call	_LCD_shift_cursor
 14741  015F30  0012               	return		;funcret
 14742  015F32                     __end_of_LCD_goto_xy:
 14743                           	opt stack 0
 14744                           tblptru	equ	0xFF8
 14745                           tblptrh	equ	0xFF7
 14746                           tblptrl	equ	0xFF6
 14747                           tablat	equ	0xFF5
 14748                           prodh	equ	0xFF4
 14749                           prodl	equ	0xFF3
 14750                           intcon	equ	0xFF2
 14751                           postinc0	equ	0xFEE
 14752                           wreg	equ	0xFE8
 14753                           indf1	equ	0xFE7
 14754                           plusw1	equ	0xFE3
 14755                           fsr1h	equ	0xFE2
 14756                           fsr1l	equ	0xFE1
 14757                           indf2	equ	0xFDF
 14758                           postinc2	equ	0xFDE
 14759                           plusw2	equ	0xFDB
 14760                           fsr2h	equ	0xFDA
 14761                           fsr2l	equ	0xFD9
 14762                           status	equ	0xFD8
 14763                           
 14764 ;; *************** function _LCD_shift_cursor *****************
 14765 ;; Defined at:
 14766 ;;		line 98 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 14767 ;; Parameters:    Size  Location     Type
 14768 ;;  shift           1    wreg     unsigned char 
 14769 ;;  number_of_sh    1   30[BANK0 ] unsigned char 
 14770 ;; Auto vars:     Size  Location     Type
 14771 ;;  shift           1   31[BANK0 ] unsigned char 
 14772 ;;  i               1   32[BANK0 ] unsigned char 
 14773 ;; Return value:  Size  Location     Type
 14774 ;;		None               void
 14775 ;; Registers used:
 14776 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14777 ;; Tracked objects:
 14778 ;;		On entry : 0/0
 14779 ;;		On exit  : 0/0
 14780 ;;		Unchanged: 0/0
 14781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14782 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14783 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14785 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14786 ;;Total ram usage:        3 bytes
 14787 ;; Hardware stack levels used:    1
 14788 ;; Hardware stack levels required when called:    7
 14789 ;; This function calls:
 14790 ;;		_LCD_send_command
 14791 ;; This function is called by:
 14792 ;;		_LCD_goto_xy
 14793 ;; This function uses a non-reentrant model
 14794 ;;
 14795                           
 14796                           	psect	text39
 14797  015AD0                     __ptext39:
 14798                           	opt stack 0
 14799  015AD0                     _LCD_shift_cursor:
 14800                           	opt stack 21
 14801                           
 14802                           ;incstack = 0
 14803                           ;LCD_shift_cursor@shift stored from wreg
 14804  015AD0  0100               	movlb	0	; () banked
 14805  015AD2  6F7F               	movwf	LCD_shift_cursor@shift& (0+255),b
 14806                           
 14807                           ; BSR set to: 0
 14808                           ;src\LCD_44780.c: 100: unsigned char i;
 14809                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 14810  015AD4  0E00               	movlw	0
 14811  015AD6  0100               	movlb	0	; () banked
 14812  015AD8  6F80               	movwf	LCD_shift_cursor@i& (0+255),b
 14813  015ADA  D01A               	goto	l7572
 14814  015ADC                     l7568:
 14815                           
 14816                           ; BSR set to: 0
 14817                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 14818  015ADC  0E00               	movlw	0
 14819  015ADE  0100               	movlb	0	; () banked
 14820  015AE0  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 14821  015AE2  0E00               	movlw	0
 14822  015AE4  0100               	movlb	0	; () banked
 14823  015AE6  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14824  015AE8  0E01               	movlw	1
 14825  015AEA  0100               	movlb	0	; () banked
 14826  015AEC  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14827  015AEE  0E00               	movlw	0
 14828  015AF0  EC3B  F0AE         	call	_LCD_send_command
 14829                           
 14830                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 14831  015AF4  C07F  F07A         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 14832  015AF8  0E00               	movlw	0
 14833  015AFA  0100               	movlb	0	; () banked
 14834  015AFC  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 14835  015AFE  0E00               	movlw	0
 14836  015B00  0100               	movlb	0	; () banked
 14837  015B02  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 14838  015B04  0E00               	movlw	0
 14839  015B06  EC3B  F0AE         	call	_LCD_send_command
 14840  015B0A  0100               	movlb	0	; () banked
 14841  015B0C  2B80               	incf	LCD_shift_cursor@i& (0+255),f,b
 14842  015B0E  D000               	goto	l7572
 14843  015B10                     l7572:
 14844                           
 14845                           ; BSR set to: 0
 14846  015B10  0100               	movlb	0	; () banked
 14847  015B12  517E               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 14848  015B14  0100               	movlb	0	; () banked
 14849  015B16  5D80               	subwf	LCD_shift_cursor@i& (0+255),w,b
 14850  015B18  A0D8               	btfss	status,0,c
 14851  015B1A  D7E0               	goto	l7568
 14852                           
 14853                           ; BSR set to: 0
 14854                           
 14855                           ; BSR set to: 0
 14856  015B1C  0012               	return		;funcret
 14857  015B1E                     __end_of_LCD_shift_cursor:
 14858                           	opt stack 0
 14859                           tblptru	equ	0xFF8
 14860                           tblptrh	equ	0xFF7
 14861                           tblptrl	equ	0xFF6
 14862                           tablat	equ	0xFF5
 14863                           prodh	equ	0xFF4
 14864                           prodl	equ	0xFF3
 14865                           intcon	equ	0xFF2
 14866                           postinc0	equ	0xFEE
 14867                           wreg	equ	0xFE8
 14868                           indf1	equ	0xFE7
 14869                           plusw1	equ	0xFE3
 14870                           fsr1h	equ	0xFE2
 14871                           fsr1l	equ	0xFE1
 14872                           indf2	equ	0xFDF
 14873                           postinc2	equ	0xFDE
 14874                           plusw2	equ	0xFDB
 14875                           fsr2h	equ	0xFDA
 14876                           fsr2l	equ	0xFD9
 14877                           status	equ	0xFD8
 14878                           
 14879 ;; *************** function _LCD_Gap *****************
 14880 ;; Defined at:
 14881 ;;		line 518 in file "RemoteCan.c"
 14882 ;; Parameters:    Size  Location     Type
 14883 ;;		None
 14884 ;; Auto vars:     Size  Location     Type
 14885 ;;		None
 14886 ;; Return value:  Size  Location     Type
 14887 ;;		None               void
 14888 ;; Registers used:
 14889 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14890 ;; Tracked objects:
 14891 ;;		On entry : 0/0
 14892 ;;		On exit  : 0/0
 14893 ;;		Unchanged: 0/0
 14894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14899 ;;Total ram usage:        0 bytes
 14900 ;; Hardware stack levels used:    1
 14901 ;; Hardware stack levels required when called:    9
 14902 ;; This function calls:
 14903 ;;		_LCD_clear
 14904 ;;		_LCD_goto_line
 14905 ;;		_LCD_initialize
 14906 ;;		_LCD_write_message
 14907 ;; This function is called by:
 14908 ;;		_main
 14909 ;; This function uses a non-reentrant model
 14910 ;;
 14911                           
 14912                           	psect	text40
 14913  015944                     __ptext40:
 14914                           	opt stack 0
 14915  015944                     _LCD_Gap:
 14916                           	opt stack 21
 14917                           
 14918                           ;RemoteCan.c: 519: LCD_initialize(16);
 14919                           
 14920                           ; BSR set to: 0
 14921                           ;incstack = 0
 14922  015944  0E10               	movlw	16
 14923  015946  EC6D  F0A5         	call	_LCD_initialize
 14924                           
 14925                           ;RemoteCan.c: 520: LCD_clear();
 14926  01594A  EC13  F0AF         	call	_LCD_clear	;wreg free
 14927                           
 14928                           ;RemoteCan.c: 521: LCD_goto_line(1);
 14929  01594E  0E01               	movlw	1
 14930  015950  EC7A  F0A8         	call	_LCD_goto_line
 14931                           
 14932                           ;RemoteCan.c: 522: LCD_write_message("= PARKING MESSAGES =");
 14933  015954  0E2A               	movlw	low STR_19
 14934  015956  0100               	movlb	0	; () banked
 14935  015958  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 14936  01595A  0EFF               	movlw	high STR_19
 14937  01595C  0100               	movlb	0	; () banked
 14938  01595E  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14939  015960  ECAC  F0AE         	call	_LCD_write_message	;wreg free
 14940                           
 14941                           ;RemoteCan.c: 523: LCD_goto_line(2);
 14942  015964  0E02               	movlw	2
 14943  015966  EC7A  F0A8         	call	_LCD_goto_line
 14944                           
 14945                           ;RemoteCan.c: 524: LCD_write_message(" Parking space FOUND");
 14946  01596A  0E7E               	movlw	low STR_20
 14947  01596C  0100               	movlb	0	; () banked
 14948  01596E  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 14949  015970  0EFF               	movlw	high STR_20
 14950  015972  0100               	movlb	0	; () banked
 14951  015974  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14952  015976  ECAC  F0AE         	call	_LCD_write_message	;wreg free
 14953                           
 14954                           ;RemoteCan.c: 525: LCD_goto_line(3);
 14955  01597A  0E03               	movlw	3
 14956  01597C  EC7A  F0A8         	call	_LCD_goto_line
 14957                           
 14958                           ;RemoteCan.c: 526: LCD_write_message("->  KEEP MOVING   <-");
 14959  015980  0ED6               	movlw	low STR_21
 14960  015982  0100               	movlb	0	; () banked
 14961  015984  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 14962  015986  0EFE               	movlw	high STR_21
 14963  015988  0100               	movlb	0	; () banked
 14964  01598A  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14965  01598C  ECAC  F0AE         	call	_LCD_write_message	;wreg free
 14966                           
 14967                           ;RemoteCan.c: 527: LCD_goto_line(4);
 14968  015990  0E04               	movlw	4
 14969  015992  EC7A  F0A8         	call	_LCD_goto_line
 14970                           
 14971                           ;RemoteCan.c: 528: LCD_write_message(" until next message ");
 14972  015996  0E82               	movlw	low STR_22
 14973  015998  0100               	movlb	0	; () banked
 14974  01599A  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 14975  01599C  0EFE               	movlw	high STR_22
 14976  01599E  0100               	movlb	0	; () banked
 14977  0159A0  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 14978  0159A2  ECAC  F0AE         	call	_LCD_write_message	;wreg free
 14979  0159A6  0012               	return		;funcret
 14980  0159A8                     __end_of_LCD_Gap:
 14981                           	opt stack 0
 14982                           tblptru	equ	0xFF8
 14983                           tblptrh	equ	0xFF7
 14984                           tblptrl	equ	0xFF6
 14985                           tablat	equ	0xFF5
 14986                           prodh	equ	0xFF4
 14987                           prodl	equ	0xFF3
 14988                           intcon	equ	0xFF2
 14989                           postinc0	equ	0xFEE
 14990                           wreg	equ	0xFE8
 14991                           indf1	equ	0xFE7
 14992                           plusw1	equ	0xFE3
 14993                           fsr1h	equ	0xFE2
 14994                           fsr1l	equ	0xFE1
 14995                           indf2	equ	0xFDF
 14996                           postinc2	equ	0xFDE
 14997                           plusw2	equ	0xFDB
 14998                           fsr2h	equ	0xFDA
 14999                           fsr2l	equ	0xFD9
 15000                           status	equ	0xFD8
 15001                           
 15002 ;; *************** function _LCD_Error *****************
 15003 ;; Defined at:
 15004 ;;		line 570 in file "RemoteCan.c"
 15005 ;; Parameters:    Size  Location     Type
 15006 ;;		None
 15007 ;; Auto vars:     Size  Location     Type
 15008 ;;		None
 15009 ;; Return value:  Size  Location     Type
 15010 ;;		None               void
 15011 ;; Registers used:
 15012 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15013 ;; Tracked objects:
 15014 ;;		On entry : 0/0
 15015 ;;		On exit  : 0/0
 15016 ;;		Unchanged: 0/0
 15017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15022 ;;Total ram usage:        0 bytes
 15023 ;; Hardware stack levels used:    1
 15024 ;; Hardware stack levels required when called:    9
 15025 ;; This function calls:
 15026 ;;		_LCD_clear
 15027 ;;		_LCD_goto_line
 15028 ;;		_LCD_initialize
 15029 ;;		_LCD_write_message
 15030 ;; This function is called by:
 15031 ;;		_main
 15032 ;; This function uses a non-reentrant model
 15033 ;;
 15034                           
 15035                           	psect	text41
 15036  0159A8                     __ptext41:
 15037                           	opt stack 0
 15038  0159A8                     _LCD_Error:
 15039                           	opt stack 21
 15040                           
 15041                           ;RemoteCan.c: 571: LCD_initialize(16);
 15042                           
 15043                           ;incstack = 0
 15044  0159A8  0E10               	movlw	16
 15045  0159AA  EC6D  F0A5         	call	_LCD_initialize
 15046                           
 15047                           ;RemoteCan.c: 572: LCD_clear();
 15048  0159AE  EC13  F0AF         	call	_LCD_clear	;wreg free
 15049                           
 15050                           ;RemoteCan.c: 573: LCD_goto_line(1);
 15051  0159B2  0E01               	movlw	1
 15052  0159B4  EC7A  F0A8         	call	_LCD_goto_line
 15053                           
 15054                           ;RemoteCan.c: 574: LCD_write_message("= PARKING MESSAGES =");
 15055  0159B8  0E2A               	movlw	low STR_19
 15056  0159BA  0100               	movlb	0	; () banked
 15057  0159BC  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15058  0159BE  0EFF               	movlw	high STR_19
 15059  0159C0  0100               	movlb	0	; () banked
 15060  0159C2  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15061  0159C4  ECAC  F0AE         	call	_LCD_write_message	;wreg free
 15062                           
 15063                           ;RemoteCan.c: 575: LCD_goto_line(2);
 15064  0159C8  0E02               	movlw	2
 15065  0159CA  EC7A  F0A8         	call	_LCD_goto_line
 15066                           
 15067                           ;RemoteCan.c: 576: LCD_write_message(" Parking procedures ");
 15068  0159CE  0EAC               	movlw	low STR_32
 15069  0159D0  0100               	movlb	0	; () banked
 15070  0159D2  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15071  0159D4  0EFE               	movlw	high STR_32
 15072  0159D6  0100               	movlb	0	; () banked
 15073  0159D8  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15074  0159DA  ECAC  F0AE         	call	_LCD_write_message	;wreg free
 15075                           
 15076                           ;RemoteCan.c: 577: LCD_goto_line(3);
 15077  0159DE  0E03               	movlw	3
 15078  0159E0  EC7A  F0A8         	call	_LCD_goto_line
 15079                           
 15080                           ;RemoteCan.c: 578: LCD_write_message("       FAILED!      ");
 15081  0159E4  0E04               	movlw	low STR_37
 15082  0159E6  0100               	movlb	0	; () banked
 15083  0159E8  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15084  0159EA  0EFE               	movlw	high STR_37
 15085  0159EC  0100               	movlb	0	; () banked
 15086  0159EE  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15087  0159F0  ECAC  F0AE         	call	_LCD_write_message	;wreg free
 15088                           
 15089                           ;RemoteCan.c: 579: LCD_goto_line(4);
 15090  0159F4  0E04               	movlw	4
 15091  0159F6  EC7A  F0A8         	call	_LCD_goto_line
 15092                           
 15093                           ;RemoteCan.c: 580: LCD_write_message("   due to an error  ");
 15094  0159FA  0E6D               	movlw	low STR_38
 15095  0159FC  0100               	movlb	0	; () banked
 15096  0159FE  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15097  015A00  0EFE               	movlw	high STR_38
 15098  015A02  0100               	movlb	0	; () banked
 15099  015A04  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15100  015A06  ECAC  F0AE         	call	_LCD_write_message	;wreg free
 15101  015A0A  0012               	return		;funcret
 15102  015A0C                     __end_of_LCD_Error:
 15103                           	opt stack 0
 15104                           tblptru	equ	0xFF8
 15105                           tblptrh	equ	0xFF7
 15106                           tblptrl	equ	0xFF6
 15107                           tablat	equ	0xFF5
 15108                           prodh	equ	0xFF4
 15109                           prodl	equ	0xFF3
 15110                           intcon	equ	0xFF2
 15111                           postinc0	equ	0xFEE
 15112                           wreg	equ	0xFE8
 15113                           indf1	equ	0xFE7
 15114                           plusw1	equ	0xFE3
 15115                           fsr1h	equ	0xFE2
 15116                           fsr1l	equ	0xFE1
 15117                           indf2	equ	0xFDF
 15118                           postinc2	equ	0xFDE
 15119                           plusw2	equ	0xFDB
 15120                           fsr2h	equ	0xFDA
 15121                           fsr2l	equ	0xFD9
 15122                           status	equ	0xFD8
 15123                           
 15124 ;; *************** function _LCD_End *****************
 15125 ;; Defined at:
 15126 ;;		line 557 in file "RemoteCan.c"
 15127 ;; Parameters:    Size  Location     Type
 15128 ;;		None
 15129 ;; Auto vars:     Size  Location     Type
 15130 ;;		None
 15131 ;; Return value:  Size  Location     Type
 15132 ;;		None               void
 15133 ;; Registers used:
 15134 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15135 ;; Tracked objects:
 15136 ;;		On entry : 0/0
 15137 ;;		On exit  : 0/0
 15138 ;;		Unchanged: 0/0
 15139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15144 ;;Total ram usage:        0 bytes
 15145 ;; Hardware stack levels used:    1
 15146 ;; Hardware stack levels required when called:    9
 15147 ;; This function calls:
 15148 ;;		_LCD_clear
 15149 ;;		_LCD_goto_line
 15150 ;;		_LCD_initialize
 15151 ;;		_LCD_write_message
 15152 ;; This function is called by:
 15153 ;;		_main
 15154 ;; This function uses a non-reentrant model
 15155 ;;
 15156                           
 15157                           	psect	text42
 15158  015A0C                     __ptext42:
 15159                           	opt stack 0
 15160  015A0C                     _LCD_End:
 15161                           	opt stack 21
 15162                           
 15163                           ;RemoteCan.c: 558: LCD_initialize(16);
 15164                           
 15165                           ;incstack = 0
 15166  015A0C  0E10               	movlw	16
 15167  015A0E  EC6D  F0A5         	call	_LCD_initialize
 15168                           
 15169                           ;RemoteCan.c: 559: LCD_clear();
 15170  015A12  EC13  F0AF         	call	_LCD_clear	;wreg free
 15171                           
 15172                           ;RemoteCan.c: 560: LCD_goto_line(1);
 15173  015A16  0E01               	movlw	1
 15174  015A18  EC7A  F0A8         	call	_LCD_goto_line
 15175                           
 15176                           ;RemoteCan.c: 561: LCD_write_message("= PARKING MESSAGES =");
 15177  015A1C  0E2A               	movlw	low STR_19
 15178  015A1E  0100               	movlb	0	; () banked
 15179  015A20  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15180  015A22  0EFF               	movlw	high STR_19
 15181  015A24  0100               	movlb	0	; () banked
 15182  015A26  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15183  015A28  ECAC  F0AE         	call	_LCD_write_message	;wreg free
 15184                           
 15185                           ;RemoteCan.c: 562: LCD_goto_line(2);
 15186  015A2C  0E02               	movlw	2
 15187  015A2E  EC7A  F0A8         	call	_LCD_goto_line
 15188                           
 15189                           ;RemoteCan.c: 563: LCD_write_message(" Parking procedures ");
 15190  015A32  0EAC               	movlw	low STR_32
 15191  015A34  0100               	movlb	0	; () banked
 15192  015A36  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15193  015A38  0EFE               	movlw	high STR_32
 15194  015A3A  0100               	movlb	0	; () banked
 15195  015A3C  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15196  015A3E  ECAC  F0AE         	call	_LCD_write_message	;wreg free
 15197                           
 15198                           ;RemoteCan.c: 564: LCD_goto_line(3);
 15199  015A42  0E03               	movlw	3
 15200  015A44  EC7A  F0A8         	call	_LCD_goto_line
 15201                           
 15202                           ;RemoteCan.c: 565: LCD_write_message("    SUCCESSFULLY    ");
 15203  015A48  0E2E               	movlw	low STR_33
 15204  015A4A  0100               	movlb	0	; () banked
 15205  015A4C  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15206  015A4E  0EFE               	movlw	high STR_33
 15207  015A50  0100               	movlb	0	; () banked
 15208  015A52  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15209  015A54  ECAC  F0AE         	call	_LCD_write_message	;wreg free
 15210                           
 15211                           ;RemoteCan.c: 566: LCD_goto_line(4);
 15212  015A58  0E04               	movlw	4
 15213  015A5A  EC7A  F0A8         	call	_LCD_goto_line
 15214                           
 15215                           ;RemoteCan.c: 567: LCD_write_message("     COMPLETED!     ");
 15216  015A5E  0E19               	movlw	low STR_34
 15217  015A60  0100               	movlb	0	; () banked
 15218  015A62  6F83               	movwf	LCD_write_message@buffer& (0+255),b
 15219  015A64  0EFE               	movlw	high STR_34
 15220  015A66  0100               	movlb	0	; () banked
 15221  015A68  6F84               	movwf	(LCD_write_message@buffer+1)& (0+255),b
 15222  015A6A  ECAC  F0AE         	call	_LCD_write_message	;wreg free
 15223  015A6E  0012               	return		;funcret
 15224  015A70                     __end_of_LCD_End:
 15225                           	opt stack 0
 15226                           tblptru	equ	0xFF8
 15227                           tblptrh	equ	0xFF7
 15228                           tblptrl	equ	0xFF6
 15229                           tablat	equ	0xFF5
 15230                           prodh	equ	0xFF4
 15231                           prodl	equ	0xFF3
 15232                           intcon	equ	0xFF2
 15233                           postinc0	equ	0xFEE
 15234                           wreg	equ	0xFE8
 15235                           indf1	equ	0xFE7
 15236                           plusw1	equ	0xFE3
 15237                           fsr1h	equ	0xFE2
 15238                           fsr1l	equ	0xFE1
 15239                           indf2	equ	0xFDF
 15240                           postinc2	equ	0xFDE
 15241                           plusw2	equ	0xFDB
 15242                           fsr2h	equ	0xFDA
 15243                           fsr2l	equ	0xFD9
 15244                           status	equ	0xFD8
 15245                           
 15246 ;; *************** function _LCD_write_message *****************
 15247 ;; Defined at:
 15248 ;;		line 178 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15249 ;; Parameters:    Size  Location     Type
 15250 ;;  buffer          2   35[BANK0 ] PTR const unsigned char 
 15251 ;;		 -> STR_38(21), STR_37(21), STR_36(21), STR_35(21), 
 15252 ;;		 -> STR_34(21), STR_33(21), STR_32(21), STR_31(21), 
 15253 ;;		 -> STR_30(21), STR_29(21), STR_28(21), STR_27(21), 
 15254 ;;		 -> STR_26(21), STR_25(21), STR_24(21), STR_23(21), 
 15255 ;;		 -> STR_22(21), STR_21(21), STR_20(21), STR_19(21), 
 15256 ;;		 -> STR_18(21), STR_17(8), STR_16(8), STR_15(21), 
 15257 ;;		 -> STR_14(5), STR_13(5), STR_12(5), STR_11(21), 
 15258 ;;		 -> STR_10(7), STR_9(14), STR_8(17), STR_7(12), 
 15259 ;;		 -> STR_6(21), STR_4(21), STR_3(21), STR_2(21), 
 15260 ;;		 -> STR_1(21), 
 15261 ;; Auto vars:     Size  Location     Type
 15262 ;;		None
 15263 ;; Return value:  Size  Location     Type
 15264 ;;		None               void
 15265 ;; Registers used:
 15266 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15267 ;; Tracked objects:
 15268 ;;		On entry : 0/0
 15269 ;;		On exit  : 0/0
 15270 ;;		Unchanged: 0/0
 15271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15272 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15275 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15276 ;;Total ram usage:        2 bytes
 15277 ;; Hardware stack levels used:    1
 15278 ;; Hardware stack levels required when called:    8
 15279 ;; This function calls:
 15280 ;;		_LCD_write_char
 15281 ;; This function is called by:
 15282 ;;		_main
 15283 ;;		_LCD_Handler
 15284 ;;		_LCD_Gap
 15285 ;;		_LCD_Park
 15286 ;;		_LCD_Parking
 15287 ;;		_LCD_End
 15288 ;;		_LCD_Error
 15289 ;; This function uses a non-reentrant model
 15290 ;;
 15291                           
 15292                           	psect	text43
 15293  015D58                     __ptext43:
 15294                           	opt stack 0
 15295  015D58                     _LCD_write_message:
 15296                           	opt stack 22
 15297                           
 15298                           ;src\LCD_44780.c: 181: while(*buffer) {
 15299                           
 15300                           ;incstack = 0
 15301  015D58  D00E               	goto	l7910
 15302  015D5A                     l7906:
 15303                           
 15304                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 15305  015D5A  C083  FFF6         	movff	LCD_write_message@buffer,tblptrl
 15306  015D5E  C084  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 15307  015D62                     	if	0	;tblptru may be non-zero
 15308  015D62                     	endif
 15309  015D62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15310  015D62  0E00               	movlw	low (__mediumconst shr (0+16))
 15311  015D64  6EF8               	movwf	tblptru,c
 15312  015D66                     	endif
 15313  015D66  0008               	tblrd		*
 15314  015D68  50F5               	movf	tablat,w,c
 15315  015D6A  EC7C  F0AB         	call	_LCD_write_char
 15316                           
 15317                           ;src\LCD_44780.c: 186: buffer++;
 15318  015D6E  0100               	movlb	0	; () banked
 15319  015D70  4B83               	infsnz	LCD_write_message@buffer& (0+255),f,b
 15320  015D72  2B84               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 15321  015D74  D000               	goto	l7910
 15322  015D76                     l7910:
 15323  015D76  C083  FFF6         	movff	LCD_write_message@buffer,tblptrl
 15324  015D7A  C084  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 15325  015D7E                     	if	0	;tblptru may be non-zero
 15326  015D7E                     	endif
 15327  015D7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15328  015D7E  0E00               	movlw	low (__mediumconst shr (0+16))
 15329  015D80  6EF8               	movwf	tblptru,c
 15330  015D82                     	endif
 15331  015D82  0008               	tblrd		*
 15332  015D84  50F5               	movf	tablat,w,c
 15333  015D86  0900               	iorlw	0
 15334  015D88  A4D8               	btfss	status,2,c
 15335  015D8A  D7E7               	goto	l7906
 15336  015D8C  0012               	return		;funcret
 15337  015D8E                     __end_of_LCD_write_message:
 15338                           	opt stack 0
 15339                           tblptru	equ	0xFF8
 15340                           tblptrh	equ	0xFF7
 15341                           tblptrl	equ	0xFF6
 15342                           tablat	equ	0xFF5
 15343                           prodh	equ	0xFF4
 15344                           prodl	equ	0xFF3
 15345                           intcon	equ	0xFF2
 15346                           postinc0	equ	0xFEE
 15347                           wreg	equ	0xFE8
 15348                           indf1	equ	0xFE7
 15349                           plusw1	equ	0xFE3
 15350                           fsr1h	equ	0xFE2
 15351                           fsr1l	equ	0xFE1
 15352                           indf2	equ	0xFDF
 15353                           postinc2	equ	0xFDE
 15354                           plusw2	equ	0xFDB
 15355                           fsr2h	equ	0xFDA
 15356                           fsr2l	equ	0xFD9
 15357                           status	equ	0xFD8
 15358                           
 15359 ;; *************** function _LCD_write_char *****************
 15360 ;; Defined at:
 15361 ;;		line 145 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15362 ;; Parameters:    Size  Location     Type
 15363 ;;  value           1    wreg     unsigned char 
 15364 ;; Auto vars:     Size  Location     Type
 15365 ;;  value           1   34[BANK0 ] unsigned char 
 15366 ;;  D0              1   33[BANK0 ] unsigned char 
 15367 ;;  D1              1   32[BANK0 ] unsigned char 
 15368 ;;  D2              1   31[BANK0 ] unsigned char 
 15369 ;;  D3              1   30[BANK0 ] unsigned char 
 15370 ;; Return value:  Size  Location     Type
 15371 ;;		None               void
 15372 ;; Registers used:
 15373 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15374 ;; Tracked objects:
 15375 ;;		On entry : 0/0
 15376 ;;		On exit  : 0/0
 15377 ;;		Unchanged: 0/0
 15378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15380 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15382 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15383 ;;Total ram usage:        5 bytes
 15384 ;; Hardware stack levels used:    1
 15385 ;; Hardware stack levels required when called:    7
 15386 ;; This function calls:
 15387 ;;		_LCD_send_command
 15388 ;; This function is called by:
 15389 ;;		_LCD_write_message
 15390 ;;		_LCD_write_string
 15391 ;; This function uses a non-reentrant model
 15392 ;;
 15393                           
 15394                           	psect	text44
 15395  0156F8                     __ptext44:
 15396                           	opt stack 0
 15397  0156F8                     _LCD_write_char:
 15398                           	opt stack 22
 15399                           
 15400                           ;incstack = 0
 15401                           ;LCD_write_char@value stored from wreg
 15402  0156F8  0100               	movlb	0	; () banked
 15403  0156FA  6F82               	movwf	LCD_write_char@value& (0+255),b
 15404                           
 15405                           ; BSR set to: 0
 15406                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 15407                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 15408  0156FC  848D               	bsf	3981,2,c	;volatile
 15409                           
 15410                           ; BSR set to: 0
 15411                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 15412  0156FE  0100               	movlb	0	; () banked
 15413  015700  4582               	rlncf	LCD_write_char@value& (0+255),w,b
 15414  015702  0B01               	andlw	1
 15415  015704  0100               	movlb	0	; () banked
 15416  015706  6F7E               	movwf	LCD_write_char@D3& (0+255),b
 15417                           
 15418                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 15419  015708  0100               	movlb	0	; () banked
 15420  01570A  4582               	rlncf	LCD_write_char@value& (0+255),w,b
 15421  01570C  46E8               	rlncf	wreg,f,c
 15422  01570E  0B03               	andlw	3
 15423  015710  0B01               	andlw	1
 15424  015712  0100               	movlb	0	; () banked
 15425  015714  6F7F               	movwf	LCD_write_char@D2& (0+255),b
 15426                           
 15427                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 15428  015716  0100               	movlb	0	; () banked
 15429  015718  3982               	swapf	LCD_write_char@value& (0+255),w,b
 15430  01571A  42E8               	rrncf	wreg,f,c
 15431  01571C  0B07               	andlw	7
 15432  01571E  0B01               	andlw	1
 15433  015720  0100               	movlb	0	; () banked
 15434  015722  6F80               	movwf	LCD_write_char@D1& (0+255),b
 15435                           
 15436                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 15437  015724  0100               	movlb	0	; () banked
 15438  015726  3982               	swapf	LCD_write_char@value& (0+255),w,b
 15439  015728  0B0F               	andlw	15
 15440  01572A  0B01               	andlw	1
 15441  01572C  0100               	movlb	0	; () banked
 15442  01572E  6F81               	movwf	LCD_write_char@D0& (0+255),b
 15443                           
 15444                           ; BSR set to: 0
 15445                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 15446  015730  C07F  F07A         	movff	LCD_write_char@D2,LCD_send_command@D2
 15447  015734  C080  F07B         	movff	LCD_write_char@D1,LCD_send_command@D1
 15448  015738  C081  F07C         	movff	LCD_write_char@D0,LCD_send_command@D0
 15449  01573C  0100               	movlb	0	; () banked
 15450  01573E  517E               	movf	LCD_write_char@D3& (0+255),w,b
 15451  015740  EC3B  F0AE         	call	_LCD_send_command
 15452                           
 15453                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 15454  015744  0100               	movlb	0	; () banked
 15455  015746  3982               	swapf	LCD_write_char@value& (0+255),w,b
 15456  015748  46E8               	rlncf	wreg,f,c
 15457  01574A  0B1F               	andlw	31
 15458  01574C  0B01               	andlw	1
 15459  01574E  0100               	movlb	0	; () banked
 15460  015750  6F7E               	movwf	LCD_write_char@D3& (0+255),b
 15461                           
 15462                           ; BSR set to: 0
 15463                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 15464  015752  0100               	movlb	0	; () banked
 15465  015754  4182               	rrncf	LCD_write_char@value& (0+255),w,b
 15466  015756  42E8               	rrncf	wreg,f,c
 15467  015758  0B3F               	andlw	63
 15468  01575A  0B01               	andlw	1
 15469  01575C  0100               	movlb	0	; () banked
 15470  01575E  6F7F               	movwf	LCD_write_char@D2& (0+255),b
 15471                           
 15472                           ; BSR set to: 0
 15473                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 15474  015760  0100               	movlb	0	; () banked
 15475  015762  90D8               	bcf	status,0,c
 15476  015764  3182               	rrcf	LCD_write_char@value& (0+255),w,b
 15477  015766  0B01               	andlw	1
 15478  015768  0100               	movlb	0	; () banked
 15479  01576A  6F80               	movwf	LCD_write_char@D1& (0+255),b
 15480                           
 15481                           ; BSR set to: 0
 15482                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 15483  01576C  0100               	movlb	0	; () banked
 15484  01576E  5182               	movf	LCD_write_char@value& (0+255),w,b
 15485  015770  0B01               	andlw	1
 15486  015772  0100               	movlb	0	; () banked
 15487  015774  6F81               	movwf	LCD_write_char@D0& (0+255),b
 15488                           
 15489                           ; BSR set to: 0
 15490                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 15491  015776  C07F  F07A         	movff	LCD_write_char@D2,LCD_send_command@D2
 15492  01577A  C080  F07B         	movff	LCD_write_char@D1,LCD_send_command@D1
 15493  01577E  C081  F07C         	movff	LCD_write_char@D0,LCD_send_command@D0
 15494  015782  0100               	movlb	0	; () banked
 15495  015784  517E               	movf	LCD_write_char@D3& (0+255),w,b
 15496  015786  EC3B  F0AE         	call	_LCD_send_command
 15497                           
 15498                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 15499  01578A  948D               	bcf	3981,2,c	;volatile
 15500  01578C  0012               	return		;funcret
 15501  01578E                     __end_of_LCD_write_char:
 15502                           	opt stack 0
 15503                           tblptru	equ	0xFF8
 15504                           tblptrh	equ	0xFF7
 15505                           tblptrl	equ	0xFF6
 15506                           tablat	equ	0xFF5
 15507                           prodh	equ	0xFF4
 15508                           prodl	equ	0xFF3
 15509                           intcon	equ	0xFF2
 15510                           postinc0	equ	0xFEE
 15511                           wreg	equ	0xFE8
 15512                           indf1	equ	0xFE7
 15513                           plusw1	equ	0xFE3
 15514                           fsr1h	equ	0xFE2
 15515                           fsr1l	equ	0xFE1
 15516                           indf2	equ	0xFDF
 15517                           postinc2	equ	0xFDE
 15518                           plusw2	equ	0xFDB
 15519                           fsr2h	equ	0xFDA
 15520                           fsr2l	equ	0xFD9
 15521                           status	equ	0xFD8
 15522                           
 15523 ;; *************** function _LCD_initialize *****************
 15524 ;; Defined at:
 15525 ;;		line 283 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15526 ;; Parameters:    Size  Location     Type
 15527 ;;  quartz_frequ    1    wreg     unsigned char 
 15528 ;; Auto vars:     Size  Location     Type
 15529 ;;  quartz_frequ    1   32[BANK0 ] unsigned char 
 15530 ;; Return value:  Size  Location     Type
 15531 ;;		None               void
 15532 ;; Registers used:
 15533 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15534 ;; Tracked objects:
 15535 ;;		On entry : 0/0
 15536 ;;		On exit  : 0/0
 15537 ;;		Unchanged: 0/0
 15538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15540 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15542 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15543 ;;Total ram usage:        1 bytes
 15544 ;; Hardware stack levels used:    1
 15545 ;; Hardware stack levels required when called:    8
 15546 ;; This function calls:
 15547 ;;		_LCD_clear
 15548 ;;		_LCD_cursor
 15549 ;;		_LCD_send_command
 15550 ;;		_delay_ms
 15551 ;;		_delay_set_quartz
 15552 ;; This function is called by:
 15553 ;;		_main
 15554 ;;		_LCD_Handler
 15555 ;;		_LCD_Gap
 15556 ;;		_LCD_Park
 15557 ;;		_LCD_Parking
 15558 ;;		_LCD_End
 15559 ;;		_LCD_Error
 15560 ;;		_board_initialization
 15561 ;; This function uses a non-reentrant model
 15562 ;;
 15563                           
 15564                           	psect	text45
 15565  014ADA                     __ptext45:
 15566                           	opt stack 0
 15567  014ADA                     _LCD_initialize:
 15568                           	opt stack 21
 15569                           
 15570                           ;incstack = 0
 15571                           ;LCD_initialize@quartz_frequency stored from wreg
 15572  014ADA  0100               	movlb	0	; () banked
 15573  014ADC  6F80               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 15574                           
 15575                           ; BSR set to: 0
 15576                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 15577  014ADE  0100               	movlb	0	; () banked
 15578  014AE0  5180               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 15579  014AE2  ECD2  F0AF         	call	_delay_set_quartz
 15580                           
 15581                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 15582  014AE6  948D               	bcf	3981,2,c	;volatile
 15583                           
 15584                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 15585  014AE8  928B               	bcf	3979,1,c	;volatile
 15586                           
 15587                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 15588  014AEA  908B               	bcf	3979,0,c	;volatile
 15589                           
 15590                           ;src\LCD_44780.c: 291: delay_ms (100);
 15591  014AEC  0E00               	movlw	0
 15592  014AEE  0100               	movlb	0	; () banked
 15593  014AF0  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15594  014AF2  0E64               	movlw	100
 15595  014AF4  6F78               	movwf	delay_ms@value_ms& (0+255),b
 15596  014AF6  EC58  F0AE         	call	_delay_ms	;wreg free
 15597                           
 15598                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 15599  014AFA  0E00               	movlw	0
 15600  014AFC  0100               	movlb	0	; () banked
 15601  014AFE  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15602  014B00  0E01               	movlw	1
 15603  014B02  0100               	movlb	0	; () banked
 15604  014B04  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15605  014B06  0E01               	movlw	1
 15606  014B08  0100               	movlb	0	; () banked
 15607  014B0A  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15608  014B0C  0E00               	movlw	0
 15609  014B0E  EC3B  F0AE         	call	_LCD_send_command
 15610                           
 15611                           ;src\LCD_44780.c: 293: delay_ms (100);
 15612  014B12  0E00               	movlw	0
 15613  014B14  0100               	movlb	0	; () banked
 15614  014B16  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15615  014B18  0E64               	movlw	100
 15616  014B1A  6F78               	movwf	delay_ms@value_ms& (0+255),b
 15617  014B1C  EC58  F0AE         	call	_delay_ms	;wreg free
 15618                           
 15619                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 15620  014B20  0E00               	movlw	0
 15621  014B22  0100               	movlb	0	; () banked
 15622  014B24  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15623  014B26  0E01               	movlw	1
 15624  014B28  0100               	movlb	0	; () banked
 15625  014B2A  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15626  014B2C  0E01               	movlw	1
 15627  014B2E  0100               	movlb	0	; () banked
 15628  014B30  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15629  014B32  0E00               	movlw	0
 15630  014B34  EC3B  F0AE         	call	_LCD_send_command
 15631                           
 15632                           ;src\LCD_44780.c: 295: delay_ms (10);
 15633  014B38  0E00               	movlw	0
 15634  014B3A  0100               	movlb	0	; () banked
 15635  014B3C  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15636  014B3E  0E0A               	movlw	10
 15637  014B40  6F78               	movwf	delay_ms@value_ms& (0+255),b
 15638  014B42  EC58  F0AE         	call	_delay_ms	;wreg free
 15639                           
 15640                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 15641  014B46  0E00               	movlw	0
 15642  014B48  0100               	movlb	0	; () banked
 15643  014B4A  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15644  014B4C  0E01               	movlw	1
 15645  014B4E  0100               	movlb	0	; () banked
 15646  014B50  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15647  014B52  0E01               	movlw	1
 15648  014B54  0100               	movlb	0	; () banked
 15649  014B56  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15650  014B58  0E00               	movlw	0
 15651  014B5A  EC3B  F0AE         	call	_LCD_send_command
 15652                           
 15653                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 15654  014B5E  0E00               	movlw	0
 15655  014B60  0100               	movlb	0	; () banked
 15656  014B62  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15657  014B64  0E01               	movlw	1
 15658  014B66  0100               	movlb	0	; () banked
 15659  014B68  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15660  014B6A  0E00               	movlw	0
 15661  014B6C  0100               	movlb	0	; () banked
 15662  014B6E  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15663  014B70  0E00               	movlw	0
 15664  014B72  EC3B  F0AE         	call	_LCD_send_command
 15665                           
 15666                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 15667  014B76  0E00               	movlw	0
 15668  014B78  0100               	movlb	0	; () banked
 15669  014B7A  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15670  014B7C  0E01               	movlw	1
 15671  014B7E  0100               	movlb	0	; () banked
 15672  014B80  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15673  014B82  0E00               	movlw	0
 15674  014B84  0100               	movlb	0	; () banked
 15675  014B86  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15676  014B88  0E00               	movlw	0
 15677  014B8A  EC3B  F0AE         	call	_LCD_send_command
 15678                           
 15679                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 15680  014B8E  0E00               	movlw	0
 15681  014B90  0100               	movlb	0	; () banked
 15682  014B92  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15683  014B94  0E00               	movlw	0
 15684  014B96  0100               	movlb	0	; () banked
 15685  014B98  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15686  014B9A  0E00               	movlw	0
 15687  014B9C  0100               	movlb	0	; () banked
 15688  014B9E  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15689  014BA0  0E01               	movlw	1
 15690  014BA2  EC3B  F0AE         	call	_LCD_send_command
 15691                           
 15692                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 15693  014BA6  0E00               	movlw	0
 15694  014BA8  0100               	movlb	0	; () banked
 15695  014BAA  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15696  014BAC  0E00               	movlw	0
 15697  014BAE  0100               	movlb	0	; () banked
 15698  014BB0  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15699  014BB2  0E00               	movlw	0
 15700  014BB4  0100               	movlb	0	; () banked
 15701  014BB6  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15702  014BB8  0E00               	movlw	0
 15703  014BBA  EC3B  F0AE         	call	_LCD_send_command
 15704                           
 15705                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 15706  014BBE  0E00               	movlw	0
 15707  014BC0  0100               	movlb	0	; () banked
 15708  014BC2  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15709  014BC4  0E00               	movlw	0
 15710  014BC6  0100               	movlb	0	; () banked
 15711  014BC8  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15712  014BCA  0E00               	movlw	0
 15713  014BCC  0100               	movlb	0	; () banked
 15714  014BCE  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15715  014BD0  0E01               	movlw	1
 15716  014BD2  EC3B  F0AE         	call	_LCD_send_command
 15717                           
 15718                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 15719  014BD6  0E00               	movlw	0
 15720  014BD8  0100               	movlb	0	; () banked
 15721  014BDA  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15722  014BDC  0E00               	movlw	0
 15723  014BDE  0100               	movlb	0	; () banked
 15724  014BE0  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15725  014BE2  0E00               	movlw	0
 15726  014BE4  0100               	movlb	0	; () banked
 15727  014BE6  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15728  014BE8  0E00               	movlw	0
 15729  014BEA  EC3B  F0AE         	call	_LCD_send_command
 15730                           
 15731                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 15732  014BEE  0E00               	movlw	0
 15733  014BF0  0100               	movlb	0	; () banked
 15734  014BF2  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15735  014BF4  0E00               	movlw	0
 15736  014BF6  0100               	movlb	0	; () banked
 15737  014BF8  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15738  014BFA  0E01               	movlw	1
 15739  014BFC  0100               	movlb	0	; () banked
 15740  014BFE  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15741  014C00  0E00               	movlw	0
 15742  014C02  EC3B  F0AE         	call	_LCD_send_command
 15743                           
 15744                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 15745  014C06  0E00               	movlw	0
 15746  014C08  0100               	movlb	0	; () banked
 15747  014C0A  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15748  014C0C  0E00               	movlw	0
 15749  014C0E  0100               	movlb	0	; () banked
 15750  014C10  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15751  014C12  0E00               	movlw	0
 15752  014C14  0100               	movlb	0	; () banked
 15753  014C16  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15754  014C18  0E00               	movlw	0
 15755  014C1A  EC3B  F0AE         	call	_LCD_send_command
 15756                           
 15757                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 15758  014C1E  0E01               	movlw	1
 15759  014C20  0100               	movlb	0	; () banked
 15760  014C22  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15761  014C24  0E01               	movlw	1
 15762  014C26  0100               	movlb	0	; () banked
 15763  014C28  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15764  014C2A  0E00               	movlw	0
 15765  014C2C  0100               	movlb	0	; () banked
 15766  014C2E  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15767  014C30  0E00               	movlw	0
 15768  014C32  EC3B  F0AE         	call	_LCD_send_command
 15769                           
 15770                           ;src\LCD_44780.c: 312: LCD_clear ();
 15771  014C36  EC13  F0AF         	call	_LCD_clear	;wreg free
 15772                           
 15773                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 15774  014C3A  0E00               	movlw	0
 15775  014C3C  0100               	movlb	0	; () banked
 15776  014C3E  6F7E               	movwf	LCD_cursor@blinking& (0+255),b
 15777  014C40  0E00               	movlw	0
 15778  014C42  ECFA  F0AE         	call	_LCD_cursor
 15779  014C46  0012               	return		;funcret
 15780  014C48                     __end_of_LCD_initialize:
 15781                           	opt stack 0
 15782                           tblptru	equ	0xFF8
 15783                           tblptrh	equ	0xFF7
 15784                           tblptrl	equ	0xFF6
 15785                           tablat	equ	0xFF5
 15786                           prodh	equ	0xFF4
 15787                           prodl	equ	0xFF3
 15788                           intcon	equ	0xFF2
 15789                           postinc0	equ	0xFEE
 15790                           wreg	equ	0xFE8
 15791                           indf1	equ	0xFE7
 15792                           plusw1	equ	0xFE3
 15793                           fsr1h	equ	0xFE2
 15794                           fsr1l	equ	0xFE1
 15795                           indf2	equ	0xFDF
 15796                           postinc2	equ	0xFDE
 15797                           plusw2	equ	0xFDB
 15798                           fsr2h	equ	0xFDA
 15799                           fsr2l	equ	0xFD9
 15800                           status	equ	0xFD8
 15801                           
 15802 ;; *************** function _delay_set_quartz *****************
 15803 ;; Defined at:
 15804 ;;		line 115 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 15805 ;; Parameters:    Size  Location     Type
 15806 ;;  frequency       1    wreg     unsigned char 
 15807 ;; Auto vars:     Size  Location     Type
 15808 ;;  frequency       1   18[BANK0 ] unsigned char 
 15809 ;; Return value:  Size  Location     Type
 15810 ;;		None               void
 15811 ;; Registers used:
 15812 ;;		wreg
 15813 ;; Tracked objects:
 15814 ;;		On entry : 0/0
 15815 ;;		On exit  : 0/0
 15816 ;;		Unchanged: 0/0
 15817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15819 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15821 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15822 ;;Total ram usage:        1 bytes
 15823 ;; Hardware stack levels used:    1
 15824 ;; Hardware stack levels required when called:    3
 15825 ;; This function calls:
 15826 ;;		Nothing
 15827 ;; This function is called by:
 15828 ;;		_LCD_initialize
 15829 ;; This function uses a non-reentrant model
 15830 ;;
 15831                           
 15832                           	psect	text46
 15833  015FA4                     __ptext46:
 15834                           	opt stack 0
 15835  015FA4                     _delay_set_quartz:
 15836                           	opt stack 25
 15837                           
 15838                           ;incstack = 0
 15839                           ;delay_set_quartz@frequency stored from wreg
 15840  015FA4  0100               	movlb	0	; () banked
 15841  015FA6  6F72               	movwf	delay_set_quartz@frequency& (0+255),b
 15842                           
 15843                           ; BSR set to: 0
 15844                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 15845  015FA8  C072  F0ED         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 15846                           
 15847                           ; BSR set to: 0
 15848  015FAC  0012               	return		;funcret
 15849  015FAE                     __end_of_delay_set_quartz:
 15850                           	opt stack 0
 15851                           tblptru	equ	0xFF8
 15852                           tblptrh	equ	0xFF7
 15853                           tblptrl	equ	0xFF6
 15854                           tablat	equ	0xFF5
 15855                           prodh	equ	0xFF4
 15856                           prodl	equ	0xFF3
 15857                           intcon	equ	0xFF2
 15858                           postinc0	equ	0xFEE
 15859                           wreg	equ	0xFE8
 15860                           indf1	equ	0xFE7
 15861                           plusw1	equ	0xFE3
 15862                           fsr1h	equ	0xFE2
 15863                           fsr1l	equ	0xFE1
 15864                           indf2	equ	0xFDF
 15865                           postinc2	equ	0xFDE
 15866                           plusw2	equ	0xFDB
 15867                           fsr2h	equ	0xFDA
 15868                           fsr2l	equ	0xFD9
 15869                           status	equ	0xFD8
 15870                           
 15871 ;; *************** function _LCD_cursor *****************
 15872 ;; Defined at:
 15873 ;;		line 266 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15874 ;; Parameters:    Size  Location     Type
 15875 ;;  active          1    wreg     unsigned char 
 15876 ;;  blinking        1   30[BANK0 ] unsigned char 
 15877 ;; Auto vars:     Size  Location     Type
 15878 ;;  active          1   31[BANK0 ] unsigned char 
 15879 ;; Return value:  Size  Location     Type
 15880 ;;		None               void
 15881 ;; Registers used:
 15882 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15883 ;; Tracked objects:
 15884 ;;		On entry : 0/0
 15885 ;;		On exit  : 0/0
 15886 ;;		Unchanged: 0/0
 15887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15888 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15889 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15891 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15892 ;;Total ram usage:        2 bytes
 15893 ;; Hardware stack levels used:    1
 15894 ;; Hardware stack levels required when called:    7
 15895 ;; This function calls:
 15896 ;;		_LCD_send_command
 15897 ;; This function is called by:
 15898 ;;		_LCD_initialize
 15899 ;; This function uses a non-reentrant model
 15900 ;;
 15901                           
 15902                           	psect	text47
 15903  015DF4                     __ptext47:
 15904                           	opt stack 0
 15905  015DF4                     _LCD_cursor:
 15906                           	opt stack 21
 15907                           
 15908                           ; BSR set to: 0
 15909                           ;incstack = 0
 15910                           ;LCD_cursor@active stored from wreg
 15911  015DF4  0100               	movlb	0	; () banked
 15912  015DF6  6F7F               	movwf	LCD_cursor@active& (0+255),b
 15913                           
 15914                           ; BSR set to: 0
 15915                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 15916  015DF8  0E00               	movlw	0
 15917  015DFA  0100               	movlb	0	; () banked
 15918  015DFC  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15919  015DFE  0E00               	movlw	0
 15920  015E00  0100               	movlb	0	; () banked
 15921  015E02  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 15922  015E04  0E00               	movlw	0
 15923  015E06  0100               	movlb	0	; () banked
 15924  015E08  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 15925  015E0A  0E00               	movlw	0
 15926  015E0C  EC3B  F0AE         	call	_LCD_send_command
 15927                           
 15928                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 15929  015E10  0E01               	movlw	1
 15930  015E12  0100               	movlb	0	; () banked
 15931  015E14  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 15932  015E16  C07F  F07B         	movff	LCD_cursor@active,LCD_send_command@D1
 15933  015E1A  C07E  F07C         	movff	LCD_cursor@blinking,LCD_send_command@D0
 15934  015E1E  0E01               	movlw	1
 15935  015E20  EC3B  F0AE         	call	_LCD_send_command
 15936  015E24  0012               	return		;funcret
 15937  015E26                     __end_of_LCD_cursor:
 15938                           	opt stack 0
 15939                           tblptru	equ	0xFF8
 15940                           tblptrh	equ	0xFF7
 15941                           tblptrl	equ	0xFF6
 15942                           tablat	equ	0xFF5
 15943                           prodh	equ	0xFF4
 15944                           prodl	equ	0xFF3
 15945                           intcon	equ	0xFF2
 15946                           postinc0	equ	0xFEE
 15947                           wreg	equ	0xFE8
 15948                           indf1	equ	0xFE7
 15949                           plusw1	equ	0xFE3
 15950                           fsr1h	equ	0xFE2
 15951                           fsr1l	equ	0xFE1
 15952                           indf2	equ	0xFDF
 15953                           postinc2	equ	0xFDE
 15954                           plusw2	equ	0xFDB
 15955                           fsr2h	equ	0xFDA
 15956                           fsr2l	equ	0xFD9
 15957                           status	equ	0xFD8
 15958                           
 15959 ;; *************** function _LCD_clear *****************
 15960 ;; Defined at:
 15961 ;;		line 257 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 15962 ;; Parameters:    Size  Location     Type
 15963 ;;		None
 15964 ;; Auto vars:     Size  Location     Type
 15965 ;;		None
 15966 ;; Return value:  Size  Location     Type
 15967 ;;		None               void
 15968 ;; Registers used:
 15969 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15970 ;; Tracked objects:
 15971 ;;		On entry : 0/0
 15972 ;;		On exit  : 0/0
 15973 ;;		Unchanged: 0/0
 15974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15979 ;;Total ram usage:        0 bytes
 15980 ;; Hardware stack levels used:    1
 15981 ;; Hardware stack levels required when called:    7
 15982 ;; This function calls:
 15983 ;;		_LCD_send_command
 15984 ;; This function is called by:
 15985 ;;		_LCD_initialize
 15986 ;;		_LCD_Handler
 15987 ;;		_LCD_Gap
 15988 ;;		_LCD_Park
 15989 ;;		_LCD_Parking
 15990 ;;		_LCD_End
 15991 ;;		_LCD_Error
 15992 ;;		_board_initialization
 15993 ;; This function uses a non-reentrant model
 15994 ;;
 15995                           
 15996                           	psect	text48
 15997  015E26                     __ptext48:
 15998                           	opt stack 0
 15999  015E26                     _LCD_clear:
 16000                           	opt stack 21
 16001                           
 16002                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 16003                           
 16004                           ;incstack = 0
 16005  015E26  0E00               	movlw	0
 16006  015E28  0100               	movlb	0	; () banked
 16007  015E2A  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16008  015E2C  0E00               	movlw	0
 16009  015E2E  0100               	movlb	0	; () banked
 16010  015E30  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16011  015E32  0E00               	movlw	0
 16012  015E34  0100               	movlb	0	; () banked
 16013  015E36  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16014  015E38  0E00               	movlw	0
 16015  015E3A  EC3B  F0AE         	call	_LCD_send_command
 16016                           
 16017                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 16018  015E3E  0E00               	movlw	0
 16019  015E40  0100               	movlb	0	; () banked
 16020  015E42  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16021  015E44  0E00               	movlw	0
 16022  015E46  0100               	movlb	0	; () banked
 16023  015E48  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16024  015E4A  0E01               	movlw	1
 16025  015E4C  0100               	movlb	0	; () banked
 16026  015E4E  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16027  015E50  0E00               	movlw	0
 16028  015E52  EC3B  F0AE         	call	_LCD_send_command
 16029  015E56  0012               	return		;funcret
 16030  015E58                     __end_of_LCD_clear:
 16031                           	opt stack 0
 16032                           tblptru	equ	0xFF8
 16033                           tblptrh	equ	0xFF7
 16034                           tblptrl	equ	0xFF6
 16035                           tablat	equ	0xFF5
 16036                           prodh	equ	0xFF4
 16037                           prodl	equ	0xFF3
 16038                           intcon	equ	0xFF2
 16039                           postinc0	equ	0xFEE
 16040                           wreg	equ	0xFE8
 16041                           indf1	equ	0xFE7
 16042                           plusw1	equ	0xFE3
 16043                           fsr1h	equ	0xFE2
 16044                           fsr1l	equ	0xFE1
 16045                           indf2	equ	0xFDF
 16046                           postinc2	equ	0xFDE
 16047                           plusw2	equ	0xFDB
 16048                           fsr2h	equ	0xFDA
 16049                           fsr2l	equ	0xFD9
 16050                           status	equ	0xFD8
 16051                           
 16052 ;; *************** function _LCD_goto_line *****************
 16053 ;; Defined at:
 16054 ;;		line 111 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16055 ;; Parameters:    Size  Location     Type
 16056 ;;  line            1    wreg     unsigned char 
 16057 ;; Auto vars:     Size  Location     Type
 16058 ;;  line            1   30[BANK0 ] unsigned char 
 16059 ;; Return value:  Size  Location     Type
 16060 ;;		None               void
 16061 ;; Registers used:
 16062 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16063 ;; Tracked objects:
 16064 ;;		On entry : 0/0
 16065 ;;		On exit  : 0/0
 16066 ;;		Unchanged: 0/0
 16067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16069 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16071 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16072 ;;Total ram usage:        1 bytes
 16073 ;; Hardware stack levels used:    1
 16074 ;; Hardware stack levels required when called:    7
 16075 ;; This function calls:
 16076 ;;		_LCD_send_command
 16077 ;; This function is called by:
 16078 ;;		_LCD_goto_xy
 16079 ;;		_main
 16080 ;;		_LCD_Handler
 16081 ;;		_LCD_Gap
 16082 ;;		_LCD_Park
 16083 ;;		_LCD_Parking
 16084 ;;		_LCD_End
 16085 ;;		_LCD_Error
 16086 ;;		_board_initialization
 16087 ;; This function uses a non-reentrant model
 16088 ;;
 16089                           
 16090                           	psect	text49
 16091  0150F4                     __ptext49:
 16092                           	opt stack 0
 16093  0150F4                     _LCD_goto_line:
 16094                           	opt stack 22
 16095                           
 16096                           ;incstack = 0
 16097                           ;LCD_goto_line@line stored from wreg
 16098  0150F4  0100               	movlb	0	; () banked
 16099  0150F6  6F7E               	movwf	LCD_goto_line@line& (0+255),b
 16100                           
 16101                           ; BSR set to: 0
 16102                           ;src\LCD_44780.c: 113: switch(line) {
 16103  0150F8  D064               	goto	l7584
 16104  0150FA                     l7576:
 16105                           
 16106                           ; BSR set to: 0
 16107  0150FA  0E00               	movlw	0
 16108  0150FC  0100               	movlb	0	; () banked
 16109  0150FE  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16110  015100  0E00               	movlw	0
 16111  015102  0100               	movlb	0	; () banked
 16112  015104  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16113  015106  0E00               	movlw	0
 16114  015108  0100               	movlb	0	; () banked
 16115  01510A  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16116  01510C  0E01               	movlw	1
 16117  01510E  EC3B  F0AE         	call	_LCD_send_command
 16118                           
 16119                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 16120  015112  0E00               	movlw	0
 16121  015114  0100               	movlb	0	; () banked
 16122  015116  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16123  015118  0E00               	movlw	0
 16124  01511A  0100               	movlb	0	; () banked
 16125  01511C  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16126  01511E  0E00               	movlw	0
 16127  015120  0100               	movlb	0	; () banked
 16128  015122  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16129  015124  0E00               	movlw	0
 16130  015126  EC3B  F0AE         	call	_LCD_send_command
 16131                           
 16132                           ;src\LCD_44780.c: 117: break;
 16133  01512A  0012               	return	
 16134  01512C                     l7578:
 16135  01512C  0E01               	movlw	1
 16136  01512E  0100               	movlb	0	; () banked
 16137  015130  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16138  015132  0E00               	movlw	0
 16139  015134  0100               	movlb	0	; () banked
 16140  015136  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16141  015138  0E00               	movlw	0
 16142  01513A  0100               	movlb	0	; () banked
 16143  01513C  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16144  01513E  0E01               	movlw	1
 16145  015140  EC3B  F0AE         	call	_LCD_send_command
 16146                           
 16147                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 16148  015144  0E00               	movlw	0
 16149  015146  0100               	movlb	0	; () banked
 16150  015148  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16151  01514A  0E00               	movlw	0
 16152  01514C  0100               	movlb	0	; () banked
 16153  01514E  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16154  015150  0E00               	movlw	0
 16155  015152  0100               	movlb	0	; () banked
 16156  015154  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16157  015156  0E00               	movlw	0
 16158  015158  EC3B  F0AE         	call	_LCD_send_command
 16159                           
 16160                           ;src\LCD_44780.c: 121: break;
 16161  01515C  0012               	return	
 16162  01515E                     l7580:
 16163  01515E  0E00               	movlw	0
 16164  015160  0100               	movlb	0	; () banked
 16165  015162  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16166  015164  0E00               	movlw	0
 16167  015166  0100               	movlb	0	; () banked
 16168  015168  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16169  01516A  0E01               	movlw	1
 16170  01516C  0100               	movlb	0	; () banked
 16171  01516E  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16172  015170  0E01               	movlw	1
 16173  015172  EC3B  F0AE         	call	_LCD_send_command
 16174                           
 16175                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 16176  015176  0E01               	movlw	1
 16177  015178  0100               	movlb	0	; () banked
 16178  01517A  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16179  01517C  0E00               	movlw	0
 16180  01517E  0100               	movlb	0	; () banked
 16181  015180  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16182  015182  0E00               	movlw	0
 16183  015184  0100               	movlb	0	; () banked
 16184  015186  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16185  015188  0E00               	movlw	0
 16186  01518A  EC3B  F0AE         	call	_LCD_send_command
 16187                           
 16188                           ;src\LCD_44780.c: 125: break;
 16189  01518E  0012               	return	
 16190  015190                     l7582:
 16191  015190  0E01               	movlw	1
 16192  015192  0100               	movlb	0	; () banked
 16193  015194  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16194  015196  0E00               	movlw	0
 16195  015198  0100               	movlb	0	; () banked
 16196  01519A  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16197  01519C  0E01               	movlw	1
 16198  01519E  0100               	movlb	0	; () banked
 16199  0151A0  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16200  0151A2  0E01               	movlw	1
 16201  0151A4  EC3B  F0AE         	call	_LCD_send_command
 16202                           
 16203                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 16204  0151A8  0E01               	movlw	1
 16205  0151AA  0100               	movlb	0	; () banked
 16206  0151AC  6F7A               	movwf	LCD_send_command@D2& (0+255),b
 16207  0151AE  0E00               	movlw	0
 16208  0151B0  0100               	movlb	0	; () banked
 16209  0151B2  6F7B               	movwf	LCD_send_command@D1& (0+255),b
 16210  0151B4  0E00               	movlw	0
 16211  0151B6  0100               	movlb	0	; () banked
 16212  0151B8  6F7C               	movwf	LCD_send_command@D0& (0+255),b
 16213  0151BA  0E00               	movlw	0
 16214  0151BC  EC3B  F0AE         	call	_LCD_send_command
 16215                           
 16216                           ;src\LCD_44780.c: 129: }
 16217  0151C0  0012               	return	
 16218  0151C2                     l7584:
 16219  0151C2  0100               	movlb	0	; () banked
 16220  0151C4  517E               	movf	LCD_goto_line@line& (0+255),w,b
 16221                           
 16222                           ; Switch size 1, requested type "space"
 16223                           ; Number of cases is 4, Range of values is 1 to 4
 16224                           ; switch strategies available:
 16225                           ; Name         Instructions Cycles
 16226                           ; simple_byte           13     7 (average)
 16227                           ;	Chosen strategy is simple_byte
 16228  0151C6  0A01               	xorlw	1	; case 1
 16229  0151C8  B4D8               	btfsc	status,2,c
 16230  0151CA  D797               	goto	l7576
 16231  0151CC  0A03               	xorlw	3	; case 2
 16232  0151CE  B4D8               	btfsc	status,2,c
 16233  0151D0  D7AD               	goto	l7578
 16234  0151D2  0A01               	xorlw	1	; case 3
 16235  0151D4  B4D8               	btfsc	status,2,c
 16236  0151D6  D7C3               	goto	l7580
 16237  0151D8  0A07               	xorlw	7	; case 4
 16238  0151DA  A4D8               	btfss	status,2,c
 16239  0151DC  0012               	return	
 16240  0151DE  D7D8               	goto	l7582
 16241                           
 16242                           ; BSR set to: 0
 16243  0151E0  0012               	return		;funcret
 16244  0151E2                     __end_of_LCD_goto_line:
 16245                           	opt stack 0
 16246                           tblptru	equ	0xFF8
 16247                           tblptrh	equ	0xFF7
 16248                           tblptrl	equ	0xFF6
 16249                           tablat	equ	0xFF5
 16250                           prodh	equ	0xFF4
 16251                           prodl	equ	0xFF3
 16252                           intcon	equ	0xFF2
 16253                           postinc0	equ	0xFEE
 16254                           wreg	equ	0xFE8
 16255                           indf1	equ	0xFE7
 16256                           plusw1	equ	0xFE3
 16257                           fsr1h	equ	0xFE2
 16258                           fsr1l	equ	0xFE1
 16259                           indf2	equ	0xFDF
 16260                           postinc2	equ	0xFDE
 16261                           plusw2	equ	0xFDB
 16262                           fsr2h	equ	0xFDA
 16263                           fsr2l	equ	0xFD9
 16264                           status	equ	0xFD8
 16265                           
 16266 ;; *************** function _LCD_send_command *****************
 16267 ;; Defined at:
 16268 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16269 ;; Parameters:    Size  Location     Type
 16270 ;;  D3              1    wreg     unsigned char 
 16271 ;;  D2              1   26[BANK0 ] unsigned char 
 16272 ;;  D1              1   27[BANK0 ] unsigned char 
 16273 ;;  D0              1   28[BANK0 ] unsigned char 
 16274 ;; Auto vars:     Size  Location     Type
 16275 ;;  D3              1   29[BANK0 ] unsigned char 
 16276 ;; Return value:  Size  Location     Type
 16277 ;;		None               void
 16278 ;; Registers used:
 16279 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16280 ;; Tracked objects:
 16281 ;;		On entry : 0/0
 16282 ;;		On exit  : 0/0
 16283 ;;		Unchanged: 0/0
 16284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16285 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16288 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16289 ;;Total ram usage:        4 bytes
 16290 ;; Hardware stack levels used:    1
 16291 ;; Hardware stack levels required when called:    6
 16292 ;; This function calls:
 16293 ;;		_LCD_enable_pulse
 16294 ;; This function is called by:
 16295 ;;		_LCD_shift_cursor
 16296 ;;		_LCD_goto_line
 16297 ;;		_LCD_write_char
 16298 ;;		_LCD_clear
 16299 ;;		_LCD_cursor
 16300 ;;		_LCD_initialize
 16301 ;;		_LCD_home
 16302 ;;		_LCD_shift
 16303 ;; This function uses a non-reentrant model
 16304 ;;
 16305                           
 16306                           	psect	text50
 16307  015C76                     __ptext50:
 16308                           	opt stack 0
 16309  015C76                     _LCD_send_command:
 16310                           	opt stack 22
 16311                           
 16312                           ;incstack = 0
 16313                           ;LCD_send_command@D3 stored from wreg
 16314  015C76  0100               	movlb	0	; () banked
 16315  015C78  6F7D               	movwf	LCD_send_command@D3& (0+255),b
 16316                           
 16317                           ; BSR set to: 0
 16318                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 16319  015C7A  0100               	movlb	0	; () banked
 16320  015C7C  B17C               	btfsc	LCD_send_command@D0& (0+255),0,b
 16321  015C7E  D002               	bra	u9005
 16322  015C80  948B               	bcf	3979,2,c	;volatile
 16323  015C82  D001               	bra	u9006
 16324  015C84                     u9005:
 16325  015C84  848B               	bsf	3979,2,c	;volatile
 16326  015C86                     u9006:
 16327                           
 16328                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 16329  015C86  0100               	movlb	0	; () banked
 16330  015C88  B17B               	btfsc	LCD_send_command@D1& (0+255),0,b
 16331  015C8A  D002               	bra	u9015
 16332  015C8C  968B               	bcf	3979,3,c	;volatile
 16333  015C8E  D001               	bra	u9016
 16334  015C90                     u9015:
 16335  015C90  868B               	bsf	3979,3,c	;volatile
 16336  015C92                     u9016:
 16337                           
 16338                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 16339  015C92  0100               	movlb	0	; () banked
 16340  015C94  B17A               	btfsc	LCD_send_command@D2& (0+255),0,b
 16341  015C96  D002               	bra	u9025
 16342  015C98  908C               	bcf	3980,0,c	;volatile
 16343  015C9A  D001               	bra	u9026
 16344  015C9C                     u9025:
 16345  015C9C  808C               	bsf	3980,0,c	;volatile
 16346  015C9E                     u9026:
 16347                           
 16348                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 16349  015C9E  0100               	movlb	0	; () banked
 16350  015CA0  B17D               	btfsc	LCD_send_command@D3& (0+255),0,b
 16351  015CA2  D002               	bra	u9035
 16352  015CA4  928C               	bcf	3980,1,c	;volatile
 16353  015CA6  D001               	bra	u9036
 16354  015CA8                     u9035:
 16355  015CA8  828C               	bsf	3980,1,c	;volatile
 16356  015CAA                     u9036:
 16357                           
 16358                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 16359  015CAA  EC6A  F0AF         	call	_LCD_enable_pulse	;wreg free
 16360  015CAE  0012               	return		;funcret
 16361  015CB0                     __end_of_LCD_send_command:
 16362                           	opt stack 0
 16363                           tblptru	equ	0xFF8
 16364                           tblptrh	equ	0xFF7
 16365                           tblptrl	equ	0xFF6
 16366                           tablat	equ	0xFF5
 16367                           prodh	equ	0xFF4
 16368                           prodl	equ	0xFF3
 16369                           intcon	equ	0xFF2
 16370                           postinc0	equ	0xFEE
 16371                           wreg	equ	0xFE8
 16372                           indf1	equ	0xFE7
 16373                           plusw1	equ	0xFE3
 16374                           fsr1h	equ	0xFE2
 16375                           fsr1l	equ	0xFE1
 16376                           indf2	equ	0xFDF
 16377                           postinc2	equ	0xFDE
 16378                           plusw2	equ	0xFDB
 16379                           fsr2h	equ	0xFDA
 16380                           fsr2l	equ	0xFD9
 16381                           status	equ	0xFD8
 16382                           
 16383 ;; *************** function _LCD_enable_pulse *****************
 16384 ;; Defined at:
 16385 ;;		line 49 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\LCD_44780.c"
 16386 ;; Parameters:    Size  Location     Type
 16387 ;;		None
 16388 ;; Auto vars:     Size  Location     Type
 16389 ;;		None
 16390 ;; Return value:  Size  Location     Type
 16391 ;;		None               void
 16392 ;; Registers used:
 16393 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16394 ;; Tracked objects:
 16395 ;;		On entry : 0/0
 16396 ;;		On exit  : 0/0
 16397 ;;		Unchanged: 0/0
 16398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16403 ;;Total ram usage:        0 bytes
 16404 ;; Hardware stack levels used:    1
 16405 ;; Hardware stack levels required when called:    5
 16406 ;; This function calls:
 16407 ;;		_delay_ms
 16408 ;; This function is called by:
 16409 ;;		_LCD_send_command
 16410 ;; This function uses a non-reentrant model
 16411 ;;
 16412                           
 16413                           	psect	text51
 16414  015ED4                     __ptext51:
 16415                           	opt stack 0
 16416  015ED4                     _LCD_enable_pulse:
 16417                           	opt stack 22
 16418                           
 16419                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 16420                           
 16421                           ;incstack = 0
 16422  015ED4  828B               	bsf	3979,1,c	;volatile
 16423                           
 16424                           ;src\LCD_44780.c: 52: delay_ms (1);
 16425  015ED6  0E00               	movlw	0
 16426  015ED8  0100               	movlb	0	; () banked
 16427  015EDA  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16428  015EDC  0E01               	movlw	1
 16429  015EDE  6F78               	movwf	delay_ms@value_ms& (0+255),b
 16430  015EE0  EC58  F0AE         	call	_delay_ms	;wreg free
 16431                           
 16432                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 16433  015EE4  928B               	bcf	3979,1,c	;volatile
 16434                           
 16435                           ;src\LCD_44780.c: 54: delay_ms (1);
 16436  015EE6  0E00               	movlw	0
 16437  015EE8  0100               	movlb	0	; () banked
 16438  015EEA  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16439  015EEC  0E01               	movlw	1
 16440  015EEE  6F78               	movwf	delay_ms@value_ms& (0+255),b
 16441  015EF0  EC58  F0AE         	call	_delay_ms	;wreg free
 16442  015EF4  0012               	return		;funcret
 16443  015EF6                     __end_of_LCD_enable_pulse:
 16444                           	opt stack 0
 16445                           tblptru	equ	0xFF8
 16446                           tblptrh	equ	0xFF7
 16447                           tblptrl	equ	0xFF6
 16448                           tablat	equ	0xFF5
 16449                           prodh	equ	0xFF4
 16450                           prodl	equ	0xFF3
 16451                           intcon	equ	0xFF2
 16452                           postinc0	equ	0xFEE
 16453                           wreg	equ	0xFE8
 16454                           indf1	equ	0xFE7
 16455                           plusw1	equ	0xFE3
 16456                           fsr1h	equ	0xFE2
 16457                           fsr1l	equ	0xFE1
 16458                           indf2	equ	0xFDF
 16459                           postinc2	equ	0xFDE
 16460                           plusw2	equ	0xFDB
 16461                           fsr2h	equ	0xFDA
 16462                           fsr2l	equ	0xFD9
 16463                           status	equ	0xFD8
 16464                           
 16465 ;; *************** function _delay_ms *****************
 16466 ;; Defined at:
 16467 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 16468 ;; Parameters:    Size  Location     Type
 16469 ;;  value_ms        2   24[BANK0 ] unsigned int 
 16470 ;; Auto vars:     Size  Location     Type
 16471 ;;		None
 16472 ;; Return value:  Size  Location     Type
 16473 ;;		None               void
 16474 ;; Registers used:
 16475 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16476 ;; Tracked objects:
 16477 ;;		On entry : 0/0
 16478 ;;		On exit  : 0/0
 16479 ;;		Unchanged: 0/0
 16480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16481 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16484 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16485 ;;Total ram usage:        2 bytes
 16486 ;; Hardware stack levels used:    1
 16487 ;; Hardware stack levels required when called:    4
 16488 ;; This function calls:
 16489 ;;		___wmul
 16490 ;; This function is called by:
 16491 ;;		_LCD_enable_pulse
 16492 ;;		_LCD_initialize
 16493 ;;		_main
 16494 ;;		_delay_s
 16495 ;; This function uses a non-reentrant model
 16496 ;;
 16497                           
 16498                           	psect	text52
 16499  015CB0                     __ptext52:
 16500                           	opt stack 0
 16501  015CB0                     _delay_ms:
 16502                           	opt stack 26
 16503                           
 16504                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 16505                           
 16506                           ;incstack = 0
 16507  015CB0  C0ED  F072         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 16508  015CB4  0100               	movlb	0	; () banked
 16509  015CB6  6B73               	clrf	(___wmul@multiplier+1)& (0+255),b
 16510  015CB8  C078  F074         	movff	delay_ms@value_ms,___wmul@multiplicand
 16511  015CBC  C079  F075         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 16512  015CC0  EC75  F0AE         	call	___wmul	;wreg free
 16513  015CC4  C072  F0E3         	movff	?___wmul,_clock_counter_reference	;volatile
 16514  015CC8  C073  F0E4         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 16515                           
 16516                           ;src\delay.c: 75: while (clock_counter_reference) {
 16517  015CCC  D007               	goto	l589
 16518  015CCE                     l7300:
 16519                           
 16520                           ;src\delay.c: 85: _delay(240);
 16521  015CCE  0E50               	movlw	80
 16522  015CD0                     u11117:
 16523  015CD0  2EE8               	decfsz	wreg,f,c
 16524  015CD2  D7FE               	goto	u11117
 16525                           
 16526                           ;src\delay.c: 88: clock_counter_reference--;
 16527  015CD4  0100               	movlb	0	; () banked
 16528  015CD6  07E3               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 16529  015CD8  A0D8               	btfss	status,0,c
 16530  015CDA  07E4               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 16531  015CDC                     l589:
 16532  015CDC  0100               	movlb	0	; () banked
 16533  015CDE  51E3               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 16534  015CE0  0100               	movlb	0	; () banked
 16535  015CE2  11E4               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 16536  015CE4  A4D8               	btfss	status,2,c
 16537  015CE6  D7F3               	goto	l7300
 16538                           
 16539                           ; BSR set to: 0
 16540                           
 16541                           ; BSR set to: 0
 16542  015CE8  0012               	return		;funcret
 16543  015CEA                     __end_of_delay_ms:
 16544                           	opt stack 0
 16545                           tblptru	equ	0xFF8
 16546                           tblptrh	equ	0xFF7
 16547                           tblptrl	equ	0xFF6
 16548                           tablat	equ	0xFF5
 16549                           prodh	equ	0xFF4
 16550                           prodl	equ	0xFF3
 16551                           intcon	equ	0xFF2
 16552                           postinc0	equ	0xFEE
 16553                           wreg	equ	0xFE8
 16554                           indf1	equ	0xFE7
 16555                           plusw1	equ	0xFE3
 16556                           fsr1h	equ	0xFE2
 16557                           fsr1l	equ	0xFE1
 16558                           indf2	equ	0xFDF
 16559                           postinc2	equ	0xFDE
 16560                           plusw2	equ	0xFDB
 16561                           fsr2h	equ	0xFDA
 16562                           fsr2l	equ	0xFD9
 16563                           status	equ	0xFD8
 16564                           
 16565 ;; *************** function ___wmul *****************
 16566 ;; Defined at:
 16567 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 16568 ;; Parameters:    Size  Location     Type
 16569 ;;  multiplier      2   18[BANK0 ] unsigned int 
 16570 ;;  multiplicand    2   20[BANK0 ] unsigned int 
 16571 ;; Auto vars:     Size  Location     Type
 16572 ;;  product         2   22[BANK0 ] unsigned int 
 16573 ;; Return value:  Size  Location     Type
 16574 ;;                  2   18[BANK0 ] unsigned int 
 16575 ;; Registers used:
 16576 ;;		wreg, status,2, status,0, prodl, prodh
 16577 ;; Tracked objects:
 16578 ;;		On entry : 0/0
 16579 ;;		On exit  : 0/0
 16580 ;;		Unchanged: 0/0
 16581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16582 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16583 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16585 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16586 ;;Total ram usage:        6 bytes
 16587 ;; Hardware stack levels used:    1
 16588 ;; Hardware stack levels required when called:    3
 16589 ;; This function calls:
 16590 ;;		Nothing
 16591 ;; This function is called by:
 16592 ;;		_delay_ms
 16593 ;;		_sprintf
 16594 ;; This function uses a non-reentrant model
 16595 ;;
 16596                           
 16597                           	psect	text53
 16598  015CEA                     __ptext53:
 16599                           	opt stack 0
 16600  015CEA                     ___wmul:
 16601                           	opt stack 26
 16602                           
 16603                           ; BSR set to: 0
 16604                           ;incstack = 0
 16605  015CEA  0100               	movlb	0	; () banked
 16606  015CEC  5172               	movf	___wmul@multiplier& (0+255),w,b
 16607  015CEE  0100               	movlb	0	; () banked
 16608  015CF0  0374               	mulwf	___wmul@multiplicand& (0+255),b
 16609  015CF2  CFF3 F076          	movff	prodl,___wmul@product
 16610  015CF6  CFF4 F077          	movff	prodh,___wmul@product+1
 16611  015CFA  0100               	movlb	0	; () banked
 16612  015CFC  5172               	movf	___wmul@multiplier& (0+255),w,b
 16613  015CFE  0100               	movlb	0	; () banked
 16614  015D00  0375               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 16615  015D02  50F3               	movf	prodl,w,c
 16616  015D04  0100               	movlb	0	; () banked
 16617  015D06  2777               	addwf	(___wmul@product+1)& (0+255),f,b
 16618  015D08  0100               	movlb	0	; () banked
 16619  015D0A  5173               	movf	(___wmul@multiplier+1)& (0+255),w,b
 16620  015D0C  0100               	movlb	0	; () banked
 16621  015D0E  0374               	mulwf	___wmul@multiplicand& (0+255),b
 16622  015D10  50F3               	movf	prodl,w,c
 16623  015D12  0100               	movlb	0	; () banked
 16624  015D14  2777               	addwf	(___wmul@product+1)& (0+255),f,b
 16625                           
 16626                           ; BSR set to: 0
 16627  015D16  C076  F072         	movff	___wmul@product,?___wmul
 16628  015D1A  C077  F073         	movff	___wmul@product+1,?___wmul+1
 16629  015D1E  0012               	return	
 16630                           
 16631                           ; BSR set to: 0
 16632                           
 16633                           ; BSR set to: 0
 16634  015D20  0012               	return		;funcret
 16635  015D22                     __end_of___wmul:
 16636                           	opt stack 0
 16637                           tblptru	equ	0xFF8
 16638                           tblptrh	equ	0xFF7
 16639                           tblptrl	equ	0xFF6
 16640                           tablat	equ	0xFF5
 16641                           prodh	equ	0xFF4
 16642                           prodl	equ	0xFF3
 16643                           intcon	equ	0xFF2
 16644                           postinc0	equ	0xFEE
 16645                           wreg	equ	0xFE8
 16646                           indf1	equ	0xFE7
 16647                           plusw1	equ	0xFE3
 16648                           fsr1h	equ	0xFE2
 16649                           fsr1l	equ	0xFE1
 16650                           indf2	equ	0xFDF
 16651                           postinc2	equ	0xFDE
 16652                           plusw2	equ	0xFDB
 16653                           fsr2h	equ	0xFDA
 16654                           fsr2l	equ	0xFD9
 16655                           status	equ	0xFD8
 16656                           
 16657 ;; *************** function _Joystick_Polling *****************
 16658 ;; Defined at:
 16659 ;;		line 613 in file "RemoteCan.c"
 16660 ;; Parameters:    Size  Location     Type
 16661 ;;		None
 16662 ;; Auto vars:     Size  Location     Type
 16663 ;;  i               1   18[BANK0 ] unsigned char 
 16664 ;; Return value:  Size  Location     Type
 16665 ;;		None               void
 16666 ;; Registers used:
 16667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16668 ;; Tracked objects:
 16669 ;;		On entry : 0/0
 16670 ;;		On exit  : 0/0
 16671 ;;		Unchanged: 0/0
 16672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16674 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16676 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16677 ;;Total ram usage:        1 bytes
 16678 ;; Hardware stack levels used:    1
 16679 ;; Hardware stack levels required when called:    3
 16680 ;; This function calls:
 16681 ;;		Nothing
 16682 ;; This function is called by:
 16683 ;;		_main
 16684 ;; This function uses a non-reentrant model
 16685 ;;
 16686                           
 16687                           	psect	text54
 16688  015BF8                     __ptext54:
 16689                           	opt stack 0
 16690  015BF8                     _Joystick_Polling:
 16691                           	opt stack 27
 16692                           
 16693                           ;RemoteCan.c: 614: for (unsigned char i = 0; i < 2; i++) {
 16694                           
 16695                           ; BSR set to: 0
 16696                           ;incstack = 0
 16697  015BF8  0E00               	movlw	0
 16698  015BFA  0100               	movlb	0	; () banked
 16699  015BFC  6F72               	movwf	Joystick_Polling@i& (0+255),b
 16700                           
 16701                           ; BSR set to: 0
 16702  015BFE  0E01               	movlw	1
 16703  015C00  0100               	movlb	0	; () banked
 16704  015C02  6572               	cpfsgt	Joystick_Polling@i& (0+255),b
 16705  015C04  D002               	goto	l938
 16706  015C06  0012               	return	
 16707                           
 16708                           ; BSR set to: 0
 16709  015C08  0012               	return	
 16710  015C0A                     l938:
 16711                           
 16712                           ; BSR set to: 0
 16713                           ;RemoteCan.c: 615: ADCON0bits.GO = 1;
 16714  015C0A  82C2               	bsf	4034,1,c	;volatile
 16715                           
 16716                           ;RemoteCan.c: 616: while (ADCON0bits.GO);
 16717  015C0C  D000               	goto	l940
 16718  015C0E                     l940:
 16719  015C0E  B2C2               	btfsc	4034,1,c	;volatile
 16720  015C10  D7FE               	goto	l940
 16721                           
 16722                           ;RemoteCan.c: 617: JoystickValues[i] = ADRESH;
 16723  015C12  0100               	movlb	0	; () banked
 16724  015C14  5172               	movf	Joystick_Polling@i& (0+255),w,b
 16725  015C16  0D01               	mullw	1
 16726  015C18  0EDF               	movlw	low _JoystickValues
 16727  015C1A  24F3               	addwf	prodl,w,c
 16728  015C1C  6ED9               	movwf	fsr2l,c
 16729  015C1E  0E00               	movlw	high _JoystickValues
 16730  015C20  20F4               	addwfc	prodh,w,c
 16731  015C22  6EDA               	movwf	fsr2h,c
 16732  015C24  CFC4 FFDF          	movff	4036,indf2	;volatile
 16733                           
 16734                           ; BSR set to: 0
 16735                           ;RemoteCan.c: 618: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 16736  015C28  74C2               	btg	4034,2,c	;volatile
 16737                           
 16738                           ; BSR set to: 0
 16739  015C2A  0100               	movlb	0	; () banked
 16740  015C2C  2B72               	incf	Joystick_Polling@i& (0+255),f,b
 16741                           
 16742                           ; BSR set to: 0
 16743  015C2E  0E01               	movlw	1
 16744  015C30  0100               	movlb	0	; () banked
 16745  015C32  6572               	cpfsgt	Joystick_Polling@i& (0+255),b
 16746  015C34  D7EA               	goto	l938
 16747  015C36  0012               	return	
 16748                           
 16749                           ; BSR set to: 0
 16750                           
 16751                           ; BSR set to: 0
 16752  015C38  0012               	return		;funcret
 16753  015C3A                     __end_of_Joystick_Polling:
 16754                           	opt stack 0
 16755                           tblptru	equ	0xFF8
 16756                           tblptrh	equ	0xFF7
 16757                           tblptrl	equ	0xFF6
 16758                           tablat	equ	0xFF5
 16759                           prodh	equ	0xFF4
 16760                           prodl	equ	0xFF3
 16761                           intcon	equ	0xFF2
 16762                           postinc0	equ	0xFEE
 16763                           wreg	equ	0xFE8
 16764                           indf1	equ	0xFE7
 16765                           plusw1	equ	0xFE3
 16766                           fsr1h	equ	0xFE2
 16767                           fsr1l	equ	0xFE1
 16768                           indf2	equ	0xFDF
 16769                           postinc2	equ	0xFDE
 16770                           plusw2	equ	0xFDB
 16771                           fsr2h	equ	0xFDA
 16772                           fsr2l	equ	0xFD9
 16773                           status	equ	0xFD8
 16774                           
 16775 ;; *************** function _F2_Button_Polling *****************
 16776 ;; Defined at:
 16777 ;;		line 603 in file "RemoteCan.c"
 16778 ;; Parameters:    Size  Location     Type
 16779 ;;		None
 16780 ;; Auto vars:     Size  Location     Type
 16781 ;;		None
 16782 ;; Return value:  Size  Location     Type
 16783 ;;		None               void
 16784 ;; Registers used:
 16785 ;;		None
 16786 ;; Tracked objects:
 16787 ;;		On entry : 0/0
 16788 ;;		On exit  : 0/0
 16789 ;;		Unchanged: 0/0
 16790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16795 ;;Total ram usage:        0 bytes
 16796 ;; Hardware stack levels used:    1
 16797 ;; Hardware stack levels required when called:    3
 16798 ;; This function calls:
 16799 ;;		Nothing
 16800 ;; This function is called by:
 16801 ;;		_main
 16802 ;; This function uses a non-reentrant model
 16803 ;;
 16804                           
 16805                           	psect	text55
 16806  015F78                     __ptext55:
 16807                           	opt stack 0
 16808  015F78                     _F2_Button_Polling:
 16809                           	opt stack 27
 16810                           
 16811                           ;RemoteCan.c: 604: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 16812                           
 16813                           ; BSR set to: 0
 16814                           ;incstack = 0
 16815  015F78  A281               	btfss	3969,1,c	;volatile
 16816  015F7A  D002               	goto	l933
 16817  015F7C  B04C               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16818  015F7E  0012               	return	
 16819  015F80                     l933:
 16820                           
 16821                           ;RemoteCan.c: 605: wait_low_3 = 0;
 16822  015F80  904C               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16823                           
 16824                           ;RemoteCan.c: 606: if (PORTBbits.RB1 == 1) {
 16825  015F82  A281               	btfss	3969,1,c	;volatile
 16826  015F84  0012               	return	
 16827                           
 16828                           ;RemoteCan.c: 607: F2_switch = ~F2_switch;
 16829  015F86  744A               	btg	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16830                           
 16831                           ;RemoteCan.c: 608: wait_low_3 = 1;
 16832  015F88  804C               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16833  015F8A  0012               	return	
 16834  015F8C  0012               	return		;funcret
 16835  015F8E                     __end_of_F2_Button_Polling:
 16836                           	opt stack 0
 16837                           tblptru	equ	0xFF8
 16838                           tblptrh	equ	0xFF7
 16839                           tblptrl	equ	0xFF6
 16840                           tablat	equ	0xFF5
 16841                           prodh	equ	0xFF4
 16842                           prodl	equ	0xFF3
 16843                           intcon	equ	0xFF2
 16844                           postinc0	equ	0xFEE
 16845                           wreg	equ	0xFE8
 16846                           indf1	equ	0xFE7
 16847                           plusw1	equ	0xFE3
 16848                           fsr1h	equ	0xFE2
 16849                           fsr1l	equ	0xFE1
 16850                           indf2	equ	0xFDF
 16851                           postinc2	equ	0xFDE
 16852                           plusw2	equ	0xFDB
 16853                           fsr2h	equ	0xFDA
 16854                           fsr2l	equ	0xFD9
 16855                           status	equ	0xFD8
 16856                           
 16857 ;; *************** function _F1_Button_Polling *****************
 16858 ;; Defined at:
 16859 ;;		line 593 in file "RemoteCan.c"
 16860 ;; Parameters:    Size  Location     Type
 16861 ;;		None
 16862 ;; Auto vars:     Size  Location     Type
 16863 ;;		None
 16864 ;; Return value:  Size  Location     Type
 16865 ;;		None               void
 16866 ;; Registers used:
 16867 ;;		None
 16868 ;; Tracked objects:
 16869 ;;		On entry : 0/0
 16870 ;;		On exit  : 0/0
 16871 ;;		Unchanged: 0/0
 16872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16877 ;;Total ram usage:        0 bytes
 16878 ;; Hardware stack levels used:    1
 16879 ;; Hardware stack levels required when called:    3
 16880 ;; This function calls:
 16881 ;;		Nothing
 16882 ;; This function is called by:
 16883 ;;		_main
 16884 ;; This function uses a non-reentrant model
 16885 ;;
 16886                           
 16887                           	psect	text56
 16888  015F8E                     __ptext56:
 16889                           	opt stack 0
 16890  015F8E                     _F1_Button_Polling:
 16891                           	opt stack 27
 16892                           
 16893                           ;RemoteCan.c: 594: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 16894                           
 16895                           ;incstack = 0
 16896  015F8E  A881               	btfss	3969,4,c	;volatile
 16897  015F90  D002               	goto	l926
 16898  015F92  BE4B               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16899  015F94  0012               	return	
 16900  015F96                     l926:
 16901                           
 16902                           ;RemoteCan.c: 595: wait_low_2 = 0;
 16903  015F96  9E4B               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16904                           
 16905                           ;RemoteCan.c: 596: if (PORTBbits.RB4 == 1) {
 16906  015F98  A881               	btfss	3969,4,c	;volatile
 16907  015F9A  0012               	return	
 16908                           
 16909                           ;RemoteCan.c: 597: F1_switch = ~F1_switch;
 16910  015F9C  724A               	btg	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16911                           
 16912                           ;RemoteCan.c: 598: wait_low_2 = 1;
 16913  015F9E  8E4B               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16914  015FA0  0012               	return	
 16915  015FA2  0012               	return		;funcret
 16916  015FA4                     __end_of_F1_Button_Polling:
 16917                           	opt stack 0
 16918                           tblptru	equ	0xFF8
 16919                           tblptrh	equ	0xFF7
 16920                           tblptrl	equ	0xFF6
 16921                           tablat	equ	0xFF5
 16922                           prodh	equ	0xFF4
 16923                           prodl	equ	0xFF3
 16924                           intcon	equ	0xFF2
 16925                           postinc0	equ	0xFEE
 16926                           wreg	equ	0xFE8
 16927                           indf1	equ	0xFE7
 16928                           plusw1	equ	0xFE3
 16929                           fsr1h	equ	0xFE2
 16930                           fsr1l	equ	0xFE1
 16931                           indf2	equ	0xFDF
 16932                           postinc2	equ	0xFDE
 16933                           plusw2	equ	0xFDB
 16934                           fsr2h	equ	0xFDA
 16935                           fsr2l	equ	0xFD9
 16936                           status	equ	0xFD8
 16937                           
 16938 ;; *************** function _CAN_Tx *****************
 16939 ;; Defined at:
 16940 ;;		line 622 in file "RemoteCan.c"
 16941 ;; Parameters:    Size  Location     Type
 16942 ;;		None
 16943 ;; Auto vars:     Size  Location     Type
 16944 ;;		None
 16945 ;; Return value:  Size  Location     Type
 16946 ;;		None               void
 16947 ;; Registers used:
 16948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16949 ;; Tracked objects:
 16950 ;;		On entry : 0/0
 16951 ;;		On exit  : 0/0
 16952 ;;		Unchanged: 0/0
 16953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16958 ;;Total ram usage:        0 bytes
 16959 ;; Hardware stack levels used:    1
 16960 ;; Hardware stack levels required when called:    4
 16961 ;; This function calls:
 16962 ;;		_CANisTxReady
 16963 ;;		_CANsendMessage
 16964 ;; This function is called by:
 16965 ;;		_main
 16966 ;; This function uses a non-reentrant model
 16967 ;;
 16968                           
 16969                           	psect	text57
 16970  01543C                     __ptext57:
 16971                           	opt stack 0
 16972  01543C                     _CAN_Tx:
 16973                           	opt stack 26
 16974                           
 16975                           ;RemoteCan.c: 624: while (CANisTxReady() != 1);
 16976                           
 16977                           ;incstack = 0
 16978  01543C  D000               	goto	l6494
 16979  01543E                     l6494:
 16980  01543E  EC57  F0AF         	call	_CANisTxReady	;wreg free
 16981  015442  06E8               	decf	wreg,f,c
 16982  015444  A4D8               	btfss	status,2,c
 16983  015446  D7FB               	goto	l6494
 16984                           
 16985                           ;RemoteCan.c: 625: CANsendMessage(0b00000000111, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 16986  015448  0E07               	movlw	7
 16987  01544A  0100               	movlb	0	; () banked
 16988  01544C  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 16989  01544E  0E00               	movlw	0
 16990  015450  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16991  015452  0E00               	movlw	0
 16992  015454  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16993  015456  0E00               	movlw	0
 16994  015458  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16995  01545A  0E26               	movlw	low _data_steering
 16996  01545C  0100               	movlb	0	; () banked
 16997  01545E  6F76               	movwf	CANsendMessage@data& (0+255),b
 16998  015460  0E01               	movlw	high _data_steering
 16999  015462  0100               	movlb	0	; () banked
 17000  015464  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 17001  015466  0E08               	movlw	8
 17002  015468  0100               	movlb	0	; () banked
 17003  01546A  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 17004  01546C  0EBC               	movlw	188
 17005  01546E  0100               	movlb	0	; () banked
 17006  015470  6F79               	movwf	CANsendMessage@flags& (0+255),b
 17007  015472  EC09  F08E         	call	_CANsendMessage	;wreg free
 17008                           
 17009                           ;RemoteCan.c: 628: data_speed[0] = set_speed;
 17010  015476  C0E5  F11E         	movff	_set_speed,_data_speed	;volatile
 17011                           
 17012                           ;RemoteCan.c: 629: data_speed[1] = (set_speed >> 8);
 17013  01547A  0100               	movlb	0	; () banked
 17014  01547C  51E6               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 17015  01547E  0101               	movlb	1	; () banked
 17016  015480  6F1F               	movwf	(_data_speed+1)& (0+255),b
 17017                           
 17018                           ; BSR set to: 1
 17019                           ;RemoteCan.c: 630: data_speed[2] = dir;
 17020  015482  C0E8  F120         	movff	_dir,_data_speed+2	;volatile
 17021                           
 17022                           ; BSR set to: 1
 17023                           
 17024                           ;RemoteCan.c: 631: while (CANisTxReady() != 1);
 17025  015486  D000               	goto	l6504
 17026  015488                     l6504:
 17027  015488  EC57  F0AF         	call	_CANisTxReady	;wreg free
 17028  01548C  06E8               	decf	wreg,f,c
 17029  01548E  A4D8               	btfss	status,2,c
 17030  015490  D7FB               	goto	l6504
 17031                           
 17032                           ;RemoteCan.c: 632: CANsendMessage(0b00000000101, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17033  015492  0E05               	movlw	5
 17034  015494  0100               	movlb	0	; () banked
 17035  015496  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 17036  015498  0E00               	movlw	0
 17037  01549A  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17038  01549C  0E00               	movlw	0
 17039  01549E  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17040  0154A0  0E00               	movlw	0
 17041  0154A2  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17042  0154A4  0E1E               	movlw	low _data_speed
 17043  0154A6  0100               	movlb	0	; () banked
 17044  0154A8  6F76               	movwf	CANsendMessage@data& (0+255),b
 17045  0154AA  0E01               	movlw	high _data_speed
 17046  0154AC  0100               	movlb	0	; () banked
 17047  0154AE  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 17048  0154B0  0E08               	movlw	8
 17049  0154B2  0100               	movlb	0	; () banked
 17050  0154B4  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 17051  0154B6  0EBC               	movlw	188
 17052  0154B8  0100               	movlb	0	; () banked
 17053  0154BA  6F79               	movwf	CANsendMessage@flags& (0+255),b
 17054  0154BC  EC09  F08E         	call	_CANsendMessage	;wreg free
 17055                           
 17056                           ;RemoteCan.c: 635: while (CANisTxReady() != 1);
 17057  0154C0  D000               	goto	l6508
 17058  0154C2                     l6508:
 17059  0154C2  EC57  F0AF         	call	_CANisTxReady	;wreg free
 17060  0154C6  06E8               	decf	wreg,f,c
 17061  0154C8  A4D8               	btfss	status,2,c
 17062  0154CA  D7FB               	goto	l6508
 17063                           
 17064                           ;RemoteCan.c: 636: CANsendMessage(0b00000000110, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 17065  0154CC  0E06               	movlw	6
 17066  0154CE  0100               	movlb	0	; () banked
 17067  0154D0  6F72               	movwf	CANsendMessage@identifier& (0+255),b
 17068  0154D2  0E00               	movlw	0
 17069  0154D4  6F73               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 17070  0154D6  0E00               	movlw	0
 17071  0154D8  6F74               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 17072  0154DA  0E00               	movlw	0
 17073  0154DC  6F75               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 17074  0154DE  0E21               	movlw	low _data_brake
 17075  0154E0  0100               	movlb	0	; () banked
 17076  0154E2  6F76               	movwf	CANsendMessage@data& (0+255),b
 17077  0154E4  0E00               	movlw	high _data_brake
 17078  0154E6  0100               	movlb	0	; () banked
 17079  0154E8  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
 17080  0154EA  0E08               	movlw	8
 17081  0154EC  0100               	movlb	0	; () banked
 17082  0154EE  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
 17083  0154F0  0EBC               	movlw	188
 17084  0154F2  0100               	movlb	0	; () banked
 17085  0154F4  6F79               	movwf	CANsendMessage@flags& (0+255),b
 17086  0154F6  EC09  F08E         	call	_CANsendMessage	;wreg free
 17087  0154FA  0012               	return		;funcret
 17088  0154FC                     __end_of_CAN_Tx:
 17089                           	opt stack 0
 17090                           tblptru	equ	0xFF8
 17091                           tblptrh	equ	0xFF7
 17092                           tblptrl	equ	0xFF6
 17093                           tablat	equ	0xFF5
 17094                           prodh	equ	0xFF4
 17095                           prodl	equ	0xFF3
 17096                           intcon	equ	0xFF2
 17097                           postinc0	equ	0xFEE
 17098                           wreg	equ	0xFE8
 17099                           indf1	equ	0xFE7
 17100                           plusw1	equ	0xFE3
 17101                           fsr1h	equ	0xFE2
 17102                           fsr1l	equ	0xFE1
 17103                           indf2	equ	0xFDF
 17104                           postinc2	equ	0xFDE
 17105                           plusw2	equ	0xFDB
 17106                           fsr2h	equ	0xFDA
 17107                           fsr2l	equ	0xFD9
 17108                           status	equ	0xFD8
 17109                           
 17110 ;; *************** function _CANsendMessage *****************
 17111 ;; Defined at:
 17112 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 17113 ;; Parameters:    Size  Location     Type
 17114 ;;  identifier      4   18[BANK0 ] unsigned long 
 17115 ;;  data            2   22[BANK0 ] PTR unsigned char 
 17116 ;;		 -> data_speed(8), park_assist_state(8), data_steering(8), data_brake(8), 
 17117 ;;		 -> data(8), 
 17118 ;;  dataLength      1   24[BANK0 ] unsigned char 
 17119 ;;  flags           1   25[BANK0 ] enum E16950
 17120 ;; Auto vars:     Size  Location     Type
 17121 ;;  tamp            4   30[BANK0 ] unsigned long 
 17122 ;; Return value:  Size  Location     Type
 17123 ;;		None               void
 17124 ;; Registers used:
 17125 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17126 ;; Tracked objects:
 17127 ;;		On entry : 0/0
 17128 ;;		On exit  : 0/0
 17129 ;;		Unchanged: 0/0
 17130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17131 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17132 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17133 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17134 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17135 ;;Total ram usage:       16 bytes
 17136 ;; Hardware stack levels used:    1
 17137 ;; Hardware stack levels required when called:    3
 17138 ;; This function calls:
 17139 ;;		Nothing
 17140 ;; This function is called by:
 17141 ;;		_main
 17142 ;;		_LCD_Handler
 17143 ;;		_CAN_Tx
 17144 ;; This function uses a non-reentrant model
 17145 ;;
 17146                           
 17147                           	psect	text58
 17148  011C12                     __ptext58:
 17149                           	opt stack 0
 17150  011C12                     _CANsendMessage:
 17151                           	opt stack 26
 17152                           
 17153                           ;inc\CANlib.h: 296: unsigned long tamp;
 17154                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 17155                           
 17156                           ;incstack = 0
 17157  011C12  010F               	movlb	15	; () banked
 17158  011C14  B740               	btfsc	64,3,b	;volatile
 17159  011C16  D142               	goto	l383
 17160                           
 17161                           ; BSR set to: 15
 17162                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 17163  011C18  C078  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 17164                           
 17165                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 17166  011C1C  0100               	movlb	0	; () banked
 17167  011C1E  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 17168  011C20  D003               	goto	l384
 17169                           
 17170                           ; BSR set to: 0
 17171                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 17172  011C22  010F               	movlb	15	; () banked
 17173  011C24  8D45               	bsf	69,6,b	;volatile
 17174  011C26  D002               	goto	l385
 17175  011C28                     l384:
 17176                           
 17177                           ; BSR set to: 0
 17178                           ;inc\CANlib.h: 302: else
 17179                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 17180  011C28  010F               	movlb	15	; () banked
 17181  011C2A  9D45               	bcf	69,6,b	;volatile
 17182  011C2C                     l385:
 17183                           
 17184                           ; BSR set to: 15
 17185                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 17186  011C2C  0100               	movlb	0	; () banked
 17187  011C2E  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 17188  011C30  D07A               	goto	l386
 17189                           
 17190                           ; BSR set to: 0
 17191                           ;inc\CANlib.h: 306: {
 17192                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 17193  011C32  0100               	movlb	0	; () banked
 17194  011C34  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 17195  011C36  0100               	movlb	0	; () banked
 17196  011C38  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17197  011C3A  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17198  011C3C  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17199  011C3E  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17200                           
 17201                           ; BSR set to: 0
 17202                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 17203  011C40  C07E  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 17204                           
 17205                           ; BSR set to: 0
 17206                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 17207  011C44  0E00               	movlw	0
 17208  011C46  0100               	movlb	0	; () banked
 17209  011C48  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 17210  011C4A  0100               	movlb	0	; () banked
 17211  011C4C  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17212  011C4E  0EFF               	movlw	255
 17213  011C50  0100               	movlb	0	; () banked
 17214  011C52  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17215  011C54  0100               	movlb	0	; () banked
 17216  011C56  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17217  011C58  0E00               	movlw	0
 17218  011C5A  0100               	movlb	0	; () banked
 17219  011C5C  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17220  011C5E  0100               	movlb	0	; () banked
 17221  011C60  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17222  011C62  0E00               	movlw	0
 17223  011C64  0100               	movlb	0	; () banked
 17224  011C66  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17225  011C68  0100               	movlb	0	; () banked
 17226  011C6A  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17227                           
 17228                           ; BSR set to: 0
 17229                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 17230  011C6C  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 17231  011C70  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17232  011C74  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17233  011C78  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17234  011C7C  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 17235  011C80  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17236  011C84  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17237  011C88  0100               	movlb	0	; () banked
 17238  011C8A  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 17239  011C8C  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17240  011C90  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17241  011C94  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17242  011C98  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17243                           
 17244                           ; BSR set to: 0
 17245                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 17246  011C9C  C07E  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 17247                           
 17248                           ; BSR set to: 0
 17249                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 17250  011CA0  0E00               	movlw	0
 17251  011CA2  010F               	movlb	15	; () banked
 17252  011CA4  6F42               	movwf	66,b	;volatile
 17253                           
 17254                           ; BSR set to: 15
 17255                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 17256  011CA6  010F               	movlb	15	; () banked
 17257  011CA8  8742               	bsf	66,3,b	;volatile
 17258                           
 17259                           ; BSR set to: 15
 17260                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 17261  011CAA  0100               	movlb	0	; () banked
 17262  011CAC  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17263  011CAE  D002               	goto	l387
 17264                           
 17265                           ; BSR set to: 0
 17266                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 17267  011CB0  010F               	movlb	15	; () banked
 17268  011CB2  8142               	bsf	66,0,b	;volatile
 17269  011CB4                     l387:
 17270                           
 17271                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 17272  011CB4  0100               	movlb	0	; () banked
 17273  011CB6  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17274  011CB8  D002               	goto	l388
 17275                           
 17276                           ; BSR set to: 0
 17277                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 17278  011CBA  010F               	movlb	15	; () banked
 17279  011CBC  8342               	bsf	66,1,b	;volatile
 17280  011CBE                     l388:
 17281                           
 17282                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 17283  011CBE  0100               	movlb	0	; () banked
 17284  011CC0  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17285  011CC2  D002               	goto	l389
 17286                           
 17287                           ; BSR set to: 0
 17288                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 17289  011CC4  010F               	movlb	15	; () banked
 17290  011CC6  8B42               	bsf	66,5,b	;volatile
 17291  011CC8                     l389:
 17292                           
 17293                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 17294  011CC8  0100               	movlb	0	; () banked
 17295  011CCA  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17296  011CCC  D002               	goto	l390
 17297                           
 17298                           ; BSR set to: 0
 17299                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 17300  011CCE  010F               	movlb	15	; () banked
 17301  011CD0  8D42               	bsf	66,6,b	;volatile
 17302  011CD2                     l390:
 17303                           
 17304                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 17305  011CD2  0100               	movlb	0	; () banked
 17306  011CD4  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17307  011CD6  D003               	goto	l5714
 17308                           
 17309                           ; BSR set to: 0
 17310                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 17311  011CD8  010F               	movlb	15	; () banked
 17312  011CDA  8F42               	bsf	66,7,b	;volatile
 17313  011CDC  D000               	goto	l5714
 17314  011CDE                     l5714:
 17315                           
 17316                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 17317  011CDE  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 17318  011CE2  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17319  011CE6  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17320  011CEA  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17321  011CEE  0E16               	movlw	22
 17322  011CF0  D006               	goto	u6630
 17323  011CF2                     u6635:
 17324  011CF2  0100               	movlb	0	; () banked
 17325  011CF4  90D8               	bcf	status,0,c
 17326  011CF6  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17327  011CF8  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17328  011CFA  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17329  011CFC  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 17330  011CFE                     u6630:
 17331  011CFE  2EE8               	decfsz	wreg,f,c
 17332  011D00  D7F8               	goto	u6635
 17333  011D02  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17334  011D06  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17335  011D0A  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17336  011D0E  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17337                           
 17338                           ; BSR set to: 0
 17339                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 17340  011D12  0100               	movlb	0	; () banked
 17341  011D14  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 17342  011D16  0100               	movlb	0	; () banked
 17343  011D18  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17344  011D1A  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17345  011D1C  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17346  011D1E  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17347                           
 17348                           ; BSR set to: 0
 17349                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 17350  011D20  C07E  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17351                           
 17352                           ;inc\CANlib.h: 332: }
 17353  011D24  D05A               	goto	l5734
 17354  011D26                     l386:
 17355                           
 17356                           ; BSR set to: 0
 17357                           ;inc\CANlib.h: 334: else
 17358                           ;inc\CANlib.h: 336: {
 17359                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 17360  011D26  010F               	movlb	15	; () banked
 17361  011D28  9742               	bcf	66,3,b	;volatile
 17362                           
 17363                           ; BSR set to: 15
 17364                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 17365  011D2A  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 17366  011D2E  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17367  011D32  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17368  011D36  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17369  011D3A  0E04               	movlw	4
 17370  011D3C  D006               	goto	u6640
 17371  011D3E                     u6645:
 17372  011D3E  0100               	movlb	0	; () banked
 17373  011D40  90D8               	bcf	status,0,c
 17374  011D42  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17375  011D44  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17376  011D46  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17377  011D48  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 17378  011D4A                     u6640:
 17379  011D4A  2EE8               	decfsz	wreg,f,c
 17380  011D4C  D7F8               	goto	u6645
 17381  011D4E  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17382  011D52  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17383  011D56  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17384  011D5A  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17385                           
 17386                           ; BSR set to: 0
 17387                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 17388  011D5E  0100               	movlb	0	; () banked
 17389  011D60  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 17390  011D62  0100               	movlb	0	; () banked
 17391  011D64  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17392  011D66  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17393  011D68  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17394  011D6A  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17395                           
 17396                           ; BSR set to: 0
 17397                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 17398  011D6C  C07E  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17399                           
 17400                           ; BSR set to: 0
 17401                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 17402  011D70  0E07               	movlw	7
 17403  011D72  0100               	movlb	0	; () banked
 17404  011D74  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 17405  011D76  0100               	movlb	0	; () banked
 17406  011D78  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17407  011D7A  0E00               	movlw	0
 17408  011D7C  0100               	movlb	0	; () banked
 17409  011D7E  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17410  011D80  0100               	movlb	0	; () banked
 17411  011D82  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17412  011D84  0E00               	movlw	0
 17413  011D86  0100               	movlb	0	; () banked
 17414  011D88  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17415  011D8A  0100               	movlb	0	; () banked
 17416  011D8C  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17417  011D8E  0E00               	movlw	0
 17418  011D90  0100               	movlb	0	; () banked
 17419  011D92  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17420  011D94  0100               	movlb	0	; () banked
 17421  011D96  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17422                           
 17423                           ; BSR set to: 0
 17424                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 17425  011D98  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 17426  011D9C  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17427  011DA0  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17428  011DA4  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17429  011DA8  0E05               	movlw	5
 17430  011DAA                     u6655:
 17431  011DAA  90D8               	bcf	status,0,c
 17432  011DAC  0100               	movlb	0	; () banked
 17433  011DAE  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 17434  011DB0  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17435  011DB2  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17436  011DB4  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17437  011DB6  2EE8               	decfsz	wreg,f,c
 17438  011DB8  D7F8               	goto	u6655
 17439  011DBA  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17440  011DBE  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17441  011DC2  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17442  011DC6  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17443                           
 17444                           ; BSR set to: 0
 17445                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 17446  011DCA  010F               	movlb	15	; () banked
 17447  011DCC  5142               	movf	66,w,b	;volatile
 17448  011DCE  0B1F               	andlw	31
 17449  011DD0  010F               	movlb	15	; () banked
 17450  011DD2  6F42               	movwf	66,b	;volatile
 17451                           
 17452                           ; BSR set to: 15
 17453                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 17454  011DD4  C07E  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 17455  011DD8  D000               	goto	l5734
 17456  011DDA                     l5734:
 17457                           
 17458                           ;inc\CANlib.h: 347: }
 17459                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 17460  011DDA  0100               	movlb	0	; () banked
 17461  011DDC  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 17462  011DDE  D003               	goto	l393
 17463                           
 17464                           ; BSR set to: 0
 17465                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 17466  011DE0  010F               	movlb	15	; () banked
 17467  011DE2  8140               	bsf	64,0,b	;volatile
 17468  011DE4  D002               	goto	l394
 17469  011DE6                     l393:
 17470                           
 17471                           ; BSR set to: 0
 17472                           ;inc\CANlib.h: 351: else
 17473                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 17474  011DE6  010F               	movlb	15	; () banked
 17475  011DE8  9140               	bcf	64,0,b	;volatile
 17476  011DEA                     l394:
 17477                           
 17478                           ; BSR set to: 15
 17479                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 17480  011DEA  0100               	movlb	0	; () banked
 17481  011DEC  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 17482  011DEE  D003               	goto	l395
 17483                           
 17484                           ; BSR set to: 0
 17485                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 17486  011DF0  010F               	movlb	15	; () banked
 17487  011DF2  8340               	bsf	64,1,b	;volatile
 17488  011DF4  D003               	goto	l5740
 17489  011DF6                     l395:
 17490                           
 17491                           ; BSR set to: 0
 17492                           ;inc\CANlib.h: 355: else
 17493                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 17494  011DF6  010F               	movlb	15	; () banked
 17495  011DF8  9340               	bcf	64,1,b	;volatile
 17496  011DFA  D000               	goto	l5740
 17497  011DFC                     l5740:
 17498                           
 17499                           ; BSR set to: 15
 17500                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 17501  011DFC  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 17502  011E00  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 17503  011E04  50DF               	movf	indf2,w,c
 17504  011E06  010F               	movlb	15	; () banked
 17505  011E08  6F46               	movwf	70,b	;volatile
 17506                           
 17507                           ; BSR set to: 15
 17508                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 17509  011E0A  0100               	movlb	0	; () banked
 17510  011E0C  EE20 F001          	lfsr	2,1
 17511  011E10  5176               	movf	CANsendMessage@data& (0+255),w,b
 17512  011E12  26D9               	addwf	fsr2l,f,c
 17513  011E14  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17514  011E16  22DA               	addwfc	fsr2h,f,c
 17515  011E18  50DF               	movf	indf2,w,c
 17516  011E1A  010F               	movlb	15	; () banked
 17517  011E1C  6F47               	movwf	71,b	;volatile
 17518                           
 17519                           ; BSR set to: 15
 17520                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 17521  011E1E  0100               	movlb	0	; () banked
 17522  011E20  EE20 F002          	lfsr	2,2
 17523  011E24  5176               	movf	CANsendMessage@data& (0+255),w,b
 17524  011E26  26D9               	addwf	fsr2l,f,c
 17525  011E28  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17526  011E2A  22DA               	addwfc	fsr2h,f,c
 17527  011E2C  50DF               	movf	indf2,w,c
 17528  011E2E  010F               	movlb	15	; () banked
 17529  011E30  6F48               	movwf	72,b	;volatile
 17530                           
 17531                           ; BSR set to: 15
 17532                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 17533  011E32  0100               	movlb	0	; () banked
 17534  011E34  EE20 F003          	lfsr	2,3
 17535  011E38  5176               	movf	CANsendMessage@data& (0+255),w,b
 17536  011E3A  26D9               	addwf	fsr2l,f,c
 17537  011E3C  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17538  011E3E  22DA               	addwfc	fsr2h,f,c
 17539  011E40  50DF               	movf	indf2,w,c
 17540  011E42  010F               	movlb	15	; () banked
 17541  011E44  6F49               	movwf	73,b	;volatile
 17542                           
 17543                           ; BSR set to: 15
 17544                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 17545  011E46  0100               	movlb	0	; () banked
 17546  011E48  EE20 F004          	lfsr	2,4
 17547  011E4C  5176               	movf	CANsendMessage@data& (0+255),w,b
 17548  011E4E  26D9               	addwf	fsr2l,f,c
 17549  011E50  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17550  011E52  22DA               	addwfc	fsr2h,f,c
 17551  011E54  50DF               	movf	indf2,w,c
 17552  011E56  010F               	movlb	15	; () banked
 17553  011E58  6F4A               	movwf	74,b	;volatile
 17554                           
 17555                           ; BSR set to: 15
 17556                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 17557  011E5A  0100               	movlb	0	; () banked
 17558  011E5C  EE20 F005          	lfsr	2,5
 17559  011E60  5176               	movf	CANsendMessage@data& (0+255),w,b
 17560  011E62  26D9               	addwf	fsr2l,f,c
 17561  011E64  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17562  011E66  22DA               	addwfc	fsr2h,f,c
 17563  011E68  50DF               	movf	indf2,w,c
 17564  011E6A  010F               	movlb	15	; () banked
 17565  011E6C  6F4B               	movwf	75,b	;volatile
 17566                           
 17567                           ; BSR set to: 15
 17568                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 17569  011E6E  0100               	movlb	0	; () banked
 17570  011E70  EE20 F006          	lfsr	2,6
 17571  011E74  5176               	movf	CANsendMessage@data& (0+255),w,b
 17572  011E76  26D9               	addwf	fsr2l,f,c
 17573  011E78  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17574  011E7A  22DA               	addwfc	fsr2h,f,c
 17575  011E7C  50DF               	movf	indf2,w,c
 17576  011E7E  010F               	movlb	15	; () banked
 17577  011E80  6F4C               	movwf	76,b	;volatile
 17578                           
 17579                           ; BSR set to: 15
 17580                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 17581  011E82  0100               	movlb	0	; () banked
 17582  011E84  EE20 F007          	lfsr	2,7
 17583  011E88  5176               	movf	CANsendMessage@data& (0+255),w,b
 17584  011E8A  26D9               	addwf	fsr2l,f,c
 17585  011E8C  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17586  011E8E  22DA               	addwfc	fsr2h,f,c
 17587  011E90  50DF               	movf	indf2,w,c
 17588  011E92  010F               	movlb	15	; () banked
 17589  011E94  6F4D               	movwf	77,b	;volatile
 17590                           
 17591                           ; BSR set to: 15
 17592                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 17593  011E96  010F               	movlb	15	; () banked
 17594  011E98  8740               	bsf	64,3,b	;volatile
 17595                           
 17596                           ; BSR set to: 15
 17597                           ;inc\CANlib.h: 368: return;
 17598  011E9A  0012               	return	
 17599  011E9C                     l383:
 17600                           
 17601                           ; BSR set to: 15
 17602                           ;inc\CANlib.h: 369: }
 17603                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 17604  011E9C  010F               	movlb	15	; () banked
 17605  011E9E  B730               	btfsc	48,3,b	;volatile
 17606  011EA0  D142               	goto	l398
 17607                           
 17608                           ; BSR set to: 15
 17609                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 17610  011EA2  C078  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 17611                           
 17612                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 17613  011EA6  0100               	movlb	0	; () banked
 17614  011EA8  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 17615  011EAA  D003               	goto	l399
 17616                           
 17617                           ; BSR set to: 0
 17618                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 17619  011EAC  010F               	movlb	15	; () banked
 17620  011EAE  8D35               	bsf	53,6,b	;volatile
 17621  011EB0  D002               	goto	l400
 17622  011EB2                     l399:
 17623                           
 17624                           ; BSR set to: 0
 17625                           ;inc\CANlib.h: 378: else
 17626                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 17627  011EB2  010F               	movlb	15	; () banked
 17628  011EB4  9D35               	bcf	53,6,b	;volatile
 17629  011EB6                     l400:
 17630                           
 17631                           ; BSR set to: 15
 17632                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 17633  011EB6  0100               	movlb	0	; () banked
 17634  011EB8  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 17635  011EBA  D07A               	goto	l401
 17636                           
 17637                           ; BSR set to: 0
 17638                           ;inc\CANlib.h: 382: {
 17639                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 17640  011EBC  0100               	movlb	0	; () banked
 17641  011EBE  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 17642  011EC0  0100               	movlb	0	; () banked
 17643  011EC2  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17644  011EC4  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17645  011EC6  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17646  011EC8  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17647                           
 17648                           ; BSR set to: 0
 17649                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 17650  011ECA  C07E  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 17651                           
 17652                           ; BSR set to: 0
 17653                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 17654  011ECE  0E00               	movlw	0
 17655  011ED0  0100               	movlb	0	; () banked
 17656  011ED2  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 17657  011ED4  0100               	movlb	0	; () banked
 17658  011ED6  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17659  011ED8  0EFF               	movlw	255
 17660  011EDA  0100               	movlb	0	; () banked
 17661  011EDC  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17662  011EDE  0100               	movlb	0	; () banked
 17663  011EE0  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17664  011EE2  0E00               	movlw	0
 17665  011EE4  0100               	movlb	0	; () banked
 17666  011EE6  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17667  011EE8  0100               	movlb	0	; () banked
 17668  011EEA  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17669  011EEC  0E00               	movlw	0
 17670  011EEE  0100               	movlb	0	; () banked
 17671  011EF0  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17672  011EF2  0100               	movlb	0	; () banked
 17673  011EF4  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17674                           
 17675                           ; BSR set to: 0
 17676                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 17677  011EF6  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 17678  011EFA  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17679  011EFE  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17680  011F02  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17681  011F06  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 17682  011F0A  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17683  011F0E  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17684  011F12  0100               	movlb	0	; () banked
 17685  011F14  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 17686  011F16  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17687  011F1A  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17688  011F1E  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17689  011F22  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17690                           
 17691                           ; BSR set to: 0
 17692                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 17693  011F26  C07E  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 17694                           
 17695                           ; BSR set to: 0
 17696                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 17697  011F2A  0E00               	movlw	0
 17698  011F2C  010F               	movlb	15	; () banked
 17699  011F2E  6F32               	movwf	50,b	;volatile
 17700                           
 17701                           ; BSR set to: 15
 17702                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 17703  011F30  010F               	movlb	15	; () banked
 17704  011F32  8732               	bsf	50,3,b	;volatile
 17705                           
 17706                           ; BSR set to: 15
 17707                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 17708  011F34  0100               	movlb	0	; () banked
 17709  011F36  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17710  011F38  D002               	goto	l402
 17711                           
 17712                           ; BSR set to: 0
 17713                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 17714  011F3A  010F               	movlb	15	; () banked
 17715  011F3C  8132               	bsf	50,0,b	;volatile
 17716  011F3E                     l402:
 17717                           
 17718                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 17719  011F3E  0100               	movlb	0	; () banked
 17720  011F40  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17721  011F42  D002               	goto	l403
 17722                           
 17723                           ; BSR set to: 0
 17724                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 17725  011F44  010F               	movlb	15	; () banked
 17726  011F46  8332               	bsf	50,1,b	;volatile
 17727  011F48                     l403:
 17728                           
 17729                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 17730  011F48  0100               	movlb	0	; () banked
 17731  011F4A  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17732  011F4C  D002               	goto	l404
 17733                           
 17734                           ; BSR set to: 0
 17735                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 17736  011F4E  010F               	movlb	15	; () banked
 17737  011F50  8B32               	bsf	50,5,b	;volatile
 17738  011F52                     l404:
 17739                           
 17740                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 17741  011F52  0100               	movlb	0	; () banked
 17742  011F54  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17743  011F56  D002               	goto	l405
 17744                           
 17745                           ; BSR set to: 0
 17746                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 17747  011F58  010F               	movlb	15	; () banked
 17748  011F5A  8D32               	bsf	50,6,b	;volatile
 17749  011F5C                     l405:
 17750                           
 17751                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 17752  011F5C  0100               	movlb	0	; () banked
 17753  011F5E  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17754  011F60  D003               	goto	l5790
 17755                           
 17756                           ; BSR set to: 0
 17757                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 17758  011F62  010F               	movlb	15	; () banked
 17759  011F64  8F32               	bsf	50,7,b	;volatile
 17760  011F66  D000               	goto	l5790
 17761  011F68                     l5790:
 17762                           
 17763                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 17764  011F68  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 17765  011F6C  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17766  011F70  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17767  011F74  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17768  011F78  0E16               	movlw	22
 17769  011F7A  D006               	goto	u6760
 17770  011F7C                     u6765:
 17771  011F7C  0100               	movlb	0	; () banked
 17772  011F7E  90D8               	bcf	status,0,c
 17773  011F80  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17774  011F82  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17775  011F84  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17776  011F86  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 17777  011F88                     u6760:
 17778  011F88  2EE8               	decfsz	wreg,f,c
 17779  011F8A  D7F8               	goto	u6765
 17780  011F8C  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17781  011F90  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17782  011F94  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17783  011F98  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17784                           
 17785                           ; BSR set to: 0
 17786                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 17787  011F9C  0100               	movlb	0	; () banked
 17788  011F9E  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 17789  011FA0  0100               	movlb	0	; () banked
 17790  011FA2  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17791  011FA4  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17792  011FA6  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17793  011FA8  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17794                           
 17795                           ; BSR set to: 0
 17796                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 17797  011FAA  C07E  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 17798                           
 17799                           ;inc\CANlib.h: 407: }
 17800  011FAE  D05A               	goto	l5810
 17801  011FB0                     l401:
 17802                           
 17803                           ; BSR set to: 0
 17804                           ;inc\CANlib.h: 409: else
 17805                           ;inc\CANlib.h: 411: {
 17806                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 17807  011FB0  010F               	movlb	15	; () banked
 17808  011FB2  9732               	bcf	50,3,b	;volatile
 17809                           
 17810                           ; BSR set to: 15
 17811                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 17812  011FB4  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 17813  011FB8  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17814  011FBC  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17815  011FC0  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17816  011FC4  0E04               	movlw	4
 17817  011FC6  D006               	goto	u6770
 17818  011FC8                     u6775:
 17819  011FC8  0100               	movlb	0	; () banked
 17820  011FCA  90D8               	bcf	status,0,c
 17821  011FCC  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17822  011FCE  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17823  011FD0  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17824  011FD2  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 17825  011FD4                     u6770:
 17826  011FD4  2EE8               	decfsz	wreg,f,c
 17827  011FD6  D7F8               	goto	u6775
 17828  011FD8  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17829  011FDC  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17830  011FE0  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17831  011FE4  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17832                           
 17833                           ; BSR set to: 0
 17834                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 17835  011FE8  0100               	movlb	0	; () banked
 17836  011FEA  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 17837  011FEC  0100               	movlb	0	; () banked
 17838  011FEE  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17839  011FF0  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17840  011FF2  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17841  011FF4  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17842                           
 17843                           ; BSR set to: 0
 17844                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 17845  011FF6  C07E  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 17846                           
 17847                           ; BSR set to: 0
 17848                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 17849  011FFA  0E07               	movlw	7
 17850  011FFC  0100               	movlb	0	; () banked
 17851  011FFE  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 17852  012000  0100               	movlb	0	; () banked
 17853  012002  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 17854  012004  0E00               	movlw	0
 17855  012006  0100               	movlb	0	; () banked
 17856  012008  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17857  01200A  0100               	movlb	0	; () banked
 17858  01200C  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17859  01200E  0E00               	movlw	0
 17860  012010  0100               	movlb	0	; () banked
 17861  012012  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17862  012014  0100               	movlb	0	; () banked
 17863  012016  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17864  012018  0E00               	movlw	0
 17865  01201A  0100               	movlb	0	; () banked
 17866  01201C  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17867  01201E  0100               	movlb	0	; () banked
 17868  012020  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17869                           
 17870                           ; BSR set to: 0
 17871                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 17872  012022  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 17873  012026  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17874  01202A  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17875  01202E  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17876  012032  0E05               	movlw	5
 17877  012034                     u6785:
 17878  012034  90D8               	bcf	status,0,c
 17879  012036  0100               	movlb	0	; () banked
 17880  012038  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 17881  01203A  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17882  01203C  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17883  01203E  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17884  012040  2EE8               	decfsz	wreg,f,c
 17885  012042  D7F8               	goto	u6785
 17886  012044  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 17887  012048  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17888  01204C  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17889  012050  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17890                           
 17891                           ; BSR set to: 0
 17892                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 17893  012054  010F               	movlb	15	; () banked
 17894  012056  5132               	movf	50,w,b	;volatile
 17895  012058  0B1F               	andlw	31
 17896  01205A  010F               	movlb	15	; () banked
 17897  01205C  6F32               	movwf	50,b	;volatile
 17898                           
 17899                           ; BSR set to: 15
 17900                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 17901  01205E  C07E  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 17902  012062  D000               	goto	l5810
 17903  012064                     l5810:
 17904                           
 17905                           ;inc\CANlib.h: 422: }
 17906                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 17907  012064  0100               	movlb	0	; () banked
 17908  012066  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 17909  012068  D003               	goto	l408
 17910                           
 17911                           ; BSR set to: 0
 17912                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 17913  01206A  010F               	movlb	15	; () banked
 17914  01206C  8130               	bsf	48,0,b	;volatile
 17915  01206E  D002               	goto	l409
 17916  012070                     l408:
 17917                           
 17918                           ; BSR set to: 0
 17919                           ;inc\CANlib.h: 426: else
 17920                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 17921  012070  010F               	movlb	15	; () banked
 17922  012072  9130               	bcf	48,0,b	;volatile
 17923  012074                     l409:
 17924                           
 17925                           ; BSR set to: 15
 17926                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 17927  012074  0100               	movlb	0	; () banked
 17928  012076  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 17929  012078  D003               	goto	l410
 17930                           
 17931                           ; BSR set to: 0
 17932                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 17933  01207A  010F               	movlb	15	; () banked
 17934  01207C  8330               	bsf	48,1,b	;volatile
 17935  01207E  D003               	goto	l5816
 17936  012080                     l410:
 17937                           
 17938                           ; BSR set to: 0
 17939                           ;inc\CANlib.h: 430: else
 17940                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 17941  012080  010F               	movlb	15	; () banked
 17942  012082  9330               	bcf	48,1,b	;volatile
 17943  012084  D000               	goto	l5816
 17944  012086                     l5816:
 17945                           
 17946                           ; BSR set to: 15
 17947                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 17948  012086  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 17949  01208A  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 17950  01208E  50DF               	movf	indf2,w,c
 17951  012090  010F               	movlb	15	; () banked
 17952  012092  6F36               	movwf	54,b	;volatile
 17953                           
 17954                           ; BSR set to: 15
 17955                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 17956  012094  0100               	movlb	0	; () banked
 17957  012096  EE20 F001          	lfsr	2,1
 17958  01209A  5176               	movf	CANsendMessage@data& (0+255),w,b
 17959  01209C  26D9               	addwf	fsr2l,f,c
 17960  01209E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17961  0120A0  22DA               	addwfc	fsr2h,f,c
 17962  0120A2  50DF               	movf	indf2,w,c
 17963  0120A4  010F               	movlb	15	; () banked
 17964  0120A6  6F37               	movwf	55,b	;volatile
 17965                           
 17966                           ; BSR set to: 15
 17967                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 17968  0120A8  0100               	movlb	0	; () banked
 17969  0120AA  EE20 F002          	lfsr	2,2
 17970  0120AE  5176               	movf	CANsendMessage@data& (0+255),w,b
 17971  0120B0  26D9               	addwf	fsr2l,f,c
 17972  0120B2  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17973  0120B4  22DA               	addwfc	fsr2h,f,c
 17974  0120B6  50DF               	movf	indf2,w,c
 17975  0120B8  010F               	movlb	15	; () banked
 17976  0120BA  6F38               	movwf	56,b	;volatile
 17977                           
 17978                           ; BSR set to: 15
 17979                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 17980  0120BC  0100               	movlb	0	; () banked
 17981  0120BE  EE20 F003          	lfsr	2,3
 17982  0120C2  5176               	movf	CANsendMessage@data& (0+255),w,b
 17983  0120C4  26D9               	addwf	fsr2l,f,c
 17984  0120C6  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17985  0120C8  22DA               	addwfc	fsr2h,f,c
 17986  0120CA  50DF               	movf	indf2,w,c
 17987  0120CC  010F               	movlb	15	; () banked
 17988  0120CE  6F39               	movwf	57,b	;volatile
 17989                           
 17990                           ; BSR set to: 15
 17991                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 17992  0120D0  0100               	movlb	0	; () banked
 17993  0120D2  EE20 F004          	lfsr	2,4
 17994  0120D6  5176               	movf	CANsendMessage@data& (0+255),w,b
 17995  0120D8  26D9               	addwf	fsr2l,f,c
 17996  0120DA  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17997  0120DC  22DA               	addwfc	fsr2h,f,c
 17998  0120DE  50DF               	movf	indf2,w,c
 17999  0120E0  010F               	movlb	15	; () banked
 18000  0120E2  6F3A               	movwf	58,b	;volatile
 18001                           
 18002                           ; BSR set to: 15
 18003                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 18004  0120E4  0100               	movlb	0	; () banked
 18005  0120E6  EE20 F005          	lfsr	2,5
 18006  0120EA  5176               	movf	CANsendMessage@data& (0+255),w,b
 18007  0120EC  26D9               	addwf	fsr2l,f,c
 18008  0120EE  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18009  0120F0  22DA               	addwfc	fsr2h,f,c
 18010  0120F2  50DF               	movf	indf2,w,c
 18011  0120F4  010F               	movlb	15	; () banked
 18012  0120F6  6F3B               	movwf	59,b	;volatile
 18013                           
 18014                           ; BSR set to: 15
 18015                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 18016  0120F8  0100               	movlb	0	; () banked
 18017  0120FA  EE20 F006          	lfsr	2,6
 18018  0120FE  5176               	movf	CANsendMessage@data& (0+255),w,b
 18019  012100  26D9               	addwf	fsr2l,f,c
 18020  012102  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18021  012104  22DA               	addwfc	fsr2h,f,c
 18022  012106  50DF               	movf	indf2,w,c
 18023  012108  010F               	movlb	15	; () banked
 18024  01210A  6F3C               	movwf	60,b	;volatile
 18025                           
 18026                           ; BSR set to: 15
 18027                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 18028  01210C  0100               	movlb	0	; () banked
 18029  01210E  EE20 F007          	lfsr	2,7
 18030  012112  5176               	movf	CANsendMessage@data& (0+255),w,b
 18031  012114  26D9               	addwf	fsr2l,f,c
 18032  012116  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18033  012118  22DA               	addwfc	fsr2h,f,c
 18034  01211A  50DF               	movf	indf2,w,c
 18035  01211C  010F               	movlb	15	; () banked
 18036  01211E  6F3D               	movwf	61,b	;volatile
 18037                           
 18038                           ; BSR set to: 15
 18039                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 18040  012120  010F               	movlb	15	; () banked
 18041  012122  8730               	bsf	48,3,b	;volatile
 18042                           
 18043                           ; BSR set to: 15
 18044                           ;inc\CANlib.h: 444: return;
 18045  012124  0012               	return	
 18046  012126                     l398:
 18047                           
 18048                           ; BSR set to: 15
 18049                           ;inc\CANlib.h: 445: }
 18050                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 18051  012126  010F               	movlb	15	; () banked
 18052  012128  B720               	btfsc	32,3,b	;volatile
 18053  01212A  0012               	return	
 18054                           
 18055                           ; BSR set to: 15
 18056                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 18057  01212C  C078  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 18058                           
 18059                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 18060  012130  0100               	movlb	0	; () banked
 18061  012132  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
 18062  012134  D003               	goto	l413
 18063                           
 18064                           ; BSR set to: 0
 18065                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 18066  012136  010F               	movlb	15	; () banked
 18067  012138  8D25               	bsf	37,6,b	;volatile
 18068  01213A  D002               	goto	l414
 18069  01213C                     l413:
 18070                           
 18071                           ; BSR set to: 0
 18072                           ;inc\CANlib.h: 454: else
 18073                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 18074  01213C  010F               	movlb	15	; () banked
 18075  01213E  9D25               	bcf	37,6,b	;volatile
 18076  012140                     l414:
 18077                           
 18078                           ; BSR set to: 15
 18079                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 18080  012140  0100               	movlb	0	; () banked
 18081  012142  A779               	btfss	CANsendMessage@flags& (0+255),3,b
 18082  012144  D07A               	goto	l415
 18083                           
 18084                           ; BSR set to: 0
 18085                           ;inc\CANlib.h: 458: {
 18086                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 18087  012146  0100               	movlb	0	; () banked
 18088  012148  5172               	movf	CANsendMessage@identifier& (0+255),w,b
 18089  01214A  0100               	movlb	0	; () banked
 18090  01214C  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18091  01214E  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18092  012150  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18093  012152  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18094                           
 18095                           ; BSR set to: 0
 18096                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 18097  012154  C07E  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 18098                           
 18099                           ; BSR set to: 0
 18100                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 18101  012158  0E00               	movlw	0
 18102  01215A  0100               	movlb	0	; () banked
 18103  01215C  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 18104  01215E  0100               	movlb	0	; () banked
 18105  012160  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18106  012162  0EFF               	movlw	255
 18107  012164  0100               	movlb	0	; () banked
 18108  012166  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18109  012168  0100               	movlb	0	; () banked
 18110  01216A  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18111  01216C  0E00               	movlw	0
 18112  01216E  0100               	movlb	0	; () banked
 18113  012170  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18114  012172  0100               	movlb	0	; () banked
 18115  012174  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18116  012176  0E00               	movlw	0
 18117  012178  0100               	movlb	0	; () banked
 18118  01217A  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18119  01217C  0100               	movlb	0	; () banked
 18120  01217E  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18121                           
 18122                           ; BSR set to: 0
 18123                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 18124  012180  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 18125  012184  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18126  012188  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18127  01218C  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18128  012190  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
 18129  012194  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 18130  012198  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 18131  01219C  0100               	movlb	0	; () banked
 18132  01219E  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
 18133  0121A0  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 18134  0121A4  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18135  0121A8  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18136  0121AC  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18137                           
 18138                           ; BSR set to: 0
 18139                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 18140  0121B0  C07E  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 18141                           
 18142                           ; BSR set to: 0
 18143                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 18144  0121B4  0E00               	movlw	0
 18145  0121B6  010F               	movlb	15	; () banked
 18146  0121B8  6F22               	movwf	34,b	;volatile
 18147                           
 18148                           ; BSR set to: 15
 18149                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 18150  0121BA  010F               	movlb	15	; () banked
 18151  0121BC  8722               	bsf	34,3,b	;volatile
 18152                           
 18153                           ; BSR set to: 15
 18154                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 18155  0121BE  0100               	movlb	0	; () banked
 18156  0121C0  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 18157  0121C2  D002               	goto	l416
 18158                           
 18159                           ; BSR set to: 0
 18160                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 18161  0121C4  010F               	movlb	15	; () banked
 18162  0121C6  8122               	bsf	34,0,b	;volatile
 18163  0121C8                     l416:
 18164                           
 18165                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 18166  0121C8  0100               	movlb	0	; () banked
 18167  0121CA  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 18168  0121CC  D002               	goto	l417
 18169                           
 18170                           ; BSR set to: 0
 18171                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 18172  0121CE  010F               	movlb	15	; () banked
 18173  0121D0  8322               	bsf	34,1,b	;volatile
 18174  0121D2                     l417:
 18175                           
 18176                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 18177  0121D2  0100               	movlb	0	; () banked
 18178  0121D4  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 18179  0121D6  D002               	goto	l418
 18180                           
 18181                           ; BSR set to: 0
 18182                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 18183  0121D8  010F               	movlb	15	; () banked
 18184  0121DA  8B22               	bsf	34,5,b	;volatile
 18185  0121DC                     l418:
 18186                           
 18187                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 18188  0121DC  0100               	movlb	0	; () banked
 18189  0121DE  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 18190  0121E0  D002               	goto	l419
 18191                           
 18192                           ; BSR set to: 0
 18193                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 18194  0121E2  010F               	movlb	15	; () banked
 18195  0121E4  8D22               	bsf	34,6,b	;volatile
 18196  0121E6                     l419:
 18197                           
 18198                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 18199  0121E6  0100               	movlb	0	; () banked
 18200  0121E8  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 18201  0121EA  D003               	goto	l5866
 18202                           
 18203                           ; BSR set to: 0
 18204                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 18205  0121EC  010F               	movlb	15	; () banked
 18206  0121EE  8F22               	bsf	34,7,b	;volatile
 18207  0121F0  D000               	goto	l5866
 18208  0121F2                     l5866:
 18209                           
 18210                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 18211  0121F2  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 18212  0121F6  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18213  0121FA  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18214  0121FE  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18215  012202  0E16               	movlw	22
 18216  012204  D006               	goto	u6890
 18217  012206                     u6895:
 18218  012206  0100               	movlb	0	; () banked
 18219  012208  90D8               	bcf	status,0,c
 18220  01220A  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18221  01220C  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18222  01220E  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18223  012210  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 18224  012212                     u6890:
 18225  012212  2EE8               	decfsz	wreg,f,c
 18226  012214  D7F8               	goto	u6895
 18227  012216  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 18228  01221A  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18229  01221E  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18230  012222  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18231                           
 18232                           ; BSR set to: 0
 18233                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 18234  012226  0100               	movlb	0	; () banked
 18235  012228  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 18236  01222A  0100               	movlb	0	; () banked
 18237  01222C  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18238  01222E  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18239  012230  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18240  012232  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18241                           
 18242                           ; BSR set to: 0
 18243                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 18244  012234  C07E  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 18245                           
 18246                           ;inc\CANlib.h: 483: }
 18247  012238  D05A               	goto	l5886
 18248  01223A                     l415:
 18249                           
 18250                           ; BSR set to: 0
 18251                           ;inc\CANlib.h: 485: else
 18252                           ;inc\CANlib.h: 487: {
 18253                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 18254  01223A  010F               	movlb	15	; () banked
 18255  01223C  9722               	bcf	34,3,b	;volatile
 18256                           
 18257                           ; BSR set to: 15
 18258                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 18259  01223E  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
 18260  012242  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 18261  012246  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 18262  01224A  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 18263  01224E  0E04               	movlw	4
 18264  012250  D006               	goto	u6900
 18265  012252                     u6905:
 18266  012252  0100               	movlb	0	; () banked
 18267  012254  90D8               	bcf	status,0,c
 18268  012256  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 18269  012258  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 18270  01225A  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 18271  01225C  337A               	rrcf	??_CANsendMessage& (0+255),f,b
 18272  01225E                     u6900:
 18273  01225E  2EE8               	decfsz	wreg,f,c
 18274  012260  D7F8               	goto	u6905
 18275  012262  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 18276  012266  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18277  01226A  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18278  01226E  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18279                           
 18280                           ; BSR set to: 0
 18281                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 18282  012272  0100               	movlb	0	; () banked
 18283  012274  517E               	movf	CANsendMessage@tamp& (0+255),w,b
 18284  012276  0100               	movlb	0	; () banked
 18285  012278  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18286  01227A  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 18287  01227C  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 18288  01227E  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 18289                           
 18290                           ; BSR set to: 0
 18291                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 18292  012280  C07E  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 18293                           
 18294                           ; BSR set to: 0
 18295                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 18296  012284  0E07               	movlw	7
 18297  012286  0100               	movlb	0	; () banked
 18298  012288  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
 18299  01228A  0100               	movlb	0	; () banked
 18300  01228C  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
 18301  01228E  0E00               	movlw	0
 18302  012290  0100               	movlb	0	; () banked
 18303  012292  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 18304  012294  0100               	movlb	0	; () banked
 18305  012296  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 18306  012298  0E00               	movlw	0
 18307  01229A  0100               	movlb	0	; () banked
 18308  01229C  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 18309  01229E  0100               	movlb	0	; () banked
 18310  0122A0  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 18311  0122A2  0E00               	movlw	0
 18312  0122A4  0100               	movlb	0	; () banked
 18313  0122A6  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 18314  0122A8  0100               	movlb	0	; () banked
 18315  0122AA  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 18316                           
 18317                           ; BSR set to: 0
 18318                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 18319  0122AC  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
 18320  0122B0  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 18321  0122B4  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 18322  0122B8  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 18323  0122BC  0E05               	movlw	5
 18324  0122BE                     u6915:
 18325  0122BE  90D8               	bcf	status,0,c
 18326  0122C0  0100               	movlb	0	; () banked
 18327  0122C2  377A               	rlcf	??_CANsendMessage& (0+255),f,b
 18328  0122C4  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 18329  0122C6  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 18330  0122C8  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 18331  0122CA  2EE8               	decfsz	wreg,f,c
 18332  0122CC  D7F8               	goto	u6915
 18333  0122CE  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
 18334  0122D2  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 18335  0122D6  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 18336  0122DA  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 18337                           
 18338                           ; BSR set to: 0
 18339                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 18340  0122DE  010F               	movlb	15	; () banked
 18341  0122E0  5122               	movf	34,w,b	;volatile
 18342  0122E2  0B1F               	andlw	31
 18343  0122E4  010F               	movlb	15	; () banked
 18344  0122E6  6F22               	movwf	34,b	;volatile
 18345                           
 18346                           ; BSR set to: 15
 18347                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 18348  0122E8  C07E  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 18349  0122EC  D000               	goto	l5886
 18350  0122EE                     l5886:
 18351                           
 18352                           ;inc\CANlib.h: 498: }
 18353                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 18354  0122EE  0100               	movlb	0	; () banked
 18355  0122F0  A179               	btfss	CANsendMessage@flags& (0+255),0,b
 18356  0122F2  D003               	goto	l422
 18357                           
 18358                           ; BSR set to: 0
 18359                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 18360  0122F4  010F               	movlb	15	; () banked
 18361  0122F6  8120               	bsf	32,0,b	;volatile
 18362  0122F8  D002               	goto	l423
 18363  0122FA                     l422:
 18364                           
 18365                           ; BSR set to: 0
 18366                           ;inc\CANlib.h: 502: else
 18367                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 18368  0122FA  010F               	movlb	15	; () banked
 18369  0122FC  9120               	bcf	32,0,b	;volatile
 18370  0122FE                     l423:
 18371                           
 18372                           ; BSR set to: 15
 18373                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 18374  0122FE  0100               	movlb	0	; () banked
 18375  012300  A379               	btfss	CANsendMessage@flags& (0+255),1,b
 18376  012302  D003               	goto	l424
 18377                           
 18378                           ; BSR set to: 0
 18379                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 18380  012304  010F               	movlb	15	; () banked
 18381  012306  8320               	bsf	32,1,b	;volatile
 18382  012308  D003               	goto	l5892
 18383  01230A                     l424:
 18384                           
 18385                           ; BSR set to: 0
 18386                           ;inc\CANlib.h: 506: else
 18387                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 18388  01230A  010F               	movlb	15	; () banked
 18389  01230C  9320               	bcf	32,1,b	;volatile
 18390  01230E  D000               	goto	l5892
 18391  012310                     l5892:
 18392                           
 18393                           ; BSR set to: 15
 18394                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 18395  012310  C076  FFD9         	movff	CANsendMessage@data,fsr2l
 18396  012314  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18397  012318  50DF               	movf	indf2,w,c
 18398  01231A  010F               	movlb	15	; () banked
 18399  01231C  6F26               	movwf	38,b	;volatile
 18400                           
 18401                           ; BSR set to: 15
 18402                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 18403  01231E  0100               	movlb	0	; () banked
 18404  012320  EE20 F001          	lfsr	2,1
 18405  012324  5176               	movf	CANsendMessage@data& (0+255),w,b
 18406  012326  26D9               	addwf	fsr2l,f,c
 18407  012328  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18408  01232A  22DA               	addwfc	fsr2h,f,c
 18409  01232C  50DF               	movf	indf2,w,c
 18410  01232E  010F               	movlb	15	; () banked
 18411  012330  6F27               	movwf	39,b	;volatile
 18412                           
 18413                           ; BSR set to: 15
 18414                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 18415  012332  0100               	movlb	0	; () banked
 18416  012334  EE20 F002          	lfsr	2,2
 18417  012338  5176               	movf	CANsendMessage@data& (0+255),w,b
 18418  01233A  26D9               	addwf	fsr2l,f,c
 18419  01233C  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18420  01233E  22DA               	addwfc	fsr2h,f,c
 18421  012340  50DF               	movf	indf2,w,c
 18422  012342  010F               	movlb	15	; () banked
 18423  012344  6F28               	movwf	40,b	;volatile
 18424                           
 18425                           ; BSR set to: 15
 18426                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 18427  012346  0100               	movlb	0	; () banked
 18428  012348  EE20 F003          	lfsr	2,3
 18429  01234C  5176               	movf	CANsendMessage@data& (0+255),w,b
 18430  01234E  26D9               	addwf	fsr2l,f,c
 18431  012350  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18432  012352  22DA               	addwfc	fsr2h,f,c
 18433  012354  50DF               	movf	indf2,w,c
 18434  012356  010F               	movlb	15	; () banked
 18435  012358  6F29               	movwf	41,b	;volatile
 18436                           
 18437                           ; BSR set to: 15
 18438                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 18439  01235A  0100               	movlb	0	; () banked
 18440  01235C  EE20 F004          	lfsr	2,4
 18441  012360  5176               	movf	CANsendMessage@data& (0+255),w,b
 18442  012362  26D9               	addwf	fsr2l,f,c
 18443  012364  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18444  012366  22DA               	addwfc	fsr2h,f,c
 18445  012368  50DF               	movf	indf2,w,c
 18446  01236A  010F               	movlb	15	; () banked
 18447  01236C  6F2A               	movwf	42,b	;volatile
 18448                           
 18449                           ; BSR set to: 15
 18450                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 18451  01236E  0100               	movlb	0	; () banked
 18452  012370  EE20 F005          	lfsr	2,5
 18453  012374  5176               	movf	CANsendMessage@data& (0+255),w,b
 18454  012376  26D9               	addwf	fsr2l,f,c
 18455  012378  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18456  01237A  22DA               	addwfc	fsr2h,f,c
 18457  01237C  50DF               	movf	indf2,w,c
 18458  01237E  010F               	movlb	15	; () banked
 18459  012380  6F2B               	movwf	43,b	;volatile
 18460                           
 18461                           ; BSR set to: 15
 18462                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 18463  012382  0100               	movlb	0	; () banked
 18464  012384  EE20 F006          	lfsr	2,6
 18465  012388  5176               	movf	CANsendMessage@data& (0+255),w,b
 18466  01238A  26D9               	addwf	fsr2l,f,c
 18467  01238C  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18468  01238E  22DA               	addwfc	fsr2h,f,c
 18469  012390  50DF               	movf	indf2,w,c
 18470  012392  010F               	movlb	15	; () banked
 18471  012394  6F2C               	movwf	44,b	;volatile
 18472                           
 18473                           ; BSR set to: 15
 18474                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 18475  012396  0100               	movlb	0	; () banked
 18476  012398  EE20 F007          	lfsr	2,7
 18477  01239C  5176               	movf	CANsendMessage@data& (0+255),w,b
 18478  01239E  26D9               	addwf	fsr2l,f,c
 18479  0123A0  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18480  0123A2  22DA               	addwfc	fsr2h,f,c
 18481  0123A4  50DF               	movf	indf2,w,c
 18482  0123A6  010F               	movlb	15	; () banked
 18483  0123A8  6F2D               	movwf	45,b	;volatile
 18484                           
 18485                           ; BSR set to: 15
 18486                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 18487  0123AA  010F               	movlb	15	; () banked
 18488  0123AC  8720               	bsf	32,3,b	;volatile
 18489                           
 18490                           ; BSR set to: 15
 18491                           ;inc\CANlib.h: 520: return;
 18492  0123AE  0012               	return	
 18493                           
 18494                           ; BSR set to: 15
 18495                           
 18496                           ; BSR set to: 15
 18497  0123B0  0012               	return		;funcret
 18498  0123B2                     __end_of_CANsendMessage:
 18499                           	opt stack 0
 18500                           tblptru	equ	0xFF8
 18501                           tblptrh	equ	0xFF7
 18502                           tblptrl	equ	0xFF6
 18503                           tablat	equ	0xFF5
 18504                           prodh	equ	0xFF4
 18505                           prodl	equ	0xFF3
 18506                           intcon	equ	0xFF2
 18507                           postinc0	equ	0xFEE
 18508                           wreg	equ	0xFE8
 18509                           indf1	equ	0xFE7
 18510                           plusw1	equ	0xFE3
 18511                           fsr1h	equ	0xFE2
 18512                           fsr1l	equ	0xFE1
 18513                           indf2	equ	0xFDF
 18514                           postinc2	equ	0xFDE
 18515                           plusw2	equ	0xFDB
 18516                           fsr2h	equ	0xFDA
 18517                           fsr2l	equ	0xFD9
 18518                           status	equ	0xFD8
 18519                           
 18520 ;; *************** function _CANisTxReady *****************
 18521 ;; Defined at:
 18522 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 18523 ;; Parameters:    Size  Location     Type
 18524 ;;		None
 18525 ;; Auto vars:     Size  Location     Type
 18526 ;;		None
 18527 ;; Return value:  Size  Location     Type
 18528 ;;                  1    wreg      unsigned char 
 18529 ;; Registers used:
 18530 ;;		wreg, status,2
 18531 ;; Tracked objects:
 18532 ;;		On entry : 0/0
 18533 ;;		On exit  : 0/0
 18534 ;;		Unchanged: 0/0
 18535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18537 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18539 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18540 ;;Total ram usage:        1 bytes
 18541 ;; Hardware stack levels used:    1
 18542 ;; Hardware stack levels required when called:    3
 18543 ;; This function calls:
 18544 ;;		Nothing
 18545 ;; This function is called by:
 18546 ;;		_main
 18547 ;;		_LCD_Handler
 18548 ;;		_CAN_Tx
 18549 ;; This function uses a non-reentrant model
 18550 ;;
 18551                           
 18552                           	psect	text59
 18553  015EAE                     __ptext59:
 18554                           	opt stack 0
 18555  015EAE                     _CANisTxReady:
 18556                           	opt stack 26
 18557                           
 18558                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 18559                           
 18560                           ; BSR set to: 15
 18561                           ;incstack = 0
 18562  015EAE  0E01               	movlw	1
 18563  015EB0  0100               	movlb	0	; () banked
 18564  015EB2  6F72               	movwf	_CANisTxReady$3251& (0+255),b
 18565                           
 18566                           ; BSR set to: 0
 18567  015EB4  010F               	movlb	15	; () banked
 18568  015EB6  A740               	btfss	64,3,b	;volatile
 18569  015EB8  D009               	goto	l576
 18570                           
 18571                           ; BSR set to: 15
 18572  015EBA  010F               	movlb	15	; () banked
 18573  015EBC  A730               	btfss	48,3,b	;volatile
 18574  015EBE  D006               	goto	l576
 18575                           
 18576                           ; BSR set to: 15
 18577  015EC0  010F               	movlb	15	; () banked
 18578  015EC2  A720               	btfss	32,3,b	;volatile
 18579  015EC4  D003               	goto	l576
 18580                           
 18581                           ; BSR set to: 15
 18582  015EC6  0E00               	movlw	0
 18583  015EC8  0100               	movlb	0	; () banked
 18584  015ECA  6F72               	movwf	_CANisTxReady$3251& (0+255),b
 18585  015ECC                     l576:
 18586  015ECC  0100               	movlb	0	; () banked
 18587  015ECE  5172               	movf	_CANisTxReady$3251& (0+255),w,b
 18588  015ED0  0012               	return	
 18589                           
 18590                           ; BSR set to: 0
 18591                           
 18592                           ; BSR set to: 0
 18593  015ED2  0012               	return		;funcret
 18594  015ED4                     __end_of_CANisTxReady:
 18595                           	opt stack 0
 18596                           tblptru	equ	0xFF8
 18597                           tblptrh	equ	0xFF7
 18598                           tblptrl	equ	0xFF6
 18599                           tablat	equ	0xFF5
 18600                           prodh	equ	0xFF4
 18601                           prodl	equ	0xFF3
 18602                           intcon	equ	0xFF2
 18603                           postinc0	equ	0xFEE
 18604                           wreg	equ	0xFE8
 18605                           indf1	equ	0xFE7
 18606                           plusw1	equ	0xFE3
 18607                           fsr1h	equ	0xFE2
 18608                           fsr1l	equ	0xFE1
 18609                           indf2	equ	0xFDF
 18610                           postinc2	equ	0xFDE
 18611                           plusw2	equ	0xFDB
 18612                           fsr2h	equ	0xFDA
 18613                           fsr2l	equ	0xFD9
 18614                           status	equ	0xFD8
 18615                           
 18616 ;; *************** function _ISR_bassa *****************
 18617 ;; Defined at:
 18618 ;;		line 200 in file "RemoteCan.c"
 18619 ;; Parameters:    Size  Location     Type
 18620 ;;		None
 18621 ;; Auto vars:     Size  Location     Type
 18622 ;;		None
 18623 ;; Return value:  Size  Location     Type
 18624 ;;		None               void
 18625 ;; Registers used:
 18626 ;;		wreg, status,2, status,0
 18627 ;; Tracked objects:
 18628 ;;		On entry : 0/0
 18629 ;;		On exit  : 0/0
 18630 ;;		Unchanged: 0/0
 18631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18634 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18635 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18636 ;;Total ram usage:       17 bytes
 18637 ;; Hardware stack levels used:    1
 18638 ;; Hardware stack levels required when called:    2
 18639 ;; This function calls:
 18640 ;;		Nothing
 18641 ;; This function is called by:
 18642 ;;		Interrupt level 1
 18643 ;; This function uses a non-reentrant model
 18644 ;;
 18645                           
 18646                           	psect	intcodelo
 18647  000018                     __pintcodelo:
 18648                           	opt stack 0
 18649  000018                     _ISR_bassa:
 18650                           	opt stack 20
 18651                           
 18652                           ; BSR set to: 0
 18653                           ;incstack = 0
 18654  000018  CFD8 F029          	movff	status,??_ISR_bassa
 18655  00001C  CFE8 F02A          	movff	wreg,??_ISR_bassa+1
 18656  000020  CFE0 F02B          	movff	bsr,??_ISR_bassa+2
 18657  000024  CFFA F02C          	movff	pclath,??_ISR_bassa+3
 18658  000028  CFFB F02D          	movff	pclatu,??_ISR_bassa+4
 18659  00002C  CFE9 F02E          	movff	fsr0l,??_ISR_bassa+5
 18660  000030  CFEA F02F          	movff	fsr0h,??_ISR_bassa+6
 18661  000034  CFE1 F030          	movff	fsr1l,??_ISR_bassa+7
 18662  000038  CFE2 F031          	movff	fsr1h,??_ISR_bassa+8
 18663  00003C  CFD9 F032          	movff	fsr2l,??_ISR_bassa+9
 18664  000040  CFDA F033          	movff	fsr2h,??_ISR_bassa+10
 18665  000044  CFF3 F034          	movff	prodl,??_ISR_bassa+11
 18666  000048  CFF4 F035          	movff	prodh,??_ISR_bassa+12
 18667  00004C  CFF6 F036          	movff	tblptrl,??_ISR_bassa+13
 18668  000050  CFF7 F037          	movff	tblptrh,??_ISR_bassa+14
 18669  000054  CFF8 F038          	movff	tblptru,??_ISR_bassa+15
 18670  000058  CFF5 F039          	movff	tablat,??_ISR_bassa+16
 18671                           
 18672                           ;RemoteCan.c: 201: if (PIR2bits.TMR3IF == 1) {
 18673  00005C  A2A1               	btfss	4001,1,c	;volatile
 18674  00005E  D00C               	goto	i1l804
 18675                           
 18676                           ;RemoteCan.c: 202: time_counter++;
 18677  000060  0E01               	movlw	1
 18678  000062  2605               	addwf	_time_counter,f,c	;volatile
 18679  000064  0E00               	movlw	0
 18680  000066  2206               	addwfc	_time_counter+1,f,c	;volatile
 18681  000068  2207               	addwfc	_time_counter+2,f,c	;volatile
 18682  00006A  2208               	addwfc	_time_counter+3,f,c	;volatile
 18683                           
 18684                           ;RemoteCan.c: 203: TMR3H = 0x63;
 18685  00006C  0E63               	movlw	99
 18686  00006E  6EB3               	movwf	4019,c	;volatile
 18687                           
 18688                           ;RemoteCan.c: 204: TMR3L = 0xC0;
 18689  000070  0EC0               	movlw	192
 18690  000072  6EB2               	movwf	4018,c	;volatile
 18691                           
 18692                           ;RemoteCan.c: 205: PIR2bits.TMR3IF = 0;
 18693  000074  92A1               	bcf	4001,1,c	;volatile
 18694  000076  D000               	goto	i1l804
 18695  000078                     i1l804:
 18696  000078  C039  FFF5         	movff	??_ISR_bassa+16,tablat
 18697  00007C  C038  FFF8         	movff	??_ISR_bassa+15,tblptru
 18698  000080  C037  FFF7         	movff	??_ISR_bassa+14,tblptrh
 18699  000084  C036  FFF6         	movff	??_ISR_bassa+13,tblptrl
 18700  000088  C035  FFF4         	movff	??_ISR_bassa+12,prodh
 18701  00008C  C034  FFF3         	movff	??_ISR_bassa+11,prodl
 18702  000090  C033  FFDA         	movff	??_ISR_bassa+10,fsr2h
 18703  000094  C032  FFD9         	movff	??_ISR_bassa+9,fsr2l
 18704  000098  C031  FFE2         	movff	??_ISR_bassa+8,fsr1h
 18705  00009C  C030  FFE1         	movff	??_ISR_bassa+7,fsr1l
 18706  0000A0  C02F  FFEA         	movff	??_ISR_bassa+6,fsr0h
 18707  0000A4  C02E  FFE9         	movff	??_ISR_bassa+5,fsr0l
 18708  0000A8  C02D  FFFB         	movff	??_ISR_bassa+4,pclatu
 18709  0000AC  C02C  FFFA         	movff	??_ISR_bassa+3,pclath
 18710  0000B0  C02B  FFE0         	movff	??_ISR_bassa+2,bsr
 18711  0000B4  C02A  FFE8         	movff	??_ISR_bassa+1,wreg
 18712  0000B8  C029  FFD8         	movff	??_ISR_bassa,status
 18713  0000BC  0010               	retfie	
 18714  0000BE                     __end_of_ISR_bassa:
 18715                           	opt stack 0
 18716                           pclatu	equ	0xFFB
 18717                           pclath	equ	0xFFA
 18718                           tblptru	equ	0xFF8
 18719                           tblptrh	equ	0xFF7
 18720                           tblptrl	equ	0xFF6
 18721                           tablat	equ	0xFF5
 18722                           prodh	equ	0xFF4
 18723                           prodl	equ	0xFF3
 18724                           intcon	equ	0xFF2
 18725                           postinc0	equ	0xFEE
 18726                           fsr0h	equ	0xFEA
 18727                           fsr0l	equ	0xFE9
 18728                           wreg	equ	0xFE8
 18729                           indf1	equ	0xFE7
 18730                           plusw1	equ	0xFE3
 18731                           fsr1h	equ	0xFE2
 18732                           fsr1l	equ	0xFE1
 18733                           bsr	equ	0xFE0
 18734                           indf2	equ	0xFDF
 18735                           postinc2	equ	0xFDE
 18736                           plusw2	equ	0xFDB
 18737                           fsr2h	equ	0xFDA
 18738                           fsr2l	equ	0xFD9
 18739                           status	equ	0xFD8
 18740                           
 18741 ;; *************** function _ISR_alta *****************
 18742 ;; Defined at:
 18743 ;;		line 122 in file "RemoteCan.c"
 18744 ;; Parameters:    Size  Location     Type
 18745 ;;		None
 18746 ;; Auto vars:     Size  Location     Type
 18747 ;;		None
 18748 ;; Return value:  Size  Location     Type
 18749 ;;		None               void
 18750 ;; Registers used:
 18751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18752 ;; Tracked objects:
 18753 ;;		On entry : 0/0
 18754 ;;		On exit  : 0/0
 18755 ;;		Unchanged: 0/0
 18756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18759 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18760 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18761 ;;Total ram usage:       18 bytes
 18762 ;; Hardware stack levels used:    1
 18763 ;; Hardware stack levels required when called:    1
 18764 ;; This function calls:
 18765 ;;		_CANisRxReady
 18766 ;;		_CANreceiveMessage
 18767 ;;		i2_CANisTxReady
 18768 ;;		i2_CANsendMessage
 18769 ;; This function is called by:
 18770 ;;		Interrupt level 2
 18771 ;; This function uses a non-reentrant model
 18772 ;;
 18773                           
 18774                           	psect	intcode
 18775  000008                     __pintcode:
 18776                           	opt stack 0
 18777  000008                     _ISR_alta:
 18778                           	opt stack 20
 18779                           
 18780                           ;incstack = 0
 18781  000008  CFFA F064          	movff	pclath,??_ISR_alta+4
 18782  00000C  CFFB F065          	movff	pclatu,??_ISR_alta+5
 18783  000010  CFE9 F066          	movff	fsr0l,??_ISR_alta+6
 18784  000014  EFAA  F09D         	goto	int_func
 18785                           pclatu	equ	0xFFB
 18786                           pclath	equ	0xFFA
 18787                           tblptru	equ	0xFF8
 18788                           tblptrh	equ	0xFF7
 18789                           tblptrl	equ	0xFF6
 18790                           tablat	equ	0xFF5
 18791                           prodh	equ	0xFF4
 18792                           prodl	equ	0xFF3
 18793                           intcon	equ	0xFF2
 18794                           postinc0	equ	0xFEE
 18795                           fsr0h	equ	0xFEA
 18796                           fsr0l	equ	0xFE9
 18797                           wreg	equ	0xFE8
 18798                           indf1	equ	0xFE7
 18799                           plusw1	equ	0xFE3
 18800                           fsr1h	equ	0xFE2
 18801                           fsr1l	equ	0xFE1
 18802                           bsr	equ	0xFE0
 18803                           indf2	equ	0xFDF
 18804                           postinc2	equ	0xFDE
 18805                           plusw2	equ	0xFDB
 18806                           fsr2h	equ	0xFDA
 18807                           fsr2l	equ	0xFD9
 18808                           status	equ	0xFD8
 18809                           
 18810                           	psect	intcode_body
 18811  013B54                     __pintcode_body:
 18812                           	opt stack 20
 18813  013B54                     int_func:
 18814                           	opt stack 20
 18815  013B54  CFEA F067          	movff	fsr0h,??_ISR_alta+7
 18816  013B58  CFE1 F068          	movff	fsr1l,??_ISR_alta+8
 18817  013B5C  CFE2 F069          	movff	fsr1h,??_ISR_alta+9
 18818  013B60  CFD9 F06A          	movff	fsr2l,??_ISR_alta+10
 18819  013B64  CFDA F06B          	movff	fsr2h,??_ISR_alta+11
 18820  013B68  CFF3 F06C          	movff	prodl,??_ISR_alta+12
 18821  013B6C  CFF4 F06D          	movff	prodh,??_ISR_alta+13
 18822  013B70  CFF6 F06E          	movff	tblptrl,??_ISR_alta+14
 18823  013B74  CFF7 F06F          	movff	tblptrh,??_ISR_alta+15
 18824  013B78  CFF8 F070          	movff	tblptru,??_ISR_alta+16
 18825  013B7C  CFF5 F071          	movff	tablat,??_ISR_alta+17
 18826                           
 18827                           ;RemoteCan.c: 123: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 18828  013B80  B2A4               	btfsc	4004,1,c	;volatile
 18829  013B82  D002               	goto	i2l8482
 18830  013B84  A0A4               	btfss	4004,0,c	;volatile
 18831  013B86  D101               	goto	i2l800
 18832  013B88                     i2l8482:
 18833                           
 18834                           ;RemoteCan.c: 124: if (CANisRxReady()) {
 18835  013B88  ECA5  F0AF         	call	_CANisRxReady	;wreg free
 18836  013B8C  0900               	iorlw	0
 18837  013B8E  B4D8               	btfsc	status,2,c
 18838  013B90  D0F9               	goto	i2l784
 18839                           
 18840                           ;RemoteCan.c: 125: CANreceiveMessage(&msg);
 18841  013B92  0E12               	movlw	low _msg
 18842  013B94  6E3A               	movwf	CANreceiveMessage@msg,c
 18843  013B96  0E00               	movlw	high _msg
 18844  013B98  6E3B               	movwf	CANreceiveMessage@msg+1,c
 18845  013B9A  EC2B  F095         	call	_CANreceiveMessage	;wreg free
 18846                           
 18847                           ;RemoteCan.c: 126: RTR_Flag = msg.RTR;
 18848  013B9E  B020               	btfsc	_msg+14,0,c
 18849  013BA0  D002               	bra	i2u1049_45
 18850  013BA2  964A               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18851  013BA4  D001               	bra	i2u1049_46
 18852  013BA6                     i2u1049_45:
 18853  013BA6  864A               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18854  013BA8                     i2u1049_46:
 18855                           
 18856                           ;RemoteCan.c: 127: id = msg.identifier;
 18857  013BA8  C012  F001         	movff	_msg,_id	;volatile
 18858  013BAC  C013  F002         	movff	_msg+1,_id+1	;volatile
 18859  013BB0  C014  F003         	movff	_msg+2,_id+2	;volatile
 18860  013BB4  C015  F004         	movff	_msg+3,_id+3	;volatile
 18861                           
 18862                           ;RemoteCan.c: 129: if (id == 0b00000001000) {
 18863  013BB8  0E08               	movlw	8
 18864  013BBA  1801               	xorwf	_id,w,c	;volatile
 18865  013BBC  1002               	iorwf	_id+1,w,c	;volatile
 18866  013BBE  1003               	iorwf	_id+2,w,c	;volatile
 18867  013BC0  1004               	iorwf	_id+3,w,c	;volatile
 18868  013BC2  A4D8               	btfss	status,2,c
 18869  013BC4  D028               	goto	i2l8500
 18870                           
 18871                           ;RemoteCan.c: 130: left_speed = msg.data[1];
 18872  013BC6  C017  F00B         	movff	_msg+5,_left_speed	;volatile
 18873  013BCA  6A0C               	clrf	_left_speed+1,c	;volatile
 18874                           
 18875                           ;RemoteCan.c: 131: left_speed = ((left_speed << 8) | (msg.data[0]));
 18876  013BCC  500B               	movf	_left_speed,w,c	;volatile
 18877  013BCE  0100               	movlb	0	; () banked
 18878  013BD0  6F60               	movwf	??_ISR_alta& (0+255),b
 18879  013BD2  5016               	movf	_msg+4,w,c
 18880  013BD4  6E0B               	movwf	_left_speed,c	;volatile
 18881  013BD6  C060  F00C         	movff	??_ISR_alta,_left_speed+1	;volatile
 18882                           
 18883                           ; BSR set to: 0
 18884                           ;RemoteCan.c: 132: right_speed = msg.data[3];
 18885  013BDA  C019  F00D         	movff	_msg+7,_right_speed	;volatile
 18886  013BDE  6A0E               	clrf	_right_speed+1,c	;volatile
 18887                           
 18888                           ;RemoteCan.c: 133: right_speed = ((right_speed << 8) | (msg.data[2]));
 18889  013BE0  500D               	movf	_right_speed,w,c	;volatile
 18890  013BE2  0100               	movlb	0	; () banked
 18891  013BE4  6F60               	movwf	??_ISR_alta& (0+255),b
 18892  013BE6  5018               	movf	_msg+6,w,c
 18893  013BE8  6E0D               	movwf	_right_speed,c	;volatile
 18894  013BEA  C060  F00E         	movff	??_ISR_alta,_right_speed+1	;volatile
 18895                           
 18896                           ; BSR set to: 0
 18897                           ;RemoteCan.c: 134: actual_speed = (right_speed + left_speed) / 2;
 18898  013BEE  500B               	movf	_left_speed,w,c	;volatile
 18899  013BF0  240D               	addwf	_right_speed,w,c	;volatile
 18900  013BF2  0100               	movlb	0	; () banked
 18901  013BF4  6F60               	movwf	??_ISR_alta& (0+255),b
 18902  013BF6  500C               	movf	_left_speed+1,w,c	;volatile
 18903  013BF8  200E               	addwfc	_right_speed+1,w,c	;volatile
 18904  013BFA  0100               	movlb	0	; () banked
 18905  013BFC  6F61               	movwf	(??_ISR_alta+1)& (0+255),b
 18906  013BFE  90D8               	bcf	status,0,c
 18907  013C00  0100               	movlb	0	; () banked
 18908  013C02  3161               	rrcf	(??_ISR_alta+1)& (0+255),w,b
 18909  013C04  0100               	movlb	0	; () banked
 18910  013C06  6F62               	movwf	(??_ISR_alta+2)& (0+255),b
 18911  013C08  0100               	movlb	0	; () banked
 18912  013C0A  3160               	rrcf	??_ISR_alta& (0+255),w,b
 18913  013C0C  0100               	movlb	0	; () banked
 18914  013C0E  6FE1               	movwf	_actual_speed& (0+255),b	;volatile
 18915  013C10  C062  F0E2         	movff	??_ISR_alta+2,_actual_speed+1	;volatile
 18916  013C14  D000               	goto	i2l8500
 18917  013C16                     i2l8500:
 18918                           
 18919                           ;RemoteCan.c: 135: }
 18920                           ;RemoteCan.c: 137: if (id == 0b00000001101) {
 18921  013C16  0E0D               	movlw	13
 18922  013C18  1801               	xorwf	_id,w,c	;volatile
 18923  013C1A  1002               	iorwf	_id+1,w,c	;volatile
 18924  013C1C  1003               	iorwf	_id+2,w,c	;volatile
 18925  013C1E  1004               	iorwf	_id+3,w,c	;volatile
 18926  013C20  A4D8               	btfss	status,2,c
 18927  013C22  D049               	goto	i2l8532
 18928                           
 18929                           ;RemoteCan.c: 138: if (msg.data[0] == 1) {
 18930  013C24  0416               	decf	_msg+4,w,c
 18931  013C26  A4D8               	btfss	status,2,c
 18932  013C28  D008               	goto	i2l8508
 18933                           
 18934                           ;RemoteCan.c: 139: space_available = 1;
 18935  013C2A  864B               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 18936                           
 18937                           ;RemoteCan.c: 140: space_gap_reached = 0;
 18938  013C2C  984B               	bcf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 18939                           
 18940                           ;RemoteCan.c: 141: F2_switch = 0;
 18941  013C2E  944A               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 18942                           
 18943                           ;RemoteCan.c: 142: parking_message_E = 1;
 18944  013C30  804B               	bsf	_parking_message_E/(0+8),_parking_message_E& (0+7),c	;volatile
 18945                           
 18946                           ;RemoteCan.c: 143: parking_message_ID = 0;
 18947  013C32  0E00               	movlw	0
 18948  013C34  0100               	movlb	0	; () banked
 18949  013C36  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
 18950  013C38  D000               	goto	i2l8508
 18951  013C3A                     i2l8508:
 18952                           
 18953                           ;RemoteCan.c: 144: }
 18954                           ;RemoteCan.c: 146: if (msg.data[0] == 2) {
 18955  013C3A  0E02               	movlw	2
 18956  013C3C  1816               	xorwf	_msg+4,w,c
 18957  013C3E  A4D8               	btfss	status,2,c
 18958  013C40  D007               	goto	i2l8514
 18959                           
 18960                           ;RemoteCan.c: 147: space_available = 1;
 18961  013C42  864B               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 18962                           
 18963                           ;RemoteCan.c: 148: space_gap_reached = 1;
 18964  013C44  884B               	bsf	_space_gap_reached/(0+8),_space_gap_reached& (0+7),c	;volatile
 18965                           
 18966                           ;RemoteCan.c: 149: Can_Tx_Force = 1;
 18967  013C46  804A               	bsf	_Can_Tx_Force/(0+8),_Can_Tx_Force& (0+7),c	;volatile
 18968                           
 18969                           ;RemoteCan.c: 150: parking_message_ID = 2;
 18970  013C48  0E02               	movlw	2
 18971  013C4A  0100               	movlb	0	; () banked
 18972  013C4C  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
 18973  013C4E  D000               	goto	i2l8514
 18974  013C50                     i2l8514:
 18975                           
 18976                           ;RemoteCan.c: 151: }
 18977                           ;RemoteCan.c: 153: if (msg.data[0] == 3) {
 18978  013C50  0E03               	movlw	3
 18979  013C52  1816               	xorwf	_msg+4,w,c
 18980  013C54  A4D8               	btfss	status,2,c
 18981  013C56  D015               	goto	i2l8522
 18982                           
 18983                           ;RemoteCan.c: 154: parking_message_ID = 6;
 18984  013C58  0E06               	movlw	6
 18985  013C5A  0100               	movlb	0	; () banked
 18986  013C5C  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
 18987                           
 18988                           ; BSR set to: 0
 18989                           ;RemoteCan.c: 155: F1_switch = 0;
 18990  013C5E  924A               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 18991                           
 18992                           ; BSR set to: 0
 18993                           ;RemoteCan.c: 156: pr_time_6 = time_counter + (2000 / 10);
 18994  013C60  0EC8               	movlw	200
 18995  013C62  2405               	addwf	_time_counter,w,c	;volatile
 18996  013C64  0100               	movlb	0	; () banked
 18997  013C66  6FDB               	movwf	_pr_time_6& (0+255),b	;volatile
 18998  013C68  0E00               	movlw	0
 18999  013C6A  2006               	addwfc	_time_counter+1,w,c	;volatile
 19000  013C6C  0100               	movlb	0	; () banked
 19001  013C6E  6FDC               	movwf	(_pr_time_6+1)& (0+255),b	;volatile
 19002  013C70  0E00               	movlw	0
 19003  013C72  2007               	addwfc	_time_counter+2,w,c	;volatile
 19004  013C74  0100               	movlb	0	; () banked
 19005  013C76  6FDD               	movwf	(_pr_time_6+2)& (0+255),b	;volatile
 19006  013C78  0E00               	movlw	0
 19007  013C7A  2008               	addwfc	_time_counter+3,w,c	;volatile
 19008  013C7C  0100               	movlb	0	; () banked
 19009  013C7E  6FDE               	movwf	(_pr_time_6+3)& (0+255),b	;volatile
 19010  013C80  D000               	goto	i2l8522
 19011  013C82                     i2l8522:
 19012                           
 19013                           ;RemoteCan.c: 157: }
 19014                           ;RemoteCan.c: 158: if (msg.data[0] == 4) {
 19015  013C82  0E04               	movlw	4
 19016  013C84  1816               	xorwf	_msg+4,w,c
 19017  013C86  A4D8               	btfss	status,2,c
 19018  013C88  D016               	goto	i2l8532
 19019                           
 19020                           ;RemoteCan.c: 159: parking_message_ID = 6;
 19021  013C8A  0E06               	movlw	6
 19022  013C8C  0100               	movlb	0	; () banked
 19023  013C8E  6FE9               	movwf	_parking_message_ID& (0+255),b	;volatile
 19024                           
 19025                           ; BSR set to: 0
 19026                           ;RemoteCan.c: 160: parking_error = 1;
 19027  013C90  8E4A               	bsf	_parking_error/(0+8),_parking_error& (0+7),c	;volatile
 19028                           
 19029                           ; BSR set to: 0
 19030                           ;RemoteCan.c: 161: F1_switch = 0;
 19031  013C92  924A               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 19032                           
 19033                           ; BSR set to: 0
 19034                           ;RemoteCan.c: 162: pr_time_6 = time_counter + (2000 / 10);
 19035  013C94  0EC8               	movlw	200
 19036  013C96  2405               	addwf	_time_counter,w,c	;volatile
 19037  013C98  0100               	movlb	0	; () banked
 19038  013C9A  6FDB               	movwf	_pr_time_6& (0+255),b	;volatile
 19039  013C9C  0E00               	movlw	0
 19040  013C9E  2006               	addwfc	_time_counter+1,w,c	;volatile
 19041  013CA0  0100               	movlb	0	; () banked
 19042  013CA2  6FDC               	movwf	(_pr_time_6+1)& (0+255),b	;volatile
 19043  013CA4  0E00               	movlw	0
 19044  013CA6  2007               	addwfc	_time_counter+2,w,c	;volatile
 19045  013CA8  0100               	movlb	0	; () banked
 19046  013CAA  6FDD               	movwf	(_pr_time_6+2)& (0+255),b	;volatile
 19047  013CAC  0E00               	movlw	0
 19048  013CAE  2008               	addwfc	_time_counter+3,w,c	;volatile
 19049  013CB0  0100               	movlb	0	; () banked
 19050  013CB2  6FDE               	movwf	(_pr_time_6+3)& (0+255),b	;volatile
 19051                           
 19052                           ; BSR set to: 0
 19053  013CB4  D000               	goto	i2l8532
 19054  013CB6                     i2l8532:
 19055                           
 19056                           ;RemoteCan.c: 163: }
 19057                           ;RemoteCan.c: 164: }
 19058                           ;RemoteCan.c: 166: if (id == 0b00000010000) {
 19059  013CB6  0E10               	movlw	16
 19060  013CB8  1801               	xorwf	_id,w,c	;volatile
 19061  013CBA  1002               	iorwf	_id+1,w,c	;volatile
 19062  013CBC  1003               	iorwf	_id+2,w,c	;volatile
 19063  013CBE  1004               	iorwf	_id+3,w,c	;volatile
 19064  013CC0  A4D8               	btfss	status,2,c
 19065  013CC2  D008               	goto	i2l8536
 19066                           
 19067                           ;RemoteCan.c: 167: steering_correction_dir = msg.data[1];
 19068  013CC4  B017               	btfsc	_msg+5,0,c
 19069  013CC6  D002               	bra	i2u1057_45
 19070  013CC8  9A4B               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 19071  013CCA  D001               	bra	i2u1057_46
 19072  013CCC                     i2u1057_45:
 19073  013CCC  8A4B               	bsf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 19074  013CCE                     i2u1057_46:
 19075                           
 19076                           ;RemoteCan.c: 168: steering_correction = msg.data[0];
 19077  013CCE  C016  F0EB         	movff	_msg+4,_steering_correction	;volatile
 19078  013CD2  D000               	goto	i2l8536
 19079  013CD4                     i2l8536:
 19080                           
 19081                           ;RemoteCan.c: 169: }
 19082                           ;RemoteCan.c: 171: if (id == 0b00000010001) {
 19083  013CD4  0E11               	movlw	17
 19084  013CD6  1801               	xorwf	_id,w,c	;volatile
 19085  013CD8  1002               	iorwf	_id+1,w,c	;volatile
 19086  013CDA  1003               	iorwf	_id+2,w,c	;volatile
 19087  013CDC  1004               	iorwf	_id+3,w,c	;volatile
 19088  013CDE  A4D8               	btfss	status,2,c
 19089  013CE0  D005               	goto	i2l8540
 19090                           
 19091                           ;RemoteCan.c: 172: collision_sensor_distance[1] = msg.data[0];
 19092  013CE2  C016  F00A         	movff	_msg+4,_collision_sensor_distance+1	;volatile
 19093                           
 19094                           ;RemoteCan.c: 173: collision_sensor_distance[0] = msg.data[1];
 19095  013CE6  C017  F009         	movff	_msg+5,_collision_sensor_distance	;volatile
 19096  013CEA  D000               	goto	i2l8540
 19097  013CEC                     i2l8540:
 19098                           
 19099                           ;RemoteCan.c: 174: }
 19100                           ;RemoteCan.c: 176: if (id == 0xAA) {
 19101  013CEC  0EAA               	movlw	170
 19102  013CEE  1801               	xorwf	_id,w,c	;volatile
 19103  013CF0  1002               	iorwf	_id+1,w,c	;volatile
 19104  013CF2  1003               	iorwf	_id+2,w,c	;volatile
 19105  013CF4  1004               	iorwf	_id+3,w,c	;volatile
 19106  013CF6  A4D8               	btfss	status,2,c
 19107  013CF8  D00B               	goto	i2l8546
 19108                           
 19109                           ;RemoteCan.c: 177: user_data = msg.data[1];
 19110  013CFA  C017  F00F         	movff	_msg+5,_user_data	;volatile
 19111  013CFE  6A10               	clrf	_user_data+1,c	;volatile
 19112                           
 19113                           ;RemoteCan.c: 178: user_data = ((user_data << 8) | msg.data[0]);
 19114  013D00  500F               	movf	_user_data,w,c	;volatile
 19115  013D02  0100               	movlb	0	; () banked
 19116  013D04  6F60               	movwf	??_ISR_alta& (0+255),b
 19117  013D06  5016               	movf	_msg+4,w,c
 19118  013D08  6E0F               	movwf	_user_data,c	;volatile
 19119  013D0A  C060  F010         	movff	??_ISR_alta,_user_data+1	;volatile
 19120  013D0E  D000               	goto	i2l8546
 19121  013D10                     i2l8546:
 19122                           
 19123                           ;RemoteCan.c: 179: }
 19124                           ;RemoteCan.c: 181: if (id == 0b00000000100) {
 19125  013D10  0E04               	movlw	4
 19126  013D12  1801               	xorwf	_id,w,c	;volatile
 19127  013D14  1002               	iorwf	_id+1,w,c	;volatile
 19128  013D16  1003               	iorwf	_id+2,w,c	;volatile
 19129  013D18  1004               	iorwf	_id+3,w,c	;volatile
 19130  013D1A  B4D8               	btfsc	status,2,c
 19131                           
 19132                           ;RemoteCan.c: 182: if (RTR_Flag == 1) {
 19133  013D1C  A64A               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19134  013D1E  D028               	goto	i2l8560
 19135                           
 19136                           ;RemoteCan.c: 183: pr_time_4 = time_counter;
 19137  013D20  C005  F106         	movff	_time_counter,_pr_time_4	;volatile
 19138  013D24  C006  F107         	movff	_time_counter+1,_pr_time_4+1	;volatile
 19139  013D28  C007  F108         	movff	_time_counter+2,_pr_time_4+2	;volatile
 19140  013D2C  C008  F109         	movff	_time_counter+3,_pr_time_4+3	;volatile
 19141                           
 19142                           ;RemoteCan.c: 184: data[0] = 0x03;
 19143  013D30  0E03               	movlw	3
 19144  013D32  0101               	movlb	1	; () banked
 19145  013D34  6F16               	movwf	_data& (0+255),b
 19146                           
 19147                           ; BSR set to: 1
 19148                           ;RemoteCan.c: 185: _delay((unsigned long)((10)*(16000000/4000000.0)));
 19149  013D36  0E0D               	movlw	13
 19150  013D38                     i2u1112_47:
 19151  013D38  2EE8               	decfsz	wreg,f,c
 19152  013D3A  D7FE               	goto	i2u1112_47
 19153  013D3C  F000               	nop	
 19154                           
 19155                           ;RemoteCan.c: 186: while (CANisTxReady() != 1);
 19156  013D3E  D000               	goto	i2l8556
 19157  013D40                     i2l8556:
 19158  013D40  EC7B  F0AF         	call	i2_CANisTxReady	;wreg free
 19159  013D44  06E8               	decf	wreg,f,c
 19160  013D46  A4D8               	btfss	status,2,c
 19161  013D48  D7FB               	goto	i2l8556
 19162                           
 19163                           ;RemoteCan.c: 187: CANsendMessage(0b00000000100, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 19164  013D4A  0E04               	movlw	4
 19165  013D4C  6E3A               	movwf	i2CANsendMessage@identifier,c
 19166  013D4E  0E00               	movlw	0
 19167  013D50  6E3B               	movwf	i2CANsendMessage@identifier+1,c
 19168  013D52  0E00               	movlw	0
 19169  013D54  6E3C               	movwf	i2CANsendMessage@identifier+2,c
 19170  013D56  0E00               	movlw	0
 19171  013D58  6E3D               	movwf	i2CANsendMessage@identifier+3,c
 19172  013D5A  0E16               	movlw	low _data
 19173  013D5C  6E3E               	movwf	i2CANsendMessage@data,c
 19174  013D5E  0E01               	movlw	high _data
 19175  013D60  6E3F               	movwf	i2CANsendMessage@data+1,c
 19176  013D62  0E08               	movlw	8
 19177  013D64  6E40               	movwf	i2CANsendMessage@dataLength,c
 19178  013D66  0EBC               	movlw	188
 19179  013D68  6E41               	movwf	i2CANsendMessage@flags,c
 19180  013D6A  ECD9  F091         	call	i2_CANsendMessage	;wreg free
 19181  013D6E  D000               	goto	i2l8560
 19182  013D70                     i2l8560:
 19183                           
 19184                           ;RemoteCan.c: 188: }
 19185                           ;RemoteCan.c: 189: }
 19186                           ;RemoteCan.c: 191: if ((id == 0b00000001011)&&(RTR_Flag == 1)) {
 19187  013D70  0E0B               	movlw	11
 19188  013D72  1801               	xorwf	_id,w,c	;volatile
 19189  013D74  1002               	iorwf	_id+1,w,c	;volatile
 19190  013D76  1003               	iorwf	_id+2,w,c	;volatile
 19191  013D78  1004               	iorwf	_id+3,w,c	;volatile
 19192  013D7A  B4D8               	btfsc	status,2,c
 19193  013D7C  A64A               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 19194  013D7E  D002               	goto	i2l784
 19195                           
 19196                           ;RemoteCan.c: 192: low_battery = 1;
 19197  013D80  8C4A               	bsf	_low_battery/(0+8),_low_battery& (0+7),c	;volatile
 19198  013D82  D000               	goto	i2l784
 19199  013D84                     i2l784:
 19200                           
 19201                           ;RemoteCan.c: 193: }
 19202                           ;RemoteCan.c: 194: }
 19203                           ;RemoteCan.c: 195: PIR3bits.RXB1IF = 0;
 19204  013D84  92A4               	bcf	4004,1,c	;volatile
 19205                           
 19206                           ;RemoteCan.c: 196: PIR3bits.RXB0IF = 0;
 19207  013D86  90A4               	bcf	4004,0,c	;volatile
 19208  013D88  D000               	goto	i2l800
 19209  013D8A                     i2l800:
 19210  013D8A  C071  FFF5         	movff	??_ISR_alta+17,tablat
 19211  013D8E  C070  FFF8         	movff	??_ISR_alta+16,tblptru
 19212  013D92  C06F  FFF7         	movff	??_ISR_alta+15,tblptrh
 19213  013D96  C06E  FFF6         	movff	??_ISR_alta+14,tblptrl
 19214  013D9A  C06D  FFF4         	movff	??_ISR_alta+13,prodh
 19215  013D9E  C06C  FFF3         	movff	??_ISR_alta+12,prodl
 19216  013DA2  C06B  FFDA         	movff	??_ISR_alta+11,fsr2h
 19217  013DA6  C06A  FFD9         	movff	??_ISR_alta+10,fsr2l
 19218  013DAA  C069  FFE2         	movff	??_ISR_alta+9,fsr1h
 19219  013DAE  C068  FFE1         	movff	??_ISR_alta+8,fsr1l
 19220  013DB2  C067  FFEA         	movff	??_ISR_alta+7,fsr0h
 19221  013DB6  C066  FFE9         	movff	??_ISR_alta+6,fsr0l
 19222  013DBA  C065  FFFB         	movff	??_ISR_alta+5,pclatu
 19223  013DBE  C064  FFFA         	movff	??_ISR_alta+4,pclath
 19224  013DC2  0011               	retfie		f
 19225  013DC4                     __end_of_ISR_alta:
 19226                           	opt stack 0
 19227                           pclatu	equ	0xFFB
 19228                           pclath	equ	0xFFA
 19229                           tblptru	equ	0xFF8
 19230                           tblptrh	equ	0xFF7
 19231                           tblptrl	equ	0xFF6
 19232                           tablat	equ	0xFF5
 19233                           prodh	equ	0xFF4
 19234                           prodl	equ	0xFF3
 19235                           intcon	equ	0xFF2
 19236                           postinc0	equ	0xFEE
 19237                           fsr0h	equ	0xFEA
 19238                           fsr0l	equ	0xFE9
 19239                           wreg	equ	0xFE8
 19240                           indf1	equ	0xFE7
 19241                           plusw1	equ	0xFE3
 19242                           fsr1h	equ	0xFE2
 19243                           fsr1l	equ	0xFE1
 19244                           bsr	equ	0xFE0
 19245                           indf2	equ	0xFDF
 19246                           postinc2	equ	0xFDE
 19247                           plusw2	equ	0xFDB
 19248                           fsr2h	equ	0xFDA
 19249                           fsr2l	equ	0xFD9
 19250                           status	equ	0xFD8
 19251                           
 19252 ;; *************** function i2_CANsendMessage *****************
 19253 ;; Defined at:
 19254 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 19255 ;; Parameters:    Size  Location     Type
 19256 ;;  identifier      4   17[COMRAM] unsigned long 
 19257 ;;  data            2   21[COMRAM] PTR unsigned char 
 19258 ;;		 -> data_speed(8), park_assist_state(8), data_steering(8), data_brake(8), 
 19259 ;;		 -> data(8), 
 19260 ;;  dataLength      1   23[COMRAM] unsigned char 
 19261 ;;  flags           1   24[COMRAM] enum E16950
 19262 ;; Auto vars:     Size  Location     Type
 19263 ;;  CANsendMessa    4   29[COMRAM] unsigned long 
 19264 ;; Return value:  Size  Location     Type
 19265 ;;		None               void
 19266 ;; Registers used:
 19267 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19268 ;; Tracked objects:
 19269 ;;		On entry : 0/0
 19270 ;;		On exit  : 0/0
 19271 ;;		Unchanged: 0/0
 19272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19273 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19274 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19275 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19276 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19277 ;;Total ram usage:       16 bytes
 19278 ;; Hardware stack levels used:    1
 19279 ;; This function calls:
 19280 ;;		Nothing
 19281 ;; This function is called by:
 19282 ;;		_ISR_alta
 19283 ;; This function uses a non-reentrant model
 19284 ;;
 19285                           
 19286                           	psect	text62
 19287  0123B2                     __ptext62:
 19288                           	opt stack 0
 19289  0123B2                     i2_CANsendMessage:
 19290                           	opt stack 20
 19291                           
 19292                           ;inc\CANlib.h: 296: unsigned long tamp;
 19293                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 19294                           
 19295                           ;incstack = 0
 19296  0123B2  010F               	movlb	15	; () banked
 19297  0123B4  B740               	btfsc	64,3,b	;volatile
 19298  0123B6  D118               	goto	i2l383
 19299                           
 19300                           ; BSR set to: 15
 19301                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 19302  0123B8  C040  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 19303                           
 19304                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 19305  0123BC  AC41               	btfss	i2CANsendMessage@flags,6,c
 19306  0123BE  D003               	goto	i2l384
 19307                           
 19308                           ; BSR set to: 15
 19309                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 19310  0123C0  010F               	movlb	15	; () banked
 19311  0123C2  8D45               	bsf	69,6,b	;volatile
 19312  0123C4  D002               	goto	i2l385
 19313  0123C6                     i2l384:
 19314                           
 19315                           ; BSR set to: 15
 19316                           ;inc\CANlib.h: 302: else
 19317                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 19318  0123C6  010F               	movlb	15	; () banked
 19319  0123C8  9D45               	bcf	69,6,b	;volatile
 19320  0123CA                     i2l385:
 19321                           
 19322                           ; BSR set to: 15
 19323                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 19324  0123CA  A641               	btfss	i2CANsendMessage@flags,3,c
 19325  0123CC  D067               	goto	i2l386
 19326                           
 19327                           ; BSR set to: 15
 19328                           ;inc\CANlib.h: 306: {
 19329                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 19330  0123CE  503A               	movf	i2CANsendMessage@identifier,w,c
 19331  0123D0  6E46               	movwf	i2CANsendMessage@tamp,c
 19332  0123D2  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19333  0123D4  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19334  0123D6  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19335                           
 19336                           ; BSR set to: 15
 19337                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 19338  0123D8  C046  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 19339                           
 19340                           ; BSR set to: 15
 19341                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 19342  0123DC  0E00               	movlw	0
 19343  0123DE  143A               	andwf	i2CANsendMessage@identifier,w,c
 19344  0123E0  6E46               	movwf	i2CANsendMessage@tamp,c
 19345  0123E2  0EFF               	movlw	255
 19346  0123E4  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 19347  0123E6  6E47               	movwf	i2CANsendMessage@tamp+1,c
 19348  0123E8  0E00               	movlw	0
 19349  0123EA  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 19350  0123EC  6E48               	movwf	i2CANsendMessage@tamp+2,c
 19351  0123EE  0E00               	movlw	0
 19352  0123F0  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 19353  0123F2  6E49               	movwf	i2CANsendMessage@tamp+3,c
 19354                           
 19355                           ; BSR set to: 15
 19356                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 19357  0123F4  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19358  0123F8  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19359  0123FC  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19360  012400  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19361  012404  C043  F042         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19362  012408  C044  F043         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19363  01240C  C045  F044         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19364  012410  6A45               	clrf	??i2_CANsendMessage+3,c
 19365  012412  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19366  012416  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19367  01241A  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19368  01241E  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19369                           
 19370                           ; BSR set to: 15
 19371                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 19372  012422  C046  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 19373                           
 19374                           ; BSR set to: 15
 19375                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 19376  012426  0E00               	movlw	0
 19377  012428  010F               	movlb	15	; () banked
 19378  01242A  6F42               	movwf	66,b	;volatile
 19379                           
 19380                           ; BSR set to: 15
 19381                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 19382  01242C  010F               	movlb	15	; () banked
 19383  01242E  8742               	bsf	66,3,b	;volatile
 19384                           
 19385                           ; BSR set to: 15
 19386                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 19387  012430  A03C               	btfss	i2CANsendMessage@identifier+2,0,c
 19388  012432  D002               	goto	i2l387
 19389                           
 19390                           ; BSR set to: 15
 19391                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 19392  012434  010F               	movlb	15	; () banked
 19393  012436  8142               	bsf	66,0,b	;volatile
 19394  012438                     i2l387:
 19395                           
 19396                           ; BSR set to: 15
 19397                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 19398  012438  A23C               	btfss	i2CANsendMessage@identifier+2,1,c
 19399  01243A  D002               	goto	i2l388
 19400                           
 19401                           ; BSR set to: 15
 19402                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 19403  01243C  010F               	movlb	15	; () banked
 19404  01243E  8342               	bsf	66,1,b	;volatile
 19405  012440                     i2l388:
 19406                           
 19407                           ; BSR set to: 15
 19408                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 19409  012440  A43C               	btfss	i2CANsendMessage@identifier+2,2,c
 19410  012442  D002               	goto	i2l389
 19411                           
 19412                           ; BSR set to: 15
 19413                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 19414  012444  010F               	movlb	15	; () banked
 19415  012446  8B42               	bsf	66,5,b	;volatile
 19416  012448                     i2l389:
 19417                           
 19418                           ; BSR set to: 15
 19419                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 19420  012448  A63C               	btfss	i2CANsendMessage@identifier+2,3,c
 19421  01244A  D002               	goto	i2l390
 19422                           
 19423                           ; BSR set to: 15
 19424                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 19425  01244C  010F               	movlb	15	; () banked
 19426  01244E  8D42               	bsf	66,6,b	;volatile
 19427  012450                     i2l390:
 19428                           
 19429                           ; BSR set to: 15
 19430                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 19431  012450  A83C               	btfss	i2CANsendMessage@identifier+2,4,c
 19432  012452  D003               	goto	i2l6712
 19433                           
 19434                           ; BSR set to: 15
 19435                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 19436  012454  010F               	movlb	15	; () banked
 19437  012456  8F42               	bsf	66,7,b	;volatile
 19438  012458  D000               	goto	i2l6712
 19439  01245A                     i2l6712:
 19440                           
 19441                           ; BSR set to: 15
 19442                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 19443  01245A  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19444  01245E  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19445  012462  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19446  012466  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19447  01246A  0E16               	movlw	22
 19448  01246C  D005               	goto	i2u798_40
 19449  01246E                     i2u798_45:
 19450  01246E  90D8               	bcf	status,0,c
 19451  012470  3245               	rrcf	??i2_CANsendMessage+3,f,c
 19452  012472  3244               	rrcf	??i2_CANsendMessage+2,f,c
 19453  012474  3243               	rrcf	??i2_CANsendMessage+1,f,c
 19454  012476  3242               	rrcf	??i2_CANsendMessage,f,c
 19455  012478                     i2u798_40:
 19456  012478  2EE8               	decfsz	wreg,f,c
 19457  01247A  D7F9               	goto	i2u798_45
 19458  01247C  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19459  012480  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19460  012484  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19461  012488  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19462                           
 19463                           ; BSR set to: 15
 19464                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 19465  01248C  5046               	movf	i2CANsendMessage@tamp,w,c
 19466  01248E  6E46               	movwf	i2CANsendMessage@tamp,c
 19467  012490  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19468  012492  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19469  012494  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19470                           
 19471                           ; BSR set to: 15
 19472                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 19473  012496  C046  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 19474                           
 19475                           ;inc\CANlib.h: 332: }
 19476  01249A  D04E               	goto	i2l6732
 19477  01249C                     i2l386:
 19478                           
 19479                           ; BSR set to: 15
 19480                           ;inc\CANlib.h: 334: else
 19481                           ;inc\CANlib.h: 336: {
 19482                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 19483  01249C  010F               	movlb	15	; () banked
 19484  01249E  9742               	bcf	66,3,b	;volatile
 19485                           
 19486                           ; BSR set to: 15
 19487                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 19488  0124A0  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19489  0124A4  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19490  0124A8  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19491  0124AC  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19492  0124B0  0E04               	movlw	4
 19493  0124B2  D005               	goto	i2u799_40
 19494  0124B4                     i2u799_45:
 19495  0124B4  90D8               	bcf	status,0,c
 19496  0124B6  3245               	rrcf	??i2_CANsendMessage+3,f,c
 19497  0124B8  3244               	rrcf	??i2_CANsendMessage+2,f,c
 19498  0124BA  3243               	rrcf	??i2_CANsendMessage+1,f,c
 19499  0124BC  3242               	rrcf	??i2_CANsendMessage,f,c
 19500  0124BE                     i2u799_40:
 19501  0124BE  2EE8               	decfsz	wreg,f,c
 19502  0124C0  D7F9               	goto	i2u799_45
 19503  0124C2  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19504  0124C6  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19505  0124CA  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19506  0124CE  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19507                           
 19508                           ; BSR set to: 15
 19509                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 19510  0124D2  5046               	movf	i2CANsendMessage@tamp,w,c
 19511  0124D4  6E46               	movwf	i2CANsendMessage@tamp,c
 19512  0124D6  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19513  0124D8  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19514  0124DA  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19515                           
 19516                           ; BSR set to: 15
 19517                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 19518  0124DC  C046  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 19519                           
 19520                           ; BSR set to: 15
 19521                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 19522  0124E0  0E07               	movlw	7
 19523  0124E2  143A               	andwf	i2CANsendMessage@identifier,w,c
 19524  0124E4  6E46               	movwf	i2CANsendMessage@tamp,c
 19525  0124E6  0E00               	movlw	0
 19526  0124E8  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 19527  0124EA  6E47               	movwf	i2CANsendMessage@tamp+1,c
 19528  0124EC  0E00               	movlw	0
 19529  0124EE  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 19530  0124F0  6E48               	movwf	i2CANsendMessage@tamp+2,c
 19531  0124F2  0E00               	movlw	0
 19532  0124F4  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 19533  0124F6  6E49               	movwf	i2CANsendMessage@tamp+3,c
 19534                           
 19535                           ; BSR set to: 15
 19536                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 19537  0124F8  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19538  0124FC  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19539  012500  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19540  012504  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19541  012508  0E05               	movlw	5
 19542  01250A                     i2u800_45:
 19543  01250A  90D8               	bcf	status,0,c
 19544  01250C  3642               	rlcf	??i2_CANsendMessage,f,c
 19545  01250E  3643               	rlcf	??i2_CANsendMessage+1,f,c
 19546  012510  3644               	rlcf	??i2_CANsendMessage+2,f,c
 19547  012512  3645               	rlcf	??i2_CANsendMessage+3,f,c
 19548  012514  2EE8               	decfsz	wreg,f,c
 19549  012516  D7F9               	goto	i2u800_45
 19550  012518  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19551  01251C  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19552  012520  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19553  012524  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19554                           
 19555                           ; BSR set to: 15
 19556                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 19557  012528  010F               	movlb	15	; () banked
 19558  01252A  5142               	movf	66,w,b	;volatile
 19559  01252C  0B1F               	andlw	31
 19560  01252E  010F               	movlb	15	; () banked
 19561  012530  6F42               	movwf	66,b	;volatile
 19562                           
 19563                           ; BSR set to: 15
 19564                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 19565  012532  C046  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 19566  012536  D000               	goto	i2l6732
 19567  012538                     i2l6732:
 19568                           
 19569                           ; BSR set to: 15
 19570                           ;inc\CANlib.h: 347: }
 19571                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 19572  012538  A041               	btfss	i2CANsendMessage@flags,0,c
 19573  01253A  D003               	goto	i2l393
 19574                           
 19575                           ; BSR set to: 15
 19576                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 19577  01253C  010F               	movlb	15	; () banked
 19578  01253E  8140               	bsf	64,0,b	;volatile
 19579  012540  D002               	goto	i2l394
 19580  012542                     i2l393:
 19581                           
 19582                           ; BSR set to: 15
 19583                           ;inc\CANlib.h: 351: else
 19584                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 19585  012542  010F               	movlb	15	; () banked
 19586  012544  9140               	bcf	64,0,b	;volatile
 19587  012546                     i2l394:
 19588                           
 19589                           ; BSR set to: 15
 19590                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 19591  012546  A241               	btfss	i2CANsendMessage@flags,1,c
 19592  012548  D003               	goto	i2l395
 19593                           
 19594                           ; BSR set to: 15
 19595                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 19596  01254A  010F               	movlb	15	; () banked
 19597  01254C  8340               	bsf	64,1,b	;volatile
 19598  01254E  D003               	goto	i2l6738
 19599  012550                     i2l395:
 19600                           
 19601                           ; BSR set to: 15
 19602                           ;inc\CANlib.h: 355: else
 19603                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 19604  012550  010F               	movlb	15	; () banked
 19605  012552  9340               	bcf	64,1,b	;volatile
 19606  012554  D000               	goto	i2l6738
 19607  012556                     i2l6738:
 19608                           
 19609                           ; BSR set to: 15
 19610                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 19611  012556  C03E  FFD9         	movff	i2CANsendMessage@data,fsr2l
 19612  01255A  C03F  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 19613  01255E  50DF               	movf	indf2,w,c
 19614  012560  010F               	movlb	15	; () banked
 19615  012562  6F46               	movwf	70,b	;volatile
 19616                           
 19617                           ; BSR set to: 15
 19618                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 19619  012564  EE20 F001          	lfsr	2,1
 19620  012568  503E               	movf	i2CANsendMessage@data,w,c
 19621  01256A  26D9               	addwf	fsr2l,f,c
 19622  01256C  503F               	movf	i2CANsendMessage@data+1,w,c
 19623  01256E  22DA               	addwfc	fsr2h,f,c
 19624  012570  50DF               	movf	indf2,w,c
 19625  012572  010F               	movlb	15	; () banked
 19626  012574  6F47               	movwf	71,b	;volatile
 19627                           
 19628                           ; BSR set to: 15
 19629                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 19630  012576  EE20 F002          	lfsr	2,2
 19631  01257A  503E               	movf	i2CANsendMessage@data,w,c
 19632  01257C  26D9               	addwf	fsr2l,f,c
 19633  01257E  503F               	movf	i2CANsendMessage@data+1,w,c
 19634  012580  22DA               	addwfc	fsr2h,f,c
 19635  012582  50DF               	movf	indf2,w,c
 19636  012584  010F               	movlb	15	; () banked
 19637  012586  6F48               	movwf	72,b	;volatile
 19638                           
 19639                           ; BSR set to: 15
 19640                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 19641  012588  EE20 F003          	lfsr	2,3
 19642  01258C  503E               	movf	i2CANsendMessage@data,w,c
 19643  01258E  26D9               	addwf	fsr2l,f,c
 19644  012590  503F               	movf	i2CANsendMessage@data+1,w,c
 19645  012592  22DA               	addwfc	fsr2h,f,c
 19646  012594  50DF               	movf	indf2,w,c
 19647  012596  010F               	movlb	15	; () banked
 19648  012598  6F49               	movwf	73,b	;volatile
 19649                           
 19650                           ; BSR set to: 15
 19651                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 19652  01259A  EE20 F004          	lfsr	2,4
 19653  01259E  503E               	movf	i2CANsendMessage@data,w,c
 19654  0125A0  26D9               	addwf	fsr2l,f,c
 19655  0125A2  503F               	movf	i2CANsendMessage@data+1,w,c
 19656  0125A4  22DA               	addwfc	fsr2h,f,c
 19657  0125A6  50DF               	movf	indf2,w,c
 19658  0125A8  010F               	movlb	15	; () banked
 19659  0125AA  6F4A               	movwf	74,b	;volatile
 19660                           
 19661                           ; BSR set to: 15
 19662                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 19663  0125AC  EE20 F005          	lfsr	2,5
 19664  0125B0  503E               	movf	i2CANsendMessage@data,w,c
 19665  0125B2  26D9               	addwf	fsr2l,f,c
 19666  0125B4  503F               	movf	i2CANsendMessage@data+1,w,c
 19667  0125B6  22DA               	addwfc	fsr2h,f,c
 19668  0125B8  50DF               	movf	indf2,w,c
 19669  0125BA  010F               	movlb	15	; () banked
 19670  0125BC  6F4B               	movwf	75,b	;volatile
 19671                           
 19672                           ; BSR set to: 15
 19673                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 19674  0125BE  EE20 F006          	lfsr	2,6
 19675  0125C2  503E               	movf	i2CANsendMessage@data,w,c
 19676  0125C4  26D9               	addwf	fsr2l,f,c
 19677  0125C6  503F               	movf	i2CANsendMessage@data+1,w,c
 19678  0125C8  22DA               	addwfc	fsr2h,f,c
 19679  0125CA  50DF               	movf	indf2,w,c
 19680  0125CC  010F               	movlb	15	; () banked
 19681  0125CE  6F4C               	movwf	76,b	;volatile
 19682                           
 19683                           ; BSR set to: 15
 19684                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 19685  0125D0  EE20 F007          	lfsr	2,7
 19686  0125D4  503E               	movf	i2CANsendMessage@data,w,c
 19687  0125D6  26D9               	addwf	fsr2l,f,c
 19688  0125D8  503F               	movf	i2CANsendMessage@data+1,w,c
 19689  0125DA  22DA               	addwfc	fsr2h,f,c
 19690  0125DC  50DF               	movf	indf2,w,c
 19691  0125DE  010F               	movlb	15	; () banked
 19692  0125E0  6F4D               	movwf	77,b	;volatile
 19693                           
 19694                           ; BSR set to: 15
 19695                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 19696  0125E2  010F               	movlb	15	; () banked
 19697  0125E4  8740               	bsf	64,3,b	;volatile
 19698                           
 19699                           ; BSR set to: 15
 19700                           ;inc\CANlib.h: 368: return;
 19701  0125E6  0012               	return	
 19702  0125E8                     i2l383:
 19703                           
 19704                           ; BSR set to: 15
 19705                           ;inc\CANlib.h: 369: }
 19706                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 19707  0125E8  010F               	movlb	15	; () banked
 19708  0125EA  B730               	btfsc	48,3,b	;volatile
 19709  0125EC  D118               	goto	i2l398
 19710                           
 19711                           ; BSR set to: 15
 19712                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 19713  0125EE  C040  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 19714                           
 19715                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 19716  0125F2  AC41               	btfss	i2CANsendMessage@flags,6,c
 19717  0125F4  D003               	goto	i2l399
 19718                           
 19719                           ; BSR set to: 15
 19720                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 19721  0125F6  010F               	movlb	15	; () banked
 19722  0125F8  8D35               	bsf	53,6,b	;volatile
 19723  0125FA  D002               	goto	i2l400
 19724  0125FC                     i2l399:
 19725                           
 19726                           ; BSR set to: 15
 19727                           ;inc\CANlib.h: 378: else
 19728                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 19729  0125FC  010F               	movlb	15	; () banked
 19730  0125FE  9D35               	bcf	53,6,b	;volatile
 19731  012600                     i2l400:
 19732                           
 19733                           ; BSR set to: 15
 19734                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 19735  012600  A641               	btfss	i2CANsendMessage@flags,3,c
 19736  012602  D067               	goto	i2l401
 19737                           
 19738                           ; BSR set to: 15
 19739                           ;inc\CANlib.h: 382: {
 19740                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 19741  012604  503A               	movf	i2CANsendMessage@identifier,w,c
 19742  012606  6E46               	movwf	i2CANsendMessage@tamp,c
 19743  012608  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19744  01260A  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19745  01260C  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19746                           
 19747                           ; BSR set to: 15
 19748                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 19749  01260E  C046  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 19750                           
 19751                           ; BSR set to: 15
 19752                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 19753  012612  0E00               	movlw	0
 19754  012614  143A               	andwf	i2CANsendMessage@identifier,w,c
 19755  012616  6E46               	movwf	i2CANsendMessage@tamp,c
 19756  012618  0EFF               	movlw	255
 19757  01261A  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 19758  01261C  6E47               	movwf	i2CANsendMessage@tamp+1,c
 19759  01261E  0E00               	movlw	0
 19760  012620  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 19761  012622  6E48               	movwf	i2CANsendMessage@tamp+2,c
 19762  012624  0E00               	movlw	0
 19763  012626  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 19764  012628  6E49               	movwf	i2CANsendMessage@tamp+3,c
 19765                           
 19766                           ; BSR set to: 15
 19767                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 19768  01262A  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19769  01262E  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19770  012632  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19771  012636  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19772  01263A  C043  F042         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19773  01263E  C044  F043         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19774  012642  C045  F044         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19775  012646  6A45               	clrf	??i2_CANsendMessage+3,c
 19776  012648  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19777  01264C  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19778  012650  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19779  012654  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19780                           
 19781                           ; BSR set to: 15
 19782                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 19783  012658  C046  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 19784                           
 19785                           ; BSR set to: 15
 19786                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 19787  01265C  0E00               	movlw	0
 19788  01265E  010F               	movlb	15	; () banked
 19789  012660  6F32               	movwf	50,b	;volatile
 19790                           
 19791                           ; BSR set to: 15
 19792                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 19793  012662  010F               	movlb	15	; () banked
 19794  012664  8732               	bsf	50,3,b	;volatile
 19795                           
 19796                           ; BSR set to: 15
 19797                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 19798  012666  A03C               	btfss	i2CANsendMessage@identifier+2,0,c
 19799  012668  D002               	goto	i2l402
 19800                           
 19801                           ; BSR set to: 15
 19802                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 19803  01266A  010F               	movlb	15	; () banked
 19804  01266C  8132               	bsf	50,0,b	;volatile
 19805  01266E                     i2l402:
 19806                           
 19807                           ; BSR set to: 15
 19808                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 19809  01266E  A23C               	btfss	i2CANsendMessage@identifier+2,1,c
 19810  012670  D002               	goto	i2l403
 19811                           
 19812                           ; BSR set to: 15
 19813                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 19814  012672  010F               	movlb	15	; () banked
 19815  012674  8332               	bsf	50,1,b	;volatile
 19816  012676                     i2l403:
 19817                           
 19818                           ; BSR set to: 15
 19819                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 19820  012676  A43C               	btfss	i2CANsendMessage@identifier+2,2,c
 19821  012678  D002               	goto	i2l404
 19822                           
 19823                           ; BSR set to: 15
 19824                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 19825  01267A  010F               	movlb	15	; () banked
 19826  01267C  8B32               	bsf	50,5,b	;volatile
 19827  01267E                     i2l404:
 19828                           
 19829                           ; BSR set to: 15
 19830                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 19831  01267E  A63C               	btfss	i2CANsendMessage@identifier+2,3,c
 19832  012680  D002               	goto	i2l405
 19833                           
 19834                           ; BSR set to: 15
 19835                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 19836  012682  010F               	movlb	15	; () banked
 19837  012684  8D32               	bsf	50,6,b	;volatile
 19838  012686                     i2l405:
 19839                           
 19840                           ; BSR set to: 15
 19841                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 19842  012686  A83C               	btfss	i2CANsendMessage@identifier+2,4,c
 19843  012688  D003               	goto	i2l6788
 19844                           
 19845                           ; BSR set to: 15
 19846                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 19847  01268A  010F               	movlb	15	; () banked
 19848  01268C  8F32               	bsf	50,7,b	;volatile
 19849  01268E  D000               	goto	i2l6788
 19850  012690                     i2l6788:
 19851                           
 19852                           ; BSR set to: 15
 19853                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 19854  012690  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19855  012694  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19856  012698  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19857  01269C  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19858  0126A0  0E16               	movlw	22
 19859  0126A2  D005               	goto	i2u811_40
 19860  0126A4                     i2u811_45:
 19861  0126A4  90D8               	bcf	status,0,c
 19862  0126A6  3245               	rrcf	??i2_CANsendMessage+3,f,c
 19863  0126A8  3244               	rrcf	??i2_CANsendMessage+2,f,c
 19864  0126AA  3243               	rrcf	??i2_CANsendMessage+1,f,c
 19865  0126AC  3242               	rrcf	??i2_CANsendMessage,f,c
 19866  0126AE                     i2u811_40:
 19867  0126AE  2EE8               	decfsz	wreg,f,c
 19868  0126B0  D7F9               	goto	i2u811_45
 19869  0126B2  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19870  0126B6  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19871  0126BA  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19872  0126BE  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19873                           
 19874                           ; BSR set to: 15
 19875                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 19876  0126C2  5046               	movf	i2CANsendMessage@tamp,w,c
 19877  0126C4  6E46               	movwf	i2CANsendMessage@tamp,c
 19878  0126C6  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19879  0126C8  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19880  0126CA  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19881                           
 19882                           ; BSR set to: 15
 19883                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 19884  0126CC  C046  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 19885                           
 19886                           ;inc\CANlib.h: 407: }
 19887  0126D0  D04E               	goto	i2l6808
 19888  0126D2                     i2l401:
 19889                           
 19890                           ; BSR set to: 15
 19891                           ;inc\CANlib.h: 409: else
 19892                           ;inc\CANlib.h: 411: {
 19893                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 19894  0126D2  010F               	movlb	15	; () banked
 19895  0126D4  9732               	bcf	50,3,b	;volatile
 19896                           
 19897                           ; BSR set to: 15
 19898                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 19899  0126D6  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19900  0126DA  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19901  0126DE  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19902  0126E2  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19903  0126E6  0E04               	movlw	4
 19904  0126E8  D005               	goto	i2u812_40
 19905  0126EA                     i2u812_45:
 19906  0126EA  90D8               	bcf	status,0,c
 19907  0126EC  3245               	rrcf	??i2_CANsendMessage+3,f,c
 19908  0126EE  3244               	rrcf	??i2_CANsendMessage+2,f,c
 19909  0126F0  3243               	rrcf	??i2_CANsendMessage+1,f,c
 19910  0126F2  3242               	rrcf	??i2_CANsendMessage,f,c
 19911  0126F4                     i2u812_40:
 19912  0126F4  2EE8               	decfsz	wreg,f,c
 19913  0126F6  D7F9               	goto	i2u812_45
 19914  0126F8  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19915  0126FC  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19916  012700  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19917  012704  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19918                           
 19919                           ; BSR set to: 15
 19920                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 19921  012708  5046               	movf	i2CANsendMessage@tamp,w,c
 19922  01270A  6E46               	movwf	i2CANsendMessage@tamp,c
 19923  01270C  6A47               	clrf	i2CANsendMessage@tamp+1,c
 19924  01270E  6A48               	clrf	i2CANsendMessage@tamp+2,c
 19925  012710  6A49               	clrf	i2CANsendMessage@tamp+3,c
 19926                           
 19927                           ; BSR set to: 15
 19928                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 19929  012712  C046  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 19930                           
 19931                           ; BSR set to: 15
 19932                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 19933  012716  0E07               	movlw	7
 19934  012718  143A               	andwf	i2CANsendMessage@identifier,w,c
 19935  01271A  6E46               	movwf	i2CANsendMessage@tamp,c
 19936  01271C  0E00               	movlw	0
 19937  01271E  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 19938  012720  6E47               	movwf	i2CANsendMessage@tamp+1,c
 19939  012722  0E00               	movlw	0
 19940  012724  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 19941  012726  6E48               	movwf	i2CANsendMessage@tamp+2,c
 19942  012728  0E00               	movlw	0
 19943  01272A  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 19944  01272C  6E49               	movwf	i2CANsendMessage@tamp+3,c
 19945                           
 19946                           ; BSR set to: 15
 19947                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 19948  01272E  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19949  012732  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19950  012736  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19951  01273A  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19952  01273E  0E05               	movlw	5
 19953  012740                     i2u813_45:
 19954  012740  90D8               	bcf	status,0,c
 19955  012742  3642               	rlcf	??i2_CANsendMessage,f,c
 19956  012744  3643               	rlcf	??i2_CANsendMessage+1,f,c
 19957  012746  3644               	rlcf	??i2_CANsendMessage+2,f,c
 19958  012748  3645               	rlcf	??i2_CANsendMessage+3,f,c
 19959  01274A  2EE8               	decfsz	wreg,f,c
 19960  01274C  D7F9               	goto	i2u813_45
 19961  01274E  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19962  012752  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19963  012756  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19964  01275A  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19965                           
 19966                           ; BSR set to: 15
 19967                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 19968  01275E  010F               	movlb	15	; () banked
 19969  012760  5132               	movf	50,w,b	;volatile
 19970  012762  0B1F               	andlw	31
 19971  012764  010F               	movlb	15	; () banked
 19972  012766  6F32               	movwf	50,b	;volatile
 19973                           
 19974                           ; BSR set to: 15
 19975                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 19976  012768  C046  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 19977  01276C  D000               	goto	i2l6808
 19978  01276E                     i2l6808:
 19979                           
 19980                           ; BSR set to: 15
 19981                           ;inc\CANlib.h: 422: }
 19982                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 19983  01276E  A041               	btfss	i2CANsendMessage@flags,0,c
 19984  012770  D003               	goto	i2l408
 19985                           
 19986                           ; BSR set to: 15
 19987                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 19988  012772  010F               	movlb	15	; () banked
 19989  012774  8130               	bsf	48,0,b	;volatile
 19990  012776  D002               	goto	i2l409
 19991  012778                     i2l408:
 19992                           
 19993                           ; BSR set to: 15
 19994                           ;inc\CANlib.h: 426: else
 19995                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 19996  012778  010F               	movlb	15	; () banked
 19997  01277A  9130               	bcf	48,0,b	;volatile
 19998  01277C                     i2l409:
 19999                           
 20000                           ; BSR set to: 15
 20001                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 20002  01277C  A241               	btfss	i2CANsendMessage@flags,1,c
 20003  01277E  D003               	goto	i2l410
 20004                           
 20005                           ; BSR set to: 15
 20006                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 20007  012780  010F               	movlb	15	; () banked
 20008  012782  8330               	bsf	48,1,b	;volatile
 20009  012784  D003               	goto	i2l6814
 20010  012786                     i2l410:
 20011                           
 20012                           ; BSR set to: 15
 20013                           ;inc\CANlib.h: 430: else
 20014                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 20015  012786  010F               	movlb	15	; () banked
 20016  012788  9330               	bcf	48,1,b	;volatile
 20017  01278A  D000               	goto	i2l6814
 20018  01278C                     i2l6814:
 20019                           
 20020                           ; BSR set to: 15
 20021                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 20022  01278C  C03E  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20023  012790  C03F  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20024  012794  50DF               	movf	indf2,w,c
 20025  012796  010F               	movlb	15	; () banked
 20026  012798  6F36               	movwf	54,b	;volatile
 20027                           
 20028                           ; BSR set to: 15
 20029                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 20030  01279A  EE20 F001          	lfsr	2,1
 20031  01279E  503E               	movf	i2CANsendMessage@data,w,c
 20032  0127A0  26D9               	addwf	fsr2l,f,c
 20033  0127A2  503F               	movf	i2CANsendMessage@data+1,w,c
 20034  0127A4  22DA               	addwfc	fsr2h,f,c
 20035  0127A6  50DF               	movf	indf2,w,c
 20036  0127A8  010F               	movlb	15	; () banked
 20037  0127AA  6F37               	movwf	55,b	;volatile
 20038                           
 20039                           ; BSR set to: 15
 20040                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 20041  0127AC  EE20 F002          	lfsr	2,2
 20042  0127B0  503E               	movf	i2CANsendMessage@data,w,c
 20043  0127B2  26D9               	addwf	fsr2l,f,c
 20044  0127B4  503F               	movf	i2CANsendMessage@data+1,w,c
 20045  0127B6  22DA               	addwfc	fsr2h,f,c
 20046  0127B8  50DF               	movf	indf2,w,c
 20047  0127BA  010F               	movlb	15	; () banked
 20048  0127BC  6F38               	movwf	56,b	;volatile
 20049                           
 20050                           ; BSR set to: 15
 20051                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 20052  0127BE  EE20 F003          	lfsr	2,3
 20053  0127C2  503E               	movf	i2CANsendMessage@data,w,c
 20054  0127C4  26D9               	addwf	fsr2l,f,c
 20055  0127C6  503F               	movf	i2CANsendMessage@data+1,w,c
 20056  0127C8  22DA               	addwfc	fsr2h,f,c
 20057  0127CA  50DF               	movf	indf2,w,c
 20058  0127CC  010F               	movlb	15	; () banked
 20059  0127CE  6F39               	movwf	57,b	;volatile
 20060                           
 20061                           ; BSR set to: 15
 20062                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 20063  0127D0  EE20 F004          	lfsr	2,4
 20064  0127D4  503E               	movf	i2CANsendMessage@data,w,c
 20065  0127D6  26D9               	addwf	fsr2l,f,c
 20066  0127D8  503F               	movf	i2CANsendMessage@data+1,w,c
 20067  0127DA  22DA               	addwfc	fsr2h,f,c
 20068  0127DC  50DF               	movf	indf2,w,c
 20069  0127DE  010F               	movlb	15	; () banked
 20070  0127E0  6F3A               	movwf	58,b	;volatile
 20071                           
 20072                           ; BSR set to: 15
 20073                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 20074  0127E2  EE20 F005          	lfsr	2,5
 20075  0127E6  503E               	movf	i2CANsendMessage@data,w,c
 20076  0127E8  26D9               	addwf	fsr2l,f,c
 20077  0127EA  503F               	movf	i2CANsendMessage@data+1,w,c
 20078  0127EC  22DA               	addwfc	fsr2h,f,c
 20079  0127EE  50DF               	movf	indf2,w,c
 20080  0127F0  010F               	movlb	15	; () banked
 20081  0127F2  6F3B               	movwf	59,b	;volatile
 20082                           
 20083                           ; BSR set to: 15
 20084                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 20085  0127F4  EE20 F006          	lfsr	2,6
 20086  0127F8  503E               	movf	i2CANsendMessage@data,w,c
 20087  0127FA  26D9               	addwf	fsr2l,f,c
 20088  0127FC  503F               	movf	i2CANsendMessage@data+1,w,c
 20089  0127FE  22DA               	addwfc	fsr2h,f,c
 20090  012800  50DF               	movf	indf2,w,c
 20091  012802  010F               	movlb	15	; () banked
 20092  012804  6F3C               	movwf	60,b	;volatile
 20093                           
 20094                           ; BSR set to: 15
 20095                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 20096  012806  EE20 F007          	lfsr	2,7
 20097  01280A  503E               	movf	i2CANsendMessage@data,w,c
 20098  01280C  26D9               	addwf	fsr2l,f,c
 20099  01280E  503F               	movf	i2CANsendMessage@data+1,w,c
 20100  012810  22DA               	addwfc	fsr2h,f,c
 20101  012812  50DF               	movf	indf2,w,c
 20102  012814  010F               	movlb	15	; () banked
 20103  012816  6F3D               	movwf	61,b	;volatile
 20104                           
 20105                           ; BSR set to: 15
 20106                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 20107  012818  010F               	movlb	15	; () banked
 20108  01281A  8730               	bsf	48,3,b	;volatile
 20109                           
 20110                           ; BSR set to: 15
 20111                           ;inc\CANlib.h: 444: return;
 20112  01281C  0012               	return	
 20113  01281E                     i2l398:
 20114                           
 20115                           ; BSR set to: 15
 20116                           ;inc\CANlib.h: 445: }
 20117                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 20118  01281E  010F               	movlb	15	; () banked
 20119  012820  B720               	btfsc	32,3,b	;volatile
 20120  012822  0012               	return	
 20121                           
 20122                           ; BSR set to: 15
 20123                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 20124  012824  C040  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 20125                           
 20126                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 20127  012828  AC41               	btfss	i2CANsendMessage@flags,6,c
 20128  01282A  D003               	goto	i2l413
 20129                           
 20130                           ; BSR set to: 15
 20131                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 20132  01282C  010F               	movlb	15	; () banked
 20133  01282E  8D25               	bsf	37,6,b	;volatile
 20134  012830  D002               	goto	i2l414
 20135  012832                     i2l413:
 20136                           
 20137                           ; BSR set to: 15
 20138                           ;inc\CANlib.h: 454: else
 20139                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 20140  012832  010F               	movlb	15	; () banked
 20141  012834  9D25               	bcf	37,6,b	;volatile
 20142  012836                     i2l414:
 20143                           
 20144                           ; BSR set to: 15
 20145                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 20146  012836  A641               	btfss	i2CANsendMessage@flags,3,c
 20147  012838  D067               	goto	i2l415
 20148                           
 20149                           ; BSR set to: 15
 20150                           ;inc\CANlib.h: 458: {
 20151                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 20152  01283A  503A               	movf	i2CANsendMessage@identifier,w,c
 20153  01283C  6E46               	movwf	i2CANsendMessage@tamp,c
 20154  01283E  6A47               	clrf	i2CANsendMessage@tamp+1,c
 20155  012840  6A48               	clrf	i2CANsendMessage@tamp+2,c
 20156  012842  6A49               	clrf	i2CANsendMessage@tamp+3,c
 20157                           
 20158                           ; BSR set to: 15
 20159                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 20160  012844  C046  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 20161                           
 20162                           ; BSR set to: 15
 20163                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 20164  012848  0E00               	movlw	0
 20165  01284A  143A               	andwf	i2CANsendMessage@identifier,w,c
 20166  01284C  6E46               	movwf	i2CANsendMessage@tamp,c
 20167  01284E  0EFF               	movlw	255
 20168  012850  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 20169  012852  6E47               	movwf	i2CANsendMessage@tamp+1,c
 20170  012854  0E00               	movlw	0
 20171  012856  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 20172  012858  6E48               	movwf	i2CANsendMessage@tamp+2,c
 20173  01285A  0E00               	movlw	0
 20174  01285C  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 20175  01285E  6E49               	movwf	i2CANsendMessage@tamp+3,c
 20176                           
 20177                           ; BSR set to: 15
 20178                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 20179  012860  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20180  012864  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20181  012868  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20182  01286C  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20183  012870  C043  F042         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 20184  012874  C044  F043         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 20185  012878  C045  F044         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 20186  01287C  6A45               	clrf	??i2_CANsendMessage+3,c
 20187  01287E  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20188  012882  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20189  012886  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20190  01288A  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20191                           
 20192                           ; BSR set to: 15
 20193                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 20194  01288E  C046  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 20195                           
 20196                           ; BSR set to: 15
 20197                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 20198  012892  0E00               	movlw	0
 20199  012894  010F               	movlb	15	; () banked
 20200  012896  6F22               	movwf	34,b	;volatile
 20201                           
 20202                           ; BSR set to: 15
 20203                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 20204  012898  010F               	movlb	15	; () banked
 20205  01289A  8722               	bsf	34,3,b	;volatile
 20206                           
 20207                           ; BSR set to: 15
 20208                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 20209  01289C  A03C               	btfss	i2CANsendMessage@identifier+2,0,c
 20210  01289E  D002               	goto	i2l416
 20211                           
 20212                           ; BSR set to: 15
 20213                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 20214  0128A0  010F               	movlb	15	; () banked
 20215  0128A2  8122               	bsf	34,0,b	;volatile
 20216  0128A4                     i2l416:
 20217                           
 20218                           ; BSR set to: 15
 20219                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 20220  0128A4  A23C               	btfss	i2CANsendMessage@identifier+2,1,c
 20221  0128A6  D002               	goto	i2l417
 20222                           
 20223                           ; BSR set to: 15
 20224                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 20225  0128A8  010F               	movlb	15	; () banked
 20226  0128AA  8322               	bsf	34,1,b	;volatile
 20227  0128AC                     i2l417:
 20228                           
 20229                           ; BSR set to: 15
 20230                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 20231  0128AC  A43C               	btfss	i2CANsendMessage@identifier+2,2,c
 20232  0128AE  D002               	goto	i2l418
 20233                           
 20234                           ; BSR set to: 15
 20235                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 20236  0128B0  010F               	movlb	15	; () banked
 20237  0128B2  8B22               	bsf	34,5,b	;volatile
 20238  0128B4                     i2l418:
 20239                           
 20240                           ; BSR set to: 15
 20241                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 20242  0128B4  A63C               	btfss	i2CANsendMessage@identifier+2,3,c
 20243  0128B6  D002               	goto	i2l419
 20244                           
 20245                           ; BSR set to: 15
 20246                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 20247  0128B8  010F               	movlb	15	; () banked
 20248  0128BA  8D22               	bsf	34,6,b	;volatile
 20249  0128BC                     i2l419:
 20250                           
 20251                           ; BSR set to: 15
 20252                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 20253  0128BC  A83C               	btfss	i2CANsendMessage@identifier+2,4,c
 20254  0128BE  D003               	goto	i2l6864
 20255                           
 20256                           ; BSR set to: 15
 20257                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 20258  0128C0  010F               	movlb	15	; () banked
 20259  0128C2  8F22               	bsf	34,7,b	;volatile
 20260  0128C4  D000               	goto	i2l6864
 20261  0128C6                     i2l6864:
 20262                           
 20263                           ; BSR set to: 15
 20264                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 20265  0128C6  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20266  0128CA  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20267  0128CE  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20268  0128D2  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20269  0128D6  0E16               	movlw	22
 20270  0128D8  D005               	goto	i2u824_40
 20271  0128DA                     i2u824_45:
 20272  0128DA  90D8               	bcf	status,0,c
 20273  0128DC  3245               	rrcf	??i2_CANsendMessage+3,f,c
 20274  0128DE  3244               	rrcf	??i2_CANsendMessage+2,f,c
 20275  0128E0  3243               	rrcf	??i2_CANsendMessage+1,f,c
 20276  0128E2  3242               	rrcf	??i2_CANsendMessage,f,c
 20277  0128E4                     i2u824_40:
 20278  0128E4  2EE8               	decfsz	wreg,f,c
 20279  0128E6  D7F9               	goto	i2u824_45
 20280  0128E8  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20281  0128EC  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20282  0128F0  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20283  0128F4  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20284                           
 20285                           ; BSR set to: 15
 20286                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 20287  0128F8  5046               	movf	i2CANsendMessage@tamp,w,c
 20288  0128FA  6E46               	movwf	i2CANsendMessage@tamp,c
 20289  0128FC  6A47               	clrf	i2CANsendMessage@tamp+1,c
 20290  0128FE  6A48               	clrf	i2CANsendMessage@tamp+2,c
 20291  012900  6A49               	clrf	i2CANsendMessage@tamp+3,c
 20292                           
 20293                           ; BSR set to: 15
 20294                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 20295  012902  C046  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20296                           
 20297                           ;inc\CANlib.h: 483: }
 20298  012906  D04E               	goto	i2l6884
 20299  012908                     i2l415:
 20300                           
 20301                           ; BSR set to: 15
 20302                           ;inc\CANlib.h: 485: else
 20303                           ;inc\CANlib.h: 487: {
 20304                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 20305  012908  010F               	movlb	15	; () banked
 20306  01290A  9722               	bcf	34,3,b	;volatile
 20307                           
 20308                           ; BSR set to: 15
 20309                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 20310  01290C  C03A  F042         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20311  012910  C03B  F043         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20312  012914  C03C  F044         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20313  012918  C03D  F045         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20314  01291C  0E04               	movlw	4
 20315  01291E  D005               	goto	i2u825_40
 20316  012920                     i2u825_45:
 20317  012920  90D8               	bcf	status,0,c
 20318  012922  3245               	rrcf	??i2_CANsendMessage+3,f,c
 20319  012924  3244               	rrcf	??i2_CANsendMessage+2,f,c
 20320  012926  3243               	rrcf	??i2_CANsendMessage+1,f,c
 20321  012928  3242               	rrcf	??i2_CANsendMessage,f,c
 20322  01292A                     i2u825_40:
 20323  01292A  2EE8               	decfsz	wreg,f,c
 20324  01292C  D7F9               	goto	i2u825_45
 20325  01292E  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20326  012932  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20327  012936  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20328  01293A  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20329                           
 20330                           ; BSR set to: 15
 20331                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 20332  01293E  5046               	movf	i2CANsendMessage@tamp,w,c
 20333  012940  6E46               	movwf	i2CANsendMessage@tamp,c
 20334  012942  6A47               	clrf	i2CANsendMessage@tamp+1,c
 20335  012944  6A48               	clrf	i2CANsendMessage@tamp+2,c
 20336  012946  6A49               	clrf	i2CANsendMessage@tamp+3,c
 20337                           
 20338                           ; BSR set to: 15
 20339                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 20340  012948  C046  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20341                           
 20342                           ; BSR set to: 15
 20343                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 20344  01294C  0E07               	movlw	7
 20345  01294E  143A               	andwf	i2CANsendMessage@identifier,w,c
 20346  012950  6E46               	movwf	i2CANsendMessage@tamp,c
 20347  012952  0E00               	movlw	0
 20348  012954  143B               	andwf	i2CANsendMessage@identifier+1,w,c
 20349  012956  6E47               	movwf	i2CANsendMessage@tamp+1,c
 20350  012958  0E00               	movlw	0
 20351  01295A  143C               	andwf	i2CANsendMessage@identifier+2,w,c
 20352  01295C  6E48               	movwf	i2CANsendMessage@tamp+2,c
 20353  01295E  0E00               	movlw	0
 20354  012960  143D               	andwf	i2CANsendMessage@identifier+3,w,c
 20355  012962  6E49               	movwf	i2CANsendMessage@tamp+3,c
 20356                           
 20357                           ; BSR set to: 15
 20358                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 20359  012964  C046  F042         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20360  012968  C047  F043         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20361  01296C  C048  F044         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20362  012970  C049  F045         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20363  012974  0E05               	movlw	5
 20364  012976                     i2u826_45:
 20365  012976  90D8               	bcf	status,0,c
 20366  012978  3642               	rlcf	??i2_CANsendMessage,f,c
 20367  01297A  3643               	rlcf	??i2_CANsendMessage+1,f,c
 20368  01297C  3644               	rlcf	??i2_CANsendMessage+2,f,c
 20369  01297E  3645               	rlcf	??i2_CANsendMessage+3,f,c
 20370  012980  2EE8               	decfsz	wreg,f,c
 20371  012982  D7F9               	goto	i2u826_45
 20372  012984  C042  F046         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20373  012988  C043  F047         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20374  01298C  C044  F048         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20375  012990  C045  F049         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20376                           
 20377                           ; BSR set to: 15
 20378                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 20379  012994  010F               	movlb	15	; () banked
 20380  012996  5122               	movf	34,w,b	;volatile
 20381  012998  0B1F               	andlw	31
 20382  01299A  010F               	movlb	15	; () banked
 20383  01299C  6F22               	movwf	34,b	;volatile
 20384                           
 20385                           ; BSR set to: 15
 20386                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 20387  01299E  C046  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 20388  0129A2  D000               	goto	i2l6884
 20389  0129A4                     i2l6884:
 20390                           
 20391                           ; BSR set to: 15
 20392                           ;inc\CANlib.h: 498: }
 20393                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 20394  0129A4  A041               	btfss	i2CANsendMessage@flags,0,c
 20395  0129A6  D003               	goto	i2l422
 20396                           
 20397                           ; BSR set to: 15
 20398                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 20399  0129A8  010F               	movlb	15	; () banked
 20400  0129AA  8120               	bsf	32,0,b	;volatile
 20401  0129AC  D002               	goto	i2l423
 20402  0129AE                     i2l422:
 20403                           
 20404                           ; BSR set to: 15
 20405                           ;inc\CANlib.h: 502: else
 20406                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 20407  0129AE  010F               	movlb	15	; () banked
 20408  0129B0  9120               	bcf	32,0,b	;volatile
 20409  0129B2                     i2l423:
 20410                           
 20411                           ; BSR set to: 15
 20412                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 20413  0129B2  A241               	btfss	i2CANsendMessage@flags,1,c
 20414  0129B4  D003               	goto	i2l424
 20415                           
 20416                           ; BSR set to: 15
 20417                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 20418  0129B6  010F               	movlb	15	; () banked
 20419  0129B8  8320               	bsf	32,1,b	;volatile
 20420  0129BA  D003               	goto	i2l6890
 20421  0129BC                     i2l424:
 20422                           
 20423                           ; BSR set to: 15
 20424                           ;inc\CANlib.h: 506: else
 20425                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 20426  0129BC  010F               	movlb	15	; () banked
 20427  0129BE  9320               	bcf	32,1,b	;volatile
 20428  0129C0  D000               	goto	i2l6890
 20429  0129C2                     i2l6890:
 20430                           
 20431                           ; BSR set to: 15
 20432                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 20433  0129C2  C03E  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20434  0129C6  C03F  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20435  0129CA  50DF               	movf	indf2,w,c
 20436  0129CC  010F               	movlb	15	; () banked
 20437  0129CE  6F26               	movwf	38,b	;volatile
 20438                           
 20439                           ; BSR set to: 15
 20440                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 20441  0129D0  EE20 F001          	lfsr	2,1
 20442  0129D4  503E               	movf	i2CANsendMessage@data,w,c
 20443  0129D6  26D9               	addwf	fsr2l,f,c
 20444  0129D8  503F               	movf	i2CANsendMessage@data+1,w,c
 20445  0129DA  22DA               	addwfc	fsr2h,f,c
 20446  0129DC  50DF               	movf	indf2,w,c
 20447  0129DE  010F               	movlb	15	; () banked
 20448  0129E0  6F27               	movwf	39,b	;volatile
 20449                           
 20450                           ; BSR set to: 15
 20451                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 20452  0129E2  EE20 F002          	lfsr	2,2
 20453  0129E6  503E               	movf	i2CANsendMessage@data,w,c
 20454  0129E8  26D9               	addwf	fsr2l,f,c
 20455  0129EA  503F               	movf	i2CANsendMessage@data+1,w,c
 20456  0129EC  22DA               	addwfc	fsr2h,f,c
 20457  0129EE  50DF               	movf	indf2,w,c
 20458  0129F0  010F               	movlb	15	; () banked
 20459  0129F2  6F28               	movwf	40,b	;volatile
 20460                           
 20461                           ; BSR set to: 15
 20462                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 20463  0129F4  EE20 F003          	lfsr	2,3
 20464  0129F8  503E               	movf	i2CANsendMessage@data,w,c
 20465  0129FA  26D9               	addwf	fsr2l,f,c
 20466  0129FC  503F               	movf	i2CANsendMessage@data+1,w,c
 20467  0129FE  22DA               	addwfc	fsr2h,f,c
 20468  012A00  50DF               	movf	indf2,w,c
 20469  012A02  010F               	movlb	15	; () banked
 20470  012A04  6F29               	movwf	41,b	;volatile
 20471                           
 20472                           ; BSR set to: 15
 20473                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 20474  012A06  EE20 F004          	lfsr	2,4
 20475  012A0A  503E               	movf	i2CANsendMessage@data,w,c
 20476  012A0C  26D9               	addwf	fsr2l,f,c
 20477  012A0E  503F               	movf	i2CANsendMessage@data+1,w,c
 20478  012A10  22DA               	addwfc	fsr2h,f,c
 20479  012A12  50DF               	movf	indf2,w,c
 20480  012A14  010F               	movlb	15	; () banked
 20481  012A16  6F2A               	movwf	42,b	;volatile
 20482                           
 20483                           ; BSR set to: 15
 20484                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 20485  012A18  EE20 F005          	lfsr	2,5
 20486  012A1C  503E               	movf	i2CANsendMessage@data,w,c
 20487  012A1E  26D9               	addwf	fsr2l,f,c
 20488  012A20  503F               	movf	i2CANsendMessage@data+1,w,c
 20489  012A22  22DA               	addwfc	fsr2h,f,c
 20490  012A24  50DF               	movf	indf2,w,c
 20491  012A26  010F               	movlb	15	; () banked
 20492  012A28  6F2B               	movwf	43,b	;volatile
 20493                           
 20494                           ; BSR set to: 15
 20495                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 20496  012A2A  EE20 F006          	lfsr	2,6
 20497  012A2E  503E               	movf	i2CANsendMessage@data,w,c
 20498  012A30  26D9               	addwf	fsr2l,f,c
 20499  012A32  503F               	movf	i2CANsendMessage@data+1,w,c
 20500  012A34  22DA               	addwfc	fsr2h,f,c
 20501  012A36  50DF               	movf	indf2,w,c
 20502  012A38  010F               	movlb	15	; () banked
 20503  012A3A  6F2C               	movwf	44,b	;volatile
 20504                           
 20505                           ; BSR set to: 15
 20506                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 20507  012A3C  EE20 F007          	lfsr	2,7
 20508  012A40  503E               	movf	i2CANsendMessage@data,w,c
 20509  012A42  26D9               	addwf	fsr2l,f,c
 20510  012A44  503F               	movf	i2CANsendMessage@data+1,w,c
 20511  012A46  22DA               	addwfc	fsr2h,f,c
 20512  012A48  50DF               	movf	indf2,w,c
 20513  012A4A  010F               	movlb	15	; () banked
 20514  012A4C  6F2D               	movwf	45,b	;volatile
 20515                           
 20516                           ; BSR set to: 15
 20517                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 20518  012A4E  010F               	movlb	15	; () banked
 20519  012A50  8720               	bsf	32,3,b	;volatile
 20520                           
 20521                           ; BSR set to: 15
 20522                           ;inc\CANlib.h: 520: return;
 20523  012A52  0012               	return	
 20524                           
 20525                           ; BSR set to: 15
 20526                           
 20527                           ; BSR set to: 15
 20528  012A54  0012               	return		;funcret
 20529  012A56                     __end_ofi2_CANsendMessage:
 20530                           	opt stack 0
 20531                           pclatu	equ	0xFFB
 20532                           pclath	equ	0xFFA
 20533                           tblptru	equ	0xFF8
 20534                           tblptrh	equ	0xFF7
 20535                           tblptrl	equ	0xFF6
 20536                           tablat	equ	0xFF5
 20537                           prodh	equ	0xFF4
 20538                           prodl	equ	0xFF3
 20539                           intcon	equ	0xFF2
 20540                           postinc0	equ	0xFEE
 20541                           fsr0h	equ	0xFEA
 20542                           fsr0l	equ	0xFE9
 20543                           wreg	equ	0xFE8
 20544                           indf1	equ	0xFE7
 20545                           plusw1	equ	0xFE3
 20546                           fsr1h	equ	0xFE2
 20547                           fsr1l	equ	0xFE1
 20548                           bsr	equ	0xFE0
 20549                           indf2	equ	0xFDF
 20550                           postinc2	equ	0xFDE
 20551                           plusw2	equ	0xFDB
 20552                           fsr2h	equ	0xFDA
 20553                           fsr2l	equ	0xFD9
 20554                           status	equ	0xFD8
 20555                           
 20556 ;; *************** function i2_CANisTxReady *****************
 20557 ;; Defined at:
 20558 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 20559 ;; Parameters:    Size  Location     Type
 20560 ;;		None
 20561 ;; Auto vars:     Size  Location     Type
 20562 ;;		None
 20563 ;; Return value:  Size  Location     Type
 20564 ;;                  1    wreg      unsigned char 
 20565 ;; Registers used:
 20566 ;;		wreg, status,2
 20567 ;; Tracked objects:
 20568 ;;		On entry : 0/0
 20569 ;;		On exit  : 0/0
 20570 ;;		Unchanged: 0/0
 20571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20573 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20575 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20576 ;;Total ram usage:        1 bytes
 20577 ;; Hardware stack levels used:    1
 20578 ;; This function calls:
 20579 ;;		Nothing
 20580 ;; This function is called by:
 20581 ;;		_ISR_alta
 20582 ;; This function uses a non-reentrant model
 20583 ;;
 20584                           
 20585                           	psect	text63
 20586  015EF6                     __ptext63:
 20587                           	opt stack 0
 20588  015EF6                     i2_CANisTxReady:
 20589                           	opt stack 20
 20590                           
 20591                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 20592                           
 20593                           ; BSR set to: 15
 20594                           ;incstack = 0
 20595  015EF6  0E01               	movlw	1
 20596  015EF8  6E3A               	movwf	i2_CANisTxReady$3251,c
 20597  015EFA  010F               	movlb	15	; () banked
 20598  015EFC  A740               	btfss	64,3,b	;volatile
 20599  015EFE  D008               	goto	i2l576
 20600                           
 20601                           ; BSR set to: 15
 20602  015F00  010F               	movlb	15	; () banked
 20603  015F02  A730               	btfss	48,3,b	;volatile
 20604  015F04  D005               	goto	i2l576
 20605                           
 20606                           ; BSR set to: 15
 20607  015F06  010F               	movlb	15	; () banked
 20608  015F08  A720               	btfss	32,3,b	;volatile
 20609  015F0A  D002               	goto	i2l576
 20610                           
 20611                           ; BSR set to: 15
 20612  015F0C  0E00               	movlw	0
 20613  015F0E  6E3A               	movwf	i2_CANisTxReady$3251,c
 20614  015F10                     i2l576:
 20615                           
 20616                           ; BSR set to: 15
 20617  015F10  503A               	movf	i2_CANisTxReady$3251,w,c
 20618  015F12  0012               	return	
 20619                           
 20620                           ; BSR set to: 15
 20621                           
 20622                           ; BSR set to: 15
 20623  015F14  0012               	return		;funcret
 20624  015F16                     __end_ofi2_CANisTxReady:
 20625                           	opt stack 0
 20626                           pclatu	equ	0xFFB
 20627                           pclath	equ	0xFFA
 20628                           tblptru	equ	0xFF8
 20629                           tblptrh	equ	0xFF7
 20630                           tblptrl	equ	0xFF6
 20631                           tablat	equ	0xFF5
 20632                           prodh	equ	0xFF4
 20633                           prodl	equ	0xFF3
 20634                           intcon	equ	0xFF2
 20635                           postinc0	equ	0xFEE
 20636                           fsr0h	equ	0xFEA
 20637                           fsr0l	equ	0xFE9
 20638                           wreg	equ	0xFE8
 20639                           indf1	equ	0xFE7
 20640                           plusw1	equ	0xFE3
 20641                           fsr1h	equ	0xFE2
 20642                           fsr1l	equ	0xFE1
 20643                           bsr	equ	0xFE0
 20644                           indf2	equ	0xFDF
 20645                           postinc2	equ	0xFDE
 20646                           plusw2	equ	0xFDB
 20647                           fsr2h	equ	0xFDA
 20648                           fsr2l	equ	0xFD9
 20649                           status	equ	0xFD8
 20650                           
 20651 ;; *************** function _CANreceiveMessage *****************
 20652 ;; Defined at:
 20653 ;;		line 528 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 20654 ;; Parameters:    Size  Location     Type
 20655 ;;  msg             2   17[COMRAM] PTR struct .
 20656 ;;		 -> msg(15), 
 20657 ;; Auto vars:     Size  Location     Type
 20658 ;;  tamp            1   28[COMRAM] unsigned char 
 20659 ;;  error           1   27[COMRAM] unsigned char 
 20660 ;; Return value:  Size  Location     Type
 20661 ;;                  1    wreg      unsigned char 
 20662 ;; Registers used:
 20663 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20664 ;; Tracked objects:
 20665 ;;		On entry : 0/0
 20666 ;;		On exit  : 0/0
 20667 ;;		Unchanged: 0/0
 20668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20670 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20671 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20672 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20673 ;;Total ram usage:       12 bytes
 20674 ;; Hardware stack levels used:    1
 20675 ;; This function calls:
 20676 ;;		Nothing
 20677 ;; This function is called by:
 20678 ;;		_ISR_alta
 20679 ;; This function uses a non-reentrant model
 20680 ;;
 20681                           
 20682                           	psect	text64
 20683  012A56                     __ptext64:
 20684                           	opt stack 0
 20685  012A56                     _CANreceiveMessage:
 20686                           	opt stack 20
 20687                           
 20688                           ;inc\CANlib.h: 530: BYTE tamp;
 20689                           ;inc\CANlib.h: 531: BYTE error = 0;
 20690                           
 20691                           ; BSR set to: 15
 20692                           ;incstack = 0
 20693  012A56  0E00               	movlw	0
 20694  012A58  6E44               	movwf	CANreceiveMessage@error,c
 20695                           
 20696                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 20697  012A5A  AE74               	btfss	3956,7,c	;volatile
 20698  012A5C  D002               	goto	i2l6264
 20699                           
 20700                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 20701  012A5E  8044               	bsf	CANreceiveMessage@error,0,c
 20702  012A60  D000               	goto	i2l6264
 20703  012A62                     i2l6264:
 20704                           
 20705                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 20706  012A62  AC74               	btfss	3956,6,c	;volatile
 20707  012A64  D002               	goto	i2l6268
 20708                           
 20709                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 20710  012A66  8244               	bsf	CANreceiveMessage@error,1,c
 20711  012A68  D000               	goto	i2l6268
 20712  012A6A                     i2l6268:
 20713                           
 20714                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 20715  012A6A  010F               	movlb	15	; () banked
 20716  012A6C  AF50               	btfss	80,7,b	;volatile
 20717  012A6E  D149               	goto	i2l430
 20718                           
 20719                           ; BSR set to: 15
 20720                           ;inc\CANlib.h: 541: {
 20721                           ;inc\CANlib.h: 542: msg->identifier = 0;
 20722  012A70  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20723  012A74  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20724  012A78  6ADE               	clrf	postinc2,c
 20725  012A7A  6ADE               	clrf	postinc2,c
 20726  012A7C  6ADE               	clrf	postinc2,c
 20727  012A7E  6ADD               	clrf	postdec2,c
 20728                           
 20729                           ; BSR set to: 15
 20730                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 20731  012A80  EE20 F004          	lfsr	2,4
 20732  012A84  503A               	movf	CANreceiveMessage@msg,w,c
 20733  012A86  26D9               	addwf	fsr2l,f,c
 20734  012A88  503B               	movf	CANreceiveMessage@msg+1,w,c
 20735  012A8A  22DA               	addwfc	fsr2h,f,c
 20736  012A8C  CF56 FFDF          	movff	3926,indf2	;volatile
 20737                           
 20738                           ; BSR set to: 15
 20739                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 20740  012A90  EE20 F005          	lfsr	2,5
 20741  012A94  503A               	movf	CANreceiveMessage@msg,w,c
 20742  012A96  26D9               	addwf	fsr2l,f,c
 20743  012A98  503B               	movf	CANreceiveMessage@msg+1,w,c
 20744  012A9A  22DA               	addwfc	fsr2h,f,c
 20745  012A9C  CF57 FFDF          	movff	3927,indf2	;volatile
 20746                           
 20747                           ; BSR set to: 15
 20748                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 20749  012AA0  EE20 F006          	lfsr	2,6
 20750  012AA4  503A               	movf	CANreceiveMessage@msg,w,c
 20751  012AA6  26D9               	addwf	fsr2l,f,c
 20752  012AA8  503B               	movf	CANreceiveMessage@msg+1,w,c
 20753  012AAA  22DA               	addwfc	fsr2h,f,c
 20754  012AAC  CF58 FFDF          	movff	3928,indf2	;volatile
 20755                           
 20756                           ; BSR set to: 15
 20757                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 20758  012AB0  EE20 F007          	lfsr	2,7
 20759  012AB4  503A               	movf	CANreceiveMessage@msg,w,c
 20760  012AB6  26D9               	addwf	fsr2l,f,c
 20761  012AB8  503B               	movf	CANreceiveMessage@msg+1,w,c
 20762  012ABA  22DA               	addwfc	fsr2h,f,c
 20763  012ABC  CF59 FFDF          	movff	3929,indf2	;volatile
 20764                           
 20765                           ; BSR set to: 15
 20766                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 20767  012AC0  EE20 F008          	lfsr	2,8
 20768  012AC4  503A               	movf	CANreceiveMessage@msg,w,c
 20769  012AC6  26D9               	addwf	fsr2l,f,c
 20770  012AC8  503B               	movf	CANreceiveMessage@msg+1,w,c
 20771  012ACA  22DA               	addwfc	fsr2h,f,c
 20772  012ACC  CF5A FFDF          	movff	3930,indf2	;volatile
 20773                           
 20774                           ; BSR set to: 15
 20775                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 20776  012AD0  EE20 F009          	lfsr	2,9
 20777  012AD4  503A               	movf	CANreceiveMessage@msg,w,c
 20778  012AD6  26D9               	addwf	fsr2l,f,c
 20779  012AD8  503B               	movf	CANreceiveMessage@msg+1,w,c
 20780  012ADA  22DA               	addwfc	fsr2h,f,c
 20781  012ADC  CF5B FFDF          	movff	3931,indf2	;volatile
 20782                           
 20783                           ; BSR set to: 15
 20784                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 20785  012AE0  EE20 F00A          	lfsr	2,10
 20786  012AE4  503A               	movf	CANreceiveMessage@msg,w,c
 20787  012AE6  26D9               	addwf	fsr2l,f,c
 20788  012AE8  503B               	movf	CANreceiveMessage@msg+1,w,c
 20789  012AEA  22DA               	addwfc	fsr2h,f,c
 20790  012AEC  CF5C FFDF          	movff	3932,indf2	;volatile
 20791                           
 20792                           ; BSR set to: 15
 20793                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 20794  012AF0  EE20 F00B          	lfsr	2,11
 20795  012AF4  503A               	movf	CANreceiveMessage@msg,w,c
 20796  012AF6  26D9               	addwf	fsr2l,f,c
 20797  012AF8  503B               	movf	CANreceiveMessage@msg+1,w,c
 20798  012AFA  22DA               	addwfc	fsr2h,f,c
 20799  012AFC  CF5D FFDF          	movff	3933,indf2	;volatile
 20800                           
 20801                           ; BSR set to: 15
 20802                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 20803  012B00  EE20 F00E          	lfsr	2,14
 20804  012B04  503A               	movf	CANreceiveMessage@msg,w,c
 20805  012B06  26D9               	addwf	fsr2l,f,c
 20806  012B08  503B               	movf	CANreceiveMessage@msg+1,w,c
 20807  012B0A  22DA               	addwfc	fsr2h,f,c
 20808  012B0C  010F               	movlb	15	; () banked
 20809  012B0E  AD55               	btfss	85,6,b	;volatile
 20810  012B10  D002               	goto	i2u743_40
 20811  012B12  0E01               	movlw	1
 20812  012B14  D001               	goto	i2u743_46
 20813  012B16                     i2u743_40:
 20814  012B16  0E00               	movlw	0
 20815  012B18                     i2u743_46:
 20816  012B18  6EDF               	movwf	indf2,c
 20817                           
 20818                           ; BSR set to: 15
 20819                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 20820  012B1A  EE20 F00D          	lfsr	2,13
 20821  012B1E  503A               	movf	CANreceiveMessage@msg,w,c
 20822  012B20  26D9               	addwf	fsr2l,f,c
 20823  012B22  503B               	movf	CANreceiveMessage@msg+1,w,c
 20824  012B24  22DA               	addwfc	fsr2h,f,c
 20825  012B26  010F               	movlb	15	; () banked
 20826  012B28  5155               	movf	85,w,b	;volatile
 20827  012B2A  0B0F               	andlw	15
 20828  012B2C  6EDF               	movwf	indf2,c
 20829                           
 20830                           ; BSR set to: 15
 20831                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 20832  012B2E  EE20 F00C          	lfsr	2,12
 20833  012B32  503A               	movf	CANreceiveMessage@msg,w,c
 20834  012B34  26D9               	addwf	fsr2l,f,c
 20835  012B36  503B               	movf	CANreceiveMessage@msg+1,w,c
 20836  012B38  22DA               	addwfc	fsr2h,f,c
 20837  012B3A  010F               	movlb	15	; () banked
 20838  012B3C  A752               	btfss	82,3,b	;volatile
 20839  012B3E  D002               	goto	i2u744_40
 20840  012B40  0E01               	movlw	1
 20841  012B42  D001               	goto	i2u744_46
 20842  012B44                     i2u744_40:
 20843  012B44  0E00               	movlw	0
 20844  012B46                     i2u744_46:
 20845  012B46  6EDF               	movwf	indf2,c
 20846                           
 20847                           ; BSR set to: 15
 20848                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 20849  012B48  010F               	movlb	15	; () banked
 20850  012B4A  B752               	btfsc	82,3,b	;volatile
 20851  012B4C  D044               	goto	i2l6302
 20852                           
 20853                           ; BSR set to: 15
 20854                           ;inc\CANlib.h: 559: {
 20855                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 20856  012B4E  CF51 F03C          	movff	3921,??_CANreceiveMessage	;volatile
 20857  012B52  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20858  012B54  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20859  012B56  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20860  012B58  0E03               	movlw	3
 20861  012B5A                     i2u746_45:
 20862  012B5A  90D8               	bcf	status,0,c
 20863  012B5C  363C               	rlcf	??_CANreceiveMessage,f,c
 20864  012B5E  363D               	rlcf	??_CANreceiveMessage+1,f,c
 20865  012B60  363E               	rlcf	??_CANreceiveMessage+2,f,c
 20866  012B62  363F               	rlcf	??_CANreceiveMessage+3,f,c
 20867  012B64  2EE8               	decfsz	wreg,f,c
 20868  012B66  D7F9               	goto	i2u746_45
 20869  012B68  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20870  012B6C  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20871  012B70  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 20872  012B74  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20873  012B78  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20874  012B7C  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20875                           
 20876                           ; BSR set to: 15
 20877                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 20878  012B80  010F               	movlb	15	; () banked
 20879  012B82  3952               	swapf	82,w,b	;volatile
 20880  012B84  42E8               	rrncf	wreg,f,c
 20881  012B86  0B07               	andlw	7
 20882  012B88  0B07               	andlw	7
 20883  012B8A  6E45               	movwf	CANreceiveMessage@tamp,c
 20884                           
 20885                           ; BSR set to: 15
 20886                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 20887  012B8C  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20888  012B90  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20889  012B94  CFDE F03C          	movff	postinc2,??_CANreceiveMessage
 20890  012B98  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+1
 20891  012B9C  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+2
 20892  012BA0  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+3
 20893  012BA4  5045               	movf	CANreceiveMessage@tamp,w,c
 20894  012BA6  243C               	addwf	??_CANreceiveMessage,w,c
 20895  012BA8  6E40               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 20896  012BAA  0E00               	movlw	0
 20897  012BAC  203D               	addwfc	??_CANreceiveMessage+1,w,c
 20898  012BAE  6E41               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 20899  012BB0  0E00               	movlw	0
 20900  012BB2  203E               	addwfc	??_CANreceiveMessage+2,w,c
 20901  012BB4  6E42               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 20902  012BB6  0E00               	movlw	0
 20903  012BB8  203F               	addwfc	??_CANreceiveMessage+3,w,c
 20904  012BBA  6E43               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 20905  012BBC  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20906  012BC0  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20907  012BC4  C040  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 20908  012BC8  C041  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 20909  012BCC  C042  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 20910  012BD0  C043  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 20911                           
 20912                           ;inc\CANlib.h: 563: }
 20913  012BD4  D093               	goto	i2l6328
 20914  012BD6                     i2l6302:
 20915                           
 20916                           ; BSR set to: 15
 20917                           ;inc\CANlib.h: 564: else
 20918                           ;inc\CANlib.h: 565: {
 20919                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 20920  012BD6  CF54 F03C          	movff	3924,??_CANreceiveMessage	;volatile
 20921  012BDA  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20922  012BDC  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20923  012BDE  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20924  012BE0  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20925  012BE4  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20926  012BE8  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 20927  012BEC  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20928  012BF0  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20929  012BF4  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20930                           
 20931                           ; BSR set to: 15
 20932                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 20933  012BF8  CF53 F03C          	movff	3923,??_CANreceiveMessage	;volatile
 20934  012BFC  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20935  012BFE  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20936  012C00  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20937  012C02  C03E  F03F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 20938  012C06  C03D  F03E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 20939  012C0A  C03C  F03D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 20940  012C0E  6A3C               	clrf	??_CANreceiveMessage,c
 20941  012C10  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20942  012C14  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20943  012C18  503C               	movf	??_CANreceiveMessage,w,c
 20944  012C1A  26DE               	addwf	postinc2,f,c
 20945  012C1C  503D               	movf	??_CANreceiveMessage+1,w,c
 20946  012C1E  22DE               	addwfc	postinc2,f,c
 20947  012C20  503E               	movf	??_CANreceiveMessage+2,w,c
 20948  012C22  22DE               	addwfc	postinc2,f,c
 20949  012C24  503F               	movf	??_CANreceiveMessage+3,w,c
 20950  012C26  22DE               	addwfc	postinc2,f,c
 20951                           
 20952                           ; BSR set to: 15
 20953                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 20954  012C28  010F               	movlb	15	; () banked
 20955  012C2A  A152               	btfss	82,0,b	;volatile
 20956  012C2C  D00D               	goto	i2l6310
 20957                           
 20958                           ; BSR set to: 15
 20959                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 20960  012C2E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20961  012C32  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20962  012C36  0E00               	movlw	0
 20963  012C38  12DE               	iorwf	postinc2,f,c
 20964  012C3A  0E00               	movlw	0
 20965  012C3C  12DE               	iorwf	postinc2,f,c
 20966  012C3E  0E01               	movlw	1
 20967  012C40  12DE               	iorwf	postinc2,f,c
 20968  012C42  0E00               	movlw	0
 20969  012C44  12DE               	iorwf	postinc2,f,c
 20970  012C46  D000               	goto	i2l6310
 20971  012C48                     i2l6310:
 20972                           
 20973                           ; BSR set to: 15
 20974                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 20975  012C48  010F               	movlb	15	; () banked
 20976  012C4A  A352               	btfss	82,1,b	;volatile
 20977  012C4C  D00D               	goto	i2l6314
 20978                           
 20979                           ; BSR set to: 15
 20980                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 20981  012C4E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20982  012C52  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20983  012C56  0E00               	movlw	0
 20984  012C58  12DE               	iorwf	postinc2,f,c
 20985  012C5A  0E00               	movlw	0
 20986  012C5C  12DE               	iorwf	postinc2,f,c
 20987  012C5E  0E02               	movlw	2
 20988  012C60  12DE               	iorwf	postinc2,f,c
 20989  012C62  0E00               	movlw	0
 20990  012C64  12DE               	iorwf	postinc2,f,c
 20991  012C66  D000               	goto	i2l6314
 20992  012C68                     i2l6314:
 20993                           
 20994                           ; BSR set to: 15
 20995                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 20996  012C68  010F               	movlb	15	; () banked
 20997  012C6A  AB52               	btfss	82,5,b	;volatile
 20998  012C6C  D00D               	goto	i2l6318
 20999                           
 21000                           ; BSR set to: 15
 21001                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 21002  012C6E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21003  012C72  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21004  012C76  0E00               	movlw	0
 21005  012C78  12DE               	iorwf	postinc2,f,c
 21006  012C7A  0E00               	movlw	0
 21007  012C7C  12DE               	iorwf	postinc2,f,c
 21008  012C7E  0E04               	movlw	4
 21009  012C80  12DE               	iorwf	postinc2,f,c
 21010  012C82  0E00               	movlw	0
 21011  012C84  12DE               	iorwf	postinc2,f,c
 21012  012C86  D000               	goto	i2l6318
 21013  012C88                     i2l6318:
 21014                           
 21015                           ; BSR set to: 15
 21016                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 21017  012C88  010F               	movlb	15	; () banked
 21018  012C8A  AD52               	btfss	82,6,b	;volatile
 21019  012C8C  D00D               	goto	i2l6322
 21020                           
 21021                           ; BSR set to: 15
 21022                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 21023  012C8E  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21024  012C92  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21025  012C96  0E00               	movlw	0
 21026  012C98  12DE               	iorwf	postinc2,f,c
 21027  012C9A  0E00               	movlw	0
 21028  012C9C  12DE               	iorwf	postinc2,f,c
 21029  012C9E  0E08               	movlw	8
 21030  012CA0  12DE               	iorwf	postinc2,f,c
 21031  012CA2  0E00               	movlw	0
 21032  012CA4  12DE               	iorwf	postinc2,f,c
 21033  012CA6  D000               	goto	i2l6322
 21034  012CA8                     i2l6322:
 21035                           
 21036                           ; BSR set to: 15
 21037                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 21038  012CA8  010F               	movlb	15	; () banked
 21039  012CAA  AF52               	btfss	82,7,b	;volatile
 21040  012CAC  D00D               	goto	i2l6326
 21041                           
 21042                           ; BSR set to: 15
 21043                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 21044  012CAE  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21045  012CB2  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21046  012CB6  0E00               	movlw	0
 21047  012CB8  12DE               	iorwf	postinc2,f,c
 21048  012CBA  0E00               	movlw	0
 21049  012CBC  12DE               	iorwf	postinc2,f,c
 21050  012CBE  0E10               	movlw	16
 21051  012CC0  12DE               	iorwf	postinc2,f,c
 21052  012CC2  0E00               	movlw	0
 21053  012CC4  12DE               	iorwf	postinc2,f,c
 21054  012CC6  D000               	goto	i2l6326
 21055  012CC8                     i2l6326:
 21056                           
 21057                           ; BSR set to: 15
 21058                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 21059  012CC8  CF51 F03C          	movff	3921,??_CANreceiveMessage	;volatile
 21060  012CCC  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21061  012CCE  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21062  012CD0  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21063  012CD2  0E15               	movlw	21
 21064  012CD4                     i2u752_45:
 21065  012CD4  90D8               	bcf	status,0,c
 21066  012CD6  363C               	rlcf	??_CANreceiveMessage,f,c
 21067  012CD8  363D               	rlcf	??_CANreceiveMessage+1,f,c
 21068  012CDA  363E               	rlcf	??_CANreceiveMessage+2,f,c
 21069  012CDC  363F               	rlcf	??_CANreceiveMessage+3,f,c
 21070  012CDE  2EE8               	decfsz	wreg,f,c
 21071  012CE0  D7F9               	goto	i2u752_45
 21072  012CE2  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21073  012CE6  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21074  012CEA  503C               	movf	??_CANreceiveMessage,w,c
 21075  012CEC  12DE               	iorwf	postinc2,f,c
 21076  012CEE  503D               	movf	??_CANreceiveMessage+1,w,c
 21077  012CF0  12DE               	iorwf	postinc2,f,c
 21078  012CF2  503E               	movf	??_CANreceiveMessage+2,w,c
 21079  012CF4  12DE               	iorwf	postinc2,f,c
 21080  012CF6  503F               	movf	??_CANreceiveMessage+3,w,c
 21081  012CF8  12DE               	iorwf	postinc2,f,c
 21082  012CFA  D000               	goto	i2l6328
 21083  012CFC                     i2l6328:
 21084                           
 21085                           ; BSR set to: 15
 21086                           ;inc\CANlib.h: 581: }
 21087                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 21088  012CFC  010F               	movlb	15	; () banked
 21089  012CFE  9F50               	bcf	80,7,b	;volatile
 21090                           
 21091                           ; BSR set to: 15
 21092                           ;inc\CANlib.h: 584: return (error);
 21093                           ;	Return value of _CANreceiveMessage is never used
 21094  012D00  0012               	return	
 21095  012D02                     i2l430:
 21096                           
 21097                           ; BSR set to: 15
 21098                           ;inc\CANlib.h: 585: }
 21099                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 21100  012D02  AE60               	btfss	3936,7,c	;volatile
 21101  012D04  0012               	return	
 21102                           
 21103                           ; BSR set to: 15
 21104                           ;inc\CANlib.h: 588: {
 21105                           ;inc\CANlib.h: 589: msg->identifier = 0;
 21106  012D06  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21107  012D0A  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21108  012D0E  6ADE               	clrf	postinc2,c
 21109  012D10  6ADE               	clrf	postinc2,c
 21110  012D12  6ADE               	clrf	postinc2,c
 21111  012D14  6ADD               	clrf	postdec2,c
 21112                           
 21113                           ; BSR set to: 15
 21114                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 21115  012D16  EE20 F004          	lfsr	2,4
 21116  012D1A  503A               	movf	CANreceiveMessage@msg,w,c
 21117  012D1C  26D9               	addwf	fsr2l,f,c
 21118  012D1E  503B               	movf	CANreceiveMessage@msg+1,w,c
 21119  012D20  22DA               	addwfc	fsr2h,f,c
 21120  012D22  CF66 FFDF          	movff	3942,indf2	;volatile
 21121                           
 21122                           ; BSR set to: 15
 21123                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 21124  012D26  EE20 F005          	lfsr	2,5
 21125  012D2A  503A               	movf	CANreceiveMessage@msg,w,c
 21126  012D2C  26D9               	addwf	fsr2l,f,c
 21127  012D2E  503B               	movf	CANreceiveMessage@msg+1,w,c
 21128  012D30  22DA               	addwfc	fsr2h,f,c
 21129  012D32  CF67 FFDF          	movff	3943,indf2	;volatile
 21130                           
 21131                           ; BSR set to: 15
 21132                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 21133  012D36  EE20 F006          	lfsr	2,6
 21134  012D3A  503A               	movf	CANreceiveMessage@msg,w,c
 21135  012D3C  26D9               	addwf	fsr2l,f,c
 21136  012D3E  503B               	movf	CANreceiveMessage@msg+1,w,c
 21137  012D40  22DA               	addwfc	fsr2h,f,c
 21138  012D42  CF68 FFDF          	movff	3944,indf2	;volatile
 21139                           
 21140                           ; BSR set to: 15
 21141                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 21142  012D46  EE20 F007          	lfsr	2,7
 21143  012D4A  503A               	movf	CANreceiveMessage@msg,w,c
 21144  012D4C  26D9               	addwf	fsr2l,f,c
 21145  012D4E  503B               	movf	CANreceiveMessage@msg+1,w,c
 21146  012D50  22DA               	addwfc	fsr2h,f,c
 21147  012D52  CF69 FFDF          	movff	3945,indf2	;volatile
 21148                           
 21149                           ; BSR set to: 15
 21150                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 21151  012D56  EE20 F008          	lfsr	2,8
 21152  012D5A  503A               	movf	CANreceiveMessage@msg,w,c
 21153  012D5C  26D9               	addwf	fsr2l,f,c
 21154  012D5E  503B               	movf	CANreceiveMessage@msg+1,w,c
 21155  012D60  22DA               	addwfc	fsr2h,f,c
 21156  012D62  CF6A FFDF          	movff	3946,indf2	;volatile
 21157                           
 21158                           ; BSR set to: 15
 21159                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 21160  012D66  EE20 F009          	lfsr	2,9
 21161  012D6A  503A               	movf	CANreceiveMessage@msg,w,c
 21162  012D6C  26D9               	addwf	fsr2l,f,c
 21163  012D6E  503B               	movf	CANreceiveMessage@msg+1,w,c
 21164  012D70  22DA               	addwfc	fsr2h,f,c
 21165  012D72  CF6B FFDF          	movff	3947,indf2	;volatile
 21166                           
 21167                           ; BSR set to: 15
 21168                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 21169  012D76  EE20 F00A          	lfsr	2,10
 21170  012D7A  503A               	movf	CANreceiveMessage@msg,w,c
 21171  012D7C  26D9               	addwf	fsr2l,f,c
 21172  012D7E  503B               	movf	CANreceiveMessage@msg+1,w,c
 21173  012D80  22DA               	addwfc	fsr2h,f,c
 21174  012D82  CF6C FFDF          	movff	3948,indf2	;volatile
 21175                           
 21176                           ; BSR set to: 15
 21177                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 21178  012D86  EE20 F00B          	lfsr	2,11
 21179  012D8A  503A               	movf	CANreceiveMessage@msg,w,c
 21180  012D8C  26D9               	addwf	fsr2l,f,c
 21181  012D8E  503B               	movf	CANreceiveMessage@msg+1,w,c
 21182  012D90  22DA               	addwfc	fsr2h,f,c
 21183  012D92  CF6D FFDF          	movff	3949,indf2	;volatile
 21184                           
 21185                           ; BSR set to: 15
 21186                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 21187  012D96  EE20 F00E          	lfsr	2,14
 21188  012D9A  503A               	movf	CANreceiveMessage@msg,w,c
 21189  012D9C  26D9               	addwf	fsr2l,f,c
 21190  012D9E  503B               	movf	CANreceiveMessage@msg+1,w,c
 21191  012DA0  22DA               	addwfc	fsr2h,f,c
 21192  012DA2  AC65               	btfss	3941,6,c	;volatile
 21193  012DA4  D002               	goto	i2u754_40
 21194  012DA6  0E01               	movlw	1
 21195  012DA8  D001               	goto	i2u754_46
 21196  012DAA                     i2u754_40:
 21197  012DAA  0E00               	movlw	0
 21198  012DAC                     i2u754_46:
 21199  012DAC  6EDF               	movwf	indf2,c
 21200                           
 21201                           ; BSR set to: 15
 21202                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 21203  012DAE  EE20 F00D          	lfsr	2,13
 21204  012DB2  503A               	movf	CANreceiveMessage@msg,w,c
 21205  012DB4  26D9               	addwf	fsr2l,f,c
 21206  012DB6  503B               	movf	CANreceiveMessage@msg+1,w,c
 21207  012DB8  22DA               	addwfc	fsr2h,f,c
 21208  012DBA  5065               	movf	3941,w,c	;volatile
 21209  012DBC  0B0F               	andlw	15
 21210  012DBE  6EDF               	movwf	indf2,c
 21211                           
 21212                           ; BSR set to: 15
 21213                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 21214  012DC0  EE20 F00C          	lfsr	2,12
 21215  012DC4  503A               	movf	CANreceiveMessage@msg,w,c
 21216  012DC6  26D9               	addwf	fsr2l,f,c
 21217  012DC8  503B               	movf	CANreceiveMessage@msg+1,w,c
 21218  012DCA  22DA               	addwfc	fsr2h,f,c
 21219  012DCC  A662               	btfss	3938,3,c	;volatile
 21220  012DCE  D002               	goto	i2u755_40
 21221  012DD0  0E01               	movlw	1
 21222  012DD2  D001               	goto	i2u755_46
 21223  012DD4                     i2u755_40:
 21224  012DD4  0E00               	movlw	0
 21225  012DD6                     i2u755_46:
 21226  012DD6  6EDF               	movwf	indf2,c
 21227                           
 21228                           ; BSR set to: 15
 21229                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 21230  012DD8  B662               	btfsc	3938,3,c	;volatile
 21231  012DDA  D043               	goto	i2l6364
 21232                           
 21233                           ; BSR set to: 15
 21234                           ;inc\CANlib.h: 606: {
 21235                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 21236  012DDC  CF61 F03C          	movff	3937,??_CANreceiveMessage	;volatile
 21237  012DE0  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21238  012DE2  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21239  012DE4  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21240  012DE6  0E03               	movlw	3
 21241  012DE8                     i2u757_45:
 21242  012DE8  90D8               	bcf	status,0,c
 21243  012DEA  363C               	rlcf	??_CANreceiveMessage,f,c
 21244  012DEC  363D               	rlcf	??_CANreceiveMessage+1,f,c
 21245  012DEE  363E               	rlcf	??_CANreceiveMessage+2,f,c
 21246  012DF0  363F               	rlcf	??_CANreceiveMessage+3,f,c
 21247  012DF2  2EE8               	decfsz	wreg,f,c
 21248  012DF4  D7F9               	goto	i2u757_45
 21249  012DF6  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21250  012DFA  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21251  012DFE  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 21252  012E02  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21253  012E06  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21254  012E0A  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21255                           
 21256                           ; BSR set to: 15
 21257                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 21258  012E0E  3862               	swapf	3938,w,c	;volatile
 21259  012E10  42E8               	rrncf	wreg,f,c
 21260  012E12  0B07               	andlw	7
 21261  012E14  0B07               	andlw	7
 21262  012E16  6E45               	movwf	CANreceiveMessage@tamp,c
 21263                           
 21264                           ; BSR set to: 15
 21265                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 21266  012E18  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21267  012E1C  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21268  012E20  CFDE F03C          	movff	postinc2,??_CANreceiveMessage
 21269  012E24  CFDE F03D          	movff	postinc2,??_CANreceiveMessage+1
 21270  012E28  CFDE F03E          	movff	postinc2,??_CANreceiveMessage+2
 21271  012E2C  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+3
 21272  012E30  5045               	movf	CANreceiveMessage@tamp,w,c
 21273  012E32  243C               	addwf	??_CANreceiveMessage,w,c
 21274  012E34  6E40               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 21275  012E36  0E00               	movlw	0
 21276  012E38  203D               	addwfc	??_CANreceiveMessage+1,w,c
 21277  012E3A  6E41               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 21278  012E3C  0E00               	movlw	0
 21279  012E3E  203E               	addwfc	??_CANreceiveMessage+2,w,c
 21280  012E40  6E42               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 21281  012E42  0E00               	movlw	0
 21282  012E44  203F               	addwfc	??_CANreceiveMessage+3,w,c
 21283  012E46  6E43               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 21284  012E48  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21285  012E4C  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21286  012E50  C040  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 21287  012E54  C041  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 21288  012E58  C042  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 21289  012E5C  C043  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 21290                           
 21291                           ;inc\CANlib.h: 610: }
 21292  012E60  D08E               	goto	i2l6390
 21293  012E62                     i2l6364:
 21294                           
 21295                           ; BSR set to: 15
 21296                           ;inc\CANlib.h: 611: else
 21297                           ;inc\CANlib.h: 612: {
 21298                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 21299  012E62  CF64 F03C          	movff	3940,??_CANreceiveMessage	;volatile
 21300  012E66  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21301  012E68  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21302  012E6A  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21303  012E6C  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21304  012E70  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21305  012E74  C03C  FFDE         	movff	??_CANreceiveMessage,postinc2
 21306  012E78  C03D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 21307  012E7C  C03E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 21308  012E80  C03F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 21309                           
 21310                           ; BSR set to: 15
 21311                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 21312  012E84  CF63 F03C          	movff	3939,??_CANreceiveMessage	;volatile
 21313  012E88  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21314  012E8A  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21315  012E8C  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21316  012E8E  C03E  F03F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 21317  012E92  C03D  F03E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 21318  012E96  C03C  F03D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 21319  012E9A  6A3C               	clrf	??_CANreceiveMessage,c
 21320  012E9C  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21321  012EA0  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21322  012EA4  503C               	movf	??_CANreceiveMessage,w,c
 21323  012EA6  26DE               	addwf	postinc2,f,c
 21324  012EA8  503D               	movf	??_CANreceiveMessage+1,w,c
 21325  012EAA  22DE               	addwfc	postinc2,f,c
 21326  012EAC  503E               	movf	??_CANreceiveMessage+2,w,c
 21327  012EAE  22DE               	addwfc	postinc2,f,c
 21328  012EB0  503F               	movf	??_CANreceiveMessage+3,w,c
 21329  012EB2  22DE               	addwfc	postinc2,f,c
 21330                           
 21331                           ; BSR set to: 15
 21332                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 21333  012EB4  A062               	btfss	3938,0,c	;volatile
 21334  012EB6  D00D               	goto	i2l6372
 21335                           
 21336                           ; BSR set to: 15
 21337                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 21338  012EB8  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21339  012EBC  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21340  012EC0  0E00               	movlw	0
 21341  012EC2  12DE               	iorwf	postinc2,f,c
 21342  012EC4  0E00               	movlw	0
 21343  012EC6  12DE               	iorwf	postinc2,f,c
 21344  012EC8  0E01               	movlw	1
 21345  012ECA  12DE               	iorwf	postinc2,f,c
 21346  012ECC  0E00               	movlw	0
 21347  012ECE  12DE               	iorwf	postinc2,f,c
 21348  012ED0  D000               	goto	i2l6372
 21349  012ED2                     i2l6372:
 21350                           
 21351                           ; BSR set to: 15
 21352                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 21353  012ED2  A262               	btfss	3938,1,c	;volatile
 21354  012ED4  D00D               	goto	i2l6376
 21355                           
 21356                           ; BSR set to: 15
 21357                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 21358  012ED6  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21359  012EDA  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21360  012EDE  0E00               	movlw	0
 21361  012EE0  12DE               	iorwf	postinc2,f,c
 21362  012EE2  0E00               	movlw	0
 21363  012EE4  12DE               	iorwf	postinc2,f,c
 21364  012EE6  0E02               	movlw	2
 21365  012EE8  12DE               	iorwf	postinc2,f,c
 21366  012EEA  0E00               	movlw	0
 21367  012EEC  12DE               	iorwf	postinc2,f,c
 21368  012EEE  D000               	goto	i2l6376
 21369  012EF0                     i2l6376:
 21370                           
 21371                           ; BSR set to: 15
 21372                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 21373  012EF0  AA62               	btfss	3938,5,c	;volatile
 21374  012EF2  D00D               	goto	i2l6380
 21375                           
 21376                           ; BSR set to: 15
 21377                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 21378  012EF4  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21379  012EF8  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21380  012EFC  0E00               	movlw	0
 21381  012EFE  12DE               	iorwf	postinc2,f,c
 21382  012F00  0E00               	movlw	0
 21383  012F02  12DE               	iorwf	postinc2,f,c
 21384  012F04  0E04               	movlw	4
 21385  012F06  12DE               	iorwf	postinc2,f,c
 21386  012F08  0E00               	movlw	0
 21387  012F0A  12DE               	iorwf	postinc2,f,c
 21388  012F0C  D000               	goto	i2l6380
 21389  012F0E                     i2l6380:
 21390                           
 21391                           ; BSR set to: 15
 21392                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 21393  012F0E  AC62               	btfss	3938,6,c	;volatile
 21394  012F10  D00D               	goto	i2l6384
 21395                           
 21396                           ; BSR set to: 15
 21397                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 21398  012F12  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21399  012F16  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21400  012F1A  0E00               	movlw	0
 21401  012F1C  12DE               	iorwf	postinc2,f,c
 21402  012F1E  0E00               	movlw	0
 21403  012F20  12DE               	iorwf	postinc2,f,c
 21404  012F22  0E08               	movlw	8
 21405  012F24  12DE               	iorwf	postinc2,f,c
 21406  012F26  0E00               	movlw	0
 21407  012F28  12DE               	iorwf	postinc2,f,c
 21408  012F2A  D000               	goto	i2l6384
 21409  012F2C                     i2l6384:
 21410                           
 21411                           ; BSR set to: 15
 21412                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 21413  012F2C  AE62               	btfss	3938,7,c	;volatile
 21414  012F2E  D00D               	goto	i2l6388
 21415                           
 21416                           ; BSR set to: 15
 21417                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 21418  012F30  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21419  012F34  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21420  012F38  0E00               	movlw	0
 21421  012F3A  12DE               	iorwf	postinc2,f,c
 21422  012F3C  0E00               	movlw	0
 21423  012F3E  12DE               	iorwf	postinc2,f,c
 21424  012F40  0E10               	movlw	16
 21425  012F42  12DE               	iorwf	postinc2,f,c
 21426  012F44  0E00               	movlw	0
 21427  012F46  12DE               	iorwf	postinc2,f,c
 21428  012F48  D000               	goto	i2l6388
 21429  012F4A                     i2l6388:
 21430                           
 21431                           ; BSR set to: 15
 21432                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 21433  012F4A  CF61 F03C          	movff	3937,??_CANreceiveMessage	;volatile
 21434  012F4E  6A3D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21435  012F50  6A3E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21436  012F52  6A3F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21437  012F54  0E15               	movlw	21
 21438  012F56                     i2u763_45:
 21439  012F56  90D8               	bcf	status,0,c
 21440  012F58  363C               	rlcf	??_CANreceiveMessage,f,c
 21441  012F5A  363D               	rlcf	??_CANreceiveMessage+1,f,c
 21442  012F5C  363E               	rlcf	??_CANreceiveMessage+2,f,c
 21443  012F5E  363F               	rlcf	??_CANreceiveMessage+3,f,c
 21444  012F60  2EE8               	decfsz	wreg,f,c
 21445  012F62  D7F9               	goto	i2u763_45
 21446  012F64  C03A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21447  012F68  C03B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21448  012F6C  503C               	movf	??_CANreceiveMessage,w,c
 21449  012F6E  12DE               	iorwf	postinc2,f,c
 21450  012F70  503D               	movf	??_CANreceiveMessage+1,w,c
 21451  012F72  12DE               	iorwf	postinc2,f,c
 21452  012F74  503E               	movf	??_CANreceiveMessage+2,w,c
 21453  012F76  12DE               	iorwf	postinc2,f,c
 21454  012F78  503F               	movf	??_CANreceiveMessage+3,w,c
 21455  012F7A  12DE               	iorwf	postinc2,f,c
 21456  012F7C  D000               	goto	i2l6390
 21457  012F7E                     i2l6390:
 21458                           
 21459                           ; BSR set to: 15
 21460                           ;inc\CANlib.h: 629: }
 21461                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 21462  012F7E  9E60               	bcf	3936,7,c	;volatile
 21463                           
 21464                           ; BSR set to: 15
 21465                           ;inc\CANlib.h: 632: return (error);
 21466                           ;	Return value of _CANreceiveMessage is never used
 21467  012F80  0012               	return	
 21468                           
 21469                           ; BSR set to: 15
 21470                           
 21471                           ; BSR set to: 15
 21472  012F82  0012               	return		;funcret
 21473  012F84                     __end_of_CANreceiveMessage:
 21474                           	opt stack 0
 21475                           pclatu	equ	0xFFB
 21476                           pclath	equ	0xFFA
 21477                           tblptru	equ	0xFF8
 21478                           tblptrh	equ	0xFF7
 21479                           tblptrl	equ	0xFF6
 21480                           tablat	equ	0xFF5
 21481                           prodh	equ	0xFF4
 21482                           prodl	equ	0xFF3
 21483                           intcon	equ	0xFF2
 21484                           postinc0	equ	0xFEE
 21485                           fsr0h	equ	0xFEA
 21486                           fsr0l	equ	0xFE9
 21487                           wreg	equ	0xFE8
 21488                           indf1	equ	0xFE7
 21489                           plusw1	equ	0xFE3
 21490                           fsr1h	equ	0xFE2
 21491                           fsr1l	equ	0xFE1
 21492                           bsr	equ	0xFE0
 21493                           indf2	equ	0xFDF
 21494                           postinc2	equ	0xFDE
 21495                           postdec2	equ	0xFDD
 21496                           plusw2	equ	0xFDB
 21497                           fsr2h	equ	0xFDA
 21498                           fsr2l	equ	0xFD9
 21499                           status	equ	0xFD8
 21500                           
 21501 ;; *************** function _CANisRxReady *****************
 21502 ;; Defined at:
 21503 ;;		line 1163 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 21504 ;; Parameters:    Size  Location     Type
 21505 ;;		None
 21506 ;; Auto vars:     Size  Location     Type
 21507 ;;		None
 21508 ;; Return value:  Size  Location     Type
 21509 ;;                  1    wreg      unsigned char 
 21510 ;; Registers used:
 21511 ;;		wreg, status,2
 21512 ;; Tracked objects:
 21513 ;;		On entry : 0/0
 21514 ;;		On exit  : 0/0
 21515 ;;		Unchanged: 0/0
 21516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21520 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21521 ;;Total ram usage:        1 bytes
 21522 ;; Hardware stack levels used:    1
 21523 ;; This function calls:
 21524 ;;		Nothing
 21525 ;; This function is called by:
 21526 ;;		_ISR_alta
 21527 ;; This function uses a non-reentrant model
 21528 ;;
 21529                           
 21530                           	psect	text65
 21531  015F4A                     __ptext65:
 21532                           	opt stack 0
 21533  015F4A                     _CANisRxReady:
 21534                           	opt stack 20
 21535                           
 21536                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 21537                           
 21538                           ; BSR set to: 15
 21539                           ;incstack = 0
 21540  015F4A  0E01               	movlw	1
 21541  015F4C  6E3A               	movwf	_CANisRxReady$3253,c
 21542  015F4E  BE60               	btfsc	3936,7,c	;volatile
 21543  015F50  D005               	goto	i2l581
 21544  015F52  010F               	movlb	15	; () banked
 21545  015F54  BF50               	btfsc	80,7,b	;volatile
 21546  015F56  D002               	goto	i2l581
 21547                           
 21548                           ; BSR set to: 15
 21549  015F58  0E00               	movlw	0
 21550  015F5A  6E3A               	movwf	_CANisRxReady$3253,c
 21551  015F5C                     i2l581:
 21552  015F5C  503A               	movf	_CANisRxReady$3253,w,c
 21553  015F5E  0012               	return	
 21554  015F60  0012               	return		;funcret
 21555  015F62                     __end_of_CANisRxReady:
 21556                           	opt stack 0
 21557                           pclatu	equ	0xFFB
 21558                           pclath	equ	0xFFA
 21559                           tblptru	equ	0xFF8
 21560                           tblptrh	equ	0xFF7
 21561                           tblptrl	equ	0xFF6
 21562                           tablat	equ	0xFF5
 21563                           prodh	equ	0xFF4
 21564                           prodl	equ	0xFF3
 21565                           intcon	equ	0xFF2
 21566                           postinc0	equ	0xFEE
 21567                           fsr0h	equ	0xFEA
 21568                           fsr0l	equ	0xFE9
 21569                           wreg	equ	0xFE8
 21570                           indf1	equ	0xFE7
 21571                           plusw1	equ	0xFE3
 21572                           fsr1h	equ	0xFE2
 21573                           fsr1l	equ	0xFE1
 21574                           bsr	equ	0xFE0
 21575                           indf2	equ	0xFDF
 21576                           postinc2	equ	0xFDE
 21577                           postdec2	equ	0xFDD
 21578                           plusw2	equ	0xFDB
 21579                           fsr2h	equ	0xFDA
 21580                           fsr2l	equ	0xFD9
 21581                           status	equ	0xFD8
 21582                           pclatu	equ	0xFFB
 21583                           pclath	equ	0xFFA
 21584                           tblptru	equ	0xFF8
 21585                           tblptrh	equ	0xFF7
 21586                           tblptrl	equ	0xFF6
 21587                           tablat	equ	0xFF5
 21588                           prodh	equ	0xFF4
 21589                           prodl	equ	0xFF3
 21590                           intcon	equ	0xFF2
 21591                           postinc0	equ	0xFEE
 21592                           fsr0h	equ	0xFEA
 21593                           fsr0l	equ	0xFE9
 21594                           wreg	equ	0xFE8
 21595                           indf1	equ	0xFE7
 21596                           plusw1	equ	0xFE3
 21597                           fsr1h	equ	0xFE2
 21598                           fsr1l	equ	0xFE1
 21599                           bsr	equ	0xFE0
 21600                           indf2	equ	0xFDF
 21601                           postinc2	equ	0xFDE
 21602                           postdec2	equ	0xFDD
 21603                           plusw2	equ	0xFDB
 21604                           fsr2h	equ	0xFDA
 21605                           fsr2l	equ	0xFD9
 21606                           status	equ	0xFD8
 21607                           
 21608                           	psect	rparam
 21609  0000                     pclatu	equ	0xFFB
 21610                           pclath	equ	0xFFA
 21611                           tblptru	equ	0xFF8
 21612                           tblptrh	equ	0xFF7
 21613                           tblptrl	equ	0xFF6
 21614                           tablat	equ	0xFF5
 21615                           prodh	equ	0xFF4
 21616                           prodl	equ	0xFF3
 21617                           intcon	equ	0xFF2
 21618                           postinc0	equ	0xFEE
 21619                           fsr0h	equ	0xFEA
 21620                           fsr0l	equ	0xFE9
 21621                           wreg	equ	0xFE8
 21622                           indf1	equ	0xFE7
 21623                           plusw1	equ	0xFE3
 21624                           fsr1h	equ	0xFE2
 21625                           fsr1l	equ	0xFE1
 21626                           bsr	equ	0xFE0
 21627                           indf2	equ	0xFDF
 21628                           postinc2	equ	0xFDE
 21629                           postdec2	equ	0xFDD
 21630                           plusw2	equ	0xFDB
 21631                           fsr2h	equ	0xFDA
 21632                           fsr2l	equ	0xFD9
 21633                           status	equ	0xFD8


Data Sizes:
    Strings     527
    Constant    144
    Data        1
    BSS         144
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      76
    BANK0           160     91     142
    BANK1           256     35      89
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_38(CODE[21]), STR_37(CODE[21]), STR_36(CODE[21]), STR_35(CODE[21]), 
		 -> STR_34(CODE[21]), STR_33(CODE[21]), STR_32(CODE[21]), STR_31(CODE[21]), 
		 -> STR_30(CODE[21]), STR_29(CODE[21]), STR_28(CODE[21]), STR_27(CODE[21]), 
		 -> STR_26(CODE[21]), STR_25(CODE[21]), STR_24(CODE[21]), STR_23(CODE[21]), 
		 -> STR_22(CODE[21]), STR_21(CODE[21]), STR_20(CODE[21]), STR_19(CODE[21]), 
		 -> STR_18(CODE[21]), STR_17(CODE[8]), STR_16(CODE[8]), STR_15(CODE[21]), 
		 -> STR_14(CODE[5]), STR_13(CODE[5]), STR_12(CODE[5]), STR_11(CODE[21]), 
		 -> STR_10(CODE[7]), STR_9(CODE[14]), STR_8(CODE[17]), STR_7(CODE[12]), 
		 -> STR_6(CODE[21]), STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK1[8]), park_assist_state(BANK1[8]), data_steering(BANK1[8]), data_brake(COMRAM[8]), 
		 -> data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    ___lbtofl->___flpack
    ___awtofl->___flpack
    _LCD_Parking->_LCD_write_message
    _LCD_Park->_LCD_write_message
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awtofl
    ___flmul->___lbtofl
    ___awdiv->___awmod
    ___lltofl->___flpack
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___lwtofl->___flpack
    ___fldiv->___lwtofl
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_Gap->_LCD_write_message
    _LCD_Error->_LCD_write_message
    _LCD_End->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Tx->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  573410
                                             27 BANK1      8     8      0
                             _CAN_Tx
                       _CANisTxReady
                     _CANsendMessage
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                            _LCD_End
                          _LCD_Error
                            _LCD_Gap
                        _LCD_Handler
                           _LCD_Park
                        _LCD_Parking
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___awdiv
                           ___awtofl
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___lbtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   51321
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             32 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             18 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             18 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lbtofl                                             5     1      4    2675
                                             28 BANK0      5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) ___awtofl                                             9     5      4    2854
                                             28 BANK0      5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Parking                                          0     0      0   57601
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Park                                             0     0      0   57601
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  156287
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___lwtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   48534
                                             83 BANK0      8     0      8
                                              0 BANK1     27    27      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                           ___lltofl
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4   10519
                                             48 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             18 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4   10240
                                             48 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             15     7      8    5710
                                             33 BANK0     15     7      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtofl (ARG)
                           ___flpack
                           ___lbtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             18 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    2293
                                             24 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             18 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             18 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___lltofl                                             4     0      4    2752
                                             28 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             18 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             18 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     722
                                             73 BANK0     10     6      4
                           ___awtofl (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___lbtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4809
                                             73 BANK0      8     0      8
                            ___fladd
                           ___lltofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             12     4      8    4445
                                             61 BANK0     12     4      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___flpack
                           ___lbtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             48 BANK0      4     0      4
                            ___flmul (ARG)
                           ___lbtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     660
                                             18 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lwtofl                                             4     0      4    2752
                                             28 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             15     7      8    3329
                                             32 BANK0     15     7      8
                           ___flpack
                           ___lwtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flpack                                            10     4      6    2644
                                             18 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   12052
                                             42 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             34 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             25 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             18 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             18 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9519
                                             35 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18137
                                             33 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    8956
                                             30 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _LCD_Gap                                              0     0      0   57601
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Error                                            0     0      0   57601
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_End                                              0     0      0   57601
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2   12214
                                             35 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    9300
                                             30 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   27796
                                             32 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8919
                                             30 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8780
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8811
                                             30 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8780
                                             26 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0    1264
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1264
                                             24 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             18 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     1     1      0      68
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_Tx                                               0     0      0    4363
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4339
                                             18 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_alta                                           18    18      0    3428
                                              0 BANK0     18    18      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (11) i2_CANsendMessage                                   16     8      8    2243
                                             17 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (11) i2_CANisTxReady                                      1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CANreceiveMessage                                  12    10      2    1137
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (11) _CANisRxReady                                        1     1      0      24
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Tx
     _CANisTxReady
     _CANsendMessage
   _CANisTxReady
   _CANsendMessage
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_End
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Error
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Gap
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___flpack
       ___lwtofl (ARG)
         ___flpack
     ___lwtofl
       ___flpack
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___lbtofl (ARG)
             ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___lbtofl (ARG)
           ___flpack
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
             ___lbtofl (ARG)
               ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
         ___lltofl (ARG)
           ___flpack
       ___fltol
         ___awtofl (ARG)
           ___flpack
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
             ___lbtofl (ARG)
               ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbtofl (ARG)
                 ___flpack
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
           ___lbtofl (ARG)
             ___flpack
         ___lbtofl (ARG)
           ___flpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbtofl (ARG)
               ___flpack
       ___lldiv
       ___llmod
       ___lltofl
         ___flpack
       ___wmul
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
   _LCD_Park
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_Parking
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___awdiv
     ___awmod (ARG)
   ___awtofl
     ___flpack
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtofl (ARG)
         ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___lbtofl (ARG)
         ___flpack
     ___flpack (ARG)
     ___lbtofl (ARG)
       ___flpack
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtofl (ARG)
       ___flpack
     ___flpack (ARG)
     ___lbtofl (ARG)
       ___flpack
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtofl (ARG)
         ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
     ___lbtofl (ARG)
       ___flpack
   ___fltol
     ___awtofl (ARG)
       ___flpack
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
         ___lbtofl (ARG)
           ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbtofl (ARG)
             ___flpack
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtofl (ARG)
         ___flpack
       ___flpack (ARG)
       ___lbtofl (ARG)
         ___flpack
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
       ___lbtofl (ARG)
         ___flpack
     ___lbtofl (ARG)
       ___flpack
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbtofl (ARG)
           ___flpack
   ___lbtofl
     ___flpack
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     23      59       7       34.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5B      8E       5       88.8%
BITCOMRAM           5F      0       3       0        3.2%
COMRAM              5F     21      4C       1       80.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     133      20        0.0%
DATA                 0      0     133       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Jun 07 19:35:04 2016

                                _x 0261                                  _y 0262  
                                _z 0263          __size_of_delay_set_quartz 000A  
                     ___fldiv@cntr 008C               __end_of_CANSetFilter 0B2A  
                     ?_LCD_Handler 0029                       ___fldiv@sign 008E  
                     ___awdiv@sign 007D                                 _id 0001  
                               bsr 000FE0                ___wmul@multiplicand 0074  
                      __CFG_BORV$3 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                       __CFG_CP2$OFF 000000  
                     ?_LCD_Parking 0029                       __CFG_CP3$OFF 000000  
                      __CFG_OSC$HS 000000                       __CFG_CP4$OFF 000000  
                     __CFG_CP5$OFF 000000                       ___flpack@arg 0072  
                      _row_refresh 025A                       ___flpack@exp 0076  
                              l400 1EB6                                l401 1FB0  
                              l410 2080                                l402 1F3E  
                              l403 1F48                                l404 1F52  
                              l500 064A                                l413 213C  
                              l405 1F5C                                l501 064E  
                              l422 22FA                                l414 2140  
                              l510 075E                                l502 065A  
                              l423 22FE                                l415 223A  
                              l511 076A                                l424 230A  
                              l416 21C8                                l408 2070  
                              l520 087A                                l512 076E  
                              l417 21D2                                l409 2074  
                              l521 087E                                l513 077A  
                              l505 073A                                l418 21DC  
                              l530 098E                                l522 088A  
                              l506 073E                                l419 21E6  
                              l531 099A                                l523 088E  
                              l507 074A                                l540 0AAA  
                              l532 099E                                l524 089A  
                              l516 085A                                l508 074E  
                              l460 36EA                                l452 36AA  
                              l541 0AAE                                l533 09AA  
                              l517 085E                                l509 075A  
                              l453 36AE                                l390 1CD2  
                              l542 0ABA                                l534 09AE  
                              l518 086A                                l470 37FA  
                              l454 36BA                                l383 1E9C  
                              l543 0ABE                                l535 09BA  
                              l527 097A                                l519 086E  
                              l471 3806                                l463 37C6  
                              l455 36BE                                l384 1C28  
                              l544 0ACA                                l528 097E  
                              l464 37CA                                l456 36CA  
                              l393 1DE6                                l385 1C2C  
                              l545 0ACE                                l529 098A  
                              l465 37D6                                l457 36CE  
                              l394 1DEA                                l386 1D26  
                              l546 0ADA                                l538 0A9A  
                              l490 0530                                l466 37DA  
                              l458 36DA                                l378 434C  
                              l395 1DF6                                l387 1CB4  
                              l539 0A9E                                l491 053C  
                              l483 04FC                                l467 37E6  
                              l459 36DE                                l379 4356  
                              l388 1CBE                                l484 0500  
                              l468 37EA                                l389 1CC8  
                              l485 050C                                l469 37F6  
                              l813 1596                                l398 2126  
                              l494 061A                                l486 0510  
                              l830 16FE                                l822 1676  
                              l399 1EB2                                l495 061E  
                              l487 051C                                l576 5ECC  
                              l496 062A                                l488 0520  
                              l808 158A                                l497 062E  
                              l489 052C                                l817 1708  
                              l498 063A                                l499 063E  
                              l940 5C0E                                l933 5F80  
                              l589 5CDC                                l845 18CC  
                              l829 1702                                l926 5F96  
                              l838 18C4                                l919 5F6A  
                              l857 1A9C                                l938 5C0A  
                              l859 1A98                                l886 41D2  
             ??_PWR_Button_Polling 0072                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                        ?_LCD_cursor 007E  
                              _dir 00E8                                _msg 0012  
                              _str 010A                       ___awmod@sign 0077  
                              prod 000FF3                                wreg 000FE8  
                     ___flmul@cntr 008E                       ___flmul@sign 008F  
                  __end_of_LCD_Gap 59A8                       __CFG_LVP$OFF 000000  
                  __end_of_LCD_End 5A70                      ___flpack@sign 0077  
           __size_of_LCD_goto_line 00EE                       ___fltol@exp1 00B2  
                     __CFG_WDT$OFF 000000                               l1036 117E  
                             l1302 3E42                               l1304 3E70  
                             l1313 3F5C                               l1290 4A78  
                             l1282 49FE                               l1531 540C  
                             l1355 50A2                               l1347 4948  
                             l1461 46E8                               l1462 472C  
                             l1625 5806                               l1289 4A60  
                             l1298 3E04                               l1562 5366  
                             l1635 5872                               l1572 56E6  
                             l1468 47B4                               l5004 017A  
                             l5110 058A                               l5022 0236  
                             l5104 0542                               l5040 02F2  
                             l5212 08E8                               l5206 08A0  
                             l5240 09C0                               l5144 06A8  
                             l4602 57F6                               l4610 5824  
                             l5138 0660                               l5058 03AE  
                             l4612 5832                               l5172 0780  
                             l5076 046A                               l4614 583C  
                             l5318 5B96                               l5246 0A08  
                             l4618 5862                               l8002 0B8A  
                             l5274 0AE0                               l5178 07C8  
                             l7300 5CCE                               l8012 0C06  
                             l4590 57AC                               l8110 107C  
                             l8102 104A                               l8006 0BD6  
                             l6504 5488                               l4592 57BA  
                             l4840 5382                               l7320 4978  
                             l7400 3EDA                               l8112 1084  
                             l8120 1120                               l8024 0C56  
                             l8016 0C10                               l8008 0BF2  
                             l4904 361E                               l5810 2064  
                             l5714 1CDE                               l4594 57C4  
                             l4850 53C6                               l7402 3EEC  
                             l8130 1160                               l8122 1130  
                             l8106 1050                               l8050 0D30  
                             l8034 0CAA                               l8018 0C3A  
                             l4930 36F0                               l5740 1DFC  
                             l6508 54C2                               l7324 498E  
                             l8204 4DF8                               l7412 3F3A  
                             l7404 3EFC                               l7500 5218  
                             l5734 1DDA                               l7334 4A3E  
                             l7326 49A0                               l7422 3FAC  
                             l7414 3F4C                               l7406 3F08  
                             l7510 524E                               l8142 11B6  
                             l8134 1184                               l8062 0DE8  
                             l4870 5F3C                               l5670 435A  
                             l5662 42EE                               l5816 2086  
                             l7336 4A50                               l7328 49E0  
                             l8224 4E9E                               l8216 4E48  
                             l7432 4000                               l8128 114C  
                             l8080 0EE6                               l8064 0DFE  
                             l4936 3738                               l5656 42DE  
                             l7346 4AC6                               l7418 3F84  
                             l7506 5236                               l7522 5290  
                             l7442 4C6E                               l8146 1218  
                             l8074 0EA8                               l8066 0E3C  
                             l8058 0DB4                               l4962 380C  
                             l5674 4362                               l8228 4EB2  
                             l7380 3E54                               l7508 5244  
                             l7460 4CE4                               l8180 13CC  
                             l8172 1372                               l8164 133A  
                             l8156 130E                               l8092 0FF6  
                             l8068 0E52                               l8412 4236  
                             l5676 43A6                               l5668 4344  
                             l5790 1F68                               l6494 543E  
                             l7374 3E16                               l7526 52A6  
                             l7518 5280                               l7550 5558  
                             l7542 552C                               l7470 4D2C  
                             l7630 3116                               l8158 131E  
                             l8094 0FFC                               l8086 0F6A  
                             l8078 0EDA                               l8166 134A  
                             l8414 4248                               l7712 4766  
                             l7704 473E                               l7472 4D34  
                             l7464 4D0C                               l7448 4C94  
                             l7616 3AFA                               l7608 39FE  
                             l7640 321E                               l8184 13F8  
                             l8176 139A                               l8088 0F7E  
                             l8344 4032                               l4888 3566  
                             l5866 21F2                               l7394 3EA8  
                             l7386 3E66                               l7722 4798  
                             l7562 55A4                               l7554 557E  
                             l7546 5540                               l7538 551A  
                             l7482 4D7C                               l8098 100A  
                             l8186 1400                               l8418 426E  
                             l8370 415A                               l4986 00C0  
                             l5892 2310                               l7580 515E  
                             l7572 5B10                               l7804 50EE  
                             l7812 5C62                               l7732 47EC  
                             l7724 47AA                               l7716 477A  
                             l7548 554E                               l7476 4D5C  
                             l7636 31EC                               l8188 1426  
                             l8372 415E                               l8452 5B3A  
                             l8700 189A                               l8612 156E  
                             l5886 22EE                               l7582 5190  
                             l7910 5D76                               l8198 4DD2  
                             l7822 4F08                               l7494 5200  
                             l7558 558E                               l7654 3478  
                             l8390 41AE                               l8382 4180  
                             l8622 15A4                               l7576 50FA  
                             l7584 51C2                               l7568 5ADC  
                             l7592 5E9E                               l7920 44AC  
                             l7760 48BE                               l7752 4868  
                             l7648 33A2                               l8392 41C0  
                             l8368 4148                               l8800 1BFE  
                             l8704 18BC                               l8624 15B2  
                             l8608 14F6                               l8616 1582  
                             l7578 512C                               l7906 5D5A  
                             l7922 44B4                               l7850 4FBC  
                             l7842 4F8C                               l7738 4812  
                             l7682 4694                               l7666 5E7A  
                             l8802 1C04                               l8730 19B0  
                             l8634 15DA                               l8642 161C  
                             l7588 5E88                               l7932 4550  
                             l7852 4FCA                               l7772 48FA  
                             l7764 48D2                               l7676 465A  
                             l8724 1994                               l8652 1638  
                             l8660 167A                               l7934 458C  
                             l7926 44C2                               l7942 460E  
                             l7790 5A98                               l7838 4F78  
                             l7870 52FC                               l7782 492C  
                             l8398 41EC                               l8734 19C2  
                             l8574 1464                               l7856 4FE8  
                             l7848 4FAA                               l7784 493E  
                             l7776 490E                               l8672 1736  
                             l8680 1778                               l7938 4594  
                             l7866 52E0                               l7890 568C  
                             l8754 1ABE                               l8746 1A2C  
                             l8738 19D4                               l8682 177A  
                             l7868 52F2                               l8772 1B7C  
                             l8684 177E                               l7798 5050  
                             l7878 5352                               l7894 56D2  
                             l7886 5670                               l8758 1AD4  
                             l8694 182E                               l7888 5682  
                             l8784 1BA4                               l7994 0B54  
                             l8794 1BC0                               l8778 1B90  
                             l8786 1BAA                               l8698 1894  
                             l7988 0B3A                               STR_1 FF69  
                             STR_2 FF3F                               STR_3 FE58  
                             STR_4 FF69                               STR_5 FFF9  
                             STR_6 FF54                               STR_7 FFC7  
                             STR_8 FFA8                               STR_9 FFB9  
                             _LATA 000F89                               _LATB 000F8A  
                             _LATC 000F8B                               _LATD 000F8C  
                             _LATE 000F8D                               u5110 34E0  
                             u5115 34D4                               u5125 3540  
                             u5150 3598                               u6040 0B00  
                             u5320 382C                               u5240 3710  
                             u5155 358C                               u6045 0AF4  
                             u5405 0154                               u5325 3820  
                             u5245 3704                               u5165 35F8  
                             u5510 0328                               u5430 01B0  
                             u5350 003A                               u5515 031C  
                             u5435 01A4                               u5355 002E  
                             u5525 0388                               u5445 0210  
                             u5365 009A                               u5550 03E4  
                             u5470 026C                               u5390 00F4  
                             u5800 07A0                               u5720 0680  
                             u5640 0562                               u5555 03D8  
                             u5475 0260                               u5395 00E8  
                _F2_Button_Polling 5F78                               u9005 5C84  
                             u5805 0794                               u5725 0674  
                             u5645 0556                               u5565 0444  
                             u5485 02CC                               u6630 1CFE  
                             u9006 5C86                               u9015 5C90  
                             u6640 1D4A                               u9016 5C92  
                             u9025 5C9C                               u9026 5C9E  
                             u6635 1CF2                               u9035 5CA8  
                             u6900 225E                               u9036 5CAA  
                             u6645 1D3E                               u6655 1DAA  
                             u6760 1F88                               u5960 09E0  
                             u5880 08C0                               u6905 2252  
                             u6770 1FD4                               u6915 22BE  
                             u6765 1F7C                               u5965 09D4  
                             u5885 08B4                               u6775 1FC8  
                             u6785 2034                               u9601 4670  
                             u6890 2212                               u6895 2206  
                             u9800 4F28                               u9805 4F1C  
                             u9581 4636                               u9931 4460  
              __size_of_CANSetMask 03AA                       ?_LCD_goto_xy 0081  
                             _data 0116                               _main 1436  
                             _itoa 5B6A                 ?_F2_Button_Polling 0029  
        __size_of_LCD_send_command 003A                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               indf1 000FE7  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               _utoa 5378  
               __size_of_LCD_Error 0064                               pclat 000FFA  
                             prodh 000FF4                               prodl 000FF3  
                             start 00BE                      __CFG_IESO$OFF 000000  
               __size_of_LCD_clear 0032                       _sprintf$4230 0138  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000010  
              ??_F2_Button_Polling 0072           __end_of_LCD_enable_pulse 5EF6  
                 _CANOperationMode 5F32                       _Can_Tx_Force 0250  
                 __end_of_LCD_Park 5944                    _space_available 025B  
          __size_of_LCD_initialize 016E         __size_of_CANreceiveMessage 052E  
                    ___fltol@sign1 00B1                    __end_of___fladd 4030  
                            ?_main 0029                    __end_of___fldiv 4EE2  
                            ?_itoa 0082                    __end_of___awdiv 52B2  
                  __end_of___flneg 5C76                              STR_10 FFE3  
                            STR_11 FDEF                              STR_12 FFEF  
                            STR_20 FF7E                              STR_13 FFF4  
                            STR_21 FED6                              STR_30 FF69  
                            STR_14 FFEA                              STR_22 FE82  
                            STR_31 FF2A                              STR_23 FF2A  
                            STR_15 FEEB                              STR_16 FFD3  
                            STR_24 FEC1                              STR_32 FEAC  
                            STR_17 FFDB                              STR_25 FE97  
                            STR_33 FE2E                              STR_18 FF93  
                            STR_26 FE43                              STR_34 FE19  
                            STR_35 FF2A                              STR_27 FF2A  
                            STR_19 FF2A                              STR_36 FEAC  
                            STR_28 FF00                    __end_of___awmod 55B0  
                            STR_29 FF15                              STR_37 FE04  
                            STR_38 FE6D                    __end_of___flmul 4DAC  
                  __end_of___flsub 5AD0                    __end_of___fltol 4FFC  
                  __end_of___lldiv 5378                              ?_utoa 0079  
                            u10220 1176                              u11030 1B54  
                            u11117 5CD0                    ___awdiv@divisor 007A  
                  __end_of___llmod 56F8                              u10660 155A  
                            u10790 16DE                              _T3CON 000FB1  
                            u10890 18B8                              u10980 1A90  
                  __end_of___lwdiv 5810                    __end_of___lwmod 587C  
                            i2l400 2600                              i2l401 26D2  
                            i2l410 2786                              i2l402 266E  
                            i2l403 2676                              i2l404 267E  
                            i1l804 0078                              i2l413 2832  
                            i2l405 2686                              i2l430 2D02  
                            i2l422 29AE                              i2l414 2836  
                            i2l423 29B2                              i2l415 2908  
                            i2l424 29BC                              i2l416 28A4  
                            i2l408 2778                              i2l417 28AC  
                            i2l409 277C                              i2l418 28B4  
                            i2l419 28BC                              i2l390 2450  
                            i2l383 25E8                              i2l384 23C6  
                            i2l800 3D8A                              i2l393 2542  
                            i2l385 23CA                              i2l394 2546  
                            i2l386 249C                              i2l395 2550  
                            i2l387 2438                              i2l388 2440  
                            i2l581 5F5C                              i2l389 2448  
                            i2l398 281E                              i2l399 25FC  
                            i2l576 5F10                              i2l784 3D84  
                  ___awdiv@counter 007C                              _TMR3H 000FB3  
                            _TMR3L 000FB2                  _CANisRxReady$3253 003A  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                    __CFG_WRT4$OFF 000000                 __size_of_ISR_bassa 00A6  
                    __CFG_WRT5$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
               CANInitialize@flags 0084                     __CFG_EBTR2$OFF 000000  
                    ___awtofl@sign 0080                     __CFG_EBTR3$OFF 000000  
                   __CFG_EBTR4$OFF 000000                   __end_of_ISR_alta 3DC4  
                   __CFG_EBTR5$OFF 000000                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                            _check 00C7                     __CFG_EBTRB$OFF 000000  
        __end_of_F2_Button_Polling 5F8E                    __end_of_dpowers FDEF  
                            _scale 2F84                    __end_of_isdigit 5E86  
        __size_of_LCD_shift_cursor 004E                     __pbitbssCOMRAM 0250  
             __end_of_CANisRxReady 5F62                              tablat 000FF5  
             __end_of_CANisTxReady 5ED4                              plusw1 000FE3  
                            plusw2 000FDB                              utoa@c 0081  
                            utoa@v 007F                              status 000FD8  
                  __end_of_sprintf 1436                __size_of_LCD_cursor 0032  
                  __initialization 5BB6                       __end_of_main 1C12  
                     __end_of_itoa 5BB6      __size_of_board_initialization 00A4  
                    _LCD_goto_line 50F4                       __end_of_utoa 543C  
                ?_Joystick_Polling 0029                 ??_Joystick_Polling 0072  
                ?_LCD_write_string 0083                             ??_main 0151  
                           ??_itoa 0088                             ??_utoa 007F  
        __size_ofi2_CANsendMessage 06A4                      __activetblptr 000003  
                __end_of_LCD_Error 5A0C                          ??_LCD_Gap 0085  
                        ??_LCD_End 0085                     _JoystickValues 00DF  
               ??_LCD_write_string 0085               __size_of__tdiv_to_l_ 01A6  
                _CANisTxReady$3251 0072                  __end_of_LCD_clear 5E58  
            i2CANsendMessage@flags 0041             LCD_write_string@buffer 0083  
                           _ADCON1 000FC1                             _CANCON 000F6F  
                 ___llmod@dividend 0072                             ?_scale 0090  
                           _ADRESH 000FC4                   __end_of___flpack 4ADA  
                 ___awdiv@dividend 0078                   __end_of___awtofl 5B6A  
                           _CAN_Tx 543C                    __CFG_BBSIZ$1024 000000  
                 __end_of___lbtofl 5D58                   __end_of___lltofl 5DC2  
                           i2l6310 2C48                             i2l6302 2BD6  
                           i2l6322 2CA8                             i2l6314 2C68  
                           i2l6326 2CC8                             i2l6318 2C88  
                           i2l6328 2CFC                             i2l6264 2A62  
                           i2l6380 2F0E                             i2l6372 2ED2  
                           i2l6364 2E62                             i2l6268 2A6A  
                           i2l6390 2F7E                             i2l6384 2F2C  
                           i2l6376 2EF0                             i2l6712 245A  
                           i2l6388 2F4A                             i2l6732 2538  
                           i2l8500 3C16                             i2l6814 278C  
                           i2l6808 276E                             i2l6738 2556  
                           i2l8522 3C82                             i2l8514 3C50  
                           i2l8540 3CEC                             i2l8508 3C3A  
                           i2l8532 3CB6                             i2l6864 28C6  
                           i2l8560 3D70                             i2l8536 3CD4  
                           i2l6890 29C2                             i2l8546 3D10  
                           i2l8482 3B88                             i2l6884 29A4  
                           i2l6788 2690                             i2l8556 3D40  
                 __end_of___lwtofl 5DF4                             _RXB0D0 000F66  
                           _RXB0D1 000F67                             _RXB0D2 000F68  
                           _RXB0D3 000F69                             _RXB0D4 000F6A  
                           _RXB1D0 000F56                             _RXB0D5 000F6B  
                           _RXB1D1 000F57                             _RXB0D6 000F6C  
                           _RXB1D2 000F58                             _RXB0D7 000F6D  
                           _RXB1D3 000F59                             _RXB1D4 000F5A  
                           _RXB1D5 000F5B                             _RXB1D6 000F5C  
                           _RXB1D7 000F5D                             _TXB0D0 000F46  
                           _TXB0D1 000F47                             _TXB0D2 000F48  
                           _TXB0D3 000F49                             _TXB1D0 000F36  
                           _TXB0D4 000F4A                             _TXB1D1 000F37  
                           _TXB0D5 000F4B                             _TXB1D2 000F38  
                           _TXB0D6 000F4C                             _TXB1D3 000F39  
                           _TXB0D7 000F4D                             _TXB2D0 000F26  
                           _TXB1D4 000F3A                             _TXB2D1 000F27  
                           _TXB1D5 000F3B                             _TXB2D2 000F28  
                           _TXB1D6 000F3C                             _TXB2D3 000F29  
                           _TXB1D7 000F3D                             _TXB2D4 000F2A  
                           _TXB2D5 000F2B                             _TXB2D6 000F2C  
                           _TXB2D7 000F2D                 CANsendMessage@data 0076  
               CANsendMessage@tamp 007E                    _switch_position 00EC  
                 __end_of_delay_ms 5CEA              __size_of_CANSetFilter 0B2A  
                   __CFG_XINST$OFF 000000                  __end_of_ISR_bassa 00BE  
                 __end_of__powers_ FDC7                     ?_LCD_goto_line 0029  
                           ___flge 4FFC                          ??___fladd 00A5  
                 _delay_set_quartz 5FA4                             ___wmul 5CEA  
                        ??___fldiv 0088                          ??___awdiv 007C  
                        ??___flneg 0094                     __CFG_STVREN$ON 000000  
                        ??___awmod 0076                          ??___flmul 0089  
                        ??___flsub 00B1                          ??___fltol 00AD  
                        ??___lldiv 007A                          ??___llmod 007A  
                        ??___lwdiv 0076                       ??_CANSetMask 0077  
                        ??___lwmod 0076            __size_of_LCD_write_char 0096  
                           _fround 3856     LCD_initialize@quartz_frequency 0080  
                           clear_0 5BBC                             clear_1 5BC8  
                           clear_2 5BDA                   ___awdiv@quotient 007E  
                  ___awmod@divisor 0074               __size_of_LCD_Handler 0258  
                  ___awmod@counter 0076                    __CFG_BOREN$BOHW 000000  
                _JoystickConstants 00BB                             itoa@cp 0088  
                        ??_isdigit 0072               __size_of_LCD_Parking 0064  
                     __mediumconst FD5E                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
       __size_of_F2_Button_Polling 0016                          ??_sprintf 0136  
                     _CANSetFilter 0000                         ___fladd@f1 009D  
                       ___fladd@f2 00A1                         ___flge@ff1 0072  
                       ___flge@ff2 0076                         ___fldiv@f1 0080  
                       ___fldiv@f2 0084                         ___fldiv@f3 0088  
                       __accesstop 0060            __end_of__initialization 5BF2  
               __end_of_CANSetMask 3856                          ?_LCD_Park 0029  
                  __CFG_PBADEN$OFF 000000                         ___flneg@f1 0090  
                 _LCD_send_command 5C76                         ___flmul@f1 0081  
                       ___flmul@f2 0085                      ___rparam_used 000001  
LCD_write_integer@number_of_digits 008C                         ___flsub@f1 00A9  
                       ___flsub@f2 00AD                         ___fltol@f1 00A9  
             __size_of_LCD_goto_xy 001C                         ___awtofl@c 007C  
                       ___lbtofl@c 0080                     __pcstackCOMRAM 0029  
                     __pidataBANK0 5FAE                          ?_ISR_alta 0029  
                       ___lltofl@c 007C                       LCD_goto_xy@x 0082  
                     LCD_goto_xy@y 0081                      __end_of_scale 34AC  
                   _LCD_initialize 4ADA                  _LCD_write_integer 4456  
                _LCD_write_message 5D58                         ___lwtofl@c 007C  
            CANSetFilter@numBuffer 007B                 ?_LCD_write_integer 008A  
           LCD_write_integer@index 0099                 ?_LCD_write_message 0083  
                       __div_to_l_ 47C6                       ??_LCD_cursor 007F  
           LCD_write_integer@value 008A      LCD_write_integer@convertedInt 0093  
                _space_gap_reached 025C                       _actual_speed 00E1  
            __size_of_CANisRxReady 0018              __size_of_CANisTxReady 0026  
              ??_LCD_write_integer 008E                    __div_to_l_@exp1 007F  
              ??_LCD_write_message 0085                    __div_to_l_@cntr 007E  
                          ??_scale 0094                   _LCD_shift_cursor 5AD0  
                  __div_to_l_@quot 007A           __end_of_CANOperationMode 5F4A  
                          ?_CAN_Tx 0029                         __pbssBANK0 00BB  
                       __pbssBANK1 0100                         _data_brake 0021  
                       ??_LCD_Park 0085            __size_of_CANsendMessage 07A0  
                       _data_speed 011E                      __div_to_l_@f1 0072  
                    __div_to_l_@f2 0076                    ??_LCD_goto_line 007E  
               __end_of_LCD_cursor 5E26             __end_of_LCD_initialize 4C48  
                          ?___flge 0072                            ?___wmul 0072  
                       ??_ISR_alta 0060          __end_of_LCD_write_integer 4620  
        __end_of_LCD_write_message 5D8E                  ?_LCD_enable_pulse 0029  
                        ?___flpack 0072                            ?_fround 0090  
                     _CANisRxReady 5F4A                            _CANSTAT 000F6E  
                        ?___awtofl 007C                 ??_LCD_enable_pulse 007A  
                        ?___lbtofl 007C                       _CANisTxReady 5EAE  
                        ?___lltofl 007C                            _BRGCON1 000F70  
                          _BRGCON2 000F71                            _BRGCON3 000F72  
                 i2_CANsendMessage 23B2                          ?___lwtofl 007C  
      __size_of_PWR_Button_Polling 0016                            _LCD_Gap 5944  
                          _LCD_End 5A0C            __size_ofi2_CANisTxReady 0020  
           __size_of_CANInitialize 01CE                   LCD_cursor@active 007F  
                        ?_delay_ms 0078                            _RXB0DLC 000F65  
                          _RXB1DLC 000F55                            _RXB0CON 000F60  
                          _RXB1CON 000F50                            _TXB0DLC 000F45  
                          _TXB1DLC 000F35                            _TXB2DLC 000F25  
              CANsendMessage@flags 0079                  _parking_message_E 0258  
                  __size_of_CAN_Tx 00C0                  __end_of__npowers_ FD93  
                          __Hparam 0000                         _left_speed 000B  
                       _scale$4229 0094                            __Lparam 0000  
                 delay_ms@value_ms 0078                    ?_LCD_initialize 0029  
                  __size_of___flge 00F8                            ___fladd 3DC4  
                          ___fldiv 4DAC                            ___awdiv 51E2  
                          ___flneg 5C3A                            ___awmod 54FC  
                          ___flmul 4C48                            ___flsub 5A70  
                          ___fltol 4EE2                            ___lldiv 52B2  
                  __size_of___wmul 0038                     _LCD_write_char 56F8  
                          ___llmod 5654                            ___lwdiv 578E  
                          ___lwmod 5810                         ??___flpack 0078  
             CANInitialize@propSeg 0089                            __pcinit 5BB6  
                       ??___awtofl 0080                         ??___lbtofl 0080  
                  __size_of_fround 02FE                            __ramtop 0D00  
              LCD_write_char@value 0082                         ??___lltofl 0080  
                          __ptext0 1436                            __ptext1 55B0  
                          __ptext2 4288                            __ptext3 34AC  
                          __ptext4 0000                            __ptext5 5F32  
                          __ptext6 5D22                            __ptext7 5B1E  
                          __ptext8 5F62                            __ptext9 587C  
                       ??___lwtofl 0080                        ?__div_to_l_ 0072  
                 LCD_write_char@D0 0081                   LCD_write_char@D1 0080  
                 LCD_write_char@D2 007F                   LCD_write_char@D3 007E  
                        _F1_switch 0251                            _dpowers FDC7  
                        _F2_switch 0252                            _isdigit 5E58  
                 ___awmod@dividend 0072                         ??_delay_ms 007A  
           CANreceiveMessage@error 0044       __end_of_board_initialization 5654  
        __size_of_Joystick_Polling 0042                          _LCD_Error 59A8  
         __end_of_delay_set_quartz 5FAE                            _sprintf 0B2A  
                   __pintcode_body 3B54                          _LCD_clear 5E26  
             end_of_initialization 5BF2          __size_of_LCD_write_string 0028  
                          itoa@buf 0082                            itoa@val 0084  
                          int_func 3B54                          i2u1112_47 3D38  
                        i2u1057_45 3CCC                          i2u1049_45 3BA6  
                        i2u1057_46 3CCE                          i2u1049_46 3BA8  
                    _CANInitialize 4288                      _parking_error 0257  
                  ___lldiv@divisor 0076                 LCD_cursor@blinking 007E  
                    _parking_state 00EA                    ___lldiv@counter 007E  
           __end_of_LCD_write_char 578E                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
       __size_of_LCD_write_integer 01CA         __size_of_LCD_write_message 0036  
                          utoa@buf 0079                     __tdiv_to_l_@f1 0072  
                   __tdiv_to_l_@f2 0076                            utoa@val 007B  
                       _wait_low_1 025E                         _wait_low_2 025F  
                       _wait_low_3 0260                          _ISR_bassa 0018  
                    ??__tdiv_to_l_ 007A            _steering_correction_dir 025D  
                        _PORTAbits 000F80                          _PORTBbits 000F81  
                   CANSetMask@mask 0072                          _PORTDbits 000F83  
                   CANSetMask@tamp 007C           __end_of_LCD_send_command 5CB0  
                   CANSetMask@type 0076                        ___fldiv@exp 008D  
                _F1_Button_Polling 5F8E                         ?_LCD_Error 0029  
                       ?_LCD_clear 0029                 ?_F1_Button_Polling 0029  
                   __end_of_CAN_Tx 54FC            _clock_counter_reference 00E3  
                      ___flmul@exp 0089                     _CANsendMessage 1C12  
                 CANInitialize@BRP 0083                   CANInitialize@SJW 0082  
                   ?_CANInitialize 0080                ??_F1_Button_Polling 0072  
                __size_of_LCD_Park 0064                __size_of__div_to_l_ 0194  
          LCD_write_integer@F17326 0100                    ?_LCD_write_char 0029  
                    ??_LCD_Handler 00BB           __end_of_LCD_shift_cursor 5B1E  
                   __end_of___flge 50F4                         ?_ISR_bassa 0029  
                   __end_of___wmul 5D22                  __size_of_ISR_alta 3DBC  
                    ??_LCD_Parking 0085                  LCD_shift_cursor@i 0080  
                   __end_of_fround 3B54                     i2_CANisTxReady 5EF6  
        __end_of_F1_Button_Polling 5FA4                start_initialization 5BB6  
              __end_of__tdiv_to_l_ 47C6                CANSetMask@numBuffer 007B  
           __end_of_CANsendMessage 23B2                           ??_CAN_Tx 0082  
                ?_CANOperationMode 0029                      _data_steering 0126  
                    ??_LCD_goto_xy 0082         i2CANsendMessage@dataLength 0040  
             i2CANsendMessage@data 003E                 ??_CANOperationMode 0072  
             i2CANsendMessage@tamp 0046                    ___llmod@divisor 0076  
         __end_ofi2_CANsendMessage 2A56         CANInitialize@FilterConfig1 008A  
       CANInitialize@FilterConfig2 008B                    ___llmod@counter 007A  
              _steering_correction 00EB                           ??___flge 007A  
             _board_initialization 55B0                           ??___wmul 0076  
                      __pdataBANK0 00ED                   __CFG_LPT1OSC$OFF 000000  
                         ??_fround 0094             __end_ofi2_CANisTxReady 5F16  
                    sprintf@tmpval 0146                  __size_of___flpack 0180  
           CANInitialize@phaseSeg1 0080             CANInitialize@phaseSeg2 0081  
                       fround@prec 009C                __end_of_LCD_Handler 4288  
                __size_of___awtofl 004C                           ?_LCD_Gap 0029  
                __size_of___lbtofl 0036                           ?_LCD_End 0029  
                __size_of___lltofl 0034                        __pbssCOMRAM 0001  
                __size_of___lwtofl 0032                      __pcstackBANK0 0060  
                    __pcstackBANK1 0136                        _BRGCON2bits 000F71  
              __end_of_LCD_Parking 58E0                        _BRGCON3bits 000F72  
                 _Joystick_Polling 5BF8                        ??_LCD_Error 0085  
        __size_of_LCD_enable_pulse 0022                       _isdigit$3903 0073  
       i2CANsendMessage@identifier 003A                  _park_assist_state 012E  
                __size_of_delay_ms 003A                        ??_LCD_clear 007E  
                  ?_CANsendMessage 0072            LCD_write_message@buffer 0083  
                 _LCD_write_string 5E86                    ??_CANInitialize 0085  
                      sprintf@flag 013E                        sprintf@fval 014C  
                      sprintf@prec 014A                   ??_LCD_initialize 0080  
               CANSetFilter@filter 0072          delay_set_quartz@frequency 0072  
                 ___lwdiv@dividend 0072                 LCD_send_command@D0 007C  
               LCD_send_command@D1 007B                 LCD_send_command@D2 007A  
               LCD_send_command@D3 007D                __end_of_LCD_goto_xy 5F32  
            __end_of_LCD_goto_line 51E2              ?_board_initialization 0029  
                        __pintcode 0008                      __pmediumconst FD5E  
                         ?___fladd 009D                           ?___fldiv 0080  
                         ?___awdiv 0078                           ?___flneg 0090  
                         ?___awmod 0072                           ?___flmul 0081  
                         ?___flsub 00A9                           ?___fltol 00A9  
                         ?___lldiv 0072                           ?___llmod 0072  
                        __npowers_ FD5F                           ?___lwdiv 0072  
                         ?___lwmod 0072                        ??_ISR_bassa 0029  
                      __pintcodelo 0018         __end_of_PWR_Button_Polling 5F78  
                  ?i2_CANisTxReady 0029                        __tdiv_to_l_ 4620  
                     ??__div_to_l_ 007A                        _COMSTATbits 000F74  
                         ?_isdigit 0029         __size_of_F1_Button_Polling 0016  
                 ___lwdiv@quotient 0076                           ?_sprintf 00B3  
                   __size_of_scale 0528                  ?_delay_set_quartz 0029  
            CANreceiveMessage@tamp 0045                 ??_delay_set_quartz 0072  
                         _LCD_Park 58E0                     ___wmul@product 0076  
                         _LATCbits 000F8B                           _LATDbits 000F8C  
                         _LATEbits 000F8D                           _IPR2bits 000FA2  
     _delay_quartz_frequency_value 00ED                           _IPR3bits 000FA5  
                         _PIE2bits 000FA0                           _PIE3bits 000FA3  
             _collision_risk_value 00E7                 __end_of__div_to_l_ 495A  
                         _PIR2bits 000FA1                           _PIR3bits 000FA4  
                         i2u800_45 250A                           i2u811_40 26AE  
                         i2u811_45 26A4                           i2u812_40 26F4  
                         i2u812_45 26EA                           i2u813_45 2740  
                         i2u743_40 2B16                           i2u743_46 2B18  
                         i2u744_40 2B44                           i2u824_40 28E4  
                         i2u752_45 2CD4                           i2u824_45 28DA  
                         i2u744_46 2B46                           i2u825_40 292A  
                         i2u825_45 2920                           i2u754_40 2DAA  
                         i2u746_45 2B5A                           i2u826_45 2976  
                         i2u754_46 2DAC                           i2u755_40 2DD4  
                         i2u763_45 2F56                           i2u755_46 2DD6  
                         i2u757_45 2DE8                           _RXB0EIDH 000F63  
                         _RXB0EIDL 000F64                           _RXB1EIDH 000F53  
                        _pr_time_1 00CB                          _pr_time_2 00CF  
                         _RXB1EIDL 000F54                          _pr_time_3 00D3  
                        _pr_time_4 0106                          _pr_time_5 00D7  
                        _pr_time_6 00DB                           i2u798_40 2478  
                        _set_speed 00E5                           i2u798_45 246E  
                         i2u799_40 24BE                           _RCONbits 000FD0  
                         i2u799_45 24B4                   __CFG_WDTPS$32768 000000  
                         _RXB0SIDH 000F61                           _RXB0SIDL 000F62  
                         _RXF0EIDH 000F02                           _RXB1SIDH 000F51  
                         _RXF0EIDL 000F03                           _RXB1SIDL 000F52  
                         _RXF1EIDH 000F06                           _RXF1EIDL 000F07  
                         _RXF2EIDH 000F0A                           _RXF2EIDL 000F0B  
                         _RXF3EIDH 000F0E                           _RXF3EIDL 000F0F  
                         _RXF4EIDH 000F12                           _RXF4EIDL 000F13  
                         _RXF5EIDH 000F16                           _RXF5EIDL 000F17  
                         _RXF0SIDH 000F00                           _RXF0SIDL 000F01  
                         _TXB0EIDH 000F43                           _RXF1SIDH 000F04  
                         _TXB0EIDL 000F44                           _RXF1SIDL 000F05  
                         _TXB1EIDH 000F33                           _RXF2SIDH 000F08  
                         _TXB1EIDL 000F34                           _RXF2SIDL 000F09  
                         _ISR_alta 0008                           _TXB2EIDH 000F23  
                         _RXF3SIDH 000F0C                           _TXB2EIDL 000F24  
                         _RXF3SIDL 000F0D                           _RXF4SIDH 000F10  
                         _RXF4SIDL 000F11                           _RXF5SIDH 000F14  
                         _RXF5SIDL 000F15                           _RXM0EIDH 000F1A  
                         _RXM0EIDL 000F1B                           _TXB0SIDH 000F41  
                         _RXM1EIDH 000F1E                           _TXB0SIDL 000F42  
                         _RXM1EIDL 000F1F                           _TXB1SIDH 000F31  
                         _TXB1SIDL 000F32                           _TXB2SIDH 000F21  
                         _TXB2SIDL 000F22                        _LCD_Handler 4030  
                         _RXM0SIDH 000F18                           _RXM0SIDL 000F19  
                         _RXM1SIDH 000F1C                           _RXM1SIDL 000F1D  
                         _RXERRCNT 000F75     LCD_write_integer@zero_cleaning 008D  
               _parking_message_ID 00E9                           _TXERRCNT 000F76  
                       _ADCON0bits 000FC2                        _LCD_Parking 587C  
                       _ADCON2bits 000FC0                  ___wmul@multiplier 0072  
                         _RTR_Flag 0253                  ?_LCD_send_command 007A  
                 _actual_speed_kmh 00C3                          _user_data 000F  
                 __size_of_LCD_Gap 0064                   __size_of_LCD_End 0064  
               ??_LCD_send_command 007D                      ?_CANSetFilter 0072  
                       _CANCONbits 000F6F                        _LCD_goto_xy 5F16  
                 ??_LCD_write_char 007E                  LCD_goto_line@line 007E  
                         __Hrparam 0000                       _RXB0SIDLbits 000F62  
           ??_board_initialization 008C          _collision_sensor_distance 0009  
                         __Lrparam 0000                       _RXB1SIDLbits 000F52  
                 __size_of___fladd 026C                         _CANSetMask 34AC  
                 __size_of___fldiv 0136                   __size_of___awdiv 00D0  
                 __size_of___flneg 003C                   __size_of___awmod 00B4  
                 __size_of___flmul 0164                  ?_LCD_shift_cursor 007E  
                 __size_of___flsub 0060                   __size_of___fltol 011A  
                 __size_of___lldiv 00C6                   __size_of___llmod 00A4  
                         ___flpack 495A                   __size_of___lwdiv 0082  
                 __size_of___lwmod 006C                           ___awtofl 5B1E  
                         ___lbtofl 5D22                        _fround$4227 0098  
                      _fround$4228 0094                           ___lltofl 5D8E  
               ??_LCD_shift_cursor 007F                           ___lwtofl 5DC2  
                       sprintf@exp 0144                         sprintf@val 0140  
                     _RXF0SIDLbits 000F01                   __size_of_isdigit 002E  
                         _delay_ms 5CB0                    ___lwdiv@divisor 0074  
                     _RXF1SIDLbits 000F05                    ___lwdiv@counter 0078  
                   ??_CANSetFilter 0077                   _LCD_enable_pulse 5ED4  
                         __ptext10 58E0                           __ptext11 4030  
                         __ptext20 47C6                           __ptext12 0B2A  
                         __ptext21 5D8E                           __ptext13 2F84  
                         __ptext30 4DAC                           __ptext22 5654  
                         __ptext14 5E58                           __ptext31 495A  
                         __ptext23 52B2                           __ptext15 3856  
                         __ptext40 5944                           __ptext32 4456  
                         __ptext24 4EE2                           __ptext16 4C48  
                         __ptext41 59A8                           __ptext33 5B6A  
                         __ptext25 5A70                           __ptext17 54FC  
                         __ptext50 5C76                           __ptext42 5A0C  
                         __ptext34 5378                           __ptext26 3DC4  
                         __ptext18 51E2                           __ptext51 5ED4  
                         __ptext43 5D58                           __ptext35 5810  
                         __ptext27 5C3A                           __ptext19 4620  
                         __ptext52 5CB0                           __ptext44 56F8  
                         __ptext36 578E                           __ptext28 4FFC  
                         __ptext53 5CEA                           __ptext45 4ADA  
                         __ptext37 5E86                           __ptext29 5DC2  
                         __ptext62 23B2                           __ptext54 5BF8  
                         __ptext46 5FA4                           __ptext38 5F16  
                         __ptext63 5EF6                           __ptext55 5F78  
                         __ptext47 5DF4                           __ptext39 5AD0  
                         __ptext64 2A56                           __ptext56 5F8E  
                         __ptext48 5E26                           __ptext65 5F4A  
                         __ptext57 543C                           __ptext49 50F4  
                         __ptext58 1C12                           __ptext59 5EAE  
                     _RXF2SIDLbits 000F09                           __powers_ FD93  
                     _RXF3SIDLbits 000F0D                   __size_of_sprintf 090C  
                     _RXF4SIDLbits 000F11                       _RXF5SIDLbits 000F15  
         CANsendMessage@dataLength 0078                      __size_of_main 07DC  
                    __size_of_itoa 004C                      __size_of_utoa 00C4  
                ?i2_CANsendMessage 003A               CANreceiveMessage@msg 003A  
            LCD_shift_cursor@shift 007F                i2_CANisTxReady$3251 003A  
                     _TXB0SIDLbits 000F42                  Joystick_Polling@i 0072  
               ??i2_CANsendMessage 0042                       _TXB1SIDLbits 000F32  
         __end_of_Joystick_Polling 5C3A                       _TXB2SIDLbits 000F22  
        __size_of_CANOperationMode 0018                      ?_CANisRxReady 0029  
                    ?_CANisTxReady 0029           __end_of_LCD_write_string 5EAE  
                      _RXB0DLCbits 000F65              ___flmul@f3_as_product 008A  
                      _RXB1DLCbits 000F55                       _RXM0SIDLbits 000F19  
                      _RXB0CONbits 000F60                         _LCD_cursor 5DF4  
                      _RXB1CONbits 000F50                  _CANreceiveMessage 2A56  
                     _RXM1SIDLbits 000F1D                         _INTCONbits 000FF2  
                     _set_steering 0011                   ??_CANsendMessage 007A  
               ?_CANreceiveMessage 003A                           itoa@base 0086  
                         isdigit@c 0074                        _low_battery 0256  
                         scale@scl 0098           CANsendMessage@identifier 0072  
                     _time_counter 0005                           intlevel1 0000  
                         intlevel2 0000                          sprintf@ap 013C  
                 __tdiv_to_l_@exp1 0082                          sprintf@sp 00B3  
                 __tdiv_to_l_@cntr 0081                   CANSetFilter@tamp 007C  
                 __tdiv_to_l_@quot 007D                   CANSetFilter@type 0076  
              ??_CANreceiveMessage 003C                   ___lwmod@dividend 0072  
                 ___lldiv@dividend 0072                        _TXB0DLCbits 000F45  
                      _right_speed 000D                        _TXB1DLCbits 000F35  
                      _TXB0CONbits 000F40                        _TXB2DLCbits 000F25  
                      _TXB1CONbits 000F30                        _TXB2CONbits 000F20  
                  _display_refresh 0255                   ??i2_CANisTxReady 003A  
             CANOperationMode@mode 0072                     ??_CANisRxReady 003A  
                      ?_CANSetMask 0072                     ??_CANisTxReady 0072  
                     ?__tdiv_to_l_ 0072          __end_of_CANreceiveMessage 2F84  
                         utoa@base 007D                           sprintf@c 0150  
                         sprintf@f 00B5                   ___lldiv@quotient 007A  
                  ___lwmod@divisor 0074    LCD_shift_cursor@number_of_shift 007E  
                  ___lwmod@counter 0076                 _PWR_Button_Polling 5F62  
                    _collision_msg 0254                       ___fladd@exp1 00A8  
                     ___fladd@exp2 00A7                       ___fladd@sign 00A6  
            __end_of_CANInitialize 4456                ?_PWR_Button_Polling 0029  
                     _power_switch 0259  
