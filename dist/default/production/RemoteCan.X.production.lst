

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun May 01 15:21:51 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79  0000                     
    80                           	psect	idataBANK0
    81  01634E                     __pidataBANK0:
    82                           	opt stack 0
    83                           
    84                           ;initializer for _delay_quartz_frequency_value
    85  01634E  10                 	db	16
    86                           
    87                           	psect	mediumconst
    88  00FE74                     __pmediumconst:
    89                           	opt stack 0
    90  00FE74  00                 	db	0
    91  00FE75                     __npowers_:
    92                           	opt stack 0
    93  00FE75  0000               	dw	0
    94  00FE77  3F80               	dw	16256
    95  00FE79  CCCD               	dw	52429
    96  00FE7B  3DCC               	dw	15820
    97  00FE7D  D70A               	dw	55050
    98  00FE7F  3C23               	dw	15395
    99  00FE81  126F               	dw	4719
   100  00FE83  3A83               	dw	14979
   101  00FE85  B717               	dw	46871
   102  00FE87  38D1               	dw	14545
   103  00FE89  C5AC               	dw	50604
   104  00FE8B  3727               	dw	14119
   105  00FE8D  37BD               	dw	14269
   106  00FE8F  3586               	dw	13702
   107  00FE91  BF95               	dw	49045
   108  00FE93  33D6               	dw	13270
   109  00FE95  CC77               	dw	52343
   110  00FE97  322B               	dw	12843
   111  00FE99  705F               	dw	28767
   112  00FE9B  3089               	dw	12425
   113  00FE9D  E6FF               	dw	59135
   114  00FE9F  2EDB               	dw	11995
   115  00FEA1  E508               	dw	58632
   116  00FEA3  1E3C               	dw	7740
   117  00FEA5  4260               	dw	16992
   118  00FEA7  0DA2               	dw	3490
   119  00FEA9                     __end_of__npowers_:
   120                           	opt stack 0
   121  00FEA9                     __powers_:
   122                           	opt stack 0
   123  00FEA9  0000               	dw	0
   124  00FEAB  3F80               	dw	16256
   125  00FEAD  0000               	dw	0
   126  00FEAF  4120               	dw	16672
   127  00FEB1  0000               	dw	0
   128  00FEB3  42C8               	dw	17096
   129  00FEB5  0000               	dw	0
   130  00FEB7  447A               	dw	17530
   131  00FEB9  4000               	dw	16384
   132  00FEBB  461C               	dw	17948
   133  00FEBD  5000               	dw	20480
   134  00FEBF  47C3               	dw	18371
   135  00FEC1  2400               	dw	9216
   136  00FEC3  4974               	dw	18804
   137  00FEC5  9680               	dw	38528
   138  00FEC7  4B18               	dw	19224
   139  00FEC9  BC20               	dw	48160
   140  00FECB  4CBE               	dw	19646
   141  00FECD  6B28               	dw	27432
   142  00FECF  4E6E               	dw	20078
   143  00FED1  02F9               	dw	761
   144  00FED3  5015               	dw	20501
   145  00FED5  78EC               	dw	30956
   146  00FED7  60AD               	dw	24749
   147  00FED9  F2CA               	dw	62154
   148  00FEDB  7149               	dw	29001
   149  00FEDD                     __end_of__powers_:
   150                           	opt stack 0
   151  00FEDD                     _dpowers:
   152                           	opt stack 0
   153  00FEDD  0001               	dw	1
   154  00FEDF  0000               	dw	0
   155  00FEE1  000A               	dw	10
   156  00FEE3  0000               	dw	0
   157  00FEE5  0064               	dw	100
   158  00FEE7  0000               	dw	0
   159  00FEE9  03E8               	dw	1000
   160  00FEEB  0000               	dw	0
   161  00FEED  2710               	dw	10000
   162  00FEEF  0000               	dw	0
   163  00FEF1  86A0               	dw	34464
   164  00FEF3  0001               	dw	1
   165  00FEF5  4240               	dw	16960
   166  00FEF7  000F               	dw	15
   167  00FEF9  9680               	dw	38528
   168  00FEFB  0098               	dw	152
   169  00FEFD  E100               	dw	57600
   170  00FEFF  05F5               	dw	1525
   171  00FF01  CA00               	dw	51712
   172  00FF03  3B9A               	dw	15258
   173  00FF05                     __end_of_dpowers:
   174                           	opt stack 0
   175  0000                     _RXB1CON	set	3920
   176  0000                     _RXB1CONbits	set	3920
   177  0000                     _RXB1D0	set	3926
   178  0000                     _RXB1D1	set	3927
   179  0000                     _RXB1D2	set	3928
   180  0000                     _RXB1D3	set	3929
   181  0000                     _RXB1D4	set	3930
   182  0000                     _RXB1D5	set	3931
   183  0000                     _RXB1D6	set	3932
   184  0000                     _RXB1D7	set	3933
   185  0000                     _RXB1DLC	set	3925
   186  0000                     _RXB1DLCbits	set	3925
   187  0000                     _RXB1EIDH	set	3923
   188  0000                     _RXB1EIDL	set	3924
   189  0000                     _RXB1SIDH	set	3921
   190  0000                     _RXB1SIDL	set	3922
   191  0000                     _RXB1SIDLbits	set	3922
   192  0000                     _RXF0EIDH	set	3842
   193  0000                     _RXF0EIDL	set	3843
   194  0000                     _RXF0SIDH	set	3840
   195  0000                     _RXF0SIDL	set	3841
   196  0000                     _RXF0SIDLbits	set	3841
   197  0000                     _RXF1EIDH	set	3846
   198  0000                     _RXF1EIDL	set	3847
   199  0000                     _RXF1SIDH	set	3844
   200  0000                     _RXF1SIDL	set	3845
   201  0000                     _RXF1SIDLbits	set	3845
   202  0000                     _RXF2EIDH	set	3850
   203  0000                     _RXF2EIDL	set	3851
   204  0000                     _RXF2SIDH	set	3848
   205  0000                     _RXF2SIDL	set	3849
   206  0000                     _RXF2SIDLbits	set	3849
   207  0000                     _RXF3EIDH	set	3854
   208  0000                     _RXF3EIDL	set	3855
   209  0000                     _RXF3SIDH	set	3852
   210  0000                     _RXF3SIDL	set	3853
   211  0000                     _RXF3SIDLbits	set	3853
   212  0000                     _RXF4EIDH	set	3858
   213  0000                     _RXF4EIDL	set	3859
   214  0000                     _RXF4SIDH	set	3856
   215  0000                     _RXF4SIDL	set	3857
   216  0000                     _RXF4SIDLbits	set	3857
   217  0000                     _RXF5EIDH	set	3862
   218  0000                     _RXF5EIDL	set	3863
   219  0000                     _RXF5SIDH	set	3860
   220  0000                     _RXF5SIDL	set	3861
   221  0000                     _RXF5SIDLbits	set	3861
   222  0000                     _RXM0EIDH	set	3866
   223  0000                     _RXM0EIDL	set	3867
   224  0000                     _RXM0SIDH	set	3864
   225  0000                     _RXM0SIDL	set	3865
   226  0000                     _RXM0SIDLbits	set	3865
   227  0000                     _RXM1EIDH	set	3870
   228  0000                     _RXM1EIDL	set	3871
   229  0000                     _RXM1SIDH	set	3868
   230  0000                     _RXM1SIDL	set	3869
   231  0000                     _RXM1SIDLbits	set	3869
   232  0000                     _TXB0CONbits	set	3904
   233  0000                     _TXB0D0	set	3910
   234  0000                     _TXB0D1	set	3911
   235  0000                     _TXB0D2	set	3912
   236  0000                     _TXB0D3	set	3913
   237  0000                     _TXB0D4	set	3914
   238  0000                     _TXB0D5	set	3915
   239  0000                     _TXB0D6	set	3916
   240  0000                     _TXB0D7	set	3917
   241  0000                     _TXB0DLC	set	3909
   242  0000                     _TXB0DLCbits	set	3909
   243  0000                     _TXB0EIDH	set	3907
   244  0000                     _TXB0EIDL	set	3908
   245  0000                     _TXB0SIDH	set	3905
   246  0000                     _TXB0SIDL	set	3906
   247  0000                     _TXB0SIDLbits	set	3906
   248  0000                     _TXB1CONbits	set	3888
   249  0000                     _TXB1D0	set	3894
   250  0000                     _TXB1D1	set	3895
   251  0000                     _TXB1D2	set	3896
   252  0000                     _TXB1D3	set	3897
   253  0000                     _TXB1D4	set	3898
   254  0000                     _TXB1D5	set	3899
   255  0000                     _TXB1D6	set	3900
   256  0000                     _TXB1D7	set	3901
   257  0000                     _TXB1DLC	set	3893
   258  0000                     _TXB1DLCbits	set	3893
   259  0000                     _TXB1EIDH	set	3891
   260  0000                     _TXB1EIDL	set	3892
   261  0000                     _TXB1SIDH	set	3889
   262  0000                     _TXB1SIDL	set	3890
   263  0000                     _TXB1SIDLbits	set	3890
   264  0000                     _TXB2CONbits	set	3872
   265  0000                     _TXB2D0	set	3878
   266  0000                     _TXB2D1	set	3879
   267  0000                     _TXB2D2	set	3880
   268  0000                     _TXB2D3	set	3881
   269  0000                     _TXB2D4	set	3882
   270  0000                     _TXB2D5	set	3883
   271  0000                     _TXB2D6	set	3884
   272  0000                     _TXB2D7	set	3885
   273  0000                     _TXB2DLC	set	3877
   274  0000                     _TXB2DLCbits	set	3877
   275  0000                     _TXB2EIDH	set	3875
   276  0000                     _TXB2EIDL	set	3876
   277  0000                     _TXB2SIDH	set	3873
   278  0000                     _TXB2SIDL	set	3874
   279  0000                     _TXB2SIDLbits	set	3874
   280  0000                     _ADCON0bits	set	4034
   281  0000                     _ADCON1	set	4033
   282  0000                     _ADCON2bits	set	4032
   283  0000                     _ADRESH	set	4036
   284  0000                     _BRGCON1	set	3952
   285  0000                     _BRGCON2	set	3953
   286  0000                     _BRGCON2bits	set	3953
   287  0000                     _BRGCON3	set	3954
   288  0000                     _BRGCON3bits	set	3954
   289  0000                     _CANCON	set	3951
   290  0000                     _CANCONbits	set	3951
   291  0000                     _CANSTAT	set	3950
   292  0000                     _COMSTATbits	set	3956
   293  0000                     _INTCONbits	set	4082
   294  0000                     _IPR2bits	set	4002
   295  0000                     _IPR3bits	set	4005
   296  0000                     _LATA	set	3977
   297  0000                     _LATB	set	3978
   298  0000                     _LATC	set	3979
   299  0000                     _LATCbits	set	3979
   300  0000                     _LATD	set	3980
   301  0000                     _LATDbits	set	3980
   302  0000                     _LATE	set	3981
   303  0000                     _LATEbits	set	3981
   304  0000                     _PIE2bits	set	4000
   305  0000                     _PIE3bits	set	4003
   306  0000                     _PIR2bits	set	4001
   307  0000                     _PIR3bits	set	4004
   308  0000                     _PORTAbits	set	3968
   309  0000                     _PORTBbits	set	3969
   310  0000                     _PORTDbits	set	3971
   311  0000                     _RCONbits	set	4048
   312  0000                     _RXB0CON	set	3936
   313  0000                     _RXB0CONbits	set	3936
   314  0000                     _RXB0D0	set	3942
   315  0000                     _RXB0D1	set	3943
   316  0000                     _RXB0D2	set	3944
   317  0000                     _RXB0D3	set	3945
   318  0000                     _RXB0D4	set	3946
   319  0000                     _RXB0D5	set	3947
   320  0000                     _RXB0D6	set	3948
   321  0000                     _RXB0D7	set	3949
   322  0000                     _RXB0DLC	set	3941
   323  0000                     _RXB0DLCbits	set	3941
   324  0000                     _RXB0EIDH	set	3939
   325  0000                     _RXB0EIDL	set	3940
   326  0000                     _RXB0SIDH	set	3937
   327  0000                     _RXB0SIDL	set	3938
   328  0000                     _RXB0SIDLbits	set	3938
   329  0000                     _RXERRCNT	set	3957
   330  0000                     _T3CON	set	4017
   331  0000                     _TMR3H	set	4019
   332  0000                     _TMR3L	set	4018
   333  0000                     _TRISA	set	3986
   334  0000                     _TRISB	set	3987
   335  0000                     _TRISC	set	3988
   336  0000                     _TRISD	set	3989
   337  0000                     _TRISE	set	3990
   338  0000                     _TXERRCNT	set	3958
   339  00FF05                     STR_3:
   340  00FF05  20                 	db	32
   341  00FF06  20                 	db	32
   342  00FF07  50                 	db	80	;'P'
   343  00FF08  72                 	db	114	;'r'
   344  00FF09  65                 	db	101	;'e'
   345  00FF0A  73                 	db	115	;'s'
   346  00FF0B  73                 	db	115	;'s'
   347  00FF0C  20                 	db	32
   348  00FF0D  74                 	db	116	;'t'
   349  00FF0E  68                 	db	104	;'h'
   350  00FF0F  65                 	db	101	;'e'
   351  00FF10  20                 	db	32
   352  00FF11  62                 	db	98	;'b'
   353  00FF12  75                 	db	117	;'u'
   354  00FF13  74                 	db	116	;'t'
   355  00FF14  74                 	db	116	;'t'
   356  00FF15  6F                 	db	111	;'o'
   357  00FF16  6E                 	db	110	;'n'
   358  00FF17  20                 	db	32
   359  00FF18  20                 	db	32
   360  00FF19  00                 	db	0
   361  00FF1A                     STR_2:
   362  00FF1A  3D                 	db	61	;'='
   363  00FF1B  3D                 	db	61	;'='
   364  00FF1C  3E                 	db	62	;'>'
   365  00FF1D  20                 	db	32
   366  00FF1E  56                 	db	86	;'V'
   367  00FF1F  45                 	db	69	;'E'
   368  00FF20  48                 	db	72	;'H'
   369  00FF21  49                 	db	73	;'I'
   370  00FF22  43                 	db	67	;'C'
   371  00FF23  4C                 	db	76	;'L'
   372  00FF24  45                 	db	69	;'E'
   373  00FF25  20                 	db	32
   374  00FF26  20                 	db	32
   375  00FF27  4F                 	db	79	;'O'
   376  00FF28  46                 	db	70	;'F'
   377  00FF29  46                 	db	70	;'F'
   378  00FF2A  20                 	db	32
   379  00FF2B  3C                 	db	60	;'<'
   380  00FF2C  3D                 	db	61	;'='
   381  00FF2D  3D                 	db	61	;'='
   382  00FF2E  00                 	db	0
   383  00FF2F                     STR_6:
   384  00FF2F  3D                 	db	61	;'='
   385  00FF30  3D                 	db	61	;'='
   386  00FF31  3D                 	db	61	;'='
   387  00FF32  20                 	db	32
   388  00FF33  56                 	db	86	;'V'
   389  00FF34  45                 	db	69	;'E'
   390  00FF35  48                 	db	72	;'H'
   391  00FF36  49                 	db	73	;'I'
   392  00FF37  43                 	db	67	;'C'
   393  00FF38  4C                 	db	76	;'L'
   394  00FF39  45                 	db	69	;'E'
   395  00FF3A  20                 	db	32
   396  00FF3B  44                 	db	68	;'D'
   397  00FF3C  41                 	db	65	;'A'
   398  00FF3D  54                 	db	84	;'T'
   399  00FF3E  41                 	db	65	;'A'
   400  00FF3F  20                 	db	32
   401  00FF40  3D                 	db	61	;'='
   402  00FF41  3D                 	db	61	;'='
   403  00FF42  3D                 	db	61	;'='
   404  00FF43  00                 	db	0
   405  00FF44                     STR_1:
   406  00FF44  3D                 	db	61	;'='
   407  00FF45  3D                 	db	61	;'='
   408  00FF46  3D                 	db	61	;'='
   409  00FF47  3D                 	db	61	;'='
   410  00FF48  3D                 	db	61	;'='
   411  00FF49  3D                 	db	61	;'='
   412  00FF4A  3D                 	db	61	;'='
   413  00FF4B  3D                 	db	61	;'='
   414  00FF4C  3D                 	db	61	;'='
   415  00FF4D  3D                 	db	61	;'='
   416  00FF4E  3D                 	db	61	;'='
   417  00FF4F  3D                 	db	61	;'='
   418  00FF50  3D                 	db	61	;'='
   419  00FF51  3D                 	db	61	;'='
   420  00FF52  3D                 	db	61	;'='
   421  00FF53  3D                 	db	61	;'='
   422  00FF54  3D                 	db	61	;'='
   423  00FF55  3D                 	db	61	;'='
   424  00FF56  3D                 	db	61	;'='
   425  00FF57  3D                 	db	61	;'='
   426  00FF58  00                 	db	0
   427  00FF59                     STR_19:
   428  00FF59  3F                 	db	63	;'?'
   429  00FF5A  20                 	db	32
   430  00FF5B  20                 	db	32
   431  00FF5C  20                 	db	32
   432  00FF5D  20                 	db	32
   433  00FF5E  20                 	db	32
   434  00FF5F  50                 	db	80	;'P'
   435  00FF60  41                 	db	65	;'A'
   436  00FF61  52                 	db	82	;'R'
   437  00FF62  4B                 	db	75	;'K'
   438  00FF63  49                 	db	73	;'I'
   439  00FF64  4E                 	db	78	;'N'
   440  00FF65  47                 	db	71	;'G'
   441  00FF66  20                 	db	32
   442  00FF67  20                 	db	32
   443  00FF68  20                 	db	32
   444  00FF69  20                 	db	32
   445  00FF6A  20                 	db	32
   446  00FF6B  20                 	db	32
   447  00FF6C  3F                 	db	63	;'?'
   448  00FF6D  00                 	db	0
   449  00FF6E                     STR_20:
   450  00FF6E  3F                 	db	63	;'?'
   451  00FF6F  20                 	db	32
   452  00FF70  20                 	db	32
   453  00FF71  20                 	db	32
   454  00FF72  20                 	db	32
   455  00FF73  43                 	db	67	;'C'
   456  00FF74  4F                 	db	79	;'O'
   457  00FF75  4D                 	db	77	;'M'
   458  00FF76  50                 	db	80	;'P'
   459  00FF77  4C                 	db	76	;'L'
   460  00FF78  45                 	db	69	;'E'
   461  00FF79  54                 	db	84	;'T'
   462  00FF7A  45                 	db	69	;'E'
   463  00FF7B  44                 	db	68	;'D'
   464  00FF7C  21                 	db	33
   465  00FF7D  20                 	db	32
   466  00FF7E  20                 	db	32
   467  00FF7F  20                 	db	32
   468  00FF80  20                 	db	32
   469  00FF81  3F                 	db	63	;'?'
   470  00FF82  00                 	db	0
   471  00FF83                     STR_18:
   472  00FF83  3F                 	db	63	;'?'
   473  00FF84  3F                 	db	63	;'?'
   474  00FF85  3F                 	db	63	;'?'
   475  00FF86  3F                 	db	63	;'?'
   476  00FF87  3F                 	db	63	;'?'
   477  00FF88  3F                 	db	63	;'?'
   478  00FF89  3F                 	db	63	;'?'
   479  00FF8A  3F                 	db	63	;'?'
   480  00FF8B  3F                 	db	63	;'?'
   481  00FF8C  3F                 	db	63	;'?'
   482  00FF8D  3F                 	db	63	;'?'
   483  00FF8E  3F                 	db	63	;'?'
   484  00FF8F  3F                 	db	63	;'?'
   485  00FF90  3F                 	db	63	;'?'
   486  00FF91  3F                 	db	63	;'?'
   487  00FF92  3F                 	db	63	;'?'
   488  00FF93  3F                 	db	63	;'?'
   489  00FF94  3F                 	db	63	;'?'
   490  00FF95  3F                 	db	63	;'?'
   491  00FF96  3F                 	db	63	;'?'
   492  00FF97  00                 	db	0
   493  00FF98                     STR_8:
   494  00FF98  53                 	db	83	;'S'
   495  00FF99  70                 	db	112	;'p'
   496  00FF9A  65                 	db	101	;'e'
   497  00FF9B  65                 	db	101	;'e'
   498  00FF9C  64                 	db	100	;'d'
   499  00FF9D  3A                 	db	58	;':'
   500  00FF9E  20                 	db	32
   501  00FF9F  30                 	db	48	;'0'
   502  00FFA0  2E                 	db	46
   503  00FFA1  30                 	db	48	;'0'
   504  00FFA2  30                 	db	48	;'0'
   505  00FFA3  20                 	db	32
   506  00FFA4  4B                 	db	75	;'K'
   507  00FFA5  6D                 	db	109	;'m'
   508  00FFA6  2F                 	db	47
   509  00FFA7  68                 	db	104	;'h'
   510  00FFA8  00                 	db	0
   511  00FFA9                     STR_9:
   512  00FFA9  50                 	db	80	;'P'
   513  00FFAA  61                 	db	97	;'a'
   514  00FFAB  72                 	db	114	;'r'
   515  00FFAC  6B                 	db	107	;'k'
   516  00FFAD  20                 	db	32
   517  00FFAE  61                 	db	97	;'a'
   518  00FFAF  73                 	db	115	;'s'
   519  00FFB0  73                 	db	115	;'s'
   520  00FFB1  69                 	db	105	;'i'
   521  00FFB2  73                 	db	115	;'s'
   522  00FFB3  74                 	db	116	;'t'
   523  00FFB4  3A                 	db	58	;':'
   524  00FFB5  20                 	db	32
   525  00FFB6  00                 	db	0
   526  00FFB7                     STR_7:
   527  00FFB7  44                 	db	68	;'D'
   528  00FFB8  69                 	db	105	;'i'
   529  00FFB9  72                 	db	114	;'r'
   530  00FFBA  65                 	db	101	;'e'
   531  00FFBB  63                 	db	99	;'c'
   532  00FFBC  74                 	db	116	;'t'
   533  00FFBD  69                 	db	105	;'i'
   534  00FFBE  6F                 	db	111	;'o'
   535  00FFBF  6E                 	db	110	;'n'
   536  00FFC0  3A                 	db	58	;':'
   537  00FFC1  20                 	db	32
   538  00FFC2  00                 	db	0
   539  00FFC3                     STR_14:
   540  00FFC3  4F                 	db	79	;'O'
   541  00FFC4  46                 	db	70	;'F'
   542  00FFC5  46                 	db	70	;'F'
   543  00FFC6  20                 	db	32
   544  00FFC7  20                 	db	32
   545  00FFC8  20                 	db	32
   546  00FFC9  20                 	db	32
   547  00FFCA  00                 	db	0
   548  00FFCB                     STR_16:
   549  00FFCB  46                 	db	70	;'F'
   550  00FFCC  4F                 	db	79	;'O'
   551  00FFCD  55                 	db	85	;'U'
   552  00FFCE  4E                 	db	78	;'N'
   553  00FFCF  44                 	db	68	;'D'
   554  00FFD0  21                 	db	33
   555  00FFD1  20                 	db	32
   556  00FFD2  00                 	db	0
   557  00FFD3                     STR_15:
   558  00FFD3  53                 	db	83	;'S'
   559  00FFD4  45                 	db	69	;'E'
   560  00FFD5  41                 	db	65	;'A'
   561  00FFD6  52                 	db	82	;'R'
   562  00FFD7  43                 	db	67	;'C'
   563  00FFD8  48                 	db	72	;'H'
   564  00FFD9  20                 	db	32
   565  00FFDA  00                 	db	0
   566  00FFDB                     STR_17:
   567  00FFDB  50                 	db	80	;'P'
   568  00FFDC  41                 	db	65	;'A'
   569  00FFDD  52                 	db	82	;'R'
   570  00FFDE  4B                 	db	75	;'K'
   571  00FFDF  49                 	db	73	;'I'
   572  00FFE0  4E                 	db	78	;'N'
   573  00FFE1  47                 	db	71	;'G'
   574  00FFE2  00                 	db	0
   575  00FFE3                     STR_10:
   576  00FFE3  44                 	db	68	;'D'
   577  00FFE4  61                 	db	97	;'a'
   578  00FFE5  74                 	db	116	;'t'
   579  00FFE6  61                 	db	97	;'a'
   580  00FFE7  3A                 	db	58	;':'
   581  00FFE8  20                 	db	32
   582  00FFE9  00                 	db	0
   583  00FFEA                     STR_13:
   584  00FFEA  50                 	db	80	;'P'
   585  00FFEB  20                 	db	32
   586  00FFEC  20                 	db	32
   587  00FFED  20                 	db	32
   588  00FFEE  00                 	db	0
   589  00FFEF                     STR_11:
   590  00FFEF  46                 	db	70	;'F'
   591  00FFF0  57                 	db	87	;'W'
   592  00FFF1  44                 	db	68	;'D'
   593  00FFF2  20                 	db	32
   594  00FFF3  00                 	db	0
   595  00FFF4                     STR_12:
   596  00FFF4  42                 	db	66	;'B'
   597  00FFF5  4B                 	db	75	;'K'
   598  00FFF6  57                 	db	87	;'W'
   599  00FFF7  44                 	db	68	;'D'
   600  00FFF8  00                 	db	0
   601  00FFF9                     STR_5:
   602  00FFF9  25                 	db	37
   603  00FFFA  2E                 	db	46
   604  00FFFB  32                 	db	50	;'2'
   605  00FFFC  66                 	db	102	;'f'
   606  00FFFD  00                 	db	0
   607  0000                     
   608                           ; #config settings
   609  00FFFE  00                 	db	0	; dummy byte at the end
   610  0000                     
   611                           	psect	cinit
   612  016036                     __pcinit:
   613                           	opt stack 0
   614  016036                     start_initialization:
   615                           	opt stack 0
   616  016036                     __initialization:
   617                           	opt stack 0
   618                           
   619                           ; Clear objects allocated to BANK1 (48 bytes)
   620  016036  EE01  F000         	lfsr	0,__pbssBANK1
   621  01603A  0E30               	movlw	48
   622  01603C                     clear_0:
   623  01603C  6AEE               	clrf	postinc0,c
   624  01603E  06E8               	decf	wreg,f,c
   625  016040  E1FD               	bnz	clear_0
   626                           
   627                           ; Clear objects allocated to BANK0 (32 bytes)
   628  016042  EE00  F0CD         	lfsr	0,__pbssBANK0
   629  016046  0E20               	movlw	32
   630  016048                     clear_1:
   631  016048  6AEE               	clrf	postinc0,c
   632  01604A  06E8               	decf	wreg,f,c
   633  01604C  E1FD               	bnz	clear_1
   634                           
   635                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   636  01604E  6A4D               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   637  016050  6A4C               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   638                           
   639                           ; Clear objects allocated to COMRAM (42 bytes)
   640  016052  EE00  F001         	lfsr	0,__pbssCOMRAM
   641  016056  0E2A               	movlw	42
   642  016058                     clear_2:
   643  016058  6AEE               	clrf	postinc0,c
   644  01605A  06E8               	decf	wreg,f,c
   645  01605C  E1FD               	bnz	clear_2
   646                           
   647                           ; Initialize objects allocated to BANK0 (1 bytes)
   648                           ; load TBLPTR registers with __pidataBANK0
   649  01605E  0E4E               	movlw	low __pidataBANK0
   650  016060  6EF6               	movwf	tblptrl,c
   651  016062  0E63               	movlw	high __pidataBANK0
   652  016064  6EF7               	movwf	tblptrh,c
   653  016066  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   654  016068  6EF8               	movwf	tblptru,c
   655  01606A  0009               	tblrd		*+	;fetch initializer
   656  01606C  CFF5 F0ED          	movff	tablat,__pdataBANK0
   657  016070                     end_of_initialization:
   658                           	opt stack 0
   659  016070                     __end_of__initialization:
   660                           	opt stack 0
   661  016070  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   662  016072  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   663  016074  0100               	movlb	0
   664  016076  EF93  F08D         	goto	_main	;jump to C main() function
   665                           tblptru	equ	0xFF8
   666                           tblptrh	equ	0xFF7
   667                           tblptrl	equ	0xFF6
   668                           tablat	equ	0xFF5
   669                           postinc0	equ	0xFEE
   670                           wreg	equ	0xFE8
   671                           
   672                           	psect	bitbssCOMRAM
   673  000260                     __pbitbssCOMRAM:
   674                           	opt stack 0
   675  000260                     _AbsFlag:
   676                           	opt stack 0
   677  000260                     	ds	1
   678  000261                     _F1_switch:
   679                           	opt stack 0
   680  000261                     	ds	1
   681  000262                     _F2_switch:
   682                           	opt stack 0
   683  000262                     	ds	1
   684  000263                     _MotoreFlag:
   685                           	opt stack 0
   686  000263                     	ds	1
   687  000264                     _RTR_Flag:
   688                           	opt stack 0
   689  000264                     	ds	1
   690  000265                     _SterzoFlag:
   691                           	opt stack 0
   692  000265                     	ds	1
   693  000266                     _display_refresh:
   694                           	opt stack 0
   695  000266                     	ds	1
   696  000267                     _newMessageCan:
   697                           	opt stack 0
   698  000267                     	ds	1
   699  000268                     _power_switch:
   700                           	opt stack 0
   701  000268                     	ds	1
   702  000269                     _space_available:
   703                           	opt stack 0
   704  000269                     	ds	1
   705  00026A                     _steering_correction_dir:
   706                           	opt stack 0
   707  00026A                     	ds	1
   708  00026B                     _w:
   709                           	opt stack 0
   710  00026B                     	ds	1
   711  00026C                     _wait_low_1:
   712                           	opt stack 0
   713  00026C                     	ds	1
   714  00026D                     _wait_low_2:
   715                           	opt stack 0
   716  00026D                     	ds	1
   717  00026E                     _wait_low_3:
   718                           	opt stack 0
   719  00026E                     	ds	1
   720  00026F                     _y:
   721                           	opt stack 0
   722  00026F                     	ds	1
   723                           tblptru	equ	0xFF8
   724                           tblptrh	equ	0xFF7
   725                           tblptrl	equ	0xFF6
   726                           tablat	equ	0xFF5
   727                           postinc0	equ	0xFEE
   728                           wreg	equ	0xFE8
   729                           
   730                           	psect	bssCOMRAM
   731  000001                     __pbssCOMRAM:
   732                           	opt stack 0
   733  000001                     _actual_speed_kmh:
   734                           	opt stack 0
   735  000001                     	ds	4
   736  000005                     _id:
   737                           	opt stack 0
   738  000005                     	ds	4
   739  000009                     _pr_time_2:
   740                           	opt stack 0
   741  000009                     	ds	4
   742  00000D                     _pr_time_3:
   743                           	opt stack 0
   744  00000D                     	ds	4
   745  000011                     _pr_time_4:
   746                           	opt stack 0
   747  000011                     	ds	4
   748  000015                     _pr_time_5:
   749                           	opt stack 0
   750  000015                     	ds	4
   751  000019                     _pr_time_6:
   752                           	opt stack 0
   753  000019                     	ds	4
   754  00001D                     _time_counter:
   755                           	opt stack 0
   756  00001D                     	ds	4
   757  000021                     _left_speed:
   758                           	opt stack 0
   759  000021                     	ds	2
   760  000023                     _right_speed:
   761                           	opt stack 0
   762  000023                     	ds	2
   763  000025                     _user_data:
   764                           	opt stack 0
   765  000025                     	ds	2
   766  000027                     _battery:
   767                           	opt stack 0
   768  000027                     	ds	1
   769  000028                     _parking_state:
   770                           	opt stack 0
   771  000028                     	ds	1
   772  000029                     _set_steering:
   773                           	opt stack 0
   774  000029                     	ds	1
   775  00002A                     _data:
   776                           	opt stack 0
   777  00002A                     	ds	1
   778                           tblptru	equ	0xFF8
   779                           tblptrh	equ	0xFF7
   780                           tblptrl	equ	0xFF6
   781                           tablat	equ	0xFF5
   782                           postinc0	equ	0xFEE
   783                           wreg	equ	0xFE8
   784                           
   785                           	psect	bssBANK0
   786  0000CD                     __pbssBANK0:
   787                           	opt stack 0
   788  0000CD                     _JoystickConstants:
   789                           	opt stack 0
   790  0000CD                     	ds	8
   791  0000D5                     _check:
   792                           	opt stack 0
   793  0000D5                     	ds	4
   794  0000D9                     _pr_time_1:
   795                           	opt stack 0
   796  0000D9                     	ds	4
   797  0000DD                     _JoystickValues:
   798                           	opt stack 0
   799  0000DD                     	ds	2
   800  0000DF                     _actual_speed:
   801                           	opt stack 0
   802  0000DF                     	ds	2
   803  0000E1                     _clock_counter_reference:
   804                           	opt stack 0
   805  0000E1                     	ds	2
   806  0000E3                     _set_speed:
   807                           	opt stack 0
   808  0000E3                     	ds	2
   809  0000E5                     _dir:
   810                           	opt stack 0
   811  0000E5                     	ds	1
   812  0000E6                     _steering_correction:
   813                           	opt stack 0
   814  0000E6                     	ds	1
   815  0000E7                     _switch_position:
   816                           	opt stack 0
   817  0000E7                     	ds	1
   818  0000E8                     _x:
   819                           	opt stack 0
   820  0000E8                     	ds	1
   821  0000E9                     _z:
   822                           	opt stack 0
   823  0000E9                     	ds	1
   824  0000EA                     _data_brake:
   825                           	opt stack 0
   826  0000EA                     	ds	1
   827  0000EB                     _data_speed:
   828                           	opt stack 0
   829  0000EB                     	ds	1
   830  0000EC                     _data_steering:
   831                           	opt stack 0
   832  0000EC                     	ds	1
   833                           tblptru	equ	0xFF8
   834                           tblptrh	equ	0xFF7
   835                           tblptrl	equ	0xFF6
   836                           tablat	equ	0xFF5
   837                           postinc0	equ	0xFEE
   838                           wreg	equ	0xFE8
   839                           
   840                           	psect	dataBANK0
   841  0000ED                     __pdataBANK0:
   842                           	opt stack 0
   843  0000ED                     _delay_quartz_frequency_value:
   844                           	opt stack 0
   845  0000ED                     	ds	1
   846                           tblptru	equ	0xFF8
   847                           tblptrh	equ	0xFF7
   848                           tblptrl	equ	0xFF6
   849                           tablat	equ	0xFF5
   850                           postinc0	equ	0xFEE
   851                           wreg	equ	0xFE8
   852                           
   853                           	psect	bssBANK1
   854  000100                     __pbssBANK1:
   855                           	opt stack 0
   856  000100                     _data_speed_rx:
   857                           	opt stack 0
   858  000100                     	ds	7
   859  000107                     LCD_write_integer@F17272:
   860                           	opt stack 0
   861  000107                     	ds	6
   862  00010D                     _msg:
   863                           	opt stack 0
   864  00010D                     	ds	15
   865  00011C                     _str:
   866                           	opt stack 0
   867  00011C                     	ds	12
   868  000128                     _park_assist_state:
   869                           	opt stack 0
   870  000128                     	ds	8
   871                           tblptru	equ	0xFF8
   872                           tblptrh	equ	0xFF7
   873                           tblptrl	equ	0xFF6
   874                           tablat	equ	0xFF5
   875                           postinc0	equ	0xFEE
   876                           wreg	equ	0xFE8
   877                           
   878                           	psect	cstackBANK1
   879  000130                     __pcstackBANK1:
   880                           	opt stack 0
   881  000130                     _sprintf$4229:
   882                           	opt stack 0
   883                           
   884                           ; 4 bytes @ 0x0
   885  000130                     	ds	4
   886  000134                     sprintf@ap:
   887                           	opt stack 0
   888                           
   889                           ; 2 bytes @ 0x4
   890  000134                     	ds	2
   891  000136                     sprintf@flag:
   892                           	opt stack 0
   893                           
   894                           ; 2 bytes @ 0x6
   895  000136                     	ds	2
   896  000138                     sprintf@val:
   897                           	opt stack 0
   898                           
   899                           ; 4 bytes @ 0x8
   900  000138                     	ds	4
   901  00013C                     sprintf@exp:
   902                           	opt stack 0
   903                           
   904                           ; 2 bytes @ 0xC
   905  00013C                     	ds	2
   906  00013E                     sprintf@tmpval:
   907                           	opt stack 0
   908                           
   909                           ; 4 bytes @ 0xE
   910  00013E                     	ds	4
   911  000142                     sprintf@prec:
   912                           	opt stack 0
   913                           
   914                           ; 2 bytes @ 0x12
   915  000142                     	ds	2
   916  000144                     sprintf@fval:
   917                           	opt stack 0
   918                           
   919                           ; 4 bytes @ 0x14
   920  000144                     	ds	4
   921  000148                     sprintf@c:
   922                           	opt stack 0
   923                           
   924                           ; 1 bytes @ 0x18
   925  000148                     	ds	1
   926  000149                     ??_main:
   927                           
   928                           ; 0 bytes @ 0x19
   929  000149                     	ds	8
   930                           tblptru	equ	0xFF8
   931                           tblptrh	equ	0xFF7
   932                           tblptrl	equ	0xFF6
   933                           tablat	equ	0xFF5
   934                           postinc0	equ	0xFEE
   935                           wreg	equ	0xFE8
   936                           
   937                           	psect	cstackBANK0
   938  000060                     __pcstackBANK0:
   939                           	opt stack 0
   940  000060                     ??_ISR_alta:
   941                           
   942                           ; 0 bytes @ 0x0
   943  000060                     	ds	16
   944  000070                     ISR_alta@i:
   945                           	opt stack 0
   946                           
   947                           ; 1 bytes @ 0x10
   948  000070                     	ds	1
   949  000071                     ??_Joystick_Polling:
   950  000071                     ??_CAN_Rx:
   951  000071                     ??_isdigit:
   952  000071                     ?___wmul:
   953                           	opt stack 0
   954  000071                     ?___awmod:
   955                           	opt stack 0
   956  000071                     ?___lwdiv:
   957                           	opt stack 0
   958  000071                     ?___lwmod:
   959                           	opt stack 0
   960  000071                     ?__tdiv_to_l_:
   961                           	opt stack 0
   962  000071                     ?__div_to_l_:
   963                           	opt stack 0
   964  000071                     ?___lldiv:
   965                           	opt stack 0
   966  000071                     ?___llmod:
   967                           	opt stack 0
   968  000071                     ?___xxtofl:
   969                           	opt stack 0
   970  000071                     CANOperationMode@mode:
   971                           	opt stack 0
   972  000071                     _CANisTxReady$3239:
   973                           	opt stack 0
   974  000071                     delay_set_quartz@frequency:
   975                           	opt stack 0
   976  000071                     ___wmul@multiplier:
   977                           	opt stack 0
   978  000071                     ___awmod@dividend:
   979                           	opt stack 0
   980  000071                     ___lwdiv@dividend:
   981                           	opt stack 0
   982  000071                     ___lwmod@dividend:
   983                           	opt stack 0
   984  000071                     CANsendMessage@identifier:
   985                           	opt stack 0
   986  000071                     CANSetMask@mask:
   987                           	opt stack 0
   988  000071                     CANSetFilter@filter:
   989                           	opt stack 0
   990  000071                     __div_to_l_@f1:
   991                           	opt stack 0
   992  000071                     ___flge@ff1:
   993                           	opt stack 0
   994  000071                     __tdiv_to_l_@f1:
   995                           	opt stack 0
   996  000071                     ___lldiv@dividend:
   997                           	opt stack 0
   998  000071                     ___llmod@dividend:
   999                           	opt stack 0
  1000  000071                     ___xxtofl@val:
  1001                           	opt stack 0
  1002                           
  1003                           ; 4 bytes @ 0x11
  1004  000071                     	ds	1
  1005  000072                     Joystick_Polling@i:
  1006                           	opt stack 0
  1007  000072                     _isdigit$3812:
  1008                           	opt stack 0
  1009                           
  1010                           ; 1 bytes @ 0x12
  1011  000072                     	ds	1
  1012  000073                     isdigit@c:
  1013                           	opt stack 0
  1014  000073                     ___wmul@multiplicand:
  1015                           	opt stack 0
  1016  000073                     ___awmod@divisor:
  1017                           	opt stack 0
  1018  000073                     ___lwdiv@divisor:
  1019                           	opt stack 0
  1020  000073                     ___lwmod@divisor:
  1021                           	opt stack 0
  1022                           
  1023                           ; 2 bytes @ 0x13
  1024  000073                     	ds	2
  1025  000075                     ??___xxtofl:
  1026  000075                     CANSetMask@type:
  1027                           	opt stack 0
  1028  000075                     CANSetFilter@type:
  1029                           	opt stack 0
  1030  000075                     ___awmod@counter:
  1031                           	opt stack 0
  1032  000075                     ___lwmod@counter:
  1033                           	opt stack 0
  1034  000075                     CANsendMessage@data:
  1035                           	opt stack 0
  1036  000075                     ___wmul@product:
  1037                           	opt stack 0
  1038  000075                     ___lwdiv@quotient:
  1039                           	opt stack 0
  1040  000075                     __div_to_l_@f2:
  1041                           	opt stack 0
  1042  000075                     ___flge@ff2:
  1043                           	opt stack 0
  1044  000075                     __tdiv_to_l_@f2:
  1045                           	opt stack 0
  1046  000075                     ___lldiv@divisor:
  1047                           	opt stack 0
  1048  000075                     ___llmod@divisor:
  1049                           	opt stack 0
  1050                           
  1051                           ; 4 bytes @ 0x15
  1052  000075                     	ds	1
  1053  000076                     ??_CANSetMask:
  1054  000076                     ??_CANSetFilter:
  1055  000076                     ___awmod@sign:
  1056                           	opt stack 0
  1057                           
  1058                           ; 1 bytes @ 0x16
  1059  000076                     	ds	1
  1060  000077                     ?___awdiv:
  1061                           	opt stack 0
  1062  000077                     CANsendMessage@dataLength:
  1063                           	opt stack 0
  1064  000077                     ___lwdiv@counter:
  1065                           	opt stack 0
  1066  000077                     delay_ms@value_ms:
  1067                           	opt stack 0
  1068  000077                     ___awdiv@dividend:
  1069                           	opt stack 0
  1070                           
  1071                           ; 2 bytes @ 0x17
  1072  000077                     	ds	1
  1073  000078                     CANsendMessage@flags:
  1074                           	opt stack 0
  1075  000078                     utoa@buf:
  1076                           	opt stack 0
  1077                           
  1078                           ; 2 bytes @ 0x18
  1079  000078                     	ds	1
  1080  000079                     ??__tdiv_to_l_:
  1081  000079                     ??_CANsendMessage:
  1082  000079                     ??___flge:
  1083  000079                     LCD_send_command@D2:
  1084                           	opt stack 0
  1085  000079                     ___llmod@counter:
  1086                           	opt stack 0
  1087  000079                     ___xxtofl@sign:
  1088                           	opt stack 0
  1089  000079                     ___awdiv@divisor:
  1090                           	opt stack 0
  1091  000079                     __div_to_l_@quot:
  1092                           	opt stack 0
  1093  000079                     ___lldiv@quotient:
  1094                           	opt stack 0
  1095                           
  1096                           ; 4 bytes @ 0x19
  1097  000079                     	ds	1
  1098  00007A                     CANSetMask@numBuffer:
  1099                           	opt stack 0
  1100  00007A                     CANSetFilter@numBuffer:
  1101                           	opt stack 0
  1102  00007A                     LCD_send_command@D1:
  1103                           	opt stack 0
  1104  00007A                     ___xxtofl@exp:
  1105                           	opt stack 0
  1106  00007A                     utoa@val:
  1107                           	opt stack 0
  1108                           
  1109                           ; 2 bytes @ 0x1A
  1110  00007A                     	ds	1
  1111  00007B                     LCD_send_command@D0:
  1112                           	opt stack 0
  1113  00007B                     ___awdiv@counter:
  1114                           	opt stack 0
  1115  00007B                     CANSetMask@tamp:
  1116                           	opt stack 0
  1117  00007B                     CANSetFilter@tamp:
  1118                           	opt stack 0
  1119  00007B                     ___xxtofl@arg:
  1120                           	opt stack 0
  1121                           
  1122                           ; 4 bytes @ 0x1B
  1123  00007B                     	ds	1
  1124  00007C                     LCD_send_command@D3:
  1125                           	opt stack 0
  1126  00007C                     ___awdiv@sign:
  1127                           	opt stack 0
  1128  00007C                     utoa@base:
  1129                           	opt stack 0
  1130  00007C                     __tdiv_to_l_@quot:
  1131                           	opt stack 0
  1132                           
  1133                           ; 4 bytes @ 0x1C
  1134  00007C                     	ds	1
  1135  00007D                     LCD_shift_cursor@number_of_shift:
  1136                           	opt stack 0
  1137  00007D                     LCD_goto_line@line:
  1138                           	opt stack 0
  1139  00007D                     LCD_write_char@D3:
  1140                           	opt stack 0
  1141  00007D                     LCD_cursor@blinking:
  1142                           	opt stack 0
  1143  00007D                     __div_to_l_@cntr:
  1144                           	opt stack 0
  1145  00007D                     ___lldiv@counter:
  1146                           	opt stack 0
  1147  00007D                     ___awdiv@quotient:
  1148                           	opt stack 0
  1149  00007D                     CANsendMessage@tamp:
  1150                           	opt stack 0
  1151                           
  1152                           ; 4 bytes @ 0x1D
  1153  00007D                     	ds	1
  1154  00007E                     LCD_shift_cursor@shift:
  1155                           	opt stack 0
  1156  00007E                     LCD_write_char@D2:
  1157                           	opt stack 0
  1158  00007E                     LCD_cursor@active:
  1159                           	opt stack 0
  1160  00007E                     __div_to_l_@exp1:
  1161                           	opt stack 0
  1162  00007E                     utoa@v:
  1163                           	opt stack 0
  1164                           
  1165                           ; 2 bytes @ 0x1E
  1166  00007E                     	ds	1
  1167  00007F                     ?___fldiv:
  1168                           	opt stack 0
  1169  00007F                     ?___flmul:
  1170                           	opt stack 0
  1171  00007F                     CANInitialize@phaseSeg1:
  1172                           	opt stack 0
  1173  00007F                     LCD_shift_cursor@i:
  1174                           	opt stack 0
  1175  00007F                     LCD_write_char@D1:
  1176                           	opt stack 0
  1177  00007F                     LCD_initialize@quartz_frequency:
  1178                           	opt stack 0
  1179  00007F                     ___fldiv@b:
  1180                           	opt stack 0
  1181  00007F                     ___flmul@b:
  1182                           	opt stack 0
  1183                           
  1184                           ; 4 bytes @ 0x1F
  1185  00007F                     	ds	1
  1186  000080                     CANInitialize@phaseSeg2:
  1187                           	opt stack 0
  1188  000080                     LCD_goto_xy@y:
  1189                           	opt stack 0
  1190  000080                     LCD_write_char@D0:
  1191                           	opt stack 0
  1192  000080                     __tdiv_to_l_@cntr:
  1193                           	opt stack 0
  1194  000080                     utoa@c:
  1195                           	opt stack 0
  1196                           
  1197                           ; 1 bytes @ 0x20
  1198  000080                     	ds	1
  1199  000081                     CANInitialize@SJW:
  1200                           	opt stack 0
  1201  000081                     LCD_goto_xy@x:
  1202                           	opt stack 0
  1203  000081                     LCD_write_char@value:
  1204                           	opt stack 0
  1205  000081                     __tdiv_to_l_@exp1:
  1206                           	opt stack 0
  1207  000081                     itoa@buf:
  1208                           	opt stack 0
  1209                           
  1210                           ; 2 bytes @ 0x21
  1211  000081                     	ds	1
  1212  000082                     CANInitialize@BRP:
  1213                           	opt stack 0
  1214  000082                     LCD_write_message@buffer:
  1215                           	opt stack 0
  1216  000082                     LCD_write_string@buffer:
  1217                           	opt stack 0
  1218                           
  1219                           ; 2 bytes @ 0x22
  1220  000082                     	ds	1
  1221  000083                     CANInitialize@flags:
  1222                           	opt stack 0
  1223  000083                     itoa@val:
  1224                           	opt stack 0
  1225  000083                     ___fldiv@a:
  1226                           	opt stack 0
  1227  000083                     ___flmul@a:
  1228                           	opt stack 0
  1229                           
  1230                           ; 4 bytes @ 0x23
  1231  000083                     	ds	1
  1232  000084                     ??_CANInitialize:
  1233  000084                     
  1234                           ; 0 bytes @ 0x24
  1235  000084                     	ds	1
  1236  000085                     itoa@base:
  1237                           	opt stack 0
  1238                           
  1239                           ; 2 bytes @ 0x25
  1240  000085                     	ds	2
  1241  000087                     ??___fldiv:
  1242  000087                     ??___flmul:
  1243  000087                     itoa@cp:
  1244                           	opt stack 0
  1245                           
  1246                           ; 2 bytes @ 0x27
  1247  000087                     	ds	1
  1248  000088                     CANInitialize@propSeg:
  1249                           	opt stack 0
  1250                           
  1251                           ; 1 bytes @ 0x28
  1252  000088                     	ds	1
  1253  000089                     CANInitialize@FilterConfig1:
  1254                           	opt stack 0
  1255  000089                     LCD_write_integer@value:
  1256                           	opt stack 0
  1257                           
  1258                           ; 2 bytes @ 0x29
  1259  000089                     	ds	1
  1260  00008A                     CANInitialize@FilterConfig2:
  1261                           	opt stack 0
  1262                           
  1263                           ; 1 bytes @ 0x2A
  1264  00008A                     	ds	1
  1265  00008B                     LCD_write_integer@number_of_digits:
  1266                           	opt stack 0
  1267  00008B                     ___fldiv@sign:
  1268                           	opt stack 0
  1269  00008B                     ___flmul@sign:
  1270                           	opt stack 0
  1271                           
  1272                           ; 1 bytes @ 0x2B
  1273  00008B                     	ds	1
  1274  00008C                     LCD_write_integer@zero_cleaning:
  1275                           	opt stack 0
  1276  00008C                     ___flmul@aexp:
  1277                           	opt stack 0
  1278  00008C                     ___fldiv@rem:
  1279                           	opt stack 0
  1280                           
  1281                           ; 4 bytes @ 0x2C
  1282  00008C                     	ds	1
  1283  00008D                     ??_LCD_write_integer:
  1284  00008D                     ___flmul@grs:
  1285                           	opt stack 0
  1286                           
  1287                           ; 4 bytes @ 0x2D
  1288  00008D                     	ds	3
  1289  000090                     ___fldiv@new_exp:
  1290                           	opt stack 0
  1291                           
  1292                           ; 2 bytes @ 0x30
  1293  000090                     	ds	1
  1294  000091                     ___flmul@bexp:
  1295                           	opt stack 0
  1296                           
  1297                           ; 1 bytes @ 0x31
  1298  000091                     	ds	1
  1299  000092                     ___fldiv@grs:
  1300                           	opt stack 0
  1301  000092                     ___flmul@prod:
  1302                           	opt stack 0
  1303  000092                     LCD_write_integer@convertedInt:
  1304                           	opt stack 0
  1305                           
  1306                           ; 6 bytes @ 0x32
  1307  000092                     	ds	4
  1308  000096                     ___fldiv@bexp:
  1309                           	opt stack 0
  1310  000096                     ___flmul@temp:
  1311                           	opt stack 0
  1312                           
  1313                           ; 2 bytes @ 0x36
  1314  000096                     	ds	1
  1315  000097                     ___fldiv@aexp:
  1316                           	opt stack 0
  1317                           
  1318                           ; 1 bytes @ 0x37
  1319  000097                     	ds	1
  1320  000098                     ?_fround:
  1321                           	opt stack 0
  1322  000098                     ?_scale:
  1323                           	opt stack 0
  1324  000098                     ?___flneg:
  1325                           	opt stack 0
  1326  000098                     LCD_write_integer@index:
  1327                           	opt stack 0
  1328  000098                     ___flneg@f1:
  1329                           	opt stack 0
  1330                           
  1331                           ; 4 bytes @ 0x38
  1332  000098                     	ds	4
  1333  00009C                     _fround$4227:
  1334                           	opt stack 0
  1335  00009C                     _scale$4228:
  1336                           	opt stack 0
  1337                           
  1338                           ; 4 bytes @ 0x3C
  1339  00009C                     	ds	4
  1340  0000A0                     scale@scl:
  1341                           	opt stack 0
  1342  0000A0                     _fround$4226:
  1343                           	opt stack 0
  1344                           
  1345                           ; 4 bytes @ 0x40
  1346  0000A0                     	ds	4
  1347  0000A4                     fround@prec:
  1348                           	opt stack 0
  1349                           
  1350                           ; 1 bytes @ 0x44
  1351  0000A4                     	ds	1
  1352  0000A5                     ?___fladd:
  1353                           	opt stack 0
  1354  0000A5                     ___fladd@b:
  1355                           	opt stack 0
  1356                           
  1357                           ; 4 bytes @ 0x45
  1358  0000A5                     	ds	4
  1359  0000A9                     ___fladd@a:
  1360                           	opt stack 0
  1361                           
  1362                           ; 4 bytes @ 0x49
  1363  0000A9                     	ds	4
  1364  0000AD                     ??___fladd:
  1365                           
  1366                           ; 0 bytes @ 0x4D
  1367  0000AD                     	ds	8
  1368  0000B5                     ___fladd@signs:
  1369                           	opt stack 0
  1370                           
  1371                           ; 1 bytes @ 0x55
  1372  0000B5                     	ds	1
  1373  0000B6                     ___fladd@aexp:
  1374                           	opt stack 0
  1375                           
  1376                           ; 1 bytes @ 0x56
  1377  0000B6                     	ds	1
  1378  0000B7                     ___fladd@bexp:
  1379                           	opt stack 0
  1380                           
  1381                           ; 1 bytes @ 0x57
  1382  0000B7                     	ds	1
  1383  0000B8                     ___fladd@grs:
  1384                           	opt stack 0
  1385                           
  1386                           ; 1 bytes @ 0x58
  1387  0000B8                     	ds	1
  1388  0000B9                     ?___flsub:
  1389                           	opt stack 0
  1390  0000B9                     ?___fltol:
  1391                           	opt stack 0
  1392  0000B9                     ___fltol@f1:
  1393                           	opt stack 0
  1394  0000B9                     ___flsub@b:
  1395                           	opt stack 0
  1396                           
  1397                           ; 4 bytes @ 0x59
  1398  0000B9                     	ds	4
  1399  0000BD                     ??___fltol:
  1400  0000BD                     ___flsub@a:
  1401                           	opt stack 0
  1402                           
  1403                           ; 4 bytes @ 0x5D
  1404  0000BD                     	ds	4
  1405  0000C1                     ___fltol@sign1:
  1406                           	opt stack 0
  1407                           
  1408                           ; 1 bytes @ 0x61
  1409  0000C1                     	ds	1
  1410  0000C2                     ___fltol@exp1:
  1411                           	opt stack 0
  1412                           
  1413                           ; 1 bytes @ 0x62
  1414  0000C2                     	ds	1
  1415  0000C3                     ?_sprintf:
  1416                           	opt stack 0
  1417  0000C3                     sprintf@sp:
  1418                           	opt stack 0
  1419                           
  1420                           ; 2 bytes @ 0x63
  1421  0000C3                     	ds	2
  1422  0000C5                     sprintf@f:
  1423                           	opt stack 0
  1424                           
  1425                           ; 2 bytes @ 0x65
  1426  0000C5                     	ds	6
  1427  0000CB                     ??_sprintf:
  1428                           
  1429                           ; 0 bytes @ 0x6B
  1430  0000CB                     	ds	2
  1431  0000CD                     tblptru	equ	0xFF8
  1432                           tblptrh	equ	0xFF7
  1433                           tblptrl	equ	0xFF6
  1434                           tablat	equ	0xFF5
  1435                           postinc0	equ	0xFEE
  1436                           wreg	equ	0xFE8
  1437                           
  1438                           ; 0 bytes @ 0x6D
  1439                           
  1440                           	psect	cstackCOMRAM
  1441  00002B                     __pcstackCOMRAM:
  1442                           	opt stack 0
  1443  00002B                     ??_ISR_bassa:
  1444  00002B                     
  1445                           ; 1 bytes @ 0x0
  1446  00002B                     	ds	17
  1447  00003C                     _CANisRxReady$3241:
  1448                           	opt stack 0
  1449  00003C                     i2_CANisTxReady$3239:
  1450                           	opt stack 0
  1451  00003C                     CANreceiveMessage@msg:
  1452                           	opt stack 0
  1453  00003C                     i2CANsendMessage@identifier:
  1454                           	opt stack 0
  1455                           
  1456                           ; 4 bytes @ 0x11
  1457  00003C                     	ds	2
  1458  00003E                     ??_CANreceiveMessage:
  1459                           
  1460                           ; 0 bytes @ 0x13
  1461  00003E                     	ds	2
  1462  000040                     i2CANsendMessage@data:
  1463                           	opt stack 0
  1464                           
  1465                           ; 2 bytes @ 0x15
  1466  000040                     	ds	2
  1467  000042                     i2CANsendMessage@dataLength:
  1468                           	opt stack 0
  1469                           
  1470                           ; 1 bytes @ 0x17
  1471  000042                     	ds	1
  1472  000043                     i2CANsendMessage@flags:
  1473                           	opt stack 0
  1474                           
  1475                           ; 1 bytes @ 0x18
  1476  000043                     	ds	1
  1477  000044                     ??i2_CANsendMessage:
  1478                           
  1479                           ; 0 bytes @ 0x19
  1480  000044                     	ds	2
  1481  000046                     CANreceiveMessage@error:
  1482                           	opt stack 0
  1483                           
  1484                           ; 1 bytes @ 0x1B
  1485  000046                     	ds	1
  1486  000047                     CANreceiveMessage@tamp:
  1487                           	opt stack 0
  1488                           
  1489                           ; 1 bytes @ 0x1C
  1490  000047                     	ds	1
  1491  000048                     i2CANsendMessage@tamp:
  1492                           	opt stack 0
  1493                           
  1494                           ; 4 bytes @ 0x1D
  1495  000048                     	ds	4
  1496                           tblptru	equ	0xFF8
  1497                           tblptrh	equ	0xFF7
  1498                           tblptrl	equ	0xFF6
  1499                           tablat	equ	0xFF5
  1500                           postinc0	equ	0xFEE
  1501                           wreg	equ	0xFE8
  1502                           
  1503 ;;
  1504 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1505 ;;
  1506 ;; *************** function _main *****************
  1507 ;; Defined at:
  1508 ;;		line 178 in file "RemoteCan.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;		None
  1513 ;; Return value:  Size  Location     Type
  1514 ;;		None               void
  1515 ;; Registers used:
  1516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1524 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1525 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1526 ;;Total ram usage:        8 bytes
  1527 ;; Hardware stack levels required when called:   11
  1528 ;; This function calls:
  1529 ;;		_CAN_Rx
  1530 ;;		_CAN_Tx
  1531 ;;		_CANisTxReady
  1532 ;;		_CANsendMessage
  1533 ;;		_F1_Button_Polling
  1534 ;;		_F2_Button_Polling
  1535 ;;		_Joystick_Polling
  1536 ;;		_LCD_Handler
  1537 ;;		_LCD_Park
  1538 ;;		_LCD_goto_line
  1539 ;;		_LCD_initialize
  1540 ;;		_LCD_write_message
  1541 ;;		_PWR_Button_Polling
  1542 ;;		___fladd
  1543 ;;		___flmul
  1544 ;;		___flneg
  1545 ;;		___fltol
  1546 ;;		___xxtofl
  1547 ;;		_board_initialization
  1548 ;;		_delay_ms
  1549 ;; This function is called by:
  1550 ;;		Startup code after reset
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           	psect	text0
  1555  011B26                     __ptext0:
  1556                           	opt stack 0
  1557  011B26                     _main:
  1558                           	opt stack 20
  1559                           
  1560                           ;RemoteCan.c: 179: board_initialization();
  1561                           
  1562                           ;incstack = 0
  1563  011B26  ECAA  F0AD         	call	_board_initialization	;wreg free
  1564                           
  1565                           ;RemoteCan.c: 187: JoystickConstants[0] = 0.703;
  1566  011B2A  0ECF               	movlw	207
  1567  011B2C  0100               	movlb	0	; () banked
  1568  011B2E  6FCD               	movwf	_JoystickConstants& (0+255),b	;volatile
  1569  011B30  0EF7               	movlw	247
  1570  011B32  6FCE               	movwf	(_JoystickConstants+1)& (0+255),b	;volatile
  1571  011B34  0E33               	movlw	51
  1572  011B36  6FCF               	movwf	(_JoystickConstants+2)& (0+255),b	;volatile
  1573  011B38  0E3F               	movlw	63
  1574  011B3A  6FD0               	movwf	(_JoystickConstants+3)& (0+255),b	;volatile
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;RemoteCan.c: 188: JoystickConstants[1] = 15;
  1578  011B3C  0E00               	movlw	0
  1579  011B3E  0100               	movlb	0	; () banked
  1580  011B40  6FD1               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1581  011B42  0E00               	movlw	0
  1582  011B44  6FD2               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1583  011B46  0E70               	movlw	112
  1584  011B48  6FD3               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1585  011B4A  0E41               	movlw	65
  1586  011B4C  6FD4               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1587  011B4E                     l9462:
  1588                           
  1589                           ;RemoteCan.c: 193: PWR_Button_Polling();
  1590  011B4E  EC54  F0B1         	call	_PWR_Button_Polling	;wreg free
  1591                           
  1592                           ;RemoteCan.c: 194: F1_Button_Polling();
  1593  011B52  EC7E  F0B1         	call	_F1_Button_Polling	;wreg free
  1594                           
  1595                           ;RemoteCan.c: 195: F2_Button_Polling();
  1596  011B56  EC70  F0B1         	call	_F2_Button_Polling	;wreg free
  1597                           
  1598                           ;RemoteCan.c: 198: if (power_switch == 0) {
  1599  011B5A  B04D               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1600  011B5C  D09D               	goto	l791
  1601                           
  1602                           ;RemoteCan.c: 199: dir = 1;
  1603  011B5E  0E01               	movlw	1
  1604  011B60  0100               	movlb	0	; () banked
  1605  011B62  6FE5               	movwf	_dir& (0+255),b	;volatile
  1606                           
  1607                           ;RemoteCan.c: 200: set_speed = 0;
  1608  011B64  0E00               	movlw	0
  1609  011B66  0100               	movlb	0	; () banked
  1610  011B68  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  1611  011B6A  0E00               	movlw	0
  1612  011B6C  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  1613                           
  1614                           ;RemoteCan.c: 201: data_steering [0] = 90;
  1615  011B6E  0E5A               	movlw	90
  1616  011B70  0100               	movlb	0	; () banked
  1617  011B72  6FEC               	movwf	_data_steering& (0+255),b
  1618                           
  1619                           ;RemoteCan.c: 202: data_brake [0] = 0;
  1620  011B74  0E00               	movlw	0
  1621  011B76  0100               	movlb	0	; () banked
  1622  011B78  6FEA               	movwf	_data_brake& (0+255),b
  1623                           
  1624                           ;RemoteCan.c: 203: data_brake [1] = 1;
  1625  011B7A  0E01               	movlw	1
  1626  011B7C  0100               	movlb	0	; () banked
  1627  011B7E  6FEB               	movwf	(_data_brake+1)& (0+255),b
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;RemoteCan.c: 204: CAN_Tx();
  1631  011B80  ECF6  F0AC         	call	_CAN_Tx	;wreg free
  1632                           
  1633                           ;RemoteCan.c: 205: PORTDbits.RD6 = 0;
  1634  011B84  9C83               	bcf	3971,6,c	;volatile
  1635                           
  1636                           ;RemoteCan.c: 206: PORTDbits.RD5 = 0;
  1637  011B86  9A83               	bcf	3971,5,c	;volatile
  1638                           
  1639                           ;RemoteCan.c: 207: LCD_initialize(16);
  1640  011B88  0E10               	movlw	16
  1641  011B8A  EC27  F0AA         	call	_LCD_initialize
  1642                           
  1643                           ;RemoteCan.c: 208: LCD_goto_line(1);
  1644  011B8E  0E01               	movlw	1
  1645  011B90  EC64  F0AB         	call	_LCD_goto_line
  1646                           
  1647                           ;RemoteCan.c: 209: LCD_write_message("====================");
  1648  011B94  0E44               	movlw	low STR_1
  1649  011B96  0100               	movlb	0	; () banked
  1650  011B98  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  1651  011B9A  0EFF               	movlw	high STR_1
  1652  011B9C  0100               	movlb	0	; () banked
  1653  011B9E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1654  011BA0  ECAE  F0B0         	call	_LCD_write_message	;wreg free
  1655                           
  1656                           ;RemoteCan.c: 210: LCD_goto_line(2);
  1657  011BA4  0E02               	movlw	2
  1658  011BA6  EC64  F0AB         	call	_LCD_goto_line
  1659                           
  1660                           ;RemoteCan.c: 211: LCD_write_message("==> VEHICLE  OFF <==");
  1661  011BAA  0E1A               	movlw	low STR_2
  1662  011BAC  0100               	movlb	0	; () banked
  1663  011BAE  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  1664  011BB0  0EFF               	movlw	high STR_2
  1665  011BB2  0100               	movlb	0	; () banked
  1666  011BB4  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1667  011BB6  ECAE  F0B0         	call	_LCD_write_message	;wreg free
  1668                           
  1669                           ;RemoteCan.c: 212: LCD_goto_line(3);
  1670  011BBA  0E03               	movlw	3
  1671  011BBC  EC64  F0AB         	call	_LCD_goto_line
  1672                           
  1673                           ;RemoteCan.c: 213: LCD_write_message("  Press the button  ");
  1674  011BC0  0E05               	movlw	low STR_3
  1675  011BC2  0100               	movlb	0	; () banked
  1676  011BC4  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  1677  011BC6  0EFF               	movlw	high STR_3
  1678  011BC8  0100               	movlb	0	; () banked
  1679  011BCA  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1680  011BCC  ECAE  F0B0         	call	_LCD_write_message	;wreg free
  1681                           
  1682                           ;RemoteCan.c: 214: LCD_goto_line(4);
  1683  011BD0  0E04               	movlw	4
  1684  011BD2  EC64  F0AB         	call	_LCD_goto_line
  1685                           
  1686                           ;RemoteCan.c: 215: LCD_write_message("====================");
  1687  011BD6  0E44               	movlw	low STR_1
  1688  011BD8  0100               	movlb	0	; () banked
  1689  011BDA  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  1690  011BDC  0EFF               	movlw	high STR_1
  1691  011BDE  0100               	movlb	0	; () banked
  1692  011BE0  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  1693  011BE2  ECAE  F0B0         	call	_LCD_write_message	;wreg free
  1694                           
  1695                           ;RemoteCan.c: 216: while (power_switch == 0) {
  1696  011BE6  D054               	goto	l9506
  1697  011BE8                     l9496:
  1698                           
  1699                           ;RemoteCan.c: 217: if ((time_counter - pr_time_1) >= 30) {
  1700  011BE8  C0D9  F149         	movff	_pr_time_1,??_main	;volatile
  1701  011BEC  C0DA  F14A         	movff	_pr_time_1+1,??_main+1	;volatile
  1702  011BF0  C0DB  F14B         	movff	_pr_time_1+2,??_main+2	;volatile
  1703  011BF4  C0DC  F14C         	movff	_pr_time_1+3,??_main+3	;volatile
  1704  011BF8  0101               	movlb	1	; () banked
  1705  011BFA  1F49               	comf	??_main& (0+255),f,b
  1706  011BFC  1F4A               	comf	(??_main+1)& (0+255),f,b
  1707  011BFE  1F4B               	comf	(??_main+2)& (0+255),f,b
  1708  011C00  1F4C               	comf	(??_main+3)& (0+255),f,b
  1709  011C02  2B49               	incf	??_main& (0+255),f,b
  1710  011C04  0E00               	movlw	0
  1711  011C06  234A               	addwfc	(??_main+1)& (0+255),f,b
  1712  011C08  234B               	addwfc	(??_main+2)& (0+255),f,b
  1713  011C0A  234C               	addwfc	(??_main+3)& (0+255),f,b
  1714  011C0C  501D               	movf	_time_counter,w,c	;volatile
  1715  011C0E  0101               	movlb	1	; () banked
  1716  011C10  2549               	addwf	??_main& (0+255),w,b
  1717  011C12  0101               	movlb	1	; () banked
  1718  011C14  6F4D               	movwf	(??_main+4)& (0+255),b
  1719  011C16  501E               	movf	_time_counter+1,w,c	;volatile
  1720  011C18  0101               	movlb	1	; () banked
  1721  011C1A  214A               	addwfc	(??_main+1)& (0+255),w,b
  1722  011C1C  0101               	movlb	1	; () banked
  1723  011C1E  6F4E               	movwf	(??_main+5)& (0+255),b
  1724  011C20  501F               	movf	_time_counter+2,w,c	;volatile
  1725  011C22  0101               	movlb	1	; () banked
  1726  011C24  214B               	addwfc	(??_main+2)& (0+255),w,b
  1727  011C26  0101               	movlb	1	; () banked
  1728  011C28  6F4F               	movwf	(??_main+6)& (0+255),b
  1729  011C2A  5020               	movf	_time_counter+3,w,c	;volatile
  1730  011C2C  0101               	movlb	1	; () banked
  1731  011C2E  214C               	addwfc	(??_main+3)& (0+255),w,b
  1732  011C30  0101               	movlb	1	; () banked
  1733  011C32  6F50               	movwf	(??_main+7)& (0+255),b
  1734  011C34  0101               	movlb	1	; () banked
  1735  011C36  5150               	movf	(??_main+7)& (0+255),w,b
  1736  011C38  0101               	movlb	1	; () banked
  1737  011C3A  114F               	iorwf	(??_main+6)& (0+255),w,b
  1738  011C3C  0101               	movlb	1	; () banked
  1739  011C3E  114E               	iorwf	(??_main+5)& (0+255),w,b
  1740  011C40  E105               	bnz	u12830
  1741  011C42  0E1E               	movlw	30
  1742  011C44  0101               	movlb	1	; () banked
  1743  011C46  5D4D               	subwf	(??_main+4)& (0+255),w,b
  1744  011C48  A0D8               	btfss	status,0,c
  1745  011C4A  D019               	goto	l9502
  1746  011C4C                     u12830:
  1747                           
  1748                           ; BSR set to: 1
  1749                           ;RemoteCan.c: 218: pr_time_1 = time_counter;
  1750  011C4C  C01D  F0D9         	movff	_time_counter,_pr_time_1	;volatile
  1751  011C50  C01E  F0DA         	movff	_time_counter+1,_pr_time_1+1	;volatile
  1752  011C54  C01F  F0DB         	movff	_time_counter+2,_pr_time_1+2	;volatile
  1753  011C58  C020  F0DC         	movff	_time_counter+3,_pr_time_1+3	;volatile
  1754                           
  1755                           ; BSR set to: 1
  1756                           ;RemoteCan.c: 219: PORTDbits.RD7 = ~PORTDbits.RD7;
  1757  011C5C  AE83               	btfss	3971,7,c	;volatile
  1758  011C5E  D002               	goto	u12840
  1759  011C60  0E01               	movlw	1
  1760  011C62  D001               	goto	u12846
  1761  011C64                     u12840:
  1762  011C64  0E00               	movlw	0
  1763  011C66                     u12846:
  1764  011C66  0AFF               	xorlw	255
  1765  011C68  0101               	movlb	1	; () banked
  1766  011C6A  6F49               	movwf	??_main& (0+255),b
  1767  011C6C  0101               	movlb	1	; () banked
  1768  011C6E  3349               	rrcf	??_main& (0+255),f,b
  1769  011C70  3349               	rrcf	??_main& (0+255),f,b
  1770  011C72  5083               	movf	3971,w,c	;volatile
  1771  011C74  0101               	movlb	1	; () banked
  1772  011C76  1949               	xorwf	??_main& (0+255),w,b
  1773  011C78  0B7F               	andlw	-129
  1774  011C7A  1949               	xorwf	??_main& (0+255),w,b
  1775  011C7C  6E83               	movwf	3971,c	;volatile
  1776  011C7E                     l9502:
  1777                           
  1778                           ; BSR set to: 1
  1779                           ;RemoteCan.c: 220: }
  1780                           ;RemoteCan.c: 221: PWR_Button_Polling();
  1781  011C7E  EC54  F0B1         	call	_PWR_Button_Polling	;wreg free
  1782                           
  1783                           ;RemoteCan.c: 222: delay_ms(10);
  1784  011C82  0E00               	movlw	0
  1785  011C84  0100               	movlb	0	; () banked
  1786  011C86  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1787  011C88  0E0A               	movlw	10
  1788  011C8A  6F77               	movwf	delay_ms@value_ms& (0+255),b
  1789  011C8C  EC5A  F0B0         	call	_delay_ms	;wreg free
  1790  011C90                     l9506:
  1791  011C90  A04D               	btfss	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  1792  011C92  D7AA               	goto	l9496
  1793                           
  1794                           ;RemoteCan.c: 223: }
  1795                           ;RemoteCan.c: 224: PORTDbits.RD7 = 0;
  1796  011C94  9E83               	bcf	3971,7,c	;volatile
  1797                           
  1798                           ;RemoteCan.c: 225: display_refresh = 1;
  1799  011C96  8C4C               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  1800  011C98                     l791:
  1801                           
  1802                           ;RemoteCan.c: 226: }
  1803                           ;RemoteCan.c: 229: if (PORTAbits.RA2 == 1) {
  1804  011C98  A480               	btfss	3968,2,c	;volatile
  1805  011C9A  D004               	goto	l796
  1806                           
  1807                           ;RemoteCan.c: 230: switch_position = 0;
  1808  011C9C  0E00               	movlw	0
  1809  011C9E  0100               	movlb	0	; () banked
  1810  011CA0  6FE7               	movwf	_switch_position& (0+255),b	;volatile
  1811                           
  1812                           ;RemoteCan.c: 231: } else {
  1813  011CA2  D00D               	goto	l9514
  1814  011CA4                     l796:
  1815                           
  1816                           ;RemoteCan.c: 232: if (PORTAbits.RA3 == 0) {
  1817  011CA4  B680               	btfsc	3968,3,c	;volatile
  1818  011CA6  D005               	goto	l9512
  1819                           
  1820                           ;RemoteCan.c: 233: switch_position = 1;
  1821  011CA8  0E01               	movlw	1
  1822  011CAA  0100               	movlb	0	; () banked
  1823  011CAC  6FE7               	movwf	_switch_position& (0+255),b	;volatile
  1824                           
  1825                           ;RemoteCan.c: 234: dir = 1;
  1826  011CAE  0E01               	movlw	1
  1827  011CB0  D004               	goto	L1
  1828  011CB2                     l9512:
  1829                           
  1830                           ;RemoteCan.c: 236: switch_position = 2;
  1831  011CB2  0E02               	movlw	2
  1832  011CB4  0100               	movlb	0	; () banked
  1833  011CB6  6FE7               	movwf	_switch_position& (0+255),b	;volatile
  1834                           
  1835                           ;RemoteCan.c: 237: dir = 0;
  1836  011CB8  0E00               	movlw	0
  1837  011CBA                     L1:
  1838  011CBA  0100               	movlb	0	; () banked
  1839  011CBC  6FE5               	movwf	_dir& (0+255),b	;volatile
  1840  011CBE                     l9514:
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;RemoteCan.c: 238: }
  1844                           ;RemoteCan.c: 239: }
  1845                           ;RemoteCan.c: 242: if (F1_switch == 1) {
  1846  011CBE  A24C               	btfss	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
  1847  011CC0  D0C7               	goto	l9562
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;RemoteCan.c: 243: y = 0;
  1851  011CC2  9E4D               	bcf	_y/(0+8),_y& (0+7),c	;volatile
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;RemoteCan.c: 244: if ((x < 1)&&(F2_switch == 0)) {
  1855  011CC4  0100               	movlb	0	; () banked
  1856  011CC6  51E8               	movf	_x& (0+255),w,b	;volatile
  1857  011CC8  B4D8               	btfsc	status,2,c
  1858                           
  1859                           ; BSR set to: 0
  1860  011CCA  B44C               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1861  011CCC  D02D               	goto	l9534
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;RemoteCan.c: 245: space_available = 0;
  1865  011CCE  924D               	bcf	_space_available/(0+8),_space_available& (0+7),c	;volatile
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;RemoteCan.c: 246: parking_state = 1;
  1869  011CD0  0E01               	movlw	1
  1870  011CD2  6E28               	movwf	_parking_state,c	;volatile
  1871                           
  1872                           ;RemoteCan.c: 247: JoystickConstants[1] = 1;
  1873  011CD4  0E00               	movlw	0
  1874  011CD6  0100               	movlb	0	; () banked
  1875  011CD8  6FD1               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  1876  011CDA  0E00               	movlw	0
  1877  011CDC  6FD2               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  1878  011CDE  0E80               	movlw	128
  1879  011CE0  6FD3               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  1880  011CE2  0E3F               	movlw	63
  1881  011CE4  6FD4               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  1882  011CE6                     l9526:
  1883  011CE6  EC22  F0B1         	call	_CANisTxReady	;wreg free
  1884  011CEA  0900               	iorlw	0
  1885  011CEC  B4D8               	btfsc	status,2,c
  1886  011CEE  D7FB               	goto	l9526
  1887                           
  1888                           ;RemoteCan.c: 249: park_assist_state[0] = 0b00000001;
  1889  011CF0  0E01               	movlw	1
  1890  011CF2  0101               	movlb	1	; () banked
  1891  011CF4  6F28               	movwf	_park_assist_state& (0+255),b
  1892                           
  1893                           ; BSR set to: 1
  1894                           ;RemoteCan.c: 250: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1895  011CF6  0E0A               	movlw	10
  1896  011CF8  0100               	movlb	0	; () banked
  1897  011CFA  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  1898  011CFC  0E00               	movlw	0
  1899  011CFE  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1900  011D00  0E00               	movlw	0
  1901  011D02  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1902  011D04  0E00               	movlw	0
  1903  011D06  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1904  011D08  0E28               	movlw	low _park_assist_state
  1905  011D0A  0100               	movlb	0	; () banked
  1906  011D0C  6F75               	movwf	CANsendMessage@data& (0+255),b
  1907  011D0E  0E01               	movlw	high _park_assist_state
  1908  011D10  0100               	movlb	0	; () banked
  1909  011D12  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  1910  011D14  0E08               	movlw	8
  1911  011D16  0100               	movlb	0	; () banked
  1912  011D18  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  1913  011D1A  0EBC               	movlw	188
  1914  011D1C  0100               	movlb	0	; () banked
  1915  011D1E  6F78               	movwf	CANsendMessage@flags& (0+255),b
  1916  011D20  ECCD  F089         	call	_CANsendMessage	;wreg free
  1917                           
  1918                           ;RemoteCan.c: 251: x++;
  1919  011D24  0100               	movlb	0	; () banked
  1920  011D26  2BE8               	incf	_x& (0+255),f,b	;volatile
  1921  011D28                     l9534:
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;RemoteCan.c: 252: }
  1925                           ;RemoteCan.c: 254: if ((F2_switch == 1)&&(space_available == 1)) {
  1926  011D28  B44C               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  1927                           
  1928                           ; BSR set to: 0
  1929  011D2A  A24D               	btfss	_space_available/(0+8),_space_available& (0+7),c	;volatile
  1930  011D2C  D028               	goto	l9550
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;RemoteCan.c: 255: if (z < 1) {
  1934  011D2E  0100               	movlb	0	; () banked
  1935  011D30  51E9               	movf	_z& (0+255),w,b	;volatile
  1936  011D32  A4D8               	btfss	status,2,c
  1937  011D34  D027               	goto	l9552
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;RemoteCan.c: 256: parking_state = 2;
  1941  011D36  0E02               	movlw	2
  1942  011D38  6E28               	movwf	_parking_state,c	;volatile
  1943  011D3A                     l9542:
  1944  011D3A  EC22  F0B1         	call	_CANisTxReady	;wreg free
  1945  011D3E  0900               	iorlw	0
  1946  011D40  B4D8               	btfsc	status,2,c
  1947  011D42  D7FB               	goto	l9542
  1948                           
  1949                           ;RemoteCan.c: 258: CANsendMessage(0b00000001100, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
  1950  011D44  0E0C               	movlw	12
  1951  011D46  0100               	movlb	0	; () banked
  1952  011D48  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  1953  011D4A  0E00               	movlw	0
  1954  011D4C  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1955  011D4E  0E00               	movlw	0
  1956  011D50  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1957  011D52  0E00               	movlw	0
  1958  011D54  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1959  011D56  0E2A               	movlw	low _data
  1960  011D58  0100               	movlb	0	; () banked
  1961  011D5A  6F75               	movwf	CANsendMessage@data& (0+255),b
  1962  011D5C  0E00               	movlw	high _data
  1963  011D5E  0100               	movlb	0	; () banked
  1964  011D60  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  1965  011D62  0E08               	movlw	8
  1966  011D64  0100               	movlb	0	; () banked
  1967  011D66  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  1968  011D68  0EBC               	movlw	188
  1969  011D6A  0100               	movlb	0	; () banked
  1970  011D6C  6F78               	movwf	CANsendMessage@flags& (0+255),b
  1971  011D6E  ECCD  F089         	call	_CANsendMessage	;wreg free
  1972                           
  1973                           ;RemoteCan.c: 259: x = 0;
  1974  011D72  0E00               	movlw	0
  1975  011D74  0100               	movlb	0	; () banked
  1976  011D76  6FE8               	movwf	_x& (0+255),b	;volatile
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;RemoteCan.c: 260: z++;
  1980  011D78  0100               	movlb	0	; () banked
  1981  011D7A  2BE9               	incf	_z& (0+255),f,b	;volatile
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;RemoteCan.c: 261: }
  1985                           ;RemoteCan.c: 262: } else {
  1986  011D7C  D003               	goto	l9552
  1987  011D7E                     l9550:
  1988                           
  1989                           ; BSR set to: 0
  1990                           ;RemoteCan.c: 263: z = 0;
  1991  011D7E  0E00               	movlw	0
  1992  011D80  0100               	movlb	0	; () banked
  1993  011D82  6FE9               	movwf	_z& (0+255),b	;volatile
  1994  011D84                     l9552:
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;RemoteCan.c: 264: }
  1998                           ;RemoteCan.c: 266: if ((time_counter - pr_time_5) >= 30) {
  1999  011D84  C015  F149         	movff	_pr_time_5,??_main	;volatile
  2000  011D88  C016  F14A         	movff	_pr_time_5+1,??_main+1	;volatile
  2001  011D8C  C017  F14B         	movff	_pr_time_5+2,??_main+2	;volatile
  2002  011D90  C018  F14C         	movff	_pr_time_5+3,??_main+3	;volatile
  2003  011D94  0101               	movlb	1	; () banked
  2004  011D96  1F49               	comf	??_main& (0+255),f,b
  2005  011D98  1F4A               	comf	(??_main+1)& (0+255),f,b
  2006  011D9A  1F4B               	comf	(??_main+2)& (0+255),f,b
  2007  011D9C  1F4C               	comf	(??_main+3)& (0+255),f,b
  2008  011D9E  2B49               	incf	??_main& (0+255),f,b
  2009  011DA0  0E00               	movlw	0
  2010  011DA2  234A               	addwfc	(??_main+1)& (0+255),f,b
  2011  011DA4  234B               	addwfc	(??_main+2)& (0+255),f,b
  2012  011DA6  234C               	addwfc	(??_main+3)& (0+255),f,b
  2013  011DA8  501D               	movf	_time_counter,w,c	;volatile
  2014  011DAA  0101               	movlb	1	; () banked
  2015  011DAC  2549               	addwf	??_main& (0+255),w,b
  2016  011DAE  0101               	movlb	1	; () banked
  2017  011DB0  6F4D               	movwf	(??_main+4)& (0+255),b
  2018  011DB2  501E               	movf	_time_counter+1,w,c	;volatile
  2019  011DB4  0101               	movlb	1	; () banked
  2020  011DB6  214A               	addwfc	(??_main+1)& (0+255),w,b
  2021  011DB8  0101               	movlb	1	; () banked
  2022  011DBA  6F4E               	movwf	(??_main+5)& (0+255),b
  2023  011DBC  501F               	movf	_time_counter+2,w,c	;volatile
  2024  011DBE  0101               	movlb	1	; () banked
  2025  011DC0  214B               	addwfc	(??_main+2)& (0+255),w,b
  2026  011DC2  0101               	movlb	1	; () banked
  2027  011DC4  6F4F               	movwf	(??_main+6)& (0+255),b
  2028  011DC6  5020               	movf	_time_counter+3,w,c	;volatile
  2029  011DC8  0101               	movlb	1	; () banked
  2030  011DCA  214C               	addwfc	(??_main+3)& (0+255),w,b
  2031  011DCC  0101               	movlb	1	; () banked
  2032  011DCE  6F50               	movwf	(??_main+7)& (0+255),b
  2033  011DD0  0101               	movlb	1	; () banked
  2034  011DD2  5150               	movf	(??_main+7)& (0+255),w,b
  2035  011DD4  0101               	movlb	1	; () banked
  2036  011DD6  114F               	iorwf	(??_main+6)& (0+255),w,b
  2037  011DD8  0101               	movlb	1	; () banked
  2038  011DDA  114E               	iorwf	(??_main+5)& (0+255),w,b
  2039  011DDC  E105               	bnz	u12960
  2040  011DDE  0E1E               	movlw	30
  2041  011DE0  0101               	movlb	1	; () banked
  2042  011DE2  5D4D               	subwf	(??_main+4)& (0+255),w,b
  2043  011DE4  A0D8               	btfss	status,0,c
  2044  011DE6  D06C               	goto	l9586
  2045  011DE8                     u12960:
  2046                           
  2047                           ; BSR set to: 1
  2048                           ;RemoteCan.c: 267: pr_time_5 = time_counter;
  2049  011DE8  C01D  F015         	movff	_time_counter,_pr_time_5	;volatile
  2050  011DEC  C01E  F016         	movff	_time_counter+1,_pr_time_5+1	;volatile
  2051  011DF0  C01F  F017         	movff	_time_counter+2,_pr_time_5+2	;volatile
  2052  011DF4  C020  F018         	movff	_time_counter+3,_pr_time_5+3	;volatile
  2053                           
  2054                           ;RemoteCan.c: 268: if (space_available == 0) {
  2055  011DF8  B24D               	btfsc	_space_available/(0+8),_space_available& (0+7),c	;volatile
  2056  011DFA  D013               	goto	l812
  2057                           
  2058                           ; BSR set to: 1
  2059                           ;RemoteCan.c: 269: PORTDbits.RD6 = ~PORTDbits.RD6;
  2060  011DFC  AC83               	btfss	3971,6,c	;volatile
  2061  011DFE  D002               	goto	u12980
  2062  011E00  0E01               	movlw	1
  2063  011E02  D001               	goto	u12986
  2064  011E04                     u12980:
  2065  011E04  0E00               	movlw	0
  2066  011E06                     u12986:
  2067  011E06  0AFF               	xorlw	255
  2068  011E08  0101               	movlb	1	; () banked
  2069  011E0A  6F49               	movwf	??_main& (0+255),b
  2070  011E0C  0101               	movlb	1	; () banked
  2071  011E0E  3B49               	swapf	??_main& (0+255),f,b
  2072  011E10  4749               	rlncf	??_main& (0+255),f,b
  2073  011E12  4749               	rlncf	??_main& (0+255),f,b
  2074  011E14  5083               	movf	3971,w,c	;volatile
  2075  011E16  0101               	movlb	1	; () banked
  2076  011E18  1949               	xorwf	??_main& (0+255),w,b
  2077  011E1A  0BBF               	andlw	-65
  2078  011E1C  1949               	xorwf	??_main& (0+255),w,b
  2079  011E1E  6E83               	movwf	3971,c	;volatile
  2080  011E20  D04E               	goto	l9584
  2081  011E22                     l812:
  2082                           
  2083                           ; BSR set to: 1
  2084                           ;RemoteCan.c: 272: PORTDbits.RD6 = 1;
  2085  011E22  8C83               	bsf	3971,6,c	;volatile
  2086                           
  2087                           ;RemoteCan.c: 273: if (F2_switch == 0) {
  2088  011E24  B44C               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2089  011E26  D012               	goto	l814
  2090                           
  2091                           ; BSR set to: 1
  2092                           ;RemoteCan.c: 274: PORTDbits.RD5 = ~PORTDbits.RD5;
  2093  011E28  AA83               	btfss	3971,5,c	;volatile
  2094  011E2A  D002               	goto	u13000
  2095  011E2C  0E01               	movlw	1
  2096  011E2E  D001               	goto	u13006
  2097  011E30                     u13000:
  2098  011E30  0E00               	movlw	0
  2099  011E32                     u13006:
  2100  011E32  0AFF               	xorlw	255
  2101  011E34  0101               	movlb	1	; () banked
  2102  011E36  6F49               	movwf	??_main& (0+255),b
  2103  011E38  0101               	movlb	1	; () banked
  2104  011E3A  3B49               	swapf	??_main& (0+255),f,b
  2105  011E3C  4749               	rlncf	??_main& (0+255),f,b
  2106  011E3E  5083               	movf	3971,w,c	;volatile
  2107  011E40  0101               	movlb	1	; () banked
  2108  011E42  1949               	xorwf	??_main& (0+255),w,b
  2109  011E44  0BDF               	andlw	-33
  2110  011E46  1949               	xorwf	??_main& (0+255),w,b
  2111  011E48  6E83               	movwf	3971,c	;volatile
  2112                           
  2113                           ;RemoteCan.c: 275: } else {
  2114  011E4A  D03A               	goto	l9586
  2115  011E4C                     l814:
  2116                           
  2117                           ; BSR set to: 1
  2118                           ;RemoteCan.c: 276: PORTDbits.RD5 = 1;
  2119  011E4C  8A83               	bsf	3971,5,c	;volatile
  2120                           
  2121                           ; BSR set to: 1
  2122                           ;RemoteCan.c: 278: }
  2123                           ;RemoteCan.c: 279: }
  2124                           ;RemoteCan.c: 280: }
  2125                           ;RemoteCan.c: 281: } else {
  2126                           
  2127                           ; BSR set to: 1
  2128                           
  2129                           ; BSR set to: 1
  2130  011E4E  D038               	goto	l9586
  2131  011E50                     l9562:
  2132                           
  2133                           ;RemoteCan.c: 282: x = 0;
  2134  011E50  0E00               	movlw	0
  2135  011E52  0100               	movlb	0	; () banked
  2136  011E54  6FE8               	movwf	_x& (0+255),b	;volatile
  2137                           
  2138                           ;RemoteCan.c: 283: z = 0;
  2139  011E56  0E00               	movlw	0
  2140  011E58  0100               	movlb	0	; () banked
  2141  011E5A  6FE9               	movwf	_z& (0+255),b	;volatile
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;RemoteCan.c: 284: F2_switch = 0;
  2145  011E5C  944C               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;RemoteCan.c: 285: PORTDbits.RD5 = 0;
  2149  011E5E  9A83               	bcf	3971,5,c	;volatile
  2150                           
  2151                           ; BSR set to: 0
  2152                           ;RemoteCan.c: 286: PORTDbits.RD6 = 0;
  2153  011E60  9C83               	bcf	3971,6,c	;volatile
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;RemoteCan.c: 287: if (y == 0) {
  2157  011E62  BE4D               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  2158  011E64  D02B               	goto	l9582
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;RemoteCan.c: 288: parking_state = 0;
  2162  011E66  0E00               	movlw	0
  2163  011E68  6E28               	movwf	_parking_state,c	;volatile
  2164                           
  2165                           ;RemoteCan.c: 289: JoystickConstants[1] = 15;
  2166  011E6A  0E00               	movlw	0
  2167  011E6C  0100               	movlb	0	; () banked
  2168  011E6E  6FD1               	movwf	(_JoystickConstants+4)& (0+255),b	;volatile
  2169  011E70  0E00               	movlw	0
  2170  011E72  6FD2               	movwf	(_JoystickConstants+5)& (0+255),b	;volatile
  2171  011E74  0E70               	movlw	112
  2172  011E76  6FD3               	movwf	(_JoystickConstants+6)& (0+255),b	;volatile
  2173  011E78  0E41               	movlw	65
  2174  011E7A  6FD4               	movwf	(_JoystickConstants+7)& (0+255),b	;volatile
  2175  011E7C                     l9574:
  2176  011E7C  EC22  F0B1         	call	_CANisTxReady	;wreg free
  2177  011E80  0900               	iorlw	0
  2178  011E82  B4D8               	btfsc	status,2,c
  2179  011E84  D7FB               	goto	l9574
  2180                           
  2181                           ;RemoteCan.c: 291: park_assist_state[0] = 0b00000000;
  2182  011E86  0E00               	movlw	0
  2183  011E88  0101               	movlb	1	; () banked
  2184  011E8A  6F28               	movwf	_park_assist_state& (0+255),b
  2185                           
  2186                           ; BSR set to: 1
  2187                           ;RemoteCan.c: 292: CANsendMessage(0b00000001010, park_assist_state, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2188  011E8C  0E0A               	movlw	10
  2189  011E8E  0100               	movlb	0	; () banked
  2190  011E90  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  2191  011E92  0E00               	movlw	0
  2192  011E94  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2193  011E96  0E00               	movlw	0
  2194  011E98  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2195  011E9A  0E00               	movlw	0
  2196  011E9C  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2197  011E9E  0E28               	movlw	low _park_assist_state
  2198  011EA0  0100               	movlb	0	; () banked
  2199  011EA2  6F75               	movwf	CANsendMessage@data& (0+255),b
  2200  011EA4  0E01               	movlw	high _park_assist_state
  2201  011EA6  0100               	movlb	0	; () banked
  2202  011EA8  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  2203  011EAA  0E08               	movlw	8
  2204  011EAC  0100               	movlb	0	; () banked
  2205  011EAE  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  2206  011EB0  0EBC               	movlw	188
  2207  011EB2  0100               	movlb	0	; () banked
  2208  011EB4  6F78               	movwf	CANsendMessage@flags& (0+255),b
  2209  011EB6  ECCD  F089         	call	_CANsendMessage	;wreg free
  2210                           
  2211                           ;RemoteCan.c: 293: y = 1;
  2212  011EBA  8E4D               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  2213  011EBC                     l9582:
  2214                           
  2215                           ;RemoteCan.c: 294: }
  2216                           ;RemoteCan.c: 295: PORTDbits.RD6 = 0;
  2217  011EBC  9C83               	bcf	3971,6,c	;volatile
  2218  011EBE                     l9584:
  2219                           
  2220                           ;RemoteCan.c: 296: PORTDbits.RD5 = 0;
  2221  011EBE  9A83               	bcf	3971,5,c	;volatile
  2222  011EC0                     l9586:
  2223                           
  2224                           ;RemoteCan.c: 297: }
  2225                           ;RemoteCan.c: 299: Joystick_Polling();
  2226  011EC0  EC83  F0AF         	call	_Joystick_Polling	;wreg free
  2227                           
  2228                           ;RemoteCan.c: 302: data_steering [0] = 180 - (JoystickValues[0])*(JoystickConstants[0]);
  2229  011EC4  0E00               	movlw	0
  2230  011EC6  0100               	movlb	0	; () banked
  2231  011EC8  6FA9               	movwf	___fladd@a& (0+255),b
  2232  011ECA  0E00               	movlw	0
  2233  011ECC  6FAA               	movwf	(___fladd@a+1)& (0+255),b
  2234  011ECE  0E34               	movlw	52
  2235  011ED0  6FAB               	movwf	(___fladd@a+2)& (0+255),b
  2236  011ED2  0E43               	movlw	67
  2237  011ED4  6FAC               	movwf	(___fladd@a+3)& (0+255),b
  2238  011ED6  C0CD  F083         	movff	_JoystickConstants,___flmul@a	;volatile
  2239  011EDA  C0CE  F084         	movff	_JoystickConstants+1,___flmul@a+1	;volatile
  2240  011EDE  C0CF  F085         	movff	_JoystickConstants+2,___flmul@a+2	;volatile
  2241  011EE2  C0D0  F086         	movff	_JoystickConstants+3,___flmul@a+3	;volatile
  2242  011EE6  0100               	movlb	0	; () banked
  2243  011EE8  51DD               	movf	_JoystickValues& (0+255),w,b	;volatile
  2244  011EEA  0100               	movlb	0	; () banked
  2245  011EEC  6F71               	movwf	___xxtofl@val& (0+255),b
  2246  011EEE  6B72               	clrf	(___xxtofl@val+1)& (0+255),b
  2247  011EF0  6B73               	clrf	(___xxtofl@val+2)& (0+255),b
  2248  011EF2  6B74               	clrf	(___xxtofl@val+3)& (0+255),b
  2249  011EF4  0E00               	movlw	0
  2250  011EF6  EC4B  F0A4         	call	___xxtofl
  2251  011EFA  C071  F07F         	movff	?___xxtofl,___flmul@b
  2252  011EFE  C072  F080         	movff	?___xxtofl+1,___flmul@b+1
  2253  011F02  C073  F081         	movff	?___xxtofl+2,___flmul@b+2
  2254  011F06  C074  F082         	movff	?___xxtofl+3,___flmul@b+3
  2255  011F0A  ECDF  F09B         	call	___flmul	;wreg free
  2256  011F0E  C07F  F098         	movff	?___flmul,___flneg@f1
  2257  011F12  C080  F099         	movff	?___flmul+1,___flneg@f1+1
  2258  011F16  C081  F09A         	movff	?___flmul+2,___flneg@f1+2
  2259  011F1A  C082  F09B         	movff	?___flmul+3,___flneg@f1+3
  2260  011F1E  EC77  F0B0         	call	___flneg	;wreg free
  2261  011F22  C098  F0A5         	movff	?___flneg,___fladd@b
  2262  011F26  C099  F0A6         	movff	?___flneg+1,___fladd@b+1
  2263  011F2A  C09A  F0A7         	movff	?___flneg+2,___fladd@b+2
  2264  011F2E  C09B  F0A8         	movff	?___flneg+3,___fladd@b+3
  2265  011F32  EC8B  F099         	call	___fladd	;wreg free
  2266  011F36  C0A5  F0B9         	movff	?___fladd,___fltol@f1
  2267  011F3A  C0A6  F0BA         	movff	?___fladd+1,___fltol@f1+1
  2268  011F3E  C0A7  F0BB         	movff	?___fladd+2,___fltol@f1+2
  2269  011F42  C0A8  F0BC         	movff	?___fladd+3,___fltol@f1+3
  2270  011F46  ECDE  F0AA         	call	___fltol	;wreg free
  2271  011F4A  0100               	movlb	0	; () banked
  2272  011F4C  51B9               	movf	?___fltol& (0+255),w,b
  2273  011F4E  0100               	movlb	0	; () banked
  2274  011F50  6FEC               	movwf	_data_steering& (0+255),b
  2275                           
  2276                           ; BSR set to: 0
  2277                           ;RemoteCan.c: 303: if (parking_state == 1) {
  2278  011F52  0428               	decf	_parking_state,w,c	;volatile
  2279  011F54  A4D8               	btfss	status,2,c
  2280  011F56  D05C               	goto	l821
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;RemoteCan.c: 304: if (steering_correction_dir == 1) {
  2284  011F58  A44D               	btfss	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2285  011F5A  D00F               	goto	l9596
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;RemoteCan.c: 305: check = data_steering[0] + steering_correction;
  2289  011F5C  0100               	movlb	0	; () banked
  2290  011F5E  51E6               	movf	_steering_correction& (0+255),w,b	;volatile
  2291  011F60  C0EC  F149         	movff	_data_steering,??_main
  2292  011F64  0101               	movlb	1	; () banked
  2293  011F66  6B4A               	clrf	(??_main+1)& (0+255),b
  2294  011F68  0101               	movlb	1	; () banked
  2295  011F6A  2749               	addwf	??_main& (0+255),f,b
  2296  011F6C  0E00               	movlw	0
  2297  011F6E  234A               	addwfc	(??_main+1)& (0+255),f,b
  2298  011F70  C149  F0D5         	movff	??_main,_check	;volatile
  2299  011F74  C14A  F0D6         	movff	??_main+1,_check+1	;volatile
  2300  011F78  D01B               	goto	L2
  2301  011F7A                     l9596:
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;RemoteCan.c: 307: check = data_steering[0] - steering_correction;
  2305  011F7A  0100               	movlb	0	; () banked
  2306  011F7C  51E6               	movf	_steering_correction& (0+255),w,b	;volatile
  2307  011F7E  0101               	movlb	1	; () banked
  2308  011F80  6F49               	movwf	??_main& (0+255),b
  2309  011F82  6B4A               	clrf	(??_main+1)& (0+255),b
  2310  011F84  0101               	movlb	1	; () banked
  2311  011F86  1F49               	comf	??_main& (0+255),f,b
  2312  011F88  1F4A               	comf	(??_main+1)& (0+255),f,b
  2313  011F8A  4B49               	infsnz	??_main& (0+255),f,b
  2314  011F8C  2B4A               	incf	(??_main+1)& (0+255),f,b
  2315  011F8E  0100               	movlb	0	; () banked
  2316  011F90  51EC               	movf	_data_steering& (0+255),w,b
  2317  011F92  0101               	movlb	1	; () banked
  2318  011F94  6F4B               	movwf	(??_main+2)& (0+255),b
  2319  011F96  6B4C               	clrf	(??_main+3)& (0+255),b
  2320  011F98  0101               	movlb	1	; () banked
  2321  011F9A  5149               	movf	??_main& (0+255),w,b
  2322  011F9C  0101               	movlb	1	; () banked
  2323  011F9E  274B               	addwf	(??_main+2)& (0+255),f,b
  2324  011FA0  0101               	movlb	1	; () banked
  2325  011FA2  514A               	movf	(??_main+1)& (0+255),w,b
  2326  011FA4  0101               	movlb	1	; () banked
  2327  011FA6  234C               	addwfc	(??_main+3)& (0+255),f,b
  2328  011FA8  C14B  F0D5         	movff	??_main+2,_check	;volatile
  2329  011FAC  C14C  F0D6         	movff	??_main+3,_check+1	;volatile
  2330  011FB0                     L2:
  2331  011FB0  0100               	movlb	0	; () banked
  2332  011FB2  0E00               	movlw	0
  2333  011FB4  BFD6               	btfsc	(_check+1)& (0+255),7,b	;volatile
  2334  011FB6  0EFF               	movlw	-1
  2335  011FB8  6FD7               	movwf	(_check+2)& (0+255),b	;volatile
  2336  011FBA  6FD8               	movwf	(_check+3)& (0+255),b	;volatile
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;RemoteCan.c: 308: }
  2340                           ;RemoteCan.c: 309: if ((check >= 0)&&(check <= 180)) {
  2341  011FBC  0100               	movlb	0	; () banked
  2342  011FBE  BFD8               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2343  011FC0  D012               	goto	l9602
  2344                           
  2345                           ; BSR set to: 0
  2346  011FC2  0100               	movlb	0	; () banked
  2347  011FC4  BFD8               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2348  011FC6  D00C               	goto	l9600
  2349  011FC8  0100               	movlb	0	; () banked
  2350  011FCA  51D8               	movf	(_check+3)& (0+255),w,b	;volatile
  2351  011FCC  0100               	movlb	0	; () banked
  2352  011FCE  11D7               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2353  011FD0  0100               	movlb	0	; () banked
  2354  011FD2  11D6               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2355  011FD4  E108               	bnz	l9602
  2356  011FD6  0EB5               	movlw	181
  2357  011FD8  0100               	movlb	0	; () banked
  2358  011FDA  5DD5               	subwf	_check& (0+255),w,b	;volatile
  2359  011FDC  B0D8               	btfsc	status,0,c
  2360  011FDE  D003               	goto	l9602
  2361  011FE0                     l9600:
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;RemoteCan.c: 310: data_steering[0] = check;
  2365  011FE0  C0D5  F0EC         	movff	_check,_data_steering	;volatile
  2366                           
  2367                           ;RemoteCan.c: 311: } else {
  2368  011FE4  D019               	goto	l828
  2369  011FE6                     l9602:
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;RemoteCan.c: 312: if (check > 180) {
  2373  011FE6  0100               	movlb	0	; () banked
  2374  011FE8  BFD8               	btfsc	(_check+3)& (0+255),7,b	;volatile
  2375  011FEA  D00E               	goto	l9606
  2376  011FEC  0100               	movlb	0	; () banked
  2377  011FEE  51D8               	movf	(_check+3)& (0+255),w,b	;volatile
  2378  011FF0  0100               	movlb	0	; () banked
  2379  011FF2  11D7               	iorwf	(_check+2)& (0+255),w,b	;volatile
  2380  011FF4  0100               	movlb	0	; () banked
  2381  011FF6  11D6               	iorwf	(_check+1)& (0+255),w,b	;volatile
  2382  011FF8  E105               	bnz	u13070
  2383  011FFA  0EB5               	movlw	181
  2384  011FFC  0100               	movlb	0	; () banked
  2385  011FFE  5DD5               	subwf	_check& (0+255),w,b	;volatile
  2386  012000  A0D8               	btfss	status,0,c
  2387  012002  D002               	goto	l9606
  2388  012004                     u13070:
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;RemoteCan.c: 313: data_steering[0] = 180;
  2392  012004  0EB4               	movlw	180
  2393  012006  D001               	goto	L3
  2394  012008                     l9606:
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;RemoteCan.c: 315: data_steering[0] = 0;
  2398  012008  0E00               	movlw	0
  2399  01200A                     L3:
  2400  01200A  0100               	movlb	0	; () banked
  2401  01200C  6FEC               	movwf	_data_steering& (0+255),b
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;RemoteCan.c: 316: }
  2405                           ;RemoteCan.c: 317: }
  2406                           ;RemoteCan.c: 318: } else {
  2407                           
  2408                           ; BSR set to: 0
  2409  01200E  D004               	goto	l828
  2410  012010                     l821:
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;RemoteCan.c: 319: steering_correction_dir = 0;
  2414  012010  944D               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;RemoteCan.c: 320: steering_correction = 0;
  2418  012012  0E00               	movlw	0
  2419  012014  0100               	movlb	0	; () banked
  2420  012016  6FE6               	movwf	_steering_correction& (0+255),b	;volatile
  2421  012018                     l828:
  2422                           
  2423                           ; BSR set to: 0
  2424                           ;RemoteCan.c: 321: }
  2425                           ;RemoteCan.c: 324: if (switch_position != 0) {
  2426  012018  0100               	movlb	0	; () banked
  2427  01201A  51E7               	movf	_switch_position& (0+255),w,b	;volatile
  2428  01201C  B4D8               	btfsc	status,2,c
  2429  01201E  D089               	goto	l9620
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;RemoteCan.c: 325: if (JoystickValues[1] > 132) {
  2433  012020  0E84               	movlw	132
  2434  012022  0100               	movlb	0	; () banked
  2435  012024  65DE               	cpfsgt	(_JoystickValues+1)& (0+255),b	;volatile
  2436  012026  D042               	goto	l9616
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;RemoteCan.c: 326: set_speed = (JoystickValues[1] - 130)*(JoystickConstants[1]);
  2440  012028  C0D1  F083         	movff	_JoystickConstants+4,___flmul@a	;volatile
  2441  01202C  C0D2  F084         	movff	_JoystickConstants+5,___flmul@a+1	;volatile
  2442  012030  C0D3  F085         	movff	_JoystickConstants+6,___flmul@a+2	;volatile
  2443  012034  C0D4  F086         	movff	_JoystickConstants+7,___flmul@a+3	;volatile
  2444  012038  0E7E               	movlw	126
  2445  01203A  0101               	movlb	1	; () banked
  2446  01203C  6F49               	movwf	??_main& (0+255),b
  2447  01203E  0EFF               	movlw	255
  2448  012040  0101               	movlb	1	; () banked
  2449  012042  6F4A               	movwf	(??_main+1)& (0+255),b
  2450  012044  0100               	movlb	0	; () banked
  2451  012046  51DE               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2452  012048  0101               	movlb	1	; () banked
  2453  01204A  6F4B               	movwf	(??_main+2)& (0+255),b
  2454  01204C  6B4C               	clrf	(??_main+3)& (0+255),b
  2455  01204E  0101               	movlb	1	; () banked
  2456  012050  5149               	movf	??_main& (0+255),w,b
  2457  012052  0101               	movlb	1	; () banked
  2458  012054  274B               	addwf	(??_main+2)& (0+255),f,b
  2459  012056  0101               	movlb	1	; () banked
  2460  012058  514A               	movf	(??_main+1)& (0+255),w,b
  2461  01205A  0101               	movlb	1	; () banked
  2462  01205C  234C               	addwfc	(??_main+3)& (0+255),f,b
  2463  01205E  C14B  F071         	movff	??_main+2,___xxtofl@val
  2464  012062  C14C  F072         	movff	??_main+3,___xxtofl@val+1
  2465  012066  0100               	movlb	0	; () banked
  2466  012068  0E00               	movlw	0
  2467  01206A  BF72               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2468  01206C  0EFF               	movlw	-1
  2469  01206E  6F73               	movwf	(___xxtofl@val+2)& (0+255),b
  2470  012070  6F74               	movwf	(___xxtofl@val+3)& (0+255),b
  2471  012072  0E01               	movlw	1
  2472  012074  EC4B  F0A4         	call	___xxtofl
  2473  012078  C071  F07F         	movff	?___xxtofl,___flmul@b
  2474  01207C  C072  F080         	movff	?___xxtofl+1,___flmul@b+1
  2475  012080  C073  F081         	movff	?___xxtofl+2,___flmul@b+2
  2476  012084  C074  F082         	movff	?___xxtofl+3,___flmul@b+3
  2477  012088  ECDF  F09B         	call	___flmul	;wreg free
  2478  01208C  C07F  F0B9         	movff	?___flmul,___fltol@f1
  2479  012090  C080  F0BA         	movff	?___flmul+1,___fltol@f1+1
  2480  012094  C081  F0BB         	movff	?___flmul+2,___fltol@f1+2
  2481  012098  C082  F0BC         	movff	?___flmul+3,___fltol@f1+3
  2482  01209C  ECDE  F0AA         	call	___fltol	;wreg free
  2483  0120A0  C0B9  F0E3         	movff	?___fltol,_set_speed	;volatile
  2484  0120A4  C0BA  F0E4         	movff	?___fltol+1,_set_speed+1	;volatile
  2485                           
  2486                           ;RemoteCan.c: 327: data_brake [0] = 0;
  2487  0120A8  0E00               	movlw	0
  2488  0120AA  D040               	goto	L4
  2489  0120AC                     l9616:
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;RemoteCan.c: 329: set_speed = 0;
  2493  0120AC  0E00               	movlw	0
  2494  0120AE  0100               	movlb	0	; () banked
  2495  0120B0  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2496  0120B2  0E00               	movlw	0
  2497  0120B4  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  2498                           
  2499                           ; BSR set to: 0
  2500                           ;RemoteCan.c: 330: data_brake [0] = ((130 - JoystickValues[1]))*(1.9);
  2501  0120B6  0E33               	movlw	51
  2502  0120B8  0100               	movlb	0	; () banked
  2503  0120BA  6F83               	movwf	___flmul@a& (0+255),b
  2504  0120BC  0E33               	movlw	51
  2505  0120BE  6F84               	movwf	(___flmul@a+1)& (0+255),b
  2506  0120C0  0EF3               	movlw	243
  2507  0120C2  6F85               	movwf	(___flmul@a+2)& (0+255),b
  2508  0120C4  0E3F               	movlw	63
  2509  0120C6  6F86               	movwf	(___flmul@a+3)& (0+255),b
  2510  0120C8  0100               	movlb	0	; () banked
  2511  0120CA  51DE               	movf	(_JoystickValues+1)& (0+255),w,b	;volatile
  2512  0120CC  0101               	movlb	1	; () banked
  2513  0120CE  6F49               	movwf	??_main& (0+255),b
  2514  0120D0  6B4A               	clrf	(??_main+1)& (0+255),b
  2515  0120D2  0101               	movlb	1	; () banked
  2516  0120D4  1F49               	comf	??_main& (0+255),f,b
  2517  0120D6  1F4A               	comf	(??_main+1)& (0+255),f,b
  2518  0120D8  4B49               	infsnz	??_main& (0+255),f,b
  2519  0120DA  2B4A               	incf	(??_main+1)& (0+255),f,b
  2520  0120DC  0E82               	movlw	130
  2521  0120DE  0101               	movlb	1	; () banked
  2522  0120E0  2749               	addwf	??_main& (0+255),f,b
  2523  0120E2  0E00               	movlw	0
  2524  0120E4  234A               	addwfc	(??_main+1)& (0+255),f,b
  2525  0120E6  C149  F071         	movff	??_main,___xxtofl@val
  2526  0120EA  C14A  F072         	movff	??_main+1,___xxtofl@val+1
  2527  0120EE  0100               	movlb	0	; () banked
  2528  0120F0  0E00               	movlw	0
  2529  0120F2  BF72               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2530  0120F4  0EFF               	movlw	-1
  2531  0120F6  6F73               	movwf	(___xxtofl@val+2)& (0+255),b
  2532  0120F8  6F74               	movwf	(___xxtofl@val+3)& (0+255),b
  2533  0120FA  0E01               	movlw	1
  2534  0120FC  EC4B  F0A4         	call	___xxtofl
  2535  012100  C071  F07F         	movff	?___xxtofl,___flmul@b
  2536  012104  C072  F080         	movff	?___xxtofl+1,___flmul@b+1
  2537  012108  C073  F081         	movff	?___xxtofl+2,___flmul@b+2
  2538  01210C  C074  F082         	movff	?___xxtofl+3,___flmul@b+3
  2539  012110  ECDF  F09B         	call	___flmul	;wreg free
  2540  012114  C07F  F0B9         	movff	?___flmul,___fltol@f1
  2541  012118  C080  F0BA         	movff	?___flmul+1,___fltol@f1+1
  2542  01211C  C081  F0BB         	movff	?___flmul+2,___fltol@f1+2
  2543  012120  C082  F0BC         	movff	?___flmul+3,___fltol@f1+3
  2544  012124  ECDE  F0AA         	call	___fltol	;wreg free
  2545  012128  0100               	movlb	0	; () banked
  2546  01212A  51B9               	movf	?___fltol& (0+255),w,b
  2547  01212C                     L4:
  2548  01212C  0100               	movlb	0	; () banked
  2549  01212E  6FEA               	movwf	_data_brake& (0+255),b
  2550                           
  2551                           ; BSR set to: 0
  2552                           ;RemoteCan.c: 331: }
  2553                           ;RemoteCan.c: 332: } else {
  2554  012130  D007               	goto	l9624
  2555  012132                     l9620:
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;RemoteCan.c: 333: set_speed = 0;
  2559  012132  0E00               	movlw	0
  2560  012134  0100               	movlb	0	; () banked
  2561  012136  6FE4               	movwf	(_set_speed+1)& (0+255),b	;volatile
  2562  012138  0E00               	movlw	0
  2563  01213A  6FE3               	movwf	_set_speed& (0+255),b	;volatile
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;RemoteCan.c: 334: data_brake [0] = 255;
  2567  01213C  0100               	movlb	0	; () banked
  2568  01213E  69EA               	setf	_data_brake& (0+255),b
  2569  012140                     l9624:
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;RemoteCan.c: 335: }
  2573                           ;RemoteCan.c: 337: if (newMessageCan == 1) {
  2574  012140  AE4C               	btfss	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2575  012142  D003               	goto	l9630
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;RemoteCan.c: 338: CAN_Rx();
  2579  012144  EC53  F0AD         	call	_CAN_Rx	;wreg free
  2580                           
  2581                           ;RemoteCan.c: 339: newMessageCan = 0;
  2582  012148  9E4C               	bcf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
  2583  01214A                     l9630:
  2584                           
  2585                           ;RemoteCan.c: 340: }
  2586                           ;RemoteCan.c: 342: if (((time_counter - pr_time_2) >= 2) && (parking_state != 2)) {
  2587  01214A  C009  F149         	movff	_pr_time_2,??_main	;volatile
  2588  01214E  C00A  F14A         	movff	_pr_time_2+1,??_main+1	;volatile
  2589  012152  C00B  F14B         	movff	_pr_time_2+2,??_main+2	;volatile
  2590  012156  C00C  F14C         	movff	_pr_time_2+3,??_main+3	;volatile
  2591  01215A  0101               	movlb	1	; () banked
  2592  01215C  1F49               	comf	??_main& (0+255),f,b
  2593  01215E  1F4A               	comf	(??_main+1)& (0+255),f,b
  2594  012160  1F4B               	comf	(??_main+2)& (0+255),f,b
  2595  012162  1F4C               	comf	(??_main+3)& (0+255),f,b
  2596  012164  2B49               	incf	??_main& (0+255),f,b
  2597  012166  0E00               	movlw	0
  2598  012168  234A               	addwfc	(??_main+1)& (0+255),f,b
  2599  01216A  234B               	addwfc	(??_main+2)& (0+255),f,b
  2600  01216C  234C               	addwfc	(??_main+3)& (0+255),f,b
  2601  01216E  501D               	movf	_time_counter,w,c	;volatile
  2602  012170  0101               	movlb	1	; () banked
  2603  012172  2549               	addwf	??_main& (0+255),w,b
  2604  012174  0101               	movlb	1	; () banked
  2605  012176  6F4D               	movwf	(??_main+4)& (0+255),b
  2606  012178  501E               	movf	_time_counter+1,w,c	;volatile
  2607  01217A  0101               	movlb	1	; () banked
  2608  01217C  214A               	addwfc	(??_main+1)& (0+255),w,b
  2609  01217E  0101               	movlb	1	; () banked
  2610  012180  6F4E               	movwf	(??_main+5)& (0+255),b
  2611  012182  501F               	movf	_time_counter+2,w,c	;volatile
  2612  012184  0101               	movlb	1	; () banked
  2613  012186  214B               	addwfc	(??_main+2)& (0+255),w,b
  2614  012188  0101               	movlb	1	; () banked
  2615  01218A  6F4F               	movwf	(??_main+6)& (0+255),b
  2616  01218C  5020               	movf	_time_counter+3,w,c	;volatile
  2617  01218E  0101               	movlb	1	; () banked
  2618  012190  214C               	addwfc	(??_main+3)& (0+255),w,b
  2619  012192  0101               	movlb	1	; () banked
  2620  012194  6F50               	movwf	(??_main+7)& (0+255),b
  2621  012196  0101               	movlb	1	; () banked
  2622  012198  5150               	movf	(??_main+7)& (0+255),w,b
  2623  01219A  0101               	movlb	1	; () banked
  2624  01219C  114F               	iorwf	(??_main+6)& (0+255),w,b
  2625  01219E  0101               	movlb	1	; () banked
  2626  0121A0  114E               	iorwf	(??_main+5)& (0+255),w,b
  2627  0121A2  E105               	bnz	u13110
  2628  0121A4  0E02               	movlw	2
  2629  0121A6  0101               	movlb	1	; () banked
  2630  0121A8  5D4D               	subwf	(??_main+4)& (0+255),w,b
  2631  0121AA  A0D8               	btfss	status,0,c
  2632  0121AC  D00E               	goto	l9638
  2633  0121AE                     u13110:
  2634                           
  2635                           ; BSR set to: 1
  2636  0121AE  0E02               	movlw	2
  2637  0121B0  1828               	xorwf	_parking_state,w,c	;volatile
  2638  0121B2  B4D8               	btfsc	status,2,c
  2639  0121B4  D00A               	goto	l9638
  2640                           
  2641                           ; BSR set to: 1
  2642                           ;RemoteCan.c: 343: pr_time_2 = time_counter;
  2643  0121B6  C01D  F009         	movff	_time_counter,_pr_time_2	;volatile
  2644  0121BA  C01E  F00A         	movff	_time_counter+1,_pr_time_2+1	;volatile
  2645  0121BE  C01F  F00B         	movff	_time_counter+2,_pr_time_2+2	;volatile
  2646  0121C2  C020  F00C         	movff	_time_counter+3,_pr_time_2+3	;volatile
  2647                           
  2648                           ; BSR set to: 1
  2649                           ;RemoteCan.c: 344: CAN_Tx();
  2650  0121C6  ECF6  F0AC         	call	_CAN_Tx	;wreg free
  2651  0121CA                     l9638:
  2652                           
  2653                           ;RemoteCan.c: 345: }
  2654                           ;RemoteCan.c: 347: if (time_counter >= pr_time_6) {
  2655  0121CA  5019               	movf	_pr_time_6,w,c	;volatile
  2656  0121CC  5C1D               	subwf	_time_counter,w,c	;volatile
  2657  0121CE  501A               	movf	_pr_time_6+1,w,c	;volatile
  2658  0121D0  581E               	subwfb	_time_counter+1,w,c	;volatile
  2659  0121D2  501B               	movf	_pr_time_6+2,w,c	;volatile
  2660  0121D4  581F               	subwfb	_time_counter+2,w,c	;volatile
  2661  0121D6  501C               	movf	_pr_time_6+3,w,c	;volatile
  2662  0121D8  5820               	subwfb	_time_counter+3,w,c	;volatile
  2663  0121DA  A0D8               	btfss	status,0,c
  2664  0121DC  D03E               	goto	l9648
  2665                           
  2666                           ;RemoteCan.c: 348: if ((time_counter - pr_time_3) >= (100 / 10)) {
  2667  0121DE  C00D  F149         	movff	_pr_time_3,??_main	;volatile
  2668  0121E2  C00E  F14A         	movff	_pr_time_3+1,??_main+1	;volatile
  2669  0121E6  C00F  F14B         	movff	_pr_time_3+2,??_main+2	;volatile
  2670  0121EA  C010  F14C         	movff	_pr_time_3+3,??_main+3	;volatile
  2671  0121EE  0101               	movlb	1	; () banked
  2672  0121F0  1F49               	comf	??_main& (0+255),f,b
  2673  0121F2  1F4A               	comf	(??_main+1)& (0+255),f,b
  2674  0121F4  1F4B               	comf	(??_main+2)& (0+255),f,b
  2675  0121F6  1F4C               	comf	(??_main+3)& (0+255),f,b
  2676  0121F8  2B49               	incf	??_main& (0+255),f,b
  2677  0121FA  0E00               	movlw	0
  2678  0121FC  234A               	addwfc	(??_main+1)& (0+255),f,b
  2679  0121FE  234B               	addwfc	(??_main+2)& (0+255),f,b
  2680  012200  234C               	addwfc	(??_main+3)& (0+255),f,b
  2681  012202  501D               	movf	_time_counter,w,c	;volatile
  2682  012204  0101               	movlb	1	; () banked
  2683  012206  2549               	addwf	??_main& (0+255),w,b
  2684  012208  0101               	movlb	1	; () banked
  2685  01220A  6F4D               	movwf	(??_main+4)& (0+255),b
  2686  01220C  501E               	movf	_time_counter+1,w,c	;volatile
  2687  01220E  0101               	movlb	1	; () banked
  2688  012210  214A               	addwfc	(??_main+1)& (0+255),w,b
  2689  012212  0101               	movlb	1	; () banked
  2690  012214  6F4E               	movwf	(??_main+5)& (0+255),b
  2691  012216  501F               	movf	_time_counter+2,w,c	;volatile
  2692  012218  0101               	movlb	1	; () banked
  2693  01221A  214B               	addwfc	(??_main+2)& (0+255),w,b
  2694  01221C  0101               	movlb	1	; () banked
  2695  01221E  6F4F               	movwf	(??_main+6)& (0+255),b
  2696  012220  5020               	movf	_time_counter+3,w,c	;volatile
  2697  012222  0101               	movlb	1	; () banked
  2698  012224  214C               	addwfc	(??_main+3)& (0+255),w,b
  2699  012226  0101               	movlb	1	; () banked
  2700  012228  6F50               	movwf	(??_main+7)& (0+255),b
  2701  01222A  0101               	movlb	1	; () banked
  2702  01222C  5150               	movf	(??_main+7)& (0+255),w,b
  2703  01222E  0101               	movlb	1	; () banked
  2704  012230  114F               	iorwf	(??_main+6)& (0+255),w,b
  2705  012232  0101               	movlb	1	; () banked
  2706  012234  114E               	iorwf	(??_main+5)& (0+255),w,b
  2707  012236  E105               	bnz	u13140
  2708  012238  0E0A               	movlw	10
  2709  01223A  0101               	movlb	1	; () banked
  2710  01223C  5D4D               	subwf	(??_main+4)& (0+255),w,b
  2711  01223E  A0D8               	btfss	status,0,c
  2712  012240  D00A               	goto	l9646
  2713  012242                     u13140:
  2714                           
  2715                           ; BSR set to: 1
  2716                           ;RemoteCan.c: 349: pr_time_3 = time_counter;
  2717  012242  C01D  F00D         	movff	_time_counter,_pr_time_3	;volatile
  2718  012246  C01E  F00E         	movff	_time_counter+1,_pr_time_3+1	;volatile
  2719  01224A  C01F  F00F         	movff	_time_counter+2,_pr_time_3+2	;volatile
  2720  01224E  C020  F010         	movff	_time_counter+3,_pr_time_3+3	;volatile
  2721                           
  2722                           ; BSR set to: 1
  2723                           ;RemoteCan.c: 350: LCD_Handler();
  2724  012252  ECF5  F0A6         	call	_LCD_Handler	;wreg free
  2725  012256                     l9646:
  2726                           
  2727                           ;RemoteCan.c: 351: }
  2728                           ;RemoteCan.c: 352: w = 0;
  2729  012256  964D               	bcf	_w/(0+8),_w& (0+7),c	;volatile
  2730                           
  2731                           ;RemoteCan.c: 353: } else {
  2732  012258  D47A               	goto	l9462
  2733  01225A                     l9648:
  2734                           
  2735                           ;RemoteCan.c: 354: LCD_Park();
  2736  01225A  EC21  F0AF         	call	_LCD_Park	;wreg free
  2737  01225E  D477               	goto	l9462
  2738  012260                     __end_of_main:
  2739                           	opt stack 0
  2740                           tblptru	equ	0xFF8
  2741                           tblptrh	equ	0xFF7
  2742                           tblptrl	equ	0xFF6
  2743                           tablat	equ	0xFF5
  2744                           postinc0	equ	0xFEE
  2745                           wreg	equ	0xFE8
  2746                           status	equ	0xFD8
  2747                           
  2748 ;; *************** function _board_initialization *****************
  2749 ;; Defined at:
  2750 ;;		line 531 in file "RemoteCan.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;		None               void
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2768 ;;Total ram usage:        0 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:    9
  2771 ;; This function calls:
  2772 ;;		_CANInitialize
  2773 ;;		_LCD_clear
  2774 ;;		_LCD_goto_line
  2775 ;;		_LCD_initialize
  2776 ;; This function is called by:
  2777 ;;		_main
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           	psect	text1
  2782  015B54                     __ptext1:
  2783                           	opt stack 0
  2784  015B54                     _board_initialization:
  2785                           	opt stack 21
  2786                           
  2787                           ;RemoteCan.c: 533: LATA = 0x00;
  2788                           
  2789                           ;incstack = 0
  2790  015B54  0E00               	movlw	0
  2791  015B56  6E89               	movwf	3977,c	;volatile
  2792                           
  2793                           ;RemoteCan.c: 534: TRISA = 0b00011111;
  2794  015B58  0E1F               	movlw	31
  2795  015B5A  6E92               	movwf	3986,c	;volatile
  2796                           
  2797                           ;RemoteCan.c: 535: LATB = 0x00;
  2798  015B5C  0E00               	movlw	0
  2799  015B5E  6E8A               	movwf	3978,c	;volatile
  2800                           
  2801                           ;RemoteCan.c: 536: TRISB = 0b11111011;
  2802  015B60  0EFB               	movlw	251
  2803  015B62  6E93               	movwf	3987,c	;volatile
  2804                           
  2805                           ;RemoteCan.c: 537: LATC = 0x00;
  2806  015B64  0E00               	movlw	0
  2807  015B66  6E8B               	movwf	3979,c	;volatile
  2808                           
  2809                           ;RemoteCan.c: 538: TRISC = 0b11110000;
  2810  015B68  0EF0               	movlw	240
  2811  015B6A  6E94               	movwf	3988,c	;volatile
  2812                           
  2813                           ;RemoteCan.c: 539: LATD = 0x00;
  2814  015B6C  0E00               	movlw	0
  2815  015B6E  6E8C               	movwf	3980,c	;volatile
  2816                           
  2817                           ;RemoteCan.c: 540: TRISD = 0x00;
  2818  015B70  0E00               	movlw	0
  2819  015B72  6E95               	movwf	3989,c	;volatile
  2820                           
  2821                           ;RemoteCan.c: 541: LATE = 0x00;
  2822  015B74  0E00               	movlw	0
  2823  015B76  6E8D               	movwf	3981,c	;volatile
  2824                           
  2825                           ;RemoteCan.c: 542: TRISE = 0x00;
  2826  015B78  0E00               	movlw	0
  2827  015B7A  6E96               	movwf	3990,c	;volatile
  2828                           
  2829                           ;RemoteCan.c: 544: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_
      +                          SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2830  015B7C  0E06               	movlw	6
  2831  015B7E  0100               	movlb	0	; () banked
  2832  015B80  6F7F               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2833  015B82  0E05               	movlw	5
  2834  015B84  0100               	movlb	0	; () banked
  2835  015B86  6F80               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2836  015B88  0E01               	movlw	1
  2837  015B8A  0100               	movlb	0	; () banked
  2838  015B8C  6F81               	movwf	CANInitialize@SJW& (0+255),b
  2839  015B8E  0E03               	movlw	3
  2840  015B90  0100               	movlb	0	; () banked
  2841  015B92  6F82               	movwf	CANInitialize@BRP& (0+255),b
  2842  015B94  0E9D               	movlw	157
  2843  015B96  0100               	movlb	0	; () banked
  2844  015B98  6F83               	movwf	CANInitialize@flags& (0+255),b
  2845  015B9A  0E04               	movlw	4
  2846  015B9C  EC32  F0A5         	call	_CANInitialize
  2847                           
  2848                           ;RemoteCan.c: 548: PIR2bits.TMR3IF = 0;
  2849  015BA0  92A1               	bcf	4001,1,c	;volatile
  2850                           
  2851                           ;RemoteCan.c: 549: PIR3bits.RXB1IF = 0;
  2852  015BA2  92A4               	bcf	4004,1,c	;volatile
  2853                           
  2854                           ;RemoteCan.c: 550: PIR3bits.RXB0IF = 0;
  2855  015BA4  90A4               	bcf	4004,0,c	;volatile
  2856                           
  2857                           ;RemoteCan.c: 553: RCONbits.IPEN = 1;
  2858  015BA6  8ED0               	bsf	4048,7,c	;volatile
  2859                           
  2860                           ;RemoteCan.c: 554: IPR3bits.RXB1IP = 1;
  2861  015BA8  82A5               	bsf	4005,1,c	;volatile
  2862                           
  2863                           ;RemoteCan.c: 555: IPR3bits.RXB0IP = 1;
  2864  015BAA  80A5               	bsf	4005,0,c	;volatile
  2865                           
  2866                           ;RemoteCan.c: 556: IPR2bits.TMR3IP = 0;
  2867  015BAC  92A2               	bcf	4002,1,c	;volatile
  2868                           
  2869                           ;RemoteCan.c: 559: ADCON1 = 0b00001101;
  2870  015BAE  0E0D               	movlw	13
  2871  015BB0  6EC1               	movwf	4033,c	;volatile
  2872                           
  2873                           ;RemoteCan.c: 560: ADCON0bits.CHS2 = 0;
  2874  015BB2  98C2               	bcf	4034,4,c	;volatile
  2875                           
  2876                           ;RemoteCan.c: 561: ADCON0bits.CHS1 = 0;
  2877  015BB4  96C2               	bcf	4034,3,c	;volatile
  2878                           
  2879                           ;RemoteCan.c: 562: ADCON0bits.CHS0 = 0;
  2880  015BB6  94C2               	bcf	4034,2,c	;volatile
  2881                           
  2882                           ;RemoteCan.c: 563: ADCON2bits.ACQT2 = 1;
  2883  015BB8  8AC0               	bsf	4032,5,c	;volatile
  2884                           
  2885                           ;RemoteCan.c: 564: ADCON2bits.ACQT1 = 1;
  2886  015BBA  88C0               	bsf	4032,4,c	;volatile
  2887                           
  2888                           ;RemoteCan.c: 565: ADCON2bits.ACQT0 = 0;
  2889  015BBC  96C0               	bcf	4032,3,c	;volatile
  2890                           
  2891                           ;RemoteCan.c: 566: ADCON2bits.ADCS2 = 1;
  2892  015BBE  84C0               	bsf	4032,2,c	;volatile
  2893                           
  2894                           ;RemoteCan.c: 567: ADCON2bits.ADCS1 = 0;
  2895  015BC0  92C0               	bcf	4032,1,c	;volatile
  2896                           
  2897                           ;RemoteCan.c: 568: ADCON2bits.ADCS0 = 1;
  2898  015BC2  80C0               	bsf	4032,0,c	;volatile
  2899                           
  2900                           ;RemoteCan.c: 569: ADCON2bits.ADFM = 0;
  2901  015BC4  9EC0               	bcf	4032,7,c	;volatile
  2902                           
  2903                           ;RemoteCan.c: 570: ADCON0bits.ADON = 1;
  2904  015BC6  80C2               	bsf	4034,0,c	;volatile
  2905                           
  2906                           ;RemoteCan.c: 573: LCD_initialize(16);
  2907  015BC8  0E10               	movlw	16
  2908  015BCA  EC27  F0AA         	call	_LCD_initialize
  2909                           
  2910                           ;RemoteCan.c: 575: LCD_clear();
  2911  015BCE  ECE1  F0B0         	call	_LCD_clear	;wreg free
  2912                           
  2913                           ;RemoteCan.c: 576: LCD_goto_line(1);
  2914  015BD2  0E01               	movlw	1
  2915  015BD4  EC64  F0AB         	call	_LCD_goto_line
  2916                           
  2917                           ;RemoteCan.c: 580: PORTDbits.RD2 = 0;
  2918  015BD8  9483               	bcf	3971,2,c	;volatile
  2919                           
  2920                           ;RemoteCan.c: 581: PORTDbits.RD3 = 0;
  2921  015BDA  9683               	bcf	3971,3,c	;volatile
  2922                           
  2923                           ;RemoteCan.c: 584: TMR3H = 0x63;
  2924  015BDC  0E63               	movlw	99
  2925  015BDE  6EB3               	movwf	4019,c	;volatile
  2926                           
  2927                           ;RemoteCan.c: 585: TMR3L = 0xC0;
  2928  015BE0  0EC0               	movlw	192
  2929  015BE2  6EB2               	movwf	4018,c	;volatile
  2930                           
  2931                           ;RemoteCan.c: 588: PIE3bits.RXB1IE = 1;
  2932  015BE4  82A3               	bsf	4003,1,c	;volatile
  2933                           
  2934                           ;RemoteCan.c: 589: PIE3bits.RXB0IE = 1;
  2935  015BE6  80A3               	bsf	4003,0,c	;volatile
  2936                           
  2937                           ;RemoteCan.c: 590: PIE2bits.TMR3IE = 1;
  2938  015BE8  82A0               	bsf	4000,1,c	;volatile
  2939                           
  2940                           ;RemoteCan.c: 593: T3CON = 0x01;
  2941  015BEA  0E01               	movlw	1
  2942  015BEC  6EB1               	movwf	4017,c	;volatile
  2943                           
  2944                           ;RemoteCan.c: 594: LCD_clear();
  2945  015BEE  ECE1  F0B0         	call	_LCD_clear	;wreg free
  2946                           
  2947                           ;RemoteCan.c: 595: INTCONbits.GIEH = 1;
  2948  015BF2  8EF2               	bsf	intcon,7,c	;volatile
  2949                           
  2950                           ;RemoteCan.c: 596: INTCONbits.GIEL = 1;
  2951  015BF4  8CF2               	bsf	intcon,6,c	;volatile
  2952  015BF6  0012               	return		;funcret
  2953  015BF8                     __end_of_board_initialization:
  2954                           	opt stack 0
  2955                           tblptru	equ	0xFF8
  2956                           tblptrh	equ	0xFF7
  2957                           tblptrl	equ	0xFF6
  2958                           tablat	equ	0xFF5
  2959                           intcon	equ	0xFF2
  2960                           postinc0	equ	0xFEE
  2961                           wreg	equ	0xFE8
  2962                           status	equ	0xFD8
  2963                           
  2964 ;; *************** function _CANInitialize *****************
  2965 ;; Defined at:
  2966 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  propSeg         1    wreg     unsigned char 
  2969 ;;  phaseSeg1       1   31[BANK0 ] unsigned char 
  2970 ;;  phaseSeg2       1   32[BANK0 ] unsigned char 
  2971 ;;  SJW             1   33[BANK0 ] unsigned char 
  2972 ;;  BRP             1   34[BANK0 ] unsigned char 
  2973 ;;  flags           1   35[BANK0 ] enum E16887
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  propSeg         1   40[BANK0 ] unsigned char 
  2976 ;;  FilterConfig    1   42[BANK0 ] unsigned char 
  2977 ;;  FilterConfig    1   41[BANK0 ] unsigned char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;		None               void
  2980 ;; Registers used:
  2981 ;;		wreg, status,2, status,0, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2987 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2988 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2989 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2990 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2991 ;;Total ram usage:       12 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    4
  2994 ;; This function calls:
  2995 ;;		_CANOperationMode
  2996 ;;		_CANSetFilter
  2997 ;;		_CANSetMask
  2998 ;; This function is called by:
  2999 ;;		_board_initialization
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text2
  3004  014A64                     __ptext2:
  3005                           	opt stack 0
  3006  014A64                     _CANInitialize:
  3007                           	opt stack 25
  3008                           
  3009                           ;incstack = 0
  3010                           ;CANInitialize@propSeg stored from wreg
  3011  014A64  0100               	movlb	0	; () banked
  3012  014A66  6F88               	movwf	CANInitialize@propSeg& (0+255),b
  3013                           
  3014                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3015                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3016                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3017  014A68  0E80               	movlw	128
  3018  014A6A  EC8C  F0B1         	call	_CANOperationMode
  3019                           
  3020                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3021  014A6E  0E00               	movlw	0
  3022  014A70  6E70               	movwf	3952,c	;volatile
  3023                           
  3024                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3025  014A72  0E00               	movlw	0
  3026  014A74  6E71               	movwf	3953,c	;volatile
  3027                           
  3028                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3029  014A76  0E00               	movlw	0
  3030  014A78  6E72               	movwf	3954,c	;volatile
  3031                           
  3032                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3033  014A7A  0100               	movlb	0	; () banked
  3034  014A7C  4181               	rrncf	CANInitialize@SJW& (0+255),w,b
  3035  014A7E  42E8               	rrncf	wreg,f,c
  3036  014A80  0BC0               	andlw	192
  3037  014A82  0100               	movlb	0	; () banked
  3038  014A84  6F81               	movwf	CANInitialize@SJW& (0+255),b
  3039                           
  3040                           ; BSR set to: 0
  3041                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3042  014A86  0100               	movlb	0	; () banked
  3043  014A88  5181               	movf	CANInitialize@SJW& (0+255),w,b
  3044  014A8A  1270               	iorwf	3952,f,c	;volatile
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3048  014A8C  0100               	movlb	0	; () banked
  3049  014A8E  5182               	movf	CANInitialize@BRP& (0+255),w,b
  3050  014A90  1270               	iorwf	3952,f,c	;volatile
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3054  014A92  0100               	movlb	0	; () banked
  3055  014A94  5188               	movf	CANInitialize@propSeg& (0+255),w,b
  3056  014A96  1271               	iorwf	3953,f,c	;volatile
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3060  014A98  0100               	movlb	0	; () banked
  3061  014A9A  397F               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3062  014A9C  42E8               	rrncf	wreg,f,c
  3063  014A9E  0BF8               	andlw	248
  3064  014AA0  0100               	movlb	0	; () banked
  3065  014AA2  6F7F               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3069  014AA4  0100               	movlb	0	; () banked
  3070  014AA6  517F               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3071  014AA8  1271               	iorwf	3953,f,c	;volatile
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3075  014AAA  0100               	movlb	0	; () banked
  3076  014AAC  A583               	btfss	CANInitialize@flags& (0+255),2,b
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3080  014AAE  8C71               	bsf	3953,6,c	;volatile
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3084  014AB0  0100               	movlb	0	; () banked
  3085  014AB2  B183               	btfsc	CANInitialize@flags& (0+255),0,b
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3089  014AB4  8E71               	bsf	3953,7,c	;volatile
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3093                           
  3094                           ; BSR set to: 0
  3095  014AB6  0100               	movlb	0	; () banked
  3096  014AB8  5180               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3097  014ABA  1272               	iorwf	3954,f,c	;volatile
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3101  014ABC  0100               	movlb	0	; () banked
  3102  014ABE  B383               	btfsc	CANInitialize@flags& (0+255),1,b
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3106  014AC0  8C72               	bsf	3954,6,c	;volatile
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3110                           
  3111                           ; BSR set to: 0
  3112  014AC2  0100               	movlb	0	; () banked
  3113  014AC4  5183               	movf	CANInitialize@flags& (0+255),w,b
  3114  014AC6  0B60               	andlw	96
  3115  014AC8  6E60               	movwf	3936,c	;volatile
  3116                           
  3117                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3118  014ACA  0100               	movlb	0	; () banked
  3119  014ACC  5183               	movf	CANInitialize@flags& (0+255),w,b
  3120  014ACE  0B10               	andlw	16
  3121  014AD0  0AFF               	xorlw	255
  3122  014AD2  B4D8               	btfsc	status,2,c
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3126  014AD4  8460               	bsf	3936,2,c	;volatile
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3130  014AD6  CF60 FF50          	movff	3936,3920	;volatile
  3131                           
  3132                           ; BSR set to: 0
  3133                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3134  014ADA  0E00               	movlw	0
  3135  014ADC  0100               	movlb	0	; () banked
  3136  014ADE  6F71               	movwf	CANSetMask@mask& (0+255),b
  3137  014AE0  0E00               	movlw	0
  3138  014AE2  6F72               	movwf	(CANSetMask@mask+1)& (0+255),b
  3139  014AE4  0E00               	movlw	0
  3140  014AE6  6F73               	movwf	(CANSetMask@mask+2)& (0+255),b
  3141  014AE8  0E00               	movlw	0
  3142  014AEA  6F74               	movwf	(CANSetMask@mask+3)& (0+255),b
  3143  014AEC  0EF7               	movlw	247
  3144  014AEE  0100               	movlb	0	; () banked
  3145  014AF0  6F75               	movwf	CANSetMask@type& (0+255),b
  3146  014AF2  0E01               	movlw	1
  3147  014AF4  EC12  F0A0         	call	_CANSetMask
  3148                           
  3149                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3150  014AF8  0E00               	movlw	0
  3151  014AFA  0100               	movlb	0	; () banked
  3152  014AFC  6F71               	movwf	CANSetMask@mask& (0+255),b
  3153  014AFE  0E00               	movlw	0
  3154  014B00  6F72               	movwf	(CANSetMask@mask+1)& (0+255),b
  3155  014B02  0E00               	movlw	0
  3156  014B04  6F73               	movwf	(CANSetMask@mask+2)& (0+255),b
  3157  014B06  0E00               	movlw	0
  3158  014B08  6F74               	movwf	(CANSetMask@mask+3)& (0+255),b
  3159  014B0A  0EF7               	movlw	247
  3160  014B0C  0100               	movlb	0	; () banked
  3161  014B0E  6F75               	movwf	CANSetMask@type& (0+255),b
  3162  014B10  0E02               	movlw	2
  3163  014B12  EC12  F0A0         	call	_CANSetMask
  3164                           
  3165                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3166  014B16  D00F               	goto	l6090
  3167  014B18                     l6084:
  3168                           
  3169                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3170  014B18  0EF7               	movlw	247
  3171  014B1A  0100               	movlb	0	; () banked
  3172  014B1C  6F89               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3173  014B1E  D007               	goto	l6086
  3174  014B20                     l372:
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3178  014B20  0100               	movlb	0	; () banked
  3179  014B22  6989               	setf	CANInitialize@FilterConfig1& (0+255),b
  3180                           
  3181                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3182  014B24  0100               	movlb	0	; () banked
  3183  014B26  698A               	setf	CANInitialize@FilterConfig2& (0+255),b
  3184                           
  3185                           ;inc\CANlib.h: 273: break;
  3186  014B28  D028               	goto	l6092
  3187  014B2A                     l373:
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3191  014B2A  0100               	movlb	0	; () banked
  3192  014B2C  6989               	setf	CANInitialize@FilterConfig1& (0+255),b
  3193  014B2E                     l6086:
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3197  014B2E  0EF7               	movlw	247
  3198  014B30  0100               	movlb	0	; () banked
  3199  014B32  6F8A               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;inc\CANlib.h: 278: }
  3203                           
  3204                           ;inc\CANlib.h: 277: break;
  3205  014B34  D022               	goto	l6092
  3206  014B36                     l6090:
  3207  014B36  0E9F               	movlw	159
  3208  014B38  0100               	movlb	0	; () banked
  3209  014B3A  6F84               	movwf	??_CANInitialize& (0+255),b
  3210  014B3C  0EFF               	movlw	255
  3211  014B3E  0100               	movlb	0	; () banked
  3212  014B40  6F85               	movwf	(??_CANInitialize+1)& (0+255),b
  3213  014B42  0100               	movlb	0	; () banked
  3214  014B44  5183               	movf	CANInitialize@flags& (0+255),w,b
  3215  014B46  0B60               	andlw	96
  3216  014B48  0100               	movlb	0	; () banked
  3217  014B4A  6F86               	movwf	(??_CANInitialize+2)& (0+255),b
  3218  014B4C  6B87               	clrf	(??_CANInitialize+3)& (0+255),b
  3219  014B4E  0100               	movlb	0	; () banked
  3220  014B50  5184               	movf	??_CANInitialize& (0+255),w,b
  3221  014B52  0100               	movlb	0	; () banked
  3222  014B54  1386               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3223  014B56  0100               	movlb	0	; () banked
  3224  014B58  5185               	movf	(??_CANInitialize+1)& (0+255),w,b
  3225  014B5A  0100               	movlb	0	; () banked
  3226  014B5C  1387               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3227                           
  3228                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3229                           ; Switch size 1, requested type "space"
  3230                           ; Number of cases is 1, Range of values is 0 to 0
  3231                           ; switch strategies available:
  3232                           ; Name         Instructions Cycles
  3233                           ; simple_byte            4     3 (average)
  3234                           ;	Chosen strategy is simple_byte
  3235  014B5E  0100               	movlb	0	; () banked
  3236  014B60  5187               	movf	(??_CANInitialize+3)& (0+255),w,b
  3237  014B62  0A00               	xorlw	0	; case 0
  3238  014B64  A4D8               	btfss	status,2,c
  3239  014B66  D7E1               	goto	l373
  3240                           
  3241                           ; BSR set to: 0
  3242                           ; Switch size 1, requested type "space"
  3243                           ; Number of cases is 2, Range of values is 191 to 223
  3244                           ; switch strategies available:
  3245                           ; Name         Instructions Cycles
  3246                           ; simple_byte            7     4 (average)
  3247                           ;	Chosen strategy is simple_byte
  3248  014B68  0100               	movlb	0	; () banked
  3249  014B6A  5186               	movf	(??_CANInitialize+2)& (0+255),w,b
  3250  014B6C  0ABF               	xorlw	191	; case 191
  3251  014B6E  B4D8               	btfsc	status,2,c
  3252  014B70  D7D7               	goto	l372
  3253  014B72  0A60               	xorlw	96	; case 223
  3254  014B74  B4D8               	btfsc	status,2,c
  3255  014B76  D7D0               	goto	l6084
  3256  014B78  D7D8               	goto	l373
  3257  014B7A                     l6092:
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3261  014B7A  0E00               	movlw	0
  3262  014B7C  0100               	movlb	0	; () banked
  3263  014B7E  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3264  014B80  0E00               	movlw	0
  3265  014B82  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3266  014B84  0E00               	movlw	0
  3267  014B86  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3268  014B88  0E00               	movlw	0
  3269  014B8A  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3270  014B8C  C089  F075         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3271  014B90  0E00               	movlw	0
  3272  014B92  EC00  F080         	call	_CANSetFilter
  3273                           
  3274                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3275  014B96  0E00               	movlw	0
  3276  014B98  0100               	movlb	0	; () banked
  3277  014B9A  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3278  014B9C  0E00               	movlw	0
  3279  014B9E  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3280  014BA0  0E00               	movlw	0
  3281  014BA2  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3282  014BA4  0E00               	movlw	0
  3283  014BA6  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3284  014BA8  C089  F075         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3285  014BAC  0E01               	movlw	1
  3286  014BAE  EC00  F080         	call	_CANSetFilter
  3287                           
  3288                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3289  014BB2  0E00               	movlw	0
  3290  014BB4  0100               	movlb	0	; () banked
  3291  014BB6  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3292  014BB8  0E00               	movlw	0
  3293  014BBA  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3294  014BBC  0E00               	movlw	0
  3295  014BBE  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3296  014BC0  0E00               	movlw	0
  3297  014BC2  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3298  014BC4  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3299  014BC8  0E02               	movlw	2
  3300  014BCA  EC00  F080         	call	_CANSetFilter
  3301                           
  3302                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3303  014BCE  0E00               	movlw	0
  3304  014BD0  0100               	movlb	0	; () banked
  3305  014BD2  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3306  014BD4  0E00               	movlw	0
  3307  014BD6  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3308  014BD8  0E00               	movlw	0
  3309  014BDA  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3310  014BDC  0E00               	movlw	0
  3311  014BDE  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3312  014BE0  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3313  014BE4  0E03               	movlw	3
  3314  014BE6  EC00  F080         	call	_CANSetFilter
  3315                           
  3316                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3317  014BEA  0E00               	movlw	0
  3318  014BEC  0100               	movlb	0	; () banked
  3319  014BEE  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3320  014BF0  0E00               	movlw	0
  3321  014BF2  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3322  014BF4  0E00               	movlw	0
  3323  014BF6  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3324  014BF8  0E00               	movlw	0
  3325  014BFA  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3326  014BFC  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3327  014C00  0E04               	movlw	4
  3328  014C02  EC00  F080         	call	_CANSetFilter
  3329                           
  3330                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3331  014C06  0E00               	movlw	0
  3332  014C08  0100               	movlb	0	; () banked
  3333  014C0A  6F71               	movwf	CANSetFilter@filter& (0+255),b
  3334  014C0C  0E00               	movlw	0
  3335  014C0E  6F72               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3336  014C10  0E00               	movlw	0
  3337  014C12  6F73               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3338  014C14  0E00               	movlw	0
  3339  014C16  6F74               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3340  014C18  C08A  F075         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3341  014C1C  0E05               	movlw	5
  3342  014C1E  EC00  F080         	call	_CANSetFilter
  3343                           
  3344                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3345  014C22  0E00               	movlw	0
  3346  014C24  EC8C  F0B1         	call	_CANOperationMode
  3347  014C28  0012               	return		;funcret
  3348  014C2A                     __end_of_CANInitialize:
  3349                           	opt stack 0
  3350                           tblptru	equ	0xFF8
  3351                           tblptrh	equ	0xFF7
  3352                           tblptrl	equ	0xFF6
  3353                           tablat	equ	0xFF5
  3354                           intcon	equ	0xFF2
  3355                           postinc0	equ	0xFEE
  3356                           wreg	equ	0xFE8
  3357                           status	equ	0xFD8
  3358                           
  3359 ;; *************** function _CANSetMask *****************
  3360 ;; Defined at:
  3361 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  numBuffer       1    wreg     enum E16921
  3364 ;;  mask            4   17[BANK0 ] unsigned long 
  3365 ;;  type            1   21[BANK0 ] enum E16887
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  numBuffer       1   26[BANK0 ] enum E16921
  3368 ;;  tamp            4   27[BANK0 ] unsigned long 
  3369 ;; Return value:  Size  Location     Type
  3370 ;;		None               void
  3371 ;; Registers used:
  3372 ;;		wreg, status,2, status,0
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3378 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3379 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3380 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3381 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3382 ;;Total ram usage:       14 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    3
  3385 ;; This function calls:
  3386 ;;		Nothing
  3387 ;; This function is called by:
  3388 ;;		_CANInitialize
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           	psect	text3
  3393  014024                     __ptext3:
  3394                           	opt stack 0
  3395  014024                     _CANSetMask:
  3396                           	opt stack 25
  3397                           
  3398                           ;incstack = 0
  3399                           ;CANSetMask@numBuffer stored from wreg
  3400  014024  0100               	movlb	0	; () banked
  3401  014026  6F7A               	movwf	CANSetMask@numBuffer& (0+255),b
  3402                           
  3403                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3404  014028  0100               	movlb	0	; () banked
  3405  01402A  057A               	decf	CANSetMask@numBuffer& (0+255),w,b
  3406  01402C  A4D8               	btfss	status,2,c
  3407  01402E  D056               	goto	l5260
  3408                           
  3409                           ; BSR set to: 0
  3410  014030  0100               	movlb	0	; () banked
  3411  014032  2975               	incf	CANSetMask@type& (0+255),w,b
  3412  014034  A4D8               	btfss	status,2,c
  3413  014036  D052               	goto	l5260
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;inc\CANlib.h: 644: {
  3417                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3418  014038  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  3419  01403C  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3420  014040  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3421  014044  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3422  014048  0E04               	movlw	4
  3423  01404A  D006               	goto	u5950
  3424  01404C                     u5955:
  3425  01404C  0100               	movlb	0	; () banked
  3426  01404E  90D8               	bcf	status,0,c
  3427  014050  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3428  014052  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3429  014054  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3430  014056  3376               	rrcf	??_CANSetMask& (0+255),f,b
  3431  014058                     u5950:
  3432  014058  2EE8               	decfsz	wreg,f,c
  3433  01405A  D7F8               	goto	u5955
  3434  01405C  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  3435  014060  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3436  014064  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3437  014068  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3441  01406C  0100               	movlb	0	; () banked
  3442  01406E  517B               	movf	CANSetMask@tamp& (0+255),w,b
  3443  014070  0100               	movlb	0	; () banked
  3444  014072  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3445  014074  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3446  014076  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3447  014078  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3451  01407A  C07B  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3455  01407E  0E07               	movlw	7
  3456  014080  0100               	movlb	0	; () banked
  3457  014082  1571               	andwf	CANSetMask@mask& (0+255),w,b
  3458  014084  0100               	movlb	0	; () banked
  3459  014086  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3460  014088  0E00               	movlw	0
  3461  01408A  0100               	movlb	0	; () banked
  3462  01408C  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3463  01408E  0100               	movlb	0	; () banked
  3464  014090  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3465  014092  0E00               	movlw	0
  3466  014094  0100               	movlb	0	; () banked
  3467  014096  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3468  014098  0100               	movlb	0	; () banked
  3469  01409A  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3470  01409C  0E00               	movlw	0
  3471  01409E  0100               	movlb	0	; () banked
  3472  0140A0  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3473  0140A2  0100               	movlb	0	; () banked
  3474  0140A4  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3478  0140A6  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  3479  0140AA  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3480  0140AE  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3481  0140B2  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3482  0140B6  0E05               	movlw	5
  3483  0140B8                     u5965:
  3484  0140B8  90D8               	bcf	status,0,c
  3485  0140BA  0100               	movlb	0	; () banked
  3486  0140BC  3776               	rlcf	??_CANSetMask& (0+255),f,b
  3487  0140BE  3777               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3488  0140C0  3778               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3489  0140C2  3779               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3490  0140C4  2EE8               	decfsz	wreg,f,c
  3491  0140C6  D7F8               	goto	u5965
  3492  0140C8  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  3493  0140CC  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3494  0140D0  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3495  0140D4  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3499  0140D8  C07B  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3500  0140DC                     l5260:
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;inc\CANlib.h: 652: }
  3504                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3505  0140DC  0E02               	movlw	2
  3506  0140DE  0100               	movlb	0	; () banked
  3507  0140E0  197A               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3508  0140E2  A4D8               	btfss	status,2,c
  3509  0140E4  D056               	goto	l5276
  3510                           
  3511                           ; BSR set to: 0
  3512  0140E6  0100               	movlb	0	; () banked
  3513  0140E8  2975               	incf	CANSetMask@type& (0+255),w,b
  3514  0140EA  A4D8               	btfss	status,2,c
  3515  0140EC  D052               	goto	l5276
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;inc\CANlib.h: 655: {
  3519                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3520  0140EE  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  3521  0140F2  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3522  0140F6  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3523  0140FA  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3524  0140FE  0E04               	movlw	4
  3525  014100  D006               	goto	u5990
  3526  014102                     u5995:
  3527  014102  0100               	movlb	0	; () banked
  3528  014104  90D8               	bcf	status,0,c
  3529  014106  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3530  014108  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3531  01410A  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3532  01410C  3376               	rrcf	??_CANSetMask& (0+255),f,b
  3533  01410E                     u5990:
  3534  01410E  2EE8               	decfsz	wreg,f,c
  3535  014110  D7F8               	goto	u5995
  3536  014112  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  3537  014116  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3538  01411A  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3539  01411E  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3543  014122  0100               	movlb	0	; () banked
  3544  014124  517B               	movf	CANSetMask@tamp& (0+255),w,b
  3545  014126  0100               	movlb	0	; () banked
  3546  014128  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3547  01412A  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3548  01412C  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3549  01412E  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3553  014130  C07B  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3557  014134  0E07               	movlw	7
  3558  014136  0100               	movlb	0	; () banked
  3559  014138  1571               	andwf	CANSetMask@mask& (0+255),w,b
  3560  01413A  0100               	movlb	0	; () banked
  3561  01413C  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3562  01413E  0E00               	movlw	0
  3563  014140  0100               	movlb	0	; () banked
  3564  014142  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3565  014144  0100               	movlb	0	; () banked
  3566  014146  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3567  014148  0E00               	movlw	0
  3568  01414A  0100               	movlb	0	; () banked
  3569  01414C  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3570  01414E  0100               	movlb	0	; () banked
  3571  014150  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3572  014152  0E00               	movlw	0
  3573  014154  0100               	movlb	0	; () banked
  3574  014156  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3575  014158  0100               	movlb	0	; () banked
  3576  01415A  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3580  01415C  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  3581  014160  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3582  014164  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3583  014168  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3584  01416C  0E05               	movlw	5
  3585  01416E                     u6005:
  3586  01416E  90D8               	bcf	status,0,c
  3587  014170  0100               	movlb	0	; () banked
  3588  014172  3776               	rlcf	??_CANSetMask& (0+255),f,b
  3589  014174  3777               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3590  014176  3778               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3591  014178  3779               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3592  01417A  2EE8               	decfsz	wreg,f,c
  3593  01417C  D7F8               	goto	u6005
  3594  01417E  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  3595  014182  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3596  014186  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3597  01418A  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3601  01418E  C07B  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3602  014192                     l5276:
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;inc\CANlib.h: 663: }
  3606                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3607  014192  0100               	movlb	0	; () banked
  3608  014194  057A               	decf	CANSetMask@numBuffer& (0+255),w,b
  3609  014196  A4D8               	btfss	status,2,c
  3610  014198  D087               	goto	l5308
  3611                           
  3612                           ; BSR set to: 0
  3613  01419A  0EF7               	movlw	247
  3614  01419C  0100               	movlb	0	; () banked
  3615  01419E  1975               	xorwf	CANSetMask@type& (0+255),w,b
  3616  0141A0  A4D8               	btfss	status,2,c
  3617  0141A2  D082               	goto	l5308
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;inc\CANlib.h: 666: {
  3621                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3622  0141A4  0100               	movlb	0	; () banked
  3623  0141A6  5171               	movf	CANSetMask@mask& (0+255),w,b
  3624  0141A8  0100               	movlb	0	; () banked
  3625  0141AA  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3626  0141AC  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3627  0141AE  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3628  0141B0  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3632  0141B2  C07B  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3636  0141B6  0E00               	movlw	0
  3637  0141B8  0100               	movlb	0	; () banked
  3638  0141BA  1571               	andwf	CANSetMask@mask& (0+255),w,b
  3639  0141BC  0100               	movlb	0	; () banked
  3640  0141BE  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3641  0141C0  0EFF               	movlw	255
  3642  0141C2  0100               	movlb	0	; () banked
  3643  0141C4  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3644  0141C6  0100               	movlb	0	; () banked
  3645  0141C8  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3646  0141CA  0E00               	movlw	0
  3647  0141CC  0100               	movlb	0	; () banked
  3648  0141CE  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3649  0141D0  0100               	movlb	0	; () banked
  3650  0141D2  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3651  0141D4  0E00               	movlw	0
  3652  0141D6  0100               	movlb	0	; () banked
  3653  0141D8  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3654  0141DA  0100               	movlb	0	; () banked
  3655  0141DC  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3656                           
  3657                           ; BSR set to: 0
  3658                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3659  0141DE  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  3660  0141E2  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3661  0141E6  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3662  0141EA  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3663  0141EE  C077  F076         	movff	??_CANSetMask+1,??_CANSetMask
  3664  0141F2  C078  F077         	movff	??_CANSetMask+2,??_CANSetMask+1
  3665  0141F6  C079  F078         	movff	??_CANSetMask+3,??_CANSetMask+2
  3666  0141FA  0100               	movlb	0	; () banked
  3667  0141FC  6B79               	clrf	(??_CANSetMask+3)& (0+255),b
  3668  0141FE  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  3669  014202  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3670  014206  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3671  01420A  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3675  01420E  C07B  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3679  014212  0100               	movlb	0	; () banked
  3680  014214  A173               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3681  014216  D003               	goto	l446
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3685  014218  010F               	movlb	15	; () banked
  3686  01421A  8119               	bsf	25,0,b	;volatile
  3687  01421C  D002               	goto	l447
  3688  01421E                     l446:
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;inc\CANlib.h: 676: else
  3692                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3693  01421E  010F               	movlb	15	; () banked
  3694  014220  9119               	bcf	25,0,b	;volatile
  3695  014222                     l447:
  3696                           
  3697                           ; BSR set to: 15
  3698                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3699  014222  0100               	movlb	0	; () banked
  3700  014224  A373               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3701  014226  D003               	goto	l448
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3705  014228  010F               	movlb	15	; () banked
  3706  01422A  8319               	bsf	25,1,b	;volatile
  3707  01422C  D002               	goto	l449
  3708  01422E                     l448:
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;inc\CANlib.h: 681: else
  3712                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3713  01422E  010F               	movlb	15	; () banked
  3714  014230  9319               	bcf	25,1,b	;volatile
  3715  014232                     l449:
  3716                           
  3717                           ; BSR set to: 15
  3718                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3719  014232  0100               	movlb	0	; () banked
  3720  014234  A573               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3721  014236  D003               	goto	l450
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3725  014238  010F               	movlb	15	; () banked
  3726  01423A  8B19               	bsf	25,5,b	;volatile
  3727  01423C  D002               	goto	l451
  3728  01423E                     l450:
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;inc\CANlib.h: 686: else
  3732                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3733  01423E  010F               	movlb	15	; () banked
  3734  014240  9B19               	bcf	25,5,b	;volatile
  3735  014242                     l451:
  3736                           
  3737                           ; BSR set to: 15
  3738                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3739  014242  0100               	movlb	0	; () banked
  3740  014244  A773               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3741  014246  D003               	goto	l452
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3745  014248  010F               	movlb	15	; () banked
  3746  01424A  8D19               	bsf	25,6,b	;volatile
  3747  01424C  D002               	goto	l453
  3748  01424E                     l452:
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;inc\CANlib.h: 691: else
  3752                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3753  01424E  010F               	movlb	15	; () banked
  3754  014250  9D19               	bcf	25,6,b	;volatile
  3755  014252                     l453:
  3756                           
  3757                           ; BSR set to: 15
  3758                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3759  014252  0100               	movlb	0	; () banked
  3760  014254  A973               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3761  014256  D003               	goto	l454
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3765  014258  010F               	movlb	15	; () banked
  3766  01425A  8F19               	bsf	25,7,b	;volatile
  3767  01425C  D002               	goto	l5302
  3768  01425E                     l454:
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;inc\CANlib.h: 696: else
  3772                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3773  01425E  010F               	movlb	15	; () banked
  3774  014260  9F19               	bcf	25,7,b	;volatile
  3775  014262                     l5302:
  3776                           
  3777                           ; BSR set to: 15
  3778                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  3779  014262  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  3780  014266  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3781  01426A  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3782  01426E  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3783  014272  0E16               	movlw	22
  3784  014274  D006               	goto	u6080
  3785  014276                     u6085:
  3786  014276  0100               	movlb	0	; () banked
  3787  014278  90D8               	bcf	status,0,c
  3788  01427A  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3789  01427C  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3790  01427E  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3791  014280  3376               	rrcf	??_CANSetMask& (0+255),f,b
  3792  014282                     u6080:
  3793  014282  2EE8               	decfsz	wreg,f,c
  3794  014284  D7F8               	goto	u6085
  3795  014286  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  3796  01428A  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3797  01428E  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3798  014292  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3802  014296  0100               	movlb	0	; () banked
  3803  014298  517B               	movf	CANSetMask@tamp& (0+255),w,b
  3804  01429A  0100               	movlb	0	; () banked
  3805  01429C  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3806  01429E  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3807  0142A0  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3808  0142A2  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3812  0142A4  C07B  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3813  0142A8                     l5308:
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;inc\CANlib.h: 702: }
  3817                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3818  0142A8  0E02               	movlw	2
  3819  0142AA  0100               	movlb	0	; () banked
  3820  0142AC  197A               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3821  0142AE  A4D8               	btfss	status,2,c
  3822  0142B0  0012               	return	
  3823                           
  3824                           ; BSR set to: 0
  3825  0142B2  0EF7               	movlw	247
  3826  0142B4  0100               	movlb	0	; () banked
  3827  0142B6  1975               	xorwf	CANSetMask@type& (0+255),w,b
  3828  0142B8  A4D8               	btfss	status,2,c
  3829  0142BA  0012               	return	
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;inc\CANlib.h: 705: {
  3833                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  3834  0142BC  0100               	movlb	0	; () banked
  3835  0142BE  5171               	movf	CANSetMask@mask& (0+255),w,b
  3836  0142C0  0100               	movlb	0	; () banked
  3837  0142C2  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3838  0142C4  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3839  0142C6  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3840  0142C8  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3844  0142CA  C07B  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3848  0142CE  0E00               	movlw	0
  3849  0142D0  0100               	movlb	0	; () banked
  3850  0142D2  1571               	andwf	CANSetMask@mask& (0+255),w,b
  3851  0142D4  0100               	movlb	0	; () banked
  3852  0142D6  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  3853  0142D8  0EFF               	movlw	255
  3854  0142DA  0100               	movlb	0	; () banked
  3855  0142DC  1572               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3856  0142DE  0100               	movlb	0	; () banked
  3857  0142E0  6F7C               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3858  0142E2  0E00               	movlw	0
  3859  0142E4  0100               	movlb	0	; () banked
  3860  0142E6  1573               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3861  0142E8  0100               	movlb	0	; () banked
  3862  0142EA  6F7D               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3863  0142EC  0E00               	movlw	0
  3864  0142EE  0100               	movlb	0	; () banked
  3865  0142F0  1574               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3866  0142F2  0100               	movlb	0	; () banked
  3867  0142F4  6F7E               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  3871  0142F6  C07B  F076         	movff	CANSetMask@tamp,??_CANSetMask
  3872  0142FA  C07C  F077         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3873  0142FE  C07D  F078         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3874  014302  C07E  F079         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3875  014306  C077  F076         	movff	??_CANSetMask+1,??_CANSetMask
  3876  01430A  C078  F077         	movff	??_CANSetMask+2,??_CANSetMask+1
  3877  01430E  C079  F078         	movff	??_CANSetMask+3,??_CANSetMask+2
  3878  014312  0100               	movlb	0	; () banked
  3879  014314  6B79               	clrf	(??_CANSetMask+3)& (0+255),b
  3880  014316  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  3881  01431A  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3882  01431E  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3883  014322  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3887  014326  C07B  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  3891  01432A  0100               	movlb	0	; () banked
  3892  01432C  A173               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3893  01432E  D003               	goto	l457
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3897  014330  010F               	movlb	15	; () banked
  3898  014332  811D               	bsf	29,0,b	;volatile
  3899  014334  D002               	goto	l458
  3900  014336                     l457:
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;inc\CANlib.h: 715: else
  3904                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3905  014336  010F               	movlb	15	; () banked
  3906  014338  911D               	bcf	29,0,b	;volatile
  3907  01433A                     l458:
  3908                           
  3909                           ; BSR set to: 15
  3910                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  3911  01433A  0100               	movlb	0	; () banked
  3912  01433C  A373               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3913  01433E  D003               	goto	l459
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3917  014340  010F               	movlb	15	; () banked
  3918  014342  831D               	bsf	29,1,b	;volatile
  3919  014344  D002               	goto	l460
  3920  014346                     l459:
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;inc\CANlib.h: 720: else
  3924                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3925  014346  010F               	movlb	15	; () banked
  3926  014348  931D               	bcf	29,1,b	;volatile
  3927  01434A                     l460:
  3928                           
  3929                           ; BSR set to: 15
  3930                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  3931  01434A  0100               	movlb	0	; () banked
  3932  01434C  A573               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3933  01434E  D003               	goto	l461
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3937  014350  010F               	movlb	15	; () banked
  3938  014352  8B1D               	bsf	29,5,b	;volatile
  3939  014354  D002               	goto	l462
  3940  014356                     l461:
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;inc\CANlib.h: 725: else
  3944                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3945  014356  010F               	movlb	15	; () banked
  3946  014358  9B1D               	bcf	29,5,b	;volatile
  3947  01435A                     l462:
  3948                           
  3949                           ; BSR set to: 15
  3950                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  3951  01435A  0100               	movlb	0	; () banked
  3952  01435C  A773               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3953  01435E  D003               	goto	l463
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3957  014360  010F               	movlb	15	; () banked
  3958  014362  8D1D               	bsf	29,6,b	;volatile
  3959  014364  D002               	goto	l464
  3960  014366                     l463:
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;inc\CANlib.h: 730: else
  3964                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3965  014366  010F               	movlb	15	; () banked
  3966  014368  9D1D               	bcf	29,6,b	;volatile
  3967  01436A                     l464:
  3968                           
  3969                           ; BSR set to: 15
  3970                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  3971  01436A  0100               	movlb	0	; () banked
  3972  01436C  A973               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3973  01436E  D003               	goto	l465
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3977  014370  010F               	movlb	15	; () banked
  3978  014372  8F1D               	bsf	29,7,b	;volatile
  3979  014374  D002               	goto	l5334
  3980  014376                     l465:
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;inc\CANlib.h: 735: else
  3984                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3985  014376  010F               	movlb	15	; () banked
  3986  014378  9F1D               	bcf	29,7,b	;volatile
  3987  01437A                     l5334:
  3988                           
  3989                           ; BSR set to: 15
  3990                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  3991  01437A  C071  F076         	movff	CANSetMask@mask,??_CANSetMask
  3992  01437E  C072  F077         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3993  014382  C073  F078         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3994  014386  C074  F079         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3995  01438A  0E16               	movlw	22
  3996  01438C  D006               	goto	u6160
  3997  01438E                     u6165:
  3998  01438E  0100               	movlb	0	; () banked
  3999  014390  90D8               	bcf	status,0,c
  4000  014392  3379               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4001  014394  3378               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4002  014396  3377               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4003  014398  3376               	rrcf	??_CANSetMask& (0+255),f,b
  4004  01439A                     u6160:
  4005  01439A  2EE8               	decfsz	wreg,f,c
  4006  01439C  D7F8               	goto	u6165
  4007  01439E  C076  F07B         	movff	??_CANSetMask,CANSetMask@tamp
  4008  0143A2  C077  F07C         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4009  0143A6  C078  F07D         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4010  0143AA  C079  F07E         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4014  0143AE  0100               	movlb	0	; () banked
  4015  0143B0  517B               	movf	CANSetMask@tamp& (0+255),w,b
  4016  0143B2  0100               	movlb	0	; () banked
  4017  0143B4  6F7B               	movwf	CANSetMask@tamp& (0+255),b
  4018  0143B6  6B7C               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4019  0143B8  6B7D               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4020  0143BA  6B7E               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4021                           
  4022                           ; BSR set to: 0
  4023                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4024  0143BC  C07B  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4025  0143C0  0012               	return	
  4026  0143C2                     __end_of_CANSetMask:
  4027                           	opt stack 0
  4028                           tblptru	equ	0xFF8
  4029                           tblptrh	equ	0xFF7
  4030                           tblptrl	equ	0xFF6
  4031                           tablat	equ	0xFF5
  4032                           intcon	equ	0xFF2
  4033                           postinc0	equ	0xFEE
  4034                           wreg	equ	0xFE8
  4035                           status	equ	0xFD8
  4036                           
  4037 ;; *************** function _CANSetFilter *****************
  4038 ;; Defined at:
  4039 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  numBuffer       1    wreg     enum E16924
  4042 ;;  filter          4   17[BANK0 ] unsigned long 
  4043 ;;  type            1   21[BANK0 ] enum E16887
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;  numBuffer       1   26[BANK0 ] enum E16924
  4046 ;;  tamp            4   27[BANK0 ] unsigned long 
  4047 ;; Return value:  Size  Location     Type
  4048 ;;		None               void
  4049 ;; Registers used:
  4050 ;;		wreg, status,2, status,0
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4056 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4057 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4058 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4059 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4060 ;;Total ram usage:       14 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; Hardware stack levels required when called:    3
  4063 ;; This function calls:
  4064 ;;		Nothing
  4065 ;; This function is called by:
  4066 ;;		_CANInitialize
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           	psect	text4
  4071  010000                     __ptext4:
  4072                           	opt stack 0
  4073  010000                     _CANSetFilter:
  4074                           	opt stack 25
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;incstack = 0
  4078                           ;CANSetFilter@numBuffer stored from wreg
  4079  010000  0100               	movlb	0	; () banked
  4080  010002  6F7A               	movwf	CANSetFilter@numBuffer& (0+255),b
  4081                           
  4082                           ;inc\CANlib.h: 750: unsigned long tamp;
  4083                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4084  010004  0100               	movlb	0	; () banked
  4085  010006  517A               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4086  010008  0100               	movlb	0	; () banked
  4087  01000A  A4D8               	btfss	status,2,c
  4088  01000C  D058               	goto	l5358
  4089                           
  4090                           ; BSR set to: 0
  4091  01000E  0100               	movlb	0	; () banked
  4092  010010  2975               	incf	CANSetFilter@type& (0+255),w,b
  4093  010012  A4D8               	btfss	status,2,c
  4094  010014  D054               	goto	l5358
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;inc\CANlib.h: 753: {
  4098                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4099  010016  010F               	movlb	15	; () banked
  4100  010018  9701               	bcf	1,3,b	;volatile
  4101                           
  4102                           ; BSR set to: 15
  4103                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4104  01001A  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4105  01001E  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4106  010022  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4107  010026  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4108  01002A  0E04               	movlw	4
  4109  01002C  D006               	goto	u6190
  4110  01002E                     u6195:
  4111  01002E  0100               	movlb	0	; () banked
  4112  010030  90D8               	bcf	status,0,c
  4113  010032  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4114  010034  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4115  010036  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4116  010038  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4117  01003A                     u6190:
  4118  01003A  2EE8               	decfsz	wreg,f,c
  4119  01003C  D7F8               	goto	u6195
  4120  01003E  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4121  010042  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4122  010046  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4123  01004A  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4127  01004E  0100               	movlb	0	; () banked
  4128  010050  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4129  010052  0100               	movlb	0	; () banked
  4130  010054  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4131  010056  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4132  010058  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4133  01005A  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4137  01005C  C07B  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4141  010060  0E07               	movlw	7
  4142  010062  0100               	movlb	0	; () banked
  4143  010064  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4144  010066  0100               	movlb	0	; () banked
  4145  010068  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4146  01006A  0E00               	movlw	0
  4147  01006C  0100               	movlb	0	; () banked
  4148  01006E  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4149  010070  0100               	movlb	0	; () banked
  4150  010072  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4151  010074  0E00               	movlw	0
  4152  010076  0100               	movlb	0	; () banked
  4153  010078  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4154  01007A  0100               	movlb	0	; () banked
  4155  01007C  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4156  01007E  0E00               	movlw	0
  4157  010080  0100               	movlb	0	; () banked
  4158  010082  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4159  010084  0100               	movlb	0	; () banked
  4160  010086  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4164  010088  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  4165  01008C  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4166  010090  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4167  010094  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4168  010098  0E05               	movlw	5
  4169  01009A                     u6205:
  4170  01009A  90D8               	bcf	status,0,c
  4171  01009C  0100               	movlb	0	; () banked
  4172  01009E  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  4173  0100A0  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4174  0100A2  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4175  0100A4  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4176  0100A6  2EE8               	decfsz	wreg,f,c
  4177  0100A8  D7F8               	goto	u6205
  4178  0100AA  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4179  0100AE  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4180  0100B2  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4181  0100B6  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4185  0100BA  C07B  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4186  0100BE                     l5358:
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;inc\CANlib.h: 763: }
  4190                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4191  0100BE  0100               	movlb	0	; () banked
  4192  0100C0  057A               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4193  0100C2  A4D8               	btfss	status,2,c
  4194  0100C4  D058               	goto	l5376
  4195                           
  4196                           ; BSR set to: 0
  4197  0100C6  0100               	movlb	0	; () banked
  4198  0100C8  2975               	incf	CANSetFilter@type& (0+255),w,b
  4199  0100CA  A4D8               	btfss	status,2,c
  4200  0100CC  D054               	goto	l5376
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;inc\CANlib.h: 766: {
  4204                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4205  0100CE  010F               	movlb	15	; () banked
  4206  0100D0  9705               	bcf	5,3,b	;volatile
  4207                           
  4208                           ; BSR set to: 15
  4209                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4210  0100D2  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4211  0100D6  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4212  0100DA  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4213  0100DE  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4214  0100E2  0E04               	movlw	4
  4215  0100E4  D006               	goto	u6230
  4216  0100E6                     u6235:
  4217  0100E6  0100               	movlb	0	; () banked
  4218  0100E8  90D8               	bcf	status,0,c
  4219  0100EA  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4220  0100EC  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4221  0100EE  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4222  0100F0  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4223  0100F2                     u6230:
  4224  0100F2  2EE8               	decfsz	wreg,f,c
  4225  0100F4  D7F8               	goto	u6235
  4226  0100F6  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4227  0100FA  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4228  0100FE  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4229  010102  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4233  010106  0100               	movlb	0	; () banked
  4234  010108  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4235  01010A  0100               	movlb	0	; () banked
  4236  01010C  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4237  01010E  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4238  010110  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4239  010112  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4243  010114  C07B  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4247  010118  0E07               	movlw	7
  4248  01011A  0100               	movlb	0	; () banked
  4249  01011C  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4250  01011E  0100               	movlb	0	; () banked
  4251  010120  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4252  010122  0E00               	movlw	0
  4253  010124  0100               	movlb	0	; () banked
  4254  010126  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4255  010128  0100               	movlb	0	; () banked
  4256  01012A  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4257  01012C  0E00               	movlw	0
  4258  01012E  0100               	movlb	0	; () banked
  4259  010130  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4260  010132  0100               	movlb	0	; () banked
  4261  010134  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4262  010136  0E00               	movlw	0
  4263  010138  0100               	movlb	0	; () banked
  4264  01013A  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4265  01013C  0100               	movlb	0	; () banked
  4266  01013E  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4270  010140  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  4271  010144  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4272  010148  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4273  01014C  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4274  010150  0E05               	movlw	5
  4275  010152                     u6245:
  4276  010152  90D8               	bcf	status,0,c
  4277  010154  0100               	movlb	0	; () banked
  4278  010156  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  4279  010158  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4280  01015A  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4281  01015C  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4282  01015E  2EE8               	decfsz	wreg,f,c
  4283  010160  D7F8               	goto	u6245
  4284  010162  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4285  010166  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4286  01016A  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4287  01016E  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4291  010172  C07B  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4292  010176                     l5376:
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;inc\CANlib.h: 776: }
  4296                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4297  010176  0E02               	movlw	2
  4298  010178  0100               	movlb	0	; () banked
  4299  01017A  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4300  01017C  A4D8               	btfss	status,2,c
  4301  01017E  D058               	goto	l5394
  4302                           
  4303                           ; BSR set to: 0
  4304  010180  0100               	movlb	0	; () banked
  4305  010182  2975               	incf	CANSetFilter@type& (0+255),w,b
  4306  010184  A4D8               	btfss	status,2,c
  4307  010186  D054               	goto	l5394
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;inc\CANlib.h: 779: {
  4311                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4312  010188  010F               	movlb	15	; () banked
  4313  01018A  9709               	bcf	9,3,b	;volatile
  4314                           
  4315                           ; BSR set to: 15
  4316                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4317  01018C  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4318  010190  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4319  010194  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4320  010198  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4321  01019C  0E04               	movlw	4
  4322  01019E  D006               	goto	u6270
  4323  0101A0                     u6275:
  4324  0101A0  0100               	movlb	0	; () banked
  4325  0101A2  90D8               	bcf	status,0,c
  4326  0101A4  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4327  0101A6  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4328  0101A8  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4329  0101AA  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4330  0101AC                     u6270:
  4331  0101AC  2EE8               	decfsz	wreg,f,c
  4332  0101AE  D7F8               	goto	u6275
  4333  0101B0  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4334  0101B4  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4335  0101B8  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4336  0101BC  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4340  0101C0  0100               	movlb	0	; () banked
  4341  0101C2  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4342  0101C4  0100               	movlb	0	; () banked
  4343  0101C6  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4344  0101C8  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4345  0101CA  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4346  0101CC  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4350  0101CE  C07B  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4354  0101D2  0E07               	movlw	7
  4355  0101D4  0100               	movlb	0	; () banked
  4356  0101D6  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4357  0101D8  0100               	movlb	0	; () banked
  4358  0101DA  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4359  0101DC  0E00               	movlw	0
  4360  0101DE  0100               	movlb	0	; () banked
  4361  0101E0  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4362  0101E2  0100               	movlb	0	; () banked
  4363  0101E4  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4364  0101E6  0E00               	movlw	0
  4365  0101E8  0100               	movlb	0	; () banked
  4366  0101EA  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4367  0101EC  0100               	movlb	0	; () banked
  4368  0101EE  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4369  0101F0  0E00               	movlw	0
  4370  0101F2  0100               	movlb	0	; () banked
  4371  0101F4  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4372  0101F6  0100               	movlb	0	; () banked
  4373  0101F8  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4377  0101FA  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  4378  0101FE  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4379  010202  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4380  010206  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4381  01020A  0E05               	movlw	5
  4382  01020C                     u6285:
  4383  01020C  90D8               	bcf	status,0,c
  4384  01020E  0100               	movlb	0	; () banked
  4385  010210  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  4386  010212  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4387  010214  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4388  010216  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4389  010218  2EE8               	decfsz	wreg,f,c
  4390  01021A  D7F8               	goto	u6285
  4391  01021C  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4392  010220  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4393  010224  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4394  010228  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4398  01022C  C07B  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4399  010230                     l5394:
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;inc\CANlib.h: 789: }
  4403                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4404  010230  0E03               	movlw	3
  4405  010232  0100               	movlb	0	; () banked
  4406  010234  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4407  010236  A4D8               	btfss	status,2,c
  4408  010238  D058               	goto	l5412
  4409                           
  4410                           ; BSR set to: 0
  4411  01023A  0100               	movlb	0	; () banked
  4412  01023C  2975               	incf	CANSetFilter@type& (0+255),w,b
  4413  01023E  A4D8               	btfss	status,2,c
  4414  010240  D054               	goto	l5412
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;inc\CANlib.h: 792: {
  4418                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4419  010242  010F               	movlb	15	; () banked
  4420  010244  970D               	bcf	13,3,b	;volatile
  4421                           
  4422                           ; BSR set to: 15
  4423                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4424  010246  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4425  01024A  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4426  01024E  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4427  010252  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4428  010256  0E04               	movlw	4
  4429  010258  D006               	goto	u6310
  4430  01025A                     u6315:
  4431  01025A  0100               	movlb	0	; () banked
  4432  01025C  90D8               	bcf	status,0,c
  4433  01025E  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4434  010260  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4435  010262  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4436  010264  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4437  010266                     u6310:
  4438  010266  2EE8               	decfsz	wreg,f,c
  4439  010268  D7F8               	goto	u6315
  4440  01026A  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4441  01026E  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4442  010272  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4443  010276  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4447  01027A  0100               	movlb	0	; () banked
  4448  01027C  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4449  01027E  0100               	movlb	0	; () banked
  4450  010280  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4451  010282  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4452  010284  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4453  010286  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4457  010288  C07B  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4461  01028C  0E07               	movlw	7
  4462  01028E  0100               	movlb	0	; () banked
  4463  010290  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4464  010292  0100               	movlb	0	; () banked
  4465  010294  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4466  010296  0E00               	movlw	0
  4467  010298  0100               	movlb	0	; () banked
  4468  01029A  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4469  01029C  0100               	movlb	0	; () banked
  4470  01029E  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4471  0102A0  0E00               	movlw	0
  4472  0102A2  0100               	movlb	0	; () banked
  4473  0102A4  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4474  0102A6  0100               	movlb	0	; () banked
  4475  0102A8  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4476  0102AA  0E00               	movlw	0
  4477  0102AC  0100               	movlb	0	; () banked
  4478  0102AE  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4479  0102B0  0100               	movlb	0	; () banked
  4480  0102B2  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4481                           
  4482                           ; BSR set to: 0
  4483                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4484  0102B4  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  4485  0102B8  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4486  0102BC  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4487  0102C0  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4488  0102C4  0E05               	movlw	5
  4489  0102C6                     u6325:
  4490  0102C6  90D8               	bcf	status,0,c
  4491  0102C8  0100               	movlb	0	; () banked
  4492  0102CA  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  4493  0102CC  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4494  0102CE  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4495  0102D0  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4496  0102D2  2EE8               	decfsz	wreg,f,c
  4497  0102D4  D7F8               	goto	u6325
  4498  0102D6  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4499  0102DA  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4500  0102DE  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4501  0102E2  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4505  0102E6  C07B  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4506  0102EA                     l5412:
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;inc\CANlib.h: 802: }
  4510                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4511  0102EA  0E04               	movlw	4
  4512  0102EC  0100               	movlb	0	; () banked
  4513  0102EE  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4514  0102F0  A4D8               	btfss	status,2,c
  4515  0102F2  D058               	goto	l5430
  4516                           
  4517                           ; BSR set to: 0
  4518  0102F4  0100               	movlb	0	; () banked
  4519  0102F6  2975               	incf	CANSetFilter@type& (0+255),w,b
  4520  0102F8  A4D8               	btfss	status,2,c
  4521  0102FA  D054               	goto	l5430
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;inc\CANlib.h: 805: {
  4525                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4526  0102FC  010F               	movlb	15	; () banked
  4527  0102FE  9711               	bcf	17,3,b	;volatile
  4528                           
  4529                           ; BSR set to: 15
  4530                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4531  010300  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4532  010304  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4533  010308  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4534  01030C  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4535  010310  0E04               	movlw	4
  4536  010312  D006               	goto	u6350
  4537  010314                     u6355:
  4538  010314  0100               	movlb	0	; () banked
  4539  010316  90D8               	bcf	status,0,c
  4540  010318  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4541  01031A  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4542  01031C  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4543  01031E  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4544  010320                     u6350:
  4545  010320  2EE8               	decfsz	wreg,f,c
  4546  010322  D7F8               	goto	u6355
  4547  010324  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4548  010328  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4549  01032C  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4550  010330  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4554  010334  0100               	movlb	0	; () banked
  4555  010336  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4556  010338  0100               	movlb	0	; () banked
  4557  01033A  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4558  01033C  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4559  01033E  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4560  010340  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4564  010342  C07B  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4568  010346  0E07               	movlw	7
  4569  010348  0100               	movlb	0	; () banked
  4570  01034A  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4571  01034C  0100               	movlb	0	; () banked
  4572  01034E  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4573  010350  0E00               	movlw	0
  4574  010352  0100               	movlb	0	; () banked
  4575  010354  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4576  010356  0100               	movlb	0	; () banked
  4577  010358  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4578  01035A  0E00               	movlw	0
  4579  01035C  0100               	movlb	0	; () banked
  4580  01035E  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4581  010360  0100               	movlb	0	; () banked
  4582  010362  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4583  010364  0E00               	movlw	0
  4584  010366  0100               	movlb	0	; () banked
  4585  010368  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4586  01036A  0100               	movlb	0	; () banked
  4587  01036C  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4591  01036E  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  4592  010372  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4593  010376  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4594  01037A  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4595  01037E  0E05               	movlw	5
  4596  010380                     u6365:
  4597  010380  90D8               	bcf	status,0,c
  4598  010382  0100               	movlb	0	; () banked
  4599  010384  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  4600  010386  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4601  010388  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4602  01038A  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4603  01038C  2EE8               	decfsz	wreg,f,c
  4604  01038E  D7F8               	goto	u6365
  4605  010390  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4606  010394  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4607  010398  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4608  01039C  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4612  0103A0  C07B  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4613  0103A4                     l5430:
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;inc\CANlib.h: 815: }
  4617                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4618  0103A4  0E05               	movlw	5
  4619  0103A6  0100               	movlb	0	; () banked
  4620  0103A8  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4621  0103AA  A4D8               	btfss	status,2,c
  4622  0103AC  D058               	goto	l5448
  4623                           
  4624                           ; BSR set to: 0
  4625  0103AE  0100               	movlb	0	; () banked
  4626  0103B0  2975               	incf	CANSetFilter@type& (0+255),w,b
  4627  0103B2  A4D8               	btfss	status,2,c
  4628  0103B4  D054               	goto	l5448
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;inc\CANlib.h: 818: {
  4632                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4633  0103B6  010F               	movlb	15	; () banked
  4634  0103B8  9715               	bcf	21,3,b	;volatile
  4635                           
  4636                           ; BSR set to: 15
  4637                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4638  0103BA  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4639  0103BE  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4640  0103C2  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4641  0103C6  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4642  0103CA  0E04               	movlw	4
  4643  0103CC  D006               	goto	u6390
  4644  0103CE                     u6395:
  4645  0103CE  0100               	movlb	0	; () banked
  4646  0103D0  90D8               	bcf	status,0,c
  4647  0103D2  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4648  0103D4  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4649  0103D6  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4650  0103D8  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4651  0103DA                     u6390:
  4652  0103DA  2EE8               	decfsz	wreg,f,c
  4653  0103DC  D7F8               	goto	u6395
  4654  0103DE  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4655  0103E2  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4656  0103E6  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4657  0103EA  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4661  0103EE  0100               	movlb	0	; () banked
  4662  0103F0  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4663  0103F2  0100               	movlb	0	; () banked
  4664  0103F4  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4665  0103F6  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4666  0103F8  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4667  0103FA  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4671  0103FC  C07B  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4675  010400  0E07               	movlw	7
  4676  010402  0100               	movlb	0	; () banked
  4677  010404  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4678  010406  0100               	movlb	0	; () banked
  4679  010408  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4680  01040A  0E00               	movlw	0
  4681  01040C  0100               	movlb	0	; () banked
  4682  01040E  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4683  010410  0100               	movlb	0	; () banked
  4684  010412  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4685  010414  0E00               	movlw	0
  4686  010416  0100               	movlb	0	; () banked
  4687  010418  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4688  01041A  0100               	movlb	0	; () banked
  4689  01041C  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4690  01041E  0E00               	movlw	0
  4691  010420  0100               	movlb	0	; () banked
  4692  010422  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4693  010424  0100               	movlb	0	; () banked
  4694  010426  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4698  010428  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  4699  01042C  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4700  010430  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4701  010434  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4702  010438  0E05               	movlw	5
  4703  01043A                     u6405:
  4704  01043A  90D8               	bcf	status,0,c
  4705  01043C  0100               	movlb	0	; () banked
  4706  01043E  3776               	rlcf	??_CANSetFilter& (0+255),f,b
  4707  010440  3777               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4708  010442  3778               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4709  010444  3779               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4710  010446  2EE8               	decfsz	wreg,f,c
  4711  010448  D7F8               	goto	u6405
  4712  01044A  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4713  01044E  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4714  010452  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4715  010456  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4719  01045A  C07B  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4720  01045E                     l5448:
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;inc\CANlib.h: 828: }
  4724                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4725  01045E  0100               	movlb	0	; () banked
  4726  010460  517A               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4727  010462  0100               	movlb	0	; () banked
  4728  010464  A4D8               	btfss	status,2,c
  4729  010466  D089               	goto	l5482
  4730                           
  4731                           ; BSR set to: 0
  4732  010468  0EF7               	movlw	247
  4733  01046A  0100               	movlb	0	; () banked
  4734  01046C  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  4735  01046E  A4D8               	btfss	status,2,c
  4736  010470  D084               	goto	l5482
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;inc\CANlib.h: 832: {
  4740                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4741  010472  010F               	movlb	15	; () banked
  4742  010474  8701               	bsf	1,3,b	;volatile
  4743                           
  4744                           ; BSR set to: 15
  4745                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4746  010476  0100               	movlb	0	; () banked
  4747  010478  5171               	movf	CANSetFilter@filter& (0+255),w,b
  4748  01047A  0100               	movlb	0	; () banked
  4749  01047C  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4750  01047E  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4751  010480  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4752  010482  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4756  010484  C07B  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  4760  010488  0E00               	movlw	0
  4761  01048A  0100               	movlb	0	; () banked
  4762  01048C  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4763  01048E  0100               	movlb	0	; () banked
  4764  010490  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4765  010492  0EFF               	movlw	255
  4766  010494  0100               	movlb	0	; () banked
  4767  010496  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4768  010498  0100               	movlb	0	; () banked
  4769  01049A  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4770  01049C  0E00               	movlw	0
  4771  01049E  0100               	movlb	0	; () banked
  4772  0104A0  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4773  0104A2  0100               	movlb	0	; () banked
  4774  0104A4  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4775  0104A6  0E00               	movlw	0
  4776  0104A8  0100               	movlb	0	; () banked
  4777  0104AA  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4778  0104AC  0100               	movlb	0	; () banked
  4779  0104AE  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  4783  0104B0  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  4784  0104B4  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4785  0104B8  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4786  0104BC  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4787  0104C0  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  4788  0104C4  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4789  0104C8  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4790  0104CC  0100               	movlb	0	; () banked
  4791  0104CE  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  4792  0104D0  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4793  0104D4  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4794  0104D8  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4795  0104DC  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4799  0104E0  C07B  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  4803  0104E4  0100               	movlb	0	; () banked
  4804  0104E6  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4805  0104E8  D003               	goto	l477
  4806                           
  4807                           ; BSR set to: 0
  4808                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4809  0104EA  010F               	movlb	15	; () banked
  4810  0104EC  8101               	bsf	1,0,b	;volatile
  4811  0104EE  D002               	goto	l478
  4812  0104F0                     l477:
  4813                           
  4814                           ; BSR set to: 0
  4815                           ;inc\CANlib.h: 844: else
  4816                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4817  0104F0  010F               	movlb	15	; () banked
  4818  0104F2  9101               	bcf	1,0,b	;volatile
  4819  0104F4                     l478:
  4820                           
  4821                           ; BSR set to: 15
  4822                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  4823  0104F4  0100               	movlb	0	; () banked
  4824  0104F6  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4825  0104F8  D003               	goto	l479
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4829  0104FA  010F               	movlb	15	; () banked
  4830  0104FC  8301               	bsf	1,1,b	;volatile
  4831  0104FE  D002               	goto	l480
  4832  010500                     l479:
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;inc\CANlib.h: 849: else
  4836                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4837  010500  010F               	movlb	15	; () banked
  4838  010502  9301               	bcf	1,1,b	;volatile
  4839  010504                     l480:
  4840                           
  4841                           ; BSR set to: 15
  4842                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  4843  010504  0100               	movlb	0	; () banked
  4844  010506  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4845  010508  D003               	goto	l481
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4849  01050A  010F               	movlb	15	; () banked
  4850  01050C  8B01               	bsf	1,5,b	;volatile
  4851  01050E  D002               	goto	l482
  4852  010510                     l481:
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;inc\CANlib.h: 854: else
  4856                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4857  010510  010F               	movlb	15	; () banked
  4858  010512  9B01               	bcf	1,5,b	;volatile
  4859  010514                     l482:
  4860                           
  4861                           ; BSR set to: 15
  4862                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  4863  010514  0100               	movlb	0	; () banked
  4864  010516  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4865  010518  D003               	goto	l483
  4866                           
  4867                           ; BSR set to: 0
  4868                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4869  01051A  010F               	movlb	15	; () banked
  4870  01051C  8D01               	bsf	1,6,b	;volatile
  4871  01051E  D002               	goto	l484
  4872  010520                     l483:
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;inc\CANlib.h: 859: else
  4876                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4877  010520  010F               	movlb	15	; () banked
  4878  010522  9D01               	bcf	1,6,b	;volatile
  4879  010524                     l484:
  4880                           
  4881                           ; BSR set to: 15
  4882                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  4883  010524  0100               	movlb	0	; () banked
  4884  010526  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4885  010528  D003               	goto	l485
  4886                           
  4887                           ; BSR set to: 0
  4888                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4889  01052A  010F               	movlb	15	; () banked
  4890  01052C  8F01               	bsf	1,7,b	;volatile
  4891  01052E  D002               	goto	l5476
  4892  010530                     l485:
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;inc\CANlib.h: 864: else
  4896                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4897  010530  010F               	movlb	15	; () banked
  4898  010532  9F01               	bcf	1,7,b	;volatile
  4899  010534                     l5476:
  4900                           
  4901                           ; BSR set to: 15
  4902                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  4903  010534  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  4904  010538  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4905  01053C  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4906  010540  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4907  010544  0E16               	movlw	22
  4908  010546  D006               	goto	u6480
  4909  010548                     u6485:
  4910  010548  0100               	movlb	0	; () banked
  4911  01054A  90D8               	bcf	status,0,c
  4912  01054C  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4913  01054E  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4914  010550  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4915  010552  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  4916  010554                     u6480:
  4917  010554  2EE8               	decfsz	wreg,f,c
  4918  010556  D7F8               	goto	u6485
  4919  010558  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  4920  01055C  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4921  010560  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4922  010564  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  4926  010568  0100               	movlb	0	; () banked
  4927  01056A  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  4928  01056C  0100               	movlb	0	; () banked
  4929  01056E  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4930  010570  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4931  010572  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4932  010574  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4936  010576  C07B  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4937  01057A                     l5482:
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;inc\CANlib.h: 870: }
  4941                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4942  01057A  0100               	movlb	0	; () banked
  4943  01057C  057A               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4944  01057E  A4D8               	btfss	status,2,c
  4945  010580  D089               	goto	l5516
  4946                           
  4947                           ; BSR set to: 0
  4948  010582  0EF7               	movlw	247
  4949  010584  0100               	movlb	0	; () banked
  4950  010586  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  4951  010588  A4D8               	btfss	status,2,c
  4952  01058A  D084               	goto	l5516
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;inc\CANlib.h: 873: {
  4956                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4957  01058C  010F               	movlb	15	; () banked
  4958  01058E  8705               	bsf	5,3,b	;volatile
  4959                           
  4960                           ; BSR set to: 15
  4961                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  4962  010590  0100               	movlb	0	; () banked
  4963  010592  5171               	movf	CANSetFilter@filter& (0+255),w,b
  4964  010594  0100               	movlb	0	; () banked
  4965  010596  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4966  010598  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4967  01059A  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4968  01059C  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4972  01059E  C07B  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  4976  0105A2  0E00               	movlw	0
  4977  0105A4  0100               	movlb	0	; () banked
  4978  0105A6  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  4979  0105A8  0100               	movlb	0	; () banked
  4980  0105AA  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  4981  0105AC  0EFF               	movlw	255
  4982  0105AE  0100               	movlb	0	; () banked
  4983  0105B0  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4984  0105B2  0100               	movlb	0	; () banked
  4985  0105B4  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4986  0105B6  0E00               	movlw	0
  4987  0105B8  0100               	movlb	0	; () banked
  4988  0105BA  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4989  0105BC  0100               	movlb	0	; () banked
  4990  0105BE  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4991  0105C0  0E00               	movlw	0
  4992  0105C2  0100               	movlb	0	; () banked
  4993  0105C4  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4994  0105C6  0100               	movlb	0	; () banked
  4995  0105C8  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  4999  0105CA  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5000  0105CE  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5001  0105D2  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5002  0105D6  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5003  0105DA  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  5004  0105DE  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5005  0105E2  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5006  0105E6  0100               	movlb	0	; () banked
  5007  0105E8  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  5008  0105EA  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5009  0105EE  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5010  0105F2  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5011  0105F6  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5012                           
  5013                           ; BSR set to: 0
  5014                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5015  0105FA  C07B  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5019  0105FE  0100               	movlb	0	; () banked
  5020  010600  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5021  010602  D003               	goto	l488
  5022                           
  5023                           ; BSR set to: 0
  5024                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5025  010604  010F               	movlb	15	; () banked
  5026  010606  8105               	bsf	5,0,b	;volatile
  5027  010608  D002               	goto	l489
  5028  01060A                     l488:
  5029                           
  5030                           ; BSR set to: 0
  5031                           ;inc\CANlib.h: 885: else
  5032                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5033  01060A  010F               	movlb	15	; () banked
  5034  01060C  9105               	bcf	5,0,b	;volatile
  5035  01060E                     l489:
  5036                           
  5037                           ; BSR set to: 15
  5038                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5039  01060E  0100               	movlb	0	; () banked
  5040  010610  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5041  010612  D003               	goto	l490
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5045  010614  010F               	movlb	15	; () banked
  5046  010616  8305               	bsf	5,1,b	;volatile
  5047  010618  D002               	goto	l491
  5048  01061A                     l490:
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;inc\CANlib.h: 890: else
  5052                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5053  01061A  010F               	movlb	15	; () banked
  5054  01061C  9305               	bcf	5,1,b	;volatile
  5055  01061E                     l491:
  5056                           
  5057                           ; BSR set to: 15
  5058                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5059  01061E  0100               	movlb	0	; () banked
  5060  010620  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5061  010622  D003               	goto	l492
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5065  010624  010F               	movlb	15	; () banked
  5066  010626  8B05               	bsf	5,5,b	;volatile
  5067  010628  D002               	goto	l493
  5068  01062A                     l492:
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;inc\CANlib.h: 895: else
  5072                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5073  01062A  010F               	movlb	15	; () banked
  5074  01062C  9B05               	bcf	5,5,b	;volatile
  5075  01062E                     l493:
  5076                           
  5077                           ; BSR set to: 15
  5078                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5079  01062E  0100               	movlb	0	; () banked
  5080  010630  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5081  010632  D003               	goto	l494
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5085  010634  010F               	movlb	15	; () banked
  5086  010636  8D05               	bsf	5,6,b	;volatile
  5087  010638  D002               	goto	l495
  5088  01063A                     l494:
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;inc\CANlib.h: 900: else
  5092                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5093  01063A  010F               	movlb	15	; () banked
  5094  01063C  9D05               	bcf	5,6,b	;volatile
  5095  01063E                     l495:
  5096                           
  5097                           ; BSR set to: 15
  5098                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5099  01063E  0100               	movlb	0	; () banked
  5100  010640  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5101  010642  D003               	goto	l496
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5105  010644  010F               	movlb	15	; () banked
  5106  010646  8F05               	bsf	5,7,b	;volatile
  5107  010648  D002               	goto	l5510
  5108  01064A                     l496:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;inc\CANlib.h: 905: else
  5112                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5113  01064A  010F               	movlb	15	; () banked
  5114  01064C  9F05               	bcf	5,7,b	;volatile
  5115  01064E                     l5510:
  5116                           
  5117                           ; BSR set to: 15
  5118                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5119  01064E  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5120  010652  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5121  010656  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5122  01065A  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5123  01065E  0E16               	movlw	22
  5124  010660  D006               	goto	u6560
  5125  010662                     u6565:
  5126  010662  0100               	movlb	0	; () banked
  5127  010664  90D8               	bcf	status,0,c
  5128  010666  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5129  010668  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5130  01066A  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5131  01066C  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5132  01066E                     u6560:
  5133  01066E  2EE8               	decfsz	wreg,f,c
  5134  010670  D7F8               	goto	u6565
  5135  010672  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5136  010676  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5137  01067A  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5138  01067E  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5142  010682  0100               	movlb	0	; () banked
  5143  010684  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5144  010686  0100               	movlb	0	; () banked
  5145  010688  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5146  01068A  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5147  01068C  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5148  01068E  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5152  010690  C07B  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5153  010694                     l5516:
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;inc\CANlib.h: 911: }
  5157                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5158  010694  0E02               	movlw	2
  5159  010696  0100               	movlb	0	; () banked
  5160  010698  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5161  01069A  A4D8               	btfss	status,2,c
  5162  01069C  D089               	goto	l5550
  5163                           
  5164                           ; BSR set to: 0
  5165  01069E  0EF7               	movlw	247
  5166  0106A0  0100               	movlb	0	; () banked
  5167  0106A2  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5168  0106A4  A4D8               	btfss	status,2,c
  5169  0106A6  D084               	goto	l5550
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;inc\CANlib.h: 915: {
  5173                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5174  0106A8  010F               	movlb	15	; () banked
  5175  0106AA  8709               	bsf	9,3,b	;volatile
  5176                           
  5177                           ; BSR set to: 15
  5178                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5179  0106AC  0100               	movlb	0	; () banked
  5180  0106AE  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5181  0106B0  0100               	movlb	0	; () banked
  5182  0106B2  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5183  0106B4  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5184  0106B6  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5185  0106B8  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5189  0106BA  C07B  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5193  0106BE  0E00               	movlw	0
  5194  0106C0  0100               	movlb	0	; () banked
  5195  0106C2  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5196  0106C4  0100               	movlb	0	; () banked
  5197  0106C6  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5198  0106C8  0EFF               	movlw	255
  5199  0106CA  0100               	movlb	0	; () banked
  5200  0106CC  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5201  0106CE  0100               	movlb	0	; () banked
  5202  0106D0  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5203  0106D2  0E00               	movlw	0
  5204  0106D4  0100               	movlb	0	; () banked
  5205  0106D6  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5206  0106D8  0100               	movlb	0	; () banked
  5207  0106DA  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5208  0106DC  0E00               	movlw	0
  5209  0106DE  0100               	movlb	0	; () banked
  5210  0106E0  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5211  0106E2  0100               	movlb	0	; () banked
  5212  0106E4  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5216  0106E6  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5217  0106EA  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5218  0106EE  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5219  0106F2  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5220  0106F6  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  5221  0106FA  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5222  0106FE  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5223  010702  0100               	movlb	0	; () banked
  5224  010704  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  5225  010706  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5226  01070A  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5227  01070E  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5228  010712  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5232  010716  C07B  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5236  01071A  0100               	movlb	0	; () banked
  5237  01071C  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5238  01071E  D003               	goto	l499
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5242  010720  010F               	movlb	15	; () banked
  5243  010722  8109               	bsf	9,0,b	;volatile
  5244  010724  D002               	goto	l500
  5245  010726                     l499:
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;inc\CANlib.h: 927: else
  5249                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5250  010726  010F               	movlb	15	; () banked
  5251  010728  9109               	bcf	9,0,b	;volatile
  5252  01072A                     l500:
  5253                           
  5254                           ; BSR set to: 15
  5255                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5256  01072A  0100               	movlb	0	; () banked
  5257  01072C  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5258  01072E  D003               	goto	l501
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5262  010730  010F               	movlb	15	; () banked
  5263  010732  8309               	bsf	9,1,b	;volatile
  5264  010734  D002               	goto	l502
  5265  010736                     l501:
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;inc\CANlib.h: 932: else
  5269                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5270  010736  010F               	movlb	15	; () banked
  5271  010738  9309               	bcf	9,1,b	;volatile
  5272  01073A                     l502:
  5273                           
  5274                           ; BSR set to: 15
  5275                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5276  01073A  0100               	movlb	0	; () banked
  5277  01073C  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5278  01073E  D003               	goto	l503
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5282  010740  010F               	movlb	15	; () banked
  5283  010742  8B09               	bsf	9,5,b	;volatile
  5284  010744  D002               	goto	l504
  5285  010746                     l503:
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;inc\CANlib.h: 937: else
  5289                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5290  010746  010F               	movlb	15	; () banked
  5291  010748  9B09               	bcf	9,5,b	;volatile
  5292  01074A                     l504:
  5293                           
  5294                           ; BSR set to: 15
  5295                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5296  01074A  0100               	movlb	0	; () banked
  5297  01074C  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5298  01074E  D003               	goto	l505
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5302  010750  010F               	movlb	15	; () banked
  5303  010752  8D09               	bsf	9,6,b	;volatile
  5304  010754  D002               	goto	l506
  5305  010756                     l505:
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;inc\CANlib.h: 942: else
  5309                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5310  010756  010F               	movlb	15	; () banked
  5311  010758  9D09               	bcf	9,6,b	;volatile
  5312  01075A                     l506:
  5313                           
  5314                           ; BSR set to: 15
  5315                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5316  01075A  0100               	movlb	0	; () banked
  5317  01075C  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5318  01075E  D003               	goto	l507
  5319                           
  5320                           ; BSR set to: 0
  5321                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5322  010760  010F               	movlb	15	; () banked
  5323  010762  8F09               	bsf	9,7,b	;volatile
  5324  010764  D002               	goto	l5544
  5325  010766                     l507:
  5326                           
  5327                           ; BSR set to: 0
  5328                           ;inc\CANlib.h: 947: else
  5329                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5330  010766  010F               	movlb	15	; () banked
  5331  010768  9F09               	bcf	9,7,b	;volatile
  5332  01076A                     l5544:
  5333                           
  5334                           ; BSR set to: 15
  5335                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5336  01076A  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5337  01076E  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5338  010772  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5339  010776  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5340  01077A  0E16               	movlw	22
  5341  01077C  D006               	goto	u6640
  5342  01077E                     u6645:
  5343  01077E  0100               	movlb	0	; () banked
  5344  010780  90D8               	bcf	status,0,c
  5345  010782  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5346  010784  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5347  010786  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5348  010788  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5349  01078A                     u6640:
  5350  01078A  2EE8               	decfsz	wreg,f,c
  5351  01078C  D7F8               	goto	u6645
  5352  01078E  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5353  010792  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5354  010796  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5355  01079A  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5356                           
  5357                           ; BSR set to: 0
  5358                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5359  01079E  0100               	movlb	0	; () banked
  5360  0107A0  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5361  0107A2  0100               	movlb	0	; () banked
  5362  0107A4  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5363  0107A6  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5364  0107A8  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5365  0107AA  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5369  0107AC  C07B  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5370  0107B0                     l5550:
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;inc\CANlib.h: 953: }
  5374                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5375  0107B0  0E03               	movlw	3
  5376  0107B2  0100               	movlb	0	; () banked
  5377  0107B4  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5378  0107B6  A4D8               	btfss	status,2,c
  5379  0107B8  D089               	goto	l5584
  5380                           
  5381                           ; BSR set to: 0
  5382  0107BA  0EF7               	movlw	247
  5383  0107BC  0100               	movlb	0	; () banked
  5384  0107BE  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5385  0107C0  A4D8               	btfss	status,2,c
  5386  0107C2  D084               	goto	l5584
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;inc\CANlib.h: 956: {
  5390                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5391  0107C4  010F               	movlb	15	; () banked
  5392  0107C6  870D               	bsf	13,3,b	;volatile
  5393                           
  5394                           ; BSR set to: 15
  5395                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5396  0107C8  0100               	movlb	0	; () banked
  5397  0107CA  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5398  0107CC  0100               	movlb	0	; () banked
  5399  0107CE  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5400  0107D0  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5401  0107D2  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5402  0107D4  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5406  0107D6  C07B  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5410  0107DA  0E00               	movlw	0
  5411  0107DC  0100               	movlb	0	; () banked
  5412  0107DE  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5413  0107E0  0100               	movlb	0	; () banked
  5414  0107E2  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5415  0107E4  0EFF               	movlw	255
  5416  0107E6  0100               	movlb	0	; () banked
  5417  0107E8  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5418  0107EA  0100               	movlb	0	; () banked
  5419  0107EC  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5420  0107EE  0E00               	movlw	0
  5421  0107F0  0100               	movlb	0	; () banked
  5422  0107F2  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5423  0107F4  0100               	movlb	0	; () banked
  5424  0107F6  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5425  0107F8  0E00               	movlw	0
  5426  0107FA  0100               	movlb	0	; () banked
  5427  0107FC  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5428  0107FE  0100               	movlb	0	; () banked
  5429  010800  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5430                           
  5431                           ; BSR set to: 0
  5432                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5433  010802  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5434  010806  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5435  01080A  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5436  01080E  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5437  010812  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  5438  010816  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5439  01081A  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5440  01081E  0100               	movlb	0	; () banked
  5441  010820  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  5442  010822  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5443  010826  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5444  01082A  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5445  01082E  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5449  010832  C07B  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5453  010836  0100               	movlb	0	; () banked
  5454  010838  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5455  01083A  D003               	goto	l510
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5459  01083C  010F               	movlb	15	; () banked
  5460  01083E  810D               	bsf	13,0,b	;volatile
  5461  010840  D002               	goto	l511
  5462  010842                     l510:
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;inc\CANlib.h: 968: else
  5466                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5467  010842  010F               	movlb	15	; () banked
  5468  010844  910D               	bcf	13,0,b	;volatile
  5469  010846                     l511:
  5470                           
  5471                           ; BSR set to: 15
  5472                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5473  010846  0100               	movlb	0	; () banked
  5474  010848  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5475  01084A  D003               	goto	l512
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5479  01084C  010F               	movlb	15	; () banked
  5480  01084E  830D               	bsf	13,1,b	;volatile
  5481  010850  D002               	goto	l513
  5482  010852                     l512:
  5483                           
  5484                           ; BSR set to: 0
  5485                           ;inc\CANlib.h: 973: else
  5486                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5487  010852  010F               	movlb	15	; () banked
  5488  010854  930D               	bcf	13,1,b	;volatile
  5489  010856                     l513:
  5490                           
  5491                           ; BSR set to: 15
  5492                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5493  010856  0100               	movlb	0	; () banked
  5494  010858  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5495  01085A  D003               	goto	l514
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5499  01085C  010F               	movlb	15	; () banked
  5500  01085E  8B0D               	bsf	13,5,b	;volatile
  5501  010860  D002               	goto	l515
  5502  010862                     l514:
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;inc\CANlib.h: 978: else
  5506                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5507  010862  010F               	movlb	15	; () banked
  5508  010864  9B0D               	bcf	13,5,b	;volatile
  5509  010866                     l515:
  5510                           
  5511                           ; BSR set to: 15
  5512                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5513  010866  0100               	movlb	0	; () banked
  5514  010868  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5515  01086A  D003               	goto	l516
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5519  01086C  010F               	movlb	15	; () banked
  5520  01086E  8D0D               	bsf	13,6,b	;volatile
  5521  010870  D002               	goto	l517
  5522  010872                     l516:
  5523                           
  5524                           ; BSR set to: 0
  5525                           ;inc\CANlib.h: 983: else
  5526                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5527  010872  010F               	movlb	15	; () banked
  5528  010874  9D0D               	bcf	13,6,b	;volatile
  5529  010876                     l517:
  5530                           
  5531                           ; BSR set to: 15
  5532                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5533  010876  0100               	movlb	0	; () banked
  5534  010878  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5535  01087A  D003               	goto	l518
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5539  01087C  010F               	movlb	15	; () banked
  5540  01087E  8F0D               	bsf	13,7,b	;volatile
  5541  010880  D002               	goto	l5578
  5542  010882                     l518:
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;inc\CANlib.h: 988: else
  5546                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5547  010882  010F               	movlb	15	; () banked
  5548  010884  9F0D               	bcf	13,7,b	;volatile
  5549  010886                     l5578:
  5550                           
  5551                           ; BSR set to: 15
  5552                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5553  010886  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5554  01088A  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5555  01088E  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5556  010892  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5557  010896  0E16               	movlw	22
  5558  010898  D006               	goto	u6720
  5559  01089A                     u6725:
  5560  01089A  0100               	movlb	0	; () banked
  5561  01089C  90D8               	bcf	status,0,c
  5562  01089E  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5563  0108A0  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5564  0108A2  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5565  0108A4  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5566  0108A6                     u6720:
  5567  0108A6  2EE8               	decfsz	wreg,f,c
  5568  0108A8  D7F8               	goto	u6725
  5569  0108AA  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5570  0108AE  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5571  0108B2  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5572  0108B6  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5576  0108BA  0100               	movlb	0	; () banked
  5577  0108BC  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5578  0108BE  0100               	movlb	0	; () banked
  5579  0108C0  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5580  0108C2  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5581  0108C4  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5582  0108C6  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5586  0108C8  C07B  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5587  0108CC                     l5584:
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;inc\CANlib.h: 994: }
  5591                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5592  0108CC  0E04               	movlw	4
  5593  0108CE  0100               	movlb	0	; () banked
  5594  0108D0  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5595  0108D2  A4D8               	btfss	status,2,c
  5596  0108D4  D089               	goto	l5618
  5597                           
  5598                           ; BSR set to: 0
  5599  0108D6  0EF7               	movlw	247
  5600  0108D8  0100               	movlb	0	; () banked
  5601  0108DA  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5602  0108DC  A4D8               	btfss	status,2,c
  5603  0108DE  D084               	goto	l5618
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;inc\CANlib.h: 997: {
  5607                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5608  0108E0  010F               	movlb	15	; () banked
  5609  0108E2  8711               	bsf	17,3,b	;volatile
  5610                           
  5611                           ; BSR set to: 15
  5612                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5613  0108E4  0100               	movlb	0	; () banked
  5614  0108E6  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5615  0108E8  0100               	movlb	0	; () banked
  5616  0108EA  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5617  0108EC  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5618  0108EE  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5619  0108F0  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5623  0108F2  C07B  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5627  0108F6  0E00               	movlw	0
  5628  0108F8  0100               	movlb	0	; () banked
  5629  0108FA  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5630  0108FC  0100               	movlb	0	; () banked
  5631  0108FE  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5632  010900  0EFF               	movlw	255
  5633  010902  0100               	movlb	0	; () banked
  5634  010904  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5635  010906  0100               	movlb	0	; () banked
  5636  010908  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5637  01090A  0E00               	movlw	0
  5638  01090C  0100               	movlb	0	; () banked
  5639  01090E  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5640  010910  0100               	movlb	0	; () banked
  5641  010912  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5642  010914  0E00               	movlw	0
  5643  010916  0100               	movlb	0	; () banked
  5644  010918  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5645  01091A  0100               	movlb	0	; () banked
  5646  01091C  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5650  01091E  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5651  010922  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5652  010926  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5653  01092A  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5654  01092E  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  5655  010932  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5656  010936  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5657  01093A  0100               	movlb	0	; () banked
  5658  01093C  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  5659  01093E  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5660  010942  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5661  010946  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5662  01094A  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5666  01094E  C07B  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5670  010952  0100               	movlb	0	; () banked
  5671  010954  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5672  010956  D003               	goto	l521
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5676  010958  010F               	movlb	15	; () banked
  5677  01095A  8111               	bsf	17,0,b	;volatile
  5678  01095C  D002               	goto	l522
  5679  01095E                     l521:
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;inc\CANlib.h: 1009: else
  5683                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5684  01095E  010F               	movlb	15	; () banked
  5685  010960  9111               	bcf	17,0,b	;volatile
  5686  010962                     l522:
  5687                           
  5688                           ; BSR set to: 15
  5689                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5690  010962  0100               	movlb	0	; () banked
  5691  010964  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5692  010966  D003               	goto	l523
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5696  010968  010F               	movlb	15	; () banked
  5697  01096A  8311               	bsf	17,1,b	;volatile
  5698  01096C  D002               	goto	l524
  5699  01096E                     l523:
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;inc\CANlib.h: 1014: else
  5703                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5704  01096E  010F               	movlb	15	; () banked
  5705  010970  9311               	bcf	17,1,b	;volatile
  5706  010972                     l524:
  5707                           
  5708                           ; BSR set to: 15
  5709                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5710  010972  0100               	movlb	0	; () banked
  5711  010974  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5712  010976  D003               	goto	l525
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5716  010978  010F               	movlb	15	; () banked
  5717  01097A  8B11               	bsf	17,5,b	;volatile
  5718  01097C  D002               	goto	l526
  5719  01097E                     l525:
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;inc\CANlib.h: 1019: else
  5723                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5724  01097E  010F               	movlb	15	; () banked
  5725  010980  9B11               	bcf	17,5,b	;volatile
  5726  010982                     l526:
  5727                           
  5728                           ; BSR set to: 15
  5729                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5730  010982  0100               	movlb	0	; () banked
  5731  010984  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5732  010986  D003               	goto	l527
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5736  010988  010F               	movlb	15	; () banked
  5737  01098A  8D11               	bsf	17,6,b	;volatile
  5738  01098C  D002               	goto	l528
  5739  01098E                     l527:
  5740                           
  5741                           ; BSR set to: 0
  5742                           ;inc\CANlib.h: 1024: else
  5743                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5744  01098E  010F               	movlb	15	; () banked
  5745  010990  9D11               	bcf	17,6,b	;volatile
  5746  010992                     l528:
  5747                           
  5748                           ; BSR set to: 15
  5749                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5750  010992  0100               	movlb	0	; () banked
  5751  010994  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5752  010996  D003               	goto	l529
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5756  010998  010F               	movlb	15	; () banked
  5757  01099A  8F11               	bsf	17,7,b	;volatile
  5758  01099C  D002               	goto	l5612
  5759  01099E                     l529:
  5760                           
  5761                           ; BSR set to: 0
  5762                           ;inc\CANlib.h: 1029: else
  5763                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5764  01099E  010F               	movlb	15	; () banked
  5765  0109A0  9F11               	bcf	17,7,b	;volatile
  5766  0109A2                     l5612:
  5767                           
  5768                           ; BSR set to: 15
  5769                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  5770  0109A2  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5771  0109A6  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5772  0109AA  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5773  0109AE  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5774  0109B2  0E16               	movlw	22
  5775  0109B4  D006               	goto	u6800
  5776  0109B6                     u6805:
  5777  0109B6  0100               	movlb	0	; () banked
  5778  0109B8  90D8               	bcf	status,0,c
  5779  0109BA  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5780  0109BC  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5781  0109BE  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5782  0109C0  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  5783  0109C2                     u6800:
  5784  0109C2  2EE8               	decfsz	wreg,f,c
  5785  0109C4  D7F8               	goto	u6805
  5786  0109C6  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5787  0109CA  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5788  0109CE  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5789  0109D2  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5793  0109D6  0100               	movlb	0	; () banked
  5794  0109D8  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  5795  0109DA  0100               	movlb	0	; () banked
  5796  0109DC  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5797  0109DE  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5798  0109E0  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5799  0109E2  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5800                           
  5801                           ; BSR set to: 0
  5802                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5803  0109E4  C07B  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5804  0109E8                     l5618:
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;inc\CANlib.h: 1035: }
  5808                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5809  0109E8  0E05               	movlw	5
  5810  0109EA  0100               	movlb	0	; () banked
  5811  0109EC  197A               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5812  0109EE  A4D8               	btfss	status,2,c
  5813  0109F0  0012               	return	
  5814                           
  5815                           ; BSR set to: 0
  5816  0109F2  0EF7               	movlw	247
  5817  0109F4  0100               	movlb	0	; () banked
  5818  0109F6  1975               	xorwf	CANSetFilter@type& (0+255),w,b
  5819  0109F8  A4D8               	btfss	status,2,c
  5820  0109FA  0012               	return	
  5821                           
  5822                           ; BSR set to: 0
  5823                           ;inc\CANlib.h: 1038: {
  5824                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5825  0109FC  010F               	movlb	15	; () banked
  5826  0109FE  8715               	bsf	21,3,b	;volatile
  5827                           
  5828                           ; BSR set to: 15
  5829                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5830  010A00  0100               	movlb	0	; () banked
  5831  010A02  5171               	movf	CANSetFilter@filter& (0+255),w,b
  5832  010A04  0100               	movlb	0	; () banked
  5833  010A06  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5834  010A08  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5835  010A0A  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5836  010A0C  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5840  010A0E  C07B  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5841                           
  5842                           ; BSR set to: 0
  5843                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5844  010A12  0E00               	movlw	0
  5845  010A14  0100               	movlb	0	; () banked
  5846  010A16  1571               	andwf	CANSetFilter@filter& (0+255),w,b
  5847  010A18  0100               	movlb	0	; () banked
  5848  010A1A  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  5849  010A1C  0EFF               	movlw	255
  5850  010A1E  0100               	movlb	0	; () banked
  5851  010A20  1572               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5852  010A22  0100               	movlb	0	; () banked
  5853  010A24  6F7C               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5854  010A26  0E00               	movlw	0
  5855  010A28  0100               	movlb	0	; () banked
  5856  010A2A  1573               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5857  010A2C  0100               	movlb	0	; () banked
  5858  010A2E  6F7D               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5859  010A30  0E00               	movlw	0
  5860  010A32  0100               	movlb	0	; () banked
  5861  010A34  1574               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5862  010A36  0100               	movlb	0	; () banked
  5863  010A38  6F7E               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  5867  010A3A  C07B  F076         	movff	CANSetFilter@tamp,??_CANSetFilter
  5868  010A3E  C07C  F077         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5869  010A42  C07D  F078         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5870  010A46  C07E  F079         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5871  010A4A  C077  F076         	movff	??_CANSetFilter+1,??_CANSetFilter
  5872  010A4E  C078  F077         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5873  010A52  C079  F078         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5874  010A56  0100               	movlb	0	; () banked
  5875  010A58  6B79               	clrf	(??_CANSetFilter+3)& (0+255),b
  5876  010A5A  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  5877  010A5E  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5878  010A62  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5879  010A66  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5880                           
  5881                           ; BSR set to: 0
  5882                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5883  010A6A  C07B  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  5887  010A6E  0100               	movlb	0	; () banked
  5888  010A70  A173               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5889  010A72  D003               	goto	l532
  5890                           
  5891                           ; BSR set to: 0
  5892                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5893  010A74  010F               	movlb	15	; () banked
  5894  010A76  8115               	bsf	21,0,b	;volatile
  5895  010A78  D002               	goto	l533
  5896  010A7A                     l532:
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;inc\CANlib.h: 1050: else
  5900                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5901  010A7A  010F               	movlb	15	; () banked
  5902  010A7C  9115               	bcf	21,0,b	;volatile
  5903  010A7E                     l533:
  5904                           
  5905                           ; BSR set to: 15
  5906                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  5907  010A7E  0100               	movlb	0	; () banked
  5908  010A80  A373               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5909  010A82  D003               	goto	l534
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5913  010A84  010F               	movlb	15	; () banked
  5914  010A86  8315               	bsf	21,1,b	;volatile
  5915  010A88  D002               	goto	l535
  5916  010A8A                     l534:
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;inc\CANlib.h: 1055: else
  5920                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5921  010A8A  010F               	movlb	15	; () banked
  5922  010A8C  9315               	bcf	21,1,b	;volatile
  5923  010A8E                     l535:
  5924                           
  5925                           ; BSR set to: 15
  5926                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  5927  010A8E  0100               	movlb	0	; () banked
  5928  010A90  A573               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5929  010A92  D003               	goto	l536
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5933  010A94  010F               	movlb	15	; () banked
  5934  010A96  8B15               	bsf	21,5,b	;volatile
  5935  010A98  D002               	goto	l537
  5936  010A9A                     l536:
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;inc\CANlib.h: 1060: else
  5940                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5941  010A9A  010F               	movlb	15	; () banked
  5942  010A9C  9B15               	bcf	21,5,b	;volatile
  5943  010A9E                     l537:
  5944                           
  5945                           ; BSR set to: 15
  5946                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  5947  010A9E  0100               	movlb	0	; () banked
  5948  010AA0  A773               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5949  010AA2  D003               	goto	l538
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5953  010AA4  010F               	movlb	15	; () banked
  5954  010AA6  8D15               	bsf	21,6,b	;volatile
  5955  010AA8  D002               	goto	l539
  5956  010AAA                     l538:
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;inc\CANlib.h: 1065: else
  5960                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5961  010AAA  010F               	movlb	15	; () banked
  5962  010AAC  9D15               	bcf	21,6,b	;volatile
  5963  010AAE                     l539:
  5964                           
  5965                           ; BSR set to: 15
  5966                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  5967  010AAE  0100               	movlb	0	; () banked
  5968  010AB0  A973               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5969  010AB2  D003               	goto	l540
  5970                           
  5971                           ; BSR set to: 0
  5972                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5973  010AB4  010F               	movlb	15	; () banked
  5974  010AB6  8F15               	bsf	21,7,b	;volatile
  5975  010AB8  D002               	goto	l5646
  5976  010ABA                     l540:
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;inc\CANlib.h: 1070: else
  5980                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5981  010ABA  010F               	movlb	15	; () banked
  5982  010ABC  9F15               	bcf	21,7,b	;volatile
  5983  010ABE                     l5646:
  5984                           
  5985                           ; BSR set to: 15
  5986                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  5987  010ABE  C071  F076         	movff	CANSetFilter@filter,??_CANSetFilter
  5988  010AC2  C072  F077         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5989  010AC6  C073  F078         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5990  010ACA  C074  F079         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5991  010ACE  0E16               	movlw	22
  5992  010AD0  D006               	goto	u6880
  5993  010AD2                     u6885:
  5994  010AD2  0100               	movlb	0	; () banked
  5995  010AD4  90D8               	bcf	status,0,c
  5996  010AD6  3379               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5997  010AD8  3378               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5998  010ADA  3377               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5999  010ADC  3376               	rrcf	??_CANSetFilter& (0+255),f,b
  6000  010ADE                     u6880:
  6001  010ADE  2EE8               	decfsz	wreg,f,c
  6002  010AE0  D7F8               	goto	u6885
  6003  010AE2  C076  F07B         	movff	??_CANSetFilter,CANSetFilter@tamp
  6004  010AE6  C077  F07C         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6005  010AEA  C078  F07D         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6006  010AEE  C079  F07E         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6010  010AF2  0100               	movlb	0	; () banked
  6011  010AF4  517B               	movf	CANSetFilter@tamp& (0+255),w,b
  6012  010AF6  0100               	movlb	0	; () banked
  6013  010AF8  6F7B               	movwf	CANSetFilter@tamp& (0+255),b
  6014  010AFA  6B7C               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6015  010AFC  6B7D               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6016  010AFE  6B7E               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6017                           
  6018                           ; BSR set to: 0
  6019                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6020  010B00  C07B  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6021  010B04  0012               	return	
  6022  010B06                     __end_of_CANSetFilter:
  6023                           	opt stack 0
  6024                           tblptru	equ	0xFF8
  6025                           tblptrh	equ	0xFF7
  6026                           tblptrl	equ	0xFF6
  6027                           tablat	equ	0xFF5
  6028                           intcon	equ	0xFF2
  6029                           postinc0	equ	0xFEE
  6030                           wreg	equ	0xFE8
  6031                           status	equ	0xFD8
  6032                           
  6033 ;; *************** function _CANOperationMode *****************
  6034 ;; Defined at:
  6035 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;  mode            1    wreg     enum E16881
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;  mode            1   17[BANK0 ] enum E16881
  6040 ;; Return value:  Size  Location     Type
  6041 ;;		None               void
  6042 ;; Registers used:
  6043 ;;		wreg, status,2, status,0
  6044 ;; Tracked objects:
  6045 ;;		On entry : 0/0
  6046 ;;		On exit  : 0/0
  6047 ;;		Unchanged: 0/0
  6048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6050 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6052 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6053 ;;Total ram usage:        1 bytes
  6054 ;; Hardware stack levels used:    1
  6055 ;; Hardware stack levels required when called:    3
  6056 ;; This function calls:
  6057 ;;		Nothing
  6058 ;; This function is called by:
  6059 ;;		_CANInitialize
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           	psect	text5
  6064  016318                     __ptext5:
  6065                           	opt stack 0
  6066  016318                     _CANOperationMode:
  6067                           	opt stack 25
  6068                           
  6069                           ; BSR set to: 0
  6070                           ;incstack = 0
  6071                           ;CANOperationMode@mode stored from wreg
  6072  016318  0100               	movlb	0	; () banked
  6073  01631A  6F71               	movwf	CANOperationMode@mode& (0+255),b
  6074                           
  6075                           ;inc\CANlib.h: 208: CANCON = mode;
  6076  01631C  C071  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6077  016320                     l5242:
  6078  016320  506E               	movf	3950,w,c	;volatile
  6079  016322  0BE0               	andlw	224
  6080  016324  0100               	movlb	0	; () banked
  6081  016326  1971               	xorwf	CANOperationMode@mode& (0+255),w,b
  6082  016328  B4D8               	btfsc	status,2,c
  6083  01632A  0012               	return	
  6084  01632C  D7F9               	goto	l5242
  6085  01632E                     __end_of_CANOperationMode:
  6086                           	opt stack 0
  6087                           tblptru	equ	0xFF8
  6088                           tblptrh	equ	0xFF7
  6089                           tblptrl	equ	0xFF6
  6090                           tablat	equ	0xFF5
  6091                           intcon	equ	0xFF2
  6092                           postinc0	equ	0xFEE
  6093                           wreg	equ	0xFE8
  6094                           status	equ	0xFD8
  6095                           
  6096 ;; *************** function _PWR_Button_Polling *****************
  6097 ;; Defined at:
  6098 ;;		line 440 in file "RemoteCan.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;		None
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;		None
  6103 ;; Return value:  Size  Location     Type
  6104 ;;		None               void
  6105 ;; Registers used:
  6106 ;;		None
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6116 ;;Total ram usage:        0 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; Hardware stack levels required when called:    3
  6119 ;; This function calls:
  6120 ;;		Nothing
  6121 ;; This function is called by:
  6122 ;;		_main
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126                           	psect	text6
  6127  0162A8                     __ptext6:
  6128                           	opt stack 0
  6129  0162A8                     _PWR_Button_Polling:
  6130                           	opt stack 27
  6131                           
  6132                           ;RemoteCan.c: 441: if ((PORTBbits.RB5 == 0) || (wait_low_1 == 0)) {
  6133                           
  6134                           ; BSR set to: 0
  6135                           ;incstack = 0
  6136  0162A8  AA81               	btfss	3969,5,c	;volatile
  6137  0162AA  D002               	goto	l870
  6138  0162AC  B84D               	btfsc	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6139  0162AE  0012               	return	
  6140  0162B0                     l870:
  6141                           
  6142                           ;RemoteCan.c: 442: wait_low_1 = 0;
  6143  0162B0  984D               	bcf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6144                           
  6145                           ;RemoteCan.c: 443: if (PORTBbits.RB5 == 1) {
  6146  0162B2  AA81               	btfss	3969,5,c	;volatile
  6147  0162B4  0012               	return	
  6148                           
  6149                           ;RemoteCan.c: 444: power_switch = ~power_switch;
  6150  0162B6  B04D               	btfsc	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6151  0162B8  D002               	goto	u8840
  6152  0162BA  804D               	bsf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6153  0162BC  D001               	goto	u8855
  6154  0162BE                     u8840:
  6155  0162BE  904D               	bcf	_power_switch/(0+8),_power_switch& (0+7),c	;volatile
  6156  0162C0                     u8855:
  6157                           
  6158                           ;RemoteCan.c: 445: wait_low_1 = 1;
  6159  0162C0  884D               	bsf	_wait_low_1/(0+8),_wait_low_1& (0+7),c	;volatile
  6160  0162C2  0012               	return	
  6161  0162C4                     __end_of_PWR_Button_Polling:
  6162                           	opt stack 0
  6163                           tblptru	equ	0xFF8
  6164                           tblptrh	equ	0xFF7
  6165                           tblptrl	equ	0xFF6
  6166                           tablat	equ	0xFF5
  6167                           intcon	equ	0xFF2
  6168                           postinc0	equ	0xFEE
  6169                           wreg	equ	0xFE8
  6170                           status	equ	0xFD8
  6171                           
  6172 ;; *************** function _LCD_Park *****************
  6173 ;; Defined at:
  6174 ;;		line 425 in file "RemoteCan.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;		None
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;		None
  6179 ;; Return value:  Size  Location     Type
  6180 ;;		None               void
  6181 ;; Registers used:
  6182 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6192 ;;Total ram usage:        0 bytes
  6193 ;; Hardware stack levels used:    1
  6194 ;; Hardware stack levels required when called:    9
  6195 ;; This function calls:
  6196 ;;		_LCD_goto_line
  6197 ;;		_LCD_write_message
  6198 ;; This function is called by:
  6199 ;;		_main
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203                           	psect	text7
  6204  015E42                     __ptext7:
  6205                           	opt stack 0
  6206  015E42                     _LCD_Park:
  6207                           	opt stack 21
  6208                           
  6209                           ;RemoteCan.c: 426: if (w == 0) {
  6210                           
  6211                           ;incstack = 0
  6212  015E42  B64D               	btfsc	_w/(0+8),_w& (0+7),c	;volatile
  6213  015E44  0012               	return	
  6214                           
  6215                           ;RemoteCan.c: 427: LCD_goto_line(1);
  6216  015E46  0E01               	movlw	1
  6217  015E48  EC64  F0AB         	call	_LCD_goto_line
  6218                           
  6219                           ;RemoteCan.c: 428: LCD_write_message("????????????????????");
  6220  015E4C  0E83               	movlw	low STR_18
  6221  015E4E  0100               	movlb	0	; () banked
  6222  015E50  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6223  015E52  0EFF               	movlw	high STR_18
  6224  015E54  0100               	movlb	0	; () banked
  6225  015E56  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6226  015E58  ECAE  F0B0         	call	_LCD_write_message	;wreg free
  6227                           
  6228                           ;RemoteCan.c: 429: LCD_goto_line(2);
  6229  015E5C  0E02               	movlw	2
  6230  015E5E  EC64  F0AB         	call	_LCD_goto_line
  6231                           
  6232                           ;RemoteCan.c: 430: LCD_write_message("?     PARKING      ?");
  6233  015E62  0E59               	movlw	low STR_19
  6234  015E64  0100               	movlb	0	; () banked
  6235  015E66  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6236  015E68  0EFF               	movlw	high STR_19
  6237  015E6A  0100               	movlb	0	; () banked
  6238  015E6C  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6239  015E6E  ECAE  F0B0         	call	_LCD_write_message	;wreg free
  6240                           
  6241                           ;RemoteCan.c: 431: LCD_goto_line(3);
  6242  015E72  0E03               	movlw	3
  6243  015E74  EC64  F0AB         	call	_LCD_goto_line
  6244                           
  6245                           ;RemoteCan.c: 432: LCD_write_message("?    COMPLETED!    ?");
  6246  015E78  0E6E               	movlw	low STR_20
  6247  015E7A  0100               	movlb	0	; () banked
  6248  015E7C  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6249  015E7E  0EFF               	movlw	high STR_20
  6250  015E80  0100               	movlb	0	; () banked
  6251  015E82  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6252  015E84  ECAE  F0B0         	call	_LCD_write_message	;wreg free
  6253                           
  6254                           ;RemoteCan.c: 433: LCD_goto_line(4);
  6255  015E88  0E04               	movlw	4
  6256  015E8A  EC64  F0AB         	call	_LCD_goto_line
  6257                           
  6258                           ;RemoteCan.c: 434: LCD_write_message("????????????????????");
  6259  015E8E  0E83               	movlw	low STR_18
  6260  015E90  0100               	movlb	0	; () banked
  6261  015E92  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6262  015E94  0EFF               	movlw	high STR_18
  6263  015E96  0100               	movlb	0	; () banked
  6264  015E98  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6265  015E9A  ECAE  F0B0         	call	_LCD_write_message	;wreg free
  6266                           
  6267                           ;RemoteCan.c: 435: display_refresh = 1;
  6268  015E9E  8C4C               	bsf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6269                           
  6270                           ;RemoteCan.c: 436: w = 1;
  6271  015EA0  864D               	bsf	_w/(0+8),_w& (0+7),c	;volatile
  6272  015EA2  0012               	return	
  6273  015EA4                     __end_of_LCD_Park:
  6274                           	opt stack 0
  6275                           tblptru	equ	0xFF8
  6276                           tblptrh	equ	0xFF7
  6277                           tblptrl	equ	0xFF6
  6278                           tablat	equ	0xFF5
  6279                           intcon	equ	0xFF2
  6280                           postinc0	equ	0xFEE
  6281                           wreg	equ	0xFE8
  6282                           status	equ	0xFD8
  6283                           
  6284 ;; *************** function _LCD_Handler *****************
  6285 ;; Defined at:
  6286 ;;		line 359 in file "RemoteCan.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;		None
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;		None
  6291 ;; Return value:  Size  Location     Type
  6292 ;;		None               void
  6293 ;; Registers used:
  6294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6295 ;; Tracked objects:
  6296 ;;		On entry : 0/0
  6297 ;;		On exit  : 0/0
  6298 ;;		Unchanged: 0/0
  6299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6304 ;;Total ram usage:        0 bytes
  6305 ;; Hardware stack levels used:    1
  6306 ;; Hardware stack levels required when called:   10
  6307 ;; This function calls:
  6308 ;;		_CANisTxReady
  6309 ;;		_CANsendMessage
  6310 ;;		_LCD_clear
  6311 ;;		_LCD_goto_line
  6312 ;;		_LCD_goto_xy
  6313 ;;		_LCD_initialize
  6314 ;;		_LCD_write_integer
  6315 ;;		_LCD_write_message
  6316 ;;		_LCD_write_string
  6317 ;;		___fldiv
  6318 ;;		___xxtofl
  6319 ;;		_sprintf
  6320 ;; This function is called by:
  6321 ;;		_main
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325                           	psect	text8
  6326  014DEA                     __ptext8:
  6327                           	opt stack 0
  6328  014DEA                     _LCD_Handler:
  6329                           	opt stack 20
  6330  014DEA                     l9042:
  6331  014DEA  EC22  F0B1         	call	_CANisTxReady	;wreg free
  6332  014DEE  06E8               	decf	wreg,f,c
  6333  014DF0  A4D8               	btfss	status,2,c
  6334  014DF2  D7FB               	goto	l9042
  6335                           
  6336                           ;RemoteCan.c: 362: CANsendMessage(0b00000000110, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  6337  014DF4  0E06               	movlw	6
  6338  014DF6  0100               	movlb	0	; () banked
  6339  014DF8  6F71               	movwf	CANsendMessage@identifier& (0+255),b
  6340  014DFA  0E00               	movlw	0
  6341  014DFC  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  6342  014DFE  0E00               	movlw	0
  6343  014E00  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  6344  014E02  0E00               	movlw	0
  6345  014E04  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  6346  014E06  0EEB               	movlw	low _data_speed
  6347  014E08  0100               	movlb	0	; () banked
  6348  014E0A  6F75               	movwf	CANsendMessage@data& (0+255),b
  6349  014E0C  0E00               	movlw	high _data_speed
  6350  014E0E  0100               	movlb	0	; () banked
  6351  014E10  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
  6352  014E12  0E08               	movlw	8
  6353  014E14  0100               	movlb	0	; () banked
  6354  014E16  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
  6355  014E18  0EFC               	movlw	252
  6356  014E1A  0100               	movlb	0	; () banked
  6357  014E1C  6F78               	movwf	CANsendMessage@flags& (0+255),b
  6358  014E1E  ECCD  F089         	call	_CANsendMessage	;wreg free
  6359                           
  6360                           ;RemoteCan.c: 364: actual_speed_kmh = ((actual_speed) / 278.0);
  6361  014E22  C0DF  F071         	movff	_actual_speed,___xxtofl@val
  6362  014E26  C0E0  F072         	movff	_actual_speed+1,___xxtofl@val+1
  6363  014E2A  0100               	movlb	0	; () banked
  6364  014E2C  6B73               	clrf	(___xxtofl@val+2)& (0+255),b
  6365  014E2E  6B74               	clrf	(___xxtofl@val+3)& (0+255),b
  6366  014E30  0E00               	movlw	0
  6367  014E32  EC4B  F0A4         	call	___xxtofl
  6368  014E36  C071  F07F         	movff	?___xxtofl,___fldiv@b
  6369  014E3A  C072  F080         	movff	?___xxtofl+1,___fldiv@b+1
  6370  014E3E  C073  F081         	movff	?___xxtofl+2,___fldiv@b+2
  6371  014E42  C074  F082         	movff	?___xxtofl+3,___fldiv@b+3
  6372  014E46  0E00               	movlw	0
  6373  014E48  0100               	movlb	0	; () banked
  6374  014E4A  6F83               	movwf	___fldiv@a& (0+255),b
  6375  014E4C  0E00               	movlw	0
  6376  014E4E  6F84               	movwf	(___fldiv@a+1)& (0+255),b
  6377  014E50  0E8B               	movlw	139
  6378  014E52  6F85               	movwf	(___fldiv@a+2)& (0+255),b
  6379  014E54  0E43               	movlw	67
  6380  014E56  6F86               	movwf	(___fldiv@a+3)& (0+255),b
  6381  014E58  EC32  F09E         	call	___fldiv	;wreg free
  6382  014E5C  C07F  F001         	movff	?___fldiv,_actual_speed_kmh
  6383  014E60  C080  F002         	movff	?___fldiv+1,_actual_speed_kmh+1
  6384  014E64  C081  F003         	movff	?___fldiv+2,_actual_speed_kmh+2
  6385  014E68  C082  F004         	movff	?___fldiv+3,_actual_speed_kmh+3
  6386                           
  6387                           ;RemoteCan.c: 365: sprintf(str, "%.2f", actual_speed_kmh);
  6388  014E6C  0E1C               	movlw	low _str
  6389  014E6E  0100               	movlb	0	; () banked
  6390  014E70  6FC3               	movwf	sprintf@sp& (0+255),b
  6391  014E72  0E01               	movlw	high _str
  6392  014E74  0100               	movlb	0	; () banked
  6393  014E76  6FC4               	movwf	(sprintf@sp+1)& (0+255),b
  6394  014E78  0EF9               	movlw	low STR_5
  6395  014E7A  0100               	movlb	0	; () banked
  6396  014E7C  6FC5               	movwf	sprintf@f& (0+255),b
  6397  014E7E  0EFF               	movlw	high STR_5
  6398  014E80  0100               	movlb	0	; () banked
  6399  014E82  6FC6               	movwf	(sprintf@f+1)& (0+255),b
  6400  014E84  C001  F0C7         	movff	_actual_speed_kmh,?_sprintf+4
  6401  014E88  C002  F0C8         	movff	_actual_speed_kmh+1,?_sprintf+5
  6402  014E8C  C003  F0C9         	movff	_actual_speed_kmh+2,?_sprintf+6
  6403  014E90  C004  F0CA         	movff	_actual_speed_kmh+3,?_sprintf+7
  6404  014E94  EC83  F085         	call	_sprintf	;wreg free
  6405                           
  6406                           ;RemoteCan.c: 366: str[11] = '\0';
  6407  014E98  0E00               	movlw	0
  6408  014E9A  0101               	movlb	1	; () banked
  6409  014E9C  6F27               	movwf	(_str+11)& (0+255),b
  6410                           
  6411                           ; BSR set to: 1
  6412                           ;RemoteCan.c: 368: if (display_refresh == 1) {
  6413  014E9E  AC4C               	btfss	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6414  014EA0  D032               	goto	l9070
  6415                           
  6416                           ; BSR set to: 1
  6417                           ;RemoteCan.c: 369: LCD_initialize(16);
  6418  014EA2  0E10               	movlw	16
  6419  014EA4  EC27  F0AA         	call	_LCD_initialize
  6420                           
  6421                           ;RemoteCan.c: 370: LCD_clear();
  6422  014EA8  ECE1  F0B0         	call	_LCD_clear	;wreg free
  6423                           
  6424                           ;RemoteCan.c: 371: LCD_goto_line(1);
  6425  014EAC  0E01               	movlw	1
  6426  014EAE  EC64  F0AB         	call	_LCD_goto_line
  6427                           
  6428                           ;RemoteCan.c: 372: LCD_write_message("=== VEHICLE DATA ===");
  6429  014EB2  0E2F               	movlw	low STR_6
  6430  014EB4  0100               	movlb	0	; () banked
  6431  014EB6  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6432  014EB8  0EFF               	movlw	high STR_6
  6433  014EBA  0100               	movlb	0	; () banked
  6434  014EBC  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6435  014EBE  ECAE  F0B0         	call	_LCD_write_message	;wreg free
  6436                           
  6437                           ;RemoteCan.c: 373: LCD_goto_line(2);
  6438  014EC2  0E02               	movlw	2
  6439  014EC4  EC64  F0AB         	call	_LCD_goto_line
  6440                           
  6441                           ;RemoteCan.c: 374: LCD_write_message("Direction: ");
  6442  014EC8  0EB7               	movlw	low STR_7
  6443  014ECA  0100               	movlb	0	; () banked
  6444  014ECC  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6445  014ECE  0EFF               	movlw	high STR_7
  6446  014ED0  0100               	movlb	0	; () banked
  6447  014ED2  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6448  014ED4  ECAE  F0B0         	call	_LCD_write_message	;wreg free
  6449                           
  6450                           ;RemoteCan.c: 375: LCD_goto_line(3);
  6451  014ED8  0E03               	movlw	3
  6452  014EDA  EC64  F0AB         	call	_LCD_goto_line
  6453                           
  6454                           ;RemoteCan.c: 376: LCD_write_message("Speed: 0.00 Km/h");
  6455  014EDE  0E98               	movlw	low STR_8
  6456  014EE0  0100               	movlb	0	; () banked
  6457  014EE2  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6458  014EE4  0EFF               	movlw	high STR_8
  6459  014EE6  0100               	movlb	0	; () banked
  6460  014EE8  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6461  014EEA  ECAE  F0B0         	call	_LCD_write_message	;wreg free
  6462                           
  6463                           ;RemoteCan.c: 377: LCD_goto_line(4);
  6464  014EEE  0E04               	movlw	4
  6465  014EF0  EC64  F0AB         	call	_LCD_goto_line
  6466                           
  6467                           ;RemoteCan.c: 381: LCD_write_message("Data: ");
  6468                           
  6469                           ;RemoteCan.c: 380: } else {
  6470                           
  6471                           ;RemoteCan.c: 379: LCD_write_message("Park assist: ");
  6472                           
  6473                           ;RemoteCan.c: 378: if (1 == 0) {
  6474  014EF4  0EE3               	movlw	low STR_10
  6475  014EF6  0100               	movlb	0	; () banked
  6476  014EF8  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6477  014EFA  0EFF               	movlw	high STR_10
  6478  014EFC  0100               	movlb	0	; () banked
  6479  014EFE  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6480  014F00  ECAE  F0B0         	call	_LCD_write_message	;wreg free
  6481                           
  6482                           ;RemoteCan.c: 382: }
  6483                           ;RemoteCan.c: 383: display_refresh = 0;
  6484  014F04  9C4C               	bcf	_display_refresh/(0+8),_display_refresh& (0+7),c	;volatile
  6485  014F06                     l9070:
  6486                           
  6487                           ;RemoteCan.c: 384: }
  6488                           ;RemoteCan.c: 387: LCD_goto_xy(12, 2);
  6489  014F06  0E02               	movlw	2
  6490  014F08  0100               	movlb	0	; () banked
  6491  014F0A  6F80               	movwf	LCD_goto_xy@y& (0+255),b
  6492  014F0C  0E0C               	movlw	12
  6493  014F0E  EC62  F0B1         	call	_LCD_goto_xy
  6494                           
  6495                           ;RemoteCan.c: 388: if (switch_position != 0) {
  6496  014F12  0100               	movlb	0	; () banked
  6497  014F14  51E7               	movf	_switch_position& (0+255),w,b	;volatile
  6498  014F16  B4D8               	btfsc	status,2,c
  6499  014F18  D016               	goto	l9080
  6500                           
  6501                           ; BSR set to: 0
  6502                           ;RemoteCan.c: 389: if (dir == 1) {
  6503  014F1A  0100               	movlb	0	; () banked
  6504  014F1C  05E5               	decf	_dir& (0+255),w,b	;volatile
  6505  014F1E  A4D8               	btfss	status,2,c
  6506  014F20  D009               	goto	l9078
  6507                           
  6508                           ; BSR set to: 0
  6509                           ;RemoteCan.c: 390: LCD_write_message("FWD ");
  6510  014F22  0EEF               	movlw	low STR_11
  6511  014F24  0100               	movlb	0	; () banked
  6512  014F26  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6513  014F28  0EFF               	movlw	high STR_11
  6514  014F2A  0100               	movlb	0	; () banked
  6515  014F2C  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6516  014F2E  ECAE  F0B0         	call	_LCD_write_message	;wreg free
  6517                           
  6518                           ;RemoteCan.c: 391: } else {
  6519  014F32  D011               	goto	l9082
  6520  014F34                     l9078:
  6521                           
  6522                           ;RemoteCan.c: 392: LCD_write_message("BKWD");
  6523  014F34  0EF4               	movlw	low STR_12
  6524  014F36  0100               	movlb	0	; () banked
  6525  014F38  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6526  014F3A  0EFF               	movlw	high STR_12
  6527  014F3C  0100               	movlb	0	; () banked
  6528  014F3E  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6529  014F40  ECAE  F0B0         	call	_LCD_write_message	;wreg free
  6530                           
  6531                           ;RemoteCan.c: 393: }
  6532                           ;RemoteCan.c: 394: } else {
  6533  014F44  D008               	goto	l9082
  6534  014F46                     l9080:
  6535                           
  6536                           ;RemoteCan.c: 395: LCD_write_message("P   ");
  6537  014F46  0EEA               	movlw	low STR_13
  6538  014F48  0100               	movlb	0	; () banked
  6539  014F4A  6F82               	movwf	LCD_write_message@buffer& (0+255),b
  6540  014F4C  0EFF               	movlw	high STR_13
  6541  014F4E  0100               	movlb	0	; () banked
  6542  014F50  6F83               	movwf	(LCD_write_message@buffer+1)& (0+255),b
  6543  014F52  ECAE  F0B0         	call	_LCD_write_message	;wreg free
  6544  014F56                     l9082:
  6545                           
  6546                           ;RemoteCan.c: 396: }
  6547                           ;RemoteCan.c: 399: LCD_goto_xy(8, 3);
  6548  014F56  0E03               	movlw	3
  6549  014F58  0100               	movlb	0	; () banked
  6550  014F5A  6F80               	movwf	LCD_goto_xy@y& (0+255),b
  6551  014F5C  0E08               	movlw	8
  6552  014F5E  EC62  F0B1         	call	_LCD_goto_xy
  6553                           
  6554                           ;RemoteCan.c: 400: LCD_write_string(str);
  6555  014F62  0E1C               	movlw	low _str
  6556  014F64  0100               	movlb	0	; () banked
  6557  014F66  6F82               	movwf	LCD_write_string@buffer& (0+255),b
  6558  014F68  0E01               	movlw	high _str
  6559  014F6A  0100               	movlb	0	; () banked
  6560  014F6C  6F83               	movwf	(LCD_write_string@buffer+1)& (0+255),b
  6561  014F6E  EC0F  F0B1         	call	_LCD_write_string	;wreg free
  6562                           
  6563                           ;RemoteCan.c: 420: LCD_goto_xy(7, 4);
  6564                           
  6565                           ;RemoteCan.c: 416: }
  6566                           ;RemoteCan.c: 417: }
  6567                           ;RemoteCan.c: 418: } else {
  6568                           
  6569                           ;RemoteCan.c: 415: LCD_write_message("PARKING");
  6570                           
  6571                           ;RemoteCan.c: 413: }
  6572                           ;RemoteCan.c: 414: } else {
  6573                           
  6574                           ;RemoteCan.c: 412: LCD_write_message("FOUND! ");
  6575                           
  6576                           ;RemoteCan.c: 411: } else {
  6577                           
  6578                           ;RemoteCan.c: 410: LCD_write_message("SEARCH ");
  6579                           
  6580                           ;RemoteCan.c: 409: if (space_available == 0) {
  6581                           
  6582                           ;RemoteCan.c: 408: if (parking_state == 1) {
  6583                           
  6584                           ;RemoteCan.c: 407: } else {
  6585                           
  6586                           ;RemoteCan.c: 406: LCD_write_message("OFF    ");
  6587                           
  6588                           ;RemoteCan.c: 405: if (parking_state == 0) {
  6589                           
  6590                           ;RemoteCan.c: 404: LCD_goto_xy(14, 4);
  6591                           
  6592                           ;RemoteCan.c: 402: if (1 == 0) {
  6593  014F72  0E04               	movlw	4
  6594  014F74  0100               	movlb	0	; () banked
  6595  014F76  6F80               	movwf	LCD_goto_xy@y& (0+255),b
  6596  014F78  0E07               	movlw	7
  6597  014F7A  EC62  F0B1         	call	_LCD_goto_xy
  6598                           
  6599                           ;RemoteCan.c: 421: LCD_write_integer(user_data, 0, 0x01);
  6600  014F7E  C025  F089         	movff	_user_data,LCD_write_integer@value
  6601  014F82  C026  F08A         	movff	_user_data+1,LCD_write_integer@value+1
  6602  014F86  0E00               	movlw	0
  6603  014F88  0100               	movlb	0	; () banked
  6604  014F8A  6F8B               	movwf	LCD_write_integer@number_of_digits& (0+255),b
  6605  014F8C  0E01               	movlw	1
  6606  014F8E  0100               	movlb	0	; () banked
  6607  014F90  6F8C               	movwf	LCD_write_integer@zero_cleaning& (0+255),b
  6608  014F92  EC15  F0A6         	call	_LCD_write_integer	;wreg free
  6609  014F96  0012               	return	
  6610  014F98                     __end_of_LCD_Handler:
  6611                           	opt stack 0
  6612                           tblptru	equ	0xFF8
  6613                           tblptrh	equ	0xFF7
  6614                           tblptrl	equ	0xFF6
  6615                           tablat	equ	0xFF5
  6616                           intcon	equ	0xFF2
  6617                           postinc0	equ	0xFEE
  6618                           wreg	equ	0xFE8
  6619                           status	equ	0xFD8
  6620                           
  6621 ;; *************** function _sprintf *****************
  6622 ;; Defined at:
  6623 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;  sp              2   99[BANK0 ] PTR unsigned char 
  6626 ;;		 -> str(12), 
  6627 ;;  f               2  101[BANK0 ] PTR const unsigned char 
  6628 ;;		 -> STR_5(5), 
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;  fval            4   20[BANK1 ] PTR const unsigned char 
  6631 ;;  tmpval          4   14[BANK1 ] struct .
  6632 ;;  val             4    8[BANK1 ] unsigned long 
  6633 ;;  cp              3    0        PTR const unsigned char 
  6634 ;;  prec            2   18[BANK1 ] int 
  6635 ;;  exp             2   12[BANK1 ] int 
  6636 ;;  flag            2    6[BANK1 ] unsigned short 
  6637 ;;  ap              2    4[BANK1 ] PTR void [1]
  6638 ;;		 -> ?_sprintf(2), 
  6639 ;;  len             2    0        unsigned int 
  6640 ;;  width           2    0        int 
  6641 ;;  c               1   24[BANK1 ] char 
  6642 ;;  d               1    0        unsigned char 
  6643 ;; Return value:  Size  Location     Type
  6644 ;;                  2   99[BANK0 ] int 
  6645 ;; Registers used:
  6646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6647 ;; Tracked objects:
  6648 ;;		On entry : 0/0
  6649 ;;		On exit  : 0/0
  6650 ;;		Unchanged: 0/0
  6651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6652 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6653 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6654 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6655 ;;      Totals:         0      10      25       0       0       0       0       0       0       0       0       0       
      +0       0
  6656 ;;Total ram usage:       35 bytes
  6657 ;; Hardware stack levels used:    1
  6658 ;; Hardware stack levels required when called:    5
  6659 ;; This function calls:
  6660 ;;		___awdiv
  6661 ;;		___fladd
  6662 ;;		___flge
  6663 ;;		___flmul
  6664 ;;		___flneg
  6665 ;;		___flsub
  6666 ;;		___fltol
  6667 ;;		___lldiv
  6668 ;;		___llmod
  6669 ;;		___wmul
  6670 ;;		___xxtofl
  6671 ;;		__div_to_l_
  6672 ;;		__tdiv_to_l_
  6673 ;;		_fround
  6674 ;;		_isdigit
  6675 ;;		_scale
  6676 ;; This function is called by:
  6677 ;;		_LCD_Handler
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           
  6681                           	psect	text9
  6682  010B06                     __ptext9:
  6683                           	opt stack 0
  6684  010B06                     _sprintf:
  6685                           	opt stack 24
  6686                           
  6687                           ;doprnt.c: 494: va_list ap;
  6688                           ;doprnt.c: 499: signed char c;
  6689                           ;doprnt.c: 501: int width;
  6690                           ;doprnt.c: 504: int prec;
  6691                           ;doprnt.c: 508: unsigned short flag;
  6692                           ;doprnt.c: 515: char d;
  6693                           ;doprnt.c: 516: double fval;
  6694                           ;doprnt.c: 517: int exp;
  6695                           ;doprnt.c: 523: union {
  6696                           ;doprnt.c: 524: unsigned long vd;
  6697                           ;doprnt.c: 525: double integ;
  6698                           ;doprnt.c: 526: } tmpval;
  6699                           ;doprnt.c: 528: unsigned long val;
  6700                           ;doprnt.c: 529: unsigned len;
  6701                           ;doprnt.c: 530: const char * cp;
  6702                           ;doprnt.c: 533: *ap = __va_start();
  6703                           
  6704                           ;incstack = 0
  6705  010B06  0EC7               	movlw	low (?_sprintf+4)
  6706  010B08  0101               	movlb	1	; () banked
  6707  010B0A  6F34               	movwf	sprintf@ap& (0+255),b
  6708  010B0C  0E00               	movlw	high (?_sprintf+4)
  6709  010B0E  0101               	movlb	1	; () banked
  6710  010B10  6F35               	movwf	(sprintf@ap+1)& (0+255),b
  6711                           
  6712                           ;doprnt.c: 536: while(c = *f++) {
  6713  010B12  EFB5  F089         	goto	l8818
  6714  010B16                     l8620:
  6715                           
  6716                           ; BSR set to: 1
  6717                           ;doprnt.c: 538: if(c != '%')
  6718  010B16  0E25               	movlw	37
  6719  010B18  0101               	movlb	1	; () banked
  6720  010B1A  1948               	xorwf	sprintf@c& (0+255),w,b
  6721  010B1C  B4D8               	btfsc	status,2,c
  6722  010B1E  D008               	goto	l8626
  6723                           
  6724                           ; BSR set to: 1
  6725                           ;doprnt.c: 540: {
  6726                           ;doprnt.c: 541: ((*sp++ = (c)));
  6727  010B20  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  6728  010B24  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  6729  010B28  C148  FFDF         	movff	sprintf@c,indf2
  6730  010B2C  EFB2  F089         	goto	l8816
  6731  010B30                     l8626:
  6732                           
  6733                           ;doprnt.c: 543: }
  6734                           ;doprnt.c: 548: flag = 0;
  6735  010B30  0E00               	movlw	0
  6736  010B32  0101               	movlb	1	; () banked
  6737  010B34  6F37               	movwf	(sprintf@flag+1)& (0+255),b
  6738  010B36  0E00               	movlw	0
  6739  010B38  6F36               	movwf	sprintf@flag& (0+255),b
  6740                           
  6741                           ; BSR set to: 1
  6742                           ;doprnt.c: 611: if(*f == '.') {
  6743  010B3A  C0C5  FFF6         	movff	sprintf@f,tblptrl
  6744  010B3E  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  6745  010B42                     	if	0	;tblptru may be non-zero
  6746  010B42                     	endif
  6747  010B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6748  010B42  0E00               	movlw	low (__mediumconst shr (0+16))
  6749  010B44  6EF8               	movwf	tblptru,c
  6750  010B46                     	endif
  6751  010B46  0008               	tblrd		*
  6752  010B48  50F5               	movf	tablat,w,c
  6753  010B4A  0A2E               	xorlw	46
  6754  010B4C  A4D8               	btfss	status,2,c
  6755  010B4E  D03D               	goto	l8640
  6756                           
  6757                           ; BSR set to: 1
  6758                           ;doprnt.c: 612: flag |= 0x4000;
  6759  010B50  0101               	movlb	1	; () banked
  6760  010B52  8D37               	bsf	(sprintf@flag+1)& (0+255),6,b
  6761                           
  6762                           ;doprnt.c: 613: f++;
  6763  010B54  0100               	movlb	0	; () banked
  6764  010B56  4BC5               	infsnz	sprintf@f& (0+255),f,b
  6765  010B58  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;doprnt.c: 620: {
  6769                           ;doprnt.c: 621: prec = 0;
  6770  010B5A  0E00               	movlw	0
  6771  010B5C  0101               	movlb	1	; () banked
  6772  010B5E  6F43               	movwf	(sprintf@prec+1)& (0+255),b
  6773  010B60  0E00               	movlw	0
  6774  010B62  6F42               	movwf	sprintf@prec& (0+255),b
  6775                           
  6776                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6777  010B64  D025               	goto	l8638
  6778  010B66                     l8634:
  6779                           
  6780                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6781  010B66  C142  F071         	movff	sprintf@prec,___wmul@multiplier
  6782  010B6A  C143  F072         	movff	sprintf@prec+1,___wmul@multiplier+1
  6783  010B6E  0E00               	movlw	0
  6784  010B70  0100               	movlb	0	; () banked
  6785  010B72  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6786  010B74  0E0A               	movlw	10
  6787  010B76  6F73               	movwf	___wmul@multiplicand& (0+255),b
  6788  010B78  EC93  F0B0         	call	___wmul	;wreg free
  6789  010B7C  C0C5  FFF6         	movff	sprintf@f,tblptrl
  6790  010B80  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  6791  010B84                     	if	0	;tblptru may be non-zero
  6792  010B84                     	endif
  6793  010B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6794  010B84  0E00               	movlw	low (__mediumconst shr (0+16))
  6795  010B86  6EF8               	movwf	tblptru,c
  6796  010B88                     	endif
  6797  010B88  0008               	tblrd		*
  6798  010B8A  50F5               	movf	tablat,w,c
  6799  010B8C  0100               	movlb	0	; () banked
  6800  010B8E  2771               	addwf	?___wmul& (0+255),f,b
  6801  010B90  0E00               	movlw	0
  6802  010B92  0100               	movlb	0	; () banked
  6803  010B94  2372               	addwfc	(?___wmul+1)& (0+255),f,b
  6804  010B96  0ED0               	movlw	208
  6805  010B98  0100               	movlb	0	; () banked
  6806  010B9A  2571               	addwf	?___wmul& (0+255),w,b
  6807  010B9C  0101               	movlb	1	; () banked
  6808  010B9E  6F42               	movwf	sprintf@prec& (0+255),b
  6809  010BA0  0EFF               	movlw	255
  6810  010BA2  0100               	movlb	0	; () banked
  6811  010BA4  2172               	addwfc	(?___wmul+1)& (0+255),w,b
  6812  010BA6  0101               	movlb	1	; () banked
  6813  010BA8  6F43               	movwf	(sprintf@prec+1)& (0+255),b
  6814                           
  6815                           ; BSR set to: 1
  6816  010BAA  0100               	movlb	0	; () banked
  6817  010BAC  4BC5               	infsnz	sprintf@f& (0+255),f,b
  6818  010BAE  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  6819  010BB0                     l8638:
  6820  010BB0  C0C5  FFF6         	movff	sprintf@f,tblptrl
  6821  010BB4  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  6822  010BB8                     	if	0	;tblptru may be non-zero
  6823  010BB8                     	endif
  6824  010BB8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6825  010BB8  0E00               	movlw	low (__mediumconst shr (0+16))
  6826  010BBA  6EF8               	movwf	tblptru,c
  6827  010BBC                     	endif
  6828  010BBC  0008               	tblrd		*
  6829  010BBE  50F5               	movf	tablat,w,c
  6830  010BC0  ECFA  F0B0         	call	_isdigit
  6831  010BC4  A0D8               	btfss	status,0,c
  6832  010BC6  D00C               	goto	l8648
  6833  010BC8  D7CE               	goto	l8634
  6834  010BCA                     l8640:
  6835                           
  6836                           ;doprnt.c: 626: prec = 0;
  6837  010BCA  0E00               	movlw	0
  6838  010BCC  0101               	movlb	1	; () banked
  6839  010BCE  6F43               	movwf	(sprintf@prec+1)& (0+255),b
  6840  010BD0  0E00               	movlw	0
  6841  010BD2  6F42               	movwf	sprintf@prec& (0+255),b
  6842                           
  6843                           ; BSR set to: 1
  6844                           ;doprnt.c: 628: flag |= 0x1000;
  6845  010BD4  0101               	movlb	1	; () banked
  6846  010BD6  8937               	bsf	(sprintf@flag+1)& (0+255),4,b
  6847                           
  6848                           ; BSR set to: 1
  6849                           ;doprnt.c: 630: }
  6850                           ;doprnt.c: 635: switch(c = *f++) {
  6851  010BD8  D003               	goto	l8648
  6852  010BDA                     l8644:
  6853                           
  6854                           ; BSR set to: 1
  6855                           ;doprnt.c: 663: flag |= 0x400;
  6856  010BDA  0101               	movlb	1	; () banked
  6857  010BDC  8537               	bsf	(sprintf@flag+1)& (0+255),2,b
  6858                           
  6859                           ;doprnt.c: 664: break;
  6860  010BDE  D015               	goto	l8650
  6861  010BE0                     l8648:
  6862  010BE0  C0C5  FFF6         	movff	sprintf@f,tblptrl
  6863  010BE4  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  6864  010BE8  0100               	movlb	0	; () banked
  6865  010BEA  4BC5               	infsnz	sprintf@f& (0+255),f,b
  6866  010BEC  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  6867  010BEE                     	if	0	;tblptru may be non-zero
  6868  010BEE                     	endif
  6869  010BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6870  010BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  6871  010BF0  6EF8               	movwf	tblptru,c
  6872  010BF2                     	endif
  6873  010BF2  0008               	tblrd		*
  6874  010BF4  CFF5 F148          	movff	tablat,sprintf@c
  6875  010BF8  0101               	movlb	1	; () banked
  6876  010BFA  5148               	movf	sprintf@c& (0+255),w,b
  6877                           
  6878                           ; Switch size 1, requested type "space"
  6879                           ; Number of cases is 2, Range of values is 0 to 102
  6880                           ; switch strategies available:
  6881                           ; Name         Instructions Cycles
  6882                           ; simple_byte            7     4 (average)
  6883                           ;	Chosen strategy is simple_byte
  6884  010BFC  0A00               	xorlw	0	; case 0
  6885  010BFE  B4D8               	btfsc	status,2,c
  6886  010C00  D3C5               	goto	l8820
  6887  010C02  0A66               	xorlw	102	; case 102
  6888  010C04  B4D8               	btfsc	status,2,c
  6889  010C06  D7E9               	goto	l8644
  6890  010C08  D3B0               	goto	l8818
  6891  010C0A                     l8650:
  6892                           
  6893                           ; BSR set to: 1
  6894                           ;doprnt.c: 825: if(flag & (0x700)) {
  6895  010C0A  0E07               	movlw	7
  6896  010C0C  0101               	movlb	1	; () banked
  6897  010C0E  1537               	andwf	(sprintf@flag+1)& (0+255),w,b
  6898  010C10  B4D8               	btfsc	status,2,c
  6899  010C12  D353               	goto	l8798
  6900                           
  6901                           ; BSR set to: 1
  6902                           ;doprnt.c: 827: if(flag & 0x1000)
  6903  010C14  0101               	movlb	1	; () banked
  6904  010C16  A937               	btfss	(sprintf@flag+1)& (0+255),4,b
  6905  010C18  D005               	goto	l8656
  6906                           
  6907                           ; BSR set to: 1
  6908                           ;doprnt.c: 829: prec = 6;
  6909  010C1A  0E00               	movlw	0
  6910  010C1C  0101               	movlb	1	; () banked
  6911  010C1E  6F43               	movwf	(sprintf@prec+1)& (0+255),b
  6912  010C20  0E06               	movlw	6
  6913  010C22  6F42               	movwf	sprintf@prec& (0+255),b
  6914  010C24                     l8656:
  6915                           
  6916                           ; BSR set to: 1
  6917                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6918  010C24  C134  FFD9         	movff	sprintf@ap,fsr2l
  6919  010C28  C135  FFDA         	movff	sprintf@ap+1,fsr2h
  6920  010C2C  CFDE F144          	movff	postinc2,sprintf@fval
  6921  010C30  CFDE F145          	movff	postinc2,sprintf@fval+1
  6922  010C34  CFDE F146          	movff	postinc2,sprintf@fval+2
  6923  010C38  CFDE F147          	movff	postinc2,sprintf@fval+3
  6924                           
  6925                           ; BSR set to: 1
  6926  010C3C  0E04               	movlw	4
  6927  010C3E  0101               	movlb	1	; () banked
  6928  010C40  2734               	addwf	sprintf@ap& (0+255),f,b
  6929  010C42  0E00               	movlw	0
  6930  010C44  2335               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6931                           
  6932                           ; BSR set to: 1
  6933                           ;doprnt.c: 831: if(fval < 0.0) {
  6934  010C46  0101               	movlb	1	; () banked
  6935  010C48  AF47               	btfss	(sprintf@fval+3)& (0+255),7,b
  6936  010C4A  D015               	goto	l8666
  6937                           
  6938                           ; BSR set to: 1
  6939                           ;doprnt.c: 832: fval = -fval;
  6940  010C4C  C144  F098         	movff	sprintf@fval,___flneg@f1
  6941  010C50  C145  F099         	movff	sprintf@fval+1,___flneg@f1+1
  6942  010C54  C146  F09A         	movff	sprintf@fval+2,___flneg@f1+2
  6943  010C58  C147  F09B         	movff	sprintf@fval+3,___flneg@f1+3
  6944  010C5C  EC77  F0B0         	call	___flneg	;wreg free
  6945  010C60  C098  F144         	movff	?___flneg,sprintf@fval
  6946  010C64  C099  F145         	movff	?___flneg+1,sprintf@fval+1
  6947  010C68  C09A  F146         	movff	?___flneg+2,sprintf@fval+2
  6948  010C6C  C09B  F147         	movff	?___flneg+3,sprintf@fval+3
  6949                           
  6950                           ;doprnt.c: 833: flag |= 0x03;
  6951  010C70  0E03               	movlw	3
  6952  010C72  0101               	movlb	1	; () banked
  6953  010C74  1336               	iorwf	sprintf@flag& (0+255),f,b
  6954  010C76                     l8666:
  6955                           
  6956                           ; BSR set to: 1
  6957                           ;doprnt.c: 834: }
  6958                           ;doprnt.c: 835: exp = 0;
  6959  010C76  0E00               	movlw	0
  6960  010C78  0101               	movlb	1	; () banked
  6961  010C7A  6F3D               	movwf	(sprintf@exp+1)& (0+255),b
  6962  010C7C  0E00               	movlw	0
  6963  010C7E  6F3C               	movwf	sprintf@exp& (0+255),b
  6964                           
  6965                           ; BSR set to: 1
  6966                           ;doprnt.c: 836: if( fval!=0) {
  6967  010C80  0101               	movlb	1	; () banked
  6968  010C82  5144               	movf	sprintf@fval& (0+255),w,b
  6969  010C84  0101               	movlb	1	; () banked
  6970  010C86  1145               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6971  010C88  0101               	movlb	1	; () banked
  6972  010C8A  1146               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6973  010C8C  0101               	movlb	1	; () banked
  6974  010C8E  1147               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6975  010C90  B4D8               	btfsc	status,2,c
  6976  010C92  D08E               	goto	l8694
  6977                           
  6978                           ; BSR set to: 1
  6979                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  6980  010C94  0101               	movlb	1	; () banked
  6981  010C96  3546               	rlcf	(sprintf@fval+2)& (0+255),w,b
  6982  010C98  3547               	rlcf	(sprintf@fval+3)& (0+255),w,b
  6983  010C9A  0F82               	addlw	130
  6984  010C9C  0101               	movlb	1	; () banked
  6985  010C9E  6F3C               	movwf	sprintf@exp& (0+255),b
  6986  010CA0  0101               	movlb	1	; () banked
  6987  010CA2  6B3D               	clrf	(sprintf@exp+1)& (0+255),b
  6988  010CA4  0EFF               	movlw	255
  6989  010CA6  233D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6990                           
  6991                           ; BSR set to: 1
  6992                           ;doprnt.c: 838: exp--;
  6993  010CA8  0101               	movlb	1	; () banked
  6994  010CAA  073C               	decf	sprintf@exp& (0+255),f,b
  6995  010CAC  A0D8               	btfss	status,0,c
  6996  010CAE  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  6997                           
  6998                           ; BSR set to: 1
  6999                           ;doprnt.c: 839: exp *= 3;
  7000  010CB0  C13C  F071         	movff	sprintf@exp,___wmul@multiplier
  7001  010CB4  C13D  F072         	movff	sprintf@exp+1,___wmul@multiplier+1
  7002  010CB8  0E00               	movlw	0
  7003  010CBA  0100               	movlb	0	; () banked
  7004  010CBC  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7005  010CBE  0E03               	movlw	3
  7006  010CC0  6F73               	movwf	___wmul@multiplicand& (0+255),b
  7007  010CC2  EC93  F0B0         	call	___wmul	;wreg free
  7008  010CC6  C071  F13C         	movff	?___wmul,sprintf@exp
  7009  010CCA  C072  F13D         	movff	?___wmul+1,sprintf@exp+1
  7010                           
  7011                           ;doprnt.c: 840: exp /= 10;
  7012  010CCE  C13C  F077         	movff	sprintf@exp,___awdiv@dividend
  7013  010CD2  C13D  F078         	movff	sprintf@exp+1,___awdiv@dividend+1
  7014  010CD6  0E00               	movlw	0
  7015  010CD8  0100               	movlb	0	; () banked
  7016  010CDA  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  7017  010CDC  0E0A               	movlw	10
  7018  010CDE  6F79               	movwf	___awdiv@divisor& (0+255),b
  7019  010CE0  ECDA  F0AB         	call	___awdiv	;wreg free
  7020  010CE4  C077  F13C         	movff	?___awdiv,sprintf@exp
  7021  010CE8  C078  F13D         	movff	?___awdiv+1,sprintf@exp+1
  7022                           
  7023                           ;doprnt.c: 841: if(exp < 0)
  7024  010CEC  0101               	movlb	1	; () banked
  7025  010CEE  AF3D               	btfss	(sprintf@exp+1)& (0+255),7,b
  7026  010CF0  D004               	goto	l8682
  7027                           
  7028                           ; BSR set to: 1
  7029                           ;doprnt.c: 842: exp--;
  7030  010CF2  0101               	movlb	1	; () banked
  7031  010CF4  073C               	decf	sprintf@exp& (0+255),f,b
  7032  010CF6  A0D8               	btfss	status,0,c
  7033  010CF8  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  7034  010CFA                     l8682:
  7035                           
  7036                           ; BSR set to: 1
  7037                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7038  010CFA  0101               	movlb	1	; () banked
  7039  010CFC  513C               	movf	sprintf@exp& (0+255),w,b
  7040  010CFE  0800               	sublw	0
  7041  010D00  EC78  F094         	call	_scale
  7042  010D04  C098  F13E         	movff	?_scale,sprintf@tmpval
  7043  010D08  C099  F13F         	movff	?_scale+1,sprintf@tmpval+1
  7044  010D0C  C09A  F140         	movff	?_scale+2,sprintf@tmpval+2
  7045  010D10  C09B  F141         	movff	?_scale+3,sprintf@tmpval+3
  7046                           
  7047                           ;doprnt.c: 847: tmpval.integ *= fval;
  7048  010D14  C13E  F07F         	movff	sprintf@tmpval,___flmul@b
  7049  010D18  C13F  F080         	movff	sprintf@tmpval+1,___flmul@b+1
  7050  010D1C  C140  F081         	movff	sprintf@tmpval+2,___flmul@b+2
  7051  010D20  C141  F082         	movff	sprintf@tmpval+3,___flmul@b+3
  7052  010D24  C144  F083         	movff	sprintf@fval,___flmul@a
  7053  010D28  C145  F084         	movff	sprintf@fval+1,___flmul@a+1
  7054  010D2C  C146  F085         	movff	sprintf@fval+2,___flmul@a+2
  7055  010D30  C147  F086         	movff	sprintf@fval+3,___flmul@a+3
  7056  010D34  ECDF  F09B         	call	___flmul	;wreg free
  7057  010D38  C07F  F13E         	movff	?___flmul,sprintf@tmpval
  7058  010D3C  C080  F13F         	movff	?___flmul+1,sprintf@tmpval+1
  7059  010D40  C081  F140         	movff	?___flmul+2,sprintf@tmpval+2
  7060  010D44  C082  F141         	movff	?___flmul+3,sprintf@tmpval+3
  7061                           
  7062                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7063  010D48  C13E  F071         	movff	sprintf@tmpval,___flge@ff1
  7064  010D4C  C13F  F072         	movff	sprintf@tmpval+1,___flge@ff1+1
  7065  010D50  C140  F073         	movff	sprintf@tmpval+2,___flge@ff1+2
  7066  010D54  C141  F074         	movff	sprintf@tmpval+3,___flge@ff1+3
  7067  010D58  0E00               	movlw	0
  7068  010D5A  0100               	movlb	0	; () banked
  7069  010D5C  6F75               	movwf	___flge@ff2& (0+255),b
  7070  010D5E  0E00               	movlw	0
  7071  010D60  6F76               	movwf	(___flge@ff2+1)& (0+255),b
  7072  010D62  0E80               	movlw	128
  7073  010D64  6F77               	movwf	(___flge@ff2+2)& (0+255),b
  7074  010D66  0E3F               	movlw	63
  7075  010D68  6F78               	movwf	(___flge@ff2+3)& (0+255),b
  7076  010D6A  EC9B  F0A8         	call	___flge	;wreg free
  7077  010D6E  0100               	movlb	0	; () banked
  7078  010D70  B0D8               	btfsc	status,0,c
  7079  010D72  D005               	goto	l8690
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;doprnt.c: 849: exp--;
  7083  010D74  0101               	movlb	1	; () banked
  7084  010D76  073C               	decf	sprintf@exp& (0+255),f,b
  7085  010D78  A0D8               	btfss	status,0,c
  7086  010D7A  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  7087  010D7C  D019               	goto	l8694
  7088  010D7E                     l8690:
  7089                           
  7090                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7091  010D7E  C13E  F071         	movff	sprintf@tmpval,___flge@ff1
  7092  010D82  C13F  F072         	movff	sprintf@tmpval+1,___flge@ff1+1
  7093  010D86  C140  F073         	movff	sprintf@tmpval+2,___flge@ff1+2
  7094  010D8A  C141  F074         	movff	sprintf@tmpval+3,___flge@ff1+3
  7095  010D8E  0E00               	movlw	0
  7096  010D90  0100               	movlb	0	; () banked
  7097  010D92  6F75               	movwf	___flge@ff2& (0+255),b
  7098  010D94  0E00               	movlw	0
  7099  010D96  6F76               	movwf	(___flge@ff2+1)& (0+255),b
  7100  010D98  0E20               	movlw	32
  7101  010D9A  6F77               	movwf	(___flge@ff2+2)& (0+255),b
  7102  010D9C  0E41               	movlw	65
  7103  010D9E  6F78               	movwf	(___flge@ff2+3)& (0+255),b
  7104  010DA0  EC9B  F0A8         	call	___flge	;wreg free
  7105  010DA4  0100               	movlb	0	; () banked
  7106  010DA6  A0D8               	btfss	status,0,c
  7107  010DA8  D003               	goto	l8694
  7108                           
  7109                           ; BSR set to: 0
  7110                           ;doprnt.c: 851: exp++;
  7111  010DAA  0101               	movlb	1	; () banked
  7112  010DAC  4B3C               	infsnz	sprintf@exp& (0+255),f,b
  7113  010DAE  2B3D               	incf	(sprintf@exp+1)& (0+255),f,b
  7114  010DB0                     l8694:
  7115                           
  7116                           ;doprnt.c: 852: }
  7117                           ;doprnt.c: 1112: if(prec <= 12)
  7118  010DB0  0101               	movlb	1	; () banked
  7119  010DB2  BF43               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7120  010DB4  D008               	goto	l8696
  7121  010DB6  0101               	movlb	1	; () banked
  7122  010DB8  5143               	movf	(sprintf@prec+1)& (0+255),w,b
  7123  010DBA  E123               	bnz	l8698
  7124  010DBC  0E0D               	movlw	13
  7125  010DBE  0101               	movlb	1	; () banked
  7126  010DC0  5D42               	subwf	sprintf@prec& (0+255),w,b
  7127  010DC2  B0D8               	btfsc	status,0,c
  7128  010DC4  D01E               	goto	l8698
  7129  010DC6                     l8696:
  7130                           
  7131                           ; BSR set to: 1
  7132                           ;doprnt.c: 1113: fval += fround(prec);
  7133  010DC6  C144  F0A5         	movff	sprintf@fval,___fladd@b
  7134  010DCA  C145  F0A6         	movff	sprintf@fval+1,___fladd@b+1
  7135  010DCE  C146  F0A7         	movff	sprintf@fval+2,___fladd@b+2
  7136  010DD2  C147  F0A8         	movff	sprintf@fval+3,___fladd@b+3
  7137  010DD6  0101               	movlb	1	; () banked
  7138  010DD8  5142               	movf	sprintf@prec& (0+255),w,b
  7139  010DDA  ECE1  F0A1         	call	_fround
  7140  010DDE  C098  F0A9         	movff	?_fround,___fladd@a
  7141  010DE2  C099  F0AA         	movff	?_fround+1,___fladd@a+1
  7142  010DE6  C09A  F0AB         	movff	?_fround+2,___fladd@a+2
  7143  010DEA  C09B  F0AC         	movff	?_fround+3,___fladd@a+3
  7144  010DEE  EC8B  F099         	call	___fladd	;wreg free
  7145  010DF2  C0A5  F144         	movff	?___fladd,sprintf@fval
  7146  010DF6  C0A6  F145         	movff	?___fladd+1,sprintf@fval+1
  7147  010DFA  C0A7  F146         	movff	?___fladd+2,sprintf@fval+2
  7148  010DFE  C0A8  F147         	movff	?___fladd+3,sprintf@fval+3
  7149  010E02                     l8698:
  7150                           
  7151                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7152  010E02  0101               	movlb	1	; () banked
  7153  010E04  BF3D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7154  010E06  D008               	goto	l8700
  7155  010E08  0101               	movlb	1	; () banked
  7156  010E0A  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  7157  010E0C  E12E               	bnz	l8706
  7158  010E0E  0E0A               	movlw	10
  7159  010E10  0101               	movlb	1	; () banked
  7160  010E12  5D3C               	subwf	sprintf@exp& (0+255),w,b
  7161  010E14  B0D8               	btfsc	status,0,c
  7162  010E16  D029               	goto	l8706
  7163  010E18                     l8700:
  7164                           
  7165                           ; BSR set to: 1
  7166  010E18  0101               	movlb	1	; () banked
  7167  010E1A  5144               	movf	sprintf@fval& (0+255),w,b
  7168  010E1C  0101               	movlb	1	; () banked
  7169  010E1E  1145               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7170  010E20  0101               	movlb	1	; () banked
  7171  010E22  1146               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7172  010E24  0101               	movlb	1	; () banked
  7173  010E26  1147               	iorwf	(sprintf@fval+3)& (0+255),w,b
  7174  010E28  B4D8               	btfsc	status,2,c
  7175  010E2A  D06D               	goto	l8720
  7176                           
  7177                           ; BSR set to: 1
  7178  010E2C  C144  F0B9         	movff	sprintf@fval,___fltol@f1
  7179  010E30  C145  F0BA         	movff	sprintf@fval+1,___fltol@f1+1
  7180  010E34  C146  F0BB         	movff	sprintf@fval+2,___fltol@f1+2
  7181  010E38  C147  F0BC         	movff	sprintf@fval+3,___fltol@f1+3
  7182  010E3C  ECDE  F0AA         	call	___fltol	;wreg free
  7183  010E40  0100               	movlb	0	; () banked
  7184  010E42  51B9               	movf	?___fltol& (0+255),w,b
  7185  010E44  0100               	movlb	0	; () banked
  7186  010E46  11BA               	iorwf	(?___fltol+1)& (0+255),w,b
  7187  010E48  0100               	movlb	0	; () banked
  7188  010E4A  11BB               	iorwf	(?___fltol+2)& (0+255),w,b
  7189  010E4C  0100               	movlb	0	; () banked
  7190  010E4E  11BC               	iorwf	(?___fltol+3)& (0+255),w,b
  7191  010E50  A4D8               	btfss	status,2,c
  7192  010E52  D059               	goto	l8720
  7193                           
  7194                           ; BSR set to: 0
  7195  010E54  0101               	movlb	1	; () banked
  7196  010E56  BF3D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7197  010E58  D056               	goto	l8720
  7198  010E5A  0101               	movlb	1	; () banked
  7199  010E5C  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  7200  010E5E  E105               	bnz	l8706
  7201  010E60  0E02               	movlw	2
  7202  010E62  0101               	movlb	1	; () banked
  7203  010E64  5D3C               	subwf	sprintf@exp& (0+255),w,b
  7204  010E66  A0D8               	btfss	status,0,c
  7205  010E68  D04E               	goto	l8720
  7206  010E6A                     l8706:
  7207                           
  7208                           ; BSR set to: 1
  7209                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7210  010E6A  C13E  F071         	movff	sprintf@tmpval,___flge@ff1
  7211  010E6E  C13F  F072         	movff	sprintf@tmpval+1,___flge@ff1+1
  7212  010E72  C140  F073         	movff	sprintf@tmpval+2,___flge@ff1+2
  7213  010E76  C141  F074         	movff	sprintf@tmpval+3,___flge@ff1+3
  7214  010E7A  0E5F               	movlw	95
  7215  010E7C  0100               	movlb	0	; () banked
  7216  010E7E  6F75               	movwf	___flge@ff2& (0+255),b
  7217  010E80  0E70               	movlw	112
  7218  010E82  6F76               	movwf	(___flge@ff2+1)& (0+255),b
  7219  010E84  0E89               	movlw	137
  7220  010E86  6F77               	movwf	(___flge@ff2+2)& (0+255),b
  7221  010E88  0E40               	movlw	64
  7222  010E8A  6F78               	movwf	(___flge@ff2+3)& (0+255),b
  7223  010E8C  EC9B  F0A8         	call	___flge	;wreg free
  7224  010E90  0100               	movlb	0	; () banked
  7225  010E92  B0D8               	btfsc	status,0,c
  7226  010E94  D003               	goto	l8710
  7227                           
  7228                           ; BSR set to: 0
  7229                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7230  010E96  0101               	movlb	1	; () banked
  7231  010E98  0EF7               	movlw	247
  7232  010E9A  D002               	goto	L5
  7233  010E9C                     l8710:
  7234                           
  7235                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7236  010E9C  0101               	movlb	1	; () banked
  7237  010E9E  0EF8               	movlw	248
  7238  010EA0                     L5:
  7239  010EA0  273C               	addwf	sprintf@exp& (0+255),f,b
  7240  010EA2  0EFF               	movlw	255
  7241  010EA4  233D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7242                           
  7243                           ; BSR set to: 1
  7244                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7245                           
  7246                           ; BSR set to: 1
  7247  010EA6  0101               	movlb	1	; () banked
  7248  010EA8  513C               	movf	sprintf@exp& (0+255),w,b
  7249  010EAA  EC78  F094         	call	_scale
  7250  010EAE  C098  F13E         	movff	?_scale,sprintf@tmpval
  7251  010EB2  C099  F13F         	movff	?_scale+1,sprintf@tmpval+1
  7252  010EB6  C09A  F140         	movff	?_scale+2,sprintf@tmpval+2
  7253  010EBA  C09B  F141         	movff	?_scale+3,sprintf@tmpval+3
  7254  010EBE  C144  F071         	movff	sprintf@fval,__div_to_l_@f1
  7255  010EC2  C145  F072         	movff	sprintf@fval+1,__div_to_l_@f1+1
  7256  010EC6  C146  F073         	movff	sprintf@fval+2,__div_to_l_@f1+2
  7257  010ECA  C147  F074         	movff	sprintf@fval+3,__div_to_l_@f1+3
  7258  010ECE  C13E  F075         	movff	sprintf@tmpval,__div_to_l_@f2
  7259  010ED2  C13F  F076         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  7260  010ED6  C140  F077         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  7261  010EDA  C141  F078         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  7262  010EDE  EC63  F0A9         	call	__div_to_l_	;wreg free
  7263  010EE2  C071  F138         	movff	?__div_to_l_,sprintf@val
  7264  010EE6  C072  F139         	movff	?__div_to_l_+1,sprintf@val+1
  7265  010EEA  C073  F13A         	movff	?__div_to_l_+2,sprintf@val+2
  7266  010EEE  C074  F13B         	movff	?__div_to_l_+3,sprintf@val+3
  7267                           
  7268                           ;doprnt.c: 1129: fval = 0.0;
  7269  010EF2  0E00               	movlw	0
  7270  010EF4  0101               	movlb	1	; () banked
  7271  010EF6  6F44               	movwf	sprintf@fval& (0+255),b
  7272  010EF8  0E00               	movlw	0
  7273  010EFA  6F45               	movwf	(sprintf@fval+1)& (0+255),b
  7274  010EFC  0E00               	movlw	0
  7275  010EFE  6F46               	movwf	(sprintf@fval+2)& (0+255),b
  7276  010F00  0E00               	movlw	0
  7277  010F02  6F47               	movwf	(sprintf@fval+3)& (0+255),b
  7278                           
  7279                           ;doprnt.c: 1130: } else {
  7280  010F04  D03C               	goto	l8724
  7281  010F06                     l8720:
  7282                           
  7283                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7284  010F06  C144  F0B9         	movff	sprintf@fval,___fltol@f1
  7285  010F0A  C145  F0BA         	movff	sprintf@fval+1,___fltol@f1+1
  7286  010F0E  C146  F0BB         	movff	sprintf@fval+2,___fltol@f1+2
  7287  010F12  C147  F0BC         	movff	sprintf@fval+3,___fltol@f1+3
  7288  010F16  ECDE  F0AA         	call	___fltol	;wreg free
  7289  010F1A  C0B9  F138         	movff	?___fltol,sprintf@val
  7290  010F1E  C0BA  F139         	movff	?___fltol+1,sprintf@val+1
  7291  010F22  C0BB  F13A         	movff	?___fltol+2,sprintf@val+2
  7292  010F26  C0BC  F13B         	movff	?___fltol+3,sprintf@val+3
  7293                           
  7294                           ;doprnt.c: 1132: fval -= (double)val;
  7295  010F2A  C144  F0B9         	movff	sprintf@fval,___flsub@b
  7296  010F2E  C145  F0BA         	movff	sprintf@fval+1,___flsub@b+1
  7297  010F32  C146  F0BB         	movff	sprintf@fval+2,___flsub@b+2
  7298  010F36  C147  F0BC         	movff	sprintf@fval+3,___flsub@b+3
  7299  010F3A  C138  F071         	movff	sprintf@val,___xxtofl@val
  7300  010F3E  C139  F072         	movff	sprintf@val+1,___xxtofl@val+1
  7301  010F42  C13A  F073         	movff	sprintf@val+2,___xxtofl@val+2
  7302  010F46  C13B  F074         	movff	sprintf@val+3,___xxtofl@val+3
  7303  010F4A  0E00               	movlw	0
  7304  010F4C  EC4B  F0A4         	call	___xxtofl
  7305  010F50  C071  F0BD         	movff	?___xxtofl,___flsub@a
  7306  010F54  C072  F0BE         	movff	?___xxtofl+1,___flsub@a+1
  7307  010F58  C073  F0BF         	movff	?___xxtofl+2,___flsub@a+2
  7308  010F5C  C074  F0C0         	movff	?___xxtofl+3,___flsub@a+3
  7309  010F60  ECD3  F0AF         	call	___flsub	;wreg free
  7310  010F64  C0B9  F144         	movff	?___flsub,sprintf@fval
  7311  010F68  C0BA  F145         	movff	?___flsub+1,sprintf@fval+1
  7312  010F6C  C0BB  F146         	movff	?___flsub+2,sprintf@fval+2
  7313  010F70  C0BC  F147         	movff	?___flsub+3,sprintf@fval+3
  7314                           
  7315                           ;doprnt.c: 1133: exp = 0;
  7316  010F74  0E00               	movlw	0
  7317  010F76  0101               	movlb	1	; () banked
  7318  010F78  6F3D               	movwf	(sprintf@exp+1)& (0+255),b
  7319  010F7A  0E00               	movlw	0
  7320  010F7C  6F3C               	movwf	sprintf@exp& (0+255),b
  7321  010F7E                     l8724:
  7322                           
  7323                           ; BSR set to: 1
  7324                           ;doprnt.c: 1134: }
  7325                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7326  010F7E  0E01               	movlw	1
  7327  010F80  0101               	movlb	1	; () banked
  7328  010F82  6F48               	movwf	sprintf@c& (0+255),b
  7329  010F84                     l8726:
  7330                           
  7331                           ; BSR set to: 1
  7332  010F84  0E0A               	movlw	10
  7333  010F86  0101               	movlb	1	; () banked
  7334  010F88  1948               	xorwf	sprintf@c& (0+255),w,b
  7335  010F8A  B4D8               	btfsc	status,2,c
  7336  010F8C  D021               	goto	l8738
  7337                           
  7338                           ; BSR set to: 1
  7339                           ;doprnt.c: 1137: if(val < dpowers[c])
  7340                           
  7341                           ; BSR set to: 1
  7342                           
  7343                           ; BSR set to: 1
  7344  010F8E  0101               	movlb	1	; () banked
  7345  010F90  5148               	movf	sprintf@c& (0+255),w,b
  7346  010F92  0D04               	mullw	4
  7347  010F94  0EDD               	movlw	low _dpowers
  7348  010F96  24F3               	addwf	prodl,w,c
  7349  010F98  6EF6               	movwf	tblptrl,c
  7350  010F9A  0EFE               	movlw	high _dpowers
  7351  010F9C  20F4               	addwfc	prodh,w,c
  7352  010F9E  6EF7               	movwf	tblptrh,c
  7353  010FA0                     	if	1	;There are 3 active tblptr bytes
  7354  010FA0  6AF8               	clrf	tblptru,c
  7355  010FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  7356  010FA4  22F8               	addwfc	tblptru,f,c
  7357  010FA6                     	endif
  7358  010FA6  0009               	tblrd		*+
  7359  010FA8  50F5               	movf	tablat,w,c
  7360  010FAA  0101               	movlb	1	; () banked
  7361  010FAC  5D38               	subwf	sprintf@val& (0+255),w,b
  7362  010FAE  0009               	tblrd		*+
  7363  010FB0  50F5               	movf	tablat,w,c
  7364  010FB2  0101               	movlb	1	; () banked
  7365  010FB4  5939               	subwfb	(sprintf@val+1)& (0+255),w,b
  7366  010FB6  0009               	tblrd		*+
  7367  010FB8  50F5               	movf	tablat,w,c
  7368  010FBA  0101               	movlb	1	; () banked
  7369  010FBC  593A               	subwfb	(sprintf@val+2)& (0+255),w,b
  7370  010FBE  0009               	tblrd		*+
  7371  010FC0  50F5               	movf	tablat,w,c
  7372  010FC2  0101               	movlb	1	; () banked
  7373  010FC4  593B               	subwfb	(sprintf@val+3)& (0+255),w,b
  7374  010FC6  A0D8               	btfss	status,0,c
  7375  010FC8  D003               	goto	l8738
  7376                           
  7377                           ; BSR set to: 1
  7378                           
  7379                           ; BSR set to: 1
  7380                           
  7381                           ; BSR set to: 1
  7382                           ;doprnt.c: 1138: break;
  7383  010FCA  0101               	movlb	1	; () banked
  7384  010FCC  2B48               	incf	sprintf@c& (0+255),f,b
  7385  010FCE  D7DA               	goto	l8726
  7386  010FD0                     l8738:
  7387                           
  7388                           ; BSR set to: 1
  7389                           ;doprnt.c: 1175: {
  7390                           ;doprnt.c: 1188: if(flag & 0x03)
  7391  010FD0  0E03               	movlw	3
  7392  010FD2  0101               	movlb	1	; () banked
  7393  010FD4  1536               	andwf	sprintf@flag& (0+255),w,b
  7394  010FD6  0100               	movlb	0	; () banked
  7395  010FD8  6FCB               	movwf	??_sprintf& (0+255),b
  7396  010FDA  0E00               	movlw	0
  7397  010FDC  0101               	movlb	1	; () banked
  7398  010FDE  1537               	andwf	(sprintf@flag+1)& (0+255),w,b
  7399  010FE0  0100               	movlb	0	; () banked
  7400  010FE2  6FCC               	movwf	(??_sprintf+1)& (0+255),b
  7401  010FE4  0100               	movlb	0	; () banked
  7402  010FE6  51CB               	movf	??_sprintf& (0+255),w,b
  7403  010FE8  0100               	movlb	0	; () banked
  7404  010FEA  11CC               	iorwf	(??_sprintf+1)& (0+255),w,b
  7405  010FEC  B4D8               	btfsc	status,2,c
  7406  010FEE  D058               	goto	l8752
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7410  010FF0  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  7411  010FF4  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  7412  010FF8  0E2D               	movlw	45
  7413  010FFA  D050               	goto	L6
  7414  010FFC                     l8742:
  7415                           
  7416                           ; BSR set to: 0
  7417  010FFC  0100               	movlb	0	; () banked
  7418  010FFE  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  7419  011000  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  7420                           
  7421                           ; BSR set to: 0
  7422                           ;doprnt.c: 1195: }
  7423                           ;doprnt.c: 1196: while(c--) {
  7424  011002  D04E               	goto	l8752
  7425  011004                     l8744:
  7426                           
  7427                           ;doprnt.c: 1200: {
  7428                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7429  011004  C138  F071         	movff	sprintf@val,___lldiv@dividend
  7430  011008  C139  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  7431  01100C  C13A  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  7432  011010  C13B  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  7433  011014  0101               	movlb	1	; () banked
  7434  011016  5148               	movf	sprintf@c& (0+255),w,b
  7435  011018  0D04               	mullw	4
  7436  01101A  0EDD               	movlw	low _dpowers
  7437  01101C  24F3               	addwf	prodl,w,c
  7438  01101E  6EF6               	movwf	tblptrl,c
  7439  011020  0EFE               	movlw	high _dpowers
  7440  011022  20F4               	addwfc	prodh,w,c
  7441  011024  6EF7               	movwf	tblptrh,c
  7442  011026                     	if	1	;There are 3 active tblptr bytes
  7443  011026  6AF8               	clrf	tblptru,c
  7444  011028  0E00               	movlw	low (__mediumconst shr (0+16))
  7445  01102A  22F8               	addwfc	tblptru,f,c
  7446  01102C                     	endif
  7447  01102C  0009               	tblrd		*+
  7448  01102E  CFF5 F075          	movff	tablat,___lldiv@divisor
  7449  011032  0009               	tblrd		*+
  7450  011034  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  7451  011038  0009               	tblrd		*+
  7452  01103A  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  7453  01103E  000A               	tblrd		*-
  7454  011040  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  7455  011044  EC98  F0AC         	call	___lldiv	;wreg free
  7456  011048  C071  F13E         	movff	?___lldiv,sprintf@tmpval
  7457  01104C  C072  F13F         	movff	?___lldiv+1,sprintf@tmpval+1
  7458  011050  C073  F140         	movff	?___lldiv+2,sprintf@tmpval+2
  7459  011054  C074  F141         	movff	?___lldiv+3,sprintf@tmpval+3
  7460                           
  7461                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7462  011058  C13E  F071         	movff	sprintf@tmpval,___llmod@dividend
  7463  01105C  C13F  F072         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7464  011060  C140  F073         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7465  011064  C141  F074         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7466  011068  0E0A               	movlw	10
  7467  01106A  0100               	movlb	0	; () banked
  7468  01106C  6F75               	movwf	___llmod@divisor& (0+255),b
  7469  01106E  0E00               	movlw	0
  7470  011070  6F76               	movwf	(___llmod@divisor+1)& (0+255),b
  7471  011072  0E00               	movlw	0
  7472  011074  6F77               	movwf	(___llmod@divisor+2)& (0+255),b
  7473  011076  0E00               	movlw	0
  7474  011078  6F78               	movwf	(___llmod@divisor+3)& (0+255),b
  7475  01107A  EC4D  F0AE         	call	___llmod	;wreg free
  7476  01107E  C071  F13E         	movff	?___llmod,sprintf@tmpval
  7477  011082  C072  F13F         	movff	?___llmod+1,sprintf@tmpval+1
  7478  011086  C073  F140         	movff	?___llmod+2,sprintf@tmpval+2
  7479  01108A  C074  F141         	movff	?___llmod+3,sprintf@tmpval+3
  7480                           
  7481                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7482  01108E  0101               	movlb	1	; () banked
  7483  011090  513E               	movf	sprintf@tmpval& (0+255),w,b
  7484  011092  0F30               	addlw	48
  7485  011094  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  7486  011098  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  7487  01109C                     L6:
  7488  01109C  6EDF               	movwf	indf2,c
  7489  01109E  D7AE               	goto	l8742
  7490  0110A0                     l8752:
  7491                           
  7492                           ; BSR set to: 0
  7493  0110A0  0101               	movlb	1	; () banked
  7494  0110A2  0748               	decf	sprintf@c& (0+255),f,b
  7495  0110A4  0101               	movlb	1	; () banked
  7496  0110A6  2948               	incf	sprintf@c& (0+255),w,b
  7497  0110A8  B4D8               	btfsc	status,2,c
  7498  0110AA  D00E               	goto	l8760
  7499  0110AC  D7AB               	goto	l8744
  7500  0110AE                     l8754:
  7501                           
  7502                           ; BSR set to: 1
  7503                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7504  0110AE  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  7505  0110B2  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  7506  0110B6  0E30               	movlw	48
  7507  0110B8  6EDF               	movwf	indf2,c
  7508                           
  7509                           ; BSR set to: 1
  7510  0110BA  0100               	movlb	0	; () banked
  7511  0110BC  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  7512  0110BE  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;doprnt.c: 1209: exp--;
  7516  0110C0  0101               	movlb	1	; () banked
  7517  0110C2  073C               	decf	sprintf@exp& (0+255),f,b
  7518  0110C4  A0D8               	btfss	status,0,c
  7519  0110C6  073D               	decf	(sprintf@exp+1)& (0+255),f,b
  7520  0110C8                     l8760:
  7521                           
  7522                           ; BSR set to: 1
  7523  0110C8  0101               	movlb	1	; () banked
  7524  0110CA  BF3D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7525  0110CC  D007               	goto	l8762
  7526  0110CE  0101               	movlb	1	; () banked
  7527  0110D0  513D               	movf	(sprintf@exp+1)& (0+255),w,b
  7528  0110D2  E1ED               	bnz	l8754
  7529  0110D4  0101               	movlb	1	; () banked
  7530  0110D6  053C               	decf	sprintf@exp& (0+255),w,b
  7531  0110D8  B0D8               	btfsc	status,0,c
  7532  0110DA  D7E9               	goto	l8754
  7533  0110DC                     l8762:
  7534                           
  7535                           ; BSR set to: 1
  7536                           ;doprnt.c: 1210: }
  7537                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7538  0110DC  0101               	movlb	1	; () banked
  7539  0110DE  BF43               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7540  0110E0  D00C               	goto	l998
  7541  0110E2  0101               	movlb	1	; () banked
  7542  0110E4  5143               	movf	(sprintf@prec+1)& (0+255),w,b
  7543  0110E6  E105               	bnz	u11750
  7544  0110E8  0E09               	movlw	9
  7545  0110EA  0101               	movlb	1	; () banked
  7546  0110EC  5D42               	subwf	sprintf@prec& (0+255),w,b
  7547  0110EE  A0D8               	btfss	status,0,c
  7548  0110F0  D004               	goto	l998
  7549  0110F2                     u11750:
  7550                           
  7551                           ; BSR set to: 1
  7552                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7553  0110F2  0E08               	movlw	8
  7554  0110F4  0101               	movlb	1	; () banked
  7555  0110F6  6F48               	movwf	sprintf@c& (0+255),b
  7556  0110F8  D002               	goto	l8766
  7557  0110FA                     l998:
  7558                           
  7559                           ; BSR set to: 1
  7560                           ;doprnt.c: 1213: else
  7561                           ;doprnt.c: 1214: c = prec;
  7562  0110FA  C142  F148         	movff	sprintf@prec,sprintf@c
  7563  0110FE                     l8766:
  7564                           
  7565                           ; BSR set to: 1
  7566                           ;doprnt.c: 1215: prec -= c;
  7567  0110FE  0101               	movlb	1	; () banked
  7568  011100  5148               	movf	sprintf@c& (0+255),w,b
  7569  011102  0101               	movlb	1	; () banked
  7570  011104  5F42               	subwf	sprintf@prec& (0+255),f,b
  7571  011106  0E00               	movlw	0
  7572  011108  0101               	movlb	1	; () banked
  7573  01110A  BF48               	btfsc	sprintf@c& (0+255),7,b
  7574  01110C  0EFF               	movlw	255
  7575  01110E  0101               	movlb	1	; () banked
  7576  011110  5B43               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7577                           
  7578                           ; BSR set to: 1
  7579                           ;doprnt.c: 1219: if(c)
  7580  011112  0101               	movlb	1	; () banked
  7581  011114  5148               	movf	sprintf@c& (0+255),w,b
  7582  011116  0101               	movlb	1	; () banked
  7583  011118  B4D8               	btfsc	status,2,c
  7584  01111A  D009               	goto	l8774
  7585                           
  7586                           ; BSR set to: 1
  7587                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7588  01111C  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  7589  011120  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  7590  011124  0E2E               	movlw	46
  7591  011126  6EDF               	movwf	indf2,c
  7592                           
  7593                           ; BSR set to: 1
  7594  011128  0100               	movlb	0	; () banked
  7595  01112A  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  7596  01112C  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  7597  01112E                     l8774:
  7598                           
  7599                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7600  01112E  0101               	movlb	1	; () banked
  7601  011130  5148               	movf	sprintf@c& (0+255),w,b
  7602  011132  EC78  F094         	call	_scale
  7603  011136  C098  F130         	movff	?_scale,_sprintf$4229
  7604  01113A  C099  F131         	movff	?_scale+1,_sprintf$4229+1
  7605  01113E  C09A  F132         	movff	?_scale+2,_sprintf$4229+2
  7606  011142  C09B  F133         	movff	?_scale+3,_sprintf$4229+3
  7607                           
  7608                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7609  011146  C144  F083         	movff	sprintf@fval,___flmul@a
  7610  01114A  C145  F084         	movff	sprintf@fval+1,___flmul@a+1
  7611  01114E  C146  F085         	movff	sprintf@fval+2,___flmul@a+2
  7612  011152  C147  F086         	movff	sprintf@fval+3,___flmul@a+3
  7613  011156  C130  F07F         	movff	_sprintf$4229,___flmul@b
  7614  01115A  C131  F080         	movff	_sprintf$4229+1,___flmul@b+1
  7615  01115E  C132  F081         	movff	_sprintf$4229+2,___flmul@b+2
  7616  011162  C133  F082         	movff	_sprintf$4229+3,___flmul@b+3
  7617  011166  ECDF  F09B         	call	___flmul	;wreg free
  7618  01116A  C07F  F0B9         	movff	?___flmul,___fltol@f1
  7619  01116E  C080  F0BA         	movff	?___flmul+1,___fltol@f1+1
  7620  011172  C081  F0BB         	movff	?___flmul+2,___fltol@f1+2
  7621  011176  C082  F0BC         	movff	?___flmul+3,___fltol@f1+3
  7622  01117A  ECDE  F0AA         	call	___fltol	;wreg free
  7623  01117E  C0B9  F138         	movff	?___fltol,sprintf@val
  7624  011182  C0BA  F139         	movff	?___fltol+1,sprintf@val+1
  7625  011186  C0BB  F13A         	movff	?___fltol+2,sprintf@val+2
  7626  01118A  C0BC  F13B         	movff	?___fltol+3,sprintf@val+3
  7627                           
  7628                           ;doprnt.c: 1228: while(c--) {
  7629  01118E  D07A               	goto	l8788
  7630  011190                     l8778:
  7631                           
  7632                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7633  011190  C138  F071         	movff	sprintf@val,___lldiv@dividend
  7634  011194  C139  F072         	movff	sprintf@val+1,___lldiv@dividend+1
  7635  011198  C13A  F073         	movff	sprintf@val+2,___lldiv@dividend+2
  7636  01119C  C13B  F074         	movff	sprintf@val+3,___lldiv@dividend+3
  7637  0111A0  0101               	movlb	1	; () banked
  7638  0111A2  5148               	movf	sprintf@c& (0+255),w,b
  7639  0111A4  0D04               	mullw	4
  7640  0111A6  0EDD               	movlw	low _dpowers
  7641  0111A8  24F3               	addwf	prodl,w,c
  7642  0111AA  6EF6               	movwf	tblptrl,c
  7643  0111AC  0EFE               	movlw	high _dpowers
  7644  0111AE  20F4               	addwfc	prodh,w,c
  7645  0111B0  6EF7               	movwf	tblptrh,c
  7646  0111B2                     	if	1	;There are 3 active tblptr bytes
  7647  0111B2  6AF8               	clrf	tblptru,c
  7648  0111B4  0E00               	movlw	low (__mediumconst shr (0+16))
  7649  0111B6  22F8               	addwfc	tblptru,f,c
  7650  0111B8                     	endif
  7651  0111B8  0009               	tblrd		*+
  7652  0111BA  CFF5 F075          	movff	tablat,___lldiv@divisor
  7653  0111BE  0009               	tblrd		*+
  7654  0111C0  CFF5 F076          	movff	tablat,___lldiv@divisor+1
  7655  0111C4  0009               	tblrd		*+
  7656  0111C6  CFF5 F077          	movff	tablat,___lldiv@divisor+2
  7657  0111CA  000A               	tblrd		*-
  7658  0111CC  CFF5 F078          	movff	tablat,___lldiv@divisor+3
  7659  0111D0  EC98  F0AC         	call	___lldiv	;wreg free
  7660  0111D4  C071  F13E         	movff	?___lldiv,sprintf@tmpval
  7661  0111D8  C072  F13F         	movff	?___lldiv+1,sprintf@tmpval+1
  7662  0111DC  C073  F140         	movff	?___lldiv+2,sprintf@tmpval+2
  7663  0111E0  C074  F141         	movff	?___lldiv+3,sprintf@tmpval+3
  7664                           
  7665                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7666  0111E4  C13E  F071         	movff	sprintf@tmpval,___llmod@dividend
  7667  0111E8  C13F  F072         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7668  0111EC  C140  F073         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7669  0111F0  C141  F074         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7670  0111F4  0E0A               	movlw	10
  7671  0111F6  0100               	movlb	0	; () banked
  7672  0111F8  6F75               	movwf	___llmod@divisor& (0+255),b
  7673  0111FA  0E00               	movlw	0
  7674  0111FC  6F76               	movwf	(___llmod@divisor+1)& (0+255),b
  7675  0111FE  0E00               	movlw	0
  7676  011200  6F77               	movwf	(___llmod@divisor+2)& (0+255),b
  7677  011202  0E00               	movlw	0
  7678  011204  6F78               	movwf	(___llmod@divisor+3)& (0+255),b
  7679  011206  EC4D  F0AE         	call	___llmod	;wreg free
  7680  01120A  C071  F13E         	movff	?___llmod,sprintf@tmpval
  7681  01120E  C072  F13F         	movff	?___llmod+1,sprintf@tmpval+1
  7682  011212  C073  F140         	movff	?___llmod+2,sprintf@tmpval+2
  7683  011216  C074  F141         	movff	?___llmod+3,sprintf@tmpval+3
  7684                           
  7685                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7686  01121A  0101               	movlb	1	; () banked
  7687  01121C  513E               	movf	sprintf@tmpval& (0+255),w,b
  7688  01121E  0F30               	addlw	48
  7689  011220  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  7690  011224  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  7691  011228  6EDF               	movwf	indf2,c
  7692                           
  7693                           ; BSR set to: 1
  7694  01122A  0100               	movlb	0	; () banked
  7695  01122C  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  7696  01122E  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  7697                           
  7698                           ; BSR set to: 0
  7699                           ;doprnt.c: 1232: val %= dpowers[c];
  7700  011230  C138  F071         	movff	sprintf@val,___llmod@dividend
  7701  011234  C139  F072         	movff	sprintf@val+1,___llmod@dividend+1
  7702  011238  C13A  F073         	movff	sprintf@val+2,___llmod@dividend+2
  7703  01123C  C13B  F074         	movff	sprintf@val+3,___llmod@dividend+3
  7704  011240  0101               	movlb	1	; () banked
  7705  011242  5148               	movf	sprintf@c& (0+255),w,b
  7706  011244  0D04               	mullw	4
  7707  011246  0EDD               	movlw	low _dpowers
  7708  011248  24F3               	addwf	prodl,w,c
  7709  01124A  6EF6               	movwf	tblptrl,c
  7710  01124C  0EFE               	movlw	high _dpowers
  7711  01124E  20F4               	addwfc	prodh,w,c
  7712  011250  6EF7               	movwf	tblptrh,c
  7713  011252                     	if	1	;There are 3 active tblptr bytes
  7714  011252  6AF8               	clrf	tblptru,c
  7715  011254  0E00               	movlw	low (__mediumconst shr (0+16))
  7716  011256  22F8               	addwfc	tblptru,f,c
  7717  011258                     	endif
  7718  011258  0009               	tblrd		*+
  7719  01125A  CFF5 F075          	movff	tablat,___llmod@divisor
  7720  01125E  0009               	tblrd		*+
  7721  011260  CFF5 F076          	movff	tablat,___llmod@divisor+1
  7722  011264  0009               	tblrd		*+
  7723  011266  CFF5 F077          	movff	tablat,___llmod@divisor+2
  7724  01126A  000A               	tblrd		*-
  7725  01126C  CFF5 F078          	movff	tablat,___llmod@divisor+3
  7726  011270  EC4D  F0AE         	call	___llmod	;wreg free
  7727  011274  C071  F138         	movff	?___llmod,sprintf@val
  7728  011278  C072  F139         	movff	?___llmod+1,sprintf@val+1
  7729  01127C  C073  F13A         	movff	?___llmod+2,sprintf@val+2
  7730  011280  C074  F13B         	movff	?___llmod+3,sprintf@val+3
  7731  011284                     l8788:
  7732  011284  0101               	movlb	1	; () banked
  7733  011286  0748               	decf	sprintf@c& (0+255),f,b
  7734  011288  0101               	movlb	1	; () banked
  7735  01128A  2948               	incf	sprintf@c& (0+255),w,b
  7736  01128C  B4D8               	btfsc	status,2,c
  7737  01128E  D00E               	goto	l8796
  7738  011290  D77F               	goto	l8778
  7739  011292                     l8790:
  7740                           
  7741                           ; BSR set to: 1
  7742                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7743  011292  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  7744  011296  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  7745  01129A  0E30               	movlw	48
  7746  01129C  6EDF               	movwf	indf2,c
  7747                           
  7748                           ; BSR set to: 1
  7749  01129E  0100               	movlb	0	; () banked
  7750  0112A0  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  7751  0112A2  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  7752                           
  7753                           ; BSR set to: 0
  7754                           ;doprnt.c: 1237: prec--;
  7755  0112A4  0101               	movlb	1	; () banked
  7756  0112A6  0742               	decf	sprintf@prec& (0+255),f,b
  7757  0112A8  A0D8               	btfss	status,0,c
  7758  0112AA  0743               	decf	(sprintf@prec+1)& (0+255),f,b
  7759  0112AC                     l8796:
  7760                           
  7761                           ; BSR set to: 1
  7762  0112AC  0101               	movlb	1	; () banked
  7763  0112AE  5142               	movf	sprintf@prec& (0+255),w,b
  7764  0112B0  0101               	movlb	1	; () banked
  7765  0112B2  1143               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7766  0112B4  B4D8               	btfsc	status,2,c
  7767  0112B6  D059               	goto	l8818
  7768  0112B8  D7EC               	goto	l8790
  7769  0112BA                     l8798:
  7770                           
  7771                           ; BSR set to: 1
  7772                           ;doprnt.c: 1246: }
  7773                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7774  0112BA  0101               	movlb	1	; () banked
  7775  0112BC  5142               	movf	sprintf@prec& (0+255),w,b
  7776  0112BE  0101               	movlb	1	; () banked
  7777  0112C0  1143               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7778  0112C2  A4D8               	btfss	status,2,c
  7779  0112C4  D00D               	goto	l8804
  7780                           
  7781                           ; BSR set to: 1
  7782  0112C6  0101               	movlb	1	; () banked
  7783  0112C8  5138               	movf	sprintf@val& (0+255),w,b
  7784  0112CA  0101               	movlb	1	; () banked
  7785  0112CC  1139               	iorwf	(sprintf@val+1)& (0+255),w,b
  7786  0112CE  0101               	movlb	1	; () banked
  7787  0112D0  113A               	iorwf	(sprintf@val+2)& (0+255),w,b
  7788  0112D2  0101               	movlb	1	; () banked
  7789  0112D4  113B               	iorwf	(sprintf@val+3)& (0+255),w,b
  7790  0112D6  A4D8               	btfss	status,2,c
  7791  0112D8  D003               	goto	l8804
  7792                           
  7793                           ; BSR set to: 1
  7794                           ;doprnt.c: 1291: prec++;
  7795  0112DA  0101               	movlb	1	; () banked
  7796  0112DC  4B42               	infsnz	sprintf@prec& (0+255),f,b
  7797  0112DE  2B43               	incf	(sprintf@prec+1)& (0+255),f,b
  7798  0112E0                     l8804:
  7799                           
  7800                           ; BSR set to: 1
  7801                           ;doprnt.c: 1339: if(c < prec)
  7802  0112E0  0E80               	movlw	128
  7803  0112E2  0101               	movlb	1	; () banked
  7804  0112E4  BF48               	btfsc	sprintf@c& (0+255),7,b
  7805  0112E6  0E7F               	movlw	127
  7806  0112E8  0100               	movlb	0	; () banked
  7807  0112EA  6FCB               	movwf	??_sprintf& (0+255),b
  7808  0112EC  0101               	movlb	1	; () banked
  7809  0112EE  5142               	movf	sprintf@prec& (0+255),w,b
  7810  0112F0  0101               	movlb	1	; () banked
  7811  0112F2  5D48               	subwf	sprintf@c& (0+255),w,b
  7812  0112F4  0101               	movlb	1	; () banked
  7813  0112F6  5143               	movf	(sprintf@prec+1)& (0+255),w,b
  7814  0112F8  0A80               	xorlw	128
  7815  0112FA  0100               	movlb	0	; () banked
  7816  0112FC  59CB               	subwfb	??_sprintf& (0+255),w,b
  7817  0112FE  B0D8               	btfsc	status,0,c
  7818  011300  D003               	goto	l8808
  7819                           
  7820                           ; BSR set to: 0
  7821                           ;doprnt.c: 1340: c = prec;
  7822  011302  C142  F148         	movff	sprintf@prec,sprintf@c
  7823  011306  D018               	goto	l8812
  7824  011308                     l8808:
  7825                           
  7826                           ; BSR set to: 0
  7827                           ;doprnt.c: 1341: else if(prec < c)
  7828  011308  0101               	movlb	1	; () banked
  7829  01130A  5143               	movf	(sprintf@prec+1)& (0+255),w,b
  7830  01130C  0A80               	xorlw	128
  7831  01130E  0100               	movlb	0	; () banked
  7832  011310  6FCB               	movwf	??_sprintf& (0+255),b
  7833  011312  0101               	movlb	1	; () banked
  7834  011314  5148               	movf	sprintf@c& (0+255),w,b
  7835  011316  0101               	movlb	1	; () banked
  7836  011318  5D42               	subwf	sprintf@prec& (0+255),w,b
  7837  01131A  0E80               	movlw	128
  7838  01131C  0101               	movlb	1	; () banked
  7839  01131E  BF48               	btfsc	sprintf@c& (0+255),7,b
  7840  011320  0E7F               	movlw	127
  7841  011322  0100               	movlb	0	; () banked
  7842  011324  59CB               	subwfb	??_sprintf& (0+255),w,b
  7843  011326  B0D8               	btfsc	status,0,c
  7844  011328  D007               	goto	l8812
  7845                           
  7846                           ; BSR set to: 0
  7847                           ;doprnt.c: 1342: prec = c;
  7848  01132A  0101               	movlb	1	; () banked
  7849  01132C  5148               	movf	sprintf@c& (0+255),w,b
  7850  01132E  0101               	movlb	1	; () banked
  7851  011330  6F42               	movwf	sprintf@prec& (0+255),b
  7852  011332  6B43               	clrf	(sprintf@prec+1)& (0+255),b
  7853  011334  BF42               	btfsc	sprintf@prec& (0+255),7,b
  7854  011336  0743               	decf	(sprintf@prec+1)& (0+255),f,b
  7855  011338                     l8812:
  7856                           
  7857                           ;doprnt.c: 1422: {
  7858                           ;doprnt.c: 1438: if(flag & 0x03)
  7859  011338  0E03               	movlw	3
  7860  01133A  0101               	movlb	1	; () banked
  7861  01133C  1536               	andwf	sprintf@flag& (0+255),w,b
  7862  01133E  0100               	movlb	0	; () banked
  7863  011340  6FCB               	movwf	??_sprintf& (0+255),b
  7864  011342  0E00               	movlw	0
  7865  011344  0101               	movlb	1	; () banked
  7866  011346  1537               	andwf	(sprintf@flag+1)& (0+255),w,b
  7867  011348  0100               	movlb	0	; () banked
  7868  01134A  6FCC               	movwf	(??_sprintf+1)& (0+255),b
  7869  01134C  0100               	movlb	0	; () banked
  7870  01134E  51CB               	movf	??_sprintf& (0+255),w,b
  7871  011350  0100               	movlb	0	; () banked
  7872  011352  11CC               	iorwf	(??_sprintf+1)& (0+255),w,b
  7873  011354  B4D8               	btfsc	status,2,c
  7874  011356  D009               	goto	l8818
  7875                           
  7876                           ; BSR set to: 0
  7877                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7878  011358  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  7879  01135C  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  7880  011360  0E2D               	movlw	45
  7881  011362  6EDF               	movwf	indf2,c
  7882  011364                     l8816:
  7883                           
  7884                           ; BSR set to: 0
  7885  011364  0100               	movlb	0	; () banked
  7886  011366  4BC3               	infsnz	sprintf@sp& (0+255),f,b
  7887  011368  2BC4               	incf	(sprintf@sp+1)& (0+255),f,b
  7888  01136A                     l8818:
  7889  01136A  C0C5  FFF6         	movff	sprintf@f,tblptrl
  7890  01136E  C0C6  FFF7         	movff	sprintf@f+1,tblptrh
  7891  011372  0100               	movlb	0	; () banked
  7892  011374  4BC5               	infsnz	sprintf@f& (0+255),f,b
  7893  011376  2BC6               	incf	(sprintf@f+1)& (0+255),f,b
  7894  011378                     	if	0	;tblptru may be non-zero
  7895  011378                     	endif
  7896  011378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7897  011378  0E00               	movlw	low (__mediumconst shr (0+16))
  7898  01137A  6EF8               	movwf	tblptru,c
  7899  01137C                     	endif
  7900  01137C  0008               	tblrd		*
  7901  01137E  CFF5 F148          	movff	tablat,sprintf@c
  7902  011382  0101               	movlb	1	; () banked
  7903  011384  5148               	movf	sprintf@c& (0+255),w,b
  7904  011386  A4D8               	btfss	status,2,c
  7905  011388  EF8B  F085         	goto	l8620
  7906  01138C                     l8820:
  7907                           
  7908                           ; BSR set to: 1
  7909                           ;doprnt.c: 1538: *sp = 0;
  7910  01138C  C0C3  FFD9         	movff	sprintf@sp,fsr2l
  7911  011390  C0C4  FFDA         	movff	sprintf@sp+1,fsr2h
  7912  011394  0E00               	movlw	0
  7913  011396  6EDF               	movwf	indf2,c
  7914  011398  0012               	return	
  7915  01139A                     __end_of_sprintf:
  7916                           	opt stack 0
  7917                           tblptru	equ	0xFF8
  7918                           tblptrh	equ	0xFF7
  7919                           tblptrl	equ	0xFF6
  7920                           tablat	equ	0xFF5
  7921                           prodh	equ	0xFF4
  7922                           prodl	equ	0xFF3
  7923                           intcon	equ	0xFF2
  7924                           postinc0	equ	0xFEE
  7925                           wreg	equ	0xFE8
  7926                           indf2	equ	0xFDF
  7927                           postinc2	equ	0xFDE
  7928                           fsr2h	equ	0xFDA
  7929                           fsr2l	equ	0xFD9
  7930                           status	equ	0xFD8
  7931                           
  7932 ;; *************** function _scale *****************
  7933 ;; Defined at:
  7934 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;  scl             1    wreg     char 
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;  scl             1   64[BANK0 ] char 
  7939 ;; Return value:  Size  Location     Type
  7940 ;;                  4   56[BANK0 ] char 
  7941 ;; Registers used:
  7942 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/0
  7945 ;;		On exit  : 0/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7948 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7949 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7951 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7952 ;;Total ram usage:        9 bytes
  7953 ;; Hardware stack levels used:    1
  7954 ;; Hardware stack levels required when called:    4
  7955 ;; This function calls:
  7956 ;;		___awdiv
  7957 ;;		___awmod
  7958 ;;		___flmul
  7959 ;; This function is called by:
  7960 ;;		_sprintf
  7961 ;; This function uses a non-reentrant model
  7962 ;;
  7963                           
  7964                           	psect	text10
  7965  0128F0                     __ptext10:
  7966                           	opt stack 0
  7967  0128F0                     _scale:
  7968                           	opt stack 24
  7969                           
  7970                           ; BSR set to: 1
  7971                           ;incstack = 0
  7972                           ;scale@scl stored from wreg
  7973  0128F0  0100               	movlb	0	; () banked
  7974  0128F2  6FA0               	movwf	scale@scl& (0+255),b
  7975                           
  7976                           ;doprnt.c: 428: if(scl < 0) {
  7977  0128F4  0100               	movlb	0	; () banked
  7978  0128F6  AFA0               	btfss	scale@scl& (0+255),7,b
  7979  0128F8  D145               	goto	l8228
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;doprnt.c: 429: scl = -scl;
  7983  0128FA  0100               	movlb	0	; () banked
  7984  0128FC  6DA0               	negf	scale@scl& (0+255),b
  7985                           
  7986                           ;doprnt.c: 430: if(scl>=110)
  7987  0128FE  0100               	movlb	0	; () banked
  7988  012900  51A0               	movf	scale@scl& (0+255),w,b
  7989  012902  0A80               	xorlw	128
  7990  012904  0F12               	addlw	-238
  7991  012906  A0D8               	btfss	status,0,c
  7992  012908  D0BB               	goto	l8218
  7993                           
  7994                           ; BSR set to: 0
  7995                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7996  01290A  0E00               	movlw	0
  7997  01290C  0100               	movlb	0	; () banked
  7998  01290E  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  7999  012910  0E0A               	movlw	10
  8000  012912  6F79               	movwf	___awdiv@divisor& (0+255),b
  8001  012914  0E00               	movlw	0
  8002  012916  0100               	movlb	0	; () banked
  8003  012918  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8004  01291A  0E64               	movlw	100
  8005  01291C  6F73               	movwf	___awmod@divisor& (0+255),b
  8006  01291E  0100               	movlb	0	; () banked
  8007  012920  51A0               	movf	scale@scl& (0+255),w,b
  8008  012922  0100               	movlb	0	; () banked
  8009  012924  6F71               	movwf	___awmod@dividend& (0+255),b
  8010  012926  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8011  012928  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8012  01292A  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8013  01292C  ECFC  F0AD         	call	___awmod	;wreg free
  8014  012930  C071  F077         	movff	?___awmod,___awdiv@dividend
  8015  012934  C072  F078         	movff	?___awmod+1,___awdiv@dividend+1
  8016  012938  ECDA  F0AB         	call	___awdiv	;wreg free
  8017  01293C  0100               	movlb	0	; () banked
  8018  01293E  90D8               	bcf	status,0,c
  8019  012940  3777               	rlcf	?___awdiv& (0+255),f,b
  8020  012942  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8021  012944  0100               	movlb	0	; () banked
  8022  012946  90D8               	bcf	status,0,c
  8023  012948  3777               	rlcf	?___awdiv& (0+255),f,b
  8024  01294A  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8025  01294C  0E24               	movlw	36
  8026  01294E  0100               	movlb	0	; () banked
  8027  012950  2777               	addwf	?___awdiv& (0+255),f,b
  8028  012952  0E00               	movlw	0
  8029  012954  0100               	movlb	0	; () banked
  8030  012956  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8031  012958  0E75               	movlw	low __npowers_
  8032  01295A  0100               	movlb	0	; () banked
  8033  01295C  2577               	addwf	?___awdiv& (0+255),w,b
  8034  01295E  6EF6               	movwf	tblptrl,c
  8035  012960  0EFE               	movlw	high __npowers_
  8036  012962  0100               	movlb	0	; () banked
  8037  012964  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8038  012966  6EF7               	movwf	tblptrh,c
  8039  012968                     	if	1	;There are 3 active tblptr bytes
  8040  012968  6AF8               	clrf	tblptru,c
  8041  01296A  0E00               	movlw	low (__mediumconst shr (0+16))
  8042  01296C  22F8               	addwfc	tblptru,f,c
  8043  01296E                     	endif
  8044  01296E  0009               	tblrd		*+
  8045  012970  CFF5 F083          	movff	tablat,___flmul@a
  8046  012974  0009               	tblrd		*+
  8047  012976  CFF5 F084          	movff	tablat,___flmul@a+1
  8048  01297A  0009               	tblrd		*+
  8049  01297C  CFF5 F085          	movff	tablat,___flmul@a+2
  8050  012980  000A               	tblrd		*-
  8051  012982  CFF5 F086          	movff	tablat,___flmul@a+3
  8052  012986  0E00               	movlw	0
  8053  012988  0100               	movlb	0	; () banked
  8054  01298A  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8055  01298C  0E64               	movlw	100
  8056  01298E  6F79               	movwf	___awdiv@divisor& (0+255),b
  8057  012990  0100               	movlb	0	; () banked
  8058  012992  51A0               	movf	scale@scl& (0+255),w,b
  8059  012994  0100               	movlb	0	; () banked
  8060  012996  6F77               	movwf	___awdiv@dividend& (0+255),b
  8061  012998  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  8062  01299A  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  8063  01299C  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8064  01299E  ECDA  F0AB         	call	___awdiv	;wreg free
  8065  0129A2  0100               	movlb	0	; () banked
  8066  0129A4  90D8               	bcf	status,0,c
  8067  0129A6  3777               	rlcf	?___awdiv& (0+255),f,b
  8068  0129A8  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8069  0129AA  0100               	movlb	0	; () banked
  8070  0129AC  90D8               	bcf	status,0,c
  8071  0129AE  3777               	rlcf	?___awdiv& (0+255),f,b
  8072  0129B0  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8073  0129B2  0E48               	movlw	72
  8074  0129B4  0100               	movlb	0	; () banked
  8075  0129B6  2777               	addwf	?___awdiv& (0+255),f,b
  8076  0129B8  0E00               	movlw	0
  8077  0129BA  0100               	movlb	0	; () banked
  8078  0129BC  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8079  0129BE  0E75               	movlw	low __npowers_
  8080  0129C0  0100               	movlb	0	; () banked
  8081  0129C2  2577               	addwf	?___awdiv& (0+255),w,b
  8082  0129C4  6EF6               	movwf	tblptrl,c
  8083  0129C6  0EFE               	movlw	high __npowers_
  8084  0129C8  0100               	movlb	0	; () banked
  8085  0129CA  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8086  0129CC  6EF7               	movwf	tblptrh,c
  8087  0129CE                     	if	1	;There are 3 active tblptr bytes
  8088  0129CE  6AF8               	clrf	tblptru,c
  8089  0129D0  0E00               	movlw	low (__mediumconst shr (0+16))
  8090  0129D2  22F8               	addwfc	tblptru,f,c
  8091  0129D4                     	endif
  8092  0129D4  0009               	tblrd		*+
  8093  0129D6  CFF5 F07F          	movff	tablat,___flmul@b
  8094  0129DA  0009               	tblrd		*+
  8095  0129DC  CFF5 F080          	movff	tablat,___flmul@b+1
  8096  0129E0  0009               	tblrd		*+
  8097  0129E2  CFF5 F081          	movff	tablat,___flmul@b+2
  8098  0129E6  000A               	tblrd		*-
  8099  0129E8  CFF5 F082          	movff	tablat,___flmul@b+3
  8100  0129EC  ECDF  F09B         	call	___flmul	;wreg free
  8101  0129F0  C07F  F09C         	movff	?___flmul,_scale$4228
  8102  0129F4  C080  F09D         	movff	?___flmul+1,_scale$4228+1
  8103  0129F8  C081  F09E         	movff	?___flmul+2,_scale$4228+2
  8104  0129FC  C082  F09F         	movff	?___flmul+3,_scale$4228+3
  8105                           
  8106                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8107  012A00  C09C  F07F         	movff	_scale$4228,___flmul@b
  8108  012A04  C09D  F080         	movff	_scale$4228+1,___flmul@b+1
  8109  012A08  C09E  F081         	movff	_scale$4228+2,___flmul@b+2
  8110  012A0C  C09F  F082         	movff	_scale$4228+3,___flmul@b+3
  8111  012A10  0E00               	movlw	0
  8112  012A12  0100               	movlb	0	; () banked
  8113  012A14  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8114  012A16  0E0A               	movlw	10
  8115  012A18  6F73               	movwf	___awmod@divisor& (0+255),b
  8116  012A1A  0100               	movlb	0	; () banked
  8117  012A1C  51A0               	movf	scale@scl& (0+255),w,b
  8118  012A1E  0100               	movlb	0	; () banked
  8119  012A20  6F71               	movwf	___awmod@dividend& (0+255),b
  8120  012A22  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8121  012A24  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8122  012A26  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8123  012A28  ECFC  F0AD         	call	___awmod	;wreg free
  8124  012A2C  0100               	movlb	0	; () banked
  8125  012A2E  90D8               	bcf	status,0,c
  8126  012A30  3771               	rlcf	?___awmod& (0+255),f,b
  8127  012A32  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8128  012A34  0100               	movlb	0	; () banked
  8129  012A36  90D8               	bcf	status,0,c
  8130  012A38  3771               	rlcf	?___awmod& (0+255),f,b
  8131  012A3A  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8132  012A3C  0E75               	movlw	low __npowers_
  8133  012A3E  0100               	movlb	0	; () banked
  8134  012A40  2571               	addwf	?___awmod& (0+255),w,b
  8135  012A42  6EF6               	movwf	tblptrl,c
  8136  012A44  0EFE               	movlw	high __npowers_
  8137  012A46  0100               	movlb	0	; () banked
  8138  012A48  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  8139  012A4A  6EF7               	movwf	tblptrh,c
  8140  012A4C                     	if	1	;There are 3 active tblptr bytes
  8141  012A4C  6AF8               	clrf	tblptru,c
  8142  012A4E  0E00               	movlw	low (__mediumconst shr (0+16))
  8143  012A50  22F8               	addwfc	tblptru,f,c
  8144  012A52                     	endif
  8145  012A52  0009               	tblrd		*+
  8146  012A54  CFF5 F083          	movff	tablat,___flmul@a
  8147  012A58  0009               	tblrd		*+
  8148  012A5A  CFF5 F084          	movff	tablat,___flmul@a+1
  8149  012A5E  0009               	tblrd		*+
  8150  012A60  CFF5 F085          	movff	tablat,___flmul@a+2
  8151  012A64  000A               	tblrd		*-
  8152  012A66  CFF5 F086          	movff	tablat,___flmul@a+3
  8153  012A6A  ECDF  F09B         	call	___flmul	;wreg free
  8154  012A6E  C07F  F098         	movff	?___flmul,?_scale
  8155  012A72  C080  F099         	movff	?___flmul+1,?_scale+1
  8156  012A76  C081  F09A         	movff	?___flmul+2,?_scale+2
  8157  012A7A  C082  F09B         	movff	?___flmul+3,?_scale+3
  8158  012A7E  0012               	return	
  8159  012A80                     l8218:
  8160                           
  8161                           ;doprnt.c: 432: else if(scl > 10)
  8162  012A80  0100               	movlb	0	; () banked
  8163  012A82  51A0               	movf	scale@scl& (0+255),w,b
  8164  012A84  0A80               	xorlw	128
  8165  012A86  0F75               	addlw	-139
  8166  012A88  A0D8               	btfss	status,0,c
  8167  012A8A  D063               	goto	l8224
  8168                           
  8169                           ; BSR set to: 0
  8170                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8171  012A8C  0E00               	movlw	0
  8172  012A8E  0100               	movlb	0	; () banked
  8173  012A90  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8174  012A92  0E0A               	movlw	10
  8175  012A94  6F79               	movwf	___awdiv@divisor& (0+255),b
  8176  012A96  0100               	movlb	0	; () banked
  8177  012A98  51A0               	movf	scale@scl& (0+255),w,b
  8178  012A9A  0100               	movlb	0	; () banked
  8179  012A9C  6F77               	movwf	___awdiv@dividend& (0+255),b
  8180  012A9E  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  8181  012AA0  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  8182  012AA2  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8183  012AA4  ECDA  F0AB         	call	___awdiv	;wreg free
  8184  012AA8  0100               	movlb	0	; () banked
  8185  012AAA  90D8               	bcf	status,0,c
  8186  012AAC  3777               	rlcf	?___awdiv& (0+255),f,b
  8187  012AAE  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8188  012AB0  0100               	movlb	0	; () banked
  8189  012AB2  90D8               	bcf	status,0,c
  8190  012AB4  3777               	rlcf	?___awdiv& (0+255),f,b
  8191  012AB6  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8192  012AB8  0E24               	movlw	36
  8193  012ABA  0100               	movlb	0	; () banked
  8194  012ABC  2777               	addwf	?___awdiv& (0+255),f,b
  8195  012ABE  0E00               	movlw	0
  8196  012AC0  0100               	movlb	0	; () banked
  8197  012AC2  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8198  012AC4  0E75               	movlw	low __npowers_
  8199  012AC6  0100               	movlb	0	; () banked
  8200  012AC8  2577               	addwf	?___awdiv& (0+255),w,b
  8201  012ACA  6EF6               	movwf	tblptrl,c
  8202  012ACC  0EFE               	movlw	high __npowers_
  8203  012ACE  0100               	movlb	0	; () banked
  8204  012AD0  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8205  012AD2  6EF7               	movwf	tblptrh,c
  8206  012AD4                     	if	1	;There are 3 active tblptr bytes
  8207  012AD4  6AF8               	clrf	tblptru,c
  8208  012AD6  0E00               	movlw	low (__mediumconst shr (0+16))
  8209  012AD8  22F8               	addwfc	tblptru,f,c
  8210  012ADA                     	endif
  8211  012ADA  0009               	tblrd		*+
  8212  012ADC  CFF5 F07F          	movff	tablat,___flmul@b
  8213  012AE0  0009               	tblrd		*+
  8214  012AE2  CFF5 F080          	movff	tablat,___flmul@b+1
  8215  012AE6  0009               	tblrd		*+
  8216  012AE8  CFF5 F081          	movff	tablat,___flmul@b+2
  8217  012AEC  000A               	tblrd		*-
  8218  012AEE  CFF5 F082          	movff	tablat,___flmul@b+3
  8219  012AF2  0E00               	movlw	0
  8220  012AF4  0100               	movlb	0	; () banked
  8221  012AF6  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8222  012AF8  0E0A               	movlw	10
  8223  012AFA  6F73               	movwf	___awmod@divisor& (0+255),b
  8224  012AFC  0100               	movlb	0	; () banked
  8225  012AFE  51A0               	movf	scale@scl& (0+255),w,b
  8226  012B00  0100               	movlb	0	; () banked
  8227  012B02  6F71               	movwf	___awmod@dividend& (0+255),b
  8228  012B04  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8229  012B06  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8230  012B08  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8231  012B0A  ECFC  F0AD         	call	___awmod	;wreg free
  8232  012B0E  0100               	movlb	0	; () banked
  8233  012B10  90D8               	bcf	status,0,c
  8234  012B12  3771               	rlcf	?___awmod& (0+255),f,b
  8235  012B14  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8236  012B16  0100               	movlb	0	; () banked
  8237  012B18  90D8               	bcf	status,0,c
  8238  012B1A  3771               	rlcf	?___awmod& (0+255),f,b
  8239  012B1C  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8240  012B1E  0E75               	movlw	low __npowers_
  8241  012B20  0100               	movlb	0	; () banked
  8242  012B22  2571               	addwf	?___awmod& (0+255),w,b
  8243  012B24  6EF6               	movwf	tblptrl,c
  8244  012B26  0EFE               	movlw	high __npowers_
  8245  012B28  0100               	movlb	0	; () banked
  8246  012B2A  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  8247  012B2C  6EF7               	movwf	tblptrh,c
  8248  012B2E                     	if	1	;There are 3 active tblptr bytes
  8249  012B2E  6AF8               	clrf	tblptru,c
  8250  012B30  0E00               	movlw	low (__mediumconst shr (0+16))
  8251  012B32  22F8               	addwfc	tblptru,f,c
  8252  012B34                     	endif
  8253  012B34  0009               	tblrd		*+
  8254  012B36  CFF5 F083          	movff	tablat,___flmul@a
  8255  012B3A  0009               	tblrd		*+
  8256  012B3C  CFF5 F084          	movff	tablat,___flmul@a+1
  8257  012B40  0009               	tblrd		*+
  8258  012B42  CFF5 F085          	movff	tablat,___flmul@a+2
  8259  012B46  000A               	tblrd		*-
  8260  012B48  CFF5 F086          	movff	tablat,___flmul@a+3
  8261  012B4C  ECDF  F09B         	call	___flmul	;wreg free
  8262  012B50  D78E               	goto	L7
  8263  012B52                     l8224:
  8264                           
  8265                           ;doprnt.c: 434: return _npowers_[scl];
  8266  012B52  0100               	movlb	0	; () banked
  8267  012B54  51A0               	movf	scale@scl& (0+255),w,b
  8268  012B56  0D04               	mullw	4
  8269  012B58  0E75               	movlw	low __npowers_
  8270  012B5A  24F3               	addwf	prodl,w,c
  8271  012B5C  6EF6               	movwf	tblptrl,c
  8272  012B5E  0EFE               	movlw	high __npowers_
  8273  012B60  20F4               	addwfc	prodh,w,c
  8274  012B62  6EF7               	movwf	tblptrh,c
  8275  012B64                     	if	1	;There are 3 active tblptr bytes
  8276  012B64  6AF8               	clrf	tblptru,c
  8277  012B66  0E00               	movlw	low (__mediumconst shr (0+16))
  8278  012B68  22F8               	addwfc	tblptru,f,c
  8279  012B6A                     	endif
  8280  012B6A  0009               	tblrd		*+
  8281  012B6C  CFF5 F098          	movff	tablat,?_scale
  8282  012B70  0009               	tblrd		*+
  8283  012B72  CFF5 F099          	movff	tablat,?_scale+1
  8284  012B76  0009               	tblrd		*+
  8285  012B78  CFF5 F09A          	movff	tablat,?_scale+2
  8286  012B7C  000A               	tblrd		*-
  8287  012B7E  CFF5 F09B          	movff	tablat,?_scale+3
  8288                           
  8289                           ; BSR set to: 0
  8290  012B82  0012               	return	
  8291  012B84                     l8228:
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;doprnt.c: 435: }
  8295                           ;doprnt.c: 436: if(scl>=110)
  8296  012B84  0100               	movlb	0	; () banked
  8297  012B86  51A0               	movf	scale@scl& (0+255),w,b
  8298  012B88  0A80               	xorlw	128
  8299  012B8A  0F12               	addlw	-238
  8300  012B8C  A0D8               	btfss	status,0,c
  8301  012B8E  D0BB               	goto	l8236
  8302                           
  8303                           ; BSR set to: 0
  8304                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8305  012B90  0E00               	movlw	0
  8306  012B92  0100               	movlb	0	; () banked
  8307  012B94  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8308  012B96  0E0A               	movlw	10
  8309  012B98  6F79               	movwf	___awdiv@divisor& (0+255),b
  8310  012B9A  0E00               	movlw	0
  8311  012B9C  0100               	movlb	0	; () banked
  8312  012B9E  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8313  012BA0  0E64               	movlw	100
  8314  012BA2  6F73               	movwf	___awmod@divisor& (0+255),b
  8315  012BA4  0100               	movlb	0	; () banked
  8316  012BA6  51A0               	movf	scale@scl& (0+255),w,b
  8317  012BA8  0100               	movlb	0	; () banked
  8318  012BAA  6F71               	movwf	___awmod@dividend& (0+255),b
  8319  012BAC  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8320  012BAE  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8321  012BB0  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8322  012BB2  ECFC  F0AD         	call	___awmod	;wreg free
  8323  012BB6  C071  F077         	movff	?___awmod,___awdiv@dividend
  8324  012BBA  C072  F078         	movff	?___awmod+1,___awdiv@dividend+1
  8325  012BBE  ECDA  F0AB         	call	___awdiv	;wreg free
  8326  012BC2  0100               	movlb	0	; () banked
  8327  012BC4  90D8               	bcf	status,0,c
  8328  012BC6  3777               	rlcf	?___awdiv& (0+255),f,b
  8329  012BC8  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8330  012BCA  0100               	movlb	0	; () banked
  8331  012BCC  90D8               	bcf	status,0,c
  8332  012BCE  3777               	rlcf	?___awdiv& (0+255),f,b
  8333  012BD0  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8334  012BD2  0E24               	movlw	36
  8335  012BD4  0100               	movlb	0	; () banked
  8336  012BD6  2777               	addwf	?___awdiv& (0+255),f,b
  8337  012BD8  0E00               	movlw	0
  8338  012BDA  0100               	movlb	0	; () banked
  8339  012BDC  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8340  012BDE  0EA9               	movlw	low __powers_
  8341  012BE0  0100               	movlb	0	; () banked
  8342  012BE2  2577               	addwf	?___awdiv& (0+255),w,b
  8343  012BE4  6EF6               	movwf	tblptrl,c
  8344  012BE6  0EFE               	movlw	high __powers_
  8345  012BE8  0100               	movlb	0	; () banked
  8346  012BEA  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8347  012BEC  6EF7               	movwf	tblptrh,c
  8348  012BEE                     	if	1	;There are 3 active tblptr bytes
  8349  012BEE  6AF8               	clrf	tblptru,c
  8350  012BF0  0E00               	movlw	low (__mediumconst shr (0+16))
  8351  012BF2  22F8               	addwfc	tblptru,f,c
  8352  012BF4                     	endif
  8353  012BF4  0009               	tblrd		*+
  8354  012BF6  CFF5 F083          	movff	tablat,___flmul@a
  8355  012BFA  0009               	tblrd		*+
  8356  012BFC  CFF5 F084          	movff	tablat,___flmul@a+1
  8357  012C00  0009               	tblrd		*+
  8358  012C02  CFF5 F085          	movff	tablat,___flmul@a+2
  8359  012C06  000A               	tblrd		*-
  8360  012C08  CFF5 F086          	movff	tablat,___flmul@a+3
  8361  012C0C  0E00               	movlw	0
  8362  012C0E  0100               	movlb	0	; () banked
  8363  012C10  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8364  012C12  0E64               	movlw	100
  8365  012C14  6F79               	movwf	___awdiv@divisor& (0+255),b
  8366  012C16  0100               	movlb	0	; () banked
  8367  012C18  51A0               	movf	scale@scl& (0+255),w,b
  8368  012C1A  0100               	movlb	0	; () banked
  8369  012C1C  6F77               	movwf	___awdiv@dividend& (0+255),b
  8370  012C1E  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  8371  012C20  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  8372  012C22  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8373  012C24  ECDA  F0AB         	call	___awdiv	;wreg free
  8374  012C28  0100               	movlb	0	; () banked
  8375  012C2A  90D8               	bcf	status,0,c
  8376  012C2C  3777               	rlcf	?___awdiv& (0+255),f,b
  8377  012C2E  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8378  012C30  0100               	movlb	0	; () banked
  8379  012C32  90D8               	bcf	status,0,c
  8380  012C34  3777               	rlcf	?___awdiv& (0+255),f,b
  8381  012C36  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8382  012C38  0E48               	movlw	72
  8383  012C3A  0100               	movlb	0	; () banked
  8384  012C3C  2777               	addwf	?___awdiv& (0+255),f,b
  8385  012C3E  0E00               	movlw	0
  8386  012C40  0100               	movlb	0	; () banked
  8387  012C42  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8388  012C44  0EA9               	movlw	low __powers_
  8389  012C46  0100               	movlb	0	; () banked
  8390  012C48  2577               	addwf	?___awdiv& (0+255),w,b
  8391  012C4A  6EF6               	movwf	tblptrl,c
  8392  012C4C  0EFE               	movlw	high __powers_
  8393  012C4E  0100               	movlb	0	; () banked
  8394  012C50  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8395  012C52  6EF7               	movwf	tblptrh,c
  8396  012C54                     	if	1	;There are 3 active tblptr bytes
  8397  012C54  6AF8               	clrf	tblptru,c
  8398  012C56  0E00               	movlw	low (__mediumconst shr (0+16))
  8399  012C58  22F8               	addwfc	tblptru,f,c
  8400  012C5A                     	endif
  8401  012C5A  0009               	tblrd		*+
  8402  012C5C  CFF5 F07F          	movff	tablat,___flmul@b
  8403  012C60  0009               	tblrd		*+
  8404  012C62  CFF5 F080          	movff	tablat,___flmul@b+1
  8405  012C66  0009               	tblrd		*+
  8406  012C68  CFF5 F081          	movff	tablat,___flmul@b+2
  8407  012C6C  000A               	tblrd		*-
  8408  012C6E  CFF5 F082          	movff	tablat,___flmul@b+3
  8409  012C72  ECDF  F09B         	call	___flmul	;wreg free
  8410  012C76  C07F  F09C         	movff	?___flmul,_scale$4228
  8411  012C7A  C080  F09D         	movff	?___flmul+1,_scale$4228+1
  8412  012C7E  C081  F09E         	movff	?___flmul+2,_scale$4228+2
  8413  012C82  C082  F09F         	movff	?___flmul+3,_scale$4228+3
  8414                           
  8415                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8416  012C86  C09C  F07F         	movff	_scale$4228,___flmul@b
  8417  012C8A  C09D  F080         	movff	_scale$4228+1,___flmul@b+1
  8418  012C8E  C09E  F081         	movff	_scale$4228+2,___flmul@b+2
  8419  012C92  C09F  F082         	movff	_scale$4228+3,___flmul@b+3
  8420  012C96  0E00               	movlw	0
  8421  012C98  0100               	movlb	0	; () banked
  8422  012C9A  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8423  012C9C  0E0A               	movlw	10
  8424  012C9E  6F73               	movwf	___awmod@divisor& (0+255),b
  8425  012CA0  0100               	movlb	0	; () banked
  8426  012CA2  51A0               	movf	scale@scl& (0+255),w,b
  8427  012CA4  0100               	movlb	0	; () banked
  8428  012CA6  6F71               	movwf	___awmod@dividend& (0+255),b
  8429  012CA8  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8430  012CAA  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8431  012CAC  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8432  012CAE  ECFC  F0AD         	call	___awmod	;wreg free
  8433  012CB2  0100               	movlb	0	; () banked
  8434  012CB4  90D8               	bcf	status,0,c
  8435  012CB6  3771               	rlcf	?___awmod& (0+255),f,b
  8436  012CB8  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8437  012CBA  0100               	movlb	0	; () banked
  8438  012CBC  90D8               	bcf	status,0,c
  8439  012CBE  3771               	rlcf	?___awmod& (0+255),f,b
  8440  012CC0  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8441  012CC2  0EA9               	movlw	low __powers_
  8442  012CC4  0100               	movlb	0	; () banked
  8443  012CC6  2571               	addwf	?___awmod& (0+255),w,b
  8444  012CC8  6EF6               	movwf	tblptrl,c
  8445  012CCA  0EFE               	movlw	high __powers_
  8446  012CCC  0100               	movlb	0	; () banked
  8447  012CCE  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  8448  012CD0  6EF7               	movwf	tblptrh,c
  8449  012CD2                     	if	1	;There are 3 active tblptr bytes
  8450  012CD2  6AF8               	clrf	tblptru,c
  8451  012CD4  0E00               	movlw	low (__mediumconst shr (0+16))
  8452  012CD6  22F8               	addwfc	tblptru,f,c
  8453  012CD8                     	endif
  8454  012CD8  0009               	tblrd		*+
  8455  012CDA  CFF5 F083          	movff	tablat,___flmul@a
  8456  012CDE  0009               	tblrd		*+
  8457  012CE0  CFF5 F084          	movff	tablat,___flmul@a+1
  8458  012CE4  0009               	tblrd		*+
  8459  012CE6  CFF5 F085          	movff	tablat,___flmul@a+2
  8460  012CEA  000A               	tblrd		*-
  8461  012CEC  CFF5 F086          	movff	tablat,___flmul@a+3
  8462  012CF0  ECDF  F09B         	call	___flmul	;wreg free
  8463  012CF4  C07F  F098         	movff	?___flmul,?_scale
  8464  012CF8  C080  F099         	movff	?___flmul+1,?_scale+1
  8465  012CFC  C081  F09A         	movff	?___flmul+2,?_scale+2
  8466  012D00  C082  F09B         	movff	?___flmul+3,?_scale+3
  8467  012D04  0012               	return	
  8468  012D06                     l8236:
  8469                           
  8470                           ;doprnt.c: 438: else if(scl > 10)
  8471  012D06  0100               	movlb	0	; () banked
  8472  012D08  51A0               	movf	scale@scl& (0+255),w,b
  8473  012D0A  0A80               	xorlw	128
  8474  012D0C  0F75               	addlw	-139
  8475  012D0E  A0D8               	btfss	status,0,c
  8476  012D10  D063               	goto	l8242
  8477                           
  8478                           ; BSR set to: 0
  8479                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8480  012D12  0E00               	movlw	0
  8481  012D14  0100               	movlb	0	; () banked
  8482  012D16  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8483  012D18  0E0A               	movlw	10
  8484  012D1A  6F79               	movwf	___awdiv@divisor& (0+255),b
  8485  012D1C  0100               	movlb	0	; () banked
  8486  012D1E  51A0               	movf	scale@scl& (0+255),w,b
  8487  012D20  0100               	movlb	0	; () banked
  8488  012D22  6F77               	movwf	___awdiv@dividend& (0+255),b
  8489  012D24  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  8490  012D26  BF77               	btfsc	___awdiv@dividend& (0+255),7,b
  8491  012D28  0778               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8492  012D2A  ECDA  F0AB         	call	___awdiv	;wreg free
  8493  012D2E  0100               	movlb	0	; () banked
  8494  012D30  90D8               	bcf	status,0,c
  8495  012D32  3777               	rlcf	?___awdiv& (0+255),f,b
  8496  012D34  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8497  012D36  0100               	movlb	0	; () banked
  8498  012D38  90D8               	bcf	status,0,c
  8499  012D3A  3777               	rlcf	?___awdiv& (0+255),f,b
  8500  012D3C  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8501  012D3E  0E24               	movlw	36
  8502  012D40  0100               	movlb	0	; () banked
  8503  012D42  2777               	addwf	?___awdiv& (0+255),f,b
  8504  012D44  0E00               	movlw	0
  8505  012D46  0100               	movlb	0	; () banked
  8506  012D48  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8507  012D4A  0EA9               	movlw	low __powers_
  8508  012D4C  0100               	movlb	0	; () banked
  8509  012D4E  2577               	addwf	?___awdiv& (0+255),w,b
  8510  012D50  6EF6               	movwf	tblptrl,c
  8511  012D52  0EFE               	movlw	high __powers_
  8512  012D54  0100               	movlb	0	; () banked
  8513  012D56  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8514  012D58  6EF7               	movwf	tblptrh,c
  8515  012D5A                     	if	1	;There are 3 active tblptr bytes
  8516  012D5A  6AF8               	clrf	tblptru,c
  8517  012D5C  0E00               	movlw	low (__mediumconst shr (0+16))
  8518  012D5E  22F8               	addwfc	tblptru,f,c
  8519  012D60                     	endif
  8520  012D60  0009               	tblrd		*+
  8521  012D62  CFF5 F07F          	movff	tablat,___flmul@b
  8522  012D66  0009               	tblrd		*+
  8523  012D68  CFF5 F080          	movff	tablat,___flmul@b+1
  8524  012D6C  0009               	tblrd		*+
  8525  012D6E  CFF5 F081          	movff	tablat,___flmul@b+2
  8526  012D72  000A               	tblrd		*-
  8527  012D74  CFF5 F082          	movff	tablat,___flmul@b+3
  8528  012D78  0E00               	movlw	0
  8529  012D7A  0100               	movlb	0	; () banked
  8530  012D7C  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8531  012D7E  0E0A               	movlw	10
  8532  012D80  6F73               	movwf	___awmod@divisor& (0+255),b
  8533  012D82  0100               	movlb	0	; () banked
  8534  012D84  51A0               	movf	scale@scl& (0+255),w,b
  8535  012D86  0100               	movlb	0	; () banked
  8536  012D88  6F71               	movwf	___awmod@dividend& (0+255),b
  8537  012D8A  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8538  012D8C  BF71               	btfsc	___awmod@dividend& (0+255),7,b
  8539  012D8E  0772               	decf	(___awmod@dividend+1)& (0+255),f,b
  8540  012D90  ECFC  F0AD         	call	___awmod	;wreg free
  8541  012D94  0100               	movlb	0	; () banked
  8542  012D96  90D8               	bcf	status,0,c
  8543  012D98  3771               	rlcf	?___awmod& (0+255),f,b
  8544  012D9A  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8545  012D9C  0100               	movlb	0	; () banked
  8546  012D9E  90D8               	bcf	status,0,c
  8547  012DA0  3771               	rlcf	?___awmod& (0+255),f,b
  8548  012DA2  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8549  012DA4  0EA9               	movlw	low __powers_
  8550  012DA6  0100               	movlb	0	; () banked
  8551  012DA8  2571               	addwf	?___awmod& (0+255),w,b
  8552  012DAA  6EF6               	movwf	tblptrl,c
  8553  012DAC  0EFE               	movlw	high __powers_
  8554  012DAE  0100               	movlb	0	; () banked
  8555  012DB0  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  8556  012DB2  6EF7               	movwf	tblptrh,c
  8557  012DB4                     	if	1	;There are 3 active tblptr bytes
  8558  012DB4  6AF8               	clrf	tblptru,c
  8559  012DB6  0E00               	movlw	low (__mediumconst shr (0+16))
  8560  012DB8  22F8               	addwfc	tblptru,f,c
  8561  012DBA                     	endif
  8562  012DBA  0009               	tblrd		*+
  8563  012DBC  CFF5 F083          	movff	tablat,___flmul@a
  8564  012DC0  0009               	tblrd		*+
  8565  012DC2  CFF5 F084          	movff	tablat,___flmul@a+1
  8566  012DC6  0009               	tblrd		*+
  8567  012DC8  CFF5 F085          	movff	tablat,___flmul@a+2
  8568  012DCC  000A               	tblrd		*-
  8569  012DCE  CFF5 F086          	movff	tablat,___flmul@a+3
  8570  012DD2  ECDF  F09B         	call	___flmul	;wreg free
  8571  012DD6  D78E               	goto	L8
  8572  012DD8                     l8242:
  8573                           
  8574                           ;doprnt.c: 440: return _powers_[scl];
  8575  012DD8  0100               	movlb	0	; () banked
  8576  012DDA  51A0               	movf	scale@scl& (0+255),w,b
  8577  012DDC  0D04               	mullw	4
  8578  012DDE  0EA9               	movlw	low __powers_
  8579  012DE0  24F3               	addwf	prodl,w,c
  8580  012DE2  6EF6               	movwf	tblptrl,c
  8581  012DE4  0EFE               	movlw	high __powers_
  8582  012DE6  20F4               	addwfc	prodh,w,c
  8583  012DE8  6EF7               	movwf	tblptrh,c
  8584  012DEA                     	if	1	;There are 3 active tblptr bytes
  8585  012DEA  6AF8               	clrf	tblptru,c
  8586  012DEC  0E00               	movlw	low (__mediumconst shr (0+16))
  8587  012DEE  22F8               	addwfc	tblptru,f,c
  8588  012DF0                     	endif
  8589  012DF0  0009               	tblrd		*+
  8590  012DF2  CFF5 F098          	movff	tablat,?_scale
  8591  012DF6  0009               	tblrd		*+
  8592  012DF8  CFF5 F099          	movff	tablat,?_scale+1
  8593  012DFC  0009               	tblrd		*+
  8594  012DFE  CFF5 F09A          	movff	tablat,?_scale+2
  8595  012E02  000A               	tblrd		*-
  8596  012E04  CFF5 F09B          	movff	tablat,?_scale+3
  8597  012E08  0012               	return	
  8598  012E0A                     __end_of_scale:
  8599                           	opt stack 0
  8600                           tblptru	equ	0xFF8
  8601                           tblptrh	equ	0xFF7
  8602                           tblptrl	equ	0xFF6
  8603                           tablat	equ	0xFF5
  8604                           prodh	equ	0xFF4
  8605                           prodl	equ	0xFF3
  8606                           intcon	equ	0xFF2
  8607                           postinc0	equ	0xFEE
  8608                           wreg	equ	0xFE8
  8609                           indf2	equ	0xFDF
  8610                           postinc2	equ	0xFDE
  8611                           fsr2h	equ	0xFDA
  8612                           fsr2l	equ	0xFD9
  8613                           status	equ	0xFD8
  8614                           
  8615 ;; *************** function _isdigit *****************
  8616 ;; Defined at:
  8617 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  8618 ;; Parameters:    Size  Location     Type
  8619 ;;  c               1    wreg     unsigned char 
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;  c               1   19[BANK0 ] unsigned char 
  8622 ;; Return value:  Size  Location     Type
  8623 ;;		None               void
  8624 ;; Registers used:
  8625 ;;		wreg, status,2, status,0
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/0
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8632 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8633 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8634 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8635 ;;Total ram usage:        3 bytes
  8636 ;; Hardware stack levels used:    1
  8637 ;; Hardware stack levels required when called:    3
  8638 ;; This function calls:
  8639 ;;		Nothing
  8640 ;; This function is called by:
  8641 ;;		_sprintf
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645                           	psect	text11
  8646  0161F4                     __ptext11:
  8647                           	opt stack 0
  8648  0161F4                     _isdigit:
  8649                           	opt stack 25
  8650                           
  8651                           ;incstack = 0
  8652                           ;isdigit@c stored from wreg
  8653  0161F4  0100               	movlb	0	; () banked
  8654  0161F6  6F73               	movwf	isdigit@c& (0+255),b
  8655  0161F8  0E00               	movlw	0
  8656  0161FA  0100               	movlb	0	; () banked
  8657  0161FC  6F72               	movwf	_isdigit$3812& (0+255),b
  8658                           
  8659                           ; BSR set to: 0
  8660  0161FE  0E3A               	movlw	58
  8661  016200  0100               	movlb	0	; () banked
  8662  016202  6173               	cpfslt	isdigit@c& (0+255),b
  8663  016204  D007               	goto	l8254
  8664                           
  8665                           ; BSR set to: 0
  8666  016206  0E2F               	movlw	47
  8667  016208  0100               	movlb	0	; () banked
  8668  01620A  6573               	cpfsgt	isdigit@c& (0+255),b
  8669  01620C  D003               	goto	l8254
  8670                           
  8671                           ; BSR set to: 0
  8672  01620E  0E01               	movlw	1
  8673  016210  0100               	movlb	0	; () banked
  8674  016212  6F72               	movwf	_isdigit$3812& (0+255),b
  8675  016214                     l8254:
  8676                           
  8677                           ; BSR set to: 0
  8678  016214  C072  F071         	movff	_isdigit$3812,??_isdigit
  8679  016218  0100               	movlb	0	; () banked
  8680  01621A  3171               	rrcf	??_isdigit& (0+255),w,b
  8681  01621C  0012               	return	
  8682  01621E                     __end_of_isdigit:
  8683                           	opt stack 0
  8684                           tblptru	equ	0xFF8
  8685                           tblptrh	equ	0xFF7
  8686                           tblptrl	equ	0xFF6
  8687                           tablat	equ	0xFF5
  8688                           prodh	equ	0xFF4
  8689                           prodl	equ	0xFF3
  8690                           intcon	equ	0xFF2
  8691                           postinc0	equ	0xFEE
  8692                           wreg	equ	0xFE8
  8693                           indf2	equ	0xFDF
  8694                           postinc2	equ	0xFDE
  8695                           fsr2h	equ	0xFDA
  8696                           fsr2l	equ	0xFD9
  8697                           status	equ	0xFD8
  8698                           
  8699 ;; *************** function _fround *****************
  8700 ;; Defined at:
  8701 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  8702 ;; Parameters:    Size  Location     Type
  8703 ;;  prec            1    wreg     unsigned char 
  8704 ;; Auto vars:     Size  Location     Type
  8705 ;;  prec            1   68[BANK0 ] unsigned char 
  8706 ;; Return value:  Size  Location     Type
  8707 ;;                  4   56[BANK0 ] unsigned char 
  8708 ;; Registers used:
  8709 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8710 ;; Tracked objects:
  8711 ;;		On entry : 0/0
  8712 ;;		On exit  : 0/0
  8713 ;;		Unchanged: 0/0
  8714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8715 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8716 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8718 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8719 ;;Total ram usage:       13 bytes
  8720 ;; Hardware stack levels used:    1
  8721 ;; Hardware stack levels required when called:    4
  8722 ;; This function calls:
  8723 ;;		___awdiv
  8724 ;;		___awmod
  8725 ;;		___flmul
  8726 ;; This function is called by:
  8727 ;;		_sprintf
  8728 ;; This function uses a non-reentrant model
  8729 ;;
  8730                           
  8731                           	psect	text12
  8732  0143C2                     __ptext12:
  8733                           	opt stack 0
  8734  0143C2                     _fround:
  8735                           	opt stack 24
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;incstack = 0
  8739                           ;fround@prec stored from wreg
  8740  0143C2  0100               	movlb	0	; () banked
  8741  0143C4  6FA4               	movwf	fround@prec& (0+255),b
  8742                           
  8743                           ;doprnt.c: 413: if(prec>=110)
  8744  0143C6  0E6D               	movlw	109
  8745  0143C8  0100               	movlb	0	; () banked
  8746  0143CA  65A4               	cpfsgt	fround@prec& (0+255),b
  8747  0143CC  D0CD               	goto	l8196
  8748                           
  8749                           ; BSR set to: 0
  8750                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8751  0143CE  0E00               	movlw	0
  8752  0143D0  0100               	movlb	0	; () banked
  8753  0143D2  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8754  0143D4  0E0A               	movlw	10
  8755  0143D6  6F79               	movwf	___awdiv@divisor& (0+255),b
  8756  0143D8  0E00               	movlw	0
  8757  0143DA  0100               	movlb	0	; () banked
  8758  0143DC  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8759  0143DE  0E64               	movlw	100
  8760  0143E0  6F73               	movwf	___awmod@divisor& (0+255),b
  8761  0143E2  C0A4  F071         	movff	fround@prec,___awmod@dividend
  8762  0143E6  0100               	movlb	0	; () banked
  8763  0143E8  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8764  0143EA  ECFC  F0AD         	call	___awmod	;wreg free
  8765  0143EE  C071  F077         	movff	?___awmod,___awdiv@dividend
  8766  0143F2  C072  F078         	movff	?___awmod+1,___awdiv@dividend+1
  8767  0143F6  ECDA  F0AB         	call	___awdiv	;wreg free
  8768  0143FA  0100               	movlb	0	; () banked
  8769  0143FC  90D8               	bcf	status,0,c
  8770  0143FE  3777               	rlcf	?___awdiv& (0+255),f,b
  8771  014400  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8772  014402  0100               	movlb	0	; () banked
  8773  014404  90D8               	bcf	status,0,c
  8774  014406  3777               	rlcf	?___awdiv& (0+255),f,b
  8775  014408  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8776  01440A  0E24               	movlw	36
  8777  01440C  0100               	movlb	0	; () banked
  8778  01440E  2777               	addwf	?___awdiv& (0+255),f,b
  8779  014410  0E00               	movlw	0
  8780  014412  0100               	movlb	0	; () banked
  8781  014414  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8782  014416  0E75               	movlw	low __npowers_
  8783  014418  0100               	movlb	0	; () banked
  8784  01441A  2577               	addwf	?___awdiv& (0+255),w,b
  8785  01441C  6EF6               	movwf	tblptrl,c
  8786  01441E  0EFE               	movlw	high __npowers_
  8787  014420  0100               	movlb	0	; () banked
  8788  014422  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8789  014424  6EF7               	movwf	tblptrh,c
  8790  014426                     	if	1	;There are 3 active tblptr bytes
  8791  014426  6AF8               	clrf	tblptru,c
  8792  014428  0E00               	movlw	low (__mediumconst shr (0+16))
  8793  01442A  22F8               	addwfc	tblptru,f,c
  8794  01442C                     	endif
  8795  01442C  0009               	tblrd		*+
  8796  01442E  CFF5 F083          	movff	tablat,___flmul@a
  8797  014432  0009               	tblrd		*+
  8798  014434  CFF5 F084          	movff	tablat,___flmul@a+1
  8799  014438  0009               	tblrd		*+
  8800  01443A  CFF5 F085          	movff	tablat,___flmul@a+2
  8801  01443E  000A               	tblrd		*-
  8802  014440  CFF5 F086          	movff	tablat,___flmul@a+3
  8803  014444  0E00               	movlw	0
  8804  014446  0100               	movlb	0	; () banked
  8805  014448  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8806  01444A  0E64               	movlw	100
  8807  01444C  6F79               	movwf	___awdiv@divisor& (0+255),b
  8808  01444E  C0A4  F077         	movff	fround@prec,___awdiv@dividend
  8809  014452  0100               	movlb	0	; () banked
  8810  014454  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  8811  014456  ECDA  F0AB         	call	___awdiv	;wreg free
  8812  01445A  0100               	movlb	0	; () banked
  8813  01445C  90D8               	bcf	status,0,c
  8814  01445E  3777               	rlcf	?___awdiv& (0+255),f,b
  8815  014460  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8816  014462  0100               	movlb	0	; () banked
  8817  014464  90D8               	bcf	status,0,c
  8818  014466  3777               	rlcf	?___awdiv& (0+255),f,b
  8819  014468  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8820  01446A  0E48               	movlw	72
  8821  01446C  0100               	movlb	0	; () banked
  8822  01446E  2777               	addwf	?___awdiv& (0+255),f,b
  8823  014470  0E00               	movlw	0
  8824  014472  0100               	movlb	0	; () banked
  8825  014474  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8826  014476  0E75               	movlw	low __npowers_
  8827  014478  0100               	movlb	0	; () banked
  8828  01447A  2577               	addwf	?___awdiv& (0+255),w,b
  8829  01447C  6EF6               	movwf	tblptrl,c
  8830  01447E  0EFE               	movlw	high __npowers_
  8831  014480  0100               	movlb	0	; () banked
  8832  014482  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  8833  014484  6EF7               	movwf	tblptrh,c
  8834  014486                     	if	1	;There are 3 active tblptr bytes
  8835  014486  6AF8               	clrf	tblptru,c
  8836  014488  0E00               	movlw	low (__mediumconst shr (0+16))
  8837  01448A  22F8               	addwfc	tblptru,f,c
  8838  01448C                     	endif
  8839  01448C  0009               	tblrd		*+
  8840  01448E  CFF5 F07F          	movff	tablat,___flmul@b
  8841  014492  0009               	tblrd		*+
  8842  014494  CFF5 F080          	movff	tablat,___flmul@b+1
  8843  014498  0009               	tblrd		*+
  8844  01449A  CFF5 F081          	movff	tablat,___flmul@b+2
  8845  01449E  000A               	tblrd		*-
  8846  0144A0  CFF5 F082          	movff	tablat,___flmul@b+3
  8847  0144A4  ECDF  F09B         	call	___flmul	;wreg free
  8848  0144A8  C07F  F0A0         	movff	?___flmul,_fround$4226
  8849  0144AC  C080  F0A1         	movff	?___flmul+1,_fround$4226+1
  8850  0144B0  C081  F0A2         	movff	?___flmul+2,_fround$4226+2
  8851  0144B4  C082  F0A3         	movff	?___flmul+3,_fround$4226+3
  8852                           
  8853                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8854  0144B8  0E00               	movlw	0
  8855  0144BA  0100               	movlb	0	; () banked
  8856  0144BC  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8857  0144BE  0E0A               	movlw	10
  8858  0144C0  6F73               	movwf	___awmod@divisor& (0+255),b
  8859  0144C2  C0A4  F071         	movff	fround@prec,___awmod@dividend
  8860  0144C6  0100               	movlb	0	; () banked
  8861  0144C8  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8862  0144CA  ECFC  F0AD         	call	___awmod	;wreg free
  8863  0144CE  0100               	movlb	0	; () banked
  8864  0144D0  90D8               	bcf	status,0,c
  8865  0144D2  3771               	rlcf	?___awmod& (0+255),f,b
  8866  0144D4  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8867  0144D6  0100               	movlb	0	; () banked
  8868  0144D8  90D8               	bcf	status,0,c
  8869  0144DA  3771               	rlcf	?___awmod& (0+255),f,b
  8870  0144DC  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8871  0144DE  0E75               	movlw	low __npowers_
  8872  0144E0  0100               	movlb	0	; () banked
  8873  0144E2  2571               	addwf	?___awmod& (0+255),w,b
  8874  0144E4  6EF6               	movwf	tblptrl,c
  8875  0144E6  0EFE               	movlw	high __npowers_
  8876  0144E8  0100               	movlb	0	; () banked
  8877  0144EA  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  8878  0144EC  6EF7               	movwf	tblptrh,c
  8879  0144EE                     	if	1	;There are 3 active tblptr bytes
  8880  0144EE  6AF8               	clrf	tblptru,c
  8881  0144F0  0E00               	movlw	low (__mediumconst shr (0+16))
  8882  0144F2  22F8               	addwfc	tblptru,f,c
  8883  0144F4                     	endif
  8884  0144F4  0009               	tblrd		*+
  8885  0144F6  CFF5 F083          	movff	tablat,___flmul@a
  8886  0144FA  0009               	tblrd		*+
  8887  0144FC  CFF5 F084          	movff	tablat,___flmul@a+1
  8888  014500  0009               	tblrd		*+
  8889  014502  CFF5 F085          	movff	tablat,___flmul@a+2
  8890  014506  000A               	tblrd		*-
  8891  014508  CFF5 F086          	movff	tablat,___flmul@a+3
  8892  01450C  C0A0  F07F         	movff	_fround$4226,___flmul@b
  8893  014510  C0A1  F080         	movff	_fround$4226+1,___flmul@b+1
  8894  014514  C0A2  F081         	movff	_fround$4226+2,___flmul@b+2
  8895  014518  C0A3  F082         	movff	_fround$4226+3,___flmul@b+3
  8896  01451C  ECDF  F09B         	call	___flmul	;wreg free
  8897  014520  C07F  F09C         	movff	?___flmul,_fround$4227
  8898  014524  C080  F09D         	movff	?___flmul+1,_fround$4227+1
  8899  014528  C081  F09E         	movff	?___flmul+2,_fround$4227+2
  8900  01452C  C082  F09F         	movff	?___flmul+3,_fround$4227+3
  8901                           
  8902                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8903  014530  C09C  F07F         	movff	_fround$4227,___flmul@b
  8904  014534  C09D  F080         	movff	_fround$4227+1,___flmul@b+1
  8905  014538  C09E  F081         	movff	_fround$4227+2,___flmul@b+2
  8906  01453C  C09F  F082         	movff	_fround$4227+3,___flmul@b+3
  8907  014540  0E00               	movlw	0
  8908  014542  0100               	movlb	0	; () banked
  8909  014544  6F83               	movwf	___flmul@a& (0+255),b
  8910  014546  0E00               	movlw	0
  8911  014548  6F84               	movwf	(___flmul@a+1)& (0+255),b
  8912  01454A  0E00               	movlw	0
  8913  01454C  6F85               	movwf	(___flmul@a+2)& (0+255),b
  8914  01454E  0E3F               	movlw	63
  8915  014550  6F86               	movwf	(___flmul@a+3)& (0+255),b
  8916  014552  ECDF  F09B         	call	___flmul	;wreg free
  8917  014556  C07F  F098         	movff	?___flmul,?_fround
  8918  01455A  C080  F099         	movff	?___flmul+1,?_fround+1
  8919  01455E  C081  F09A         	movff	?___flmul+2,?_fround+2
  8920  014562  C082  F09B         	movff	?___flmul+3,?_fround+3
  8921  014566  0012               	return	
  8922  014568                     l8196:
  8923                           
  8924                           ;doprnt.c: 415: else if(prec > 10)
  8925  014568  0E0A               	movlw	10
  8926  01456A  0100               	movlb	0	; () banked
  8927  01456C  65A4               	cpfsgt	fround@prec& (0+255),b
  8928  01456E  D078               	goto	l8204
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8932  014570  0E00               	movlw	0
  8933  014572  0100               	movlb	0	; () banked
  8934  014574  6F74               	movwf	(___awmod@divisor+1)& (0+255),b
  8935  014576  0E0A               	movlw	10
  8936  014578  6F73               	movwf	___awmod@divisor& (0+255),b
  8937  01457A  C0A4  F071         	movff	fround@prec,___awmod@dividend
  8938  01457E  0100               	movlb	0	; () banked
  8939  014580  6B72               	clrf	(___awmod@dividend+1)& (0+255),b
  8940  014582  ECFC  F0AD         	call	___awmod	;wreg free
  8941  014586  0100               	movlb	0	; () banked
  8942  014588  90D8               	bcf	status,0,c
  8943  01458A  3771               	rlcf	?___awmod& (0+255),f,b
  8944  01458C  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8945  01458E  0100               	movlb	0	; () banked
  8946  014590  90D8               	bcf	status,0,c
  8947  014592  3771               	rlcf	?___awmod& (0+255),f,b
  8948  014594  3772               	rlcf	(?___awmod+1)& (0+255),f,b
  8949  014596  0E75               	movlw	low __npowers_
  8950  014598  0100               	movlb	0	; () banked
  8951  01459A  2571               	addwf	?___awmod& (0+255),w,b
  8952  01459C  6EF6               	movwf	tblptrl,c
  8953  01459E  0EFE               	movlw	high __npowers_
  8954  0145A0  0100               	movlb	0	; () banked
  8955  0145A2  2172               	addwfc	(?___awmod+1)& (0+255),w,b
  8956  0145A4  6EF7               	movwf	tblptrh,c
  8957  0145A6                     	if	1	;There are 3 active tblptr bytes
  8958  0145A6  6AF8               	clrf	tblptru,c
  8959  0145A8  0E00               	movlw	low (__mediumconst shr (0+16))
  8960  0145AA  22F8               	addwfc	tblptru,f,c
  8961  0145AC                     	endif
  8962  0145AC  0009               	tblrd		*+
  8963  0145AE  CFF5 F083          	movff	tablat,___flmul@a
  8964  0145B2  0009               	tblrd		*+
  8965  0145B4  CFF5 F084          	movff	tablat,___flmul@a+1
  8966  0145B8  0009               	tblrd		*+
  8967  0145BA  CFF5 F085          	movff	tablat,___flmul@a+2
  8968  0145BE  000A               	tblrd		*-
  8969  0145C0  CFF5 F086          	movff	tablat,___flmul@a+3
  8970  0145C4  0E00               	movlw	0
  8971  0145C6  0100               	movlb	0	; () banked
  8972  0145C8  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  8973  0145CA  0E0A               	movlw	10
  8974  0145CC  6F79               	movwf	___awdiv@divisor& (0+255),b
  8975  0145CE  C0A4  F077         	movff	fround@prec,___awdiv@dividend
  8976  0145D2  0100               	movlb	0	; () banked
  8977  0145D4  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  8978  0145D6  ECDA  F0AB         	call	___awdiv	;wreg free
  8979  0145DA  0100               	movlb	0	; () banked
  8980  0145DC  90D8               	bcf	status,0,c
  8981  0145DE  3777               	rlcf	?___awdiv& (0+255),f,b
  8982  0145E0  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8983  0145E2  0100               	movlb	0	; () banked
  8984  0145E4  90D8               	bcf	status,0,c
  8985  0145E6  3777               	rlcf	?___awdiv& (0+255),f,b
  8986  0145E8  3778               	rlcf	(?___awdiv+1)& (0+255),f,b
  8987  0145EA  0E24               	movlw	36
  8988  0145EC  0100               	movlb	0	; () banked
  8989  0145EE  2777               	addwf	?___awdiv& (0+255),f,b
  8990  0145F0  0E00               	movlw	0
  8991  0145F2  0100               	movlb	0	; () banked
  8992  0145F4  2378               	addwfc	(?___awdiv+1)& (0+255),f,b
  8993  0145F6  0E75               	movlw	low __npowers_
  8994  0145F8  0100               	movlb	0	; () banked
  8995  0145FA  2577               	addwf	?___awdiv& (0+255),w,b
  8996  0145FC  6EF6               	movwf	tblptrl,c
  8997  0145FE  0EFE               	movlw	high __npowers_
  8998  014600  0100               	movlb	0	; () banked
  8999  014602  2178               	addwfc	(?___awdiv+1)& (0+255),w,b
  9000  014604  6EF7               	movwf	tblptrh,c
  9001  014606                     	if	1	;There are 3 active tblptr bytes
  9002  014606  6AF8               	clrf	tblptru,c
  9003  014608  0E00               	movlw	low (__mediumconst shr (0+16))
  9004  01460A  22F8               	addwfc	tblptru,f,c
  9005  01460C                     	endif
  9006  01460C  0009               	tblrd		*+
  9007  01460E  CFF5 F07F          	movff	tablat,___flmul@b
  9008  014612  0009               	tblrd		*+
  9009  014614  CFF5 F080          	movff	tablat,___flmul@b+1
  9010  014618  0009               	tblrd		*+
  9011  01461A  CFF5 F081          	movff	tablat,___flmul@b+2
  9012  01461E  000A               	tblrd		*-
  9013  014620  CFF5 F082          	movff	tablat,___flmul@b+3
  9014  014624  ECDF  F09B         	call	___flmul	;wreg free
  9015  014628  C07F  F0A0         	movff	?___flmul,_fround$4226
  9016  01462C  C080  F0A1         	movff	?___flmul+1,_fround$4226+1
  9017  014630  C081  F0A2         	movff	?___flmul+2,_fround$4226+2
  9018  014634  C082  F0A3         	movff	?___flmul+3,_fround$4226+3
  9019                           
  9020                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9021  014638  C0A0  F07F         	movff	_fround$4226,___flmul@b
  9022  01463C  C0A1  F080         	movff	_fround$4226+1,___flmul@b+1
  9023  014640  C0A2  F081         	movff	_fround$4226+2,___flmul@b+2
  9024  014644  C0A3  F082         	movff	_fround$4226+3,___flmul@b+3
  9025  014648  0E00               	movlw	0
  9026  01464A  0100               	movlb	0	; () banked
  9027  01464C  6F83               	movwf	___flmul@a& (0+255),b
  9028  01464E  0E00               	movlw	0
  9029  014650  6F84               	movwf	(___flmul@a+1)& (0+255),b
  9030  014652  0E00               	movlw	0
  9031  014654  6F85               	movwf	(___flmul@a+2)& (0+255),b
  9032  014656  0E3F               	movlw	63
  9033  014658  6F86               	movwf	(___flmul@a+3)& (0+255),b
  9034  01465A  ECDF  F09B         	call	___flmul	;wreg free
  9035  01465E  D77B               	goto	L9
  9036  014660                     l8204:
  9037                           
  9038                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9039  014660  0100               	movlb	0	; () banked
  9040  014662  51A4               	movf	fround@prec& (0+255),w,b
  9041  014664  0D04               	mullw	4
  9042  014666  0E75               	movlw	low __npowers_
  9043  014668  24F3               	addwf	prodl,w,c
  9044  01466A  6EF6               	movwf	tblptrl,c
  9045  01466C  0EFE               	movlw	high __npowers_
  9046  01466E  20F4               	addwfc	prodh,w,c
  9047  014670  6EF7               	movwf	tblptrh,c
  9048  014672                     	if	1	;There are 3 active tblptr bytes
  9049  014672  6AF8               	clrf	tblptru,c
  9050  014674  0E00               	movlw	low (__mediumconst shr (0+16))
  9051  014676  22F8               	addwfc	tblptru,f,c
  9052  014678                     	endif
  9053  014678  0009               	tblrd		*+
  9054  01467A  CFF5 F07F          	movff	tablat,___flmul@b
  9055  01467E  0009               	tblrd		*+
  9056  014680  CFF5 F080          	movff	tablat,___flmul@b+1
  9057  014684  0009               	tblrd		*+
  9058  014686  CFF5 F081          	movff	tablat,___flmul@b+2
  9059  01468A  000A               	tblrd		*-
  9060  01468C  CFF5 F082          	movff	tablat,___flmul@b+3
  9061  014690  0E00               	movlw	0
  9062  014692  0100               	movlb	0	; () banked
  9063  014694  6F83               	movwf	___flmul@a& (0+255),b
  9064  014696  0E00               	movlw	0
  9065  014698  6F84               	movwf	(___flmul@a+1)& (0+255),b
  9066  01469A  0E00               	movlw	0
  9067  01469C  6F85               	movwf	(___flmul@a+2)& (0+255),b
  9068  01469E  0E3F               	movlw	63
  9069  0146A0  6F86               	movwf	(___flmul@a+3)& (0+255),b
  9070  0146A2  ECDF  F09B         	call	___flmul	;wreg free
  9071  0146A6  C07F  F098         	movff	?___flmul,?_fround
  9072  0146AA  C080  F099         	movff	?___flmul+1,?_fround+1
  9073  0146AE  C081  F09A         	movff	?___flmul+2,?_fround+2
  9074  0146B2  C082  F09B         	movff	?___flmul+3,?_fround+3
  9075  0146B6  0012               	return	
  9076  0146B8                     __end_of_fround:
  9077                           	opt stack 0
  9078                           tblptru	equ	0xFF8
  9079                           tblptrh	equ	0xFF7
  9080                           tblptrl	equ	0xFF6
  9081                           tablat	equ	0xFF5
  9082                           prodh	equ	0xFF4
  9083                           prodl	equ	0xFF3
  9084                           intcon	equ	0xFF2
  9085                           postinc0	equ	0xFEE
  9086                           wreg	equ	0xFE8
  9087                           indf2	equ	0xFDF
  9088                           postinc2	equ	0xFDE
  9089                           fsr2h	equ	0xFDA
  9090                           fsr2l	equ	0xFD9
  9091                           status	equ	0xFD8
  9092                           
  9093 ;; *************** function ___flmul *****************
  9094 ;; Defined at:
  9095 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  9096 ;; Parameters:    Size  Location     Type
  9097 ;;  b               4   31[BANK0 ] unsigned char 
  9098 ;;  a               4   35[BANK0 ] unsigned char 
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;  prod            4   50[BANK0 ] struct .
  9101 ;;  grs             4   45[BANK0 ] unsigned long 
  9102 ;;  temp            2   54[BANK0 ] struct .
  9103 ;;  bexp            1   49[BANK0 ] unsigned char 
  9104 ;;  aexp            1   44[BANK0 ] unsigned char 
  9105 ;;  sign            1   43[BANK0 ] unsigned char 
  9106 ;; Return value:  Size  Location     Type
  9107 ;;                  4   31[BANK0 ] unsigned char 
  9108 ;; Registers used:
  9109 ;;		wreg, status,2, status,0, prodl, prodh
  9110 ;; Tracked objects:
  9111 ;;		On entry : 0/0
  9112 ;;		On exit  : 0/0
  9113 ;;		Unchanged: 0/0
  9114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9115 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9116 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9117 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9118 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9119 ;;Total ram usage:       25 bytes
  9120 ;; Hardware stack levels used:    1
  9121 ;; Hardware stack levels required when called:    3
  9122 ;; This function calls:
  9123 ;;		Nothing
  9124 ;; This function is called by:
  9125 ;;		_main
  9126 ;;		_fround
  9127 ;;		_scale
  9128 ;;		_sprintf
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           	psect	text13
  9133  0137BE                     __ptext13:
  9134                           	opt stack 0
  9135  0137BE                     ___flmul:
  9136                           	opt stack 27
  9137                           
  9138                           ;incstack = 0
  9139  0137BE  0100               	movlb	0	; () banked
  9140  0137C0  5182               	movf	(___flmul@b+3)& (0+255),w,b
  9141  0137C2  0B80               	andlw	128
  9142  0137C4  0100               	movlb	0	; () banked
  9143  0137C6  6F8B               	movwf	___flmul@sign& (0+255),b
  9144  0137C8  0100               	movlb	0	; () banked
  9145  0137CA  5182               	movf	(___flmul@b+3)& (0+255),w,b
  9146  0137CC  2582               	addwf	(___flmul@b+3)& (0+255),w,b
  9147  0137CE  0100               	movlb	0	; () banked
  9148  0137D0  6F91               	movwf	___flmul@bexp& (0+255),b
  9149                           
  9150                           ; BSR set to: 0
  9151  0137D2  0100               	movlb	0	; () banked
  9152  0137D4  AF81               	btfss	(___flmul@b+2)& (0+255),7,b
  9153  0137D6  D002               	goto	l7950
  9154                           
  9155                           ; BSR set to: 0
  9156  0137D8  0100               	movlb	0	; () banked
  9157  0137DA  8191               	bsf	___flmul@bexp& (0+255),0,b
  9158  0137DC                     l7950:
  9159                           
  9160                           ; BSR set to: 0
  9161  0137DC  0100               	movlb	0	; () banked
  9162  0137DE  5191               	movf	___flmul@bexp& (0+255),w,b
  9163  0137E0  0100               	movlb	0	; () banked
  9164  0137E2  B4D8               	btfsc	status,2,c
  9165  0137E4  D010               	goto	l7958
  9166                           
  9167                           ; BSR set to: 0
  9168  0137E6  0100               	movlb	0	; () banked
  9169  0137E8  2991               	incf	___flmul@bexp& (0+255),w,b
  9170  0137EA  A4D8               	btfss	status,2,c
  9171  0137EC  D009               	goto	l7956
  9172                           
  9173                           ; BSR set to: 0
  9174  0137EE  0E00               	movlw	0
  9175  0137F0  0100               	movlb	0	; () banked
  9176  0137F2  6F7F               	movwf	___flmul@b& (0+255),b
  9177  0137F4  0E00               	movlw	0
  9178  0137F6  6F80               	movwf	(___flmul@b+1)& (0+255),b
  9179  0137F8  0E00               	movlw	0
  9180  0137FA  6F81               	movwf	(___flmul@b+2)& (0+255),b
  9181  0137FC  0E00               	movlw	0
  9182  0137FE  6F82               	movwf	(___flmul@b+3)& (0+255),b
  9183  013800                     l7956:
  9184                           
  9185                           ; BSR set to: 0
  9186  013800  0100               	movlb	0	; () banked
  9187  013802  8F81               	bsf	(___flmul@b+2)& (0+255),7,b
  9188  013804  D009               	goto	l7960
  9189  013806                     l7958:
  9190                           
  9191                           ; BSR set to: 0
  9192  013806  0E00               	movlw	0
  9193  013808  0100               	movlb	0	; () banked
  9194  01380A  6F7F               	movwf	___flmul@b& (0+255),b
  9195  01380C  0E00               	movlw	0
  9196  01380E  6F80               	movwf	(___flmul@b+1)& (0+255),b
  9197  013810  0E00               	movlw	0
  9198  013812  6F81               	movwf	(___flmul@b+2)& (0+255),b
  9199  013814  0E00               	movlw	0
  9200  013816  6F82               	movwf	(___flmul@b+3)& (0+255),b
  9201  013818                     l7960:
  9202                           
  9203                           ; BSR set to: 0
  9204  013818  0100               	movlb	0	; () banked
  9205  01381A  5186               	movf	(___flmul@a+3)& (0+255),w,b
  9206  01381C  0B80               	andlw	128
  9207  01381E  0100               	movlb	0	; () banked
  9208  013820  1B8B               	xorwf	___flmul@sign& (0+255),f,b
  9209                           
  9210                           ; BSR set to: 0
  9211  013822  0100               	movlb	0	; () banked
  9212  013824  5186               	movf	(___flmul@a+3)& (0+255),w,b
  9213  013826  2586               	addwf	(___flmul@a+3)& (0+255),w,b
  9214  013828  0100               	movlb	0	; () banked
  9215  01382A  6F8C               	movwf	___flmul@aexp& (0+255),b
  9216                           
  9217                           ; BSR set to: 0
  9218  01382C  0100               	movlb	0	; () banked
  9219  01382E  AF85               	btfss	(___flmul@a+2)& (0+255),7,b
  9220  013830  D002               	goto	l7968
  9221                           
  9222                           ; BSR set to: 0
  9223  013832  0100               	movlb	0	; () banked
  9224  013834  818C               	bsf	___flmul@aexp& (0+255),0,b
  9225  013836                     l7968:
  9226                           
  9227                           ; BSR set to: 0
  9228  013836  0100               	movlb	0	; () banked
  9229  013838  518C               	movf	___flmul@aexp& (0+255),w,b
  9230  01383A  0100               	movlb	0	; () banked
  9231  01383C  B4D8               	btfsc	status,2,c
  9232  01383E  D010               	goto	l7976
  9233                           
  9234                           ; BSR set to: 0
  9235  013840  0100               	movlb	0	; () banked
  9236  013842  298C               	incf	___flmul@aexp& (0+255),w,b
  9237  013844  A4D8               	btfss	status,2,c
  9238  013846  D009               	goto	l7974
  9239                           
  9240                           ; BSR set to: 0
  9241  013848  0E00               	movlw	0
  9242  01384A  0100               	movlb	0	; () banked
  9243  01384C  6F83               	movwf	___flmul@a& (0+255),b
  9244  01384E  0E00               	movlw	0
  9245  013850  6F84               	movwf	(___flmul@a+1)& (0+255),b
  9246  013852  0E00               	movlw	0
  9247  013854  6F85               	movwf	(___flmul@a+2)& (0+255),b
  9248  013856  0E00               	movlw	0
  9249  013858  6F86               	movwf	(___flmul@a+3)& (0+255),b
  9250  01385A                     l7974:
  9251                           
  9252                           ; BSR set to: 0
  9253  01385A  0100               	movlb	0	; () banked
  9254  01385C  8F85               	bsf	(___flmul@a+2)& (0+255),7,b
  9255  01385E  D009               	goto	l1596
  9256  013860                     l7976:
  9257                           
  9258                           ; BSR set to: 0
  9259  013860  0E00               	movlw	0
  9260  013862  0100               	movlb	0	; () banked
  9261  013864  6F83               	movwf	___flmul@a& (0+255),b
  9262  013866  0E00               	movlw	0
  9263  013868  6F84               	movwf	(___flmul@a+1)& (0+255),b
  9264  01386A  0E00               	movlw	0
  9265  01386C  6F85               	movwf	(___flmul@a+2)& (0+255),b
  9266  01386E  0E00               	movlw	0
  9267  013870  6F86               	movwf	(___flmul@a+3)& (0+255),b
  9268  013872                     l1596:
  9269                           
  9270                           ; BSR set to: 0
  9271  013872  0100               	movlb	0	; () banked
  9272  013874  518C               	movf	___flmul@aexp& (0+255),w,b
  9273  013876  0100               	movlb	0	; () banked
  9274  013878  B4D8               	btfsc	status,2,c
  9275  01387A  D005               	goto	l7980
  9276                           
  9277                           ; BSR set to: 0
  9278  01387C  0100               	movlb	0	; () banked
  9279  01387E  5191               	movf	___flmul@bexp& (0+255),w,b
  9280  013880  0100               	movlb	0	; () banked
  9281  013882  A4D8               	btfss	status,2,c
  9282  013884  D00A               	goto	l7984
  9283  013886                     l7980:
  9284                           
  9285                           ; BSR set to: 0
  9286  013886  0E00               	movlw	0
  9287  013888  0100               	movlb	0	; () banked
  9288  01388A  6F7F               	movwf	?___flmul& (0+255),b
  9289  01388C  0E00               	movlw	0
  9290  01388E  6F80               	movwf	(?___flmul+1)& (0+255),b
  9291  013890  0E00               	movlw	0
  9292  013892  6F81               	movwf	(?___flmul+2)& (0+255),b
  9293  013894  0E00               	movlw	0
  9294  013896  6F82               	movwf	(?___flmul+3)& (0+255),b
  9295                           
  9296                           ; BSR set to: 0
  9297  013898  0012               	return	
  9298  01389A                     l7984:
  9299                           
  9300                           ; BSR set to: 0
  9301  01389A  0100               	movlb	0	; () banked
  9302  01389C  5185               	movf	(___flmul@a+2)& (0+255),w,b
  9303  01389E  0100               	movlb	0	; () banked
  9304  0138A0  037F               	mulwf	___flmul@b& (0+255),b
  9305  0138A2  CFF3 F096          	movff	prodl,___flmul@temp
  9306  0138A6  CFF4 F097          	movff	prodh,___flmul@temp+1
  9307                           
  9308                           ; BSR set to: 0
  9309  0138AA  0100               	movlb	0	; () banked
  9310  0138AC  5196               	movf	___flmul@temp& (0+255),w,b
  9311  0138AE  0100               	movlb	0	; () banked
  9312  0138B0  6F8D               	movwf	___flmul@grs& (0+255),b
  9313  0138B2  6B8E               	clrf	(___flmul@grs+1)& (0+255),b
  9314  0138B4  6B8F               	clrf	(___flmul@grs+2)& (0+255),b
  9315  0138B6  6B90               	clrf	(___flmul@grs+3)& (0+255),b
  9316                           
  9317                           ; BSR set to: 0
  9318  0138B8  0100               	movlb	0	; () banked
  9319  0138BA  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9320  0138BC  0100               	movlb	0	; () banked
  9321  0138BE  6F92               	movwf	___flmul@prod& (0+255),b
  9322  0138C0  6B93               	clrf	(___flmul@prod+1)& (0+255),b
  9323  0138C2  6B94               	clrf	(___flmul@prod+2)& (0+255),b
  9324  0138C4  6B95               	clrf	(___flmul@prod+3)& (0+255),b
  9325  0138C6  0100               	movlb	0	; () banked
  9326  0138C8  5184               	movf	(___flmul@a+1)& (0+255),w,b
  9327  0138CA  0100               	movlb	0	; () banked
  9328  0138CC  0380               	mulwf	(___flmul@b+1)& (0+255),b
  9329  0138CE  CFF3 F096          	movff	prodl,___flmul@temp
  9330  0138D2  CFF4 F097          	movff	prodh,___flmul@temp+1
  9331                           
  9332                           ; BSR set to: 0
  9333  0138D6  0100               	movlb	0	; () banked
  9334  0138D8  5196               	movf	___flmul@temp& (0+255),w,b
  9335  0138DA  0100               	movlb	0	; () banked
  9336  0138DC  278D               	addwf	___flmul@grs& (0+255),f,b
  9337  0138DE  0E00               	movlw	0
  9338  0138E0  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9339  0138E2  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9340  0138E4  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9341                           
  9342                           ; BSR set to: 0
  9343  0138E6  0100               	movlb	0	; () banked
  9344  0138E8  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9345  0138EA  0100               	movlb	0	; () banked
  9346  0138EC  2792               	addwf	___flmul@prod& (0+255),f,b
  9347  0138EE  0E00               	movlw	0
  9348  0138F0  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9349  0138F2  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9350  0138F4  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9351  0138F6  0100               	movlb	0	; () banked
  9352  0138F8  5183               	movf	___flmul@a& (0+255),w,b
  9353  0138FA  0100               	movlb	0	; () banked
  9354  0138FC  0381               	mulwf	(___flmul@b+2)& (0+255),b
  9355  0138FE  CFF3 F096          	movff	prodl,___flmul@temp
  9356  013902  CFF4 F097          	movff	prodh,___flmul@temp+1
  9357                           
  9358                           ; BSR set to: 0
  9359  013906  0100               	movlb	0	; () banked
  9360  013908  5196               	movf	___flmul@temp& (0+255),w,b
  9361  01390A  0100               	movlb	0	; () banked
  9362  01390C  278D               	addwf	___flmul@grs& (0+255),f,b
  9363  01390E  0E00               	movlw	0
  9364  013910  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9365  013912  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9366  013914  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9367                           
  9368                           ; BSR set to: 0
  9369  013916  0100               	movlb	0	; () banked
  9370  013918  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9371  01391A  0100               	movlb	0	; () banked
  9372  01391C  2792               	addwf	___flmul@prod& (0+255),f,b
  9373  01391E  0E00               	movlw	0
  9374  013920  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9375  013922  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9376  013924  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9377                           
  9378                           ; BSR set to: 0
  9379  013926  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
  9380  01392A  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
  9381  01392E  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
  9382  013932  0100               	movlb	0	; () banked
  9383  013934  6B8D               	clrf	___flmul@grs& (0+255),b
  9384                           
  9385                           ; BSR set to: 0
  9386  013936  0100               	movlb	0	; () banked
  9387  013938  5183               	movf	___flmul@a& (0+255),w,b
  9388  01393A  0100               	movlb	0	; () banked
  9389  01393C  0380               	mulwf	(___flmul@b+1)& (0+255),b
  9390  01393E  CFF3 F096          	movff	prodl,___flmul@temp
  9391  013942  CFF4 F097          	movff	prodh,___flmul@temp+1
  9392                           
  9393                           ; BSR set to: 0
  9394  013946  0100               	movlb	0	; () banked
  9395  013948  5196               	movf	___flmul@temp& (0+255),w,b
  9396  01394A  0100               	movlb	0	; () banked
  9397  01394C  278D               	addwf	___flmul@grs& (0+255),f,b
  9398  01394E  0100               	movlb	0	; () banked
  9399  013950  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9400  013952  0100               	movlb	0	; () banked
  9401  013954  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9402  013956  0E00               	movlw	0
  9403  013958  0100               	movlb	0	; () banked
  9404  01395A  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9405  01395C  0E00               	movlw	0
  9406  01395E  0100               	movlb	0	; () banked
  9407  013960  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9408                           
  9409                           ; BSR set to: 0
  9410  013962  0100               	movlb	0	; () banked
  9411  013964  5184               	movf	(___flmul@a+1)& (0+255),w,b
  9412  013966  0100               	movlb	0	; () banked
  9413  013968  037F               	mulwf	___flmul@b& (0+255),b
  9414  01396A  CFF3 F096          	movff	prodl,___flmul@temp
  9415  01396E  CFF4 F097          	movff	prodh,___flmul@temp+1
  9416                           
  9417                           ; BSR set to: 0
  9418  013972  0100               	movlb	0	; () banked
  9419  013974  5196               	movf	___flmul@temp& (0+255),w,b
  9420  013976  0100               	movlb	0	; () banked
  9421  013978  278D               	addwf	___flmul@grs& (0+255),f,b
  9422  01397A  0100               	movlb	0	; () banked
  9423  01397C  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9424  01397E  0100               	movlb	0	; () banked
  9425  013980  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9426  013982  0E00               	movlw	0
  9427  013984  0100               	movlb	0	; () banked
  9428  013986  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9429  013988  0E00               	movlw	0
  9430  01398A  0100               	movlb	0	; () banked
  9431  01398C  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9432                           
  9433                           ; BSR set to: 0
  9434  01398E  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
  9435  013992  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
  9436  013996  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
  9437  01399A  0100               	movlb	0	; () banked
  9438  01399C  6B8D               	clrf	___flmul@grs& (0+255),b
  9439  01399E  0100               	movlb	0	; () banked
  9440  0139A0  5183               	movf	___flmul@a& (0+255),w,b
  9441  0139A2  0100               	movlb	0	; () banked
  9442  0139A4  037F               	mulwf	___flmul@b& (0+255),b
  9443  0139A6  CFF3 F096          	movff	prodl,___flmul@temp
  9444  0139AA  CFF4 F097          	movff	prodh,___flmul@temp+1
  9445                           
  9446                           ; BSR set to: 0
  9447  0139AE  0100               	movlb	0	; () banked
  9448  0139B0  5196               	movf	___flmul@temp& (0+255),w,b
  9449  0139B2  0100               	movlb	0	; () banked
  9450  0139B4  278D               	addwf	___flmul@grs& (0+255),f,b
  9451  0139B6  0100               	movlb	0	; () banked
  9452  0139B8  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9453  0139BA  0100               	movlb	0	; () banked
  9454  0139BC  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  9455  0139BE  0E00               	movlw	0
  9456  0139C0  0100               	movlb	0	; () banked
  9457  0139C2  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  9458  0139C4  0E00               	movlw	0
  9459  0139C6  0100               	movlb	0	; () banked
  9460  0139C8  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
  9461                           
  9462                           ; BSR set to: 0
  9463  0139CA  0100               	movlb	0	; () banked
  9464  0139CC  5185               	movf	(___flmul@a+2)& (0+255),w,b
  9465  0139CE  0100               	movlb	0	; () banked
  9466  0139D0  0380               	mulwf	(___flmul@b+1)& (0+255),b
  9467  0139D2  CFF3 F096          	movff	prodl,___flmul@temp
  9468  0139D6  CFF4 F097          	movff	prodh,___flmul@temp+1
  9469  0139DA  0100               	movlb	0	; () banked
  9470  0139DC  5196               	movf	___flmul@temp& (0+255),w,b
  9471  0139DE  0100               	movlb	0	; () banked
  9472  0139E0  2792               	addwf	___flmul@prod& (0+255),f,b
  9473  0139E2  0100               	movlb	0	; () banked
  9474  0139E4  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9475  0139E6  0100               	movlb	0	; () banked
  9476  0139E8  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9477  0139EA  0E00               	movlw	0
  9478  0139EC  0100               	movlb	0	; () banked
  9479  0139EE  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9480  0139F0  0E00               	movlw	0
  9481  0139F2  0100               	movlb	0	; () banked
  9482  0139F4  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9483                           
  9484                           ; BSR set to: 0
  9485  0139F6  0100               	movlb	0	; () banked
  9486  0139F8  5184               	movf	(___flmul@a+1)& (0+255),w,b
  9487  0139FA  0100               	movlb	0	; () banked
  9488  0139FC  0381               	mulwf	(___flmul@b+2)& (0+255),b
  9489  0139FE  CFF3 F096          	movff	prodl,___flmul@temp
  9490  013A02  CFF4 F097          	movff	prodh,___flmul@temp+1
  9491                           
  9492                           ; BSR set to: 0
  9493  013A06  0100               	movlb	0	; () banked
  9494  013A08  5196               	movf	___flmul@temp& (0+255),w,b
  9495  013A0A  0100               	movlb	0	; () banked
  9496  013A0C  2792               	addwf	___flmul@prod& (0+255),f,b
  9497  013A0E  0100               	movlb	0	; () banked
  9498  013A10  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9499  013A12  0100               	movlb	0	; () banked
  9500  013A14  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9501  013A16  0E00               	movlw	0
  9502  013A18  0100               	movlb	0	; () banked
  9503  013A1A  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9504  013A1C  0E00               	movlw	0
  9505  013A1E  0100               	movlb	0	; () banked
  9506  013A20  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9507  013A22  0100               	movlb	0	; () banked
  9508  013A24  5185               	movf	(___flmul@a+2)& (0+255),w,b
  9509  013A26  0100               	movlb	0	; () banked
  9510  013A28  0381               	mulwf	(___flmul@b+2)& (0+255),b
  9511  013A2A  CFF3 F096          	movff	prodl,___flmul@temp
  9512  013A2E  CFF4 F097          	movff	prodh,___flmul@temp+1
  9513                           
  9514                           ; BSR set to: 0
  9515  013A32  0100               	movlb	0	; () banked
  9516  013A34  5196               	movf	___flmul@temp& (0+255),w,b
  9517  013A36  0100               	movlb	0	; () banked
  9518  013A38  6F87               	movwf	??___flmul& (0+255),b
  9519  013A3A  0100               	movlb	0	; () banked
  9520  013A3C  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9521  013A3E  0100               	movlb	0	; () banked
  9522  013A40  6F88               	movwf	(??___flmul+1)& (0+255),b
  9523  013A42  0100               	movlb	0	; () banked
  9524  013A44  6B89               	clrf	(??___flmul+2)& (0+255),b
  9525  013A46  0100               	movlb	0	; () banked
  9526  013A48  6B8A               	clrf	(??___flmul+3)& (0+255),b
  9527  013A4A  C089  F08A         	movff	??___flmul+2,??___flmul+3
  9528  013A4E  C088  F089         	movff	??___flmul+1,??___flmul+2
  9529  013A52  C087  F088         	movff	??___flmul,??___flmul+1
  9530  013A56  0100               	movlb	0	; () banked
  9531  013A58  6B87               	clrf	??___flmul& (0+255),b
  9532  013A5A  0100               	movlb	0	; () banked
  9533  013A5C  5187               	movf	??___flmul& (0+255),w,b
  9534  013A5E  0100               	movlb	0	; () banked
  9535  013A60  2792               	addwf	___flmul@prod& (0+255),f,b
  9536  013A62  0100               	movlb	0	; () banked
  9537  013A64  5188               	movf	(??___flmul+1)& (0+255),w,b
  9538  013A66  0100               	movlb	0	; () banked
  9539  013A68  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9540  013A6A  0100               	movlb	0	; () banked
  9541  013A6C  5189               	movf	(??___flmul+2)& (0+255),w,b
  9542  013A6E  0100               	movlb	0	; () banked
  9543  013A70  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9544  013A72  0100               	movlb	0	; () banked
  9545  013A74  518A               	movf	(??___flmul+3)& (0+255),w,b
  9546  013A76  0100               	movlb	0	; () banked
  9547  013A78  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9548                           
  9549                           ; BSR set to: 0
  9550  013A7A  C08D  F087         	movff	___flmul@grs,??___flmul
  9551  013A7E  C08E  F088         	movff	___flmul@grs+1,??___flmul+1
  9552  013A82  C08F  F089         	movff	___flmul@grs+2,??___flmul+2
  9553  013A86  C090  F08A         	movff	___flmul@grs+3,??___flmul+3
  9554  013A8A  0E19               	movlw	25
  9555  013A8C  D006               	goto	u10660
  9556  013A8E                     u10665:
  9557  013A8E  0100               	movlb	0	; () banked
  9558  013A90  90D8               	bcf	status,0,c
  9559  013A92  338A               	rrcf	(??___flmul+3)& (0+255),f,b
  9560  013A94  3389               	rrcf	(??___flmul+2)& (0+255),f,b
  9561  013A96  3388               	rrcf	(??___flmul+1)& (0+255),f,b
  9562  013A98  3387               	rrcf	??___flmul& (0+255),f,b
  9563  013A9A                     u10660:
  9564  013A9A  2EE8               	decfsz	wreg,f,c
  9565  013A9C  D7F8               	goto	u10665
  9566  013A9E  0100               	movlb	0	; () banked
  9567  013AA0  5187               	movf	??___flmul& (0+255),w,b
  9568  013AA2  0100               	movlb	0	; () banked
  9569  013AA4  2792               	addwf	___flmul@prod& (0+255),f,b
  9570  013AA6  0100               	movlb	0	; () banked
  9571  013AA8  5188               	movf	(??___flmul+1)& (0+255),w,b
  9572  013AAA  0100               	movlb	0	; () banked
  9573  013AAC  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9574  013AAE  0100               	movlb	0	; () banked
  9575  013AB0  5189               	movf	(??___flmul+2)& (0+255),w,b
  9576  013AB2  0100               	movlb	0	; () banked
  9577  013AB4  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9578  013AB6  0100               	movlb	0	; () banked
  9579  013AB8  518A               	movf	(??___flmul+3)& (0+255),w,b
  9580  013ABA  0100               	movlb	0	; () banked
  9581  013ABC  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9582                           
  9583                           ; BSR set to: 0
  9584  013ABE  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
  9585  013AC2  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
  9586  013AC6  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
  9587  013ACA  0100               	movlb	0	; () banked
  9588  013ACC  6B8D               	clrf	___flmul@grs& (0+255),b
  9589                           
  9590                           ; BSR set to: 0
  9591  013ACE  0100               	movlb	0	; () banked
  9592  013AD0  518C               	movf	___flmul@aexp& (0+255),w,b
  9593  013AD2  C091  F087         	movff	___flmul@bexp,??___flmul
  9594  013AD6  0100               	movlb	0	; () banked
  9595  013AD8  6B88               	clrf	(??___flmul+1)& (0+255),b
  9596  013ADA  0100               	movlb	0	; () banked
  9597  013ADC  2787               	addwf	??___flmul& (0+255),f,b
  9598  013ADE  0E00               	movlw	0
  9599  013AE0  2388               	addwfc	(??___flmul+1)& (0+255),f,b
  9600  013AE2  0E82               	movlw	130
  9601  013AE4  0100               	movlb	0	; () banked
  9602  013AE6  2587               	addwf	??___flmul& (0+255),w,b
  9603  013AE8  0100               	movlb	0	; () banked
  9604  013AEA  6F96               	movwf	___flmul@temp& (0+255),b
  9605  013AEC  0EFF               	movlw	255
  9606  013AEE  0100               	movlb	0	; () banked
  9607  013AF0  2188               	addwfc	(??___flmul+1)& (0+255),w,b
  9608  013AF2  0100               	movlb	0	; () banked
  9609  013AF4  6F97               	movwf	(___flmul@temp+1)& (0+255),b
  9610  013AF6  D015               	goto	l8032
  9611  013AF8                     l8026:
  9612                           
  9613                           ; BSR set to: 0
  9614  013AF8  0100               	movlb	0	; () banked
  9615  013AFA  90D8               	bcf	status,0,c
  9616  013AFC  3792               	rlcf	___flmul@prod& (0+255),f,b
  9617  013AFE  3793               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9618  013B00  3794               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9619  013B02  3795               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9620                           
  9621                           ; BSR set to: 0
  9622  013B04  0100               	movlb	0	; () banked
  9623  013B06  AF90               	btfss	(___flmul@grs+3)& (0+255),7,b
  9624  013B08  D002               	goto	l1603
  9625                           
  9626                           ; BSR set to: 0
  9627  013B0A  0100               	movlb	0	; () banked
  9628  013B0C  8192               	bsf	___flmul@prod& (0+255),0,b
  9629  013B0E                     l1603:
  9630                           
  9631                           ; BSR set to: 0
  9632  013B0E  0100               	movlb	0	; () banked
  9633  013B10  90D8               	bcf	status,0,c
  9634  013B12  378D               	rlcf	___flmul@grs& (0+255),f,b
  9635  013B14  378E               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9636  013B16  378F               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9637  013B18  3790               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9638  013B1A  0100               	movlb	0	; () banked
  9639  013B1C  0796               	decf	___flmul@temp& (0+255),f,b
  9640  013B1E  A0D8               	btfss	status,0,c
  9641  013B20  0797               	decf	(___flmul@temp+1)& (0+255),f,b
  9642  013B22                     l8032:
  9643                           
  9644                           ; BSR set to: 0
  9645  013B22  0100               	movlb	0	; () banked
  9646  013B24  AF94               	btfss	(___flmul@prod+2)& (0+255),7,b
  9647  013B26  D7E8               	goto	l8026
  9648                           
  9649                           ; BSR set to: 0
  9650                           
  9651                           ; BSR set to: 0
  9652  013B28  0E00               	movlw	0
  9653  013B2A  0100               	movlb	0	; () banked
  9654  013B2C  6F8C               	movwf	___flmul@aexp& (0+255),b
  9655                           
  9656                           ; BSR set to: 0
  9657  013B2E  0100               	movlb	0	; () banked
  9658  013B30  AF90               	btfss	(___flmul@grs+3)& (0+255),7,b
  9659  013B32  D024               	goto	l1605
  9660                           
  9661                           ; BSR set to: 0
  9662  013B34  0EFF               	movlw	255
  9663  013B36  0100               	movlb	0	; () banked
  9664  013B38  158D               	andwf	___flmul@grs& (0+255),w,b
  9665  013B3A  0100               	movlb	0	; () banked
  9666  013B3C  6F87               	movwf	??___flmul& (0+255),b
  9667  013B3E  0EFF               	movlw	255
  9668  013B40  0100               	movlb	0	; () banked
  9669  013B42  158E               	andwf	(___flmul@grs+1)& (0+255),w,b
  9670  013B44  0100               	movlb	0	; () banked
  9671  013B46  6F88               	movwf	(??___flmul+1)& (0+255),b
  9672  013B48  0EFF               	movlw	255
  9673  013B4A  0100               	movlb	0	; () banked
  9674  013B4C  158F               	andwf	(___flmul@grs+2)& (0+255),w,b
  9675  013B4E  0100               	movlb	0	; () banked
  9676  013B50  6F89               	movwf	(??___flmul+2)& (0+255),b
  9677  013B52  0E7F               	movlw	127
  9678  013B54  0100               	movlb	0	; () banked
  9679  013B56  1590               	andwf	(___flmul@grs+3)& (0+255),w,b
  9680  013B58  0100               	movlb	0	; () banked
  9681  013B5A  6F8A               	movwf	(??___flmul+3)& (0+255),b
  9682  013B5C  0100               	movlb	0	; () banked
  9683  013B5E  5187               	movf	??___flmul& (0+255),w,b
  9684  013B60  0100               	movlb	0	; () banked
  9685  013B62  1188               	iorwf	(??___flmul+1)& (0+255),w,b
  9686  013B64  0100               	movlb	0	; () banked
  9687  013B66  1189               	iorwf	(??___flmul+2)& (0+255),w,b
  9688  013B68  0100               	movlb	0	; () banked
  9689  013B6A  118A               	iorwf	(??___flmul+3)& (0+255),w,b
  9690  013B6C  A4D8               	btfss	status,2,c
  9691  013B6E  D003               	goto	l8042
  9692                           
  9693                           ; BSR set to: 0
  9694                           
  9695                           ; BSR set to: 0
  9696  013B70  0100               	movlb	0	; () banked
  9697  013B72  A192               	btfss	___flmul@prod& (0+255),0,b
  9698  013B74  D003               	goto	l1605
  9699  013B76                     l8042:
  9700                           
  9701                           ; BSR set to: 0
  9702  013B76  0E01               	movlw	1
  9703  013B78  0100               	movlb	0	; () banked
  9704  013B7A  6F8C               	movwf	___flmul@aexp& (0+255),b
  9705  013B7C                     l1605:
  9706                           
  9707                           ; BSR set to: 0
  9708  013B7C  0100               	movlb	0	; () banked
  9709  013B7E  518C               	movf	___flmul@aexp& (0+255),w,b
  9710  013B80  0100               	movlb	0	; () banked
  9711  013B82  B4D8               	btfsc	status,2,c
  9712  013B84  D023               	goto	l8052
  9713                           
  9714                           ; BSR set to: 0
  9715  013B86  0E01               	movlw	1
  9716  013B88  0100               	movlb	0	; () banked
  9717  013B8A  2792               	addwf	___flmul@prod& (0+255),f,b
  9718  013B8C  0E00               	movlw	0
  9719  013B8E  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9720  013B90  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9721  013B92  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9722                           
  9723                           ; BSR set to: 0
  9724  013B94  0100               	movlb	0	; () banked
  9725  013B96  A195               	btfss	(___flmul@prod+3)& (0+255),0,b
  9726  013B98  D019               	goto	l8052
  9727                           
  9728                           ; BSR set to: 0
  9729  013B9A  C092  F087         	movff	___flmul@prod,??___flmul
  9730  013B9E  C093  F088         	movff	___flmul@prod+1,??___flmul+1
  9731  013BA2  C094  F089         	movff	___flmul@prod+2,??___flmul+2
  9732  013BA6  C095  F08A         	movff	___flmul@prod+3,??___flmul+3
  9733  013BAA  0100               	movlb	0	; () banked
  9734  013BAC  358A               	rlcf	(??___flmul+3)& (0+255),w,b
  9735  013BAE  338A               	rrcf	(??___flmul+3)& (0+255),f,b
  9736  013BB0  3389               	rrcf	(??___flmul+2)& (0+255),f,b
  9737  013BB2  3388               	rrcf	(??___flmul+1)& (0+255),f,b
  9738  013BB4  3387               	rrcf	??___flmul& (0+255),f,b
  9739  013BB6  C087  F092         	movff	??___flmul,___flmul@prod
  9740  013BBA  C088  F093         	movff	??___flmul+1,___flmul@prod+1
  9741  013BBE  C089  F094         	movff	??___flmul+2,___flmul@prod+2
  9742  013BC2  C08A  F095         	movff	??___flmul+3,___flmul@prod+3
  9743                           
  9744                           ; BSR set to: 0
  9745  013BC6  0100               	movlb	0	; () banked
  9746  013BC8  4B96               	infsnz	___flmul@temp& (0+255),f,b
  9747  013BCA  2B97               	incf	(___flmul@temp+1)& (0+255),f,b
  9748  013BCC                     l8052:
  9749                           
  9750                           ; BSR set to: 0
  9751  013BCC  0100               	movlb	0	; () banked
  9752  013BCE  BF97               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9753  013BD0  D010               	goto	l8056
  9754  013BD2  0100               	movlb	0	; () banked
  9755  013BD4  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9756  013BD6  E104               	bnz	u10740
  9757  013BD8  0100               	movlb	0	; () banked
  9758  013BDA  2996               	incf	___flmul@temp& (0+255),w,b
  9759  013BDC  A0D8               	btfss	status,0,c
  9760  013BDE  D009               	goto	l8056
  9761  013BE0                     u10740:
  9762                           
  9763                           ; BSR set to: 0
  9764  013BE0  0E00               	movlw	0
  9765  013BE2  0100               	movlb	0	; () banked
  9766  013BE4  6F92               	movwf	___flmul@prod& (0+255),b
  9767  013BE6  0E00               	movlw	0
  9768  013BE8  6F93               	movwf	(___flmul@prod+1)& (0+255),b
  9769  013BEA  0E80               	movlw	128
  9770  013BEC  6F94               	movwf	(___flmul@prod+2)& (0+255),b
  9771  013BEE  0E7F               	movlw	127
  9772  013BF0  D02B               	goto	L10
  9773  013BF2                     l8056:
  9774                           
  9775                           ; BSR set to: 0
  9776  013BF2  0100               	movlb	0	; () banked
  9777  013BF4  BF97               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9778  013BF6  D007               	goto	l8058
  9779  013BF8  0100               	movlb	0	; () banked
  9780  013BFA  5197               	movf	(___flmul@temp+1)& (0+255),w,b
  9781  013BFC  E111               	bnz	l1613
  9782  013BFE  0100               	movlb	0	; () banked
  9783  013C00  0596               	decf	___flmul@temp& (0+255),w,b
  9784  013C02  B0D8               	btfsc	status,0,c
  9785  013C04  D00D               	goto	l1613
  9786  013C06                     l8058:
  9787                           
  9788                           ; BSR set to: 0
  9789  013C06  0E00               	movlw	0
  9790  013C08  0100               	movlb	0	; () banked
  9791  013C0A  6F92               	movwf	___flmul@prod& (0+255),b
  9792  013C0C  0E00               	movlw	0
  9793  013C0E  6F93               	movwf	(___flmul@prod+1)& (0+255),b
  9794  013C10  0E00               	movlw	0
  9795  013C12  6F94               	movwf	(___flmul@prod+2)& (0+255),b
  9796  013C14  0E00               	movlw	0
  9797  013C16  6F95               	movwf	(___flmul@prod+3)& (0+255),b
  9798  013C18  0E00               	movlw	0
  9799  013C1A  0100               	movlb	0	; () banked
  9800  013C1C  6F8B               	movwf	___flmul@sign& (0+255),b
  9801  013C1E  D015               	goto	l8068
  9802  013C20                     l1613:
  9803                           
  9804                           ; BSR set to: 0
  9805  013C20  C096  F091         	movff	___flmul@temp,___flmul@bexp
  9806                           
  9807                           ; BSR set to: 0
  9808  013C24  0EFF               	movlw	255
  9809  013C26  0100               	movlb	0	; () banked
  9810  013C28  1792               	andwf	___flmul@prod& (0+255),f,b
  9811  013C2A  0EFF               	movlw	255
  9812  013C2C  1793               	andwf	(___flmul@prod+1)& (0+255),f,b
  9813  013C2E  0E7F               	movlw	127
  9814  013C30  1794               	andwf	(___flmul@prod+2)& (0+255),f,b
  9815  013C32  0E00               	movlw	0
  9816  013C34  1795               	andwf	(___flmul@prod+3)& (0+255),f,b
  9817                           
  9818                           ; BSR set to: 0
  9819  013C36  0100               	movlb	0	; () banked
  9820  013C38  A191               	btfss	___flmul@bexp& (0+255),0,b
  9821  013C3A  D002               	goto	l8066
  9822                           
  9823                           ; BSR set to: 0
  9824  013C3C  0100               	movlb	0	; () banked
  9825  013C3E  8F94               	bsf	(___flmul@prod+2)& (0+255),7,b
  9826  013C40                     l8066:
  9827                           
  9828                           ; BSR set to: 0
  9829  013C40  0100               	movlb	0	; () banked
  9830  013C42  90D8               	bcf	status,0,c
  9831  013C44  3191               	rrcf	___flmul@bexp& (0+255),w,b
  9832  013C46  0100               	movlb	0	; () banked
  9833  013C48                     L10:
  9834  013C48  6F95               	movwf	(___flmul@prod+3)& (0+255),b
  9835  013C4A                     l8068:
  9836                           
  9837                           ; BSR set to: 0
  9838  013C4A  0100               	movlb	0	; () banked
  9839  013C4C  518B               	movf	___flmul@sign& (0+255),w,b
  9840  013C4E  0100               	movlb	0	; () banked
  9841  013C50  1395               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9842                           
  9843                           ; BSR set to: 0
  9844  013C52  C092  F07F         	movff	___flmul@prod,?___flmul
  9845  013C56  C093  F080         	movff	___flmul@prod+1,?___flmul+1
  9846  013C5A  C094  F081         	movff	___flmul@prod+2,?___flmul+2
  9847  013C5E  C095  F082         	movff	___flmul@prod+3,?___flmul+3
  9848  013C62  0012               	return	
  9849  013C64                     __end_of___flmul:
  9850                           	opt stack 0
  9851                           tblptru	equ	0xFF8
  9852                           tblptrh	equ	0xFF7
  9853                           tblptrl	equ	0xFF6
  9854                           tablat	equ	0xFF5
  9855                           prodh	equ	0xFF4
  9856                           prodl	equ	0xFF3
  9857                           intcon	equ	0xFF2
  9858                           postinc0	equ	0xFEE
  9859                           wreg	equ	0xFE8
  9860                           indf2	equ	0xFDF
  9861                           postinc2	equ	0xFDE
  9862                           fsr2h	equ	0xFDA
  9863                           fsr2l	equ	0xFD9
  9864                           status	equ	0xFD8
  9865                           
  9866 ;; *************** function ___awmod *****************
  9867 ;; Defined at:
  9868 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  9869 ;; Parameters:    Size  Location     Type
  9870 ;;  dividend        2   17[BANK0 ] int 
  9871 ;;  divisor         2   19[BANK0 ] int 
  9872 ;; Auto vars:     Size  Location     Type
  9873 ;;  sign            1   22[BANK0 ] unsigned char 
  9874 ;;  counter         1   21[BANK0 ] unsigned char 
  9875 ;; Return value:  Size  Location     Type
  9876 ;;                  2   17[BANK0 ] int 
  9877 ;; Registers used:
  9878 ;;		wreg, status,2, status,0
  9879 ;; Tracked objects:
  9880 ;;		On entry : 0/0
  9881 ;;		On exit  : 0/0
  9882 ;;		Unchanged: 0/0
  9883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9884 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9885 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9887 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9888 ;;Total ram usage:        6 bytes
  9889 ;; Hardware stack levels used:    1
  9890 ;; Hardware stack levels required when called:    3
  9891 ;; This function calls:
  9892 ;;		Nothing
  9893 ;; This function is called by:
  9894 ;;		_fround
  9895 ;;		_scale
  9896 ;; This function uses a non-reentrant model
  9897 ;;
  9898                           
  9899                           	psect	text14
  9900  015BF8                     __ptext14:
  9901                           	opt stack 0
  9902  015BF8                     ___awmod:
  9903                           	opt stack 24
  9904                           
  9905                           ; BSR set to: 0
  9906                           ;incstack = 0
  9907  015BF8  0E00               	movlw	0
  9908  015BFA  0100               	movlb	0	; () banked
  9909  015BFC  6F76               	movwf	___awmod@sign& (0+255),b
  9910                           
  9911                           ; BSR set to: 0
  9912  015BFE  0100               	movlb	0	; () banked
  9913  015C00  AF72               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9914  015C02  D008               	goto	l8126
  9915                           
  9916                           ; BSR set to: 0
  9917  015C04  0100               	movlb	0	; () banked
  9918  015C06  6D71               	negf	___awmod@dividend& (0+255),b
  9919  015C08  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
  9920  015C0A  B0D8               	btfsc	status,0,c
  9921  015C0C  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
  9922                           
  9923                           ; BSR set to: 0
  9924  015C0E  0E01               	movlw	1
  9925  015C10  0100               	movlb	0	; () banked
  9926  015C12  6F76               	movwf	___awmod@sign& (0+255),b
  9927  015C14                     l8126:
  9928                           
  9929                           ; BSR set to: 0
  9930  015C14  0100               	movlb	0	; () banked
  9931  015C16  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9932  015C18  D005               	goto	l8130
  9933                           
  9934                           ; BSR set to: 0
  9935  015C1A  0100               	movlb	0	; () banked
  9936  015C1C  6D73               	negf	___awmod@divisor& (0+255),b
  9937  015C1E  1F74               	comf	(___awmod@divisor+1)& (0+255),f,b
  9938  015C20  B0D8               	btfsc	status,0,c
  9939  015C22  2B74               	incf	(___awmod@divisor+1)& (0+255),f,b
  9940  015C24                     l8130:
  9941                           
  9942                           ; BSR set to: 0
  9943  015C24  0100               	movlb	0	; () banked
  9944  015C26  5173               	movf	___awmod@divisor& (0+255),w,b
  9945  015C28  0100               	movlb	0	; () banked
  9946  015C2A  1174               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9947  015C2C  B4D8               	btfsc	status,2,c
  9948  015C2E  D026               	goto	l8146
  9949                           
  9950                           ; BSR set to: 0
  9951  015C30  0E01               	movlw	1
  9952  015C32  0100               	movlb	0	; () banked
  9953  015C34  6F75               	movwf	___awmod@counter& (0+255),b
  9954  015C36  D006               	goto	l8136
  9955  015C38                     l8134:
  9956                           
  9957                           ; BSR set to: 0
  9958  015C38  0100               	movlb	0	; () banked
  9959  015C3A  90D8               	bcf	status,0,c
  9960  015C3C  3773               	rlcf	___awmod@divisor& (0+255),f,b
  9961  015C3E  3774               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9962  015C40  0100               	movlb	0	; () banked
  9963  015C42  2B75               	incf	___awmod@counter& (0+255),f,b
  9964  015C44                     l8136:
  9965                           
  9966                           ; BSR set to: 0
  9967  015C44  0100               	movlb	0	; () banked
  9968  015C46  AF74               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9969  015C48  D7F7               	goto	l8134
  9970  015C4A                     l8138:
  9971                           
  9972                           ; BSR set to: 0
  9973  015C4A  0100               	movlb	0	; () banked
  9974  015C4C  5173               	movf	___awmod@divisor& (0+255),w,b
  9975  015C4E  0100               	movlb	0	; () banked
  9976  015C50  5D71               	subwf	___awmod@dividend& (0+255),w,b
  9977  015C52  0100               	movlb	0	; () banked
  9978  015C54  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
  9979  015C56  0100               	movlb	0	; () banked
  9980  015C58  5972               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9981  015C5A  A0D8               	btfss	status,0,c
  9982  015C5C  D008               	goto	l8142
  9983                           
  9984                           ; BSR set to: 0
  9985  015C5E  0100               	movlb	0	; () banked
  9986  015C60  5173               	movf	___awmod@divisor& (0+255),w,b
  9987  015C62  0100               	movlb	0	; () banked
  9988  015C64  5F71               	subwf	___awmod@dividend& (0+255),f,b
  9989  015C66  0100               	movlb	0	; () banked
  9990  015C68  5174               	movf	(___awmod@divisor+1)& (0+255),w,b
  9991  015C6A  0100               	movlb	0	; () banked
  9992  015C6C  5B72               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9993  015C6E                     l8142:
  9994                           
  9995                           ; BSR set to: 0
  9996  015C6E  0100               	movlb	0	; () banked
  9997  015C70  90D8               	bcf	status,0,c
  9998  015C72  3374               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9999  015C74  3373               	rrcf	___awmod@divisor& (0+255),f,b
 10000                           
 10001                           ; BSR set to: 0
 10002  015C76  0100               	movlb	0	; () banked
 10003  015C78  2F75               	decfsz	___awmod@counter& (0+255),f,b
 10004  015C7A  D7E7               	goto	l8138
 10005  015C7C                     l8146:
 10006                           
 10007                           ; BSR set to: 0
 10008  015C7C  0100               	movlb	0	; () banked
 10009  015C7E  5176               	movf	___awmod@sign& (0+255),w,b
 10010  015C80  0100               	movlb	0	; () banked
 10011  015C82  B4D8               	btfsc	status,2,c
 10012  015C84  D005               	goto	l8150
 10013                           
 10014                           ; BSR set to: 0
 10015  015C86  0100               	movlb	0	; () banked
 10016  015C88  6D71               	negf	___awmod@dividend& (0+255),b
 10017  015C8A  1F72               	comf	(___awmod@dividend+1)& (0+255),f,b
 10018  015C8C  B0D8               	btfsc	status,0,c
 10019  015C8E  2B72               	incf	(___awmod@dividend+1)& (0+255),f,b
 10020  015C90                     l8150:
 10021                           
 10022                           ; BSR set to: 0
 10023  015C90  C071  F071         	movff	___awmod@dividend,?___awmod
 10024  015C94  C072  F072         	movff	___awmod@dividend+1,?___awmod+1
 10025  015C98  0012               	return	
 10026  015C9A                     __end_of___awmod:
 10027                           	opt stack 0
 10028                           tblptru	equ	0xFF8
 10029                           tblptrh	equ	0xFF7
 10030                           tblptrl	equ	0xFF6
 10031                           tablat	equ	0xFF5
 10032                           prodh	equ	0xFF4
 10033                           prodl	equ	0xFF3
 10034                           intcon	equ	0xFF2
 10035                           postinc0	equ	0xFEE
 10036                           wreg	equ	0xFE8
 10037                           indf2	equ	0xFDF
 10038                           postinc2	equ	0xFDE
 10039                           fsr2h	equ	0xFDA
 10040                           fsr2l	equ	0xFD9
 10041                           status	equ	0xFD8
 10042                           
 10043 ;; *************** function ___awdiv *****************
 10044 ;; Defined at:
 10045 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 10046 ;; Parameters:    Size  Location     Type
 10047 ;;  dividend        2   23[BANK0 ] int 
 10048 ;;  divisor         2   25[BANK0 ] int 
 10049 ;; Auto vars:     Size  Location     Type
 10050 ;;  quotient        2   29[BANK0 ] int 
 10051 ;;  sign            1   28[BANK0 ] unsigned char 
 10052 ;;  counter         1   27[BANK0 ] unsigned char 
 10053 ;; Return value:  Size  Location     Type
 10054 ;;                  2   23[BANK0 ] int 
 10055 ;; Registers used:
 10056 ;;		wreg, status,2, status,0
 10057 ;; Tracked objects:
 10058 ;;		On entry : 0/0
 10059 ;;		On exit  : 0/0
 10060 ;;		Unchanged: 0/0
 10061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10062 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10063 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10065 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10066 ;;Total ram usage:        8 bytes
 10067 ;; Hardware stack levels used:    1
 10068 ;; Hardware stack levels required when called:    3
 10069 ;; This function calls:
 10070 ;;		Nothing
 10071 ;; This function is called by:
 10072 ;;		_fround
 10073 ;;		_scale
 10074 ;;		_sprintf
 10075 ;; This function uses a non-reentrant model
 10076 ;;
 10077                           
 10078                           	psect	text15
 10079  0157B4                     __ptext15:
 10080                           	opt stack 0
 10081  0157B4                     ___awdiv:
 10082                           	opt stack 24
 10083                           
 10084                           ; BSR set to: 0
 10085                           ;incstack = 0
 10086  0157B4  0E00               	movlw	0
 10087  0157B6  0100               	movlb	0	; () banked
 10088  0157B8  6F7C               	movwf	___awdiv@sign& (0+255),b
 10089                           
 10090                           ; BSR set to: 0
 10091  0157BA  0100               	movlb	0	; () banked
 10092  0157BC  AF7A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10093  0157BE  D008               	goto	l8082
 10094                           
 10095                           ; BSR set to: 0
 10096  0157C0  0100               	movlb	0	; () banked
 10097  0157C2  6D79               	negf	___awdiv@divisor& (0+255),b
 10098  0157C4  1F7A               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10099  0157C6  B0D8               	btfsc	status,0,c
 10100  0157C8  2B7A               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10101                           
 10102                           ; BSR set to: 0
 10103  0157CA  0E01               	movlw	1
 10104  0157CC  0100               	movlb	0	; () banked
 10105  0157CE  6F7C               	movwf	___awdiv@sign& (0+255),b
 10106  0157D0                     l8082:
 10107                           
 10108                           ; BSR set to: 0
 10109  0157D0  0100               	movlb	0	; () banked
 10110  0157D2  AF78               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10111  0157D4  D008               	goto	l8088
 10112                           
 10113                           ; BSR set to: 0
 10114  0157D6  0100               	movlb	0	; () banked
 10115  0157D8  6D77               	negf	___awdiv@dividend& (0+255),b
 10116  0157DA  1F78               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10117  0157DC  B0D8               	btfsc	status,0,c
 10118  0157DE  2B78               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10119                           
 10120                           ; BSR set to: 0
 10121  0157E0  0E01               	movlw	1
 10122  0157E2  0100               	movlb	0	; () banked
 10123  0157E4  1B7C               	xorwf	___awdiv@sign& (0+255),f,b
 10124  0157E6                     l8088:
 10125                           
 10126                           ; BSR set to: 0
 10127  0157E6  0E00               	movlw	0
 10128  0157E8  0100               	movlb	0	; () banked
 10129  0157EA  6F7E               	movwf	(___awdiv@quotient+1)& (0+255),b
 10130  0157EC  0E00               	movlw	0
 10131  0157EE  6F7D               	movwf	___awdiv@quotient& (0+255),b
 10132                           
 10133                           ; BSR set to: 0
 10134  0157F0  0100               	movlb	0	; () banked
 10135  0157F2  5179               	movf	___awdiv@divisor& (0+255),w,b
 10136  0157F4  0100               	movlb	0	; () banked
 10137  0157F6  117A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10138  0157F8  B4D8               	btfsc	status,2,c
 10139  0157FA  D02C               	goto	l8110
 10140                           
 10141                           ; BSR set to: 0
 10142  0157FC  0E01               	movlw	1
 10143  0157FE  0100               	movlb	0	; () banked
 10144  015800  6F7B               	movwf	___awdiv@counter& (0+255),b
 10145  015802  D006               	goto	l8096
 10146  015804                     l8094:
 10147                           
 10148                           ; BSR set to: 0
 10149  015804  0100               	movlb	0	; () banked
 10150  015806  90D8               	bcf	status,0,c
 10151  015808  3779               	rlcf	___awdiv@divisor& (0+255),f,b
 10152  01580A  377A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10153  01580C  0100               	movlb	0	; () banked
 10154  01580E  2B7B               	incf	___awdiv@counter& (0+255),f,b
 10155  015810                     l8096:
 10156                           
 10157                           ; BSR set to: 0
 10158  015810  0100               	movlb	0	; () banked
 10159  015812  AF7A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10160  015814  D7F7               	goto	l8094
 10161  015816                     l8098:
 10162                           
 10163                           ; BSR set to: 0
 10164  015816  0100               	movlb	0	; () banked
 10165  015818  90D8               	bcf	status,0,c
 10166  01581A  377D               	rlcf	___awdiv@quotient& (0+255),f,b
 10167  01581C  377E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10168                           
 10169                           ; BSR set to: 0
 10170  01581E  0100               	movlb	0	; () banked
 10171  015820  5179               	movf	___awdiv@divisor& (0+255),w,b
 10172  015822  0100               	movlb	0	; () banked
 10173  015824  5D77               	subwf	___awdiv@dividend& (0+255),w,b
 10174  015826  0100               	movlb	0	; () banked
 10175  015828  517A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10176  01582A  0100               	movlb	0	; () banked
 10177  01582C  5978               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10178  01582E  A0D8               	btfss	status,0,c
 10179  015830  D00A               	goto	l8106
 10180                           
 10181                           ; BSR set to: 0
 10182  015832  0100               	movlb	0	; () banked
 10183  015834  5179               	movf	___awdiv@divisor& (0+255),w,b
 10184  015836  0100               	movlb	0	; () banked
 10185  015838  5F77               	subwf	___awdiv@dividend& (0+255),f,b
 10186  01583A  0100               	movlb	0	; () banked
 10187  01583C  517A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10188  01583E  0100               	movlb	0	; () banked
 10189  015840  5B78               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10190                           
 10191                           ; BSR set to: 0
 10192  015842  0100               	movlb	0	; () banked
 10193  015844  817D               	bsf	___awdiv@quotient& (0+255),0,b
 10194  015846                     l8106:
 10195                           
 10196                           ; BSR set to: 0
 10197  015846  0100               	movlb	0	; () banked
 10198  015848  90D8               	bcf	status,0,c
 10199  01584A  337A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10200  01584C  3379               	rrcf	___awdiv@divisor& (0+255),f,b
 10201                           
 10202                           ; BSR set to: 0
 10203  01584E  0100               	movlb	0	; () banked
 10204  015850  2F7B               	decfsz	___awdiv@counter& (0+255),f,b
 10205  015852  D7E1               	goto	l8098
 10206  015854                     l8110:
 10207                           
 10208                           ; BSR set to: 0
 10209  015854  0100               	movlb	0	; () banked
 10210  015856  517C               	movf	___awdiv@sign& (0+255),w,b
 10211  015858  0100               	movlb	0	; () banked
 10212  01585A  B4D8               	btfsc	status,2,c
 10213  01585C  D005               	goto	l8114
 10214                           
 10215                           ; BSR set to: 0
 10216  01585E  0100               	movlb	0	; () banked
 10217  015860  6D7D               	negf	___awdiv@quotient& (0+255),b
 10218  015862  1F7E               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10219  015864  B0D8               	btfsc	status,0,c
 10220  015866  2B7E               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10221  015868                     l8114:
 10222                           
 10223                           ; BSR set to: 0
 10224  015868  C07D  F077         	movff	___awdiv@quotient,?___awdiv
 10225  01586C  C07E  F078         	movff	___awdiv@quotient+1,?___awdiv+1
 10226  015870  0012               	return	
 10227  015872                     __end_of___awdiv:
 10228                           	opt stack 0
 10229                           tblptru	equ	0xFF8
 10230                           tblptrh	equ	0xFF7
 10231                           tblptrl	equ	0xFF6
 10232                           tablat	equ	0xFF5
 10233                           prodh	equ	0xFF4
 10234                           prodl	equ	0xFF3
 10235                           intcon	equ	0xFF2
 10236                           postinc0	equ	0xFEE
 10237                           wreg	equ	0xFE8
 10238                           indf2	equ	0xFDF
 10239                           postinc2	equ	0xFDE
 10240                           fsr2h	equ	0xFDA
 10241                           fsr2l	equ	0xFD9
 10242                           status	equ	0xFD8
 10243                           
 10244 ;; *************** function __tdiv_to_l_ *****************
 10245 ;; Defined at:
 10246 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
 10247 ;; Parameters:    Size  Location     Type
 10248 ;;  f1              4   17[BANK0 ] float 
 10249 ;;  f2              4   21[BANK0 ] float 
 10250 ;; Auto vars:     Size  Location     Type
 10251 ;;  quot            4   28[BANK0 ] unsigned long 
 10252 ;;  exp1            1   33[BANK0 ] unsigned char 
 10253 ;;  cntr            1   32[BANK0 ] unsigned char 
 10254 ;; Return value:  Size  Location     Type
 10255 ;;                  4   17[BANK0 ] unsigned long 
 10256 ;; Registers used:
 10257 ;;		wreg, status,2, status,0
 10258 ;; Tracked objects:
 10259 ;;		On entry : 0/0
 10260 ;;		On exit  : 0/0
 10261 ;;		Unchanged: 0/0
 10262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10263 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10264 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10265 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10266 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10267 ;;Total ram usage:       17 bytes
 10268 ;; Hardware stack levels used:    1
 10269 ;; Hardware stack levels required when called:    3
 10270 ;; This function calls:
 10271 ;;		Nothing
 10272 ;; This function is called by:
 10273 ;;		_sprintf
 10274 ;; This function uses a non-reentrant model
 10275 ;;
 10276                           
 10277                           	psect	text16
 10278  014F98                     __ptext16:
 10279                           	opt stack 0
 10280  014F98                     __tdiv_to_l_:
 10281                           	opt stack 25
 10282                           
 10283                           ; BSR set to: 0
 10284                           ;incstack = 0
 10285  014F98  C073  F079         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10286  014F9C  0100               	movlb	0	; () banked
 10287  014F9E  6B7A               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10288  014FA0  6B7B               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10289  014FA2  0100               	movlb	0	; () banked
 10290  014FA4  3572               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10291  014FA6  0100               	movlb	0	; () banked
 10292  014FA8  3779               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10293  014FAA  E301               	bnc	u11001
 10294  014FAC  817A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10295  014FAE                     u11001:
 10296  014FAE  0100               	movlb	0	; () banked
 10297  014FB0  5179               	movf	??__tdiv_to_l_& (0+255),w,b
 10298  014FB2  0100               	movlb	0	; () banked
 10299  014FB4  6F81               	movwf	__tdiv_to_l_@exp1& (0+255),b
 10300  014FB6  0100               	movlb	0	; () banked
 10301  014FB8  5181               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10302  014FBA  A4D8               	btfss	status,2,c
 10303  014FBC  D00A               	goto	l8264
 10304                           
 10305                           ; BSR set to: 0
 10306  014FBE  0E00               	movlw	0
 10307  014FC0  0100               	movlb	0	; () banked
 10308  014FC2  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10309  014FC4  0E00               	movlw	0
 10310  014FC6  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10311  014FC8  0E00               	movlw	0
 10312  014FCA  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10313  014FCC  0E00               	movlw	0
 10314  014FCE  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10315                           
 10316                           ; BSR set to: 0
 10317  014FD0  0012               	return	
 10318  014FD2                     l8264:
 10319                           
 10320                           ; BSR set to: 0
 10321  014FD2  C077  F079         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10322  014FD6  0100               	movlb	0	; () banked
 10323  014FD8  6B7A               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10324  014FDA  6B7B               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10325  014FDC  0100               	movlb	0	; () banked
 10326  014FDE  3576               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10327  014FE0  0100               	movlb	0	; () banked
 10328  014FE2  3779               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10329  014FE4  E301               	bnc	u11021
 10330  014FE6  817A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10331  014FE8                     u11021:
 10332  014FE8  0100               	movlb	0	; () banked
 10333  014FEA  5179               	movf	??__tdiv_to_l_& (0+255),w,b
 10334  014FEC  0100               	movlb	0	; () banked
 10335  014FEE  6F80               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10336  014FF0  0100               	movlb	0	; () banked
 10337  014FF2  5180               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10338  014FF4  A4D8               	btfss	status,2,c
 10339  014FF6  D00A               	goto	l8270
 10340                           
 10341                           ; BSR set to: 0
 10342  014FF8  0E00               	movlw	0
 10343  014FFA  0100               	movlb	0	; () banked
 10344  014FFC  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10345  014FFE  0E00               	movlw	0
 10346  015000  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10347  015002  0E00               	movlw	0
 10348  015004  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10349  015006  0E00               	movlw	0
 10350  015008  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10351                           
 10352                           ; BSR set to: 0
 10353  01500A  0012               	return	
 10354  01500C                     l8270:
 10355                           
 10356                           ; BSR set to: 0
 10357  01500C  0100               	movlb	0	; () banked
 10358  01500E  8F72               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 10359                           
 10360                           ; BSR set to: 0
 10361  015010  0EFF               	movlw	255
 10362  015012  0100               	movlb	0	; () banked
 10363  015014  1771               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 10364  015016  0EFF               	movlw	255
 10365  015018  0100               	movlb	0	; () banked
 10366  01501A  1772               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10367  01501C  0E00               	movlw	0
 10368  01501E  0100               	movlb	0	; () banked
 10369  015020  1773               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10370  015022  0100               	movlb	0	; () banked
 10371  015024  8F76               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 10372                           
 10373                           ; BSR set to: 0
 10374  015026  0EFF               	movlw	255
 10375  015028  0100               	movlb	0	; () banked
 10376  01502A  1775               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 10377  01502C  0EFF               	movlw	255
 10378  01502E  0100               	movlb	0	; () banked
 10379  015030  1776               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 10380  015032  0E00               	movlw	0
 10381  015034  0100               	movlb	0	; () banked
 10382  015036  1777               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 10383                           
 10384                           ; BSR set to: 0
 10385  015038  0E00               	movlw	0
 10386  01503A  0100               	movlb	0	; () banked
 10387  01503C  6F7C               	movwf	__tdiv_to_l_@quot& (0+255),b
 10388  01503E  0E00               	movlw	0
 10389  015040  6F7D               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 10390  015042  0E00               	movlw	0
 10391  015044  6F7E               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 10392  015046  0E00               	movlw	0
 10393  015048  6F7F               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 10394                           
 10395                           ; BSR set to: 0
 10396  01504A  0E7F               	movlw	127
 10397  01504C  0100               	movlb	0	; () banked
 10398  01504E  5F81               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10399                           
 10400                           ; BSR set to: 0
 10401  015050  0100               	movlb	0	; () banked
 10402  015052  5180               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10403  015054  0F98               	addlw	152
 10404  015056  0100               	movlb	0	; () banked
 10405  015058  5F81               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10406                           
 10407                           ; BSR set to: 0
 10408  01505A  0E18               	movlw	24
 10409  01505C  0100               	movlb	0	; () banked
 10410  01505E  6F80               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10411  015060                     l1320:
 10412                           
 10413                           ; BSR set to: 0
 10414  015060  0100               	movlb	0	; () banked
 10415  015062  90D8               	bcf	status,0,c
 10416  015064  377C               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10417  015066  377D               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10418  015068  377E               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10419  01506A  377F               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10420                           
 10421                           ; BSR set to: 0
 10422  01506C  0100               	movlb	0	; () banked
 10423  01506E  5175               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10424  015070  0100               	movlb	0	; () banked
 10425  015072  5D71               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 10426  015074  0100               	movlb	0	; () banked
 10427  015076  5176               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10428  015078  0100               	movlb	0	; () banked
 10429  01507A  5972               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10430  01507C  0100               	movlb	0	; () banked
 10431  01507E  5177               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10432  015080  0100               	movlb	0	; () banked
 10433  015082  5973               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10434  015084  A0D8               	btfss	status,0,c
 10435  015086  D00E               	goto	l1321
 10436                           
 10437                           ; BSR set to: 0
 10438  015088  0100               	movlb	0	; () banked
 10439  01508A  5175               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10440  01508C  0100               	movlb	0	; () banked
 10441  01508E  5F71               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10442  015090  0100               	movlb	0	; () banked
 10443  015092  5176               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10444  015094  0100               	movlb	0	; () banked
 10445  015096  5B72               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10446  015098  0100               	movlb	0	; () banked
 10447  01509A  5177               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10448  01509C  0100               	movlb	0	; () banked
 10449  01509E  5B73               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10450                           
 10451                           ; BSR set to: 0
 10452  0150A0  0100               	movlb	0	; () banked
 10453  0150A2  817C               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 10454  0150A4                     l1321:
 10455                           
 10456                           ; BSR set to: 0
 10457  0150A4  0100               	movlb	0	; () banked
 10458  0150A6  90D8               	bcf	status,0,c
 10459  0150A8  3771               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10460  0150AA  3772               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10461  0150AC  3773               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10462                           
 10463                           ; BSR set to: 0
 10464  0150AE  0100               	movlb	0	; () banked
 10465  0150B0  2F80               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 10466  0150B2  D7D6               	goto	l1320
 10467                           
 10468                           ; BSR set to: 0
 10469                           
 10470                           ; BSR set to: 0
 10471  0150B4  0100               	movlb	0	; () banked
 10472  0150B6  AF81               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 10473  0150B8  D01A               	goto	l8304
 10474                           
 10475                           ; BSR set to: 0
 10476  0150BA  0100               	movlb	0	; () banked
 10477  0150BC  5181               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10478  0150BE  0A80               	xorlw	128
 10479  0150C0  0F97               	addlw	151
 10480  0150C2  B0D8               	btfsc	status,0,c
 10481  0150C4  D00A               	goto	l8300
 10482                           
 10483                           ; BSR set to: 0
 10484  0150C6  0E00               	movlw	0
 10485  0150C8  0100               	movlb	0	; () banked
 10486  0150CA  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10487  0150CC  0E00               	movlw	0
 10488  0150CE  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10489  0150D0  0E00               	movlw	0
 10490  0150D2  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10491  0150D4  0E00               	movlw	0
 10492  0150D6  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10493                           
 10494                           ; BSR set to: 0
 10495  0150D8  0012               	return	
 10496  0150DA                     l8300:
 10497                           
 10498                           ; BSR set to: 0
 10499  0150DA  0100               	movlb	0	; () banked
 10500  0150DC  90D8               	bcf	status,0,c
 10501  0150DE  337F               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10502  0150E0  337E               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10503  0150E2  337D               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10504  0150E4  337C               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 10505                           
 10506                           ; BSR set to: 0
 10507  0150E6  0100               	movlb	0	; () banked
 10508  0150E8  3F81               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 10509  0150EA  D7F7               	goto	l8300
 10510                           
 10511                           ; BSR set to: 0
 10512  0150EC  D01B               	goto	l1327
 10513  0150EE                     l8304:
 10514                           
 10515                           ; BSR set to: 0
 10516  0150EE  0E17               	movlw	23
 10517  0150F0  0100               	movlb	0	; () banked
 10518  0150F2  6581               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 10519  0150F4  D012               	goto	l8312
 10520                           
 10521                           ; BSR set to: 0
 10522  0150F6  0E00               	movlw	0
 10523  0150F8  0100               	movlb	0	; () banked
 10524  0150FA  6F71               	movwf	?__tdiv_to_l_& (0+255),b
 10525  0150FC  0E00               	movlw	0
 10526  0150FE  6F72               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10527  015100  0E00               	movlw	0
 10528  015102  6F73               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10529  015104  0E00               	movlw	0
 10530  015106  6F74               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10531                           
 10532                           ; BSR set to: 0
 10533  015108  0012               	return	
 10534  01510A                     l8310:
 10535                           
 10536                           ; BSR set to: 0
 10537  01510A  0100               	movlb	0	; () banked
 10538  01510C  90D8               	bcf	status,0,c
 10539  01510E  377C               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10540  015110  377D               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10541  015112  377E               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10542  015114  377F               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10543  015116  0100               	movlb	0	; () banked
 10544  015118  0781               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 10545  01511A                     l8312:
 10546                           
 10547                           ; BSR set to: 0
 10548  01511A  0100               	movlb	0	; () banked
 10549  01511C  5181               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10550  01511E  0100               	movlb	0	; () banked
 10551  015120  A4D8               	btfss	status,2,c
 10552  015122  D7F3               	goto	l8310
 10553  015124                     l1327:
 10554                           
 10555                           ; BSR set to: 0
 10556  015124  C07C  F071         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10557  015128  C07D  F072         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10558  01512C  C07E  F073         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10559  015130  C07F  F074         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10560                           
 10561                           ; BSR set to: 0
 10562  015134  0012               	return		;funcret
 10563  015136                     __end_of__tdiv_to_l_:
 10564                           	opt stack 0
 10565                           tblptru	equ	0xFF8
 10566                           tblptrh	equ	0xFF7
 10567                           tblptrl	equ	0xFF6
 10568                           tablat	equ	0xFF5
 10569                           prodh	equ	0xFF4
 10570                           prodl	equ	0xFF3
 10571                           intcon	equ	0xFF2
 10572                           postinc0	equ	0xFEE
 10573                           wreg	equ	0xFE8
 10574                           indf2	equ	0xFDF
 10575                           postinc2	equ	0xFDE
 10576                           fsr2h	equ	0xFDA
 10577                           fsr2l	equ	0xFD9
 10578                           status	equ	0xFD8
 10579                           
 10580 ;; *************** function __div_to_l_ *****************
 10581 ;; Defined at:
 10582 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
 10583 ;; Parameters:    Size  Location     Type
 10584 ;;  f1              4   17[BANK0 ] unsigned long 
 10585 ;;  f2              4   21[BANK0 ] unsigned long 
 10586 ;; Auto vars:     Size  Location     Type
 10587 ;;  quot            4   25[BANK0 ] unsigned long 
 10588 ;;  exp1            1   30[BANK0 ] unsigned char 
 10589 ;;  cntr            1   29[BANK0 ] unsigned char 
 10590 ;; Return value:  Size  Location     Type
 10591 ;;                  4   17[BANK0 ] unsigned long 
 10592 ;; Registers used:
 10593 ;;		wreg, status,2, status,0
 10594 ;; Tracked objects:
 10595 ;;		On entry : 0/0
 10596 ;;		On exit  : 0/0
 10597 ;;		Unchanged: 0/0
 10598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10599 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10600 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10602 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10603 ;;Total ram usage:       14 bytes
 10604 ;; Hardware stack levels used:    1
 10605 ;; Hardware stack levels required when called:    3
 10606 ;; This function calls:
 10607 ;;		Nothing
 10608 ;; This function is called by:
 10609 ;;		_sprintf
 10610 ;; This function uses a non-reentrant model
 10611 ;;
 10612                           
 10613                           	psect	text17
 10614  0152C6                     __ptext17:
 10615                           	opt stack 0
 10616  0152C6                     __div_to_l_:
 10617                           	opt stack 25
 10618                           
 10619                           ; BSR set to: 0
 10620                           ;incstack = 0
 10621  0152C6  0100               	movlb	0	; () banked
 10622  0152C8  3573               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10623  0152CA  3574               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10624  0152CC  0100               	movlb	0	; () banked
 10625  0152CE  6F7E               	movwf	__div_to_l_@exp1& (0+255),b
 10626  0152D0  0100               	movlb	0	; () banked
 10627  0152D2  517E               	movf	__div_to_l_@exp1& (0+255),w,b
 10628  0152D4  A4D8               	btfss	status,2,c
 10629  0152D6  D00A               	goto	l8320
 10630                           
 10631                           ; BSR set to: 0
 10632  0152D8  0E00               	movlw	0
 10633  0152DA  0100               	movlb	0	; () banked
 10634  0152DC  6F71               	movwf	?__div_to_l_& (0+255),b
 10635  0152DE  0E00               	movlw	0
 10636  0152E0  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10637  0152E2  0E00               	movlw	0
 10638  0152E4  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10639  0152E6  0E00               	movlw	0
 10640  0152E8  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10641                           
 10642                           ; BSR set to: 0
 10643  0152EA  0012               	return	
 10644  0152EC                     l8320:
 10645                           
 10646                           ; BSR set to: 0
 10647  0152EC  0100               	movlb	0	; () banked
 10648  0152EE  3577               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10649  0152F0  3578               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10650  0152F2  0100               	movlb	0	; () banked
 10651  0152F4  6F7D               	movwf	__div_to_l_@cntr& (0+255),b
 10652  0152F6  0100               	movlb	0	; () banked
 10653  0152F8  517D               	movf	__div_to_l_@cntr& (0+255),w,b
 10654  0152FA  A4D8               	btfss	status,2,c
 10655  0152FC  D00A               	goto	l8326
 10656                           
 10657                           ; BSR set to: 0
 10658  0152FE  0E00               	movlw	0
 10659  015300  0100               	movlb	0	; () banked
 10660  015302  6F71               	movwf	?__div_to_l_& (0+255),b
 10661  015304  0E00               	movlw	0
 10662  015306  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10663  015308  0E00               	movlw	0
 10664  01530A  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10665  01530C  0E00               	movlw	0
 10666  01530E  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10667                           
 10668                           ; BSR set to: 0
 10669  015310  0012               	return	
 10670  015312                     l8326:
 10671                           
 10672                           ; BSR set to: 0
 10673  015312  0100               	movlb	0	; () banked
 10674  015314  8F73               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10675                           
 10676                           ; BSR set to: 0
 10677  015316  0EFF               	movlw	255
 10678  015318  0100               	movlb	0	; () banked
 10679  01531A  1771               	andwf	__div_to_l_@f1& (0+255),f,b
 10680  01531C  0EFF               	movlw	255
 10681  01531E  1772               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10682  015320  0EFF               	movlw	255
 10683  015322  1773               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10684  015324  0E00               	movlw	0
 10685  015326  1774               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10686                           
 10687                           ; BSR set to: 0
 10688  015328  0100               	movlb	0	; () banked
 10689  01532A  8F77               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10690  01532C  0EFF               	movlw	255
 10691  01532E  0100               	movlb	0	; () banked
 10692  015330  1775               	andwf	__div_to_l_@f2& (0+255),f,b
 10693  015332  0EFF               	movlw	255
 10694  015334  1776               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10695  015336  0EFF               	movlw	255
 10696  015338  1777               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10697  01533A  0E00               	movlw	0
 10698  01533C  1778               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10699                           
 10700                           ; BSR set to: 0
 10701  01533E  0E00               	movlw	0
 10702  015340  0100               	movlb	0	; () banked
 10703  015342  6F79               	movwf	__div_to_l_@quot& (0+255),b
 10704  015344  0E00               	movlw	0
 10705  015346  6F7A               	movwf	(__div_to_l_@quot+1)& (0+255),b
 10706  015348  0E00               	movlw	0
 10707  01534A  6F7B               	movwf	(__div_to_l_@quot+2)& (0+255),b
 10708  01534C  0E00               	movlw	0
 10709  01534E  6F7C               	movwf	(__div_to_l_@quot+3)& (0+255),b
 10710                           
 10711                           ; BSR set to: 0
 10712  015350  0E7F               	movlw	127
 10713  015352  0100               	movlb	0	; () banked
 10714  015354  5F7E               	subwf	__div_to_l_@exp1& (0+255),f,b
 10715                           
 10716                           ; BSR set to: 0
 10717  015356  0100               	movlb	0	; () banked
 10718  015358  517D               	movf	__div_to_l_@cntr& (0+255),w,b
 10719  01535A  0FA0               	addlw	160
 10720  01535C  0100               	movlb	0	; () banked
 10721  01535E  5F7E               	subwf	__div_to_l_@exp1& (0+255),f,b
 10722                           
 10723                           ; BSR set to: 0
 10724  015360  0E20               	movlw	32
 10725  015362  0100               	movlb	0	; () banked
 10726  015364  6F7D               	movwf	__div_to_l_@cntr& (0+255),b
 10727  015366                     l8340:
 10728                           
 10729                           ; BSR set to: 0
 10730  015366  0100               	movlb	0	; () banked
 10731  015368  90D8               	bcf	status,0,c
 10732  01536A  3779               	rlcf	__div_to_l_@quot& (0+255),f,b
 10733  01536C  377A               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10734  01536E  377B               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10735  015370  377C               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10736                           
 10737                           ; BSR set to: 0
 10738  015372  0100               	movlb	0	; () banked
 10739  015374  5175               	movf	__div_to_l_@f2& (0+255),w,b
 10740  015376  0100               	movlb	0	; () banked
 10741  015378  5D71               	subwf	__div_to_l_@f1& (0+255),w,b
 10742  01537A  0100               	movlb	0	; () banked
 10743  01537C  5176               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10744  01537E  0100               	movlb	0	; () banked
 10745  015380  5972               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10746  015382  0100               	movlb	0	; () banked
 10747  015384  5177               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10748  015386  0100               	movlb	0	; () banked
 10749  015388  5973               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10750  01538A  0100               	movlb	0	; () banked
 10751  01538C  5178               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10752  01538E  0100               	movlb	0	; () banked
 10753  015390  5974               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10754  015392  A0D8               	btfss	status,0,c
 10755  015394  D012               	goto	l8348
 10756                           
 10757                           ; BSR set to: 0
 10758  015396  0100               	movlb	0	; () banked
 10759  015398  5175               	movf	__div_to_l_@f2& (0+255),w,b
 10760  01539A  0100               	movlb	0	; () banked
 10761  01539C  5F71               	subwf	__div_to_l_@f1& (0+255),f,b
 10762  01539E  0100               	movlb	0	; () banked
 10763  0153A0  5176               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10764  0153A2  0100               	movlb	0	; () banked
 10765  0153A4  5B72               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10766  0153A6  0100               	movlb	0	; () banked
 10767  0153A8  5177               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10768  0153AA  0100               	movlb	0	; () banked
 10769  0153AC  5B73               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10770  0153AE  0100               	movlb	0	; () banked
 10771  0153B0  5178               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10772  0153B2  0100               	movlb	0	; () banked
 10773  0153B4  5B74               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10774                           
 10775                           ; BSR set to: 0
 10776  0153B6  0100               	movlb	0	; () banked
 10777  0153B8  8179               	bsf	__div_to_l_@quot& (0+255),0,b
 10778  0153BA                     l8348:
 10779                           
 10780                           ; BSR set to: 0
 10781  0153BA  0100               	movlb	0	; () banked
 10782  0153BC  90D8               	bcf	status,0,c
 10783  0153BE  3771               	rlcf	__div_to_l_@f1& (0+255),f,b
 10784  0153C0  3772               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10785  0153C2  3773               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10786  0153C4  3774               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10787                           
 10788                           ; BSR set to: 0
 10789  0153C6  0100               	movlb	0	; () banked
 10790  0153C8  2F7D               	decfsz	__div_to_l_@cntr& (0+255),f,b
 10791  0153CA  D7CD               	goto	l8340
 10792                           
 10793                           ; BSR set to: 0
 10794                           
 10795                           ; BSR set to: 0
 10796  0153CC  0100               	movlb	0	; () banked
 10797  0153CE  AF7E               	btfss	__div_to_l_@exp1& (0+255),7,b
 10798  0153D0  D01A               	goto	l8364
 10799                           
 10800                           ; BSR set to: 0
 10801  0153D2  0100               	movlb	0	; () banked
 10802  0153D4  517E               	movf	__div_to_l_@exp1& (0+255),w,b
 10803  0153D6  0A80               	xorlw	128
 10804  0153D8  0F9F               	addlw	159
 10805  0153DA  B0D8               	btfsc	status,0,c
 10806  0153DC  D00A               	goto	l8360
 10807                           
 10808                           ; BSR set to: 0
 10809  0153DE  0E00               	movlw	0
 10810  0153E0  0100               	movlb	0	; () banked
 10811  0153E2  6F71               	movwf	?__div_to_l_& (0+255),b
 10812  0153E4  0E00               	movlw	0
 10813  0153E6  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10814  0153E8  0E00               	movlw	0
 10815  0153EA  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10816  0153EC  0E00               	movlw	0
 10817  0153EE  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10818                           
 10819                           ; BSR set to: 0
 10820  0153F0  0012               	return	
 10821  0153F2                     l8360:
 10822                           
 10823                           ; BSR set to: 0
 10824  0153F2  0100               	movlb	0	; () banked
 10825  0153F4  90D8               	bcf	status,0,c
 10826  0153F6  337C               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 10827  0153F8  337B               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 10828  0153FA  337A               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 10829  0153FC  3379               	rrcf	__div_to_l_@quot& (0+255),f,b
 10830                           
 10831                           ; BSR set to: 0
 10832  0153FE  0100               	movlb	0	; () banked
 10833  015400  3F7E               	incfsz	__div_to_l_@exp1& (0+255),f,b
 10834  015402  D7F7               	goto	l8360
 10835                           
 10836                           ; BSR set to: 0
 10837  015404  D01B               	goto	l1223
 10838  015406                     l8364:
 10839                           
 10840                           ; BSR set to: 0
 10841  015406  0E1F               	movlw	31
 10842  015408  0100               	movlb	0	; () banked
 10843  01540A  657E               	cpfsgt	__div_to_l_@exp1& (0+255),b
 10844  01540C  D012               	goto	l8372
 10845                           
 10846                           ; BSR set to: 0
 10847  01540E  0E00               	movlw	0
 10848  015410  0100               	movlb	0	; () banked
 10849  015412  6F71               	movwf	?__div_to_l_& (0+255),b
 10850  015414  0E00               	movlw	0
 10851  015416  6F72               	movwf	(?__div_to_l_+1)& (0+255),b
 10852  015418  0E00               	movlw	0
 10853  01541A  6F73               	movwf	(?__div_to_l_+2)& (0+255),b
 10854  01541C  0E00               	movlw	0
 10855  01541E  6F74               	movwf	(?__div_to_l_+3)& (0+255),b
 10856                           
 10857                           ; BSR set to: 0
 10858  015420  0012               	return	
 10859  015422                     l8370:
 10860                           
 10861                           ; BSR set to: 0
 10862  015422  0100               	movlb	0	; () banked
 10863  015424  90D8               	bcf	status,0,c
 10864  015426  3779               	rlcf	__div_to_l_@quot& (0+255),f,b
 10865  015428  377A               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10866  01542A  377B               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10867  01542C  377C               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10868  01542E  0100               	movlb	0	; () banked
 10869  015430  077E               	decf	__div_to_l_@exp1& (0+255),f,b
 10870  015432                     l8372:
 10871                           
 10872                           ; BSR set to: 0
 10873  015432  0100               	movlb	0	; () banked
 10874  015434  517E               	movf	__div_to_l_@exp1& (0+255),w,b
 10875  015436  0100               	movlb	0	; () banked
 10876  015438  A4D8               	btfss	status,2,c
 10877  01543A  D7F3               	goto	l8370
 10878  01543C                     l1223:
 10879                           
 10880                           ; BSR set to: 0
 10881  01543C  C079  F071         	movff	__div_to_l_@quot,?__div_to_l_
 10882  015440  C07A  F072         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10883  015444  C07B  F073         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10884  015448  C07C  F074         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10885                           
 10886                           ; BSR set to: 0
 10887  01544C  0012               	return		;funcret
 10888  01544E                     __end_of__div_to_l_:
 10889                           	opt stack 0
 10890                           tblptru	equ	0xFF8
 10891                           tblptrh	equ	0xFF7
 10892                           tblptrl	equ	0xFF6
 10893                           tablat	equ	0xFF5
 10894                           prodh	equ	0xFF4
 10895                           prodl	equ	0xFF3
 10896                           intcon	equ	0xFF2
 10897                           postinc0	equ	0xFEE
 10898                           wreg	equ	0xFE8
 10899                           indf2	equ	0xFDF
 10900                           postinc2	equ	0xFDE
 10901                           fsr2h	equ	0xFDA
 10902                           fsr2l	equ	0xFD9
 10903                           status	equ	0xFD8
 10904                           
 10905 ;; *************** function ___xxtofl *****************
 10906 ;; Defined at:
 10907 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
 10908 ;; Parameters:    Size  Location     Type
 10909 ;;  sign            1    wreg     unsigned char 
 10910 ;;  val             4   17[BANK0 ] long 
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;  sign            1   25[BANK0 ] unsigned char 
 10913 ;;  arg             4   27[BANK0 ] unsigned long 
 10914 ;;  exp             1   26[BANK0 ] unsigned char 
 10915 ;; Return value:  Size  Location     Type
 10916 ;;                  4   17[BANK0 ] unsigned char 
 10917 ;; Registers used:
 10918 ;;		wreg, status,2, status,0
 10919 ;; Tracked objects:
 10920 ;;		On entry : 0/0
 10921 ;;		On exit  : 0/0
 10922 ;;		Unchanged: 0/0
 10923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10924 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10925 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10926 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10927 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10928 ;;Total ram usage:       14 bytes
 10929 ;; Hardware stack levels used:    1
 10930 ;; Hardware stack levels required when called:    3
 10931 ;; This function calls:
 10932 ;;		Nothing
 10933 ;; This function is called by:
 10934 ;;		_main
 10935 ;;		_LCD_Handler
 10936 ;;		_sprintf
 10937 ;; This function uses a non-reentrant model
 10938 ;;
 10939                           
 10940                           	psect	text18
 10941  014896                     __ptext18:
 10942                           	opt stack 0
 10943  014896                     ___xxtofl:
 10944                           	opt stack 27
 10945                           
 10946                           ; BSR set to: 0
 10947                           ;incstack = 0
 10948                           ;___xxtofl@sign stored from wreg
 10949  014896  0100               	movlb	0	; () banked
 10950  014898  6F79               	movwf	___xxtofl@sign& (0+255),b
 10951  01489A  0100               	movlb	0	; () banked
 10952  01489C  5179               	movf	___xxtofl@sign& (0+255),w,b
 10953  01489E  0100               	movlb	0	; () banked
 10954  0148A0  B4D8               	btfsc	status,2,c
 10955  0148A2  D01E               	goto	l1618
 10956                           
 10957                           ; BSR set to: 0
 10958  0148A4  0100               	movlb	0	; () banked
 10959  0148A6  AF74               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10960  0148A8  D01B               	goto	l1618
 10961                           
 10962                           ; BSR set to: 0
 10963  0148AA  C071  F075         	movff	___xxtofl@val,??___xxtofl
 10964  0148AE  C072  F076         	movff	___xxtofl@val+1,??___xxtofl+1
 10965  0148B2  C073  F077         	movff	___xxtofl@val+2,??___xxtofl+2
 10966  0148B6  C074  F078         	movff	___xxtofl@val+3,??___xxtofl+3
 10967  0148BA  0100               	movlb	0	; () banked
 10968  0148BC  1F75               	comf	??___xxtofl& (0+255),f,b
 10969  0148BE  1F76               	comf	(??___xxtofl+1)& (0+255),f,b
 10970  0148C0  1F77               	comf	(??___xxtofl+2)& (0+255),f,b
 10971  0148C2  1F78               	comf	(??___xxtofl+3)& (0+255),f,b
 10972  0148C4  2B75               	incf	??___xxtofl& (0+255),f,b
 10973  0148C6  0E00               	movlw	0
 10974  0148C8  2376               	addwfc	(??___xxtofl+1)& (0+255),f,b
 10975  0148CA  2377               	addwfc	(??___xxtofl+2)& (0+255),f,b
 10976  0148CC  2378               	addwfc	(??___xxtofl+3)& (0+255),f,b
 10977  0148CE  C075  F07B         	movff	??___xxtofl,___xxtofl@arg
 10978  0148D2  C076  F07C         	movff	??___xxtofl+1,___xxtofl@arg+1
 10979  0148D6  C077  F07D         	movff	??___xxtofl+2,___xxtofl@arg+2
 10980  0148DA  C078  F07E         	movff	??___xxtofl+3,___xxtofl@arg+3
 10981  0148DE  D008               	goto	l8498
 10982  0148E0                     l1618:
 10983                           
 10984                           ; BSR set to: 0
 10985  0148E0  C071  F07B         	movff	___xxtofl@val,___xxtofl@arg
 10986  0148E4  C072  F07C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10987  0148E8  C073  F07D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10988  0148EC  C074  F07E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10989  0148F0                     l8498:
 10990                           
 10991                           ; BSR set to: 0
 10992  0148F0  0100               	movlb	0	; () banked
 10993  0148F2  5171               	movf	___xxtofl@val& (0+255),w,b
 10994  0148F4  0100               	movlb	0	; () banked
 10995  0148F6  1172               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 10996  0148F8  0100               	movlb	0	; () banked
 10997  0148FA  1173               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 10998  0148FC  0100               	movlb	0	; () banked
 10999  0148FE  1174               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 11000  014900  A4D8               	btfss	status,2,c
 11001  014902  D00A               	goto	l8504
 11002                           
 11003                           ; BSR set to: 0
 11004  014904  0E00               	movlw	0
 11005  014906  0100               	movlb	0	; () banked
 11006  014908  6F71               	movwf	?___xxtofl& (0+255),b
 11007  01490A  0E00               	movlw	0
 11008  01490C  6F72               	movwf	(?___xxtofl+1)& (0+255),b
 11009  01490E  0E00               	movlw	0
 11010  014910  6F73               	movwf	(?___xxtofl+2)& (0+255),b
 11011  014912  0E00               	movlw	0
 11012  014914  6F74               	movwf	(?___xxtofl+3)& (0+255),b
 11013                           
 11014                           ; BSR set to: 0
 11015  014916  0012               	return	
 11016  014918                     l8504:
 11017                           
 11018                           ; BSR set to: 0
 11019  014918  0E96               	movlw	150
 11020  01491A  0100               	movlb	0	; () banked
 11021  01491C  6F7A               	movwf	___xxtofl@exp& (0+255),b
 11022  01491E  D008               	goto	l8508
 11023  014920                     l8506:
 11024                           
 11025                           ; BSR set to: 0
 11026  014920  0100               	movlb	0	; () banked
 11027  014922  2B7A               	incf	___xxtofl@exp& (0+255),f,b
 11028  014924  0100               	movlb	0	; () banked
 11029  014926  90D8               	bcf	status,0,c
 11030  014928  337E               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 11031  01492A  337D               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 11032  01492C  337C               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 11033  01492E  337B               	rrcf	___xxtofl@arg& (0+255),f,b
 11034  014930                     l8508:
 11035                           
 11036                           ; BSR set to: 0
 11037  014930  0E00               	movlw	0
 11038  014932  0100               	movlb	0	; () banked
 11039  014934  157B               	andwf	___xxtofl@arg& (0+255),w,b
 11040  014936  0100               	movlb	0	; () banked
 11041  014938  6F75               	movwf	??___xxtofl& (0+255),b
 11042  01493A  0E00               	movlw	0
 11043  01493C  0100               	movlb	0	; () banked
 11044  01493E  157C               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 11045  014940  0100               	movlb	0	; () banked
 11046  014942  6F76               	movwf	(??___xxtofl+1)& (0+255),b
 11047  014944  0E00               	movlw	0
 11048  014946  0100               	movlb	0	; () banked
 11049  014948  157D               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 11050  01494A  0100               	movlb	0	; () banked
 11051  01494C  6F77               	movwf	(??___xxtofl+2)& (0+255),b
 11052  01494E  0EFE               	movlw	254
 11053  014950  0100               	movlb	0	; () banked
 11054  014952  157E               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 11055  014954  0100               	movlb	0	; () banked
 11056  014956  6F78               	movwf	(??___xxtofl+3)& (0+255),b
 11057  014958  0100               	movlb	0	; () banked
 11058  01495A  5175               	movf	??___xxtofl& (0+255),w,b
 11059  01495C  0100               	movlb	0	; () banked
 11060  01495E  1176               	iorwf	(??___xxtofl+1)& (0+255),w,b
 11061  014960  0100               	movlb	0	; () banked
 11062  014962  1177               	iorwf	(??___xxtofl+2)& (0+255),w,b
 11063  014964  0100               	movlb	0	; () banked
 11064  014966  1178               	iorwf	(??___xxtofl+3)& (0+255),w,b
 11065  014968  B4D8               	btfsc	status,2,c
 11066  01496A  D010               	goto	l1625
 11067  01496C  D7D9               	goto	l8506
 11068  01496E                     l8510:
 11069                           
 11070                           ; BSR set to: 0
 11071  01496E  0100               	movlb	0	; () banked
 11072  014970  2B7A               	incf	___xxtofl@exp& (0+255),f,b
 11073                           
 11074                           ; BSR set to: 0
 11075  014972  0E01               	movlw	1
 11076  014974  0100               	movlb	0	; () banked
 11077  014976  277B               	addwf	___xxtofl@arg& (0+255),f,b
 11078  014978  0E00               	movlw	0
 11079  01497A  237C               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 11080  01497C  237D               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 11081  01497E  237E               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 11082                           
 11083                           ; BSR set to: 0
 11084  014980  0100               	movlb	0	; () banked
 11085  014982  90D8               	bcf	status,0,c
 11086  014984  337E               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 11087  014986  337D               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 11088  014988  337C               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 11089  01498A  337B               	rrcf	___xxtofl@arg& (0+255),f,b
 11090  01498C                     l1625:
 11091                           
 11092                           ; BSR set to: 0
 11093  01498C  0E00               	movlw	0
 11094  01498E  0100               	movlb	0	; () banked
 11095  014990  157B               	andwf	___xxtofl@arg& (0+255),w,b
 11096  014992  0100               	movlb	0	; () banked
 11097  014994  6F75               	movwf	??___xxtofl& (0+255),b
 11098  014996  0E00               	movlw	0
 11099  014998  0100               	movlb	0	; () banked
 11100  01499A  157C               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 11101  01499C  0100               	movlb	0	; () banked
 11102  01499E  6F76               	movwf	(??___xxtofl+1)& (0+255),b
 11103  0149A0  0E00               	movlw	0
 11104  0149A2  0100               	movlb	0	; () banked
 11105  0149A4  157D               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 11106  0149A6  0100               	movlb	0	; () banked
 11107  0149A8  6F77               	movwf	(??___xxtofl+2)& (0+255),b
 11108  0149AA  0EFF               	movlw	255
 11109  0149AC  0100               	movlb	0	; () banked
 11110  0149AE  157E               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 11111  0149B0  0100               	movlb	0	; () banked
 11112  0149B2  6F78               	movwf	(??___xxtofl+3)& (0+255),b
 11113  0149B4  0100               	movlb	0	; () banked
 11114  0149B6  5175               	movf	??___xxtofl& (0+255),w,b
 11115  0149B8  0100               	movlb	0	; () banked
 11116  0149BA  1176               	iorwf	(??___xxtofl+1)& (0+255),w,b
 11117  0149BC  0100               	movlb	0	; () banked
 11118  0149BE  1177               	iorwf	(??___xxtofl+2)& (0+255),w,b
 11119  0149C0  0100               	movlb	0	; () banked
 11120  0149C2  1178               	iorwf	(??___xxtofl+3)& (0+255),w,b
 11121  0149C4  B4D8               	btfsc	status,2,c
 11122  0149C6  D009               	goto	l8518
 11123  0149C8  D7D2               	goto	l8510
 11124  0149CA                     l8516:
 11125                           
 11126                           ; BSR set to: 0
 11127  0149CA  0100               	movlb	0	; () banked
 11128  0149CC  077A               	decf	___xxtofl@exp& (0+255),f,b
 11129  0149CE  0100               	movlb	0	; () banked
 11130  0149D0  90D8               	bcf	status,0,c
 11131  0149D2  377B               	rlcf	___xxtofl@arg& (0+255),f,b
 11132  0149D4  377C               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 11133  0149D6  377D               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 11134  0149D8  377E               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 11135  0149DA                     l8518:
 11136                           
 11137                           ; BSR set to: 0
 11138  0149DA  0100               	movlb	0	; () banked
 11139  0149DC  BF7D               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 11140  0149DE  D004               	goto	l1632
 11141                           
 11142                           ; BSR set to: 0
 11143  0149E0  0E02               	movlw	2
 11144  0149E2  0100               	movlb	0	; () banked
 11145  0149E4  617A               	cpfslt	___xxtofl@exp& (0+255),b
 11146  0149E6  D7F1               	goto	l8516
 11147  0149E8                     l1632:
 11148                           
 11149                           ; BSR set to: 0
 11150  0149E8  0100               	movlb	0	; () banked
 11151  0149EA  B17A               	btfsc	___xxtofl@exp& (0+255),0,b
 11152  0149EC  D009               	goto	l1633
 11153                           
 11154                           ; BSR set to: 0
 11155  0149EE  0EFF               	movlw	255
 11156  0149F0  0100               	movlb	0	; () banked
 11157  0149F2  177B               	andwf	___xxtofl@arg& (0+255),f,b
 11158  0149F4  0EFF               	movlw	255
 11159  0149F6  177C               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 11160  0149F8  0E7F               	movlw	127
 11161  0149FA  177D               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 11162  0149FC  0EFF               	movlw	255
 11163  0149FE  177E               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 11164  014A00                     l1633:
 11165                           
 11166                           ; BSR set to: 0
 11167  014A00  0100               	movlb	0	; () banked
 11168  014A02  90D8               	bcf	status,0,c
 11169  014A04  337A               	rrcf	___xxtofl@exp& (0+255),f,b
 11170  014A06  C07A  F075         	movff	___xxtofl@exp,??___xxtofl
 11171  014A0A  0100               	movlb	0	; () banked
 11172  014A0C  6B76               	clrf	(??___xxtofl+1)& (0+255),b
 11173  014A0E  6B77               	clrf	(??___xxtofl+2)& (0+255),b
 11174  014A10  6B78               	clrf	(??___xxtofl+3)& (0+255),b
 11175  014A12  C075  F078         	movff	??___xxtofl,??___xxtofl+3
 11176  014A16  0100               	movlb	0	; () banked
 11177  014A18  6B77               	clrf	(??___xxtofl+2)& (0+255),b
 11178  014A1A  6B76               	clrf	(??___xxtofl+1)& (0+255),b
 11179  014A1C  6B75               	clrf	??___xxtofl& (0+255),b
 11180  014A1E  0100               	movlb	0	; () banked
 11181  014A20  5175               	movf	??___xxtofl& (0+255),w,b
 11182  014A22  0100               	movlb	0	; () banked
 11183  014A24  137B               	iorwf	___xxtofl@arg& (0+255),f,b
 11184  014A26  0100               	movlb	0	; () banked
 11185  014A28  5176               	movf	(??___xxtofl+1)& (0+255),w,b
 11186  014A2A  0100               	movlb	0	; () banked
 11187  014A2C  137C               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 11188  014A2E  0100               	movlb	0	; () banked
 11189  014A30  5177               	movf	(??___xxtofl+2)& (0+255),w,b
 11190  014A32  0100               	movlb	0	; () banked
 11191  014A34  137D               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 11192  014A36  0100               	movlb	0	; () banked
 11193  014A38  5178               	movf	(??___xxtofl+3)& (0+255),w,b
 11194  014A3A  0100               	movlb	0	; () banked
 11195  014A3C  137E               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 11196                           
 11197                           ; BSR set to: 0
 11198  014A3E  0100               	movlb	0	; () banked
 11199  014A40  5179               	movf	___xxtofl@sign& (0+255),w,b
 11200  014A42  0100               	movlb	0	; () banked
 11201  014A44  B4D8               	btfsc	status,2,c
 11202  014A46  D005               	goto	l8530
 11203                           
 11204                           ; BSR set to: 0
 11205  014A48  0100               	movlb	0	; () banked
 11206  014A4A  AF74               	btfss	(___xxtofl@val+3)& (0+255),7,b
 11207  014A4C  D002               	goto	l8530
 11208                           
 11209                           ; BSR set to: 0
 11210  014A4E  0100               	movlb	0	; () banked
 11211  014A50  8F7E               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 11212  014A52                     l8530:
 11213                           
 11214                           ; BSR set to: 0
 11215  014A52  C07B  F071         	movff	___xxtofl@arg,?___xxtofl
 11216  014A56  C07C  F072         	movff	___xxtofl@arg+1,?___xxtofl+1
 11217  014A5A  C07D  F073         	movff	___xxtofl@arg+2,?___xxtofl+2
 11218  014A5E  C07E  F074         	movff	___xxtofl@arg+3,?___xxtofl+3
 11219  014A62  0012               	return	
 11220  014A64                     __end_of___xxtofl:
 11221                           	opt stack 0
 11222                           tblptru	equ	0xFF8
 11223                           tblptrh	equ	0xFF7
 11224                           tblptrl	equ	0xFF6
 11225                           tablat	equ	0xFF5
 11226                           prodh	equ	0xFF4
 11227                           prodl	equ	0xFF3
 11228                           intcon	equ	0xFF2
 11229                           postinc0	equ	0xFEE
 11230                           wreg	equ	0xFE8
 11231                           indf2	equ	0xFDF
 11232                           postinc2	equ	0xFDE
 11233                           fsr2h	equ	0xFDA
 11234                           fsr2l	equ	0xFD9
 11235                           status	equ	0xFD8
 11236                           
 11237 ;; *************** function ___llmod *****************
 11238 ;; Defined at:
 11239 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
 11240 ;; Parameters:    Size  Location     Type
 11241 ;;  dividend        4   17[BANK0 ] unsigned long 
 11242 ;;  divisor         4   21[BANK0 ] unsigned long 
 11243 ;; Auto vars:     Size  Location     Type
 11244 ;;  counter         1   25[BANK0 ] unsigned char 
 11245 ;; Return value:  Size  Location     Type
 11246 ;;                  4   17[BANK0 ] unsigned long 
 11247 ;; Registers used:
 11248 ;;		wreg, status,2, status,0
 11249 ;; Tracked objects:
 11250 ;;		On entry : 0/0
 11251 ;;		On exit  : 0/0
 11252 ;;		Unchanged: 0/0
 11253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11254 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11255 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11257 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11258 ;;Total ram usage:        9 bytes
 11259 ;; Hardware stack levels used:    1
 11260 ;; Hardware stack levels required when called:    3
 11261 ;; This function calls:
 11262 ;;		Nothing
 11263 ;; This function is called by:
 11264 ;;		_sprintf
 11265 ;; This function uses a non-reentrant model
 11266 ;;
 11267                           
 11268                           	psect	text19
 11269  015C9A                     __ptext19:
 11270                           	opt stack 0
 11271  015C9A                     ___llmod:
 11272                           	opt stack 25
 11273                           
 11274                           ; BSR set to: 0
 11275                           ;incstack = 0
 11276  015C9A  0100               	movlb	0	; () banked
 11277  015C9C  5175               	movf	___llmod@divisor& (0+255),w,b
 11278  015C9E  0100               	movlb	0	; () banked
 11279  015CA0  1176               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11280  015CA2  0100               	movlb	0	; () banked
 11281  015CA4  1177               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11282  015CA6  0100               	movlb	0	; () banked
 11283  015CA8  1178               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11284  015CAA  B4D8               	btfsc	status,2,c
 11285  015CAC  D03A               	goto	l1426
 11286                           
 11287                           ; BSR set to: 0
 11288  015CAE  0E01               	movlw	1
 11289  015CB0  0100               	movlb	0	; () banked
 11290  015CB2  6F79               	movwf	___llmod@counter& (0+255),b
 11291  015CB4  D008               	goto	l8482
 11292  015CB6                     l8480:
 11293                           
 11294                           ; BSR set to: 0
 11295  015CB6  0100               	movlb	0	; () banked
 11296  015CB8  90D8               	bcf	status,0,c
 11297  015CBA  3775               	rlcf	___llmod@divisor& (0+255),f,b
 11298  015CBC  3776               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11299  015CBE  3777               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11300  015CC0  3778               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11301  015CC2  0100               	movlb	0	; () banked
 11302  015CC4  2B79               	incf	___llmod@counter& (0+255),f,b
 11303  015CC6                     l8482:
 11304                           
 11305                           ; BSR set to: 0
 11306  015CC6  0100               	movlb	0	; () banked
 11307  015CC8  AF78               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11308  015CCA  D7F5               	goto	l8480
 11309  015CCC                     l8484:
 11310                           
 11311                           ; BSR set to: 0
 11312  015CCC  0100               	movlb	0	; () banked
 11313  015CCE  5175               	movf	___llmod@divisor& (0+255),w,b
 11314  015CD0  0100               	movlb	0	; () banked
 11315  015CD2  5D71               	subwf	___llmod@dividend& (0+255),w,b
 11316  015CD4  0100               	movlb	0	; () banked
 11317  015CD6  5176               	movf	(___llmod@divisor+1)& (0+255),w,b
 11318  015CD8  0100               	movlb	0	; () banked
 11319  015CDA  5972               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11320  015CDC  0100               	movlb	0	; () banked
 11321  015CDE  5177               	movf	(___llmod@divisor+2)& (0+255),w,b
 11322  015CE0  0100               	movlb	0	; () banked
 11323  015CE2  5973               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11324  015CE4  0100               	movlb	0	; () banked
 11325  015CE6  5178               	movf	(___llmod@divisor+3)& (0+255),w,b
 11326  015CE8  0100               	movlb	0	; () banked
 11327  015CEA  5974               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11328  015CEC  A0D8               	btfss	status,0,c
 11329  015CEE  D010               	goto	l8488
 11330                           
 11331                           ; BSR set to: 0
 11332  015CF0  0100               	movlb	0	; () banked
 11333  015CF2  5175               	movf	___llmod@divisor& (0+255),w,b
 11334  015CF4  0100               	movlb	0	; () banked
 11335  015CF6  5F71               	subwf	___llmod@dividend& (0+255),f,b
 11336  015CF8  0100               	movlb	0	; () banked
 11337  015CFA  5176               	movf	(___llmod@divisor+1)& (0+255),w,b
 11338  015CFC  0100               	movlb	0	; () banked
 11339  015CFE  5B72               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11340  015D00  0100               	movlb	0	; () banked
 11341  015D02  5177               	movf	(___llmod@divisor+2)& (0+255),w,b
 11342  015D04  0100               	movlb	0	; () banked
 11343  015D06  5B73               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11344  015D08  0100               	movlb	0	; () banked
 11345  015D0A  5178               	movf	(___llmod@divisor+3)& (0+255),w,b
 11346  015D0C  0100               	movlb	0	; () banked
 11347  015D0E  5B74               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11348  015D10                     l8488:
 11349                           
 11350                           ; BSR set to: 0
 11351  015D10  0100               	movlb	0	; () banked
 11352  015D12  90D8               	bcf	status,0,c
 11353  015D14  3378               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11354  015D16  3377               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11355  015D18  3376               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11356  015D1A  3375               	rrcf	___llmod@divisor& (0+255),f,b
 11357                           
 11358                           ; BSR set to: 0
 11359  015D1C  0100               	movlb	0	; () banked
 11360  015D1E  2F79               	decfsz	___llmod@counter& (0+255),f,b
 11361  015D20  D7D5               	goto	l8484
 11362  015D22                     l1426:
 11363                           
 11364                           ; BSR set to: 0
 11365  015D22  C071  F071         	movff	___llmod@dividend,?___llmod
 11366  015D26  C072  F072         	movff	___llmod@dividend+1,?___llmod+1
 11367  015D2A  C073  F073         	movff	___llmod@dividend+2,?___llmod+2
 11368  015D2E  C074  F074         	movff	___llmod@dividend+3,?___llmod+3
 11369                           
 11370                           ; BSR set to: 0
 11371  015D32  0012               	return		;funcret
 11372  015D34                     __end_of___llmod:
 11373                           	opt stack 0
 11374                           tblptru	equ	0xFF8
 11375                           tblptrh	equ	0xFF7
 11376                           tblptrl	equ	0xFF6
 11377                           tablat	equ	0xFF5
 11378                           prodh	equ	0xFF4
 11379                           prodl	equ	0xFF3
 11380                           intcon	equ	0xFF2
 11381                           postinc0	equ	0xFEE
 11382                           wreg	equ	0xFE8
 11383                           indf2	equ	0xFDF
 11384                           postinc2	equ	0xFDE
 11385                           fsr2h	equ	0xFDA
 11386                           fsr2l	equ	0xFD9
 11387                           status	equ	0xFD8
 11388                           
 11389 ;; *************** function ___lldiv *****************
 11390 ;; Defined at:
 11391 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 11392 ;; Parameters:    Size  Location     Type
 11393 ;;  dividend        4   17[BANK0 ] unsigned long 
 11394 ;;  divisor         4   21[BANK0 ] unsigned long 
 11395 ;; Auto vars:     Size  Location     Type
 11396 ;;  quotient        4   25[BANK0 ] unsigned long 
 11397 ;;  counter         1   29[BANK0 ] unsigned char 
 11398 ;; Return value:  Size  Location     Type
 11399 ;;                  4   17[BANK0 ] unsigned long 
 11400 ;; Registers used:
 11401 ;;		wreg, status,2, status,0
 11402 ;; Tracked objects:
 11403 ;;		On entry : 0/0
 11404 ;;		On exit  : 0/0
 11405 ;;		Unchanged: 0/0
 11406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11407 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11408 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11410 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11411 ;;Total ram usage:       13 bytes
 11412 ;; Hardware stack levels used:    1
 11413 ;; Hardware stack levels required when called:    3
 11414 ;; This function calls:
 11415 ;;		Nothing
 11416 ;; This function is called by:
 11417 ;;		_sprintf
 11418 ;; This function uses a non-reentrant model
 11419 ;;
 11420                           
 11421                           	psect	text20
 11422  015930                     __ptext20:
 11423                           	opt stack 0
 11424  015930                     ___lldiv:
 11425                           	opt stack 25
 11426                           
 11427                           ; BSR set to: 0
 11428                           ;incstack = 0
 11429  015930  0E00               	movlw	0
 11430  015932  0100               	movlb	0	; () banked
 11431  015934  6F79               	movwf	___lldiv@quotient& (0+255),b
 11432  015936  0E00               	movlw	0
 11433  015938  6F7A               	movwf	(___lldiv@quotient+1)& (0+255),b
 11434  01593A  0E00               	movlw	0
 11435  01593C  6F7B               	movwf	(___lldiv@quotient+2)& (0+255),b
 11436  01593E  0E00               	movlw	0
 11437  015940  6F7C               	movwf	(___lldiv@quotient+3)& (0+255),b
 11438                           
 11439                           ; BSR set to: 0
 11440  015942  0100               	movlb	0	; () banked
 11441  015944  5175               	movf	___lldiv@divisor& (0+255),w,b
 11442  015946  0100               	movlb	0	; () banked
 11443  015948  1176               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11444  01594A  0100               	movlb	0	; () banked
 11445  01594C  1177               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11446  01594E  0100               	movlb	0	; () banked
 11447  015950  1178               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11448  015952  B4D8               	btfsc	status,2,c
 11449  015954  D042               	goto	l1416
 11450                           
 11451                           ; BSR set to: 0
 11452  015956  0E01               	movlw	1
 11453  015958  0100               	movlb	0	; () banked
 11454  01595A  6F7D               	movwf	___lldiv@counter& (0+255),b
 11455  01595C  D008               	goto	l8462
 11456  01595E                     l8460:
 11457                           
 11458                           ; BSR set to: 0
 11459  01595E  0100               	movlb	0	; () banked
 11460  015960  90D8               	bcf	status,0,c
 11461  015962  3775               	rlcf	___lldiv@divisor& (0+255),f,b
 11462  015964  3776               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11463  015966  3777               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11464  015968  3778               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11465  01596A  0100               	movlb	0	; () banked
 11466  01596C  2B7D               	incf	___lldiv@counter& (0+255),f,b
 11467  01596E                     l8462:
 11468                           
 11469                           ; BSR set to: 0
 11470  01596E  0100               	movlb	0	; () banked
 11471  015970  AF78               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11472  015972  D7F5               	goto	l8460
 11473  015974                     l8464:
 11474                           
 11475                           ; BSR set to: 0
 11476  015974  0100               	movlb	0	; () banked
 11477  015976  90D8               	bcf	status,0,c
 11478  015978  3779               	rlcf	___lldiv@quotient& (0+255),f,b
 11479  01597A  377A               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11480  01597C  377B               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11481  01597E  377C               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11482                           
 11483                           ; BSR set to: 0
 11484  015980  0100               	movlb	0	; () banked
 11485  015982  5175               	movf	___lldiv@divisor& (0+255),w,b
 11486  015984  0100               	movlb	0	; () banked
 11487  015986  5D71               	subwf	___lldiv@dividend& (0+255),w,b
 11488  015988  0100               	movlb	0	; () banked
 11489  01598A  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11490  01598C  0100               	movlb	0	; () banked
 11491  01598E  5972               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11492  015990  0100               	movlb	0	; () banked
 11493  015992  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11494  015994  0100               	movlb	0	; () banked
 11495  015996  5973               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11496  015998  0100               	movlb	0	; () banked
 11497  01599A  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11498  01599C  0100               	movlb	0	; () banked
 11499  01599E  5974               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11500  0159A0  A0D8               	btfss	status,0,c
 11501  0159A2  D012               	goto	l8472
 11502                           
 11503                           ; BSR set to: 0
 11504  0159A4  0100               	movlb	0	; () banked
 11505  0159A6  5175               	movf	___lldiv@divisor& (0+255),w,b
 11506  0159A8  0100               	movlb	0	; () banked
 11507  0159AA  5F71               	subwf	___lldiv@dividend& (0+255),f,b
 11508  0159AC  0100               	movlb	0	; () banked
 11509  0159AE  5176               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11510  0159B0  0100               	movlb	0	; () banked
 11511  0159B2  5B72               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11512  0159B4  0100               	movlb	0	; () banked
 11513  0159B6  5177               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11514  0159B8  0100               	movlb	0	; () banked
 11515  0159BA  5B73               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11516  0159BC  0100               	movlb	0	; () banked
 11517  0159BE  5178               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11518  0159C0  0100               	movlb	0	; () banked
 11519  0159C2  5B74               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11520                           
 11521                           ; BSR set to: 0
 11522  0159C4  0100               	movlb	0	; () banked
 11523  0159C6  8179               	bsf	___lldiv@quotient& (0+255),0,b
 11524  0159C8                     l8472:
 11525                           
 11526                           ; BSR set to: 0
 11527  0159C8  0100               	movlb	0	; () banked
 11528  0159CA  90D8               	bcf	status,0,c
 11529  0159CC  3378               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11530  0159CE  3377               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11531  0159D0  3376               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11532  0159D2  3375               	rrcf	___lldiv@divisor& (0+255),f,b
 11533                           
 11534                           ; BSR set to: 0
 11535  0159D4  0100               	movlb	0	; () banked
 11536  0159D6  2F7D               	decfsz	___lldiv@counter& (0+255),f,b
 11537  0159D8  D7CD               	goto	l8464
 11538  0159DA                     l1416:
 11539                           
 11540                           ; BSR set to: 0
 11541  0159DA  C079  F071         	movff	___lldiv@quotient,?___lldiv
 11542  0159DE  C07A  F072         	movff	___lldiv@quotient+1,?___lldiv+1
 11543  0159E2  C07B  F073         	movff	___lldiv@quotient+2,?___lldiv+2
 11544  0159E6  C07C  F074         	movff	___lldiv@quotient+3,?___lldiv+3
 11545                           
 11546                           ; BSR set to: 0
 11547  0159EA  0012               	return		;funcret
 11548  0159EC                     __end_of___lldiv:
 11549                           	opt stack 0
 11550                           tblptru	equ	0xFF8
 11551                           tblptrh	equ	0xFF7
 11552                           tblptrl	equ	0xFF6
 11553                           tablat	equ	0xFF5
 11554                           prodh	equ	0xFF4
 11555                           prodl	equ	0xFF3
 11556                           intcon	equ	0xFF2
 11557                           postinc0	equ	0xFEE
 11558                           wreg	equ	0xFE8
 11559                           indf2	equ	0xFDF
 11560                           postinc2	equ	0xFDE
 11561                           fsr2h	equ	0xFDA
 11562                           fsr2l	equ	0xFD9
 11563                           status	equ	0xFD8
 11564                           
 11565 ;; *************** function ___fltol *****************
 11566 ;; Defined at:
 11567 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 11568 ;; Parameters:    Size  Location     Type
 11569 ;;  f1              4   89[BANK0 ] unsigned long 
 11570 ;; Auto vars:     Size  Location     Type
 11571 ;;  exp1            1   98[BANK0 ] unsigned char 
 11572 ;;  sign1           1   97[BANK0 ] unsigned char 
 11573 ;; Return value:  Size  Location     Type
 11574 ;;                  4   89[BANK0 ] long 
 11575 ;; Registers used:
 11576 ;;		wreg, status,2, status,0
 11577 ;; Tracked objects:
 11578 ;;		On entry : 0/0
 11579 ;;		On exit  : 0/0
 11580 ;;		Unchanged: 0/0
 11581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11582 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11583 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11584 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11585 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11586 ;;Total ram usage:       10 bytes
 11587 ;; Hardware stack levels used:    1
 11588 ;; Hardware stack levels required when called:    3
 11589 ;; This function calls:
 11590 ;;		Nothing
 11591 ;; This function is called by:
 11592 ;;		_main
 11593 ;;		_sprintf
 11594 ;; This function uses a non-reentrant model
 11595 ;;
 11596                           
 11597                           	psect	text21
 11598  0155BC                     __ptext21:
 11599                           	opt stack 0
 11600  0155BC                     ___fltol:
 11601                           	opt stack 27
 11602                           
 11603                           ; BSR set to: 0
 11604                           ;incstack = 0
 11605  0155BC  0100               	movlb	0	; () banked
 11606  0155BE  35BB               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11607  0155C0  35BC               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11608  0155C2  0100               	movlb	0	; () banked
 11609  0155C4  6FC2               	movwf	___fltol@exp1& (0+255),b
 11610  0155C6  0100               	movlb	0	; () banked
 11611  0155C8  51C2               	movf	___fltol@exp1& (0+255),w,b
 11612  0155CA  A4D8               	btfss	status,2,c
 11613  0155CC  D00A               	goto	l8416
 11614                           
 11615                           ; BSR set to: 0
 11616  0155CE  0E00               	movlw	0
 11617  0155D0  0100               	movlb	0	; () banked
 11618  0155D2  6FB9               	movwf	?___fltol& (0+255),b
 11619  0155D4  0E00               	movlw	0
 11620  0155D6  6FBA               	movwf	(?___fltol+1)& (0+255),b
 11621  0155D8  0E00               	movlw	0
 11622  0155DA  6FBB               	movwf	(?___fltol+2)& (0+255),b
 11623  0155DC  0E00               	movlw	0
 11624  0155DE  6FBC               	movwf	(?___fltol+3)& (0+255),b
 11625                           
 11626                           ; BSR set to: 0
 11627  0155E0  0012               	return	
 11628  0155E2                     l8416:
 11629                           
 11630                           ; BSR set to: 0
 11631  0155E2  C0B9  F0BD         	movff	___fltol@f1,??___fltol
 11632  0155E6  C0BA  F0BE         	movff	___fltol@f1+1,??___fltol+1
 11633  0155EA  C0BB  F0BF         	movff	___fltol@f1+2,??___fltol+2
 11634  0155EE  C0BC  F0C0         	movff	___fltol@f1+3,??___fltol+3
 11635  0155F2  0E20               	movlw	32
 11636  0155F4  D006               	goto	u11230
 11637  0155F6                     u11235:
 11638  0155F6  0100               	movlb	0	; () banked
 11639  0155F8  90D8               	bcf	status,0,c
 11640  0155FA  33C0               	rrcf	(??___fltol+3)& (0+255),f,b
 11641  0155FC  33BF               	rrcf	(??___fltol+2)& (0+255),f,b
 11642  0155FE  33BE               	rrcf	(??___fltol+1)& (0+255),f,b
 11643  015600  33BD               	rrcf	??___fltol& (0+255),f,b
 11644  015602                     u11230:
 11645  015602  2EE8               	decfsz	wreg,f,c
 11646  015604  D7F8               	goto	u11235
 11647  015606  0100               	movlb	0	; () banked
 11648  015608  51BD               	movf	??___fltol& (0+255),w,b
 11649  01560A  0100               	movlb	0	; () banked
 11650  01560C  6FC1               	movwf	___fltol@sign1& (0+255),b
 11651                           
 11652                           ; BSR set to: 0
 11653  01560E  0100               	movlb	0	; () banked
 11654  015610  8FBB               	bsf	(___fltol@f1+2)& (0+255),7,b
 11655                           
 11656                           ; BSR set to: 0
 11657  015612  0EFF               	movlw	255
 11658  015614  0100               	movlb	0	; () banked
 11659  015616  17B9               	andwf	___fltol@f1& (0+255),f,b
 11660  015618  0EFF               	movlw	255
 11661  01561A  17BA               	andwf	(___fltol@f1+1)& (0+255),f,b
 11662  01561C  0EFF               	movlw	255
 11663  01561E  17BB               	andwf	(___fltol@f1+2)& (0+255),f,b
 11664  015620  0E00               	movlw	0
 11665  015622  17BC               	andwf	(___fltol@f1+3)& (0+255),f,b
 11666                           
 11667                           ; BSR set to: 0
 11668  015624  0E96               	movlw	150
 11669  015626  0100               	movlb	0	; () banked
 11670  015628  5FC2               	subwf	___fltol@exp1& (0+255),f,b
 11671                           
 11672                           ; BSR set to: 0
 11673  01562A  0100               	movlb	0	; () banked
 11674  01562C  AFC2               	btfss	___fltol@exp1& (0+255),7,b
 11675  01562E  D01A               	goto	l8436
 11676                           
 11677                           ; BSR set to: 0
 11678  015630  0100               	movlb	0	; () banked
 11679  015632  51C2               	movf	___fltol@exp1& (0+255),w,b
 11680  015634  0A80               	xorlw	128
 11681  015636  0F97               	addlw	151
 11682  015638  B0D8               	btfsc	status,0,c
 11683  01563A  D00A               	goto	l8432
 11684                           
 11685                           ; BSR set to: 0
 11686  01563C  0E00               	movlw	0
 11687  01563E  0100               	movlb	0	; () banked
 11688  015640  6FB9               	movwf	?___fltol& (0+255),b
 11689  015642  0E00               	movlw	0
 11690  015644  6FBA               	movwf	(?___fltol+1)& (0+255),b
 11691  015646  0E00               	movlw	0
 11692  015648  6FBB               	movwf	(?___fltol+2)& (0+255),b
 11693  01564A  0E00               	movlw	0
 11694  01564C  6FBC               	movwf	(?___fltol+3)& (0+255),b
 11695                           
 11696                           ; BSR set to: 0
 11697  01564E  0012               	return	
 11698  015650                     l8432:
 11699                           
 11700                           ; BSR set to: 0
 11701  015650  0100               	movlb	0	; () banked
 11702  015652  90D8               	bcf	status,0,c
 11703  015654  33BC               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11704  015656  33BB               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11705  015658  33BA               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11706  01565A  33B9               	rrcf	___fltol@f1& (0+255),f,b
 11707                           
 11708                           ; BSR set to: 0
 11709  01565C  0100               	movlb	0	; () banked
 11710  01565E  3FC2               	incfsz	___fltol@exp1& (0+255),f,b
 11711  015660  D7F7               	goto	l8432
 11712                           
 11713                           ; BSR set to: 0
 11714  015662  D01B               	goto	l8446
 11715  015664                     l8436:
 11716                           
 11717                           ; BSR set to: 0
 11718  015664  0E1F               	movlw	31
 11719  015666  0100               	movlb	0	; () banked
 11720  015668  65C2               	cpfsgt	___fltol@exp1& (0+255),b
 11721  01566A  D012               	goto	l8444
 11722                           
 11723                           ; BSR set to: 0
 11724  01566C  0E00               	movlw	0
 11725  01566E  0100               	movlb	0	; () banked
 11726  015670  6FB9               	movwf	?___fltol& (0+255),b
 11727  015672  0E00               	movlw	0
 11728  015674  6FBA               	movwf	(?___fltol+1)& (0+255),b
 11729  015676  0E00               	movlw	0
 11730  015678  6FBB               	movwf	(?___fltol+2)& (0+255),b
 11731  01567A  0E00               	movlw	0
 11732  01567C  6FBC               	movwf	(?___fltol+3)& (0+255),b
 11733                           
 11734                           ; BSR set to: 0
 11735  01567E  0012               	return	
 11736  015680                     l8442:
 11737                           
 11738                           ; BSR set to: 0
 11739  015680  0100               	movlb	0	; () banked
 11740  015682  90D8               	bcf	status,0,c
 11741  015684  37B9               	rlcf	___fltol@f1& (0+255),f,b
 11742  015686  37BA               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11743  015688  37BB               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11744  01568A  37BC               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11745  01568C  0100               	movlb	0	; () banked
 11746  01568E  07C2               	decf	___fltol@exp1& (0+255),f,b
 11747  015690                     l8444:
 11748                           
 11749                           ; BSR set to: 0
 11750  015690  0100               	movlb	0	; () banked
 11751  015692  51C2               	movf	___fltol@exp1& (0+255),w,b
 11752  015694  0100               	movlb	0	; () banked
 11753  015696  A4D8               	btfss	status,2,c
 11754  015698  D7F3               	goto	l8442
 11755  01569A                     l8446:
 11756                           
 11757                           ; BSR set to: 0
 11758  01569A  0100               	movlb	0	; () banked
 11759  01569C  51C1               	movf	___fltol@sign1& (0+255),w,b
 11760  01569E  0100               	movlb	0	; () banked
 11761  0156A0  B4D8               	btfsc	status,2,c
 11762  0156A2  D009               	goto	l8450
 11763                           
 11764                           ; BSR set to: 0
 11765  0156A4  0100               	movlb	0	; () banked
 11766  0156A6  1FBC               	comf	(___fltol@f1+3)& (0+255),f,b
 11767  0156A8  1FBB               	comf	(___fltol@f1+2)& (0+255),f,b
 11768  0156AA  1FBA               	comf	(___fltol@f1+1)& (0+255),f,b
 11769  0156AC  6DB9               	negf	___fltol@f1& (0+255),b
 11770  0156AE  0E00               	movlw	0
 11771  0156B0  23BA               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11772  0156B2  23BB               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11773  0156B4  23BC               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11774  0156B6                     l8450:
 11775                           
 11776                           ; BSR set to: 0
 11777  0156B6  C0B9  F0B9         	movff	___fltol@f1,?___fltol
 11778  0156BA  C0BA  F0BA         	movff	___fltol@f1+1,?___fltol+1
 11779  0156BE  C0BB  F0BB         	movff	___fltol@f1+2,?___fltol+2
 11780  0156C2  C0BC  F0BC         	movff	___fltol@f1+3,?___fltol+3
 11781  0156C6  0012               	return	
 11782  0156C8                     __end_of___fltol:
 11783                           	opt stack 0
 11784                           tblptru	equ	0xFF8
 11785                           tblptrh	equ	0xFF7
 11786                           tblptrl	equ	0xFF6
 11787                           tablat	equ	0xFF5
 11788                           prodh	equ	0xFF4
 11789                           prodl	equ	0xFF3
 11790                           intcon	equ	0xFF2
 11791                           postinc0	equ	0xFEE
 11792                           wreg	equ	0xFE8
 11793                           indf2	equ	0xFDF
 11794                           postinc2	equ	0xFDE
 11795                           fsr2h	equ	0xFDA
 11796                           fsr2l	equ	0xFD9
 11797                           status	equ	0xFD8
 11798                           
 11799 ;; *************** function ___flsub *****************
 11800 ;; Defined at:
 11801 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 11802 ;; Parameters:    Size  Location     Type
 11803 ;;  b               4   89[BANK0 ] long 
 11804 ;;  a               4   93[BANK0 ] long 
 11805 ;; Auto vars:     Size  Location     Type
 11806 ;;		None
 11807 ;; Return value:  Size  Location     Type
 11808 ;;                  4   89[BANK0 ] long 
 11809 ;; Registers used:
 11810 ;;		wreg, status,2, status,0, cstack
 11811 ;; Tracked objects:
 11812 ;;		On entry : 0/0
 11813 ;;		On exit  : 0/0
 11814 ;;		Unchanged: 0/0
 11815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11816 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11819 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11820 ;;Total ram usage:        8 bytes
 11821 ;; Hardware stack levels used:    1
 11822 ;; Hardware stack levels required when called:    4
 11823 ;; This function calls:
 11824 ;;		___fladd
 11825 ;; This function is called by:
 11826 ;;		_sprintf
 11827 ;; This function uses a non-reentrant model
 11828 ;;
 11829                           
 11830                           	psect	text22
 11831  015FA6                     __ptext22:
 11832                           	opt stack 0
 11833  015FA6                     ___flsub:
 11834                           	opt stack 24
 11835                           
 11836                           ; BSR set to: 0
 11837                           ;incstack = 0
 11838  015FA6  0E00               	movlw	0
 11839  015FA8  0100               	movlb	0	; () banked
 11840  015FAA  1BBD               	xorwf	___flsub@a& (0+255),f,b
 11841  015FAC  0E00               	movlw	0
 11842  015FAE  1BBE               	xorwf	(___flsub@a+1)& (0+255),f,b
 11843  015FB0  0E00               	movlw	0
 11844  015FB2  1BBF               	xorwf	(___flsub@a+2)& (0+255),f,b
 11845  015FB4  0E80               	movlw	128
 11846  015FB6  1BC0               	xorwf	(___flsub@a+3)& (0+255),f,b
 11847                           
 11848                           ; BSR set to: 0
 11849  015FB8  C0B9  F0A5         	movff	___flsub@b,___fladd@b
 11850  015FBC  C0BA  F0A6         	movff	___flsub@b+1,___fladd@b+1
 11851  015FC0  C0BB  F0A7         	movff	___flsub@b+2,___fladd@b+2
 11852  015FC4  C0BC  F0A8         	movff	___flsub@b+3,___fladd@b+3
 11853  015FC8  C0BD  F0A9         	movff	___flsub@a,___fladd@a
 11854  015FCC  C0BE  F0AA         	movff	___flsub@a+1,___fladd@a+1
 11855  015FD0  C0BF  F0AB         	movff	___flsub@a+2,___fladd@a+2
 11856  015FD4  C0C0  F0AC         	movff	___flsub@a+3,___fladd@a+3
 11857  015FD8  EC8B  F099         	call	___fladd	;wreg free
 11858  015FDC  C0A5  F0B9         	movff	?___fladd,?___flsub
 11859  015FE0  C0A6  F0BA         	movff	?___fladd+1,?___flsub+1
 11860  015FE4  C0A7  F0BB         	movff	?___fladd+2,?___flsub+2
 11861  015FE8  C0A8  F0BC         	movff	?___fladd+3,?___flsub+3
 11862  015FEC  0012               	return	
 11863  015FEE                     __end_of___flsub:
 11864                           	opt stack 0
 11865                           tblptru	equ	0xFF8
 11866                           tblptrh	equ	0xFF7
 11867                           tblptrl	equ	0xFF6
 11868                           tablat	equ	0xFF5
 11869                           prodh	equ	0xFF4
 11870                           prodl	equ	0xFF3
 11871                           intcon	equ	0xFF2
 11872                           postinc0	equ	0xFEE
 11873                           wreg	equ	0xFE8
 11874                           indf2	equ	0xFDF
 11875                           postinc2	equ	0xFDE
 11876                           fsr2h	equ	0xFDA
 11877                           fsr2l	equ	0xFD9
 11878                           status	equ	0xFD8
 11879                           
 11880 ;; *************** function ___fladd *****************
 11881 ;; Defined at:
 11882 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 11883 ;; Parameters:    Size  Location     Type
 11884 ;;  b               4   69[BANK0 ] long 
 11885 ;;  a               4   73[BANK0 ] long 
 11886 ;; Auto vars:     Size  Location     Type
 11887 ;;  grs             1   88[BANK0 ] unsigned char 
 11888 ;;  bexp            1   87[BANK0 ] unsigned char 
 11889 ;;  aexp            1   86[BANK0 ] unsigned char 
 11890 ;;  signs           1   85[BANK0 ] unsigned char 
 11891 ;; Return value:  Size  Location     Type
 11892 ;;                  4   69[BANK0 ] unsigned char 
 11893 ;; Registers used:
 11894 ;;		wreg, status,2, status,0
 11895 ;; Tracked objects:
 11896 ;;		On entry : 0/0
 11897 ;;		On exit  : 0/0
 11898 ;;		Unchanged: 0/0
 11899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11900 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11901 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11902 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11903 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11904 ;;Total ram usage:       20 bytes
 11905 ;; Hardware stack levels used:    1
 11906 ;; Hardware stack levels required when called:    3
 11907 ;; This function calls:
 11908 ;;		Nothing
 11909 ;; This function is called by:
 11910 ;;		_main
 11911 ;;		_sprintf
 11912 ;;		___flsub
 11913 ;; This function uses a non-reentrant model
 11914 ;;
 11915                           
 11916                           	psect	text23
 11917  013316                     __ptext23:
 11918                           	opt stack 0
 11919  013316                     ___fladd:
 11920                           	opt stack 27
 11921                           
 11922                           ;incstack = 0
 11923  013316  0100               	movlb	0	; () banked
 11924  013318  51A8               	movf	(___fladd@b+3)& (0+255),w,b
 11925  01331A  0B80               	andlw	128
 11926  01331C  0100               	movlb	0	; () banked
 11927  01331E  6FB5               	movwf	___fladd@signs& (0+255),b
 11928  013320  0100               	movlb	0	; () banked
 11929  013322  51A8               	movf	(___fladd@b+3)& (0+255),w,b
 11930  013324  25A8               	addwf	(___fladd@b+3)& (0+255),w,b
 11931  013326  0100               	movlb	0	; () banked
 11932  013328  6FB7               	movwf	___fladd@bexp& (0+255),b
 11933                           
 11934                           ; BSR set to: 0
 11935  01332A  0100               	movlb	0	; () banked
 11936  01332C  AFA7               	btfss	(___fladd@b+2)& (0+255),7,b
 11937  01332E  D002               	goto	l7748
 11938                           
 11939                           ; BSR set to: 0
 11940  013330  0100               	movlb	0	; () banked
 11941  013332  81B7               	bsf	___fladd@bexp& (0+255),0,b
 11942  013334                     l7748:
 11943                           
 11944                           ; BSR set to: 0
 11945  013334  0100               	movlb	0	; () banked
 11946  013336  51B7               	movf	___fladd@bexp& (0+255),w,b
 11947  013338  0100               	movlb	0	; () banked
 11948  01333A  B4D8               	btfsc	status,2,c
 11949  01333C  D012               	goto	l7758
 11950                           
 11951                           ; BSR set to: 0
 11952  01333E  0100               	movlb	0	; () banked
 11953  013340  29B7               	incf	___fladd@bexp& (0+255),w,b
 11954  013342  A4D8               	btfss	status,2,c
 11955  013344  D009               	goto	l7754
 11956                           
 11957                           ; BSR set to: 0
 11958  013346  0E00               	movlw	0
 11959  013348  0100               	movlb	0	; () banked
 11960  01334A  6FA5               	movwf	___fladd@b& (0+255),b
 11961  01334C  0E00               	movlw	0
 11962  01334E  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 11963  013350  0E00               	movlw	0
 11964  013352  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 11965  013354  0E00               	movlw	0
 11966  013356  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 11967  013358                     l7754:
 11968                           
 11969                           ; BSR set to: 0
 11970  013358  0100               	movlb	0	; () banked
 11971  01335A  8FA7               	bsf	(___fladd@b+2)& (0+255),7,b
 11972                           
 11973                           ; BSR set to: 0
 11974  01335C  0E00               	movlw	0
 11975  01335E  0100               	movlb	0	; () banked
 11976  013360  D008               	goto	L11
 11977  013362                     l7758:
 11978                           
 11979                           ; BSR set to: 0
 11980  013362  0E00               	movlw	0
 11981  013364  0100               	movlb	0	; () banked
 11982  013366  6FA5               	movwf	___fladd@b& (0+255),b
 11983  013368  0E00               	movlw	0
 11984  01336A  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 11985  01336C  0E00               	movlw	0
 11986  01336E  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 11987  013370  0E00               	movlw	0
 11988  013372                     L11:
 11989  013372  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 11990                           
 11991                           ; BSR set to: 0
 11992                           
 11993                           ; BSR set to: 0
 11994  013374  0100               	movlb	0	; () banked
 11995  013376  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 11996  013378  0B80               	andlw	128
 11997  01337A  0100               	movlb	0	; () banked
 11998  01337C  6FB6               	movwf	___fladd@aexp& (0+255),b
 11999                           
 12000                           ; BSR set to: 0
 12001  01337E  0100               	movlb	0	; () banked
 12002  013380  51B5               	movf	___fladd@signs& (0+255),w,b
 12003  013382  0100               	movlb	0	; () banked
 12004  013384  19B6               	xorwf	___fladd@aexp& (0+255),w,b
 12005  013386  B4D8               	btfsc	status,2,c
 12006  013388  D002               	goto	l7766
 12007                           
 12008                           ; BSR set to: 0
 12009  01338A  0100               	movlb	0	; () banked
 12010  01338C  8DB5               	bsf	___fladd@signs& (0+255),6,b
 12011  01338E                     l7766:
 12012                           
 12013                           ; BSR set to: 0
 12014  01338E  0100               	movlb	0	; () banked
 12015  013390  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 12016  013392  25AC               	addwf	(___fladd@a+3)& (0+255),w,b
 12017  013394  0100               	movlb	0	; () banked
 12018  013396  6FB6               	movwf	___fladd@aexp& (0+255),b
 12019                           
 12020                           ; BSR set to: 0
 12021  013398  0100               	movlb	0	; () banked
 12022  01339A  AFAB               	btfss	(___fladd@a+2)& (0+255),7,b
 12023  01339C  D002               	goto	l7772
 12024                           
 12025                           ; BSR set to: 0
 12026  01339E  0100               	movlb	0	; () banked
 12027  0133A0  81B6               	bsf	___fladd@aexp& (0+255),0,b
 12028  0133A2                     l7772:
 12029                           
 12030                           ; BSR set to: 0
 12031  0133A2  0100               	movlb	0	; () banked
 12032  0133A4  51B6               	movf	___fladd@aexp& (0+255),w,b
 12033  0133A6  0100               	movlb	0	; () banked
 12034  0133A8  B4D8               	btfsc	status,2,c
 12035  0133AA  D012               	goto	l7782
 12036                           
 12037                           ; BSR set to: 0
 12038  0133AC  0100               	movlb	0	; () banked
 12039  0133AE  29B6               	incf	___fladd@aexp& (0+255),w,b
 12040  0133B0  A4D8               	btfss	status,2,c
 12041  0133B2  D009               	goto	l7778
 12042                           
 12043                           ; BSR set to: 0
 12044  0133B4  0E00               	movlw	0
 12045  0133B6  0100               	movlb	0	; () banked
 12046  0133B8  6FA9               	movwf	___fladd@a& (0+255),b
 12047  0133BA  0E00               	movlw	0
 12048  0133BC  6FAA               	movwf	(___fladd@a+1)& (0+255),b
 12049  0133BE  0E00               	movlw	0
 12050  0133C0  6FAB               	movwf	(___fladd@a+2)& (0+255),b
 12051  0133C2  0E00               	movlw	0
 12052  0133C4  6FAC               	movwf	(___fladd@a+3)& (0+255),b
 12053  0133C6                     l7778:
 12054                           
 12055                           ; BSR set to: 0
 12056  0133C6  0100               	movlb	0	; () banked
 12057  0133C8  8FAB               	bsf	(___fladd@a+2)& (0+255),7,b
 12058                           
 12059                           ; BSR set to: 0
 12060  0133CA  0E00               	movlw	0
 12061  0133CC  0100               	movlb	0	; () banked
 12062  0133CE  D008               	goto	L12
 12063  0133D0                     l7782:
 12064                           
 12065                           ; BSR set to: 0
 12066  0133D0  0E00               	movlw	0
 12067  0133D2  0100               	movlb	0	; () banked
 12068  0133D4  6FA9               	movwf	___fladd@a& (0+255),b
 12069  0133D6  0E00               	movlw	0
 12070  0133D8  6FAA               	movwf	(___fladd@a+1)& (0+255),b
 12071  0133DA  0E00               	movlw	0
 12072  0133DC  6FAB               	movwf	(___fladd@a+2)& (0+255),b
 12073  0133DE  0E00               	movlw	0
 12074  0133E0                     L12:
 12075  0133E0  6FAC               	movwf	(___fladd@a+3)& (0+255),b
 12076                           
 12077                           ; BSR set to: 0
 12078                           
 12079                           ; BSR set to: 0
 12080  0133E2  0100               	movlb	0	; () banked
 12081  0133E4  51B7               	movf	___fladd@bexp& (0+255),w,b
 12082  0133E6  0100               	movlb	0	; () banked
 12083  0133E8  5DB6               	subwf	___fladd@aexp& (0+255),w,b
 12084  0133EA  B0D8               	btfsc	status,0,c
 12085  0133EC  D024               	goto	l7820
 12086                           
 12087                           ; BSR set to: 0
 12088  0133EE  0100               	movlb	0	; () banked
 12089  0133F0  ADB5               	btfss	___fladd@signs& (0+255),6,b
 12090  0133F2  D003               	goto	l7790
 12091                           
 12092                           ; BSR set to: 0
 12093  0133F4  0E80               	movlw	128
 12094  0133F6  0100               	movlb	0	; () banked
 12095  0133F8  1BB5               	xorwf	___fladd@signs& (0+255),f,b
 12096  0133FA                     l7790:
 12097                           
 12098                           ; BSR set to: 0
 12099  0133FA  C0B7  F0B8         	movff	___fladd@bexp,___fladd@grs
 12100                           
 12101                           ; BSR set to: 0
 12102  0133FE  C0B6  F0B7         	movff	___fladd@aexp,___fladd@bexp
 12103                           
 12104                           ; BSR set to: 0
 12105  013402  C0B8  F0B6         	movff	___fladd@grs,___fladd@aexp
 12106                           
 12107                           ; BSR set to: 0
 12108  013406  C0A5  F0B8         	movff	___fladd@b,___fladd@grs
 12109                           
 12110                           ; BSR set to: 0
 12111  01340A  C0A9  F0A5         	movff	___fladd@a,___fladd@b
 12112                           
 12113                           ; BSR set to: 0
 12114  01340E  C0B8  F0A9         	movff	___fladd@grs,___fladd@a
 12115                           
 12116                           ; BSR set to: 0
 12117  013412  C0A6  F0B8         	movff	___fladd@b+1,___fladd@grs
 12118                           
 12119                           ; BSR set to: 0
 12120  013416  C0AA  F0A6         	movff	___fladd@a+1,___fladd@b+1
 12121                           
 12122                           ; BSR set to: 0
 12123  01341A  C0B8  F0AA         	movff	___fladd@grs,___fladd@a+1
 12124                           
 12125                           ; BSR set to: 0
 12126  01341E  C0A7  F0B8         	movff	___fladd@b+2,___fladd@grs
 12127                           
 12128                           ; BSR set to: 0
 12129  013422  C0AB  F0A7         	movff	___fladd@a+2,___fladd@b+2
 12130                           
 12131                           ; BSR set to: 0
 12132  013426  C0B8  F0AB         	movff	___fladd@grs,___fladd@a+2
 12133                           
 12134                           ; BSR set to: 0
 12135  01342A  C0A8  F0B8         	movff	___fladd@b+3,___fladd@grs
 12136                           
 12137                           ; BSR set to: 0
 12138  01342E  C0AC  F0A8         	movff	___fladd@a+3,___fladd@b+3
 12139                           
 12140                           ; BSR set to: 0
 12141  013432  C0B8  F0AC         	movff	___fladd@grs,___fladd@a+3
 12142  013436                     l7820:
 12143                           
 12144                           ; BSR set to: 0
 12145  013436  0E00               	movlw	0
 12146  013438  0100               	movlb	0	; () banked
 12147  01343A  6FB8               	movwf	___fladd@grs& (0+255),b
 12148                           
 12149                           ; BSR set to: 0
 12150  01343C  0100               	movlb	0	; () banked
 12151  01343E  51B7               	movf	___fladd@bexp& (0+255),w,b
 12152  013440  0100               	movlb	0	; () banked
 12153  013442  6FAD               	movwf	??___fladd& (0+255),b
 12154  013444  6BAE               	clrf	(??___fladd+1)& (0+255),b
 12155  013446  0100               	movlb	0	; () banked
 12156  013448  1FAD               	comf	??___fladd& (0+255),f,b
 12157  01344A  1FAE               	comf	(??___fladd+1)& (0+255),f,b
 12158  01344C  4BAD               	infsnz	??___fladd& (0+255),f,b
 12159  01344E  2BAE               	incf	(??___fladd+1)& (0+255),f,b
 12160  013450  0100               	movlb	0	; () banked
 12161  013452  51B6               	movf	___fladd@aexp& (0+255),w,b
 12162  013454  0100               	movlb	0	; () banked
 12163  013456  6FAF               	movwf	(??___fladd+2)& (0+255),b
 12164  013458  6BB0               	clrf	(??___fladd+3)& (0+255),b
 12165  01345A  0100               	movlb	0	; () banked
 12166  01345C  51AD               	movf	??___fladd& (0+255),w,b
 12167  01345E  0100               	movlb	0	; () banked
 12168  013460  27AF               	addwf	(??___fladd+2)& (0+255),f,b
 12169  013462  0100               	movlb	0	; () banked
 12170  013464  51AE               	movf	(??___fladd+1)& (0+255),w,b
 12171  013466  0100               	movlb	0	; () banked
 12172  013468  23B0               	addwfc	(??___fladd+3)& (0+255),f,b
 12173  01346A  0100               	movlb	0	; () banked
 12174  01346C  BFB0               	btfsc	(??___fladd+3)& (0+255),7,b
 12175  01346E  D03D               	goto	l1511
 12176  013470  0100               	movlb	0	; () banked
 12177  013472  51B0               	movf	(??___fladd+3)& (0+255),w,b
 12178  013474  E105               	bnz	u10280
 12179  013476  0E1A               	movlw	26
 12180  013478  0100               	movlb	0	; () banked
 12181  01347A  5DAF               	subwf	(??___fladd+2)& (0+255),w,b
 12182  01347C  A0D8               	btfss	status,0,c
 12183  01347E  D035               	goto	l1511
 12184  013480                     u10280:
 12185                           
 12186                           ; BSR set to: 0
 12187  013480  0100               	movlb	0	; () banked
 12188  013482  51A5               	movf	___fladd@b& (0+255),w,b
 12189  013484  0100               	movlb	0	; () banked
 12190  013486  11A6               	iorwf	(___fladd@b+1)& (0+255),w,b
 12191  013488  0100               	movlb	0	; () banked
 12192  01348A  11A7               	iorwf	(___fladd@b+2)& (0+255),w,b
 12193  01348C  0100               	movlb	0	; () banked
 12194  01348E  11A8               	iorwf	(___fladd@b+3)& (0+255),w,b
 12195  013490  B4D8               	btfsc	status,2,c
 12196  013492  D002               	goto	u10290
 12197  013494  0E01               	movlw	1
 12198  013496  D001               	goto	u10300
 12199  013498                     u10290:
 12200  013498  0E00               	movlw	0
 12201  01349A                     u10300:
 12202  01349A  0100               	movlb	0	; () banked
 12203  01349C  6FB8               	movwf	___fladd@grs& (0+255),b
 12204                           
 12205                           ; BSR set to: 0
 12206  01349E  0E00               	movlw	0
 12207  0134A0  0100               	movlb	0	; () banked
 12208  0134A2  6FA5               	movwf	___fladd@b& (0+255),b
 12209  0134A4  0E00               	movlw	0
 12210  0134A6  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 12211  0134A8  0E00               	movlw	0
 12212  0134AA  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 12213  0134AC  0E00               	movlw	0
 12214  0134AE  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 12215                           
 12216                           ; BSR set to: 0
 12217  0134B0  C0B6  F0B7         	movff	___fladd@aexp,___fladd@bexp
 12218  0134B4  D020               	goto	l1510
 12219  0134B6                     l1512:
 12220                           
 12221                           ; BSR set to: 0
 12222  0134B6  0100               	movlb	0	; () banked
 12223  0134B8  A1B8               	btfss	___fladd@grs& (0+255),0,b
 12224  0134BA  D007               	goto	l7832
 12225                           
 12226                           ; BSR set to: 0
 12227  0134BC  0100               	movlb	0	; () banked
 12228  0134BE  90D8               	bcf	status,0,c
 12229  0134C0  31B8               	rrcf	___fladd@grs& (0+255),w,b
 12230  0134C2  0901               	iorlw	1
 12231  0134C4  0100               	movlb	0	; () banked
 12232  0134C6  6FB8               	movwf	___fladd@grs& (0+255),b
 12233  0134C8  D003               	goto	l7834
 12234  0134CA                     l7832:
 12235                           
 12236                           ; BSR set to: 0
 12237  0134CA  0100               	movlb	0	; () banked
 12238  0134CC  90D8               	bcf	status,0,c
 12239  0134CE  33B8               	rrcf	___fladd@grs& (0+255),f,b
 12240  0134D0                     l7834:
 12241                           
 12242                           ; BSR set to: 0
 12243  0134D0  0100               	movlb	0	; () banked
 12244  0134D2  A1A5               	btfss	___fladd@b& (0+255),0,b
 12245  0134D4  D002               	goto	l7838
 12246                           
 12247                           ; BSR set to: 0
 12248  0134D6  0100               	movlb	0	; () banked
 12249  0134D8  8FB8               	bsf	___fladd@grs& (0+255),7,b
 12250  0134DA                     l7838:
 12251                           
 12252                           ; BSR set to: 0
 12253  0134DA  0100               	movlb	0	; () banked
 12254  0134DC  35A8               	rlcf	(___fladd@b+3)& (0+255),w,b
 12255  0134DE  33A8               	rrcf	(___fladd@b+3)& (0+255),f,b
 12256  0134E0  33A7               	rrcf	(___fladd@b+2)& (0+255),f,b
 12257  0134E2  33A6               	rrcf	(___fladd@b+1)& (0+255),f,b
 12258  0134E4  33A5               	rrcf	___fladd@b& (0+255),f,b
 12259                           
 12260                           ; BSR set to: 0
 12261  0134E6  0100               	movlb	0	; () banked
 12262  0134E8  2BB7               	incf	___fladd@bexp& (0+255),f,b
 12263  0134EA                     l1511:
 12264                           
 12265                           ; BSR set to: 0
 12266  0134EA  0100               	movlb	0	; () banked
 12267  0134EC  51B6               	movf	___fladd@aexp& (0+255),w,b
 12268  0134EE  0100               	movlb	0	; () banked
 12269  0134F0  5DB7               	subwf	___fladd@bexp& (0+255),w,b
 12270  0134F2  A0D8               	btfss	status,0,c
 12271  0134F4  D7E0               	goto	l1512
 12272  0134F6                     l1510:
 12273                           
 12274                           ; BSR set to: 0
 12275  0134F6  0100               	movlb	0	; () banked
 12276  0134F8  BDB5               	btfsc	___fladd@signs& (0+255),6,b
 12277  0134FA  D03F               	goto	l7866
 12278                           
 12279                           ; BSR set to: 0
 12280  0134FC  0100               	movlb	0	; () banked
 12281  0134FE  51B7               	movf	___fladd@bexp& (0+255),w,b
 12282  013500  0100               	movlb	0	; () banked
 12283  013502  A4D8               	btfss	status,2,c
 12284  013504  D00A               	goto	l7848
 12285                           
 12286                           ; BSR set to: 0
 12287  013506  0E00               	movlw	0
 12288  013508  0100               	movlb	0	; () banked
 12289  01350A  6FA5               	movwf	?___fladd& (0+255),b
 12290  01350C  0E00               	movlw	0
 12291  01350E  6FA6               	movwf	(?___fladd+1)& (0+255),b
 12292  013510  0E00               	movlw	0
 12293  013512  6FA7               	movwf	(?___fladd+2)& (0+255),b
 12294  013514  0E00               	movlw	0
 12295  013516  6FA8               	movwf	(?___fladd+3)& (0+255),b
 12296                           
 12297                           ; BSR set to: 0
 12298  013518  0012               	return	
 12299  01351A                     l7848:
 12300                           
 12301                           ; BSR set to: 0
 12302  01351A  0100               	movlb	0	; () banked
 12303  01351C  51A9               	movf	___fladd@a& (0+255),w,b
 12304  01351E  0100               	movlb	0	; () banked
 12305  013520  27A5               	addwf	___fladd@b& (0+255),f,b
 12306  013522  0100               	movlb	0	; () banked
 12307  013524  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 12308  013526  0100               	movlb	0	; () banked
 12309  013528  23A6               	addwfc	(___fladd@b+1)& (0+255),f,b
 12310  01352A  0100               	movlb	0	; () banked
 12311  01352C  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 12312  01352E  0100               	movlb	0	; () banked
 12313  013530  23A7               	addwfc	(___fladd@b+2)& (0+255),f,b
 12314  013532  0100               	movlb	0	; () banked
 12315  013534  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 12316  013536  0100               	movlb	0	; () banked
 12317  013538  23A8               	addwfc	(___fladd@b+3)& (0+255),f,b
 12318                           
 12319                           ; BSR set to: 0
 12320  01353A  0100               	movlb	0	; () banked
 12321  01353C  A1A8               	btfss	(___fladd@b+3)& (0+255),0,b
 12322  01353E  D0CC               	goto	l7902
 12323                           
 12324                           ; BSR set to: 0
 12325  013540  0100               	movlb	0	; () banked
 12326  013542  A1B8               	btfss	___fladd@grs& (0+255),0,b
 12327  013544  D009               	goto	l7856
 12328                           
 12329                           ; BSR set to: 0
 12330  013546  0100               	movlb	0	; () banked
 12331  013548  90D8               	bcf	status,0,c
 12332  01354A  33B8               	rrcf	___fladd@grs& (0+255),f,b
 12333  01354C  0100               	movlb	0	; () banked
 12334  01354E  51B8               	movf	___fladd@grs& (0+255),w,b
 12335  013550  0901               	iorlw	1
 12336  013552  0100               	movlb	0	; () banked
 12337  013554  6FB8               	movwf	___fladd@grs& (0+255),b
 12338  013556  D003               	goto	l7858
 12339  013558                     l7856:
 12340                           
 12341                           ; BSR set to: 0
 12342  013558  0100               	movlb	0	; () banked
 12343  01355A  90D8               	bcf	status,0,c
 12344  01355C  33B8               	rrcf	___fladd@grs& (0+255),f,b
 12345  01355E                     l7858:
 12346                           
 12347                           ; BSR set to: 0
 12348  01355E  0100               	movlb	0	; () banked
 12349  013560  A1A5               	btfss	___fladd@b& (0+255),0,b
 12350  013562  D002               	goto	l7862
 12351                           
 12352                           ; BSR set to: 0
 12353  013564  0100               	movlb	0	; () banked
 12354  013566  8FB8               	bsf	___fladd@grs& (0+255),7,b
 12355  013568                     l7862:
 12356                           
 12357                           ; BSR set to: 0
 12358  013568  0100               	movlb	0	; () banked
 12359  01356A  35A8               	rlcf	(___fladd@b+3)& (0+255),w,b
 12360  01356C  33A8               	rrcf	(___fladd@b+3)& (0+255),f,b
 12361  01356E  33A7               	rrcf	(___fladd@b+2)& (0+255),f,b
 12362  013570  33A6               	rrcf	(___fladd@b+1)& (0+255),f,b
 12363  013572  33A5               	rrcf	___fladd@b& (0+255),f,b
 12364                           
 12365                           ; BSR set to: 0
 12366  013574  0100               	movlb	0	; () banked
 12367  013576  2BB7               	incf	___fladd@bexp& (0+255),f,b
 12368                           
 12369                           ; BSR set to: 0
 12370  013578  D0AF               	goto	l7902
 12371  01357A                     l7866:
 12372                           
 12373                           ; BSR set to: 0
 12374  01357A  0100               	movlb	0	; () banked
 12375  01357C  51A9               	movf	___fladd@a& (0+255),w,b
 12376  01357E  0100               	movlb	0	; () banked
 12377  013580  5DA5               	subwf	___fladd@b& (0+255),w,b
 12378  013582  0100               	movlb	0	; () banked
 12379  013584  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 12380  013586  0100               	movlb	0	; () banked
 12381  013588  59A6               	subwfb	(___fladd@b+1)& (0+255),w,b
 12382  01358A  0100               	movlb	0	; () banked
 12383  01358C  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 12384  01358E  0100               	movlb	0	; () banked
 12385  013590  59A7               	subwfb	(___fladd@b+2)& (0+255),w,b
 12386  013592  0100               	movlb	0	; () banked
 12387  013594  51A8               	movf	(___fladd@b+3)& (0+255),w,b
 12388  013596  0A80               	xorlw	128
 12389  013598  0100               	movlb	0	; () banked
 12390  01359A  6FAD               	movwf	??___fladd& (0+255),b
 12391  01359C  0100               	movlb	0	; () banked
 12392  01359E  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 12393  0135A0  0A80               	xorlw	128
 12394  0135A2  0100               	movlb	0	; () banked
 12395  0135A4  59AD               	subwfb	??___fladd& (0+255),w,b
 12396  0135A6  B0D8               	btfsc	status,0,c
 12397  0135A8  D050               	goto	l7876
 12398                           
 12399                           ; BSR set to: 0
 12400  0135AA  C0A5  F0AD         	movff	___fladd@b,??___fladd
 12401  0135AE  C0A6  F0AE         	movff	___fladd@b+1,??___fladd+1
 12402  0135B2  C0A7  F0AF         	movff	___fladd@b+2,??___fladd+2
 12403  0135B6  C0A8  F0B0         	movff	___fladd@b+3,??___fladd+3
 12404  0135BA  0100               	movlb	0	; () banked
 12405  0135BC  1FAD               	comf	??___fladd& (0+255),f,b
 12406  0135BE  1FAE               	comf	(??___fladd+1)& (0+255),f,b
 12407  0135C0  1FAF               	comf	(??___fladd+2)& (0+255),f,b
 12408  0135C2  1FB0               	comf	(??___fladd+3)& (0+255),f,b
 12409  0135C4  2BAD               	incf	??___fladd& (0+255),f,b
 12410  0135C6  0E00               	movlw	0
 12411  0135C8  23AE               	addwfc	(??___fladd+1)& (0+255),f,b
 12412  0135CA  23AF               	addwfc	(??___fladd+2)& (0+255),f,b
 12413  0135CC  23B0               	addwfc	(??___fladd+3)& (0+255),f,b
 12414  0135CE  0100               	movlb	0	; () banked
 12415  0135D0  51A9               	movf	___fladd@a& (0+255),w,b
 12416  0135D2  0100               	movlb	0	; () banked
 12417  0135D4  25AD               	addwf	??___fladd& (0+255),w,b
 12418  0135D6  0100               	movlb	0	; () banked
 12419  0135D8  6FB1               	movwf	(??___fladd+4)& (0+255),b
 12420  0135DA  0100               	movlb	0	; () banked
 12421  0135DC  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 12422  0135DE  0100               	movlb	0	; () banked
 12423  0135E0  21AE               	addwfc	(??___fladd+1)& (0+255),w,b
 12424  0135E2  0100               	movlb	0	; () banked
 12425  0135E4  6FB2               	movwf	(??___fladd+5)& (0+255),b
 12426  0135E6  0100               	movlb	0	; () banked
 12427  0135E8  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 12428  0135EA  0100               	movlb	0	; () banked
 12429  0135EC  21AF               	addwfc	(??___fladd+2)& (0+255),w,b
 12430  0135EE  0100               	movlb	0	; () banked
 12431  0135F0  6FB3               	movwf	(??___fladd+6)& (0+255),b
 12432  0135F2  0100               	movlb	0	; () banked
 12433  0135F4  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 12434  0135F6  0100               	movlb	0	; () banked
 12435  0135F8  21B0               	addwfc	(??___fladd+3)& (0+255),w,b
 12436  0135FA  0100               	movlb	0	; () banked
 12437  0135FC  6FB4               	movwf	(??___fladd+7)& (0+255),b
 12438  0135FE  0EFF               	movlw	255
 12439  013600  0100               	movlb	0	; () banked
 12440  013602  25B1               	addwf	(??___fladd+4)& (0+255),w,b
 12441  013604  0100               	movlb	0	; () banked
 12442  013606  6FA5               	movwf	___fladd@b& (0+255),b
 12443  013608  0EFF               	movlw	255
 12444  01360A  0100               	movlb	0	; () banked
 12445  01360C  21B2               	addwfc	(??___fladd+5)& (0+255),w,b
 12446  01360E  0100               	movlb	0	; () banked
 12447  013610  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 12448  013612  0EFF               	movlw	255
 12449  013614  0100               	movlb	0	; () banked
 12450  013616  21B3               	addwfc	(??___fladd+6)& (0+255),w,b
 12451  013618  0100               	movlb	0	; () banked
 12452  01361A  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 12453  01361C  0EFF               	movlw	255
 12454  01361E  0100               	movlb	0	; () banked
 12455  013620  21B4               	addwfc	(??___fladd+7)& (0+255),w,b
 12456  013622  0100               	movlb	0	; () banked
 12457  013624  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 12458  013626  0E80               	movlw	128
 12459  013628  0100               	movlb	0	; () banked
 12460  01362A  1BB5               	xorwf	___fladd@signs& (0+255),f,b
 12461                           
 12462                           ; BSR set to: 0
 12463  01362C  0100               	movlb	0	; () banked
 12464  01362E  6DB8               	negf	___fladd@grs& (0+255),b
 12465                           
 12466                           ; BSR set to: 0
 12467  013630  0100               	movlb	0	; () banked
 12468  013632  51B8               	movf	___fladd@grs& (0+255),w,b
 12469  013634  0100               	movlb	0	; () banked
 12470  013636  A4D8               	btfss	status,2,c
 12471  013638  D018               	goto	l1527
 12472                           
 12473                           ; BSR set to: 0
 12474  01363A  0E01               	movlw	1
 12475  01363C  0100               	movlb	0	; () banked
 12476  01363E  27A5               	addwf	___fladd@b& (0+255),f,b
 12477  013640  0E00               	movlw	0
 12478  013642  23A6               	addwfc	(___fladd@b+1)& (0+255),f,b
 12479  013644  23A7               	addwfc	(___fladd@b+2)& (0+255),f,b
 12480  013646  23A8               	addwfc	(___fladd@b+3)& (0+255),f,b
 12481                           
 12482                           ; BSR set to: 0
 12483  013648  D010               	goto	l1527
 12484  01364A                     l7876:
 12485                           
 12486                           ; BSR set to: 0
 12487  01364A  0100               	movlb	0	; () banked
 12488  01364C  51A9               	movf	___fladd@a& (0+255),w,b
 12489  01364E  0100               	movlb	0	; () banked
 12490  013650  5FA5               	subwf	___fladd@b& (0+255),f,b
 12491  013652  0100               	movlb	0	; () banked
 12492  013654  51AA               	movf	(___fladd@a+1)& (0+255),w,b
 12493  013656  0100               	movlb	0	; () banked
 12494  013658  5BA6               	subwfb	(___fladd@b+1)& (0+255),f,b
 12495  01365A  0100               	movlb	0	; () banked
 12496  01365C  51AB               	movf	(___fladd@a+2)& (0+255),w,b
 12497  01365E  0100               	movlb	0	; () banked
 12498  013660  5BA7               	subwfb	(___fladd@b+2)& (0+255),f,b
 12499  013662  0100               	movlb	0	; () banked
 12500  013664  51AC               	movf	(___fladd@a+3)& (0+255),w,b
 12501  013666  0100               	movlb	0	; () banked
 12502  013668  5BA8               	subwfb	(___fladd@b+3)& (0+255),f,b
 12503  01366A                     l1527:
 12504                           
 12505                           ; BSR set to: 0
 12506  01366A  0100               	movlb	0	; () banked
 12507  01366C  51A5               	movf	___fladd@b& (0+255),w,b
 12508  01366E  0100               	movlb	0	; () banked
 12509  013670  11A6               	iorwf	(___fladd@b+1)& (0+255),w,b
 12510  013672  0100               	movlb	0	; () banked
 12511  013674  11A7               	iorwf	(___fladd@b+2)& (0+255),w,b
 12512  013676  0100               	movlb	0	; () banked
 12513  013678  11A8               	iorwf	(___fladd@b+3)& (0+255),w,b
 12514  01367A  A4D8               	btfss	status,2,c
 12515  01367C  D02A               	goto	l7900
 12516                           
 12517                           ; BSR set to: 0
 12518  01367E  0100               	movlb	0	; () banked
 12519  013680  51B8               	movf	___fladd@grs& (0+255),w,b
 12520  013682  0100               	movlb	0	; () banked
 12521  013684  A4D8               	btfss	status,2,c
 12522  013686  D025               	goto	l7900
 12523                           
 12524                           ; BSR set to: 0
 12525  013688  0E00               	movlw	0
 12526  01368A  0100               	movlb	0	; () banked
 12527  01368C  6FA5               	movwf	?___fladd& (0+255),b
 12528  01368E  0E00               	movlw	0
 12529  013690  6FA6               	movwf	(?___fladd+1)& (0+255),b
 12530  013692  0E00               	movlw	0
 12531  013694  6FA7               	movwf	(?___fladd+2)& (0+255),b
 12532  013696  0E00               	movlw	0
 12533  013698  6FA8               	movwf	(?___fladd+3)& (0+255),b
 12534                           
 12535                           ; BSR set to: 0
 12536  01369A  0012               	return	
 12537  01369C                     l7884:
 12538                           
 12539                           ; BSR set to: 0
 12540  01369C  0100               	movlb	0	; () banked
 12541  01369E  90D8               	bcf	status,0,c
 12542  0136A0  37A5               	rlcf	___fladd@b& (0+255),f,b
 12543  0136A2  37A6               	rlcf	(___fladd@b+1)& (0+255),f,b
 12544  0136A4  37A7               	rlcf	(___fladd@b+2)& (0+255),f,b
 12545  0136A6  37A8               	rlcf	(___fladd@b+3)& (0+255),f,b
 12546                           
 12547                           ; BSR set to: 0
 12548  0136A8  0100               	movlb	0	; () banked
 12549  0136AA  AFB8               	btfss	___fladd@grs& (0+255),7,b
 12550  0136AC  D002               	goto	l7890
 12551                           
 12552                           ; BSR set to: 0
 12553  0136AE  0100               	movlb	0	; () banked
 12554  0136B0  81A5               	bsf	___fladd@b& (0+255),0,b
 12555  0136B2                     l7890:
 12556                           
 12557                           ; BSR set to: 0
 12558  0136B2  0100               	movlb	0	; () banked
 12559  0136B4  A1B8               	btfss	___fladd@grs& (0+255),0,b
 12560  0136B6  D003               	goto	l7894
 12561                           
 12562                           ; BSR set to: 0
 12563  0136B8  80D8               	bsf	status,0,c
 12564  0136BA  0100               	movlb	0	; () banked
 12565  0136BC  D002               	goto	L13
 12566  0136BE                     l7894:
 12567                           
 12568                           ; BSR set to: 0
 12569  0136BE  0100               	movlb	0	; () banked
 12570  0136C0  90D8               	bcf	status,0,c
 12571  0136C2                     L13:
 12572  0136C2  37B8               	rlcf	___fladd@grs& (0+255),f,b
 12573                           
 12574                           ; BSR set to: 0
 12575                           
 12576                           ; BSR set to: 0
 12577  0136C4  0100               	movlb	0	; () banked
 12578  0136C6  51B7               	movf	___fladd@bexp& (0+255),w,b
 12579  0136C8  0100               	movlb	0	; () banked
 12580  0136CA  B4D8               	btfsc	status,2,c
 12581  0136CC  D002               	goto	l7900
 12582                           
 12583                           ; BSR set to: 0
 12584  0136CE  0100               	movlb	0	; () banked
 12585  0136D0  07B7               	decf	___fladd@bexp& (0+255),f,b
 12586  0136D2                     l7900:
 12587                           
 12588                           ; BSR set to: 0
 12589  0136D2  0100               	movlb	0	; () banked
 12590  0136D4  AFA7               	btfss	(___fladd@b+2)& (0+255),7,b
 12591  0136D6  D7E2               	goto	l7884
 12592  0136D8                     l7902:
 12593                           
 12594                           ; BSR set to: 0
 12595  0136D8  0E00               	movlw	0
 12596  0136DA  0100               	movlb	0	; () banked
 12597  0136DC  6FB6               	movwf	___fladd@aexp& (0+255),b
 12598                           
 12599                           ; BSR set to: 0
 12600  0136DE  0100               	movlb	0	; () banked
 12601  0136E0  AFB8               	btfss	___fladd@grs& (0+255),7,b
 12602  0136E2  D00D               	goto	l1536
 12603                           
 12604                           ; BSR set to: 0
 12605  0136E4  C0B8  F0AD         	movff	___fladd@grs,??___fladd
 12606  0136E8  0E7F               	movlw	127
 12607  0136EA  0100               	movlb	0	; () banked
 12608  0136EC  17AD               	andwf	??___fladd& (0+255),f,b
 12609  0136EE  A4D8               	btfss	status,2,c
 12610  0136F0  D003               	goto	l7910
 12611                           
 12612                           ; BSR set to: 0
 12613                           
 12614                           ; BSR set to: 0
 12615  0136F2  0100               	movlb	0	; () banked
 12616  0136F4  A1A5               	btfss	___fladd@b& (0+255),0,b
 12617  0136F6  D003               	goto	l1536
 12618  0136F8                     l7910:
 12619                           
 12620                           ; BSR set to: 0
 12621  0136F8  0E01               	movlw	1
 12622  0136FA  0100               	movlb	0	; () banked
 12623  0136FC  6FB6               	movwf	___fladd@aexp& (0+255),b
 12624  0136FE                     l1536:
 12625                           
 12626                           ; BSR set to: 0
 12627  0136FE  0100               	movlb	0	; () banked
 12628  013700  51B6               	movf	___fladd@aexp& (0+255),w,b
 12629  013702  0100               	movlb	0	; () banked
 12630  013704  B4D8               	btfsc	status,2,c
 12631  013706  D026               	goto	l7920
 12632                           
 12633                           ; BSR set to: 0
 12634  013708  0E01               	movlw	1
 12635  01370A  0100               	movlb	0	; () banked
 12636  01370C  27A5               	addwf	___fladd@b& (0+255),f,b
 12637  01370E  0E00               	movlw	0
 12638  013710  23A6               	addwfc	(___fladd@b+1)& (0+255),f,b
 12639  013712  23A7               	addwfc	(___fladd@b+2)& (0+255),f,b
 12640  013714  23A8               	addwfc	(___fladd@b+3)& (0+255),f,b
 12641                           
 12642                           ; BSR set to: 0
 12643  013716  0100               	movlb	0	; () banked
 12644  013718  A1A8               	btfss	(___fladd@b+3)& (0+255),0,b
 12645  01371A  D01C               	goto	l7920
 12646                           
 12647                           ; BSR set to: 0
 12648  01371C  C0A5  F0AD         	movff	___fladd@b,??___fladd
 12649  013720  C0A6  F0AE         	movff	___fladd@b+1,??___fladd+1
 12650  013724  C0A7  F0AF         	movff	___fladd@b+2,??___fladd+2
 12651  013728  C0A8  F0B0         	movff	___fladd@b+3,??___fladd+3
 12652  01372C  0100               	movlb	0	; () banked
 12653  01372E  35B0               	rlcf	(??___fladd+3)& (0+255),w,b
 12654  013730  33B0               	rrcf	(??___fladd+3)& (0+255),f,b
 12655  013732  33AF               	rrcf	(??___fladd+2)& (0+255),f,b
 12656  013734  33AE               	rrcf	(??___fladd+1)& (0+255),f,b
 12657  013736  33AD               	rrcf	??___fladd& (0+255),f,b
 12658  013738  C0AD  F0A5         	movff	??___fladd,___fladd@b
 12659  01373C  C0AE  F0A6         	movff	??___fladd+1,___fladd@b+1
 12660  013740  C0AF  F0A7         	movff	??___fladd+2,___fladd@b+2
 12661  013744  C0B0  F0A8         	movff	??___fladd+3,___fladd@b+3
 12662  013748  0100               	movlb	0	; () banked
 12663  01374A  29B7               	incf	___fladd@bexp& (0+255),w,b
 12664  01374C  B4D8               	btfsc	status,2,c
 12665  01374E  D002               	goto	l7920
 12666                           
 12667                           ; BSR set to: 0
 12668  013750  0100               	movlb	0	; () banked
 12669  013752  2BB7               	incf	___fladd@bexp& (0+255),f,b
 12670  013754                     l7920:
 12671                           
 12672                           ; BSR set to: 0
 12673  013754  0100               	movlb	0	; () banked
 12674  013756  29B7               	incf	___fladd@bexp& (0+255),w,b
 12675  013758  B4D8               	btfsc	status,2,c
 12676  01375A  D005               	goto	l7924
 12677                           
 12678                           ; BSR set to: 0
 12679  01375C  0100               	movlb	0	; () banked
 12680  01375E  51B7               	movf	___fladd@bexp& (0+255),w,b
 12681  013760  0100               	movlb	0	; () banked
 12682  013762  A4D8               	btfss	status,2,c
 12683  013764  D011               	goto	l7928
 12684  013766                     l7924:
 12685                           
 12686                           ; BSR set to: 0
 12687  013766  0E00               	movlw	0
 12688  013768  0100               	movlb	0	; () banked
 12689  01376A  6FA5               	movwf	___fladd@b& (0+255),b
 12690  01376C  0E00               	movlw	0
 12691  01376E  6FA6               	movwf	(___fladd@b+1)& (0+255),b
 12692  013770  0E00               	movlw	0
 12693  013772  6FA7               	movwf	(___fladd@b+2)& (0+255),b
 12694  013774  0E00               	movlw	0
 12695  013776  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 12696  013778  0100               	movlb	0	; () banked
 12697  01377A  51B7               	movf	___fladd@bexp& (0+255),w,b
 12698  01377C  0100               	movlb	0	; () banked
 12699  01377E  A4D8               	btfss	status,2,c
 12700  013780  D003               	goto	l7928
 12701                           
 12702                           ; BSR set to: 0
 12703  013782  0E00               	movlw	0
 12704  013784  0100               	movlb	0	; () banked
 12705  013786  6FB5               	movwf	___fladd@signs& (0+255),b
 12706  013788                     l7928:
 12707                           
 12708                           ; BSR set to: 0
 12709  013788  0100               	movlb	0	; () banked
 12710  01378A  A1B7               	btfss	___fladd@bexp& (0+255),0,b
 12711  01378C  D003               	goto	l7932
 12712                           
 12713                           ; BSR set to: 0
 12714  01378E  0100               	movlb	0	; () banked
 12715  013790  8FA7               	bsf	(___fladd@b+2)& (0+255),7,b
 12716  013792  D002               	goto	l7934
 12717  013794                     l7932:
 12718                           
 12719                           ; BSR set to: 0
 12720  013794  0100               	movlb	0	; () banked
 12721  013796  9FA7               	bcf	(___fladd@b+2)& (0+255),7,b
 12722  013798                     l7934:
 12723                           
 12724                           ; BSR set to: 0
 12725  013798  0100               	movlb	0	; () banked
 12726  01379A  90D8               	bcf	status,0,c
 12727  01379C  31B7               	rrcf	___fladd@bexp& (0+255),w,b
 12728  01379E  0100               	movlb	0	; () banked
 12729  0137A0  6FA8               	movwf	(___fladd@b+3)& (0+255),b
 12730                           
 12731                           ; BSR set to: 0
 12732  0137A2  0100               	movlb	0	; () banked
 12733  0137A4  AFB5               	btfss	___fladd@signs& (0+255),7,b
 12734  0137A6  D002               	goto	l7940
 12735                           
 12736                           ; BSR set to: 0
 12737  0137A8  0100               	movlb	0	; () banked
 12738  0137AA  8FA8               	bsf	(___fladd@b+3)& (0+255),7,b
 12739  0137AC                     l7940:
 12740                           
 12741                           ; BSR set to: 0
 12742  0137AC  C0A5  F0A5         	movff	___fladd@b,?___fladd
 12743  0137B0  C0A6  F0A6         	movff	___fladd@b+1,?___fladd+1
 12744  0137B4  C0A7  F0A7         	movff	___fladd@b+2,?___fladd+2
 12745  0137B8  C0A8  F0A8         	movff	___fladd@b+3,?___fladd+3
 12746  0137BC  0012               	return	
 12747  0137BE                     __end_of___fladd:
 12748                           	opt stack 0
 12749                           tblptru	equ	0xFF8
 12750                           tblptrh	equ	0xFF7
 12751                           tblptrl	equ	0xFF6
 12752                           tablat	equ	0xFF5
 12753                           prodh	equ	0xFF4
 12754                           prodl	equ	0xFF3
 12755                           intcon	equ	0xFF2
 12756                           postinc0	equ	0xFEE
 12757                           wreg	equ	0xFE8
 12758                           indf2	equ	0xFDF
 12759                           postinc2	equ	0xFDE
 12760                           fsr2h	equ	0xFDA
 12761                           fsr2l	equ	0xFD9
 12762                           status	equ	0xFD8
 12763                           
 12764 ;; *************** function ___flneg *****************
 12765 ;; Defined at:
 12766 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
 12767 ;; Parameters:    Size  Location     Type
 12768 ;;  f1              4   56[BANK0 ] unsigned char 
 12769 ;; Auto vars:     Size  Location     Type
 12770 ;;		None
 12771 ;; Return value:  Size  Location     Type
 12772 ;;                  4   56[BANK0 ] unsigned char 
 12773 ;; Registers used:
 12774 ;;		wreg, status,2, status,0
 12775 ;; Tracked objects:
 12776 ;;		On entry : 0/0
 12777 ;;		On exit  : 0/0
 12778 ;;		Unchanged: 0/0
 12779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12780 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12783 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12784 ;;Total ram usage:        4 bytes
 12785 ;; Hardware stack levels used:    1
 12786 ;; Hardware stack levels required when called:    3
 12787 ;; This function calls:
 12788 ;;		Nothing
 12789 ;; This function is called by:
 12790 ;;		_main
 12791 ;;		_sprintf
 12792 ;; This function uses a non-reentrant model
 12793 ;;
 12794                           
 12795                           	psect	text24
 12796  0160EE                     __ptext24:
 12797                           	opt stack 0
 12798  0160EE                     ___flneg:
 12799                           	opt stack 27
 12800                           
 12801                           ; BSR set to: 0
 12802                           ;incstack = 0
 12803  0160EE  0100               	movlb	0	; () banked
 12804  0160F0  5198               	movf	___flneg@f1& (0+255),w,b
 12805  0160F2  0100               	movlb	0	; () banked
 12806  0160F4  1199               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12807  0160F6  0100               	movlb	0	; () banked
 12808  0160F8  119A               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12809  0160FA  0100               	movlb	0	; () banked
 12810  0160FC  119B               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12811  0160FE  B4D8               	btfsc	status,2,c
 12812  016100  D009               	goto	l8406
 12813                           
 12814                           ; BSR set to: 0
 12815  016102  0E00               	movlw	0
 12816  016104  0100               	movlb	0	; () banked
 12817  016106  1B98               	xorwf	___flneg@f1& (0+255),f,b
 12818  016108  0E00               	movlw	0
 12819  01610A  1B99               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12820  01610C  0E00               	movlw	0
 12821  01610E  1B9A               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12822  016110  0E80               	movlw	128
 12823  016112  1B9B               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12824  016114                     l8406:
 12825                           
 12826                           ; BSR set to: 0
 12827  016114  C098  F098         	movff	___flneg@f1,?___flneg
 12828  016118  C099  F099         	movff	___flneg@f1+1,?___flneg+1
 12829  01611C  C09A  F09A         	movff	___flneg@f1+2,?___flneg+2
 12830  016120  C09B  F09B         	movff	___flneg@f1+3,?___flneg+3
 12831  016124  0012               	return	
 12832  016126                     __end_of___flneg:
 12833                           	opt stack 0
 12834                           tblptru	equ	0xFF8
 12835                           tblptrh	equ	0xFF7
 12836                           tblptrl	equ	0xFF6
 12837                           tablat	equ	0xFF5
 12838                           prodh	equ	0xFF4
 12839                           prodl	equ	0xFF3
 12840                           intcon	equ	0xFF2
 12841                           postinc0	equ	0xFEE
 12842                           wreg	equ	0xFE8
 12843                           indf2	equ	0xFDF
 12844                           postinc2	equ	0xFDE
 12845                           fsr2h	equ	0xFDA
 12846                           fsr2l	equ	0xFD9
 12847                           status	equ	0xFD8
 12848                           
 12849 ;; *************** function ___flge *****************
 12850 ;; Defined at:
 12851 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
 12852 ;; Parameters:    Size  Location     Type
 12853 ;;  ff1             4   17[BANK0 ] unsigned char 
 12854 ;;  ff2             4   21[BANK0 ] unsigned char 
 12855 ;; Auto vars:     Size  Location     Type
 12856 ;;		None
 12857 ;; Return value:  Size  Location     Type
 12858 ;;		None               void
 12859 ;; Registers used:
 12860 ;;		wreg, status,2, status,0
 12861 ;; Tracked objects:
 12862 ;;		On entry : 0/0
 12863 ;;		On exit  : 0/0
 12864 ;;		Unchanged: 0/0
 12865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12866 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12868 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12869 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12870 ;;Total ram usage:       12 bytes
 12871 ;; Hardware stack levels used:    1
 12872 ;; Hardware stack levels required when called:    3
 12873 ;; This function calls:
 12874 ;;		Nothing
 12875 ;; This function is called by:
 12876 ;;		_sprintf
 12877 ;; This function uses a non-reentrant model
 12878 ;;
 12879                           
 12880                           	psect	text25
 12881  015136                     __ptext25:
 12882                           	opt stack 0
 12883  015136                     ___flge:
 12884                           	opt stack 25
 12885                           
 12886                           ; BSR set to: 0
 12887                           ;incstack = 0
 12888  015136  0E00               	movlw	0
 12889  015138  0100               	movlb	0	; () banked
 12890  01513A  1571               	andwf	___flge@ff1& (0+255),w,b
 12891  01513C  0100               	movlb	0	; () banked
 12892  01513E  6F79               	movwf	??___flge& (0+255),b
 12893  015140  0E00               	movlw	0
 12894  015142  0100               	movlb	0	; () banked
 12895  015144  1572               	andwf	(___flge@ff1+1)& (0+255),w,b
 12896  015146  0100               	movlb	0	; () banked
 12897  015148  6F7A               	movwf	(??___flge+1)& (0+255),b
 12898  01514A  0E80               	movlw	128
 12899  01514C  0100               	movlb	0	; () banked
 12900  01514E  1573               	andwf	(___flge@ff1+2)& (0+255),w,b
 12901  015150  0100               	movlb	0	; () banked
 12902  015152  6F7B               	movwf	(??___flge+2)& (0+255),b
 12903  015154  0E7F               	movlw	127
 12904  015156  0100               	movlb	0	; () banked
 12905  015158  1574               	andwf	(___flge@ff1+3)& (0+255),w,b
 12906  01515A  0100               	movlb	0	; () banked
 12907  01515C  6F7C               	movwf	(??___flge+3)& (0+255),b
 12908  01515E  0100               	movlb	0	; () banked
 12909  015160  5179               	movf	??___flge& (0+255),w,b
 12910  015162  0100               	movlb	0	; () banked
 12911  015164  117A               	iorwf	(??___flge+1)& (0+255),w,b
 12912  015166  0100               	movlb	0	; () banked
 12913  015168  117B               	iorwf	(??___flge+2)& (0+255),w,b
 12914  01516A  0100               	movlb	0	; () banked
 12915  01516C  117C               	iorwf	(??___flge+3)& (0+255),w,b
 12916  01516E  A4D8               	btfss	status,2,c
 12917  015170  D009               	goto	l8384
 12918                           
 12919                           ; BSR set to: 0
 12920  015172  0E00               	movlw	0
 12921  015174  0100               	movlb	0	; () banked
 12922  015176  6F71               	movwf	___flge@ff1& (0+255),b
 12923  015178  0E00               	movlw	0
 12924  01517A  6F72               	movwf	(___flge@ff1+1)& (0+255),b
 12925  01517C  0E00               	movlw	0
 12926  01517E  6F73               	movwf	(___flge@ff1+2)& (0+255),b
 12927  015180  0E00               	movlw	0
 12928  015182  6F74               	movwf	(___flge@ff1+3)& (0+255),b
 12929  015184                     l8384:
 12930                           
 12931                           ; BSR set to: 0
 12932  015184  0E00               	movlw	0
 12933  015186  0100               	movlb	0	; () banked
 12934  015188  1575               	andwf	___flge@ff2& (0+255),w,b
 12935  01518A  0100               	movlb	0	; () banked
 12936  01518C  6F79               	movwf	??___flge& (0+255),b
 12937  01518E  0E00               	movlw	0
 12938  015190  0100               	movlb	0	; () banked
 12939  015192  1576               	andwf	(___flge@ff2+1)& (0+255),w,b
 12940  015194  0100               	movlb	0	; () banked
 12941  015196  6F7A               	movwf	(??___flge+1)& (0+255),b
 12942  015198  0E80               	movlw	128
 12943  01519A  0100               	movlb	0	; () banked
 12944  01519C  1577               	andwf	(___flge@ff2+2)& (0+255),w,b
 12945  01519E  0100               	movlb	0	; () banked
 12946  0151A0  6F7B               	movwf	(??___flge+2)& (0+255),b
 12947  0151A2  0E7F               	movlw	127
 12948  0151A4  0100               	movlb	0	; () banked
 12949  0151A6  1578               	andwf	(___flge@ff2+3)& (0+255),w,b
 12950  0151A8  0100               	movlb	0	; () banked
 12951  0151AA  6F7C               	movwf	(??___flge+3)& (0+255),b
 12952  0151AC  0100               	movlb	0	; () banked
 12953  0151AE  5179               	movf	??___flge& (0+255),w,b
 12954  0151B0  0100               	movlb	0	; () banked
 12955  0151B2  117A               	iorwf	(??___flge+1)& (0+255),w,b
 12956  0151B4  0100               	movlb	0	; () banked
 12957  0151B6  117B               	iorwf	(??___flge+2)& (0+255),w,b
 12958  0151B8  0100               	movlb	0	; () banked
 12959  0151BA  117C               	iorwf	(??___flge+3)& (0+255),w,b
 12960  0151BC  A4D8               	btfss	status,2,c
 12961  0151BE  D009               	goto	l8388
 12962                           
 12963                           ; BSR set to: 0
 12964  0151C0  0E00               	movlw	0
 12965  0151C2  0100               	movlb	0	; () banked
 12966  0151C4  6F75               	movwf	___flge@ff2& (0+255),b
 12967  0151C6  0E00               	movlw	0
 12968  0151C8  6F76               	movwf	(___flge@ff2+1)& (0+255),b
 12969  0151CA  0E00               	movlw	0
 12970  0151CC  6F77               	movwf	(___flge@ff2+2)& (0+255),b
 12971  0151CE  0E00               	movlw	0
 12972  0151D0  6F78               	movwf	(___flge@ff2+3)& (0+255),b
 12973  0151D2                     l8388:
 12974                           
 12975                           ; BSR set to: 0
 12976  0151D2  0100               	movlb	0	; () banked
 12977  0151D4  AF74               	btfss	(___flge@ff1+3)& (0+255),7,b
 12978  0151D6  D026               	goto	l8392
 12979                           
 12980                           ; BSR set to: 0
 12981  0151D8  C071  F079         	movff	___flge@ff1,??___flge
 12982  0151DC  C072  F07A         	movff	___flge@ff1+1,??___flge+1
 12983  0151E0  C073  F07B         	movff	___flge@ff1+2,??___flge+2
 12984  0151E4  C074  F07C         	movff	___flge@ff1+3,??___flge+3
 12985  0151E8  0100               	movlb	0	; () banked
 12986  0151EA  1F79               	comf	??___flge& (0+255),f,b
 12987  0151EC  1F7A               	comf	(??___flge+1)& (0+255),f,b
 12988  0151EE  1F7B               	comf	(??___flge+2)& (0+255),f,b
 12989  0151F0  1F7C               	comf	(??___flge+3)& (0+255),f,b
 12990  0151F2  2B79               	incf	??___flge& (0+255),f,b
 12991  0151F4  0E00               	movlw	0
 12992  0151F6  237A               	addwfc	(??___flge+1)& (0+255),f,b
 12993  0151F8  237B               	addwfc	(??___flge+2)& (0+255),f,b
 12994  0151FA  237C               	addwfc	(??___flge+3)& (0+255),f,b
 12995  0151FC  0E00               	movlw	0
 12996  0151FE  0100               	movlb	0	; () banked
 12997  015200  2579               	addwf	??___flge& (0+255),w,b
 12998  015202  0100               	movlb	0	; () banked
 12999  015204  6F71               	movwf	___flge@ff1& (0+255),b
 13000  015206  0E00               	movlw	0
 13001  015208  0100               	movlb	0	; () banked
 13002  01520A  217A               	addwfc	(??___flge+1)& (0+255),w,b
 13003  01520C  0100               	movlb	0	; () banked
 13004  01520E  6F72               	movwf	(___flge@ff1+1)& (0+255),b
 13005  015210  0E00               	movlw	0
 13006  015212  0100               	movlb	0	; () banked
 13007  015214  217B               	addwfc	(??___flge+2)& (0+255),w,b
 13008  015216  0100               	movlb	0	; () banked
 13009  015218  6F73               	movwf	(___flge@ff1+2)& (0+255),b
 13010  01521A  0E80               	movlw	128
 13011  01521C  0100               	movlb	0	; () banked
 13012  01521E  217C               	addwfc	(??___flge+3)& (0+255),w,b
 13013  015220  0100               	movlb	0	; () banked
 13014  015222  6F74               	movwf	(___flge@ff1+3)& (0+255),b
 13015  015224                     l8392:
 13016                           
 13017                           ; BSR set to: 0
 13018  015224  0100               	movlb	0	; () banked
 13019  015226  AF78               	btfss	(___flge@ff2+3)& (0+255),7,b
 13020  015228  D026               	goto	l1233
 13021                           
 13022                           ; BSR set to: 0
 13023  01522A  C075  F079         	movff	___flge@ff2,??___flge
 13024  01522E  C076  F07A         	movff	___flge@ff2+1,??___flge+1
 13025  015232  C077  F07B         	movff	___flge@ff2+2,??___flge+2
 13026  015236  C078  F07C         	movff	___flge@ff2+3,??___flge+3
 13027  01523A  0100               	movlb	0	; () banked
 13028  01523C  1F79               	comf	??___flge& (0+255),f,b
 13029  01523E  1F7A               	comf	(??___flge+1)& (0+255),f,b
 13030  015240  1F7B               	comf	(??___flge+2)& (0+255),f,b
 13031  015242  1F7C               	comf	(??___flge+3)& (0+255),f,b
 13032  015244  2B79               	incf	??___flge& (0+255),f,b
 13033  015246  0E00               	movlw	0
 13034  015248  237A               	addwfc	(??___flge+1)& (0+255),f,b
 13035  01524A  237B               	addwfc	(??___flge+2)& (0+255),f,b
 13036  01524C  237C               	addwfc	(??___flge+3)& (0+255),f,b
 13037  01524E  0E00               	movlw	0
 13038  015250  0100               	movlb	0	; () banked
 13039  015252  2579               	addwf	??___flge& (0+255),w,b
 13040  015254  0100               	movlb	0	; () banked
 13041  015256  6F75               	movwf	___flge@ff2& (0+255),b
 13042  015258  0E00               	movlw	0
 13043  01525A  0100               	movlb	0	; () banked
 13044  01525C  217A               	addwfc	(??___flge+1)& (0+255),w,b
 13045  01525E  0100               	movlb	0	; () banked
 13046  015260  6F76               	movwf	(___flge@ff2+1)& (0+255),b
 13047  015262  0E00               	movlw	0
 13048  015264  0100               	movlb	0	; () banked
 13049  015266  217B               	addwfc	(??___flge+2)& (0+255),w,b
 13050  015268  0100               	movlb	0	; () banked
 13051  01526A  6F77               	movwf	(___flge@ff2+2)& (0+255),b
 13052  01526C  0E80               	movlw	128
 13053  01526E  0100               	movlb	0	; () banked
 13054  015270  217C               	addwfc	(??___flge+3)& (0+255),w,b
 13055  015272  0100               	movlb	0	; () banked
 13056  015274  6F78               	movwf	(___flge@ff2+3)& (0+255),b
 13057  015276                     l1233:
 13058                           
 13059                           ; BSR set to: 0
 13060  015276  0E00               	movlw	0
 13061  015278  0100               	movlb	0	; () banked
 13062  01527A  1B71               	xorwf	___flge@ff1& (0+255),f,b
 13063  01527C  0E00               	movlw	0
 13064  01527E  1B72               	xorwf	(___flge@ff1+1)& (0+255),f,b
 13065  015280  0E00               	movlw	0
 13066  015282  1B73               	xorwf	(___flge@ff1+2)& (0+255),f,b
 13067  015284  0E80               	movlw	128
 13068  015286  1B74               	xorwf	(___flge@ff1+3)& (0+255),f,b
 13069  015288  0E00               	movlw	0
 13070  01528A  0100               	movlb	0	; () banked
 13071  01528C  1B75               	xorwf	___flge@ff2& (0+255),f,b
 13072  01528E  0E00               	movlw	0
 13073  015290  1B76               	xorwf	(___flge@ff2+1)& (0+255),f,b
 13074  015292  0E00               	movlw	0
 13075  015294  1B77               	xorwf	(___flge@ff2+2)& (0+255),f,b
 13076  015296  0E80               	movlw	128
 13077  015298  1B78               	xorwf	(___flge@ff2+3)& (0+255),f,b
 13078  01529A  0100               	movlb	0	; () banked
 13079  01529C  5175               	movf	___flge@ff2& (0+255),w,b
 13080  01529E  0100               	movlb	0	; () banked
 13081  0152A0  5D71               	subwf	___flge@ff1& (0+255),w,b
 13082  0152A2  0100               	movlb	0	; () banked
 13083  0152A4  5176               	movf	(___flge@ff2+1)& (0+255),w,b
 13084  0152A6  0100               	movlb	0	; () banked
 13085  0152A8  5972               	subwfb	(___flge@ff1+1)& (0+255),w,b
 13086  0152AA  0100               	movlb	0	; () banked
 13087  0152AC  5177               	movf	(___flge@ff2+2)& (0+255),w,b
 13088  0152AE  0100               	movlb	0	; () banked
 13089  0152B0  5973               	subwfb	(___flge@ff1+2)& (0+255),w,b
 13090  0152B2  0100               	movlb	0	; () banked
 13091  0152B4  5178               	movf	(___flge@ff2+3)& (0+255),w,b
 13092  0152B6  0100               	movlb	0	; () banked
 13093  0152B8  5974               	subwfb	(___flge@ff1+3)& (0+255),w,b
 13094  0152BA  B0D8               	btfsc	status,0,c
 13095  0152BC  D002               	goto	l8398
 13096                           
 13097                           ; BSR set to: 0
 13098  0152BE  90D8               	bcf	status,0,c
 13099  0152C0  0012               	return	
 13100  0152C2                     l8398:
 13101                           
 13102                           ; BSR set to: 0
 13103  0152C2  80D8               	bsf	status,0,c
 13104                           
 13105                           ; BSR set to: 0
 13106  0152C4  0012               	return	
 13107  0152C6                     __end_of___flge:
 13108                           	opt stack 0
 13109                           tblptru	equ	0xFF8
 13110                           tblptrh	equ	0xFF7
 13111                           tblptrl	equ	0xFF6
 13112                           tablat	equ	0xFF5
 13113                           prodh	equ	0xFF4
 13114                           prodl	equ	0xFF3
 13115                           intcon	equ	0xFF2
 13116                           postinc0	equ	0xFEE
 13117                           wreg	equ	0xFE8
 13118                           indf2	equ	0xFDF
 13119                           postinc2	equ	0xFDE
 13120                           fsr2h	equ	0xFDA
 13121                           fsr2l	equ	0xFD9
 13122                           status	equ	0xFD8
 13123                           
 13124 ;; *************** function ___fldiv *****************
 13125 ;; Defined at:
 13126 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 13127 ;; Parameters:    Size  Location     Type
 13128 ;;  b               4   31[BANK0 ] unsigned char 
 13129 ;;  a               4   35[BANK0 ] unsigned char 
 13130 ;; Auto vars:     Size  Location     Type
 13131 ;;  grs             4   50[BANK0 ] unsigned long 
 13132 ;;  rem             4   44[BANK0 ] unsigned long 
 13133 ;;  new_exp         2   48[BANK0 ] int 
 13134 ;;  aexp            1   55[BANK0 ] unsigned char 
 13135 ;;  bexp            1   54[BANK0 ] unsigned char 
 13136 ;;  sign            1   43[BANK0 ] unsigned char 
 13137 ;; Return value:  Size  Location     Type
 13138 ;;                  4   31[BANK0 ] unsigned char 
 13139 ;; Registers used:
 13140 ;;		wreg, status,2, status,0
 13141 ;; Tracked objects:
 13142 ;;		On entry : 0/0
 13143 ;;		On exit  : 0/0
 13144 ;;		Unchanged: 0/0
 13145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13146 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13147 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13148 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13149 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13150 ;;Total ram usage:       25 bytes
 13151 ;; Hardware stack levels used:    1
 13152 ;; Hardware stack levels required when called:    3
 13153 ;; This function calls:
 13154 ;;		Nothing
 13155 ;; This function is called by:
 13156 ;;		_LCD_Handler
 13157 ;; This function uses a non-reentrant model
 13158 ;;
 13159                           
 13160                           	psect	text26
 13161  013C64                     __ptext26:
 13162                           	opt stack 0
 13163  013C64                     ___fldiv:
 13164                           	opt stack 26
 13165                           
 13166                           ; BSR set to: 0
 13167                           ;incstack = 0
 13168  013C64  0100               	movlb	0	; () banked
 13169  013C66  5182               	movf	(___fldiv@b+3)& (0+255),w,b
 13170  013C68  0B80               	andlw	128
 13171  013C6A  0100               	movlb	0	; () banked
 13172  013C6C  6F8B               	movwf	___fldiv@sign& (0+255),b
 13173  013C6E  0100               	movlb	0	; () banked
 13174  013C70  5182               	movf	(___fldiv@b+3)& (0+255),w,b
 13175  013C72  2582               	addwf	(___fldiv@b+3)& (0+255),w,b
 13176  013C74  0100               	movlb	0	; () banked
 13177  013C76  6F96               	movwf	___fldiv@bexp& (0+255),b
 13178                           
 13179                           ; BSR set to: 0
 13180  013C78  0100               	movlb	0	; () banked
 13181  013C7A  AF81               	btfss	(___fldiv@b+2)& (0+255),7,b
 13182  013C7C  D002               	goto	l6636
 13183                           
 13184                           ; BSR set to: 0
 13185  013C7E  0100               	movlb	0	; () banked
 13186  013C80  8196               	bsf	___fldiv@bexp& (0+255),0,b
 13187  013C82                     l6636:
 13188                           
 13189                           ; BSR set to: 0
 13190  013C82  0100               	movlb	0	; () banked
 13191  013C84  5196               	movf	___fldiv@bexp& (0+255),w,b
 13192  013C86  0100               	movlb	0	; () banked
 13193  013C88  B4D8               	btfsc	status,2,c
 13194  013C8A  D012               	goto	l6646
 13195                           
 13196                           ; BSR set to: 0
 13197  013C8C  0100               	movlb	0	; () banked
 13198  013C8E  2996               	incf	___fldiv@bexp& (0+255),w,b
 13199  013C90  A4D8               	btfss	status,2,c
 13200  013C92  D009               	goto	l6642
 13201                           
 13202                           ; BSR set to: 0
 13203  013C94  0E00               	movlw	0
 13204  013C96  0100               	movlb	0	; () banked
 13205  013C98  6F7F               	movwf	___fldiv@b& (0+255),b
 13206  013C9A  0E00               	movlw	0
 13207  013C9C  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 13208  013C9E  0E00               	movlw	0
 13209  013CA0  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 13210  013CA2  0E00               	movlw	0
 13211  013CA4  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 13212  013CA6                     l6642:
 13213                           
 13214                           ; BSR set to: 0
 13215  013CA6  0100               	movlb	0	; () banked
 13216  013CA8  8F81               	bsf	(___fldiv@b+2)& (0+255),7,b
 13217                           
 13218                           ; BSR set to: 0
 13219  013CAA  0E00               	movlw	0
 13220  013CAC  0100               	movlb	0	; () banked
 13221  013CAE  D008               	goto	L14
 13222  013CB0                     l6646:
 13223                           
 13224                           ; BSR set to: 0
 13225  013CB0  0E00               	movlw	0
 13226  013CB2  0100               	movlb	0	; () banked
 13227  013CB4  6F7F               	movwf	___fldiv@b& (0+255),b
 13228  013CB6  0E00               	movlw	0
 13229  013CB8  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 13230  013CBA  0E00               	movlw	0
 13231  013CBC  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 13232  013CBE  0E00               	movlw	0
 13233  013CC0                     L14:
 13234  013CC0  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 13235                           
 13236                           ; BSR set to: 0
 13237                           
 13238                           ; BSR set to: 0
 13239  013CC2  0100               	movlb	0	; () banked
 13240  013CC4  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 13241  013CC6  0B80               	andlw	128
 13242  013CC8  0100               	movlb	0	; () banked
 13243  013CCA  1B8B               	xorwf	___fldiv@sign& (0+255),f,b
 13244                           
 13245                           ; BSR set to: 0
 13246  013CCC  0100               	movlb	0	; () banked
 13247  013CCE  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 13248  013CD0  2586               	addwf	(___fldiv@a+3)& (0+255),w,b
 13249  013CD2  0100               	movlb	0	; () banked
 13250  013CD4  6F97               	movwf	___fldiv@aexp& (0+255),b
 13251                           
 13252                           ; BSR set to: 0
 13253  013CD6  0100               	movlb	0	; () banked
 13254  013CD8  AF85               	btfss	(___fldiv@a+2)& (0+255),7,b
 13255  013CDA  D002               	goto	l6656
 13256                           
 13257                           ; BSR set to: 0
 13258  013CDC  0100               	movlb	0	; () banked
 13259  013CDE  8197               	bsf	___fldiv@aexp& (0+255),0,b
 13260  013CE0                     l6656:
 13261                           
 13262                           ; BSR set to: 0
 13263  013CE0  0100               	movlb	0	; () banked
 13264  013CE2  5197               	movf	___fldiv@aexp& (0+255),w,b
 13265  013CE4  0100               	movlb	0	; () banked
 13266  013CE6  B4D8               	btfsc	status,2,c
 13267  013CE8  D012               	goto	l6666
 13268                           
 13269                           ; BSR set to: 0
 13270  013CEA  0100               	movlb	0	; () banked
 13271  013CEC  2997               	incf	___fldiv@aexp& (0+255),w,b
 13272  013CEE  A4D8               	btfss	status,2,c
 13273  013CF0  D009               	goto	l6662
 13274                           
 13275                           ; BSR set to: 0
 13276  013CF2  0E00               	movlw	0
 13277  013CF4  0100               	movlb	0	; () banked
 13278  013CF6  6F83               	movwf	___fldiv@a& (0+255),b
 13279  013CF8  0E00               	movlw	0
 13280  013CFA  6F84               	movwf	(___fldiv@a+1)& (0+255),b
 13281  013CFC  0E00               	movlw	0
 13282  013CFE  6F85               	movwf	(___fldiv@a+2)& (0+255),b
 13283  013D00  0E00               	movlw	0
 13284  013D02  6F86               	movwf	(___fldiv@a+3)& (0+255),b
 13285  013D04                     l6662:
 13286                           
 13287                           ; BSR set to: 0
 13288  013D04  0100               	movlb	0	; () banked
 13289  013D06  8F85               	bsf	(___fldiv@a+2)& (0+255),7,b
 13290                           
 13291                           ; BSR set to: 0
 13292  013D08  0E00               	movlw	0
 13293  013D0A  0100               	movlb	0	; () banked
 13294  013D0C  D008               	goto	L15
 13295  013D0E                     l6666:
 13296                           
 13297                           ; BSR set to: 0
 13298  013D0E  0E00               	movlw	0
 13299  013D10  0100               	movlb	0	; () banked
 13300  013D12  6F83               	movwf	___fldiv@a& (0+255),b
 13301  013D14  0E00               	movlw	0
 13302  013D16  6F84               	movwf	(___fldiv@a+1)& (0+255),b
 13303  013D18  0E00               	movlw	0
 13304  013D1A  6F85               	movwf	(___fldiv@a+2)& (0+255),b
 13305  013D1C  0E00               	movlw	0
 13306  013D1E                     L15:
 13307  013D1E  6F86               	movwf	(___fldiv@a+3)& (0+255),b
 13308                           
 13309                           ; BSR set to: 0
 13310                           
 13311                           ; BSR set to: 0
 13312  013D20  0100               	movlb	0	; () banked
 13313  013D22  5183               	movf	___fldiv@a& (0+255),w,b
 13314  013D24  0100               	movlb	0	; () banked
 13315  013D26  1184               	iorwf	(___fldiv@a+1)& (0+255),w,b
 13316  013D28  0100               	movlb	0	; () banked
 13317  013D2A  1185               	iorwf	(___fldiv@a+2)& (0+255),w,b
 13318  013D2C  0100               	movlb	0	; () banked
 13319  013D2E  1186               	iorwf	(___fldiv@a+3)& (0+255),w,b
 13320  013D30  A4D8               	btfss	status,2,c
 13321  013D32  D017               	goto	l6678
 13322                           
 13323                           ; BSR set to: 0
 13324  013D34  0E00               	movlw	0
 13325  013D36  0100               	movlb	0	; () banked
 13326  013D38  6F7F               	movwf	___fldiv@b& (0+255),b
 13327  013D3A  0E00               	movlw	0
 13328  013D3C  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 13329  013D3E  0E00               	movlw	0
 13330  013D40  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 13331  013D42  0E00               	movlw	0
 13332  013D44  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 13333                           
 13334                           ; BSR set to: 0
 13335  013D46  0100               	movlb	0	; () banked
 13336  013D48  0E80               	movlw	128
 13337  013D4A  1381               	iorwf	(___fldiv@b+2)& (0+255),f,b
 13338  013D4C  0E7F               	movlw	127
 13339  013D4E  1382               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13340                           
 13341                           ; BSR set to: 0
 13342  013D50  C07F  F07F         	movff	___fldiv@b,?___fldiv
 13343  013D54  C080  F080         	movff	___fldiv@b+1,?___fldiv+1
 13344  013D58  C081  F081         	movff	___fldiv@b+2,?___fldiv+2
 13345  013D5C  C082  F082         	movff	___fldiv@b+3,?___fldiv+3
 13346                           
 13347                           ; BSR set to: 0
 13348  013D60  0012               	return	
 13349  013D62                     l6678:
 13350                           
 13351                           ; BSR set to: 0
 13352  013D62  0100               	movlb	0	; () banked
 13353  013D64  5196               	movf	___fldiv@bexp& (0+255),w,b
 13354  013D66  0100               	movlb	0	; () banked
 13355  013D68  A4D8               	btfss	status,2,c
 13356  013D6A  D012               	goto	l6686
 13357                           
 13358                           ; BSR set to: 0
 13359  013D6C  0E00               	movlw	0
 13360  013D6E  0100               	movlb	0	; () banked
 13361  013D70  6F7F               	movwf	___fldiv@b& (0+255),b
 13362  013D72  0E00               	movlw	0
 13363  013D74  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 13364  013D76  0E00               	movlw	0
 13365  013D78  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 13366  013D7A  0E00               	movlw	0
 13367  013D7C  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 13368                           
 13369                           ; BSR set to: 0
 13370  013D7E  C07F  F07F         	movff	___fldiv@b,?___fldiv
 13371  013D82  C080  F080         	movff	___fldiv@b+1,?___fldiv+1
 13372  013D86  C081  F081         	movff	___fldiv@b+2,?___fldiv+2
 13373  013D8A  C082  F082         	movff	___fldiv@b+3,?___fldiv+3
 13374                           
 13375                           ; BSR set to: 0
 13376  013D8E  0012               	return	
 13377  013D90                     l6686:
 13378                           
 13379                           ; BSR set to: 0
 13380  013D90  0100               	movlb	0	; () banked
 13381  013D92  5197               	movf	___fldiv@aexp& (0+255),w,b
 13382  013D94  0100               	movlb	0	; () banked
 13383  013D96  6F87               	movwf	??___fldiv& (0+255),b
 13384  013D98  6B88               	clrf	(??___fldiv+1)& (0+255),b
 13385  013D9A  0100               	movlb	0	; () banked
 13386  013D9C  1F87               	comf	??___fldiv& (0+255),f,b
 13387  013D9E  1F88               	comf	(??___fldiv+1)& (0+255),f,b
 13388  013DA0  4B87               	infsnz	??___fldiv& (0+255),f,b
 13389  013DA2  2B88               	incf	(??___fldiv+1)& (0+255),f,b
 13390  013DA4  0100               	movlb	0	; () banked
 13391  013DA6  5196               	movf	___fldiv@bexp& (0+255),w,b
 13392  013DA8  0100               	movlb	0	; () banked
 13393  013DAA  6F89               	movwf	(??___fldiv+2)& (0+255),b
 13394  013DAC  6B8A               	clrf	(??___fldiv+3)& (0+255),b
 13395  013DAE  0100               	movlb	0	; () banked
 13396  013DB0  5187               	movf	??___fldiv& (0+255),w,b
 13397  013DB2  0100               	movlb	0	; () banked
 13398  013DB4  2789               	addwf	(??___fldiv+2)& (0+255),f,b
 13399  013DB6  0100               	movlb	0	; () banked
 13400  013DB8  5188               	movf	(??___fldiv+1)& (0+255),w,b
 13401  013DBA  0100               	movlb	0	; () banked
 13402  013DBC  238A               	addwfc	(??___fldiv+3)& (0+255),f,b
 13403  013DBE  0E7F               	movlw	127
 13404  013DC0  0100               	movlb	0	; () banked
 13405  013DC2  2589               	addwf	(??___fldiv+2)& (0+255),w,b
 13406  013DC4  0100               	movlb	0	; () banked
 13407  013DC6  6F90               	movwf	___fldiv@new_exp& (0+255),b
 13408  013DC8  0E00               	movlw	0
 13409  013DCA  0100               	movlb	0	; () banked
 13410  013DCC  218A               	addwfc	(??___fldiv+3)& (0+255),w,b
 13411  013DCE  0100               	movlb	0	; () banked
 13412  013DD0  6F91               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13413                           
 13414                           ; BSR set to: 0
 13415  013DD2  C07F  F08C         	movff	___fldiv@b,___fldiv@rem
 13416  013DD6  C080  F08D         	movff	___fldiv@b+1,___fldiv@rem+1
 13417  013DDA  C081  F08E         	movff	___fldiv@b+2,___fldiv@rem+2
 13418  013DDE  C082  F08F         	movff	___fldiv@b+3,___fldiv@rem+3
 13419                           
 13420                           ; BSR set to: 0
 13421  013DE2  0E00               	movlw	0
 13422  013DE4  0100               	movlb	0	; () banked
 13423  013DE6  6F7F               	movwf	___fldiv@b& (0+255),b
 13424  013DE8  0E00               	movlw	0
 13425  013DEA  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 13426  013DEC  0E00               	movlw	0
 13427  013DEE  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 13428  013DF0  0E00               	movlw	0
 13429  013DF2  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 13430                           
 13431                           ; BSR set to: 0
 13432  013DF4  0E00               	movlw	0
 13433  013DF6  0100               	movlb	0	; () banked
 13434  013DF8  6F92               	movwf	___fldiv@grs& (0+255),b
 13435  013DFA  0E00               	movlw	0
 13436  013DFC  6F93               	movwf	(___fldiv@grs+1)& (0+255),b
 13437  013DFE  0E00               	movlw	0
 13438  013E00  6F94               	movwf	(___fldiv@grs+2)& (0+255),b
 13439  013E02  0E00               	movlw	0
 13440  013E04  6F95               	movwf	(___fldiv@grs+3)& (0+255),b
 13441                           
 13442                           ; BSR set to: 0
 13443  013E06  0E00               	movlw	0
 13444  013E08  0100               	movlb	0	; () banked
 13445  013E0A  6F97               	movwf	___fldiv@aexp& (0+255),b
 13446  013E0C  D042               	goto	l1566
 13447  013E0E                     l6696:
 13448                           
 13449                           ; BSR set to: 0
 13450  013E0E  0100               	movlb	0	; () banked
 13451  013E10  5197               	movf	___fldiv@aexp& (0+255),w,b
 13452  013E12  0100               	movlb	0	; () banked
 13453  013E14  B4D8               	btfsc	status,2,c
 13454  013E16  D017               	goto	l6704
 13455                           
 13456                           ; BSR set to: 0
 13457  013E18  0100               	movlb	0	; () banked
 13458  013E1A  90D8               	bcf	status,0,c
 13459  013E1C  378C               	rlcf	___fldiv@rem& (0+255),f,b
 13460  013E1E  378D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 13461  013E20  378E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 13462  013E22  378F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 13463  013E24  0100               	movlb	0	; () banked
 13464  013E26  90D8               	bcf	status,0,c
 13465  013E28  377F               	rlcf	___fldiv@b& (0+255),f,b
 13466  013E2A  3780               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13467  013E2C  3781               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13468  013E2E  3782               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13469                           
 13470                           ; BSR set to: 0
 13471  013E30  0100               	movlb	0	; () banked
 13472  013E32  AF95               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13473  013E34  D002               	goto	l1569
 13474                           
 13475                           ; BSR set to: 0
 13476  013E36  0100               	movlb	0	; () banked
 13477  013E38  817F               	bsf	___fldiv@b& (0+255),0,b
 13478  013E3A                     l1569:
 13479                           
 13480                           ; BSR set to: 0
 13481  013E3A  0100               	movlb	0	; () banked
 13482  013E3C  90D8               	bcf	status,0,c
 13483  013E3E  3792               	rlcf	___fldiv@grs& (0+255),f,b
 13484  013E40  3793               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13485  013E42  3794               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13486  013E44  3795               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13487  013E46                     l6704:
 13488                           
 13489                           ; BSR set to: 0
 13490  013E46  0100               	movlb	0	; () banked
 13491  013E48  5183               	movf	___fldiv@a& (0+255),w,b
 13492  013E4A  0100               	movlb	0	; () banked
 13493  013E4C  5D8C               	subwf	___fldiv@rem& (0+255),w,b
 13494  013E4E  0100               	movlb	0	; () banked
 13495  013E50  5184               	movf	(___fldiv@a+1)& (0+255),w,b
 13496  013E52  0100               	movlb	0	; () banked
 13497  013E54  598D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 13498  013E56  0100               	movlb	0	; () banked
 13499  013E58  5185               	movf	(___fldiv@a+2)& (0+255),w,b
 13500  013E5A  0100               	movlb	0	; () banked
 13501  013E5C  598E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 13502  013E5E  0100               	movlb	0	; () banked
 13503  013E60  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 13504  013E62  0100               	movlb	0	; () banked
 13505  013E64  598F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 13506  013E66  A0D8               	btfss	status,0,c
 13507  013E68  D012               	goto	l6710
 13508                           
 13509                           ; BSR set to: 0
 13510  013E6A  0100               	movlb	0	; () banked
 13511  013E6C  8D95               	bsf	(___fldiv@grs+3)& (0+255),6,b
 13512                           
 13513                           ; BSR set to: 0
 13514  013E6E  0100               	movlb	0	; () banked
 13515  013E70  5183               	movf	___fldiv@a& (0+255),w,b
 13516  013E72  0100               	movlb	0	; () banked
 13517  013E74  5F8C               	subwf	___fldiv@rem& (0+255),f,b
 13518  013E76  0100               	movlb	0	; () banked
 13519  013E78  5184               	movf	(___fldiv@a+1)& (0+255),w,b
 13520  013E7A  0100               	movlb	0	; () banked
 13521  013E7C  5B8D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 13522  013E7E  0100               	movlb	0	; () banked
 13523  013E80  5185               	movf	(___fldiv@a+2)& (0+255),w,b
 13524  013E82  0100               	movlb	0	; () banked
 13525  013E84  5B8E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 13526  013E86  0100               	movlb	0	; () banked
 13527  013E88  5186               	movf	(___fldiv@a+3)& (0+255),w,b
 13528  013E8A  0100               	movlb	0	; () banked
 13529  013E8C  5B8F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 13530  013E8E                     l6710:
 13531                           
 13532                           ; BSR set to: 0
 13533  013E8E  0100               	movlb	0	; () banked
 13534  013E90  2B97               	incf	___fldiv@aexp& (0+255),f,b
 13535  013E92                     l1566:
 13536                           
 13537                           ; BSR set to: 0
 13538  013E92  0E19               	movlw	25
 13539  013E94  0100               	movlb	0	; () banked
 13540  013E96  6597               	cpfsgt	___fldiv@aexp& (0+255),b
 13541  013E98  D7BA               	goto	l6696
 13542                           
 13543                           ; BSR set to: 0
 13544                           
 13545                           ; BSR set to: 0
 13546  013E9A  0100               	movlb	0	; () banked
 13547  013E9C  518C               	movf	___fldiv@rem& (0+255),w,b
 13548  013E9E  0100               	movlb	0	; () banked
 13549  013EA0  118D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 13550  013EA2  0100               	movlb	0	; () banked
 13551  013EA4  118E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 13552  013EA6  0100               	movlb	0	; () banked
 13553  013EA8  118F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 13554  013EAA  B4D8               	btfsc	status,2,c
 13555  013EAC  D018               	goto	l6722
 13556                           
 13557                           ; BSR set to: 0
 13558  013EAE  0100               	movlb	0	; () banked
 13559  013EB0  8192               	bsf	___fldiv@grs& (0+255),0,b
 13560                           
 13561                           ; BSR set to: 0
 13562  013EB2  D015               	goto	l6722
 13563  013EB4                     l6716:
 13564                           
 13565                           ; BSR set to: 0
 13566  013EB4  0100               	movlb	0	; () banked
 13567  013EB6  90D8               	bcf	status,0,c
 13568  013EB8  377F               	rlcf	___fldiv@b& (0+255),f,b
 13569  013EBA  3780               	rlcf	(___fldiv@b+1)& (0+255),f,b
 13570  013EBC  3781               	rlcf	(___fldiv@b+2)& (0+255),f,b
 13571  013EBE  3782               	rlcf	(___fldiv@b+3)& (0+255),f,b
 13572                           
 13573                           ; BSR set to: 0
 13574  013EC0  0100               	movlb	0	; () banked
 13575  013EC2  AF95               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13576  013EC4  D002               	goto	l1575
 13577                           
 13578                           ; BSR set to: 0
 13579  013EC6  0100               	movlb	0	; () banked
 13580  013EC8  817F               	bsf	___fldiv@b& (0+255),0,b
 13581  013ECA                     l1575:
 13582                           
 13583                           ; BSR set to: 0
 13584  013ECA  0100               	movlb	0	; () banked
 13585  013ECC  90D8               	bcf	status,0,c
 13586  013ECE  3792               	rlcf	___fldiv@grs& (0+255),f,b
 13587  013ED0  3793               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 13588  013ED2  3794               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 13589  013ED4  3795               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 13590  013ED6  0100               	movlb	0	; () banked
 13591  013ED8  0790               	decf	___fldiv@new_exp& (0+255),f,b
 13592  013EDA  A0D8               	btfss	status,0,c
 13593  013EDC  0791               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 13594  013EDE                     l6722:
 13595                           
 13596                           ; BSR set to: 0
 13597  013EDE  0100               	movlb	0	; () banked
 13598  013EE0  AF81               	btfss	(___fldiv@b+2)& (0+255),7,b
 13599  013EE2  D7E8               	goto	l6716
 13600                           
 13601                           ; BSR set to: 0
 13602                           
 13603                           ; BSR set to: 0
 13604  013EE4  0E00               	movlw	0
 13605  013EE6  0100               	movlb	0	; () banked
 13606  013EE8  6F97               	movwf	___fldiv@aexp& (0+255),b
 13607                           
 13608                           ; BSR set to: 0
 13609  013EEA  0100               	movlb	0	; () banked
 13610  013EEC  AF95               	btfss	(___fldiv@grs+3)& (0+255),7,b
 13611  013EEE  D024               	goto	l1577
 13612                           
 13613                           ; BSR set to: 0
 13614  013EF0  0EFF               	movlw	255
 13615  013EF2  0100               	movlb	0	; () banked
 13616  013EF4  1592               	andwf	___fldiv@grs& (0+255),w,b
 13617  013EF6  0100               	movlb	0	; () banked
 13618  013EF8  6F87               	movwf	??___fldiv& (0+255),b
 13619  013EFA  0EFF               	movlw	255
 13620  013EFC  0100               	movlb	0	; () banked
 13621  013EFE  1593               	andwf	(___fldiv@grs+1)& (0+255),w,b
 13622  013F00  0100               	movlb	0	; () banked
 13623  013F02  6F88               	movwf	(??___fldiv+1)& (0+255),b
 13624  013F04  0EFF               	movlw	255
 13625  013F06  0100               	movlb	0	; () banked
 13626  013F08  1594               	andwf	(___fldiv@grs+2)& (0+255),w,b
 13627  013F0A  0100               	movlb	0	; () banked
 13628  013F0C  6F89               	movwf	(??___fldiv+2)& (0+255),b
 13629  013F0E  0E7F               	movlw	127
 13630  013F10  0100               	movlb	0	; () banked
 13631  013F12  1595               	andwf	(___fldiv@grs+3)& (0+255),w,b
 13632  013F14  0100               	movlb	0	; () banked
 13633  013F16  6F8A               	movwf	(??___fldiv+3)& (0+255),b
 13634  013F18  0100               	movlb	0	; () banked
 13635  013F1A  5187               	movf	??___fldiv& (0+255),w,b
 13636  013F1C  0100               	movlb	0	; () banked
 13637  013F1E  1188               	iorwf	(??___fldiv+1)& (0+255),w,b
 13638  013F20  0100               	movlb	0	; () banked
 13639  013F22  1189               	iorwf	(??___fldiv+2)& (0+255),w,b
 13640  013F24  0100               	movlb	0	; () banked
 13641  013F26  118A               	iorwf	(??___fldiv+3)& (0+255),w,b
 13642  013F28  A4D8               	btfss	status,2,c
 13643  013F2A  D003               	goto	l6732
 13644                           
 13645                           ; BSR set to: 0
 13646                           
 13647                           ; BSR set to: 0
 13648  013F2C  0100               	movlb	0	; () banked
 13649  013F2E  A17F               	btfss	___fldiv@b& (0+255),0,b
 13650  013F30  D003               	goto	l1577
 13651  013F32                     l6732:
 13652                           
 13653                           ; BSR set to: 0
 13654  013F32  0E01               	movlw	1
 13655  013F34  0100               	movlb	0	; () banked
 13656  013F36  6F97               	movwf	___fldiv@aexp& (0+255),b
 13657  013F38                     l1577:
 13658                           
 13659                           ; BSR set to: 0
 13660  013F38  0100               	movlb	0	; () banked
 13661  013F3A  5197               	movf	___fldiv@aexp& (0+255),w,b
 13662  013F3C  0100               	movlb	0	; () banked
 13663  013F3E  B4D8               	btfsc	status,2,c
 13664  013F40  D023               	goto	l6742
 13665                           
 13666                           ; BSR set to: 0
 13667  013F42  0E01               	movlw	1
 13668  013F44  0100               	movlb	0	; () banked
 13669  013F46  277F               	addwf	___fldiv@b& (0+255),f,b
 13670  013F48  0E00               	movlw	0
 13671  013F4A  2380               	addwfc	(___fldiv@b+1)& (0+255),f,b
 13672  013F4C  2381               	addwfc	(___fldiv@b+2)& (0+255),f,b
 13673  013F4E  2382               	addwfc	(___fldiv@b+3)& (0+255),f,b
 13674                           
 13675                           ; BSR set to: 0
 13676  013F50  0100               	movlb	0	; () banked
 13677  013F52  A182               	btfss	(___fldiv@b+3)& (0+255),0,b
 13678  013F54  D019               	goto	l6742
 13679                           
 13680                           ; BSR set to: 0
 13681  013F56  C07F  F087         	movff	___fldiv@b,??___fldiv
 13682  013F5A  C080  F088         	movff	___fldiv@b+1,??___fldiv+1
 13683  013F5E  C081  F089         	movff	___fldiv@b+2,??___fldiv+2
 13684  013F62  C082  F08A         	movff	___fldiv@b+3,??___fldiv+3
 13685  013F66  0100               	movlb	0	; () banked
 13686  013F68  358A               	rlcf	(??___fldiv+3)& (0+255),w,b
 13687  013F6A  338A               	rrcf	(??___fldiv+3)& (0+255),f,b
 13688  013F6C  3389               	rrcf	(??___fldiv+2)& (0+255),f,b
 13689  013F6E  3388               	rrcf	(??___fldiv+1)& (0+255),f,b
 13690  013F70  3387               	rrcf	??___fldiv& (0+255),f,b
 13691  013F72  C087  F07F         	movff	??___fldiv,___fldiv@b
 13692  013F76  C088  F080         	movff	??___fldiv+1,___fldiv@b+1
 13693  013F7A  C089  F081         	movff	??___fldiv+2,___fldiv@b+2
 13694  013F7E  C08A  F082         	movff	??___fldiv+3,___fldiv@b+3
 13695                           
 13696                           ; BSR set to: 0
 13697  013F82  0100               	movlb	0	; () banked
 13698  013F84  4B90               	infsnz	___fldiv@new_exp& (0+255),f,b
 13699  013F86  2B91               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 13700  013F88                     l6742:
 13701                           
 13702                           ; BSR set to: 0
 13703  013F88  0100               	movlb	0	; () banked
 13704  013F8A  BF91               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13705  013F8C  D014               	goto	l6746
 13706  013F8E  0100               	movlb	0	; () banked
 13707  013F90  5191               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13708  013F92  E104               	bnz	u8520
 13709  013F94  0100               	movlb	0	; () banked
 13710  013F96  2990               	incf	___fldiv@new_exp& (0+255),w,b
 13711  013F98  A0D8               	btfss	status,0,c
 13712  013F9A  D00D               	goto	l6746
 13713  013F9C                     u8520:
 13714                           
 13715                           ; BSR set to: 0
 13716  013F9C  0E00               	movlw	0
 13717  013F9E  0100               	movlb	0	; () banked
 13718  013FA0  6F91               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13719  013FA2  6990               	setf	___fldiv@new_exp& (0+255),b
 13720  013FA4  0E00               	movlw	0
 13721  013FA6  0100               	movlb	0	; () banked
 13722  013FA8  6F7F               	movwf	___fldiv@b& (0+255),b
 13723  013FAA  0E00               	movlw	0
 13724  013FAC  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 13725  013FAE  0E00               	movlw	0
 13726  013FB0  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 13727  013FB2  0E00               	movlw	0
 13728  013FB4  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 13729  013FB6                     l6746:
 13730                           
 13731                           ; BSR set to: 0
 13732  013FB6  0100               	movlb	0	; () banked
 13733  013FB8  BF91               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 13734  013FBA  D007               	goto	l6748
 13735  013FBC  0100               	movlb	0	; () banked
 13736  013FBE  5191               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 13737  013FC0  E115               	bnz	l6750
 13738  013FC2  0100               	movlb	0	; () banked
 13739  013FC4  0590               	decf	___fldiv@new_exp& (0+255),w,b
 13740  013FC6  B0D8               	btfsc	status,0,c
 13741  013FC8  D011               	goto	l6750
 13742  013FCA                     l6748:
 13743                           
 13744                           ; BSR set to: 0
 13745  013FCA  0E00               	movlw	0
 13746  013FCC  0100               	movlb	0	; () banked
 13747  013FCE  6F91               	movwf	(___fldiv@new_exp+1)& (0+255),b
 13748  013FD0  0E00               	movlw	0
 13749  013FD2  6F90               	movwf	___fldiv@new_exp& (0+255),b
 13750  013FD4  0E00               	movlw	0
 13751  013FD6  0100               	movlb	0	; () banked
 13752  013FD8  6F7F               	movwf	___fldiv@b& (0+255),b
 13753  013FDA  0E00               	movlw	0
 13754  013FDC  6F80               	movwf	(___fldiv@b+1)& (0+255),b
 13755  013FDE  0E00               	movlw	0
 13756  013FE0  6F81               	movwf	(___fldiv@b+2)& (0+255),b
 13757  013FE2  0E00               	movlw	0
 13758  013FE4  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 13759  013FE6  0E00               	movlw	0
 13760  013FE8  0100               	movlb	0	; () banked
 13761  013FEA  6F8B               	movwf	___fldiv@sign& (0+255),b
 13762  013FEC                     l6750:
 13763                           
 13764                           ; BSR set to: 0
 13765  013FEC  C090  F096         	movff	___fldiv@new_exp,___fldiv@bexp
 13766                           
 13767                           ; BSR set to: 0
 13768  013FF0  0100               	movlb	0	; () banked
 13769  013FF2  A196               	btfss	___fldiv@bexp& (0+255),0,b
 13770  013FF4  D003               	goto	l6756
 13771                           
 13772                           ; BSR set to: 0
 13773  013FF6  0100               	movlb	0	; () banked
 13774  013FF8  8F81               	bsf	(___fldiv@b+2)& (0+255),7,b
 13775  013FFA  D002               	goto	l6758
 13776  013FFC                     l6756:
 13777                           
 13778                           ; BSR set to: 0
 13779  013FFC  0100               	movlb	0	; () banked
 13780  013FFE  9F81               	bcf	(___fldiv@b+2)& (0+255),7,b
 13781  014000                     l6758:
 13782                           
 13783                           ; BSR set to: 0
 13784  014000  0100               	movlb	0	; () banked
 13785  014002  90D8               	bcf	status,0,c
 13786  014004  3196               	rrcf	___fldiv@bexp& (0+255),w,b
 13787  014006  0100               	movlb	0	; () banked
 13788  014008  6F82               	movwf	(___fldiv@b+3)& (0+255),b
 13789                           
 13790                           ; BSR set to: 0
 13791  01400A  0100               	movlb	0	; () banked
 13792  01400C  518B               	movf	___fldiv@sign& (0+255),w,b
 13793  01400E  0100               	movlb	0	; () banked
 13794  014010  1382               	iorwf	(___fldiv@b+3)& (0+255),f,b
 13795                           
 13796                           ; BSR set to: 0
 13797  014012  C07F  F07F         	movff	___fldiv@b,?___fldiv
 13798  014016  C080  F080         	movff	___fldiv@b+1,?___fldiv+1
 13799  01401A  C081  F081         	movff	___fldiv@b+2,?___fldiv+2
 13800  01401E  C082  F082         	movff	___fldiv@b+3,?___fldiv+3
 13801  014022  0012               	return	
 13802  014024                     __end_of___fldiv:
 13803                           	opt stack 0
 13804                           tblptru	equ	0xFF8
 13805                           tblptrh	equ	0xFF7
 13806                           tblptrl	equ	0xFF6
 13807                           tablat	equ	0xFF5
 13808                           prodh	equ	0xFF4
 13809                           prodl	equ	0xFF3
 13810                           intcon	equ	0xFF2
 13811                           postinc0	equ	0xFEE
 13812                           wreg	equ	0xFE8
 13813                           indf2	equ	0xFDF
 13814                           postinc2	equ	0xFDE
 13815                           fsr2h	equ	0xFDA
 13816                           fsr2l	equ	0xFD9
 13817                           status	equ	0xFD8
 13818                           
 13819 ;; *************** function _LCD_write_message *****************
 13820 ;; Defined at:
 13821 ;;		line 178 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13822 ;; Parameters:    Size  Location     Type
 13823 ;;  buffer          2   34[BANK0 ] PTR const unsigned char 
 13824 ;;		 -> STR_21(21), STR_20(21), STR_19(21), STR_18(21), 
 13825 ;;		 -> STR_17(8), STR_16(8), STR_15(8), STR_14(8), 
 13826 ;;		 -> STR_13(5), STR_12(5), STR_11(5), STR_10(7), 
 13827 ;;		 -> STR_9(14), STR_8(17), STR_7(12), STR_6(21), 
 13828 ;;		 -> STR_4(21), STR_3(21), STR_2(21), STR_1(21), 
 13829 ;; Auto vars:     Size  Location     Type
 13830 ;;		None
 13831 ;; Return value:  Size  Location     Type
 13832 ;;		None               void
 13833 ;; Registers used:
 13834 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13835 ;; Tracked objects:
 13836 ;;		On entry : 0/0
 13837 ;;		On exit  : 0/0
 13838 ;;		Unchanged: 0/0
 13839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13840 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13843 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13844 ;;Total ram usage:        2 bytes
 13845 ;; Hardware stack levels used:    1
 13846 ;; Hardware stack levels required when called:    8
 13847 ;; This function calls:
 13848 ;;		_LCD_write_char
 13849 ;; This function is called by:
 13850 ;;		_main
 13851 ;;		_LCD_Handler
 13852 ;;		_LCD_Park
 13853 ;; This function uses a non-reentrant model
 13854 ;;
 13855                           
 13856                           	psect	text27
 13857  01615C                     __ptext27:
 13858                           	opt stack 0
 13859  01615C                     _LCD_write_message:
 13860                           	opt stack 22
 13861                           
 13862                           ;src\LCD_44780.c: 181: while(*buffer) {
 13863                           
 13864                           ; BSR set to: 0
 13865                           ;incstack = 0
 13866  01615C  D00D               	goto	l8542
 13867  01615E                     l8538:
 13868                           
 13869                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
 13870  01615E  C082  FFF6         	movff	LCD_write_message@buffer,tblptrl
 13871  016162  C083  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 13872  016166                     	if	0	;tblptru may be non-zero
 13873  016166                     	endif
 13874  016166                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13875  016166  0E00               	movlw	low (__mediumconst shr (0+16))
 13876  016168  6EF8               	movwf	tblptru,c
 13877  01616A                     	endif
 13878  01616A  0008               	tblrd		*
 13879  01616C  50F5               	movf	tablat,w,c
 13880  01616E  EC9A  F0AE         	call	_LCD_write_char
 13881                           
 13882                           ;src\LCD_44780.c: 186: buffer++;
 13883  016172  0100               	movlb	0	; () banked
 13884  016174  4B82               	infsnz	LCD_write_message@buffer& (0+255),f,b
 13885  016176  2B83               	incf	(LCD_write_message@buffer+1)& (0+255),f,b
 13886  016178                     l8542:
 13887  016178  C082  FFF6         	movff	LCD_write_message@buffer,tblptrl
 13888  01617C  C083  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
 13889  016180                     	if	0	;tblptru may be non-zero
 13890  016180                     	endif
 13891  016180                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 13892  016180  0E00               	movlw	low (__mediumconst shr (0+16))
 13893  016182  6EF8               	movwf	tblptru,c
 13894  016184                     	endif
 13895  016184  0008               	tblrd		*
 13896  016186  50F5               	movf	tablat,w,c
 13897  016188  0900               	iorlw	0
 13898  01618A  B4D8               	btfsc	status,2,c
 13899  01618C  0012               	return	
 13900  01618E  D7E7               	goto	l8538
 13901  016190                     __end_of_LCD_write_message:
 13902                           	opt stack 0
 13903                           tblptru	equ	0xFF8
 13904                           tblptrh	equ	0xFF7
 13905                           tblptrl	equ	0xFF6
 13906                           tablat	equ	0xFF5
 13907                           prodh	equ	0xFF4
 13908                           prodl	equ	0xFF3
 13909                           intcon	equ	0xFF2
 13910                           postinc0	equ	0xFEE
 13911                           wreg	equ	0xFE8
 13912                           indf2	equ	0xFDF
 13913                           postinc2	equ	0xFDE
 13914                           fsr2h	equ	0xFDA
 13915                           fsr2l	equ	0xFD9
 13916                           status	equ	0xFD8
 13917                           
 13918 ;; *************** function _LCD_write_integer *****************
 13919 ;; Defined at:
 13920 ;;		line 210 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 13921 ;; Parameters:    Size  Location     Type
 13922 ;;  value           2   41[BANK0 ] int 
 13923 ;;  number_of_di    1   43[BANK0 ] unsigned char 
 13924 ;;  zero_cleanin    1   44[BANK0 ] unsigned char 
 13925 ;; Auto vars:     Size  Location     Type
 13926 ;;  convertedInt    6   50[BANK0 ] unsigned char [6]
 13927 ;;  index           1   56[BANK0 ] unsigned char 
 13928 ;; Return value:  Size  Location     Type
 13929 ;;		None               void
 13930 ;; Registers used:
 13931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13932 ;; Tracked objects:
 13933 ;;		On entry : 0/0
 13934 ;;		On exit  : 0/0
 13935 ;;		Unchanged: 0/0
 13936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13937 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13938 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13939 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13940 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13941 ;;Total ram usage:       16 bytes
 13942 ;; Hardware stack levels used:    1
 13943 ;; Hardware stack levels required when called:    9
 13944 ;; This function calls:
 13945 ;;		_LCD_write_string
 13946 ;;		_itoa
 13947 ;; This function is called by:
 13948 ;;		_LCD_Handler
 13949 ;; This function uses a non-reentrant model
 13950 ;;
 13951                           
 13952                           	psect	text28
 13953  014C2A                     __ptext28:
 13954                           	opt stack 0
 13955  014C2A                     _LCD_write_integer:
 13956                           	opt stack 20
 13957                           
 13958                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
 13959                           
 13960                           ;incstack = 0
 13961  014C2A  EE21  F007         	lfsr	2,LCD_write_integer@F17272
 13962  014C2E  EE10  F092         	lfsr	1,LCD_write_integer@convertedInt
 13963  014C32  0E05               	movlw	5
 13964  014C34                     u11461:
 13965  014C34  CFDB FFE3          	movff	plusw2,plusw1
 13966  014C38  06E8               	decf	wreg,f,c
 13967  014C3A  E2FC               	bc	u11461
 13968                           
 13969                           ;src\LCD_44780.c: 216: unsigned char index;
 13970                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
 13971  014C3C  0E92               	movlw	low LCD_write_integer@convertedInt
 13972  014C3E  0100               	movlb	0	; () banked
 13973  014C40  6F81               	movwf	itoa@buf& (0+255),b
 13974  014C42  0E00               	movlw	high LCD_write_integer@convertedInt
 13975  014C44  0100               	movlb	0	; () banked
 13976  014C46  6F82               	movwf	(itoa@buf+1)& (0+255),b
 13977  014C48  C089  F083         	movff	LCD_write_integer@value,itoa@val
 13978  014C4C  C08A  F084         	movff	LCD_write_integer@value+1,itoa@val+1
 13979  014C50  0E00               	movlw	0
 13980  014C52  0100               	movlb	0	; () banked
 13981  014C54  6F86               	movwf	(itoa@base+1)& (0+255),b
 13982  014C56  0E0A               	movlw	10
 13983  014C58  6F85               	movwf	itoa@base& (0+255),b
 13984  014C5A  ECF7  F0AF         	call	_itoa	;wreg free
 13985                           
 13986                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
 13987  014C5E  0100               	movlb	0	; () banked
 13988  014C60  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13989  014C62  0100               	movlb	0	; () banked
 13990  014C64  B4D8               	btfsc	status,2,c
 13991  014C66  D0B8               	goto	l8574
 13992                           
 13993                           ; BSR set to: 0
 13994                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
 13995  014C68  0100               	movlb	0	; () banked
 13996  014C6A  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 13997  014C6C  0D01               	mullw	1
 13998  014C6E  0E92               	movlw	low LCD_write_integer@convertedInt
 13999  014C70  24F3               	addwf	prodl,w,c
 14000  014C72  6ED9               	movwf	fsr2l,c
 14001  014C74  0E00               	movlw	high LCD_write_integer@convertedInt
 14002  014C76  20F4               	addwfc	prodh,w,c
 14003  014C78  6EDA               	movwf	fsr2h,c
 14004  014C7A  0E00               	movlw	0
 14005  014C7C  6EDF               	movwf	indf2,c
 14006                           
 14007                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
 14008  014C7E  D070               	goto	l8570
 14009  014C80                     l8552:
 14010                           
 14011                           ; BSR set to: 0
 14012                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
 14013  014C80  0100               	movlb	0	; () banked
 14014  014C82  058B               	decf	LCD_write_integer@number_of_digits& (0+255),w,b
 14015  014C84  0100               	movlb	0	; () banked
 14016  014C86  6F98               	movwf	LCD_write_integer@index& (0+255),b
 14017  014C88                     l8554:
 14018                           
 14019                           ; BSR set to: 0
 14020  014C88  0100               	movlb	0	; () banked
 14021  014C8A  5198               	movf	LCD_write_integer@index& (0+255),w,b
 14022  014C8C  0100               	movlb	0	; () banked
 14023  014C8E  B4D8               	btfsc	status,2,c
 14024  014C90  D067               	goto	l8570
 14025                           
 14026                           ; BSR set to: 0
 14027                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
 14028                           
 14029                           ; BSR set to: 0
 14030                           
 14031                           ; BSR set to: 0
 14032  014C92  0EFF               	movlw	255
 14033  014C94  0100               	movlb	0	; () banked
 14034  014C96  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 14035  014C98  0EFF               	movlw	255
 14036  014C9A  0100               	movlb	0	; () banked
 14037  014C9C  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14038  014C9E  0100               	movlb	0	; () banked
 14039  014CA0  5198               	movf	LCD_write_integer@index& (0+255),w,b
 14040  014CA2  0100               	movlb	0	; () banked
 14041  014CA4  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14042  014CA6  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14043  014CA8  0100               	movlb	0	; () banked
 14044  014CAA  518D               	movf	??_LCD_write_integer& (0+255),w,b
 14045  014CAC  0100               	movlb	0	; () banked
 14046  014CAE  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14047  014CB0  0100               	movlb	0	; () banked
 14048  014CB2  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14049  014CB4  0100               	movlb	0	; () banked
 14050  014CB6  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14051  014CB8  0E92               	movlw	low LCD_write_integer@convertedInt
 14052  014CBA  0100               	movlb	0	; () banked
 14053  014CBC  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14054  014CBE  6ED9               	movwf	fsr2l,c
 14055  014CC0  0E00               	movlw	high LCD_write_integer@convertedInt
 14056  014CC2  0100               	movlb	0	; () banked
 14057  014CC4  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14058  014CC6  6EDA               	movwf	fsr2h,c
 14059  014CC8  0100               	movlb	0	; () banked
 14060  014CCA  5198               	movf	LCD_write_integer@index& (0+255),w,b
 14061  014CCC  0D01               	mullw	1
 14062  014CCE  0E92               	movlw	low LCD_write_integer@convertedInt
 14063  014CD0  24F3               	addwf	prodl,w,c
 14064  014CD2  6EE1               	movwf	fsr1l,c
 14065  014CD4  0E00               	movlw	high LCD_write_integer@convertedInt
 14066  014CD6  20F4               	addwfc	prodh,w,c
 14067  014CD8  6EE2               	movwf	fsr1h,c
 14068  014CDA  CFDF FFE7          	movff	indf2,indf1
 14069                           
 14070                           ; BSR set to: 0
 14071                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
 14072  014CDE  0100               	movlb	0	; () banked
 14073  014CE0  058C               	decf	LCD_write_integer@zero_cleaning& (0+255),w,b
 14074  014CE2  A4D8               	btfss	status,2,c
 14075  014CE4  D01D               	goto	l8564
 14076                           
 14077                           ; BSR set to: 0
 14078                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
 14079  014CE6  0EFF               	movlw	255
 14080  014CE8  0100               	movlb	0	; () banked
 14081  014CEA  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 14082  014CEC  0EFF               	movlw	255
 14083  014CEE  0100               	movlb	0	; () banked
 14084  014CF0  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14085  014CF2  0100               	movlb	0	; () banked
 14086  014CF4  5198               	movf	LCD_write_integer@index& (0+255),w,b
 14087  014CF6  0100               	movlb	0	; () banked
 14088  014CF8  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14089  014CFA  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14090  014CFC  0100               	movlb	0	; () banked
 14091  014CFE  518D               	movf	??_LCD_write_integer& (0+255),w,b
 14092  014D00  0100               	movlb	0	; () banked
 14093  014D02  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14094  014D04  0100               	movlb	0	; () banked
 14095  014D06  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14096  014D08  0100               	movlb	0	; () banked
 14097  014D0A  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14098  014D0C  0E92               	movlw	low LCD_write_integer@convertedInt
 14099  014D0E  0100               	movlb	0	; () banked
 14100  014D10  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14101  014D12  6ED9               	movwf	fsr2l,c
 14102  014D14  0E00               	movlw	high LCD_write_integer@convertedInt
 14103  014D16  0100               	movlb	0	; () banked
 14104  014D18  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14105  014D1A  6EDA               	movwf	fsr2h,c
 14106  014D1C  0E20               	movlw	32
 14107  014D1E  D01C               	goto	L16
 14108  014D20                     l8564:
 14109                           
 14110                           ; BSR set to: 0
 14111                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
 14112  014D20  0EFF               	movlw	255
 14113  014D22  0100               	movlb	0	; () banked
 14114  014D24  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 14115  014D26  0EFF               	movlw	255
 14116  014D28  0100               	movlb	0	; () banked
 14117  014D2A  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14118  014D2C  0100               	movlb	0	; () banked
 14119  014D2E  5198               	movf	LCD_write_integer@index& (0+255),w,b
 14120  014D30  0100               	movlb	0	; () banked
 14121  014D32  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14122  014D34  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14123  014D36  0100               	movlb	0	; () banked
 14124  014D38  518D               	movf	??_LCD_write_integer& (0+255),w,b
 14125  014D3A  0100               	movlb	0	; () banked
 14126  014D3C  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14127  014D3E  0100               	movlb	0	; () banked
 14128  014D40  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14129  014D42  0100               	movlb	0	; () banked
 14130  014D44  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14131  014D46  0E92               	movlw	low LCD_write_integer@convertedInt
 14132  014D48  0100               	movlb	0	; () banked
 14133  014D4A  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14134  014D4C  6ED9               	movwf	fsr2l,c
 14135  014D4E  0E00               	movlw	high LCD_write_integer@convertedInt
 14136  014D50  0100               	movlb	0	; () banked
 14137  014D52  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14138  014D54  6EDA               	movwf	fsr2h,c
 14139  014D56  0E30               	movlw	48
 14140  014D58                     L16:
 14141  014D58  6EDF               	movwf	indf2,c
 14142                           
 14143                           ; BSR set to: 0
 14144                           
 14145                           ; BSR set to: 0
 14146  014D5A  0100               	movlb	0	; () banked
 14147  014D5C  0798               	decf	LCD_write_integer@index& (0+255),f,b
 14148  014D5E  D794               	goto	l8554
 14149  014D60                     l8570:
 14150                           
 14151                           ; BSR set to: 0
 14152  014D60  0EFF               	movlw	255
 14153  014D62  0100               	movlb	0	; () banked
 14154  014D64  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 14155  014D66  0EFF               	movlw	255
 14156  014D68  0100               	movlb	0	; () banked
 14157  014D6A  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14158  014D6C  0100               	movlb	0	; () banked
 14159  014D6E  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14160  014D70  0100               	movlb	0	; () banked
 14161  014D72  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14162  014D74  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14163  014D76  0100               	movlb	0	; () banked
 14164  014D78  518D               	movf	??_LCD_write_integer& (0+255),w,b
 14165  014D7A  0100               	movlb	0	; () banked
 14166  014D7C  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14167  014D7E  0100               	movlb	0	; () banked
 14168  014D80  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14169  014D82  0100               	movlb	0	; () banked
 14170  014D84  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14171  014D86  0E92               	movlw	low LCD_write_integer@convertedInt
 14172  014D88  0100               	movlb	0	; () banked
 14173  014D8A  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14174  014D8C  6ED9               	movwf	fsr2l,c
 14175  014D8E  0E00               	movlw	high LCD_write_integer@convertedInt
 14176  014D90  0100               	movlb	0	; () banked
 14177  014D92  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14178  014D94  6EDA               	movwf	fsr2h,c
 14179  014D96  0E3A               	movlw	58
 14180  014D98  60DF               	cpfslt	indf2,c
 14181  014D9A  D772               	goto	l8552
 14182                           
 14183                           ; BSR set to: 0
 14184  014D9C  0EFF               	movlw	255
 14185  014D9E  0100               	movlb	0	; () banked
 14186  014DA0  6F8D               	movwf	??_LCD_write_integer& (0+255),b
 14187  014DA2  0EFF               	movlw	255
 14188  014DA4  0100               	movlb	0	; () banked
 14189  014DA6  6F8E               	movwf	(??_LCD_write_integer+1)& (0+255),b
 14190  014DA8  0100               	movlb	0	; () banked
 14191  014DAA  518B               	movf	LCD_write_integer@number_of_digits& (0+255),w,b
 14192  014DAC  0100               	movlb	0	; () banked
 14193  014DAE  6F8F               	movwf	(??_LCD_write_integer+2)& (0+255),b
 14194  014DB0  6B90               	clrf	(??_LCD_write_integer+3)& (0+255),b
 14195  014DB2  0100               	movlb	0	; () banked
 14196  014DB4  518D               	movf	??_LCD_write_integer& (0+255),w,b
 14197  014DB6  0100               	movlb	0	; () banked
 14198  014DB8  278F               	addwf	(??_LCD_write_integer+2)& (0+255),f,b
 14199  014DBA  0100               	movlb	0	; () banked
 14200  014DBC  518E               	movf	(??_LCD_write_integer+1)& (0+255),w,b
 14201  014DBE  0100               	movlb	0	; () banked
 14202  014DC0  2390               	addwfc	(??_LCD_write_integer+3)& (0+255),f,b
 14203  014DC2  0E92               	movlw	low LCD_write_integer@convertedInt
 14204  014DC4  0100               	movlb	0	; () banked
 14205  014DC6  258F               	addwf	(??_LCD_write_integer+2)& (0+255),w,b
 14206  014DC8  6ED9               	movwf	fsr2l,c
 14207  014DCA  0E00               	movlw	high LCD_write_integer@convertedInt
 14208  014DCC  0100               	movlb	0	; () banked
 14209  014DCE  2190               	addwfc	(??_LCD_write_integer+3)& (0+255),w,b
 14210  014DD0  6EDA               	movwf	fsr2h,c
 14211  014DD2  0E2F               	movlw	47
 14212  014DD4  64DF               	cpfsgt	indf2,c
 14213  014DD6  D754               	goto	l8552
 14214  014DD8                     l8574:
 14215                           
 14216                           ; BSR set to: 0
 14217                           ;src\LCD_44780.c: 243: }
 14218                           ;src\LCD_44780.c: 245: }
 14219                           ;src\LCD_44780.c: 246: }
 14220                           ;src\LCD_44780.c: 247: }
 14221                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
 14222  014DD8  0E92               	movlw	low LCD_write_integer@convertedInt
 14223  014DDA  0100               	movlb	0	; () banked
 14224  014DDC  6F82               	movwf	LCD_write_string@buffer& (0+255),b
 14225  014DDE  0E00               	movlw	high LCD_write_integer@convertedInt
 14226  014DE0  0100               	movlb	0	; () banked
 14227  014DE2  6F83               	movwf	(LCD_write_string@buffer+1)& (0+255),b
 14228  014DE4  EC0F  F0B1         	call	_LCD_write_string	;wreg free
 14229  014DE8  0012               	return		;funcret
 14230  014DEA                     __end_of_LCD_write_integer:
 14231                           	opt stack 0
 14232                           tblptru	equ	0xFF8
 14233                           tblptrh	equ	0xFF7
 14234                           tblptrl	equ	0xFF6
 14235                           tablat	equ	0xFF5
 14236                           prodh	equ	0xFF4
 14237                           prodl	equ	0xFF3
 14238                           intcon	equ	0xFF2
 14239                           postinc0	equ	0xFEE
 14240                           wreg	equ	0xFE8
 14241                           indf1	equ	0xFE7
 14242                           plusw1	equ	0xFE3
 14243                           fsr1h	equ	0xFE2
 14244                           fsr1l	equ	0xFE1
 14245                           indf2	equ	0xFDF
 14246                           postinc2	equ	0xFDE
 14247                           plusw2	equ	0xFDB
 14248                           fsr2h	equ	0xFDA
 14249                           fsr2l	equ	0xFD9
 14250                           status	equ	0xFD8
 14251                           
 14252 ;; *************** function _itoa *****************
 14253 ;; Defined at:
 14254 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 14255 ;; Parameters:    Size  Location     Type
 14256 ;;  buf             2   33[BANK0 ] PTR unsigned char 
 14257 ;;		 -> LCD_write_integer@convertedInt(6), 
 14258 ;;  val             2   35[BANK0 ] int 
 14259 ;;  base            2   37[BANK0 ] int 
 14260 ;; Auto vars:     Size  Location     Type
 14261 ;;  cp              2   39[BANK0 ] PTR unsigned char 
 14262 ;;		 -> LCD_write_integer@convertedInt(6), 
 14263 ;; Return value:  Size  Location     Type
 14264 ;;                  2   33[BANK0 ] PTR unsigned char 
 14265 ;; Registers used:
 14266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14267 ;; Tracked objects:
 14268 ;;		On entry : 0/0
 14269 ;;		On exit  : 0/0
 14270 ;;		Unchanged: 0/0
 14271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14272 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14273 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14275 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14276 ;;Total ram usage:        8 bytes
 14277 ;; Hardware stack levels used:    1
 14278 ;; Hardware stack levels required when called:    5
 14279 ;; This function calls:
 14280 ;;		_utoa
 14281 ;; This function is called by:
 14282 ;;		_LCD_write_integer
 14283 ;; This function uses a non-reentrant model
 14284 ;;
 14285                           
 14286                           	psect	text29
 14287  015FEE                     __ptext29:
 14288                           	opt stack 0
 14289  015FEE                     _itoa:
 14290                           	opt stack 23
 14291                           
 14292                           ;incstack = 0
 14293  015FEE  C081  F087         	movff	itoa@buf,itoa@cp
 14294  015FF2  C082  F088         	movff	itoa@buf+1,itoa@cp+1
 14295  015FF6  0100               	movlb	0	; () banked
 14296  015FF8  AF84               	btfss	(itoa@val+1)& (0+255),7,b
 14297  015FFA  D00E               	goto	l5690
 14298                           
 14299                           ; BSR set to: 0
 14300  015FFC  C081  FFD9         	movff	itoa@buf,fsr2l
 14301  016000  C082  FFDA         	movff	itoa@buf+1,fsr2h
 14302  016004  0E2D               	movlw	45
 14303  016006  6EDF               	movwf	indf2,c
 14304                           
 14305                           ; BSR set to: 0
 14306  016008  0100               	movlb	0	; () banked
 14307  01600A  4B81               	infsnz	itoa@buf& (0+255),f,b
 14308  01600C  2B82               	incf	(itoa@buf+1)& (0+255),f,b
 14309                           
 14310                           ; BSR set to: 0
 14311  01600E  0100               	movlb	0	; () banked
 14312  016010  6D83               	negf	itoa@val& (0+255),b
 14313  016012  1F84               	comf	(itoa@val+1)& (0+255),f,b
 14314  016014  B0D8               	btfsc	status,0,c
 14315  016016  2B84               	incf	(itoa@val+1)& (0+255),f,b
 14316  016018                     l5690:
 14317                           
 14318                           ; BSR set to: 0
 14319  016018  C081  F078         	movff	itoa@buf,utoa@buf
 14320  01601C  C082  F079         	movff	itoa@buf+1,utoa@buf+1
 14321  016020  C083  F07A         	movff	itoa@val,utoa@val
 14322  016024  C084  F07B         	movff	itoa@val+1,utoa@val+1
 14323  016028  C085  F07C         	movff	itoa@base,utoa@base
 14324  01602C  C086  F07D         	movff	itoa@base+1,utoa@base+1
 14325  016030  EC39  F0AC         	call	_utoa	;wreg free
 14326  016034  0012               	return	
 14327  016036                     __end_of_itoa:
 14328                           	opt stack 0
 14329                           tblptru	equ	0xFF8
 14330                           tblptrh	equ	0xFF7
 14331                           tblptrl	equ	0xFF6
 14332                           tablat	equ	0xFF5
 14333                           prodh	equ	0xFF4
 14334                           prodl	equ	0xFF3
 14335                           intcon	equ	0xFF2
 14336                           postinc0	equ	0xFEE
 14337                           wreg	equ	0xFE8
 14338                           indf1	equ	0xFE7
 14339                           plusw1	equ	0xFE3
 14340                           fsr1h	equ	0xFE2
 14341                           fsr1l	equ	0xFE1
 14342                           indf2	equ	0xFDF
 14343                           postinc2	equ	0xFDE
 14344                           plusw2	equ	0xFDB
 14345                           fsr2h	equ	0xFDA
 14346                           fsr2l	equ	0xFD9
 14347                           status	equ	0xFD8
 14348                           
 14349 ;; *************** function _utoa *****************
 14350 ;; Defined at:
 14351 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
 14352 ;; Parameters:    Size  Location     Type
 14353 ;;  buf             2   24[BANK0 ] PTR unsigned char 
 14354 ;;		 -> LCD_write_integer@convertedInt(6), 
 14355 ;;  val             2   26[BANK0 ] unsigned int 
 14356 ;;  base            2   28[BANK0 ] int 
 14357 ;; Auto vars:     Size  Location     Type
 14358 ;;  v               2   30[BANK0 ] unsigned int 
 14359 ;;  c               1   32[BANK0 ] unsigned char 
 14360 ;; Return value:  Size  Location     Type
 14361 ;;                  2   24[BANK0 ] PTR unsigned char 
 14362 ;; Registers used:
 14363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14364 ;; Tracked objects:
 14365 ;;		On entry : 0/0
 14366 ;;		On exit  : 0/0
 14367 ;;		Unchanged: 0/0
 14368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14369 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14370 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14372 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14373 ;;Total ram usage:        9 bytes
 14374 ;; Hardware stack levels used:    1
 14375 ;; Hardware stack levels required when called:    4
 14376 ;; This function calls:
 14377 ;;		___lwdiv
 14378 ;;		___lwmod
 14379 ;; This function is called by:
 14380 ;;		_itoa
 14381 ;; This function uses a non-reentrant model
 14382 ;;
 14383                           
 14384                           	psect	text30
 14385  015872                     __ptext30:
 14386                           	opt stack 0
 14387  015872                     _utoa:
 14388                           	opt stack 23
 14389                           
 14390                           ;incstack = 0
 14391  015872  C07A  F07E         	movff	utoa@val,utoa@v
 14392  015876  C07B  F07F         	movff	utoa@val+1,utoa@v+1
 14393  01587A                     l5212:
 14394  01587A  C07E  F071         	movff	utoa@v,___lwdiv@dividend
 14395  01587E  C07F  F072         	movff	utoa@v+1,___lwdiv@dividend+1
 14396  015882  C07C  F073         	movff	utoa@base,___lwdiv@divisor
 14397  015886  C07D  F074         	movff	utoa@base+1,___lwdiv@divisor+1
 14398  01588A  ECE5  F0AE         	call	___lwdiv	;wreg free
 14399  01588E  C071  F07E         	movff	?___lwdiv,utoa@v
 14400  015892  C072  F07F         	movff	?___lwdiv+1,utoa@v+1
 14401  015896  0100               	movlb	0	; () banked
 14402  015898  4B78               	infsnz	utoa@buf& (0+255),f,b
 14403  01589A  2B79               	incf	(utoa@buf+1)& (0+255),f,b
 14404                           
 14405                           ; BSR set to: 0
 14406  01589C  0100               	movlb	0	; () banked
 14407  01589E  517E               	movf	utoa@v& (0+255),w,b
 14408  0158A0  0100               	movlb	0	; () banked
 14409  0158A2  117F               	iorwf	(utoa@v+1)& (0+255),w,b
 14410  0158A4  A4D8               	btfss	status,2,c
 14411  0158A6  D7E9               	goto	l5212
 14412                           
 14413                           ; BSR set to: 0
 14414                           
 14415                           ; BSR set to: 0
 14416  0158A8  C078  FFD9         	movff	utoa@buf,fsr2l
 14417  0158AC  C079  FFDA         	movff	utoa@buf+1,fsr2h
 14418  0158B0  0E00               	movlw	0
 14419  0158B2  6EDF               	movwf	indf2,c
 14420                           
 14421                           ; BSR set to: 0
 14422  0158B4  0100               	movlb	0	; () banked
 14423  0158B6  0778               	decf	utoa@buf& (0+255),f,b
 14424  0158B8  A0D8               	btfss	status,0,c
 14425  0158BA  0779               	decf	(utoa@buf+1)& (0+255),f,b
 14426  0158BC                     l5222:
 14427                           
 14428                           ; BSR set to: 0
 14429  0158BC  C07A  F071         	movff	utoa@val,___lwmod@dividend
 14430  0158C0  C07B  F072         	movff	utoa@val+1,___lwmod@dividend+1
 14431  0158C4  C07C  F073         	movff	utoa@base,___lwmod@divisor
 14432  0158C8  C07D  F074         	movff	utoa@base+1,___lwmod@divisor+1
 14433  0158CC  EC52  F0AF         	call	___lwmod	;wreg free
 14434  0158D0  0100               	movlb	0	; () banked
 14435  0158D2  5171               	movf	?___lwmod& (0+255),w,b
 14436  0158D4  0100               	movlb	0	; () banked
 14437  0158D6  6F80               	movwf	utoa@c& (0+255),b
 14438                           
 14439                           ; BSR set to: 0
 14440  0158D8  C07A  F071         	movff	utoa@val,___lwdiv@dividend
 14441  0158DC  C07B  F072         	movff	utoa@val+1,___lwdiv@dividend+1
 14442  0158E0  C07C  F073         	movff	utoa@base,___lwdiv@divisor
 14443  0158E4  C07D  F074         	movff	utoa@base+1,___lwdiv@divisor+1
 14444  0158E8  ECE5  F0AE         	call	___lwdiv	;wreg free
 14445  0158EC  C071  F07A         	movff	?___lwdiv,utoa@val
 14446  0158F0  C072  F07B         	movff	?___lwdiv+1,utoa@val+1
 14447  0158F4  0E09               	movlw	9
 14448  0158F6  0100               	movlb	0	; () banked
 14449  0158F8  6580               	cpfsgt	utoa@c& (0+255),b
 14450  0158FA  D003               	goto	l1390
 14451                           
 14452                           ; BSR set to: 0
 14453  0158FC  0E07               	movlw	7
 14454  0158FE  0100               	movlb	0	; () banked
 14455  015900  2780               	addwf	utoa@c& (0+255),f,b
 14456  015902                     l1390:
 14457                           
 14458                           ; BSR set to: 0
 14459  015902  0E30               	movlw	48
 14460  015904  0100               	movlb	0	; () banked
 14461  015906  2780               	addwf	utoa@c& (0+255),f,b
 14462                           
 14463                           ; BSR set to: 0
 14464  015908  C078  FFD9         	movff	utoa@buf,fsr2l
 14465  01590C  C079  FFDA         	movff	utoa@buf+1,fsr2h
 14466  015910  C080  FFDF         	movff	utoa@c,indf2
 14467                           
 14468                           ; BSR set to: 0
 14469  015914  0100               	movlb	0	; () banked
 14470  015916  0778               	decf	utoa@buf& (0+255),f,b
 14471  015918  A0D8               	btfss	status,0,c
 14472  01591A  0779               	decf	(utoa@buf+1)& (0+255),f,b
 14473                           
 14474                           ; BSR set to: 0
 14475  01591C  0100               	movlb	0	; () banked
 14476  01591E  517A               	movf	utoa@val& (0+255),w,b
 14477  015920  0100               	movlb	0	; () banked
 14478  015922  117B               	iorwf	(utoa@val+1)& (0+255),w,b
 14479  015924  A4D8               	btfss	status,2,c
 14480  015926  D7CA               	goto	l5222
 14481                           
 14482                           ; BSR set to: 0
 14483                           ;	Return value of _utoa is never used
 14484                           
 14485                           ; BSR set to: 0
 14486  015928  0100               	movlb	0	; () banked
 14487  01592A  4B78               	infsnz	utoa@buf& (0+255),f,b
 14488  01592C  2B79               	incf	(utoa@buf+1)& (0+255),f,b
 14489  01592E  0012               	return	
 14490  015930                     __end_of_utoa:
 14491                           	opt stack 0
 14492                           tblptru	equ	0xFF8
 14493                           tblptrh	equ	0xFF7
 14494                           tblptrl	equ	0xFF6
 14495                           tablat	equ	0xFF5
 14496                           prodh	equ	0xFF4
 14497                           prodl	equ	0xFF3
 14498                           intcon	equ	0xFF2
 14499                           postinc0	equ	0xFEE
 14500                           wreg	equ	0xFE8
 14501                           indf1	equ	0xFE7
 14502                           plusw1	equ	0xFE3
 14503                           fsr1h	equ	0xFE2
 14504                           fsr1l	equ	0xFE1
 14505                           indf2	equ	0xFDF
 14506                           postinc2	equ	0xFDE
 14507                           plusw2	equ	0xFDB
 14508                           fsr2h	equ	0xFDA
 14509                           fsr2l	equ	0xFD9
 14510                           status	equ	0xFD8
 14511                           
 14512 ;; *************** function ___lwmod *****************
 14513 ;; Defined at:
 14514 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14515 ;; Parameters:    Size  Location     Type
 14516 ;;  dividend        2   17[BANK0 ] unsigned int 
 14517 ;;  divisor         2   19[BANK0 ] unsigned int 
 14518 ;; Auto vars:     Size  Location     Type
 14519 ;;  counter         1   21[BANK0 ] unsigned char 
 14520 ;; Return value:  Size  Location     Type
 14521 ;;                  2   17[BANK0 ] unsigned int 
 14522 ;; Registers used:
 14523 ;;		wreg, status,2, status,0
 14524 ;; Tracked objects:
 14525 ;;		On entry : 0/0
 14526 ;;		On exit  : 0/0
 14527 ;;		Unchanged: 0/0
 14528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14529 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14530 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14532 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14533 ;;Total ram usage:        5 bytes
 14534 ;; Hardware stack levels used:    1
 14535 ;; Hardware stack levels required when called:    3
 14536 ;; This function calls:
 14537 ;;		Nothing
 14538 ;; This function is called by:
 14539 ;;		_utoa
 14540 ;; This function uses a non-reentrant model
 14541 ;;
 14542                           
 14543                           	psect	text31
 14544  015EA4                     __ptext31:
 14545                           	opt stack 0
 14546  015EA4                     ___lwmod:
 14547                           	opt stack 23
 14548                           
 14549                           ; BSR set to: 0
 14550                           ;incstack = 0
 14551  015EA4  0100               	movlb	0	; () banked
 14552  015EA6  5173               	movf	___lwmod@divisor& (0+255),w,b
 14553  015EA8  0100               	movlb	0	; () banked
 14554  015EAA  1174               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14555  015EAC  B4D8               	btfsc	status,2,c
 14556  015EAE  D026               	goto	l1479
 14557                           
 14558                           ; BSR set to: 0
 14559  015EB0  0E01               	movlw	1
 14560  015EB2  0100               	movlb	0	; () banked
 14561  015EB4  6F75               	movwf	___lwmod@counter& (0+255),b
 14562  015EB6  D006               	goto	l4770
 14563  015EB8                     l4768:
 14564                           
 14565                           ; BSR set to: 0
 14566  015EB8  0100               	movlb	0	; () banked
 14567  015EBA  90D8               	bcf	status,0,c
 14568  015EBC  3773               	rlcf	___lwmod@divisor& (0+255),f,b
 14569  015EBE  3774               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14570  015EC0  0100               	movlb	0	; () banked
 14571  015EC2  2B75               	incf	___lwmod@counter& (0+255),f,b
 14572  015EC4                     l4770:
 14573                           
 14574                           ; BSR set to: 0
 14575  015EC4  0100               	movlb	0	; () banked
 14576  015EC6  AF74               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14577  015EC8  D7F7               	goto	l4768
 14578  015ECA                     l4772:
 14579                           
 14580                           ; BSR set to: 0
 14581  015ECA  0100               	movlb	0	; () banked
 14582  015ECC  5173               	movf	___lwmod@divisor& (0+255),w,b
 14583  015ECE  0100               	movlb	0	; () banked
 14584  015ED0  5D71               	subwf	___lwmod@dividend& (0+255),w,b
 14585  015ED2  0100               	movlb	0	; () banked
 14586  015ED4  5174               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14587  015ED6  0100               	movlb	0	; () banked
 14588  015ED8  5972               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14589  015EDA  A0D8               	btfss	status,0,c
 14590  015EDC  D008               	goto	l4776
 14591                           
 14592                           ; BSR set to: 0
 14593  015EDE  0100               	movlb	0	; () banked
 14594  015EE0  5173               	movf	___lwmod@divisor& (0+255),w,b
 14595  015EE2  0100               	movlb	0	; () banked
 14596  015EE4  5F71               	subwf	___lwmod@dividend& (0+255),f,b
 14597  015EE6  0100               	movlb	0	; () banked
 14598  015EE8  5174               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14599  015EEA  0100               	movlb	0	; () banked
 14600  015EEC  5B72               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14601  015EEE                     l4776:
 14602                           
 14603                           ; BSR set to: 0
 14604  015EEE  0100               	movlb	0	; () banked
 14605  015EF0  90D8               	bcf	status,0,c
 14606  015EF2  3374               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14607  015EF4  3373               	rrcf	___lwmod@divisor& (0+255),f,b
 14608                           
 14609                           ; BSR set to: 0
 14610  015EF6  0100               	movlb	0	; () banked
 14611  015EF8  2F75               	decfsz	___lwmod@counter& (0+255),f,b
 14612  015EFA  D7E7               	goto	l4772
 14613  015EFC                     l1479:
 14614                           
 14615                           ; BSR set to: 0
 14616  015EFC  C071  F071         	movff	___lwmod@dividend,?___lwmod
 14617  015F00  C072  F072         	movff	___lwmod@dividend+1,?___lwmod+1
 14618                           
 14619                           ; BSR set to: 0
 14620  015F04  0012               	return		;funcret
 14621  015F06                     __end_of___lwmod:
 14622                           	opt stack 0
 14623                           tblptru	equ	0xFF8
 14624                           tblptrh	equ	0xFF7
 14625                           tblptrl	equ	0xFF6
 14626                           tablat	equ	0xFF5
 14627                           prodh	equ	0xFF4
 14628                           prodl	equ	0xFF3
 14629                           intcon	equ	0xFF2
 14630                           postinc0	equ	0xFEE
 14631                           wreg	equ	0xFE8
 14632                           indf1	equ	0xFE7
 14633                           plusw1	equ	0xFE3
 14634                           fsr1h	equ	0xFE2
 14635                           fsr1l	equ	0xFE1
 14636                           indf2	equ	0xFDF
 14637                           postinc2	equ	0xFDE
 14638                           plusw2	equ	0xFDB
 14639                           fsr2h	equ	0xFDA
 14640                           fsr2l	equ	0xFD9
 14641                           status	equ	0xFD8
 14642                           
 14643 ;; *************** function ___lwdiv *****************
 14644 ;; Defined at:
 14645 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 14646 ;; Parameters:    Size  Location     Type
 14647 ;;  dividend        2   17[BANK0 ] unsigned int 
 14648 ;;  divisor         2   19[BANK0 ] unsigned int 
 14649 ;; Auto vars:     Size  Location     Type
 14650 ;;  quotient        2   21[BANK0 ] unsigned int 
 14651 ;;  counter         1   23[BANK0 ] unsigned char 
 14652 ;; Return value:  Size  Location     Type
 14653 ;;                  2   17[BANK0 ] unsigned int 
 14654 ;; Registers used:
 14655 ;;		wreg, status,2, status,0
 14656 ;; Tracked objects:
 14657 ;;		On entry : 0/0
 14658 ;;		On exit  : 0/0
 14659 ;;		Unchanged: 0/0
 14660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14661 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14662 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14664 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14665 ;;Total ram usage:        7 bytes
 14666 ;; Hardware stack levels used:    1
 14667 ;; Hardware stack levels required when called:    3
 14668 ;; This function calls:
 14669 ;;		Nothing
 14670 ;; This function is called by:
 14671 ;;		_utoa
 14672 ;; This function uses a non-reentrant model
 14673 ;;
 14674                           
 14675                           	psect	text32
 14676  015DCA                     __ptext32:
 14677                           	opt stack 0
 14678  015DCA                     ___lwdiv:
 14679                           	opt stack 23
 14680                           
 14681                           ; BSR set to: 0
 14682                           ;incstack = 0
 14683  015DCA  0E00               	movlw	0
 14684  015DCC  0100               	movlb	0	; () banked
 14685  015DCE  6F76               	movwf	(___lwdiv@quotient+1)& (0+255),b
 14686  015DD0  0E00               	movlw	0
 14687  015DD2  6F75               	movwf	___lwdiv@quotient& (0+255),b
 14688                           
 14689                           ; BSR set to: 0
 14690  015DD4  0100               	movlb	0	; () banked
 14691  015DD6  5173               	movf	___lwdiv@divisor& (0+255),w,b
 14692  015DD8  0100               	movlb	0	; () banked
 14693  015DDA  1174               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 14694  015DDC  B4D8               	btfsc	status,2,c
 14695  015DDE  D02C               	goto	l1469
 14696                           
 14697                           ; BSR set to: 0
 14698  015DE0  0E01               	movlw	1
 14699  015DE2  0100               	movlb	0	; () banked
 14700  015DE4  6F77               	movwf	___lwdiv@counter& (0+255),b
 14701  015DE6  D006               	goto	l4750
 14702  015DE8                     l4748:
 14703                           
 14704                           ; BSR set to: 0
 14705  015DE8  0100               	movlb	0	; () banked
 14706  015DEA  90D8               	bcf	status,0,c
 14707  015DEC  3773               	rlcf	___lwdiv@divisor& (0+255),f,b
 14708  015DEE  3774               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 14709  015DF0  0100               	movlb	0	; () banked
 14710  015DF2  2B77               	incf	___lwdiv@counter& (0+255),f,b
 14711  015DF4                     l4750:
 14712                           
 14713                           ; BSR set to: 0
 14714  015DF4  0100               	movlb	0	; () banked
 14715  015DF6  AF74               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 14716  015DF8  D7F7               	goto	l4748
 14717  015DFA                     l4752:
 14718                           
 14719                           ; BSR set to: 0
 14720  015DFA  0100               	movlb	0	; () banked
 14721  015DFC  90D8               	bcf	status,0,c
 14722  015DFE  3775               	rlcf	___lwdiv@quotient& (0+255),f,b
 14723  015E00  3776               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 14724                           
 14725                           ; BSR set to: 0
 14726  015E02  0100               	movlb	0	; () banked
 14727  015E04  5173               	movf	___lwdiv@divisor& (0+255),w,b
 14728  015E06  0100               	movlb	0	; () banked
 14729  015E08  5D71               	subwf	___lwdiv@dividend& (0+255),w,b
 14730  015E0A  0100               	movlb	0	; () banked
 14731  015E0C  5174               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14732  015E0E  0100               	movlb	0	; () banked
 14733  015E10  5972               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 14734  015E12  A0D8               	btfss	status,0,c
 14735  015E14  D00A               	goto	l4760
 14736                           
 14737                           ; BSR set to: 0
 14738  015E16  0100               	movlb	0	; () banked
 14739  015E18  5173               	movf	___lwdiv@divisor& (0+255),w,b
 14740  015E1A  0100               	movlb	0	; () banked
 14741  015E1C  5F71               	subwf	___lwdiv@dividend& (0+255),f,b
 14742  015E1E  0100               	movlb	0	; () banked
 14743  015E20  5174               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14744  015E22  0100               	movlb	0	; () banked
 14745  015E24  5B72               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 14746                           
 14747                           ; BSR set to: 0
 14748  015E26  0100               	movlb	0	; () banked
 14749  015E28  8175               	bsf	___lwdiv@quotient& (0+255),0,b
 14750  015E2A                     l4760:
 14751                           
 14752                           ; BSR set to: 0
 14753  015E2A  0100               	movlb	0	; () banked
 14754  015E2C  90D8               	bcf	status,0,c
 14755  015E2E  3374               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 14756  015E30  3373               	rrcf	___lwdiv@divisor& (0+255),f,b
 14757                           
 14758                           ; BSR set to: 0
 14759  015E32  0100               	movlb	0	; () banked
 14760  015E34  2F77               	decfsz	___lwdiv@counter& (0+255),f,b
 14761  015E36  D7E1               	goto	l4752
 14762  015E38                     l1469:
 14763                           
 14764                           ; BSR set to: 0
 14765  015E38  C075  F071         	movff	___lwdiv@quotient,?___lwdiv
 14766  015E3C  C076  F072         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14767                           
 14768                           ; BSR set to: 0
 14769  015E40  0012               	return		;funcret
 14770  015E42                     __end_of___lwdiv:
 14771                           	opt stack 0
 14772                           tblptru	equ	0xFF8
 14773                           tblptrh	equ	0xFF7
 14774                           tblptrl	equ	0xFF6
 14775                           tablat	equ	0xFF5
 14776                           prodh	equ	0xFF4
 14777                           prodl	equ	0xFF3
 14778                           intcon	equ	0xFF2
 14779                           postinc0	equ	0xFEE
 14780                           wreg	equ	0xFE8
 14781                           indf1	equ	0xFE7
 14782                           plusw1	equ	0xFE3
 14783                           fsr1h	equ	0xFE2
 14784                           fsr1l	equ	0xFE1
 14785                           indf2	equ	0xFDF
 14786                           postinc2	equ	0xFDE
 14787                           plusw2	equ	0xFDB
 14788                           fsr2h	equ	0xFDA
 14789                           fsr2l	equ	0xFD9
 14790                           status	equ	0xFD8
 14791                           
 14792 ;; *************** function _LCD_write_string *****************
 14793 ;; Defined at:
 14794 ;;		line 194 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14795 ;; Parameters:    Size  Location     Type
 14796 ;;  buffer          2   34[BANK0 ] PTR unsigned char 
 14797 ;;		 -> str(12), LCD_write_integer@convertedInt(6), 
 14798 ;; Auto vars:     Size  Location     Type
 14799 ;;		None
 14800 ;; Return value:  Size  Location     Type
 14801 ;;		None               void
 14802 ;; Registers used:
 14803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14804 ;; Tracked objects:
 14805 ;;		On entry : 0/0
 14806 ;;		On exit  : 0/0
 14807 ;;		Unchanged: 0/0
 14808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14809 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14812 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14813 ;;Total ram usage:        2 bytes
 14814 ;; Hardware stack levels used:    1
 14815 ;; Hardware stack levels required when called:    8
 14816 ;; This function calls:
 14817 ;;		_LCD_write_char
 14818 ;; This function is called by:
 14819 ;;		_LCD_write_integer
 14820 ;;		_LCD_Handler
 14821 ;; This function uses a non-reentrant model
 14822 ;;
 14823                           
 14824                           	psect	text33
 14825  01621E                     __ptext33:
 14826                           	opt stack 0
 14827  01621E                     _LCD_write_string:
 14828                           	opt stack 21
 14829                           
 14830                           ;src\LCD_44780.c: 197: while(*buffer){
 14831                           
 14832                           ; BSR set to: 0
 14833                           ;incstack = 0
 14834  01621E  D00A               	goto	l8180
 14835  016220                     l8176:
 14836                           
 14837                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
 14838  016220  C082  FFD9         	movff	LCD_write_string@buffer,fsr2l
 14839  016224  C083  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 14840  016228  50DF               	movf	indf2,w,c
 14841  01622A  EC9A  F0AE         	call	_LCD_write_char
 14842                           
 14843                           ;src\LCD_44780.c: 202: buffer++;
 14844  01622E  0100               	movlb	0	; () banked
 14845  016230  4B82               	infsnz	LCD_write_string@buffer& (0+255),f,b
 14846  016232  2B83               	incf	(LCD_write_string@buffer+1)& (0+255),f,b
 14847  016234                     l8180:
 14848  016234  C082  FFD9         	movff	LCD_write_string@buffer,fsr2l
 14849  016238  C083  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
 14850  01623C  50DF               	movf	indf2,w,c
 14851  01623E  B4D8               	btfsc	status,2,c
 14852  016240  0012               	return	
 14853  016242  D7EE               	goto	l8176
 14854  016244                     __end_of_LCD_write_string:
 14855                           	opt stack 0
 14856                           tblptru	equ	0xFF8
 14857                           tblptrh	equ	0xFF7
 14858                           tblptrl	equ	0xFF6
 14859                           tablat	equ	0xFF5
 14860                           prodh	equ	0xFF4
 14861                           prodl	equ	0xFF3
 14862                           intcon	equ	0xFF2
 14863                           postinc0	equ	0xFEE
 14864                           wreg	equ	0xFE8
 14865                           indf1	equ	0xFE7
 14866                           plusw1	equ	0xFE3
 14867                           fsr1h	equ	0xFE2
 14868                           fsr1l	equ	0xFE1
 14869                           indf2	equ	0xFDF
 14870                           postinc2	equ	0xFDE
 14871                           plusw2	equ	0xFDB
 14872                           fsr2h	equ	0xFDA
 14873                           fsr2l	equ	0xFD9
 14874                           status	equ	0xFD8
 14875                           
 14876 ;; *************** function _LCD_write_char *****************
 14877 ;; Defined at:
 14878 ;;		line 145 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 14879 ;; Parameters:    Size  Location     Type
 14880 ;;  value           1    wreg     unsigned char 
 14881 ;; Auto vars:     Size  Location     Type
 14882 ;;  value           1   33[BANK0 ] unsigned char 
 14883 ;;  D0              1   32[BANK0 ] unsigned char 
 14884 ;;  D1              1   31[BANK0 ] unsigned char 
 14885 ;;  D2              1   30[BANK0 ] unsigned char 
 14886 ;;  D3              1   29[BANK0 ] unsigned char 
 14887 ;; Return value:  Size  Location     Type
 14888 ;;		None               void
 14889 ;; Registers used:
 14890 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14891 ;; Tracked objects:
 14892 ;;		On entry : 0/0
 14893 ;;		On exit  : 0/0
 14894 ;;		Unchanged: 0/0
 14895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14897 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14899 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14900 ;;Total ram usage:        5 bytes
 14901 ;; Hardware stack levels used:    1
 14902 ;; Hardware stack levels required when called:    7
 14903 ;; This function calls:
 14904 ;;		_LCD_send_command
 14905 ;; This function is called by:
 14906 ;;		_LCD_write_message
 14907 ;;		_LCD_write_string
 14908 ;; This function uses a non-reentrant model
 14909 ;;
 14910                           
 14911                           	psect	text34
 14912  015D34                     __ptext34:
 14913                           	opt stack 0
 14914  015D34                     _LCD_write_char:
 14915                           	opt stack 22
 14916                           
 14917                           ;incstack = 0
 14918                           ;LCD_write_char@value stored from wreg
 14919  015D34  0100               	movlb	0	; () banked
 14920  015D36  6F81               	movwf	LCD_write_char@value& (0+255),b
 14921                           
 14922                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
 14923                           ;src\LCD_44780.c: 149: LATEbits.LATE2 = 1;
 14924  015D38  848D               	bsf	3981,2,c	;volatile
 14925                           
 14926                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
 14927  015D3A  0100               	movlb	0	; () banked
 14928  015D3C  4581               	rlncf	LCD_write_char@value& (0+255),w,b
 14929  015D3E  0B01               	andlw	1
 14930  015D40  0100               	movlb	0	; () banked
 14931  015D42  6F7D               	movwf	LCD_write_char@D3& (0+255),b
 14932                           
 14933                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
 14934  015D44  0100               	movlb	0	; () banked
 14935  015D46  4581               	rlncf	LCD_write_char@value& (0+255),w,b
 14936  015D48  46E8               	rlncf	wreg,f,c
 14937  015D4A  0B03               	andlw	3
 14938  015D4C  0B01               	andlw	1
 14939  015D4E  0100               	movlb	0	; () banked
 14940  015D50  6F7E               	movwf	LCD_write_char@D2& (0+255),b
 14941                           
 14942                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
 14943  015D52  0100               	movlb	0	; () banked
 14944  015D54  3981               	swapf	LCD_write_char@value& (0+255),w,b
 14945  015D56  42E8               	rrncf	wreg,f,c
 14946  015D58  0B07               	andlw	7
 14947  015D5A  0B01               	andlw	1
 14948  015D5C  0100               	movlb	0	; () banked
 14949  015D5E  6F7F               	movwf	LCD_write_char@D1& (0+255),b
 14950                           
 14951                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
 14952  015D60  0100               	movlb	0	; () banked
 14953  015D62  3981               	swapf	LCD_write_char@value& (0+255),w,b
 14954  015D64  0B0F               	andlw	15
 14955  015D66  0B01               	andlw	1
 14956  015D68  0100               	movlb	0	; () banked
 14957  015D6A  6F80               	movwf	LCD_write_char@D0& (0+255),b
 14958                           
 14959                           ; BSR set to: 0
 14960                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
 14961  015D6C  C07E  F079         	movff	LCD_write_char@D2,LCD_send_command@D2
 14962  015D70  C07F  F07A         	movff	LCD_write_char@D1,LCD_send_command@D1
 14963  015D74  C080  F07B         	movff	LCD_write_char@D0,LCD_send_command@D0
 14964  015D78  0100               	movlb	0	; () banked
 14965  015D7A  517D               	movf	LCD_write_char@D3& (0+255),w,b
 14966  015D7C  EC3D  F0B0         	call	_LCD_send_command
 14967                           
 14968                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
 14969  015D80  0100               	movlb	0	; () banked
 14970  015D82  3981               	swapf	LCD_write_char@value& (0+255),w,b
 14971  015D84  46E8               	rlncf	wreg,f,c
 14972  015D86  0B1F               	andlw	31
 14973  015D88  0B01               	andlw	1
 14974  015D8A  0100               	movlb	0	; () banked
 14975  015D8C  6F7D               	movwf	LCD_write_char@D3& (0+255),b
 14976                           
 14977                           ; BSR set to: 0
 14978                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
 14979  015D8E  0100               	movlb	0	; () banked
 14980  015D90  4181               	rrncf	LCD_write_char@value& (0+255),w,b
 14981  015D92  42E8               	rrncf	wreg,f,c
 14982  015D94  0B3F               	andlw	63
 14983  015D96  0B01               	andlw	1
 14984  015D98  0100               	movlb	0	; () banked
 14985  015D9A  6F7E               	movwf	LCD_write_char@D2& (0+255),b
 14986                           
 14987                           ; BSR set to: 0
 14988                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
 14989  015D9C  0100               	movlb	0	; () banked
 14990  015D9E  90D8               	bcf	status,0,c
 14991  015DA0  3181               	rrcf	LCD_write_char@value& (0+255),w,b
 14992  015DA2  0B01               	andlw	1
 14993  015DA4  0100               	movlb	0	; () banked
 14994  015DA6  6F7F               	movwf	LCD_write_char@D1& (0+255),b
 14995                           
 14996                           ; BSR set to: 0
 14997                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
 14998  015DA8  0100               	movlb	0	; () banked
 14999  015DAA  5181               	movf	LCD_write_char@value& (0+255),w,b
 15000  015DAC  0B01               	andlw	1
 15001  015DAE  0100               	movlb	0	; () banked
 15002  015DB0  6F80               	movwf	LCD_write_char@D0& (0+255),b
 15003                           
 15004                           ; BSR set to: 0
 15005                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
 15006  015DB2  C07E  F079         	movff	LCD_write_char@D2,LCD_send_command@D2
 15007  015DB6  C07F  F07A         	movff	LCD_write_char@D1,LCD_send_command@D1
 15008  015DBA  C080  F07B         	movff	LCD_write_char@D0,LCD_send_command@D0
 15009  015DBE  0100               	movlb	0	; () banked
 15010  015DC0  517D               	movf	LCD_write_char@D3& (0+255),w,b
 15011  015DC2  EC3D  F0B0         	call	_LCD_send_command
 15012                           
 15013                           ;src\LCD_44780.c: 167: LATEbits.LATE2 = 0;
 15014  015DC6  948D               	bcf	3981,2,c	;volatile
 15015  015DC8  0012               	return		;funcret
 15016  015DCA                     __end_of_LCD_write_char:
 15017                           	opt stack 0
 15018                           tblptru	equ	0xFF8
 15019                           tblptrh	equ	0xFF7
 15020                           tblptrl	equ	0xFF6
 15021                           tablat	equ	0xFF5
 15022                           prodh	equ	0xFF4
 15023                           prodl	equ	0xFF3
 15024                           intcon	equ	0xFF2
 15025                           postinc0	equ	0xFEE
 15026                           wreg	equ	0xFE8
 15027                           indf1	equ	0xFE7
 15028                           plusw1	equ	0xFE3
 15029                           fsr1h	equ	0xFE2
 15030                           fsr1l	equ	0xFE1
 15031                           indf2	equ	0xFDF
 15032                           postinc2	equ	0xFDE
 15033                           plusw2	equ	0xFDB
 15034                           fsr2h	equ	0xFDA
 15035                           fsr2l	equ	0xFD9
 15036                           status	equ	0xFD8
 15037                           
 15038 ;; *************** function _LCD_initialize *****************
 15039 ;; Defined at:
 15040 ;;		line 283 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15041 ;; Parameters:    Size  Location     Type
 15042 ;;  quartz_frequ    1    wreg     unsigned char 
 15043 ;; Auto vars:     Size  Location     Type
 15044 ;;  quartz_frequ    1   31[BANK0 ] unsigned char 
 15045 ;; Return value:  Size  Location     Type
 15046 ;;		None               void
 15047 ;; Registers used:
 15048 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15049 ;; Tracked objects:
 15050 ;;		On entry : 0/0
 15051 ;;		On exit  : 0/0
 15052 ;;		Unchanged: 0/0
 15053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15055 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15057 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15058 ;;Total ram usage:        1 bytes
 15059 ;; Hardware stack levels used:    1
 15060 ;; Hardware stack levels required when called:    8
 15061 ;; This function calls:
 15062 ;;		_LCD_clear
 15063 ;;		_LCD_cursor
 15064 ;;		_LCD_send_command
 15065 ;;		_delay_ms
 15066 ;;		_delay_set_quartz
 15067 ;; This function is called by:
 15068 ;;		_main
 15069 ;;		_LCD_Handler
 15070 ;;		_board_initialization
 15071 ;; This function uses a non-reentrant model
 15072 ;;
 15073                           
 15074                           	psect	text35
 15075  01544E                     __ptext35:
 15076                           	opt stack 0
 15077  01544E                     _LCD_initialize:
 15078                           	opt stack 21
 15079                           
 15080                           ;incstack = 0
 15081                           ;LCD_initialize@quartz_frequency stored from wreg
 15082  01544E  0100               	movlb	0	; () banked
 15083  015450  6F7F               	movwf	LCD_initialize@quartz_frequency& (0+255),b
 15084                           
 15085                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
 15086  015452  0100               	movlb	0	; () banked
 15087  015454  517F               	movf	LCD_initialize@quartz_frequency& (0+255),w,b
 15088  015456  ECA2  F0B1         	call	_delay_set_quartz
 15089                           
 15090                           ;src\LCD_44780.c: 287: LATEbits.LATE2 = 0x00;
 15091  01545A  948D               	bcf	3981,2,c	;volatile
 15092                           
 15093                           ;src\LCD_44780.c: 288: LATCbits.LATC1 = 0x00;
 15094  01545C  928B               	bcf	3979,1,c	;volatile
 15095                           
 15096                           ;src\LCD_44780.c: 289: LATCbits.LATC0 = 0x00;
 15097  01545E  908B               	bcf	3979,0,c	;volatile
 15098                           
 15099                           ;src\LCD_44780.c: 291: delay_ms (100);
 15100  015460  0E00               	movlw	0
 15101  015462  0100               	movlb	0	; () banked
 15102  015464  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15103  015466  0E64               	movlw	100
 15104  015468  6F77               	movwf	delay_ms@value_ms& (0+255),b
 15105  01546A  EC5A  F0B0         	call	_delay_ms	;wreg free
 15106                           
 15107                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
 15108  01546E  0E00               	movlw	0
 15109  015470  0100               	movlb	0	; () banked
 15110  015472  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15111  015474  0E01               	movlw	1
 15112  015476  0100               	movlb	0	; () banked
 15113  015478  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15114  01547A  0E01               	movlw	1
 15115  01547C  0100               	movlb	0	; () banked
 15116  01547E  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15117  015480  0E00               	movlw	0
 15118  015482  EC3D  F0B0         	call	_LCD_send_command
 15119                           
 15120                           ;src\LCD_44780.c: 293: delay_ms (100);
 15121  015486  0E00               	movlw	0
 15122  015488  0100               	movlb	0	; () banked
 15123  01548A  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15124  01548C  0E64               	movlw	100
 15125  01548E  6F77               	movwf	delay_ms@value_ms& (0+255),b
 15126  015490  EC5A  F0B0         	call	_delay_ms	;wreg free
 15127                           
 15128                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
 15129  015494  0E00               	movlw	0
 15130  015496  0100               	movlb	0	; () banked
 15131  015498  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15132  01549A  0E01               	movlw	1
 15133  01549C  0100               	movlb	0	; () banked
 15134  01549E  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15135  0154A0  0E01               	movlw	1
 15136  0154A2  0100               	movlb	0	; () banked
 15137  0154A4  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15138  0154A6  0E00               	movlw	0
 15139  0154A8  EC3D  F0B0         	call	_LCD_send_command
 15140                           
 15141                           ;src\LCD_44780.c: 295: delay_ms (10);
 15142  0154AC  0E00               	movlw	0
 15143  0154AE  0100               	movlb	0	; () banked
 15144  0154B0  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 15145  0154B2  0E0A               	movlw	10
 15146  0154B4  6F77               	movwf	delay_ms@value_ms& (0+255),b
 15147  0154B6  EC5A  F0B0         	call	_delay_ms	;wreg free
 15148                           
 15149                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
 15150  0154BA  0E00               	movlw	0
 15151  0154BC  0100               	movlb	0	; () banked
 15152  0154BE  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15153  0154C0  0E01               	movlw	1
 15154  0154C2  0100               	movlb	0	; () banked
 15155  0154C4  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15156  0154C6  0E01               	movlw	1
 15157  0154C8  0100               	movlb	0	; () banked
 15158  0154CA  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15159  0154CC  0E00               	movlw	0
 15160  0154CE  EC3D  F0B0         	call	_LCD_send_command
 15161                           
 15162                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
 15163  0154D2  0E00               	movlw	0
 15164  0154D4  0100               	movlb	0	; () banked
 15165  0154D6  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15166  0154D8  0E01               	movlw	1
 15167  0154DA  0100               	movlb	0	; () banked
 15168  0154DC  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15169  0154DE  0E00               	movlw	0
 15170  0154E0  0100               	movlb	0	; () banked
 15171  0154E2  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15172  0154E4  0E00               	movlw	0
 15173  0154E6  EC3D  F0B0         	call	_LCD_send_command
 15174                           
 15175                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
 15176  0154EA  0E00               	movlw	0
 15177  0154EC  0100               	movlb	0	; () banked
 15178  0154EE  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15179  0154F0  0E01               	movlw	1
 15180  0154F2  0100               	movlb	0	; () banked
 15181  0154F4  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15182  0154F6  0E00               	movlw	0
 15183  0154F8  0100               	movlb	0	; () banked
 15184  0154FA  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15185  0154FC  0E00               	movlw	0
 15186  0154FE  EC3D  F0B0         	call	_LCD_send_command
 15187                           
 15188                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
 15189  015502  0E00               	movlw	0
 15190  015504  0100               	movlb	0	; () banked
 15191  015506  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15192  015508  0E00               	movlw	0
 15193  01550A  0100               	movlb	0	; () banked
 15194  01550C  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15195  01550E  0E00               	movlw	0
 15196  015510  0100               	movlb	0	; () banked
 15197  015512  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15198  015514  0E01               	movlw	1
 15199  015516  EC3D  F0B0         	call	_LCD_send_command
 15200                           
 15201                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
 15202  01551A  0E00               	movlw	0
 15203  01551C  0100               	movlb	0	; () banked
 15204  01551E  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15205  015520  0E00               	movlw	0
 15206  015522  0100               	movlb	0	; () banked
 15207  015524  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15208  015526  0E00               	movlw	0
 15209  015528  0100               	movlb	0	; () banked
 15210  01552A  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15211  01552C  0E00               	movlw	0
 15212  01552E  EC3D  F0B0         	call	_LCD_send_command
 15213                           
 15214                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
 15215  015532  0E00               	movlw	0
 15216  015534  0100               	movlb	0	; () banked
 15217  015536  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15218  015538  0E00               	movlw	0
 15219  01553A  0100               	movlb	0	; () banked
 15220  01553C  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15221  01553E  0E00               	movlw	0
 15222  015540  0100               	movlb	0	; () banked
 15223  015542  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15224  015544  0E01               	movlw	1
 15225  015546  EC3D  F0B0         	call	_LCD_send_command
 15226                           
 15227                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
 15228  01554A  0E00               	movlw	0
 15229  01554C  0100               	movlb	0	; () banked
 15230  01554E  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15231  015550  0E00               	movlw	0
 15232  015552  0100               	movlb	0	; () banked
 15233  015554  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15234  015556  0E00               	movlw	0
 15235  015558  0100               	movlb	0	; () banked
 15236  01555A  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15237  01555C  0E00               	movlw	0
 15238  01555E  EC3D  F0B0         	call	_LCD_send_command
 15239                           
 15240                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 15241  015562  0E00               	movlw	0
 15242  015564  0100               	movlb	0	; () banked
 15243  015566  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15244  015568  0E00               	movlw	0
 15245  01556A  0100               	movlb	0	; () banked
 15246  01556C  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15247  01556E  0E01               	movlw	1
 15248  015570  0100               	movlb	0	; () banked
 15249  015572  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15250  015574  0E00               	movlw	0
 15251  015576  EC3D  F0B0         	call	_LCD_send_command
 15252                           
 15253                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 15254  01557A  0E00               	movlw	0
 15255  01557C  0100               	movlb	0	; () banked
 15256  01557E  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15257  015580  0E00               	movlw	0
 15258  015582  0100               	movlb	0	; () banked
 15259  015584  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15260  015586  0E00               	movlw	0
 15261  015588  0100               	movlb	0	; () banked
 15262  01558A  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15263  01558C  0E00               	movlw	0
 15264  01558E  EC3D  F0B0         	call	_LCD_send_command
 15265                           
 15266                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 15267  015592  0E01               	movlw	1
 15268  015594  0100               	movlb	0	; () banked
 15269  015596  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15270  015598  0E01               	movlw	1
 15271  01559A  0100               	movlb	0	; () banked
 15272  01559C  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15273  01559E  0E00               	movlw	0
 15274  0155A0  0100               	movlb	0	; () banked
 15275  0155A2  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15276  0155A4  0E00               	movlw	0
 15277  0155A6  EC3D  F0B0         	call	_LCD_send_command
 15278                           
 15279                           ;src\LCD_44780.c: 312: LCD_clear ();
 15280  0155AA  ECE1  F0B0         	call	_LCD_clear	;wreg free
 15281                           
 15282                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 15283  0155AE  0E00               	movlw	0
 15284  0155B0  0100               	movlb	0	; () banked
 15285  0155B2  6F7D               	movwf	LCD_cursor@blinking& (0+255),b
 15286  0155B4  0E00               	movlw	0
 15287  0155B6  ECC8  F0B0         	call	_LCD_cursor
 15288  0155BA  0012               	return		;funcret
 15289  0155BC                     __end_of_LCD_initialize:
 15290                           	opt stack 0
 15291                           tblptru	equ	0xFF8
 15292                           tblptrh	equ	0xFF7
 15293                           tblptrl	equ	0xFF6
 15294                           tablat	equ	0xFF5
 15295                           prodh	equ	0xFF4
 15296                           prodl	equ	0xFF3
 15297                           intcon	equ	0xFF2
 15298                           postinc0	equ	0xFEE
 15299                           wreg	equ	0xFE8
 15300                           indf1	equ	0xFE7
 15301                           plusw1	equ	0xFE3
 15302                           fsr1h	equ	0xFE2
 15303                           fsr1l	equ	0xFE1
 15304                           indf2	equ	0xFDF
 15305                           postinc2	equ	0xFDE
 15306                           plusw2	equ	0xFDB
 15307                           fsr2h	equ	0xFDA
 15308                           fsr2l	equ	0xFD9
 15309                           status	equ	0xFD8
 15310                           
 15311 ;; *************** function _delay_set_quartz *****************
 15312 ;; Defined at:
 15313 ;;		line 115 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 15314 ;; Parameters:    Size  Location     Type
 15315 ;;  frequency       1    wreg     unsigned char 
 15316 ;; Auto vars:     Size  Location     Type
 15317 ;;  frequency       1   17[BANK0 ] unsigned char 
 15318 ;; Return value:  Size  Location     Type
 15319 ;;		None               void
 15320 ;; Registers used:
 15321 ;;		wreg
 15322 ;; Tracked objects:
 15323 ;;		On entry : 0/0
 15324 ;;		On exit  : 0/0
 15325 ;;		Unchanged: 0/0
 15326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15328 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15330 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15331 ;;Total ram usage:        1 bytes
 15332 ;; Hardware stack levels used:    1
 15333 ;; Hardware stack levels required when called:    3
 15334 ;; This function calls:
 15335 ;;		Nothing
 15336 ;; This function is called by:
 15337 ;;		_LCD_initialize
 15338 ;; This function uses a non-reentrant model
 15339 ;;
 15340                           
 15341                           	psect	text36
 15342  016344                     __ptext36:
 15343                           	opt stack 0
 15344  016344                     _delay_set_quartz:
 15345                           	opt stack 25
 15346                           
 15347                           ;incstack = 0
 15348                           ;delay_set_quartz@frequency stored from wreg
 15349  016344  0100               	movlb	0	; () banked
 15350  016346  6F71               	movwf	delay_set_quartz@frequency& (0+255),b
 15351                           
 15352                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 15353  016348  C071  F0ED         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 15354  01634C  0012               	return		;funcret
 15355  01634E                     __end_of_delay_set_quartz:
 15356                           	opt stack 0
 15357                           tblptru	equ	0xFF8
 15358                           tblptrh	equ	0xFF7
 15359                           tblptrl	equ	0xFF6
 15360                           tablat	equ	0xFF5
 15361                           prodh	equ	0xFF4
 15362                           prodl	equ	0xFF3
 15363                           intcon	equ	0xFF2
 15364                           postinc0	equ	0xFEE
 15365                           wreg	equ	0xFE8
 15366                           indf1	equ	0xFE7
 15367                           plusw1	equ	0xFE3
 15368                           fsr1h	equ	0xFE2
 15369                           fsr1l	equ	0xFE1
 15370                           indf2	equ	0xFDF
 15371                           postinc2	equ	0xFDE
 15372                           plusw2	equ	0xFDB
 15373                           fsr2h	equ	0xFDA
 15374                           fsr2l	equ	0xFD9
 15375                           status	equ	0xFD8
 15376                           
 15377 ;; *************** function _LCD_cursor *****************
 15378 ;; Defined at:
 15379 ;;		line 266 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15380 ;; Parameters:    Size  Location     Type
 15381 ;;  active          1    wreg     unsigned char 
 15382 ;;  blinking        1   29[BANK0 ] unsigned char 
 15383 ;; Auto vars:     Size  Location     Type
 15384 ;;  active          1   30[BANK0 ] unsigned char 
 15385 ;; Return value:  Size  Location     Type
 15386 ;;		None               void
 15387 ;; Registers used:
 15388 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15389 ;; Tracked objects:
 15390 ;;		On entry : 0/0
 15391 ;;		On exit  : 0/0
 15392 ;;		Unchanged: 0/0
 15393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15394 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15395 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15397 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15398 ;;Total ram usage:        2 bytes
 15399 ;; Hardware stack levels used:    1
 15400 ;; Hardware stack levels required when called:    7
 15401 ;; This function calls:
 15402 ;;		_LCD_send_command
 15403 ;; This function is called by:
 15404 ;;		_LCD_initialize
 15405 ;; This function uses a non-reentrant model
 15406 ;;
 15407                           
 15408                           	psect	text37
 15409  016190                     __ptext37:
 15410                           	opt stack 0
 15411  016190                     _LCD_cursor:
 15412                           	opt stack 21
 15413                           
 15414                           ;incstack = 0
 15415                           ;LCD_cursor@active stored from wreg
 15416  016190  0100               	movlb	0	; () banked
 15417  016192  6F7E               	movwf	LCD_cursor@active& (0+255),b
 15418                           
 15419                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 15420  016194  0E00               	movlw	0
 15421  016196  0100               	movlb	0	; () banked
 15422  016198  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15423  01619A  0E00               	movlw	0
 15424  01619C  0100               	movlb	0	; () banked
 15425  01619E  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15426  0161A0  0E00               	movlw	0
 15427  0161A2  0100               	movlb	0	; () banked
 15428  0161A4  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15429  0161A6  0E00               	movlw	0
 15430  0161A8  EC3D  F0B0         	call	_LCD_send_command
 15431                           
 15432                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 15433  0161AC  0E01               	movlw	1
 15434  0161AE  0100               	movlb	0	; () banked
 15435  0161B0  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15436  0161B2  C07E  F07A         	movff	LCD_cursor@active,LCD_send_command@D1
 15437  0161B6  C07D  F07B         	movff	LCD_cursor@blinking,LCD_send_command@D0
 15438  0161BA  0E01               	movlw	1
 15439  0161BC  EC3D  F0B0         	call	_LCD_send_command
 15440  0161C0  0012               	return		;funcret
 15441  0161C2                     __end_of_LCD_cursor:
 15442                           	opt stack 0
 15443                           tblptru	equ	0xFF8
 15444                           tblptrh	equ	0xFF7
 15445                           tblptrl	equ	0xFF6
 15446                           tablat	equ	0xFF5
 15447                           prodh	equ	0xFF4
 15448                           prodl	equ	0xFF3
 15449                           intcon	equ	0xFF2
 15450                           postinc0	equ	0xFEE
 15451                           wreg	equ	0xFE8
 15452                           indf1	equ	0xFE7
 15453                           plusw1	equ	0xFE3
 15454                           fsr1h	equ	0xFE2
 15455                           fsr1l	equ	0xFE1
 15456                           indf2	equ	0xFDF
 15457                           postinc2	equ	0xFDE
 15458                           plusw2	equ	0xFDB
 15459                           fsr2h	equ	0xFDA
 15460                           fsr2l	equ	0xFD9
 15461                           status	equ	0xFD8
 15462                           
 15463 ;; *************** function _LCD_clear *****************
 15464 ;; Defined at:
 15465 ;;		line 257 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15466 ;; Parameters:    Size  Location     Type
 15467 ;;		None
 15468 ;; Auto vars:     Size  Location     Type
 15469 ;;		None
 15470 ;; Return value:  Size  Location     Type
 15471 ;;		None               void
 15472 ;; Registers used:
 15473 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15474 ;; Tracked objects:
 15475 ;;		On entry : 0/0
 15476 ;;		On exit  : 0/0
 15477 ;;		Unchanged: 0/0
 15478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15483 ;;Total ram usage:        0 bytes
 15484 ;; Hardware stack levels used:    1
 15485 ;; Hardware stack levels required when called:    7
 15486 ;; This function calls:
 15487 ;;		_LCD_send_command
 15488 ;; This function is called by:
 15489 ;;		_LCD_initialize
 15490 ;;		_LCD_Handler
 15491 ;;		_board_initialization
 15492 ;; This function uses a non-reentrant model
 15493 ;;
 15494                           
 15495                           	psect	text38
 15496  0161C2                     __ptext38:
 15497                           	opt stack 0
 15498  0161C2                     _LCD_clear:
 15499                           	opt stack 21
 15500                           
 15501                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 15502                           
 15503                           ;incstack = 0
 15504  0161C2  0E00               	movlw	0
 15505  0161C4  0100               	movlb	0	; () banked
 15506  0161C6  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15507  0161C8  0E00               	movlw	0
 15508  0161CA  0100               	movlb	0	; () banked
 15509  0161CC  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15510  0161CE  0E00               	movlw	0
 15511  0161D0  0100               	movlb	0	; () banked
 15512  0161D2  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15513  0161D4  0E00               	movlw	0
 15514  0161D6  EC3D  F0B0         	call	_LCD_send_command
 15515                           
 15516                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 15517  0161DA  0E00               	movlw	0
 15518  0161DC  0100               	movlb	0	; () banked
 15519  0161DE  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15520  0161E0  0E00               	movlw	0
 15521  0161E2  0100               	movlb	0	; () banked
 15522  0161E4  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15523  0161E6  0E01               	movlw	1
 15524  0161E8  0100               	movlb	0	; () banked
 15525  0161EA  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15526  0161EC  0E00               	movlw	0
 15527  0161EE  EC3D  F0B0         	call	_LCD_send_command
 15528  0161F2  0012               	return		;funcret
 15529  0161F4                     __end_of_LCD_clear:
 15530                           	opt stack 0
 15531                           tblptru	equ	0xFF8
 15532                           tblptrh	equ	0xFF7
 15533                           tblptrl	equ	0xFF6
 15534                           tablat	equ	0xFF5
 15535                           prodh	equ	0xFF4
 15536                           prodl	equ	0xFF3
 15537                           intcon	equ	0xFF2
 15538                           postinc0	equ	0xFEE
 15539                           wreg	equ	0xFE8
 15540                           indf1	equ	0xFE7
 15541                           plusw1	equ	0xFE3
 15542                           fsr1h	equ	0xFE2
 15543                           fsr1l	equ	0xFE1
 15544                           indf2	equ	0xFDF
 15545                           postinc2	equ	0xFDE
 15546                           plusw2	equ	0xFDB
 15547                           fsr2h	equ	0xFDA
 15548                           fsr2l	equ	0xFD9
 15549                           status	equ	0xFD8
 15550                           
 15551 ;; *************** function _LCD_goto_xy *****************
 15552 ;; Defined at:
 15553 ;;		line 136 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15554 ;; Parameters:    Size  Location     Type
 15555 ;;  x               1    wreg     unsigned char 
 15556 ;;  y               1   32[BANK0 ] unsigned char 
 15557 ;; Auto vars:     Size  Location     Type
 15558 ;;  x               1   33[BANK0 ] unsigned char 
 15559 ;; Return value:  Size  Location     Type
 15560 ;;		None               void
 15561 ;; Registers used:
 15562 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15563 ;; Tracked objects:
 15564 ;;		On entry : 0/0
 15565 ;;		On exit  : 0/0
 15566 ;;		Unchanged: 0/0
 15567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15568 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15569 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15571 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15572 ;;Total ram usage:        2 bytes
 15573 ;; Hardware stack levels used:    1
 15574 ;; Hardware stack levels required when called:    8
 15575 ;; This function calls:
 15576 ;;		_LCD_goto_line
 15577 ;;		_LCD_shift_cursor
 15578 ;; This function is called by:
 15579 ;;		_LCD_Handler
 15580 ;; This function uses a non-reentrant model
 15581 ;;
 15582                           
 15583                           	psect	text39
 15584  0162C4                     __ptext39:
 15585                           	opt stack 0
 15586  0162C4                     _LCD_goto_xy:
 15587                           	opt stack 21
 15588                           
 15589                           ;incstack = 0
 15590                           ;LCD_goto_xy@x stored from wreg
 15591  0162C4  0100               	movlb	0	; () banked
 15592  0162C6  6F81               	movwf	LCD_goto_xy@x& (0+255),b
 15593                           
 15594                           ;src\LCD_44780.c: 138: LCD_goto_line (y);
 15595  0162C8  0100               	movlb	0	; () banked
 15596  0162CA  5180               	movf	LCD_goto_xy@y& (0+255),w,b
 15597  0162CC  EC64  F0AB         	call	_LCD_goto_line
 15598                           
 15599                           ;src\LCD_44780.c: 139: LCD_shift_cursor (1, x-1);
 15600  0162D0  0100               	movlb	0	; () banked
 15601  0162D2  0581               	decf	LCD_goto_xy@x& (0+255),w,b
 15602  0162D4  0100               	movlb	0	; () banked
 15603  0162D6  6F7D               	movwf	LCD_shift_cursor@number_of_shift& (0+255),b
 15604  0162D8  0E01               	movlw	1
 15605  0162DA  ECAD  F0AF         	call	_LCD_shift_cursor
 15606  0162DE  0012               	return		;funcret
 15607  0162E0                     __end_of_LCD_goto_xy:
 15608                           	opt stack 0
 15609                           tblptru	equ	0xFF8
 15610                           tblptrh	equ	0xFF7
 15611                           tblptrl	equ	0xFF6
 15612                           tablat	equ	0xFF5
 15613                           prodh	equ	0xFF4
 15614                           prodl	equ	0xFF3
 15615                           intcon	equ	0xFF2
 15616                           postinc0	equ	0xFEE
 15617                           wreg	equ	0xFE8
 15618                           indf1	equ	0xFE7
 15619                           plusw1	equ	0xFE3
 15620                           fsr1h	equ	0xFE2
 15621                           fsr1l	equ	0xFE1
 15622                           indf2	equ	0xFDF
 15623                           postinc2	equ	0xFDE
 15624                           plusw2	equ	0xFDB
 15625                           fsr2h	equ	0xFDA
 15626                           fsr2l	equ	0xFD9
 15627                           status	equ	0xFD8
 15628                           
 15629 ;; *************** function _LCD_shift_cursor *****************
 15630 ;; Defined at:
 15631 ;;		line 98 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15632 ;; Parameters:    Size  Location     Type
 15633 ;;  shift           1    wreg     unsigned char 
 15634 ;;  number_of_sh    1   29[BANK0 ] unsigned char 
 15635 ;; Auto vars:     Size  Location     Type
 15636 ;;  shift           1   30[BANK0 ] unsigned char 
 15637 ;;  i               1   31[BANK0 ] unsigned char 
 15638 ;; Return value:  Size  Location     Type
 15639 ;;		None               void
 15640 ;; Registers used:
 15641 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15642 ;; Tracked objects:
 15643 ;;		On entry : 0/0
 15644 ;;		On exit  : 0/0
 15645 ;;		Unchanged: 0/0
 15646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15647 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15648 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15650 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15651 ;;Total ram usage:        3 bytes
 15652 ;; Hardware stack levels used:    1
 15653 ;; Hardware stack levels required when called:    7
 15654 ;; This function calls:
 15655 ;;		_LCD_send_command
 15656 ;; This function is called by:
 15657 ;;		_LCD_goto_xy
 15658 ;; This function uses a non-reentrant model
 15659 ;;
 15660                           
 15661                           	psect	text40
 15662  015F5A                     __ptext40:
 15663                           	opt stack 0
 15664  015F5A                     _LCD_shift_cursor:
 15665                           	opt stack 21
 15666                           
 15667                           ;incstack = 0
 15668                           ;LCD_shift_cursor@shift stored from wreg
 15669  015F5A  0100               	movlb	0	; () banked
 15670  015F5C  6F7E               	movwf	LCD_shift_cursor@shift& (0+255),b
 15671                           
 15672                           ;src\LCD_44780.c: 100: unsigned char i;
 15673                           ;src\LCD_44780.c: 102: for (i=0; i < number_of_shift; i++) {
 15674  015F5E  0E00               	movlw	0
 15675  015F60  0100               	movlb	0	; () banked
 15676  015F62  6F7F               	movwf	LCD_shift_cursor@i& (0+255),b
 15677  015F64  D019               	goto	l8160
 15678  015F66                     l8156:
 15679                           
 15680                           ; BSR set to: 0
 15681                           ;src\LCD_44780.c: 103: LCD_send_command (0,0,0,1);
 15682  015F66  0E00               	movlw	0
 15683  015F68  0100               	movlb	0	; () banked
 15684  015F6A  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15685  015F6C  0E00               	movlw	0
 15686  015F6E  0100               	movlb	0	; () banked
 15687  015F70  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15688  015F72  0E01               	movlw	1
 15689  015F74  0100               	movlb	0	; () banked
 15690  015F76  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15691  015F78  0E00               	movlw	0
 15692  015F7A  EC3D  F0B0         	call	_LCD_send_command
 15693                           
 15694                           ;src\LCD_44780.c: 104: LCD_send_command (0,shift,0,0);
 15695  015F7E  C07E  F079         	movff	LCD_shift_cursor@shift,LCD_send_command@D2
 15696  015F82  0E00               	movlw	0
 15697  015F84  0100               	movlb	0	; () banked
 15698  015F86  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15699  015F88  0E00               	movlw	0
 15700  015F8A  0100               	movlb	0	; () banked
 15701  015F8C  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15702  015F8E  0E00               	movlw	0
 15703  015F90  EC3D  F0B0         	call	_LCD_send_command
 15704  015F94  0100               	movlb	0	; () banked
 15705  015F96  2B7F               	incf	LCD_shift_cursor@i& (0+255),f,b
 15706  015F98                     l8160:
 15707                           
 15708                           ; BSR set to: 0
 15709  015F98  0100               	movlb	0	; () banked
 15710  015F9A  517D               	movf	LCD_shift_cursor@number_of_shift& (0+255),w,b
 15711  015F9C  0100               	movlb	0	; () banked
 15712  015F9E  5D7F               	subwf	LCD_shift_cursor@i& (0+255),w,b
 15713  015FA0  B0D8               	btfsc	status,0,c
 15714  015FA2  0012               	return	
 15715  015FA4  D7E0               	goto	l8156
 15716  015FA6                     __end_of_LCD_shift_cursor:
 15717                           	opt stack 0
 15718                           tblptru	equ	0xFF8
 15719                           tblptrh	equ	0xFF7
 15720                           tblptrl	equ	0xFF6
 15721                           tablat	equ	0xFF5
 15722                           prodh	equ	0xFF4
 15723                           prodl	equ	0xFF3
 15724                           intcon	equ	0xFF2
 15725                           postinc0	equ	0xFEE
 15726                           wreg	equ	0xFE8
 15727                           indf1	equ	0xFE7
 15728                           plusw1	equ	0xFE3
 15729                           fsr1h	equ	0xFE2
 15730                           fsr1l	equ	0xFE1
 15731                           indf2	equ	0xFDF
 15732                           postinc2	equ	0xFDE
 15733                           plusw2	equ	0xFDB
 15734                           fsr2h	equ	0xFDA
 15735                           fsr2l	equ	0xFD9
 15736                           status	equ	0xFD8
 15737                           
 15738 ;; *************** function _LCD_goto_line *****************
 15739 ;; Defined at:
 15740 ;;		line 111 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15741 ;; Parameters:    Size  Location     Type
 15742 ;;  line            1    wreg     unsigned char 
 15743 ;; Auto vars:     Size  Location     Type
 15744 ;;  line            1   29[BANK0 ] unsigned char 
 15745 ;; Return value:  Size  Location     Type
 15746 ;;		None               void
 15747 ;; Registers used:
 15748 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15749 ;; Tracked objects:
 15750 ;;		On entry : 0/0
 15751 ;;		On exit  : 0/0
 15752 ;;		Unchanged: 0/0
 15753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15755 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15757 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15758 ;;Total ram usage:        1 bytes
 15759 ;; Hardware stack levels used:    1
 15760 ;; Hardware stack levels required when called:    7
 15761 ;; This function calls:
 15762 ;;		_LCD_send_command
 15763 ;; This function is called by:
 15764 ;;		_LCD_goto_xy
 15765 ;;		_main
 15766 ;;		_LCD_Handler
 15767 ;;		_LCD_Park
 15768 ;;		_board_initialization
 15769 ;; This function uses a non-reentrant model
 15770 ;;
 15771                           
 15772                           	psect	text41
 15773  0156C8                     __ptext41:
 15774                           	opt stack 0
 15775  0156C8                     _LCD_goto_line:
 15776                           	opt stack 22
 15777                           
 15778                           ; BSR set to: 0
 15779                           ;incstack = 0
 15780                           ;LCD_goto_line@line stored from wreg
 15781  0156C8  0100               	movlb	0	; () banked
 15782  0156CA  6F7D               	movwf	LCD_goto_line@line& (0+255),b
 15783                           
 15784                           ;src\LCD_44780.c: 113: switch(line) {
 15785  0156CC  D064               	goto	l8172
 15786  0156CE                     l8164:
 15787  0156CE  0E00               	movlw	0
 15788  0156D0  0100               	movlb	0	; () banked
 15789  0156D2  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15790  0156D4  0E00               	movlw	0
 15791  0156D6  0100               	movlb	0	; () banked
 15792  0156D8  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15793  0156DA  0E00               	movlw	0
 15794  0156DC  0100               	movlb	0	; () banked
 15795  0156DE  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15796  0156E0  0E01               	movlw	1
 15797  0156E2  EC3D  F0B0         	call	_LCD_send_command
 15798                           
 15799                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
 15800  0156E6  0E00               	movlw	0
 15801  0156E8  0100               	movlb	0	; () banked
 15802  0156EA  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15803  0156EC  0E00               	movlw	0
 15804  0156EE  0100               	movlb	0	; () banked
 15805  0156F0  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15806  0156F2  0E00               	movlw	0
 15807  0156F4  0100               	movlb	0	; () banked
 15808  0156F6  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15809  0156F8  0E00               	movlw	0
 15810  0156FA  EC3D  F0B0         	call	_LCD_send_command
 15811                           
 15812                           ;src\LCD_44780.c: 117: break;
 15813  0156FE  0012               	return	
 15814  015700                     l8166:
 15815  015700  0E01               	movlw	1
 15816  015702  0100               	movlb	0	; () banked
 15817  015704  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15818  015706  0E00               	movlw	0
 15819  015708  0100               	movlb	0	; () banked
 15820  01570A  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15821  01570C  0E00               	movlw	0
 15822  01570E  0100               	movlb	0	; () banked
 15823  015710  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15824  015712  0E01               	movlw	1
 15825  015714  EC3D  F0B0         	call	_LCD_send_command
 15826                           
 15827                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
 15828  015718  0E00               	movlw	0
 15829  01571A  0100               	movlb	0	; () banked
 15830  01571C  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15831  01571E  0E00               	movlw	0
 15832  015720  0100               	movlb	0	; () banked
 15833  015722  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15834  015724  0E00               	movlw	0
 15835  015726  0100               	movlb	0	; () banked
 15836  015728  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15837  01572A  0E00               	movlw	0
 15838  01572C  EC3D  F0B0         	call	_LCD_send_command
 15839                           
 15840                           ;src\LCD_44780.c: 121: break;
 15841  015730  0012               	return	
 15842  015732                     l8168:
 15843  015732  0E00               	movlw	0
 15844  015734  0100               	movlb	0	; () banked
 15845  015736  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15846  015738  0E00               	movlw	0
 15847  01573A  0100               	movlb	0	; () banked
 15848  01573C  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15849  01573E  0E01               	movlw	1
 15850  015740  0100               	movlb	0	; () banked
 15851  015742  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15852  015744  0E01               	movlw	1
 15853  015746  EC3D  F0B0         	call	_LCD_send_command
 15854                           
 15855                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
 15856  01574A  0E01               	movlw	1
 15857  01574C  0100               	movlb	0	; () banked
 15858  01574E  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15859  015750  0E00               	movlw	0
 15860  015752  0100               	movlb	0	; () banked
 15861  015754  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15862  015756  0E00               	movlw	0
 15863  015758  0100               	movlb	0	; () banked
 15864  01575A  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15865  01575C  0E00               	movlw	0
 15866  01575E  EC3D  F0B0         	call	_LCD_send_command
 15867                           
 15868                           ;src\LCD_44780.c: 125: break;
 15869  015762  0012               	return	
 15870  015764                     l8170:
 15871  015764  0E01               	movlw	1
 15872  015766  0100               	movlb	0	; () banked
 15873  015768  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15874  01576A  0E00               	movlw	0
 15875  01576C  0100               	movlb	0	; () banked
 15876  01576E  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15877  015770  0E01               	movlw	1
 15878  015772  0100               	movlb	0	; () banked
 15879  015774  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15880  015776  0E01               	movlw	1
 15881  015778  EC3D  F0B0         	call	_LCD_send_command
 15882                           
 15883                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
 15884  01577C  0E01               	movlw	1
 15885  01577E  0100               	movlb	0	; () banked
 15886  015780  6F79               	movwf	LCD_send_command@D2& (0+255),b
 15887  015782  0E00               	movlw	0
 15888  015784  0100               	movlb	0	; () banked
 15889  015786  6F7A               	movwf	LCD_send_command@D1& (0+255),b
 15890  015788  0E00               	movlw	0
 15891  01578A  0100               	movlb	0	; () banked
 15892  01578C  6F7B               	movwf	LCD_send_command@D0& (0+255),b
 15893  01578E  0E00               	movlw	0
 15894  015790  EC3D  F0B0         	call	_LCD_send_command
 15895                           
 15896                           ;src\LCD_44780.c: 129: }
 15897  015794  0012               	return	
 15898  015796                     l8172:
 15899  015796  0100               	movlb	0	; () banked
 15900  015798  517D               	movf	LCD_goto_line@line& (0+255),w,b
 15901                           
 15902                           ; Switch size 1, requested type "space"
 15903                           ; Number of cases is 4, Range of values is 1 to 4
 15904                           ; switch strategies available:
 15905                           ; Name         Instructions Cycles
 15906                           ; simple_byte           13     7 (average)
 15907                           ;	Chosen strategy is simple_byte
 15908  01579A  0A01               	xorlw	1	; case 1
 15909  01579C  B4D8               	btfsc	status,2,c
 15910  01579E  D797               	goto	l8164
 15911  0157A0  0A03               	xorlw	3	; case 2
 15912  0157A2  B4D8               	btfsc	status,2,c
 15913  0157A4  D7AD               	goto	l8166
 15914  0157A6  0A01               	xorlw	1	; case 3
 15915  0157A8  B4D8               	btfsc	status,2,c
 15916  0157AA  D7C3               	goto	l8168
 15917  0157AC  0A07               	xorlw	7	; case 4
 15918  0157AE  A4D8               	btfss	status,2,c
 15919  0157B0  0012               	return	
 15920  0157B2  D7D8               	goto	l8170
 15921  0157B4                     __end_of_LCD_goto_line:
 15922                           	opt stack 0
 15923                           tblptru	equ	0xFF8
 15924                           tblptrh	equ	0xFF7
 15925                           tblptrl	equ	0xFF6
 15926                           tablat	equ	0xFF5
 15927                           prodh	equ	0xFF4
 15928                           prodl	equ	0xFF3
 15929                           intcon	equ	0xFF2
 15930                           postinc0	equ	0xFEE
 15931                           wreg	equ	0xFE8
 15932                           indf1	equ	0xFE7
 15933                           plusw1	equ	0xFE3
 15934                           fsr1h	equ	0xFE2
 15935                           fsr1l	equ	0xFE1
 15936                           indf2	equ	0xFDF
 15937                           postinc2	equ	0xFDE
 15938                           plusw2	equ	0xFDB
 15939                           fsr2h	equ	0xFDA
 15940                           fsr2l	equ	0xFD9
 15941                           status	equ	0xFD8
 15942                           
 15943 ;; *************** function _LCD_send_command *****************
 15944 ;; Defined at:
 15945 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 15946 ;; Parameters:    Size  Location     Type
 15947 ;;  D3              1    wreg     unsigned char 
 15948 ;;  D2              1   25[BANK0 ] unsigned char 
 15949 ;;  D1              1   26[BANK0 ] unsigned char 
 15950 ;;  D0              1   27[BANK0 ] unsigned char 
 15951 ;; Auto vars:     Size  Location     Type
 15952 ;;  D3              1   28[BANK0 ] unsigned char 
 15953 ;; Return value:  Size  Location     Type
 15954 ;;		None               void
 15955 ;; Registers used:
 15956 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15957 ;; Tracked objects:
 15958 ;;		On entry : 0/0
 15959 ;;		On exit  : 0/0
 15960 ;;		Unchanged: 0/0
 15961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15962 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15963 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15965 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15966 ;;Total ram usage:        4 bytes
 15967 ;; Hardware stack levels used:    1
 15968 ;; Hardware stack levels required when called:    6
 15969 ;; This function calls:
 15970 ;;		_LCD_enable_pulse
 15971 ;; This function is called by:
 15972 ;;		_LCD_shift_cursor
 15973 ;;		_LCD_goto_line
 15974 ;;		_LCD_write_char
 15975 ;;		_LCD_clear
 15976 ;;		_LCD_cursor
 15977 ;;		_LCD_initialize
 15978 ;;		_LCD_home
 15979 ;;		_LCD_shift
 15980 ;; This function uses a non-reentrant model
 15981 ;;
 15982                           
 15983                           	psect	text42
 15984  01607A                     __ptext42:
 15985                           	opt stack 0
 15986  01607A                     _LCD_send_command:
 15987                           	opt stack 22
 15988                           
 15989                           ;incstack = 0
 15990                           ;LCD_send_command@D3 stored from wreg
 15991  01607A  0100               	movlb	0	; () banked
 15992  01607C  6F7C               	movwf	LCD_send_command@D3& (0+255),b
 15993                           
 15994                           ;src\LCD_44780.c: 63: LATCbits.LATC2 = D0;
 15995  01607E  0100               	movlb	0	; () banked
 15996  016080  B17B               	btfsc	LCD_send_command@D0& (0+255),0,b
 15997  016082  D002               	bra	u10155
 15998  016084  948B               	bcf	3979,2,c	;volatile
 15999  016086  D001               	bra	u10156
 16000  016088                     u10155:
 16001  016088  848B               	bsf	3979,2,c	;volatile
 16002  01608A                     u10156:
 16003                           
 16004                           ;src\LCD_44780.c: 64: LATCbits.LATC3 = D1;
 16005  01608A  0100               	movlb	0	; () banked
 16006  01608C  B17A               	btfsc	LCD_send_command@D1& (0+255),0,b
 16007  01608E  D002               	bra	u10165
 16008  016090  968B               	bcf	3979,3,c	;volatile
 16009  016092  D001               	bra	u10166
 16010  016094                     u10165:
 16011  016094  868B               	bsf	3979,3,c	;volatile
 16012  016096                     u10166:
 16013                           
 16014                           ;src\LCD_44780.c: 65: LATDbits.LATD0 = D2;
 16015  016096  0100               	movlb	0	; () banked
 16016  016098  B179               	btfsc	LCD_send_command@D2& (0+255),0,b
 16017  01609A  D002               	bra	u10175
 16018  01609C  908C               	bcf	3980,0,c	;volatile
 16019  01609E  D001               	bra	u10176
 16020  0160A0                     u10175:
 16021  0160A0  808C               	bsf	3980,0,c	;volatile
 16022  0160A2                     u10176:
 16023                           
 16024                           ;src\LCD_44780.c: 66: LATDbits.LATD1 = D3;
 16025  0160A2  0100               	movlb	0	; () banked
 16026  0160A4  B17C               	btfsc	LCD_send_command@D3& (0+255),0,b
 16027  0160A6  D002               	bra	u10185
 16028  0160A8  928C               	bcf	3980,1,c	;volatile
 16029  0160AA  D001               	bra	u10186
 16030  0160AC                     u10185:
 16031  0160AC  828C               	bsf	3980,1,c	;volatile
 16032  0160AE                     u10186:
 16033                           
 16034                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 16035  0160AE  EC34  F0B1         	call	_LCD_enable_pulse	;wreg free
 16036  0160B2  0012               	return		;funcret
 16037  0160B4                     __end_of_LCD_send_command:
 16038                           	opt stack 0
 16039                           tblptru	equ	0xFF8
 16040                           tblptrh	equ	0xFF7
 16041                           tblptrl	equ	0xFF6
 16042                           tablat	equ	0xFF5
 16043                           prodh	equ	0xFF4
 16044                           prodl	equ	0xFF3
 16045                           intcon	equ	0xFF2
 16046                           postinc0	equ	0xFEE
 16047                           wreg	equ	0xFE8
 16048                           indf1	equ	0xFE7
 16049                           plusw1	equ	0xFE3
 16050                           fsr1h	equ	0xFE2
 16051                           fsr1l	equ	0xFE1
 16052                           indf2	equ	0xFDF
 16053                           postinc2	equ	0xFDE
 16054                           plusw2	equ	0xFDB
 16055                           fsr2h	equ	0xFDA
 16056                           fsr2l	equ	0xFD9
 16057                           status	equ	0xFD8
 16058                           
 16059 ;; *************** function _LCD_enable_pulse *****************
 16060 ;; Defined at:
 16061 ;;		line 49 in file "../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 16062 ;; Parameters:    Size  Location     Type
 16063 ;;		None
 16064 ;; Auto vars:     Size  Location     Type
 16065 ;;		None
 16066 ;; Return value:  Size  Location     Type
 16067 ;;		None               void
 16068 ;; Registers used:
 16069 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16070 ;; Tracked objects:
 16071 ;;		On entry : 0/0
 16072 ;;		On exit  : 0/0
 16073 ;;		Unchanged: 0/0
 16074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16079 ;;Total ram usage:        0 bytes
 16080 ;; Hardware stack levels used:    1
 16081 ;; Hardware stack levels required when called:    5
 16082 ;; This function calls:
 16083 ;;		_delay_ms
 16084 ;; This function is called by:
 16085 ;;		_LCD_send_command
 16086 ;; This function uses a non-reentrant model
 16087 ;;
 16088                           
 16089                           	psect	text43
 16090  016268                     __ptext43:
 16091                           	opt stack 0
 16092  016268                     _LCD_enable_pulse:
 16093                           	opt stack 22
 16094                           
 16095                           ;src\LCD_44780.c: 51: LATCbits.LATC1 = 1;
 16096                           
 16097                           ;incstack = 0
 16098  016268  828B               	bsf	3979,1,c	;volatile
 16099                           
 16100                           ;src\LCD_44780.c: 52: delay_ms (1);
 16101  01626A  0E00               	movlw	0
 16102  01626C  0100               	movlb	0	; () banked
 16103  01626E  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16104  016270  0E01               	movlw	1
 16105  016272  6F77               	movwf	delay_ms@value_ms& (0+255),b
 16106  016274  EC5A  F0B0         	call	_delay_ms	;wreg free
 16107                           
 16108                           ;src\LCD_44780.c: 53: LATCbits.LATC1 = 0;
 16109  016278  928B               	bcf	3979,1,c	;volatile
 16110                           
 16111                           ;src\LCD_44780.c: 54: delay_ms (1);
 16112  01627A  0E00               	movlw	0
 16113  01627C  0100               	movlb	0	; () banked
 16114  01627E  6F78               	movwf	(delay_ms@value_ms+1)& (0+255),b
 16115  016280  0E01               	movlw	1
 16116  016282  6F77               	movwf	delay_ms@value_ms& (0+255),b
 16117  016284  EC5A  F0B0         	call	_delay_ms	;wreg free
 16118  016288  0012               	return		;funcret
 16119  01628A                     __end_of_LCD_enable_pulse:
 16120                           	opt stack 0
 16121                           tblptru	equ	0xFF8
 16122                           tblptrh	equ	0xFF7
 16123                           tblptrl	equ	0xFF6
 16124                           tablat	equ	0xFF5
 16125                           prodh	equ	0xFF4
 16126                           prodl	equ	0xFF3
 16127                           intcon	equ	0xFF2
 16128                           postinc0	equ	0xFEE
 16129                           wreg	equ	0xFE8
 16130                           indf1	equ	0xFE7
 16131                           plusw1	equ	0xFE3
 16132                           fsr1h	equ	0xFE2
 16133                           fsr1l	equ	0xFE1
 16134                           indf2	equ	0xFDF
 16135                           postinc2	equ	0xFDE
 16136                           plusw2	equ	0xFDB
 16137                           fsr2h	equ	0xFDA
 16138                           fsr2l	equ	0xFD9
 16139                           status	equ	0xFD8
 16140                           
 16141 ;; *************** function _delay_ms *****************
 16142 ;; Defined at:
 16143 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 16144 ;; Parameters:    Size  Location     Type
 16145 ;;  value_ms        2   23[BANK0 ] unsigned int 
 16146 ;; Auto vars:     Size  Location     Type
 16147 ;;		None
 16148 ;; Return value:  Size  Location     Type
 16149 ;;		None               void
 16150 ;; Registers used:
 16151 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16152 ;; Tracked objects:
 16153 ;;		On entry : 0/0
 16154 ;;		On exit  : 0/0
 16155 ;;		Unchanged: 0/0
 16156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16157 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16160 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16161 ;;Total ram usage:        2 bytes
 16162 ;; Hardware stack levels used:    1
 16163 ;; Hardware stack levels required when called:    4
 16164 ;; This function calls:
 16165 ;;		___wmul
 16166 ;; This function is called by:
 16167 ;;		_LCD_enable_pulse
 16168 ;;		_LCD_initialize
 16169 ;;		_main
 16170 ;;		_delay_s
 16171 ;; This function uses a non-reentrant model
 16172 ;;
 16173                           
 16174                           	psect	text44
 16175  0160B4                     __ptext44:
 16176                           	opt stack 0
 16177  0160B4                     _delay_ms:
 16178                           	opt stack 26
 16179                           
 16180                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 16181                           
 16182                           ;incstack = 0
 16183  0160B4  C0ED  F071         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 16184  0160B8  0100               	movlb	0	; () banked
 16185  0160BA  6B72               	clrf	(___wmul@multiplier+1)& (0+255),b
 16186  0160BC  C077  F073         	movff	delay_ms@value_ms,___wmul@multiplicand
 16187  0160C0  C078  F074         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 16188  0160C4  EC93  F0B0         	call	___wmul	;wreg free
 16189  0160C8  C071  F0E1         	movff	?___wmul,_clock_counter_reference	;volatile
 16190  0160CC  C072  F0E2         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 16191                           
 16192                           ;src\delay.c: 75: while (clock_counter_reference) {
 16193  0160D0  D007               	goto	l583
 16194  0160D2                     l7708:
 16195                           
 16196                           ;src\delay.c: 85: _delay(240);
 16197  0160D2  0E50               	movlw	80
 16198  0160D4                     u13157:
 16199  0160D4  2EE8               	decfsz	wreg,f,c
 16200  0160D6  D7FE               	goto	u13157
 16201                           
 16202                           ;src\delay.c: 88: clock_counter_reference--;
 16203  0160D8  0100               	movlb	0	; () banked
 16204  0160DA  07E1               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 16205  0160DC  A0D8               	btfss	status,0,c
 16206  0160DE  07E2               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 16207  0160E0                     l583:
 16208  0160E0  0100               	movlb	0	; () banked
 16209  0160E2  51E1               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 16210  0160E4  0100               	movlb	0	; () banked
 16211  0160E6  11E2               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 16212  0160E8  B4D8               	btfsc	status,2,c
 16213  0160EA  0012               	return	
 16214  0160EC  D7F2               	goto	l7708
 16215  0160EE                     __end_of_delay_ms:
 16216                           	opt stack 0
 16217                           tblptru	equ	0xFF8
 16218                           tblptrh	equ	0xFF7
 16219                           tblptrl	equ	0xFF6
 16220                           tablat	equ	0xFF5
 16221                           prodh	equ	0xFF4
 16222                           prodl	equ	0xFF3
 16223                           intcon	equ	0xFF2
 16224                           postinc0	equ	0xFEE
 16225                           wreg	equ	0xFE8
 16226                           indf1	equ	0xFE7
 16227                           plusw1	equ	0xFE3
 16228                           fsr1h	equ	0xFE2
 16229                           fsr1l	equ	0xFE1
 16230                           indf2	equ	0xFDF
 16231                           postinc2	equ	0xFDE
 16232                           plusw2	equ	0xFDB
 16233                           fsr2h	equ	0xFDA
 16234                           fsr2l	equ	0xFD9
 16235                           status	equ	0xFD8
 16236                           
 16237 ;; *************** function ___wmul *****************
 16238 ;; Defined at:
 16239 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 16240 ;; Parameters:    Size  Location     Type
 16241 ;;  multiplier      2   17[BANK0 ] unsigned int 
 16242 ;;  multiplicand    2   19[BANK0 ] unsigned int 
 16243 ;; Auto vars:     Size  Location     Type
 16244 ;;  product         2   21[BANK0 ] unsigned int 
 16245 ;; Return value:  Size  Location     Type
 16246 ;;                  2   17[BANK0 ] unsigned int 
 16247 ;; Registers used:
 16248 ;;		wreg, status,2, status,0, prodl, prodh
 16249 ;; Tracked objects:
 16250 ;;		On entry : 0/0
 16251 ;;		On exit  : 0/0
 16252 ;;		Unchanged: 0/0
 16253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16254 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16255 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16257 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16258 ;;Total ram usage:        6 bytes
 16259 ;; Hardware stack levels used:    1
 16260 ;; Hardware stack levels required when called:    3
 16261 ;; This function calls:
 16262 ;;		Nothing
 16263 ;; This function is called by:
 16264 ;;		_delay_ms
 16265 ;;		_sprintf
 16266 ;; This function uses a non-reentrant model
 16267 ;;
 16268                           
 16269                           	psect	text45
 16270  016126                     __ptext45:
 16271                           	opt stack 0
 16272  016126                     ___wmul:
 16273                           	opt stack 26
 16274                           
 16275                           ; BSR set to: 0
 16276                           ;incstack = 0
 16277  016126  0100               	movlb	0	; () banked
 16278  016128  5171               	movf	___wmul@multiplier& (0+255),w,b
 16279  01612A  0100               	movlb	0	; () banked
 16280  01612C  0373               	mulwf	___wmul@multiplicand& (0+255),b
 16281  01612E  CFF3 F075          	movff	prodl,___wmul@product
 16282  016132  CFF4 F076          	movff	prodh,___wmul@product+1
 16283  016136  0100               	movlb	0	; () banked
 16284  016138  5171               	movf	___wmul@multiplier& (0+255),w,b
 16285  01613A  0100               	movlb	0	; () banked
 16286  01613C  0374               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 16287  01613E  50F3               	movf	prodl,w,c
 16288  016140  0100               	movlb	0	; () banked
 16289  016142  2776               	addwf	(___wmul@product+1)& (0+255),f,b
 16290  016144  0100               	movlb	0	; () banked
 16291  016146  5172               	movf	(___wmul@multiplier+1)& (0+255),w,b
 16292  016148  0100               	movlb	0	; () banked
 16293  01614A  0373               	mulwf	___wmul@multiplicand& (0+255),b
 16294  01614C  50F3               	movf	prodl,w,c
 16295  01614E  0100               	movlb	0	; () banked
 16296  016150  2776               	addwf	(___wmul@product+1)& (0+255),f,b
 16297                           
 16298                           ; BSR set to: 0
 16299  016152  C075  F071         	movff	___wmul@product,?___wmul
 16300  016156  C076  F072         	movff	___wmul@product+1,?___wmul+1
 16301  01615A  0012               	return	
 16302  01615C                     __end_of___wmul:
 16303                           	opt stack 0
 16304                           tblptru	equ	0xFF8
 16305                           tblptrh	equ	0xFF7
 16306                           tblptrl	equ	0xFF6
 16307                           tablat	equ	0xFF5
 16308                           prodh	equ	0xFF4
 16309                           prodl	equ	0xFF3
 16310                           intcon	equ	0xFF2
 16311                           postinc0	equ	0xFEE
 16312                           wreg	equ	0xFE8
 16313                           indf1	equ	0xFE7
 16314                           plusw1	equ	0xFE3
 16315                           fsr1h	equ	0xFE2
 16316                           fsr1l	equ	0xFE1
 16317                           indf2	equ	0xFDF
 16318                           postinc2	equ	0xFDE
 16319                           plusw2	equ	0xFDB
 16320                           fsr2h	equ	0xFDA
 16321                           fsr2l	equ	0xFD9
 16322                           status	equ	0xFD8
 16323                           
 16324 ;; *************** function _Joystick_Polling *****************
 16325 ;; Defined at:
 16326 ;;		line 470 in file "RemoteCan.c"
 16327 ;; Parameters:    Size  Location     Type
 16328 ;;		None
 16329 ;; Auto vars:     Size  Location     Type
 16330 ;;  i               1   18[BANK0 ] unsigned char 
 16331 ;; Return value:  Size  Location     Type
 16332 ;;		None               void
 16333 ;; Registers used:
 16334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16335 ;; Tracked objects:
 16336 ;;		On entry : 0/0
 16337 ;;		On exit  : 0/0
 16338 ;;		Unchanged: 0/0
 16339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16341 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16342 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16343 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16344 ;;Total ram usage:        2 bytes
 16345 ;; Hardware stack levels used:    1
 16346 ;; Hardware stack levels required when called:    3
 16347 ;; This function calls:
 16348 ;;		Nothing
 16349 ;; This function is called by:
 16350 ;;		_main
 16351 ;; This function uses a non-reentrant model
 16352 ;;
 16353                           
 16354                           	psect	text46
 16355  015F06                     __ptext46:
 16356                           	opt stack 0
 16357  015F06                     _Joystick_Polling:
 16358                           	opt stack 27
 16359                           
 16360                           ;RemoteCan.c: 471: for (unsigned char i = 0; i < 2; i++) {
 16361                           
 16362                           ; BSR set to: 0
 16363                           ;incstack = 0
 16364  015F06  0E00               	movlw	0
 16365  015F08  0100               	movlb	0	; () banked
 16366  015F0A  6F72               	movwf	Joystick_Polling@i& (0+255),b
 16367  015F0C                     l7022:
 16368                           
 16369                           ; BSR set to: 0
 16370  015F0C  0E01               	movlw	1
 16371  015F0E  0100               	movlb	0	; () banked
 16372  015F10  6572               	cpfsgt	Joystick_Polling@i& (0+255),b
 16373  015F12  D001               	goto	l889
 16374  015F14  0012               	return	
 16375  015F16                     l889:
 16376                           
 16377                           ; BSR set to: 0
 16378                           ;RemoteCan.c: 472: ADCON0bits.GO = 1;
 16379  015F16  82C2               	bsf	4034,1,c	;volatile
 16380  015F18                     l891:
 16381  015F18  B2C2               	btfsc	4034,1,c	;volatile
 16382  015F1A  D7FE               	goto	l891
 16383                           
 16384                           ;RemoteCan.c: 474: JoystickValues[i] = ADRESH;
 16385  015F1C  0100               	movlb	0	; () banked
 16386  015F1E  5172               	movf	Joystick_Polling@i& (0+255),w,b
 16387  015F20  0D01               	mullw	1
 16388  015F22  0EDD               	movlw	low _JoystickValues
 16389  015F24  24F3               	addwf	prodl,w,c
 16390  015F26  6ED9               	movwf	fsr2l,c
 16391  015F28  0E00               	movlw	high _JoystickValues
 16392  015F2A  20F4               	addwfc	prodh,w,c
 16393  015F2C  6EDA               	movwf	fsr2h,c
 16394  015F2E  CFC4 FFDF          	movff	4036,indf2	;volatile
 16395                           
 16396                           ; BSR set to: 0
 16397                           ;RemoteCan.c: 475: ADCON0bits.CHS0 = ~ADCON0bits.CHS0;
 16398  015F32  A4C2               	btfss	4034,2,c	;volatile
 16399  015F34  D002               	goto	u9010
 16400  015F36  0E01               	movlw	1
 16401  015F38  D001               	goto	u9016
 16402  015F3A                     u9010:
 16403  015F3A  0E00               	movlw	0
 16404  015F3C                     u9016:
 16405  015F3C  0AFF               	xorlw	255
 16406  015F3E  0100               	movlb	0	; () banked
 16407  015F40  6F71               	movwf	??_Joystick_Polling& (0+255),b
 16408  015F42  0100               	movlb	0	; () banked
 16409  015F44  4771               	rlncf	??_Joystick_Polling& (0+255),f,b
 16410  015F46  4771               	rlncf	??_Joystick_Polling& (0+255),f,b
 16411  015F48  50C2               	movf	4034,w,c	;volatile
 16412  015F4A  0100               	movlb	0	; () banked
 16413  015F4C  1971               	xorwf	??_Joystick_Polling& (0+255),w,b
 16414  015F4E  0BFB               	andlw	-5
 16415  015F50  1971               	xorwf	??_Joystick_Polling& (0+255),w,b
 16416  015F52  6EC2               	movwf	4034,c	;volatile
 16417                           
 16418                           ; BSR set to: 0
 16419  015F54  0100               	movlb	0	; () banked
 16420  015F56  2B72               	incf	Joystick_Polling@i& (0+255),f,b
 16421  015F58  D7D9               	goto	l7022
 16422  015F5A                     __end_of_Joystick_Polling:
 16423                           	opt stack 0
 16424                           tblptru	equ	0xFF8
 16425                           tblptrh	equ	0xFF7
 16426                           tblptrl	equ	0xFF6
 16427                           tablat	equ	0xFF5
 16428                           prodh	equ	0xFF4
 16429                           prodl	equ	0xFF3
 16430                           intcon	equ	0xFF2
 16431                           postinc0	equ	0xFEE
 16432                           wreg	equ	0xFE8
 16433                           indf1	equ	0xFE7
 16434                           plusw1	equ	0xFE3
 16435                           fsr1h	equ	0xFE2
 16436                           fsr1l	equ	0xFE1
 16437                           indf2	equ	0xFDF
 16438                           postinc2	equ	0xFDE
 16439                           plusw2	equ	0xFDB
 16440                           fsr2h	equ	0xFDA
 16441                           fsr2l	equ	0xFD9
 16442                           status	equ	0xFD8
 16443                           
 16444 ;; *************** function _F2_Button_Polling *****************
 16445 ;; Defined at:
 16446 ;;		line 460 in file "RemoteCan.c"
 16447 ;; Parameters:    Size  Location     Type
 16448 ;;		None
 16449 ;; Auto vars:     Size  Location     Type
 16450 ;;		None
 16451 ;; Return value:  Size  Location     Type
 16452 ;;		None               void
 16453 ;; Registers used:
 16454 ;;		None
 16455 ;; Tracked objects:
 16456 ;;		On entry : 0/0
 16457 ;;		On exit  : 0/0
 16458 ;;		Unchanged: 0/0
 16459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16464 ;;Total ram usage:        0 bytes
 16465 ;; Hardware stack levels used:    1
 16466 ;; Hardware stack levels required when called:    3
 16467 ;; This function calls:
 16468 ;;		Nothing
 16469 ;; This function is called by:
 16470 ;;		_main
 16471 ;; This function uses a non-reentrant model
 16472 ;;
 16473                           
 16474                           	psect	text47
 16475  0162E0                     __ptext47:
 16476                           	opt stack 0
 16477  0162E0                     _F2_Button_Polling:
 16478                           	opt stack 27
 16479                           
 16480                           ;RemoteCan.c: 461: if ((PORTBbits.RB1 == 0) || (wait_low_3 == 0)) {
 16481                           
 16482                           ; BSR set to: 0
 16483                           ;incstack = 0
 16484  0162E0  A281               	btfss	3969,1,c	;volatile
 16485  0162E2  D002               	goto	l884
 16486  0162E4  BC4D               	btfsc	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16487  0162E6  0012               	return	
 16488  0162E8                     l884:
 16489                           
 16490                           ;RemoteCan.c: 462: wait_low_3 = 0;
 16491  0162E8  9C4D               	bcf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16492                           
 16493                           ;RemoteCan.c: 463: if (PORTBbits.RB1 == 1) {
 16494  0162EA  A281               	btfss	3969,1,c	;volatile
 16495  0162EC  0012               	return	
 16496                           
 16497                           ;RemoteCan.c: 464: F2_switch = ~F2_switch;
 16498  0162EE  B44C               	btfsc	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16499  0162F0  D002               	goto	u8940
 16500  0162F2  844C               	bsf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16501  0162F4  D001               	goto	u8955
 16502  0162F6                     u8940:
 16503  0162F6  944C               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 16504  0162F8                     u8955:
 16505                           
 16506                           ;RemoteCan.c: 465: wait_low_3 = 1;
 16507  0162F8  8C4D               	bsf	_wait_low_3/(0+8),_wait_low_3& (0+7),c	;volatile
 16508  0162FA  0012               	return	
 16509  0162FC                     __end_of_F2_Button_Polling:
 16510                           	opt stack 0
 16511                           tblptru	equ	0xFF8
 16512                           tblptrh	equ	0xFF7
 16513                           tblptrl	equ	0xFF6
 16514                           tablat	equ	0xFF5
 16515                           prodh	equ	0xFF4
 16516                           prodl	equ	0xFF3
 16517                           intcon	equ	0xFF2
 16518                           postinc0	equ	0xFEE
 16519                           wreg	equ	0xFE8
 16520                           indf1	equ	0xFE7
 16521                           plusw1	equ	0xFE3
 16522                           fsr1h	equ	0xFE2
 16523                           fsr1l	equ	0xFE1
 16524                           indf2	equ	0xFDF
 16525                           postinc2	equ	0xFDE
 16526                           plusw2	equ	0xFDB
 16527                           fsr2h	equ	0xFDA
 16528                           fsr2l	equ	0xFD9
 16529                           status	equ	0xFD8
 16530                           
 16531 ;; *************** function _F1_Button_Polling *****************
 16532 ;; Defined at:
 16533 ;;		line 450 in file "RemoteCan.c"
 16534 ;; Parameters:    Size  Location     Type
 16535 ;;		None
 16536 ;; Auto vars:     Size  Location     Type
 16537 ;;		None
 16538 ;; Return value:  Size  Location     Type
 16539 ;;		None               void
 16540 ;; Registers used:
 16541 ;;		None
 16542 ;; Tracked objects:
 16543 ;;		On entry : 0/0
 16544 ;;		On exit  : 0/0
 16545 ;;		Unchanged: 0/0
 16546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16551 ;;Total ram usage:        0 bytes
 16552 ;; Hardware stack levels used:    1
 16553 ;; Hardware stack levels required when called:    3
 16554 ;; This function calls:
 16555 ;;		Nothing
 16556 ;; This function is called by:
 16557 ;;		_main
 16558 ;; This function uses a non-reentrant model
 16559 ;;
 16560                           
 16561                           	psect	text48
 16562  0162FC                     __ptext48:
 16563                           	opt stack 0
 16564  0162FC                     _F1_Button_Polling:
 16565                           	opt stack 27
 16566                           
 16567                           ;RemoteCan.c: 451: if ((PORTBbits.RB4 == 0) || (wait_low_2 == 0)) {
 16568                           
 16569                           ;incstack = 0
 16570  0162FC  A881               	btfss	3969,4,c	;volatile
 16571  0162FE  D002               	goto	l877
 16572  016300  BA4D               	btfsc	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16573  016302  0012               	return	
 16574  016304                     l877:
 16575                           
 16576                           ;RemoteCan.c: 452: wait_low_2 = 0;
 16577  016304  9A4D               	bcf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16578                           
 16579                           ;RemoteCan.c: 453: if (PORTBbits.RB4 == 1) {
 16580  016306  A881               	btfss	3969,4,c	;volatile
 16581  016308  0012               	return	
 16582                           
 16583                           ;RemoteCan.c: 454: F1_switch = ~F1_switch;
 16584  01630A  B24C               	btfsc	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16585  01630C  D002               	goto	u8890
 16586  01630E  824C               	bsf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16587  016310  D001               	goto	u8905
 16588  016312                     u8890:
 16589  016312  924C               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 16590  016314                     u8905:
 16591                           
 16592                           ;RemoteCan.c: 455: wait_low_2 = 1;
 16593  016314  8A4D               	bsf	_wait_low_2/(0+8),_wait_low_2& (0+7),c	;volatile
 16594  016316  0012               	return	
 16595  016318                     __end_of_F1_Button_Polling:
 16596                           	opt stack 0
 16597                           tblptru	equ	0xFF8
 16598                           tblptrh	equ	0xFF7
 16599                           tblptrl	equ	0xFF6
 16600                           tablat	equ	0xFF5
 16601                           prodh	equ	0xFF4
 16602                           prodl	equ	0xFF3
 16603                           intcon	equ	0xFF2
 16604                           postinc0	equ	0xFEE
 16605                           wreg	equ	0xFE8
 16606                           indf1	equ	0xFE7
 16607                           plusw1	equ	0xFE3
 16608                           fsr1h	equ	0xFE2
 16609                           fsr1l	equ	0xFE1
 16610                           indf2	equ	0xFDF
 16611                           postinc2	equ	0xFDE
 16612                           plusw2	equ	0xFDB
 16613                           fsr2h	equ	0xFDA
 16614                           fsr2l	equ	0xFD9
 16615                           status	equ	0xFD8
 16616                           
 16617 ;; *************** function _CAN_Tx *****************
 16618 ;; Defined at:
 16619 ;;		line 479 in file "RemoteCan.c"
 16620 ;; Parameters:    Size  Location     Type
 16621 ;;		None
 16622 ;; Auto vars:     Size  Location     Type
 16623 ;;		None
 16624 ;; Return value:  Size  Location     Type
 16625 ;;		None               void
 16626 ;; Registers used:
 16627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16628 ;; Tracked objects:
 16629 ;;		On entry : 0/0
 16630 ;;		On exit  : 0/0
 16631 ;;		Unchanged: 0/0
 16632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16637 ;;Total ram usage:        0 bytes
 16638 ;; Hardware stack levels used:    1
 16639 ;; Hardware stack levels required when called:    4
 16640 ;; This function calls:
 16641 ;;		_CANisTxReady
 16642 ;;		_CANsendMessage
 16643 ;; This function is called by:
 16644 ;;		_main
 16645 ;; This function uses a non-reentrant model
 16646 ;;
 16647                           
 16648                           	psect	text49
 16649  0159EC                     __ptext49:
 16650                           	opt stack 0
 16651  0159EC                     _CAN_Tx:
 16652                           	opt stack 26
 16653  0159EC                     l7002:
 16654  0159EC  EC22  F0B1         	call	_CANisTxReady	;wreg free
 16655  0159F0  06E8               	decf	wreg,f,c
 16656  0159F2  A4D8               	btfss	status,2,c
 16657  0159F4  D7FB               	goto	l7002
 16658                           
 16659                           ;RemoteCan.c: 482: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 16660  0159F6  0E05               	movlw	5
 16661  0159F8  0100               	movlb	0	; () banked
 16662  0159FA  6F71               	movwf	CANsendMessage@identifier& (0+255),b
 16663  0159FC  0E00               	movlw	0
 16664  0159FE  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16665  015A00  0E00               	movlw	0
 16666  015A02  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16667  015A04  0E00               	movlw	0
 16668  015A06  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16669  015A08  0EEC               	movlw	low _data_steering
 16670  015A0A  0100               	movlb	0	; () banked
 16671  015A0C  6F75               	movwf	CANsendMessage@data& (0+255),b
 16672  015A0E  0E00               	movlw	high _data_steering
 16673  015A10  0100               	movlb	0	; () banked
 16674  015A12  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
 16675  015A14  0E08               	movlw	8
 16676  015A16  0100               	movlb	0	; () banked
 16677  015A18  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
 16678  015A1A  0EBC               	movlw	188
 16679  015A1C  0100               	movlb	0	; () banked
 16680  015A1E  6F78               	movwf	CANsendMessage@flags& (0+255),b
 16681  015A20  ECCD  F089         	call	_CANsendMessage	;wreg free
 16682                           
 16683                           ;RemoteCan.c: 485: data_speed[0] = set_speed;
 16684  015A24  C0E3  F0EB         	movff	_set_speed,_data_speed	;volatile
 16685                           
 16686                           ;RemoteCan.c: 486: data_speed[1] = (set_speed >> 8);
 16687  015A28  0100               	movlb	0	; () banked
 16688  015A2A  51E4               	movf	(_set_speed+1)& (0+255),w,b	;volatile
 16689  015A2C  0100               	movlb	0	; () banked
 16690  015A2E  6FEC               	movwf	(_data_speed+1)& (0+255),b
 16691                           
 16692                           ; BSR set to: 0
 16693                           ;RemoteCan.c: 487: data_speed[2] = dir;
 16694  015A30  C0E5  F0ED         	movff	_dir,_data_speed+2	;volatile
 16695  015A34                     l7012:
 16696  015A34  EC22  F0B1         	call	_CANisTxReady	;wreg free
 16697  015A38  06E8               	decf	wreg,f,c
 16698  015A3A  A4D8               	btfss	status,2,c
 16699  015A3C  D7FB               	goto	l7012
 16700                           
 16701                           ;RemoteCan.c: 489: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 16702  015A3E  0E03               	movlw	3
 16703  015A40  0100               	movlb	0	; () banked
 16704  015A42  6F71               	movwf	CANsendMessage@identifier& (0+255),b
 16705  015A44  0E00               	movlw	0
 16706  015A46  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16707  015A48  0E00               	movlw	0
 16708  015A4A  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16709  015A4C  0E00               	movlw	0
 16710  015A4E  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16711  015A50  0EEB               	movlw	low _data_speed
 16712  015A52  0100               	movlb	0	; () banked
 16713  015A54  6F75               	movwf	CANsendMessage@data& (0+255),b
 16714  015A56  0E00               	movlw	high _data_speed
 16715  015A58  0100               	movlb	0	; () banked
 16716  015A5A  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
 16717  015A5C  0E08               	movlw	8
 16718  015A5E  0100               	movlb	0	; () banked
 16719  015A60  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
 16720  015A62  0EBC               	movlw	188
 16721  015A64  0100               	movlb	0	; () banked
 16722  015A66  6F78               	movwf	CANsendMessage@flags& (0+255),b
 16723  015A68  ECCD  F089         	call	_CANsendMessage	;wreg free
 16724  015A6C                     l7016:
 16725  015A6C  EC22  F0B1         	call	_CANisTxReady	;wreg free
 16726  015A70  06E8               	decf	wreg,f,c
 16727  015A72  A4D8               	btfss	status,2,c
 16728  015A74  D7FB               	goto	l7016
 16729                           
 16730                           ;RemoteCan.c: 493: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_1);
 16731  015A76  0E04               	movlw	4
 16732  015A78  0100               	movlb	0	; () banked
 16733  015A7A  6F71               	movwf	CANsendMessage@identifier& (0+255),b
 16734  015A7C  0E00               	movlw	0
 16735  015A7E  6F72               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 16736  015A80  0E00               	movlw	0
 16737  015A82  6F73               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 16738  015A84  0E00               	movlw	0
 16739  015A86  6F74               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 16740  015A88  0EEA               	movlw	low _data_brake
 16741  015A8A  0100               	movlb	0	; () banked
 16742  015A8C  6F75               	movwf	CANsendMessage@data& (0+255),b
 16743  015A8E  0E00               	movlw	high _data_brake
 16744  015A90  0100               	movlb	0	; () banked
 16745  015A92  6F76               	movwf	(CANsendMessage@data+1)& (0+255),b
 16746  015A94  0E08               	movlw	8
 16747  015A96  0100               	movlb	0	; () banked
 16748  015A98  6F77               	movwf	CANsendMessage@dataLength& (0+255),b
 16749  015A9A  0EBD               	movlw	189
 16750  015A9C  0100               	movlb	0	; () banked
 16751  015A9E  6F78               	movwf	CANsendMessage@flags& (0+255),b
 16752  015AA0  ECCD  F089         	call	_CANsendMessage	;wreg free
 16753  015AA4  0012               	return		;funcret
 16754  015AA6                     __end_of_CAN_Tx:
 16755                           	opt stack 0
 16756                           tblptru	equ	0xFF8
 16757                           tblptrh	equ	0xFF7
 16758                           tblptrl	equ	0xFF6
 16759                           tablat	equ	0xFF5
 16760                           prodh	equ	0xFF4
 16761                           prodl	equ	0xFF3
 16762                           intcon	equ	0xFF2
 16763                           postinc0	equ	0xFEE
 16764                           wreg	equ	0xFE8
 16765                           indf1	equ	0xFE7
 16766                           plusw1	equ	0xFE3
 16767                           fsr1h	equ	0xFE2
 16768                           fsr1l	equ	0xFE1
 16769                           indf2	equ	0xFDF
 16770                           postinc2	equ	0xFDE
 16771                           plusw2	equ	0xFDB
 16772                           fsr2h	equ	0xFDA
 16773                           fsr2l	equ	0xFD9
 16774                           status	equ	0xFD8
 16775                           
 16776 ;; *************** function _CANsendMessage *****************
 16777 ;; Defined at:
 16778 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 16779 ;; Parameters:    Size  Location     Type
 16780 ;;  identifier      4   17[BANK0 ] unsigned long 
 16781 ;;  data            2   21[BANK0 ] PTR unsigned char 
 16782 ;;		 -> data_speed(1), park_assist_state(8), data_brake(1), data_steering(1), 
 16783 ;;		 -> data(1), 
 16784 ;;  dataLength      1   23[BANK0 ] unsigned char 
 16785 ;;  flags           1   24[BANK0 ] enum E16909
 16786 ;; Auto vars:     Size  Location     Type
 16787 ;;  tamp            4   29[BANK0 ] unsigned long 
 16788 ;; Return value:  Size  Location     Type
 16789 ;;		None               void
 16790 ;; Registers used:
 16791 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16792 ;; Tracked objects:
 16793 ;;		On entry : 0/0
 16794 ;;		On exit  : 0/0
 16795 ;;		Unchanged: 0/0
 16796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16797 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16798 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16799 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16800 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16801 ;;Total ram usage:       16 bytes
 16802 ;; Hardware stack levels used:    1
 16803 ;; Hardware stack levels required when called:    3
 16804 ;; This function calls:
 16805 ;;		Nothing
 16806 ;; This function is called by:
 16807 ;;		_main
 16808 ;;		_LCD_Handler
 16809 ;;		_CAN_Tx
 16810 ;; This function uses a non-reentrant model
 16811 ;;
 16812                           
 16813                           	psect	text50
 16814  01139A                     __ptext50:
 16815                           	opt stack 0
 16816  01139A                     _CANsendMessage:
 16817                           	opt stack 26
 16818                           
 16819                           ;inc\CANlib.h: 296: unsigned long tamp;
 16820                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 16821                           
 16822                           ;incstack = 0
 16823  01139A  010F               	movlb	15	; () banked
 16824  01139C  B740               	btfsc	64,3,b	;volatile
 16825  01139E  D13F               	goto	l377
 16826                           
 16827                           ; BSR set to: 15
 16828                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 16829  0113A0  C077  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 16830                           
 16831                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 16832  0113A4  0100               	movlb	0	; () banked
 16833  0113A6  AD78               	btfss	CANsendMessage@flags& (0+255),6,b
 16834  0113A8  D003               	goto	l378
 16835                           
 16836                           ; BSR set to: 0
 16837                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 16838  0113AA  010F               	movlb	15	; () banked
 16839  0113AC  8D45               	bsf	69,6,b	;volatile
 16840  0113AE  D002               	goto	l379
 16841  0113B0                     l378:
 16842                           
 16843                           ; BSR set to: 0
 16844                           ;inc\CANlib.h: 302: else
 16845                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 16846  0113B0  010F               	movlb	15	; () banked
 16847  0113B2  9D45               	bcf	69,6,b	;volatile
 16848  0113B4                     l379:
 16849                           
 16850                           ; BSR set to: 15
 16851                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 16852  0113B4  0100               	movlb	0	; () banked
 16853  0113B6  A778               	btfss	CANsendMessage@flags& (0+255),3,b
 16854  0113B8  D079               	goto	l380
 16855                           
 16856                           ; BSR set to: 0
 16857                           ;inc\CANlib.h: 306: {
 16858                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 16859  0113BA  0100               	movlb	0	; () banked
 16860  0113BC  5171               	movf	CANsendMessage@identifier& (0+255),w,b
 16861  0113BE  0100               	movlb	0	; () banked
 16862  0113C0  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 16863  0113C2  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 16864  0113C4  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 16865  0113C6  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 16866                           
 16867                           ; BSR set to: 0
 16868                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 16869  0113C8  C07D  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 16870                           
 16871                           ; BSR set to: 0
 16872                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 16873  0113CC  0E00               	movlw	0
 16874  0113CE  0100               	movlb	0	; () banked
 16875  0113D0  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 16876  0113D2  0100               	movlb	0	; () banked
 16877  0113D4  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 16878  0113D6  0EFF               	movlw	255
 16879  0113D8  0100               	movlb	0	; () banked
 16880  0113DA  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 16881  0113DC  0100               	movlb	0	; () banked
 16882  0113DE  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 16883  0113E0  0E00               	movlw	0
 16884  0113E2  0100               	movlb	0	; () banked
 16885  0113E4  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 16886  0113E6  0100               	movlb	0	; () banked
 16887  0113E8  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 16888  0113EA  0E00               	movlw	0
 16889  0113EC  0100               	movlb	0	; () banked
 16890  0113EE  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 16891  0113F0  0100               	movlb	0	; () banked
 16892  0113F2  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 16893                           
 16894                           ; BSR set to: 0
 16895                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 16896  0113F4  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 16897  0113F8  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 16898  0113FC  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 16899  011400  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 16900  011404  C07A  F079         	movff	??_CANsendMessage+1,??_CANsendMessage
 16901  011408  C07B  F07A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 16902  01140C  C07C  F07B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 16903  011410  0100               	movlb	0	; () banked
 16904  011412  6B7C               	clrf	(??_CANsendMessage+3)& (0+255),b
 16905  011414  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 16906  011418  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 16907  01141C  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 16908  011420  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 16909                           
 16910                           ; BSR set to: 0
 16911                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 16912  011424  C07D  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 16913                           
 16914                           ; BSR set to: 0
 16915                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 16916  011428  0E00               	movlw	0
 16917  01142A  010F               	movlb	15	; () banked
 16918  01142C  6F42               	movwf	66,b	;volatile
 16919                           
 16920                           ; BSR set to: 15
 16921                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 16922  01142E  010F               	movlb	15	; () banked
 16923  011430  8742               	bsf	66,3,b	;volatile
 16924                           
 16925                           ; BSR set to: 15
 16926                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 16927  011432  0100               	movlb	0	; () banked
 16928  011434  A173               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 16929  011436  D002               	goto	l381
 16930                           
 16931                           ; BSR set to: 0
 16932                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 16933  011438  010F               	movlb	15	; () banked
 16934  01143A  8142               	bsf	66,0,b	;volatile
 16935  01143C                     l381:
 16936                           
 16937                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 16938  01143C  0100               	movlb	0	; () banked
 16939  01143E  A373               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 16940  011440  D002               	goto	l382
 16941                           
 16942                           ; BSR set to: 0
 16943                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 16944  011442  010F               	movlb	15	; () banked
 16945  011444  8342               	bsf	66,1,b	;volatile
 16946  011446                     l382:
 16947                           
 16948                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 16949  011446  0100               	movlb	0	; () banked
 16950  011448  A573               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 16951  01144A  D002               	goto	l383
 16952                           
 16953                           ; BSR set to: 0
 16954                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 16955  01144C  010F               	movlb	15	; () banked
 16956  01144E  8B42               	bsf	66,5,b	;volatile
 16957  011450                     l383:
 16958                           
 16959                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 16960  011450  0100               	movlb	0	; () banked
 16961  011452  A773               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 16962  011454  D002               	goto	l384
 16963                           
 16964                           ; BSR set to: 0
 16965                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 16966  011456  010F               	movlb	15	; () banked
 16967  011458  8D42               	bsf	66,6,b	;volatile
 16968  01145A                     l384:
 16969                           
 16970                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 16971  01145A  0100               	movlb	0	; () banked
 16972  01145C  A973               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 16973  01145E  D002               	goto	l6130
 16974                           
 16975                           ; BSR set to: 0
 16976                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 16977  011460  010F               	movlb	15	; () banked
 16978  011462  8F42               	bsf	66,7,b	;volatile
 16979  011464                     l6130:
 16980                           
 16981                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 16982  011464  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 16983  011468  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 16984  01146C  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 16985  011470  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 16986  011474  0E16               	movlw	22
 16987  011476  D006               	goto	u7580
 16988  011478                     u7585:
 16989  011478  0100               	movlb	0	; () banked
 16990  01147A  90D8               	bcf	status,0,c
 16991  01147C  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 16992  01147E  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 16993  011480  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 16994  011482  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 16995  011484                     u7580:
 16996  011484  2EE8               	decfsz	wreg,f,c
 16997  011486  D7F8               	goto	u7585
 16998  011488  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 16999  01148C  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17000  011490  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17001  011494  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17002                           
 17003                           ; BSR set to: 0
 17004                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 17005  011498  0100               	movlb	0	; () banked
 17006  01149A  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 17007  01149C  0100               	movlb	0	; () banked
 17008  01149E  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17009  0114A0  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17010  0114A2  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17011  0114A4  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17012                           
 17013                           ; BSR set to: 0
 17014                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 17015  0114A6  C07D  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17016                           
 17017                           ;inc\CANlib.h: 332: }
 17018  0114AA  D059               	goto	l6150
 17019  0114AC                     l380:
 17020                           
 17021                           ; BSR set to: 0
 17022                           ;inc\CANlib.h: 334: else
 17023                           ;inc\CANlib.h: 336: {
 17024                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 17025  0114AC  010F               	movlb	15	; () banked
 17026  0114AE  9742               	bcf	66,3,b	;volatile
 17027                           
 17028                           ; BSR set to: 15
 17029                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 17030  0114B0  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 17031  0114B4  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17032  0114B8  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17033  0114BC  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17034  0114C0  0E04               	movlw	4
 17035  0114C2  D006               	goto	u7590
 17036  0114C4                     u7595:
 17037  0114C4  0100               	movlb	0	; () banked
 17038  0114C6  90D8               	bcf	status,0,c
 17039  0114C8  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17040  0114CA  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17041  0114CC  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17042  0114CE  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 17043  0114D0                     u7590:
 17044  0114D0  2EE8               	decfsz	wreg,f,c
 17045  0114D2  D7F8               	goto	u7595
 17046  0114D4  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 17047  0114D8  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17048  0114DC  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17049  0114E0  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17050                           
 17051                           ; BSR set to: 0
 17052                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 17053  0114E4  0100               	movlb	0	; () banked
 17054  0114E6  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 17055  0114E8  0100               	movlb	0	; () banked
 17056  0114EA  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17057  0114EC  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17058  0114EE  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17059  0114F0  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17060                           
 17061                           ; BSR set to: 0
 17062                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 17063  0114F2  C07D  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 17064                           
 17065                           ; BSR set to: 0
 17066                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 17067  0114F6  0E07               	movlw	7
 17068  0114F8  0100               	movlb	0	; () banked
 17069  0114FA  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 17070  0114FC  0100               	movlb	0	; () banked
 17071  0114FE  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17072  011500  0E00               	movlw	0
 17073  011502  0100               	movlb	0	; () banked
 17074  011504  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17075  011506  0100               	movlb	0	; () banked
 17076  011508  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17077  01150A  0E00               	movlw	0
 17078  01150C  0100               	movlb	0	; () banked
 17079  01150E  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17080  011510  0100               	movlb	0	; () banked
 17081  011512  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17082  011514  0E00               	movlw	0
 17083  011516  0100               	movlb	0	; () banked
 17084  011518  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17085  01151A  0100               	movlb	0	; () banked
 17086  01151C  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17087                           
 17088                           ; BSR set to: 0
 17089                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 17090  01151E  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 17091  011522  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17092  011526  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17093  01152A  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17094  01152E  0E05               	movlw	5
 17095  011530                     u7605:
 17096  011530  90D8               	bcf	status,0,c
 17097  011532  0100               	movlb	0	; () banked
 17098  011534  3779               	rlcf	??_CANsendMessage& (0+255),f,b
 17099  011536  377A               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17100  011538  377B               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17101  01153A  377C               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17102  01153C  2EE8               	decfsz	wreg,f,c
 17103  01153E  D7F8               	goto	u7605
 17104  011540  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 17105  011544  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17106  011548  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17107  01154C  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17108                           
 17109                           ; BSR set to: 0
 17110                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 17111  011550  010F               	movlb	15	; () banked
 17112  011552  5142               	movf	66,w,b	;volatile
 17113  011554  0B1F               	andlw	31
 17114  011556  010F               	movlb	15	; () banked
 17115  011558  6F42               	movwf	66,b	;volatile
 17116                           
 17117                           ; BSR set to: 15
 17118                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 17119  01155A  C07D  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 17120  01155E                     l6150:
 17121                           
 17122                           ;inc\CANlib.h: 347: }
 17123                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 17124  01155E  0100               	movlb	0	; () banked
 17125  011560  A178               	btfss	CANsendMessage@flags& (0+255),0,b
 17126  011562  D003               	goto	l387
 17127                           
 17128                           ; BSR set to: 0
 17129                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 17130  011564  010F               	movlb	15	; () banked
 17131  011566  8140               	bsf	64,0,b	;volatile
 17132  011568  D002               	goto	l388
 17133  01156A                     l387:
 17134                           
 17135                           ; BSR set to: 0
 17136                           ;inc\CANlib.h: 351: else
 17137                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 17138  01156A  010F               	movlb	15	; () banked
 17139  01156C  9140               	bcf	64,0,b	;volatile
 17140  01156E                     l388:
 17141                           
 17142                           ; BSR set to: 15
 17143                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 17144  01156E  0100               	movlb	0	; () banked
 17145  011570  A378               	btfss	CANsendMessage@flags& (0+255),1,b
 17146  011572  D003               	goto	l389
 17147                           
 17148                           ; BSR set to: 0
 17149                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 17150  011574  010F               	movlb	15	; () banked
 17151  011576  8340               	bsf	64,1,b	;volatile
 17152  011578  D002               	goto	l6156
 17153  01157A                     l389:
 17154                           
 17155                           ; BSR set to: 0
 17156                           ;inc\CANlib.h: 355: else
 17157                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 17158  01157A  010F               	movlb	15	; () banked
 17159  01157C  9340               	bcf	64,1,b	;volatile
 17160  01157E                     l6156:
 17161                           
 17162                           ; BSR set to: 15
 17163                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 17164  01157E  C075  FFD9         	movff	CANsendMessage@data,fsr2l
 17165  011582  C076  FFDA         	movff	CANsendMessage@data+1,fsr2h
 17166  011586  50DF               	movf	indf2,w,c
 17167  011588  010F               	movlb	15	; () banked
 17168  01158A  6F46               	movwf	70,b	;volatile
 17169                           
 17170                           ; BSR set to: 15
 17171                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 17172  01158C  0100               	movlb	0	; () banked
 17173  01158E  EE20 F001          	lfsr	2,1
 17174  011592  5175               	movf	CANsendMessage@data& (0+255),w,b
 17175  011594  26D9               	addwf	fsr2l,f,c
 17176  011596  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17177  011598  22DA               	addwfc	fsr2h,f,c
 17178  01159A  50DF               	movf	indf2,w,c
 17179  01159C  010F               	movlb	15	; () banked
 17180  01159E  6F47               	movwf	71,b	;volatile
 17181                           
 17182                           ; BSR set to: 15
 17183                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 17184  0115A0  0100               	movlb	0	; () banked
 17185  0115A2  EE20 F002          	lfsr	2,2
 17186  0115A6  5175               	movf	CANsendMessage@data& (0+255),w,b
 17187  0115A8  26D9               	addwf	fsr2l,f,c
 17188  0115AA  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17189  0115AC  22DA               	addwfc	fsr2h,f,c
 17190  0115AE  50DF               	movf	indf2,w,c
 17191  0115B0  010F               	movlb	15	; () banked
 17192  0115B2  6F48               	movwf	72,b	;volatile
 17193                           
 17194                           ; BSR set to: 15
 17195                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 17196  0115B4  0100               	movlb	0	; () banked
 17197  0115B6  EE20 F003          	lfsr	2,3
 17198  0115BA  5175               	movf	CANsendMessage@data& (0+255),w,b
 17199  0115BC  26D9               	addwf	fsr2l,f,c
 17200  0115BE  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17201  0115C0  22DA               	addwfc	fsr2h,f,c
 17202  0115C2  50DF               	movf	indf2,w,c
 17203  0115C4  010F               	movlb	15	; () banked
 17204  0115C6  6F49               	movwf	73,b	;volatile
 17205                           
 17206                           ; BSR set to: 15
 17207                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 17208  0115C8  0100               	movlb	0	; () banked
 17209  0115CA  EE20 F004          	lfsr	2,4
 17210  0115CE  5175               	movf	CANsendMessage@data& (0+255),w,b
 17211  0115D0  26D9               	addwf	fsr2l,f,c
 17212  0115D2  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17213  0115D4  22DA               	addwfc	fsr2h,f,c
 17214  0115D6  50DF               	movf	indf2,w,c
 17215  0115D8  010F               	movlb	15	; () banked
 17216  0115DA  6F4A               	movwf	74,b	;volatile
 17217                           
 17218                           ; BSR set to: 15
 17219                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 17220  0115DC  0100               	movlb	0	; () banked
 17221  0115DE  EE20 F005          	lfsr	2,5
 17222  0115E2  5175               	movf	CANsendMessage@data& (0+255),w,b
 17223  0115E4  26D9               	addwf	fsr2l,f,c
 17224  0115E6  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17225  0115E8  22DA               	addwfc	fsr2h,f,c
 17226  0115EA  50DF               	movf	indf2,w,c
 17227  0115EC  010F               	movlb	15	; () banked
 17228  0115EE  6F4B               	movwf	75,b	;volatile
 17229                           
 17230                           ; BSR set to: 15
 17231                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 17232  0115F0  0100               	movlb	0	; () banked
 17233  0115F2  EE20 F006          	lfsr	2,6
 17234  0115F6  5175               	movf	CANsendMessage@data& (0+255),w,b
 17235  0115F8  26D9               	addwf	fsr2l,f,c
 17236  0115FA  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17237  0115FC  22DA               	addwfc	fsr2h,f,c
 17238  0115FE  50DF               	movf	indf2,w,c
 17239  011600  010F               	movlb	15	; () banked
 17240  011602  6F4C               	movwf	76,b	;volatile
 17241                           
 17242                           ; BSR set to: 15
 17243                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 17244  011604  0100               	movlb	0	; () banked
 17245  011606  EE20 F007          	lfsr	2,7
 17246  01160A  5175               	movf	CANsendMessage@data& (0+255),w,b
 17247  01160C  26D9               	addwf	fsr2l,f,c
 17248  01160E  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17249  011610  22DA               	addwfc	fsr2h,f,c
 17250  011612  50DF               	movf	indf2,w,c
 17251  011614  010F               	movlb	15	; () banked
 17252  011616  6F4D               	movwf	77,b	;volatile
 17253                           
 17254                           ; BSR set to: 15
 17255                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 17256  011618  010F               	movlb	15	; () banked
 17257  01161A  8740               	bsf	64,3,b	;volatile
 17258                           
 17259                           ; BSR set to: 15
 17260                           ;inc\CANlib.h: 368: return;
 17261  01161C  0012               	return	
 17262  01161E                     l377:
 17263                           
 17264                           ; BSR set to: 15
 17265                           ;inc\CANlib.h: 369: }
 17266                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 17267  01161E  010F               	movlb	15	; () banked
 17268  011620  B730               	btfsc	48,3,b	;volatile
 17269  011622  D13F               	goto	l392
 17270                           
 17271                           ; BSR set to: 15
 17272                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 17273  011624  C077  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 17274                           
 17275                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 17276  011628  0100               	movlb	0	; () banked
 17277  01162A  AD78               	btfss	CANsendMessage@flags& (0+255),6,b
 17278  01162C  D003               	goto	l393
 17279                           
 17280                           ; BSR set to: 0
 17281                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 17282  01162E  010F               	movlb	15	; () banked
 17283  011630  8D35               	bsf	53,6,b	;volatile
 17284  011632  D002               	goto	l394
 17285  011634                     l393:
 17286                           
 17287                           ; BSR set to: 0
 17288                           ;inc\CANlib.h: 378: else
 17289                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 17290  011634  010F               	movlb	15	; () banked
 17291  011636  9D35               	bcf	53,6,b	;volatile
 17292  011638                     l394:
 17293                           
 17294                           ; BSR set to: 15
 17295                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 17296  011638  0100               	movlb	0	; () banked
 17297  01163A  A778               	btfss	CANsendMessage@flags& (0+255),3,b
 17298  01163C  D079               	goto	l395
 17299                           
 17300                           ; BSR set to: 0
 17301                           ;inc\CANlib.h: 382: {
 17302                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 17303  01163E  0100               	movlb	0	; () banked
 17304  011640  5171               	movf	CANsendMessage@identifier& (0+255),w,b
 17305  011642  0100               	movlb	0	; () banked
 17306  011644  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17307  011646  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17308  011648  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17309  01164A  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17310                           
 17311                           ; BSR set to: 0
 17312                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 17313  01164C  C07D  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 17314                           
 17315                           ; BSR set to: 0
 17316                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 17317  011650  0E00               	movlw	0
 17318  011652  0100               	movlb	0	; () banked
 17319  011654  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 17320  011656  0100               	movlb	0	; () banked
 17321  011658  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17322  01165A  0EFF               	movlw	255
 17323  01165C  0100               	movlb	0	; () banked
 17324  01165E  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17325  011660  0100               	movlb	0	; () banked
 17326  011662  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17327  011664  0E00               	movlw	0
 17328  011666  0100               	movlb	0	; () banked
 17329  011668  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17330  01166A  0100               	movlb	0	; () banked
 17331  01166C  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17332  01166E  0E00               	movlw	0
 17333  011670  0100               	movlb	0	; () banked
 17334  011672  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17335  011674  0100               	movlb	0	; () banked
 17336  011676  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17337                           
 17338                           ; BSR set to: 0
 17339                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 17340  011678  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 17341  01167C  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17342  011680  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17343  011684  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17344  011688  C07A  F079         	movff	??_CANsendMessage+1,??_CANsendMessage
 17345  01168C  C07B  F07A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17346  011690  C07C  F07B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17347  011694  0100               	movlb	0	; () banked
 17348  011696  6B7C               	clrf	(??_CANsendMessage+3)& (0+255),b
 17349  011698  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 17350  01169C  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17351  0116A0  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17352  0116A4  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17353                           
 17354                           ; BSR set to: 0
 17355                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 17356  0116A8  C07D  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 17357                           
 17358                           ; BSR set to: 0
 17359                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 17360  0116AC  0E00               	movlw	0
 17361  0116AE  010F               	movlb	15	; () banked
 17362  0116B0  6F32               	movwf	50,b	;volatile
 17363                           
 17364                           ; BSR set to: 15
 17365                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 17366  0116B2  010F               	movlb	15	; () banked
 17367  0116B4  8732               	bsf	50,3,b	;volatile
 17368                           
 17369                           ; BSR set to: 15
 17370                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 17371  0116B6  0100               	movlb	0	; () banked
 17372  0116B8  A173               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17373  0116BA  D002               	goto	l396
 17374                           
 17375                           ; BSR set to: 0
 17376                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 17377  0116BC  010F               	movlb	15	; () banked
 17378  0116BE  8132               	bsf	50,0,b	;volatile
 17379  0116C0                     l396:
 17380                           
 17381                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 17382  0116C0  0100               	movlb	0	; () banked
 17383  0116C2  A373               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17384  0116C4  D002               	goto	l397
 17385                           
 17386                           ; BSR set to: 0
 17387                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 17388  0116C6  010F               	movlb	15	; () banked
 17389  0116C8  8332               	bsf	50,1,b	;volatile
 17390  0116CA                     l397:
 17391                           
 17392                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 17393  0116CA  0100               	movlb	0	; () banked
 17394  0116CC  A573               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17395  0116CE  D002               	goto	l398
 17396                           
 17397                           ; BSR set to: 0
 17398                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 17399  0116D0  010F               	movlb	15	; () banked
 17400  0116D2  8B32               	bsf	50,5,b	;volatile
 17401  0116D4                     l398:
 17402                           
 17403                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 17404  0116D4  0100               	movlb	0	; () banked
 17405  0116D6  A773               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17406  0116D8  D002               	goto	l399
 17407                           
 17408                           ; BSR set to: 0
 17409                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 17410  0116DA  010F               	movlb	15	; () banked
 17411  0116DC  8D32               	bsf	50,6,b	;volatile
 17412  0116DE                     l399:
 17413                           
 17414                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 17415  0116DE  0100               	movlb	0	; () banked
 17416  0116E0  A973               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17417  0116E2  D002               	goto	l6206
 17418                           
 17419                           ; BSR set to: 0
 17420                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 17421  0116E4  010F               	movlb	15	; () banked
 17422  0116E6  8F32               	bsf	50,7,b	;volatile
 17423  0116E8                     l6206:
 17424                           
 17425                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 17426  0116E8  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 17427  0116EC  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17428  0116F0  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17429  0116F4  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17430  0116F8  0E16               	movlw	22
 17431  0116FA  D006               	goto	u7710
 17432  0116FC                     u7715:
 17433  0116FC  0100               	movlb	0	; () banked
 17434  0116FE  90D8               	bcf	status,0,c
 17435  011700  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17436  011702  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17437  011704  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17438  011706  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 17439  011708                     u7710:
 17440  011708  2EE8               	decfsz	wreg,f,c
 17441  01170A  D7F8               	goto	u7715
 17442  01170C  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 17443  011710  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17444  011714  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17445  011718  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17446                           
 17447                           ; BSR set to: 0
 17448                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 17449  01171C  0100               	movlb	0	; () banked
 17450  01171E  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 17451  011720  0100               	movlb	0	; () banked
 17452  011722  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17453  011724  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17454  011726  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17455  011728  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17456                           
 17457                           ; BSR set to: 0
 17458                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 17459  01172A  C07D  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 17460                           
 17461                           ;inc\CANlib.h: 407: }
 17462  01172E  D059               	goto	l6226
 17463  011730                     l395:
 17464                           
 17465                           ; BSR set to: 0
 17466                           ;inc\CANlib.h: 409: else
 17467                           ;inc\CANlib.h: 411: {
 17468                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 17469  011730  010F               	movlb	15	; () banked
 17470  011732  9732               	bcf	50,3,b	;volatile
 17471                           
 17472                           ; BSR set to: 15
 17473                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 17474  011734  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 17475  011738  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17476  01173C  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17477  011740  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17478  011744  0E04               	movlw	4
 17479  011746  D006               	goto	u7720
 17480  011748                     u7725:
 17481  011748  0100               	movlb	0	; () banked
 17482  01174A  90D8               	bcf	status,0,c
 17483  01174C  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17484  01174E  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17485  011750  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17486  011752  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 17487  011754                     u7720:
 17488  011754  2EE8               	decfsz	wreg,f,c
 17489  011756  D7F8               	goto	u7725
 17490  011758  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 17491  01175C  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17492  011760  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17493  011764  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17494                           
 17495                           ; BSR set to: 0
 17496                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 17497  011768  0100               	movlb	0	; () banked
 17498  01176A  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 17499  01176C  0100               	movlb	0	; () banked
 17500  01176E  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17501  011770  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17502  011772  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17503  011774  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17504                           
 17505                           ; BSR set to: 0
 17506                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 17507  011776  C07D  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 17508                           
 17509                           ; BSR set to: 0
 17510                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 17511  01177A  0E07               	movlw	7
 17512  01177C  0100               	movlb	0	; () banked
 17513  01177E  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 17514  011780  0100               	movlb	0	; () banked
 17515  011782  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17516  011784  0E00               	movlw	0
 17517  011786  0100               	movlb	0	; () banked
 17518  011788  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17519  01178A  0100               	movlb	0	; () banked
 17520  01178C  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17521  01178E  0E00               	movlw	0
 17522  011790  0100               	movlb	0	; () banked
 17523  011792  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17524  011794  0100               	movlb	0	; () banked
 17525  011796  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17526  011798  0E00               	movlw	0
 17527  01179A  0100               	movlb	0	; () banked
 17528  01179C  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17529  01179E  0100               	movlb	0	; () banked
 17530  0117A0  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17531                           
 17532                           ; BSR set to: 0
 17533                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 17534  0117A2  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 17535  0117A6  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17536  0117AA  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17537  0117AE  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17538  0117B2  0E05               	movlw	5
 17539  0117B4                     u7735:
 17540  0117B4  90D8               	bcf	status,0,c
 17541  0117B6  0100               	movlb	0	; () banked
 17542  0117B8  3779               	rlcf	??_CANsendMessage& (0+255),f,b
 17543  0117BA  377A               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17544  0117BC  377B               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17545  0117BE  377C               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17546  0117C0  2EE8               	decfsz	wreg,f,c
 17547  0117C2  D7F8               	goto	u7735
 17548  0117C4  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 17549  0117C8  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17550  0117CC  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17551  0117D0  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17552                           
 17553                           ; BSR set to: 0
 17554                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 17555  0117D4  010F               	movlb	15	; () banked
 17556  0117D6  5132               	movf	50,w,b	;volatile
 17557  0117D8  0B1F               	andlw	31
 17558  0117DA  010F               	movlb	15	; () banked
 17559  0117DC  6F32               	movwf	50,b	;volatile
 17560                           
 17561                           ; BSR set to: 15
 17562                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 17563  0117DE  C07D  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 17564  0117E2                     l6226:
 17565                           
 17566                           ;inc\CANlib.h: 422: }
 17567                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 17568  0117E2  0100               	movlb	0	; () banked
 17569  0117E4  A178               	btfss	CANsendMessage@flags& (0+255),0,b
 17570  0117E6  D003               	goto	l402
 17571                           
 17572                           ; BSR set to: 0
 17573                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 17574  0117E8  010F               	movlb	15	; () banked
 17575  0117EA  8130               	bsf	48,0,b	;volatile
 17576  0117EC  D002               	goto	l403
 17577  0117EE                     l402:
 17578                           
 17579                           ; BSR set to: 0
 17580                           ;inc\CANlib.h: 426: else
 17581                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 17582  0117EE  010F               	movlb	15	; () banked
 17583  0117F0  9130               	bcf	48,0,b	;volatile
 17584  0117F2                     l403:
 17585                           
 17586                           ; BSR set to: 15
 17587                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 17588  0117F2  0100               	movlb	0	; () banked
 17589  0117F4  A378               	btfss	CANsendMessage@flags& (0+255),1,b
 17590  0117F6  D003               	goto	l404
 17591                           
 17592                           ; BSR set to: 0
 17593                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 17594  0117F8  010F               	movlb	15	; () banked
 17595  0117FA  8330               	bsf	48,1,b	;volatile
 17596  0117FC  D002               	goto	l6232
 17597  0117FE                     l404:
 17598                           
 17599                           ; BSR set to: 0
 17600                           ;inc\CANlib.h: 430: else
 17601                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 17602  0117FE  010F               	movlb	15	; () banked
 17603  011800  9330               	bcf	48,1,b	;volatile
 17604  011802                     l6232:
 17605                           
 17606                           ; BSR set to: 15
 17607                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 17608  011802  C075  FFD9         	movff	CANsendMessage@data,fsr2l
 17609  011806  C076  FFDA         	movff	CANsendMessage@data+1,fsr2h
 17610  01180A  50DF               	movf	indf2,w,c
 17611  01180C  010F               	movlb	15	; () banked
 17612  01180E  6F36               	movwf	54,b	;volatile
 17613                           
 17614                           ; BSR set to: 15
 17615                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 17616  011810  0100               	movlb	0	; () banked
 17617  011812  EE20 F001          	lfsr	2,1
 17618  011816  5175               	movf	CANsendMessage@data& (0+255),w,b
 17619  011818  26D9               	addwf	fsr2l,f,c
 17620  01181A  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17621  01181C  22DA               	addwfc	fsr2h,f,c
 17622  01181E  50DF               	movf	indf2,w,c
 17623  011820  010F               	movlb	15	; () banked
 17624  011822  6F37               	movwf	55,b	;volatile
 17625                           
 17626                           ; BSR set to: 15
 17627                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 17628  011824  0100               	movlb	0	; () banked
 17629  011826  EE20 F002          	lfsr	2,2
 17630  01182A  5175               	movf	CANsendMessage@data& (0+255),w,b
 17631  01182C  26D9               	addwf	fsr2l,f,c
 17632  01182E  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17633  011830  22DA               	addwfc	fsr2h,f,c
 17634  011832  50DF               	movf	indf2,w,c
 17635  011834  010F               	movlb	15	; () banked
 17636  011836  6F38               	movwf	56,b	;volatile
 17637                           
 17638                           ; BSR set to: 15
 17639                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 17640  011838  0100               	movlb	0	; () banked
 17641  01183A  EE20 F003          	lfsr	2,3
 17642  01183E  5175               	movf	CANsendMessage@data& (0+255),w,b
 17643  011840  26D9               	addwf	fsr2l,f,c
 17644  011842  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17645  011844  22DA               	addwfc	fsr2h,f,c
 17646  011846  50DF               	movf	indf2,w,c
 17647  011848  010F               	movlb	15	; () banked
 17648  01184A  6F39               	movwf	57,b	;volatile
 17649                           
 17650                           ; BSR set to: 15
 17651                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 17652  01184C  0100               	movlb	0	; () banked
 17653  01184E  EE20 F004          	lfsr	2,4
 17654  011852  5175               	movf	CANsendMessage@data& (0+255),w,b
 17655  011854  26D9               	addwf	fsr2l,f,c
 17656  011856  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17657  011858  22DA               	addwfc	fsr2h,f,c
 17658  01185A  50DF               	movf	indf2,w,c
 17659  01185C  010F               	movlb	15	; () banked
 17660  01185E  6F3A               	movwf	58,b	;volatile
 17661                           
 17662                           ; BSR set to: 15
 17663                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 17664  011860  0100               	movlb	0	; () banked
 17665  011862  EE20 F005          	lfsr	2,5
 17666  011866  5175               	movf	CANsendMessage@data& (0+255),w,b
 17667  011868  26D9               	addwf	fsr2l,f,c
 17668  01186A  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17669  01186C  22DA               	addwfc	fsr2h,f,c
 17670  01186E  50DF               	movf	indf2,w,c
 17671  011870  010F               	movlb	15	; () banked
 17672  011872  6F3B               	movwf	59,b	;volatile
 17673                           
 17674                           ; BSR set to: 15
 17675                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 17676  011874  0100               	movlb	0	; () banked
 17677  011876  EE20 F006          	lfsr	2,6
 17678  01187A  5175               	movf	CANsendMessage@data& (0+255),w,b
 17679  01187C  26D9               	addwf	fsr2l,f,c
 17680  01187E  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17681  011880  22DA               	addwfc	fsr2h,f,c
 17682  011882  50DF               	movf	indf2,w,c
 17683  011884  010F               	movlb	15	; () banked
 17684  011886  6F3C               	movwf	60,b	;volatile
 17685                           
 17686                           ; BSR set to: 15
 17687                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 17688  011888  0100               	movlb	0	; () banked
 17689  01188A  EE20 F007          	lfsr	2,7
 17690  01188E  5175               	movf	CANsendMessage@data& (0+255),w,b
 17691  011890  26D9               	addwf	fsr2l,f,c
 17692  011892  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 17693  011894  22DA               	addwfc	fsr2h,f,c
 17694  011896  50DF               	movf	indf2,w,c
 17695  011898  010F               	movlb	15	; () banked
 17696  01189A  6F3D               	movwf	61,b	;volatile
 17697                           
 17698                           ; BSR set to: 15
 17699                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 17700  01189C  010F               	movlb	15	; () banked
 17701  01189E  8730               	bsf	48,3,b	;volatile
 17702                           
 17703                           ; BSR set to: 15
 17704                           ;inc\CANlib.h: 444: return;
 17705  0118A0  0012               	return	
 17706  0118A2                     l392:
 17707                           
 17708                           ; BSR set to: 15
 17709                           ;inc\CANlib.h: 445: }
 17710                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 17711  0118A2  010F               	movlb	15	; () banked
 17712  0118A4  B720               	btfsc	32,3,b	;volatile
 17713  0118A6  0012               	return	
 17714                           
 17715                           ; BSR set to: 15
 17716                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 17717  0118A8  C077  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 17718                           
 17719                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 17720  0118AC  0100               	movlb	0	; () banked
 17721  0118AE  AD78               	btfss	CANsendMessage@flags& (0+255),6,b
 17722  0118B0  D003               	goto	l407
 17723                           
 17724                           ; BSR set to: 0
 17725                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 17726  0118B2  010F               	movlb	15	; () banked
 17727  0118B4  8D25               	bsf	37,6,b	;volatile
 17728  0118B6  D002               	goto	l408
 17729  0118B8                     l407:
 17730                           
 17731                           ; BSR set to: 0
 17732                           ;inc\CANlib.h: 454: else
 17733                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 17734  0118B8  010F               	movlb	15	; () banked
 17735  0118BA  9D25               	bcf	37,6,b	;volatile
 17736  0118BC                     l408:
 17737                           
 17738                           ; BSR set to: 15
 17739                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 17740  0118BC  0100               	movlb	0	; () banked
 17741  0118BE  A778               	btfss	CANsendMessage@flags& (0+255),3,b
 17742  0118C0  D079               	goto	l409
 17743                           
 17744                           ; BSR set to: 0
 17745                           ;inc\CANlib.h: 458: {
 17746                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 17747  0118C2  0100               	movlb	0	; () banked
 17748  0118C4  5171               	movf	CANsendMessage@identifier& (0+255),w,b
 17749  0118C6  0100               	movlb	0	; () banked
 17750  0118C8  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17751  0118CA  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17752  0118CC  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17753  0118CE  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17754                           
 17755                           ; BSR set to: 0
 17756                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 17757  0118D0  C07D  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 17758                           
 17759                           ; BSR set to: 0
 17760                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 17761  0118D4  0E00               	movlw	0
 17762  0118D6  0100               	movlb	0	; () banked
 17763  0118D8  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 17764  0118DA  0100               	movlb	0	; () banked
 17765  0118DC  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17766  0118DE  0EFF               	movlw	255
 17767  0118E0  0100               	movlb	0	; () banked
 17768  0118E2  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17769  0118E4  0100               	movlb	0	; () banked
 17770  0118E6  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17771  0118E8  0E00               	movlw	0
 17772  0118EA  0100               	movlb	0	; () banked
 17773  0118EC  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17774  0118EE  0100               	movlb	0	; () banked
 17775  0118F0  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17776  0118F2  0E00               	movlw	0
 17777  0118F4  0100               	movlb	0	; () banked
 17778  0118F6  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17779  0118F8  0100               	movlb	0	; () banked
 17780  0118FA  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17781                           
 17782                           ; BSR set to: 0
 17783                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 17784  0118FC  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 17785  011900  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17786  011904  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17787  011908  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17788  01190C  C07A  F079         	movff	??_CANsendMessage+1,??_CANsendMessage
 17789  011910  C07B  F07A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 17790  011914  C07C  F07B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 17791  011918  0100               	movlb	0	; () banked
 17792  01191A  6B7C               	clrf	(??_CANsendMessage+3)& (0+255),b
 17793  01191C  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 17794  011920  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17795  011924  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17796  011928  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17797                           
 17798                           ; BSR set to: 0
 17799                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 17800  01192C  C07D  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 17801                           
 17802                           ; BSR set to: 0
 17803                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 17804  011930  0E00               	movlw	0
 17805  011932  010F               	movlb	15	; () banked
 17806  011934  6F22               	movwf	34,b	;volatile
 17807                           
 17808                           ; BSR set to: 15
 17809                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 17810  011936  010F               	movlb	15	; () banked
 17811  011938  8722               	bsf	34,3,b	;volatile
 17812                           
 17813                           ; BSR set to: 15
 17814                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 17815  01193A  0100               	movlb	0	; () banked
 17816  01193C  A173               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 17817  01193E  D002               	goto	l410
 17818                           
 17819                           ; BSR set to: 0
 17820                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 17821  011940  010F               	movlb	15	; () banked
 17822  011942  8122               	bsf	34,0,b	;volatile
 17823  011944                     l410:
 17824                           
 17825                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 17826  011944  0100               	movlb	0	; () banked
 17827  011946  A373               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 17828  011948  D002               	goto	l411
 17829                           
 17830                           ; BSR set to: 0
 17831                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 17832  01194A  010F               	movlb	15	; () banked
 17833  01194C  8322               	bsf	34,1,b	;volatile
 17834  01194E                     l411:
 17835                           
 17836                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 17837  01194E  0100               	movlb	0	; () banked
 17838  011950  A573               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 17839  011952  D002               	goto	l412
 17840                           
 17841                           ; BSR set to: 0
 17842                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 17843  011954  010F               	movlb	15	; () banked
 17844  011956  8B22               	bsf	34,5,b	;volatile
 17845  011958                     l412:
 17846                           
 17847                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 17848  011958  0100               	movlb	0	; () banked
 17849  01195A  A773               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 17850  01195C  D002               	goto	l413
 17851                           
 17852                           ; BSR set to: 0
 17853                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 17854  01195E  010F               	movlb	15	; () banked
 17855  011960  8D22               	bsf	34,6,b	;volatile
 17856  011962                     l413:
 17857                           
 17858                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 17859  011962  0100               	movlb	0	; () banked
 17860  011964  A973               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 17861  011966  D002               	goto	l6282
 17862                           
 17863                           ; BSR set to: 0
 17864                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 17865  011968  010F               	movlb	15	; () banked
 17866  01196A  8F22               	bsf	34,7,b	;volatile
 17867  01196C                     l6282:
 17868                           
 17869                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 17870  01196C  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 17871  011970  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17872  011974  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17873  011978  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17874  01197C  0E16               	movlw	22
 17875  01197E  D006               	goto	u7840
 17876  011980                     u7845:
 17877  011980  0100               	movlb	0	; () banked
 17878  011982  90D8               	bcf	status,0,c
 17879  011984  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17880  011986  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17881  011988  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17882  01198A  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 17883  01198C                     u7840:
 17884  01198C  2EE8               	decfsz	wreg,f,c
 17885  01198E  D7F8               	goto	u7845
 17886  011990  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 17887  011994  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17888  011998  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17889  01199C  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17890                           
 17891                           ; BSR set to: 0
 17892                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 17893  0119A0  0100               	movlb	0	; () banked
 17894  0119A2  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 17895  0119A4  0100               	movlb	0	; () banked
 17896  0119A6  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17897  0119A8  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17898  0119AA  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17899  0119AC  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17900                           
 17901                           ; BSR set to: 0
 17902                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 17903  0119AE  C07D  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 17904                           
 17905                           ;inc\CANlib.h: 483: }
 17906  0119B2  D059               	goto	l6302
 17907  0119B4                     l409:
 17908                           
 17909                           ; BSR set to: 0
 17910                           ;inc\CANlib.h: 485: else
 17911                           ;inc\CANlib.h: 487: {
 17912                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 17913  0119B4  010F               	movlb	15	; () banked
 17914  0119B6  9722               	bcf	34,3,b	;volatile
 17915                           
 17916                           ; BSR set to: 15
 17917                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 17918  0119B8  C071  F079         	movff	CANsendMessage@identifier,??_CANsendMessage
 17919  0119BC  C072  F07A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 17920  0119C0  C073  F07B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 17921  0119C4  C074  F07C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 17922  0119C8  0E04               	movlw	4
 17923  0119CA  D006               	goto	u7850
 17924  0119CC                     u7855:
 17925  0119CC  0100               	movlb	0	; () banked
 17926  0119CE  90D8               	bcf	status,0,c
 17927  0119D0  337C               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 17928  0119D2  337B               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 17929  0119D4  337A               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 17930  0119D6  3379               	rrcf	??_CANsendMessage& (0+255),f,b
 17931  0119D8                     u7850:
 17932  0119D8  2EE8               	decfsz	wreg,f,c
 17933  0119DA  D7F8               	goto	u7855
 17934  0119DC  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 17935  0119E0  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17936  0119E4  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17937  0119E8  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17938                           
 17939                           ; BSR set to: 0
 17940                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 17941  0119EC  0100               	movlb	0	; () banked
 17942  0119EE  517D               	movf	CANsendMessage@tamp& (0+255),w,b
 17943  0119F0  0100               	movlb	0	; () banked
 17944  0119F2  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17945  0119F4  6B7E               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 17946  0119F6  6B7F               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 17947  0119F8  6B80               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 17948                           
 17949                           ; BSR set to: 0
 17950                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 17951  0119FA  C07D  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 17952                           
 17953                           ; BSR set to: 0
 17954                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 17955  0119FE  0E07               	movlw	7
 17956  011A00  0100               	movlb	0	; () banked
 17957  011A02  1571               	andwf	CANsendMessage@identifier& (0+255),w,b
 17958  011A04  0100               	movlb	0	; () banked
 17959  011A06  6F7D               	movwf	CANsendMessage@tamp& (0+255),b
 17960  011A08  0E00               	movlw	0
 17961  011A0A  0100               	movlb	0	; () banked
 17962  011A0C  1572               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 17963  011A0E  0100               	movlb	0	; () banked
 17964  011A10  6F7E               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 17965  011A12  0E00               	movlw	0
 17966  011A14  0100               	movlb	0	; () banked
 17967  011A16  1573               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 17968  011A18  0100               	movlb	0	; () banked
 17969  011A1A  6F7F               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 17970  011A1C  0E00               	movlw	0
 17971  011A1E  0100               	movlb	0	; () banked
 17972  011A20  1574               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 17973  011A22  0100               	movlb	0	; () banked
 17974  011A24  6F80               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 17975                           
 17976                           ; BSR set to: 0
 17977                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 17978  011A26  C07D  F079         	movff	CANsendMessage@tamp,??_CANsendMessage
 17979  011A2A  C07E  F07A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 17980  011A2E  C07F  F07B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 17981  011A32  C080  F07C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 17982  011A36  0E05               	movlw	5
 17983  011A38                     u7865:
 17984  011A38  90D8               	bcf	status,0,c
 17985  011A3A  0100               	movlb	0	; () banked
 17986  011A3C  3779               	rlcf	??_CANsendMessage& (0+255),f,b
 17987  011A3E  377A               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 17988  011A40  377B               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 17989  011A42  377C               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 17990  011A44  2EE8               	decfsz	wreg,f,c
 17991  011A46  D7F8               	goto	u7865
 17992  011A48  C079  F07D         	movff	??_CANsendMessage,CANsendMessage@tamp
 17993  011A4C  C07A  F07E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 17994  011A50  C07B  F07F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 17995  011A54  C07C  F080         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 17996                           
 17997                           ; BSR set to: 0
 17998                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 17999  011A58  010F               	movlb	15	; () banked
 18000  011A5A  5122               	movf	34,w,b	;volatile
 18001  011A5C  0B1F               	andlw	31
 18002  011A5E  010F               	movlb	15	; () banked
 18003  011A60  6F22               	movwf	34,b	;volatile
 18004                           
 18005                           ; BSR set to: 15
 18006                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 18007  011A62  C07D  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 18008  011A66                     l6302:
 18009                           
 18010                           ;inc\CANlib.h: 498: }
 18011                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 18012  011A66  0100               	movlb	0	; () banked
 18013  011A68  A178               	btfss	CANsendMessage@flags& (0+255),0,b
 18014  011A6A  D003               	goto	l416
 18015                           
 18016                           ; BSR set to: 0
 18017                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 18018  011A6C  010F               	movlb	15	; () banked
 18019  011A6E  8120               	bsf	32,0,b	;volatile
 18020  011A70  D002               	goto	l417
 18021  011A72                     l416:
 18022                           
 18023                           ; BSR set to: 0
 18024                           ;inc\CANlib.h: 502: else
 18025                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 18026  011A72  010F               	movlb	15	; () banked
 18027  011A74  9120               	bcf	32,0,b	;volatile
 18028  011A76                     l417:
 18029                           
 18030                           ; BSR set to: 15
 18031                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 18032  011A76  0100               	movlb	0	; () banked
 18033  011A78  A378               	btfss	CANsendMessage@flags& (0+255),1,b
 18034  011A7A  D003               	goto	l418
 18035                           
 18036                           ; BSR set to: 0
 18037                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 18038  011A7C  010F               	movlb	15	; () banked
 18039  011A7E  8320               	bsf	32,1,b	;volatile
 18040  011A80  D002               	goto	l6308
 18041  011A82                     l418:
 18042                           
 18043                           ; BSR set to: 0
 18044                           ;inc\CANlib.h: 506: else
 18045                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 18046  011A82  010F               	movlb	15	; () banked
 18047  011A84  9320               	bcf	32,1,b	;volatile
 18048  011A86                     l6308:
 18049                           
 18050                           ; BSR set to: 15
 18051                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 18052  011A86  C075  FFD9         	movff	CANsendMessage@data,fsr2l
 18053  011A8A  C076  FFDA         	movff	CANsendMessage@data+1,fsr2h
 18054  011A8E  50DF               	movf	indf2,w,c
 18055  011A90  010F               	movlb	15	; () banked
 18056  011A92  6F26               	movwf	38,b	;volatile
 18057                           
 18058                           ; BSR set to: 15
 18059                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 18060  011A94  0100               	movlb	0	; () banked
 18061  011A96  EE20 F001          	lfsr	2,1
 18062  011A9A  5175               	movf	CANsendMessage@data& (0+255),w,b
 18063  011A9C  26D9               	addwf	fsr2l,f,c
 18064  011A9E  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18065  011AA0  22DA               	addwfc	fsr2h,f,c
 18066  011AA2  50DF               	movf	indf2,w,c
 18067  011AA4  010F               	movlb	15	; () banked
 18068  011AA6  6F27               	movwf	39,b	;volatile
 18069                           
 18070                           ; BSR set to: 15
 18071                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 18072  011AA8  0100               	movlb	0	; () banked
 18073  011AAA  EE20 F002          	lfsr	2,2
 18074  011AAE  5175               	movf	CANsendMessage@data& (0+255),w,b
 18075  011AB0  26D9               	addwf	fsr2l,f,c
 18076  011AB2  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18077  011AB4  22DA               	addwfc	fsr2h,f,c
 18078  011AB6  50DF               	movf	indf2,w,c
 18079  011AB8  010F               	movlb	15	; () banked
 18080  011ABA  6F28               	movwf	40,b	;volatile
 18081                           
 18082                           ; BSR set to: 15
 18083                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 18084  011ABC  0100               	movlb	0	; () banked
 18085  011ABE  EE20 F003          	lfsr	2,3
 18086  011AC2  5175               	movf	CANsendMessage@data& (0+255),w,b
 18087  011AC4  26D9               	addwf	fsr2l,f,c
 18088  011AC6  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18089  011AC8  22DA               	addwfc	fsr2h,f,c
 18090  011ACA  50DF               	movf	indf2,w,c
 18091  011ACC  010F               	movlb	15	; () banked
 18092  011ACE  6F29               	movwf	41,b	;volatile
 18093                           
 18094                           ; BSR set to: 15
 18095                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 18096  011AD0  0100               	movlb	0	; () banked
 18097  011AD2  EE20 F004          	lfsr	2,4
 18098  011AD6  5175               	movf	CANsendMessage@data& (0+255),w,b
 18099  011AD8  26D9               	addwf	fsr2l,f,c
 18100  011ADA  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18101  011ADC  22DA               	addwfc	fsr2h,f,c
 18102  011ADE  50DF               	movf	indf2,w,c
 18103  011AE0  010F               	movlb	15	; () banked
 18104  011AE2  6F2A               	movwf	42,b	;volatile
 18105                           
 18106                           ; BSR set to: 15
 18107                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 18108  011AE4  0100               	movlb	0	; () banked
 18109  011AE6  EE20 F005          	lfsr	2,5
 18110  011AEA  5175               	movf	CANsendMessage@data& (0+255),w,b
 18111  011AEC  26D9               	addwf	fsr2l,f,c
 18112  011AEE  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18113  011AF0  22DA               	addwfc	fsr2h,f,c
 18114  011AF2  50DF               	movf	indf2,w,c
 18115  011AF4  010F               	movlb	15	; () banked
 18116  011AF6  6F2B               	movwf	43,b	;volatile
 18117                           
 18118                           ; BSR set to: 15
 18119                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 18120  011AF8  0100               	movlb	0	; () banked
 18121  011AFA  EE20 F006          	lfsr	2,6
 18122  011AFE  5175               	movf	CANsendMessage@data& (0+255),w,b
 18123  011B00  26D9               	addwf	fsr2l,f,c
 18124  011B02  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18125  011B04  22DA               	addwfc	fsr2h,f,c
 18126  011B06  50DF               	movf	indf2,w,c
 18127  011B08  010F               	movlb	15	; () banked
 18128  011B0A  6F2C               	movwf	44,b	;volatile
 18129                           
 18130                           ; BSR set to: 15
 18131                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 18132  011B0C  0100               	movlb	0	; () banked
 18133  011B0E  EE20 F007          	lfsr	2,7
 18134  011B12  5175               	movf	CANsendMessage@data& (0+255),w,b
 18135  011B14  26D9               	addwf	fsr2l,f,c
 18136  011B16  5176               	movf	(CANsendMessage@data+1)& (0+255),w,b
 18137  011B18  22DA               	addwfc	fsr2h,f,c
 18138  011B1A  50DF               	movf	indf2,w,c
 18139  011B1C  010F               	movlb	15	; () banked
 18140  011B1E  6F2D               	movwf	45,b	;volatile
 18141                           
 18142                           ; BSR set to: 15
 18143                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 18144  011B20  010F               	movlb	15	; () banked
 18145  011B22  8720               	bsf	32,3,b	;volatile
 18146                           
 18147                           ; BSR set to: 15
 18148                           ;inc\CANlib.h: 520: return;
 18149  011B24  0012               	return	
 18150  011B26                     __end_of_CANsendMessage:
 18151                           	opt stack 0
 18152                           tblptru	equ	0xFF8
 18153                           tblptrh	equ	0xFF7
 18154                           tblptrl	equ	0xFF6
 18155                           tablat	equ	0xFF5
 18156                           prodh	equ	0xFF4
 18157                           prodl	equ	0xFF3
 18158                           intcon	equ	0xFF2
 18159                           postinc0	equ	0xFEE
 18160                           wreg	equ	0xFE8
 18161                           indf1	equ	0xFE7
 18162                           plusw1	equ	0xFE3
 18163                           fsr1h	equ	0xFE2
 18164                           fsr1l	equ	0xFE1
 18165                           indf2	equ	0xFDF
 18166                           postinc2	equ	0xFDE
 18167                           plusw2	equ	0xFDB
 18168                           fsr2h	equ	0xFDA
 18169                           fsr2l	equ	0xFD9
 18170                           status	equ	0xFD8
 18171                           
 18172 ;; *************** function _CANisTxReady *****************
 18173 ;; Defined at:
 18174 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 18175 ;; Parameters:    Size  Location     Type
 18176 ;;		None
 18177 ;; Auto vars:     Size  Location     Type
 18178 ;;		None
 18179 ;; Return value:  Size  Location     Type
 18180 ;;                  1    wreg      unsigned char 
 18181 ;; Registers used:
 18182 ;;		wreg, status,2
 18183 ;; Tracked objects:
 18184 ;;		On entry : 0/0
 18185 ;;		On exit  : 0/0
 18186 ;;		Unchanged: 0/0
 18187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18189 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18191 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18192 ;;Total ram usage:        1 bytes
 18193 ;; Hardware stack levels used:    1
 18194 ;; Hardware stack levels required when called:    3
 18195 ;; This function calls:
 18196 ;;		Nothing
 18197 ;; This function is called by:
 18198 ;;		_main
 18199 ;;		_LCD_Handler
 18200 ;;		_CAN_Tx
 18201 ;; This function uses a non-reentrant model
 18202 ;;
 18203                           
 18204                           	psect	text51
 18205  016244                     __ptext51:
 18206                           	opt stack 0
 18207  016244                     _CANisTxReady:
 18208                           	opt stack 26
 18209                           
 18210                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 18211                           
 18212                           ; BSR set to: 15
 18213                           ;incstack = 0
 18214  016244  0E01               	movlw	1
 18215  016246  0100               	movlb	0	; () banked
 18216  016248  6F71               	movwf	_CANisTxReady$3239& (0+255),b
 18217                           
 18218                           ; BSR set to: 0
 18219  01624A  010F               	movlb	15	; () banked
 18220  01624C  A740               	btfss	64,3,b	;volatile
 18221  01624E  D009               	goto	l570
 18222                           
 18223                           ; BSR set to: 15
 18224  016250  010F               	movlb	15	; () banked
 18225  016252  A730               	btfss	48,3,b	;volatile
 18226  016254  D006               	goto	l570
 18227                           
 18228                           ; BSR set to: 15
 18229  016256  010F               	movlb	15	; () banked
 18230  016258  A720               	btfss	32,3,b	;volatile
 18231  01625A  D003               	goto	l570
 18232                           
 18233                           ; BSR set to: 15
 18234  01625C  0E00               	movlw	0
 18235  01625E  0100               	movlb	0	; () banked
 18236  016260  6F71               	movwf	_CANisTxReady$3239& (0+255),b
 18237  016262                     l570:
 18238  016262  0100               	movlb	0	; () banked
 18239  016264  5171               	movf	_CANisTxReady$3239& (0+255),w,b
 18240  016266  0012               	return	
 18241  016268                     __end_of_CANisTxReady:
 18242                           	opt stack 0
 18243                           tblptru	equ	0xFF8
 18244                           tblptrh	equ	0xFF7
 18245                           tblptrl	equ	0xFF6
 18246                           tablat	equ	0xFF5
 18247                           prodh	equ	0xFF4
 18248                           prodl	equ	0xFF3
 18249                           intcon	equ	0xFF2
 18250                           postinc0	equ	0xFEE
 18251                           wreg	equ	0xFE8
 18252                           indf1	equ	0xFE7
 18253                           plusw1	equ	0xFE3
 18254                           fsr1h	equ	0xFE2
 18255                           fsr1l	equ	0xFE1
 18256                           indf2	equ	0xFDF
 18257                           postinc2	equ	0xFDE
 18258                           plusw2	equ	0xFDB
 18259                           fsr2h	equ	0xFDA
 18260                           fsr2l	equ	0xFD9
 18261                           status	equ	0xFD8
 18262                           
 18263 ;; *************** function _CAN_Rx *****************
 18264 ;; Defined at:
 18265 ;;		line 497 in file "RemoteCan.c"
 18266 ;; Parameters:    Size  Location     Type
 18267 ;;		None
 18268 ;; Auto vars:     Size  Location     Type
 18269 ;;		None
 18270 ;; Return value:  Size  Location     Type
 18271 ;;		None               void
 18272 ;; Registers used:
 18273 ;;		wreg, status,2, status,0
 18274 ;; Tracked objects:
 18275 ;;		On entry : 0/0
 18276 ;;		On exit  : 0/0
 18277 ;;		Unchanged: 0/0
 18278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18281 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18282 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18283 ;;Total ram usage:        4 bytes
 18284 ;; Hardware stack levels used:    1
 18285 ;; Hardware stack levels required when called:    3
 18286 ;; This function calls:
 18287 ;;		Nothing
 18288 ;; This function is called by:
 18289 ;;		_main
 18290 ;; This function uses a non-reentrant model
 18291 ;;
 18292                           
 18293                           	psect	text52
 18294  015AA6                     __ptext52:
 18295                           	opt stack 0
 18296  015AA6                     _CAN_Rx:
 18297                           	opt stack 27
 18298                           
 18299                           ;RemoteCan.c: 498: if (id == 0b00000000010) {
 18300                           
 18301                           ; BSR set to: 0
 18302                           ;incstack = 0
 18303  015AA6  0E02               	movlw	2
 18304  015AA8  1805               	xorwf	_id,w,c	;volatile
 18305  015AAA  1006               	iorwf	_id+1,w,c	;volatile
 18306  015AAC  1007               	iorwf	_id+2,w,c	;volatile
 18307  015AAE  1008               	iorwf	_id+3,w,c	;volatile
 18308  015AB0  A4D8               	btfss	status,2,c
 18309  015AB2  D015               	goto	l7050
 18310                           
 18311                           ;RemoteCan.c: 499: if (RTR_Flag == 1) {
 18312  015AB4  A84C               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18313  015AB6  D00C               	goto	l7040
 18314                           
 18315                           ;RemoteCan.c: 500: pr_time_4 = time_counter;
 18316  015AB8  C01D  F011         	movff	_time_counter,_pr_time_4	;volatile
 18317  015ABC  C01E  F012         	movff	_time_counter+1,_pr_time_4+1	;volatile
 18318  015AC0  C01F  F013         	movff	_time_counter+2,_pr_time_4+2	;volatile
 18319  015AC4  C020  F014         	movff	_time_counter+3,_pr_time_4+3	;volatile
 18320                           
 18321                           ;RemoteCan.c: 501: MotoreFlag = 1;
 18322  015AC8  864C               	bsf	_MotoreFlag/(0+8),_MotoreFlag& (0+7),c	;volatile
 18323                           
 18324                           ;RemoteCan.c: 502: AbsFlag = 0;
 18325  015ACA  904C               	bcf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 18326                           
 18327                           ;RemoteCan.c: 503: SterzoFlag = 0;
 18328  015ACC  9A4C               	bcf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 18329                           
 18330                           ;RemoteCan.c: 504: } else {
 18331  015ACE  D007               	goto	l7050
 18332  015AD0                     l7040:
 18333                           
 18334                           ;RemoteCan.c: 505: if (data[0] == 0x01) {
 18335  015AD0  042A               	decf	_data,w,c
 18336  015AD2  B4D8               	btfsc	status,2,c
 18337                           
 18338                           ;RemoteCan.c: 506: AbsFlag = 1;
 18339  015AD4  804C               	bsf	_AbsFlag/(0+8),_AbsFlag& (0+7),c	;volatile
 18340                           
 18341                           ;RemoteCan.c: 507: }
 18342                           ;RemoteCan.c: 508: if (data[0] == 0x02) {
 18343  015AD6  0E02               	movlw	2
 18344  015AD8  182A               	xorwf	_data,w,c
 18345  015ADA  B4D8               	btfsc	status,2,c
 18346                           
 18347                           ;RemoteCan.c: 509: SterzoFlag = 1;
 18348  015ADC  8A4C               	bsf	_SterzoFlag/(0+8),_SterzoFlag& (0+7),c	;volatile
 18349  015ADE                     l7050:
 18350                           
 18351                           ;RemoteCan.c: 516: }
 18352                           ;RemoteCan.c: 518: if ((id == 0b00000000110)&&(RTR_Flag == 0)) {
 18353  015ADE  0E06               	movlw	6
 18354  015AE0  1805               	xorwf	_id,w,c	;volatile
 18355  015AE2  1006               	iorwf	_id+1,w,c	;volatile
 18356  015AE4  1007               	iorwf	_id+2,w,c	;volatile
 18357  015AE6  1008               	iorwf	_id+3,w,c	;volatile
 18358  015AE8  B4D8               	btfsc	status,2,c
 18359  015AEA  B84C               	btfsc	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18360  015AEC  D029               	goto	l7062
 18361                           
 18362                           ;RemoteCan.c: 519: left_speed = data_speed_rx[1];
 18363  015AEE  C101  F021         	movff	_data_speed_rx+1,_left_speed
 18364  015AF2  6A22               	clrf	_left_speed+1,c
 18365                           
 18366                           ;RemoteCan.c: 520: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 18367  015AF4  5021               	movf	_left_speed,w,c
 18368  015AF6  0100               	movlb	0	; () banked
 18369  015AF8  6F71               	movwf	??_CAN_Rx& (0+255),b
 18370  015AFA  0101               	movlb	1	; () banked
 18371  015AFC  5100               	movf	_data_speed_rx& (0+255),w,b
 18372  015AFE  6E21               	movwf	_left_speed,c
 18373  015B00  C071  F022         	movff	??_CAN_Rx,_left_speed+1
 18374                           
 18375                           ; BSR set to: 1
 18376                           ;RemoteCan.c: 521: right_speed = data_speed_rx[3];
 18377  015B04  C103  F023         	movff	_data_speed_rx+3,_right_speed
 18378  015B08  6A24               	clrf	_right_speed+1,c
 18379                           
 18380                           ;RemoteCan.c: 522: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 18381  015B0A  5023               	movf	_right_speed,w,c
 18382  015B0C  0100               	movlb	0	; () banked
 18383  015B0E  6F71               	movwf	??_CAN_Rx& (0+255),b
 18384  015B10  0101               	movlb	1	; () banked
 18385  015B12  5102               	movf	(_data_speed_rx+2)& (0+255),w,b
 18386  015B14  6E23               	movwf	_right_speed,c
 18387  015B16  C071  F024         	movff	??_CAN_Rx,_right_speed+1
 18388                           
 18389                           ; BSR set to: 1
 18390                           ;RemoteCan.c: 523: actual_speed = (right_speed + left_speed) / 2;
 18391  015B1A  5021               	movf	_left_speed,w,c
 18392  015B1C  2423               	addwf	_right_speed,w,c
 18393  015B1E  0100               	movlb	0	; () banked
 18394  015B20  6F71               	movwf	??_CAN_Rx& (0+255),b
 18395  015B22  5022               	movf	_left_speed+1,w,c
 18396  015B24  2024               	addwfc	_right_speed+1,w,c
 18397  015B26  0100               	movlb	0	; () banked
 18398  015B28  6F72               	movwf	(??_CAN_Rx+1)& (0+255),b
 18399  015B2A  90D8               	bcf	status,0,c
 18400  015B2C  0100               	movlb	0	; () banked
 18401  015B2E  3172               	rrcf	(??_CAN_Rx+1)& (0+255),w,b
 18402  015B30  0100               	movlb	0	; () banked
 18403  015B32  6F73               	movwf	(??_CAN_Rx+2)& (0+255),b
 18404  015B34  0100               	movlb	0	; () banked
 18405  015B36  3171               	rrcf	??_CAN_Rx& (0+255),w,b
 18406  015B38  0100               	movlb	0	; () banked
 18407  015B3A  6FDF               	movwf	_actual_speed& (0+255),b
 18408  015B3C  C073  F0E0         	movff	??_CAN_Rx+2,_actual_speed+1
 18409  015B40                     l7062:
 18410                           
 18411                           ;RemoteCan.c: 524: }
 18412                           ;RemoteCan.c: 526: if (id == 0b00000001001) {
 18413  015B40  0E09               	movlw	9
 18414  015B42  1805               	xorwf	_id,w,c	;volatile
 18415  015B44  1006               	iorwf	_id+1,w,c	;volatile
 18416  015B46  1007               	iorwf	_id+2,w,c	;volatile
 18417  015B48  1008               	iorwf	_id+3,w,c	;volatile
 18418  015B4A  A4D8               	btfss	status,2,c
 18419  015B4C  0012               	return	
 18420                           
 18421                           ;RemoteCan.c: 527: battery = data[0];
 18422  015B4E  C02A  F027         	movff	_data,_battery	;volatile
 18423  015B52  0012               	return	
 18424  015B54                     __end_of_CAN_Rx:
 18425                           	opt stack 0
 18426                           tblptru	equ	0xFF8
 18427                           tblptrh	equ	0xFF7
 18428                           tblptrl	equ	0xFF6
 18429                           tablat	equ	0xFF5
 18430                           prodh	equ	0xFF4
 18431                           prodl	equ	0xFF3
 18432                           intcon	equ	0xFF2
 18433                           postinc0	equ	0xFEE
 18434                           wreg	equ	0xFE8
 18435                           indf1	equ	0xFE7
 18436                           plusw1	equ	0xFE3
 18437                           fsr1h	equ	0xFE2
 18438                           fsr1l	equ	0xFE1
 18439                           indf2	equ	0xFDF
 18440                           postinc2	equ	0xFDE
 18441                           plusw2	equ	0xFDB
 18442                           fsr2h	equ	0xFDA
 18443                           fsr2l	equ	0xFD9
 18444                           status	equ	0xFD8
 18445                           
 18446 ;; *************** function _ISR_bassa *****************
 18447 ;; Defined at:
 18448 ;;		line 169 in file "RemoteCan.c"
 18449 ;; Parameters:    Size  Location     Type
 18450 ;;		None
 18451 ;; Auto vars:     Size  Location     Type
 18452 ;;		None
 18453 ;; Return value:  Size  Location     Type
 18454 ;;		None               void
 18455 ;; Registers used:
 18456 ;;		wreg, status,2, status,0
 18457 ;; Tracked objects:
 18458 ;;		On entry : 0/0
 18459 ;;		On exit  : 0/0
 18460 ;;		Unchanged: 0/0
 18461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18464 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18465 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18466 ;;Total ram usage:       17 bytes
 18467 ;; Hardware stack levels used:    1
 18468 ;; Hardware stack levels required when called:    2
 18469 ;; This function calls:
 18470 ;;		Nothing
 18471 ;; This function is called by:
 18472 ;;		Interrupt level 1
 18473 ;; This function uses a non-reentrant model
 18474 ;;
 18475                           
 18476                           	psect	intcodelo
 18477  000018                     __pintcodelo:
 18478                           	opt stack 0
 18479  000018                     _ISR_bassa:
 18480                           	opt stack 20
 18481                           
 18482                           ;incstack = 0
 18483  000018  804E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 18484  00001A  CFD8 F02B          	movff	status,??_ISR_bassa
 18485  00001E  CFE8 F02C          	movff	wreg,??_ISR_bassa+1
 18486  000022  CFE0 F02D          	movff	bsr,??_ISR_bassa+2
 18487  000026  CFFA F02E          	movff	pclath,??_ISR_bassa+3
 18488  00002A  CFFB F02F          	movff	pclatu,??_ISR_bassa+4
 18489  00002E  CFE9 F030          	movff	fsr0l,??_ISR_bassa+5
 18490  000032  CFEA F031          	movff	fsr0h,??_ISR_bassa+6
 18491  000036  CFE1 F032          	movff	fsr1l,??_ISR_bassa+7
 18492  00003A  CFE2 F033          	movff	fsr1h,??_ISR_bassa+8
 18493  00003E  CFD9 F034          	movff	fsr2l,??_ISR_bassa+9
 18494  000042  CFDA F035          	movff	fsr2h,??_ISR_bassa+10
 18495  000046  CFF3 F036          	movff	prodl,??_ISR_bassa+11
 18496  00004A  CFF4 F037          	movff	prodh,??_ISR_bassa+12
 18497  00004E  CFF6 F038          	movff	tblptrl,??_ISR_bassa+13
 18498  000052  CFF7 F039          	movff	tblptrh,??_ISR_bassa+14
 18499  000056  CFF8 F03A          	movff	tblptru,??_ISR_bassa+15
 18500  00005A  CFF5 F03B          	movff	tablat,??_ISR_bassa+16
 18501                           
 18502                           ;RemoteCan.c: 170: if (PIR2bits.TMR3IF == 1) {
 18503  00005E  A2A1               	btfss	4001,1,c	;volatile
 18504  000060  D00B               	goto	i1l787
 18505                           
 18506                           ;RemoteCan.c: 171: time_counter++;
 18507  000062  0E01               	movlw	1
 18508  000064  261D               	addwf	_time_counter,f,c	;volatile
 18509  000066  0E00               	movlw	0
 18510  000068  221E               	addwfc	_time_counter+1,f,c	;volatile
 18511  00006A  221F               	addwfc	_time_counter+2,f,c	;volatile
 18512  00006C  2220               	addwfc	_time_counter+3,f,c	;volatile
 18513                           
 18514                           ;RemoteCan.c: 172: TMR3H = 0x63;
 18515  00006E  0E63               	movlw	99
 18516  000070  6EB3               	movwf	4019,c	;volatile
 18517                           
 18518                           ;RemoteCan.c: 173: TMR3L = 0xC0;
 18519  000072  0EC0               	movlw	192
 18520  000074  6EB2               	movwf	4018,c	;volatile
 18521                           
 18522                           ;RemoteCan.c: 174: PIR2bits.TMR3IF = 0;
 18523  000076  92A1               	bcf	4001,1,c	;volatile
 18524  000078                     i1l787:
 18525  000078  C03B  FFF5         	movff	??_ISR_bassa+16,tablat
 18526  00007C  C03A  FFF8         	movff	??_ISR_bassa+15,tblptru
 18527  000080  C039  FFF7         	movff	??_ISR_bassa+14,tblptrh
 18528  000084  C038  FFF6         	movff	??_ISR_bassa+13,tblptrl
 18529  000088  C037  FFF4         	movff	??_ISR_bassa+12,prodh
 18530  00008C  C036  FFF3         	movff	??_ISR_bassa+11,prodl
 18531  000090  C035  FFDA         	movff	??_ISR_bassa+10,fsr2h
 18532  000094  C034  FFD9         	movff	??_ISR_bassa+9,fsr2l
 18533  000098  C033  FFE2         	movff	??_ISR_bassa+8,fsr1h
 18534  00009C  C032  FFE1         	movff	??_ISR_bassa+7,fsr1l
 18535  0000A0  C031  FFEA         	movff	??_ISR_bassa+6,fsr0h
 18536  0000A4  C030  FFE9         	movff	??_ISR_bassa+5,fsr0l
 18537  0000A8  C02F  FFFB         	movff	??_ISR_bassa+4,pclatu
 18538  0000AC  C02E  FFFA         	movff	??_ISR_bassa+3,pclath
 18539  0000B0  C02D  FFE0         	movff	??_ISR_bassa+2,bsr
 18540  0000B4  C02C  FFE8         	movff	??_ISR_bassa+1,wreg
 18541  0000B8  C02B  FFD8         	movff	??_ISR_bassa,status
 18542  0000BC  904E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 18543  0000BE  0010               	retfie	
 18544  0000C0                     __end_of_ISR_bassa:
 18545                           	opt stack 0
 18546                           pclatu	equ	0xFFB
 18547                           pclath	equ	0xFFA
 18548                           tblptru	equ	0xFF8
 18549                           tblptrh	equ	0xFF7
 18550                           tblptrl	equ	0xFF6
 18551                           tablat	equ	0xFF5
 18552                           prodh	equ	0xFF4
 18553                           prodl	equ	0xFF3
 18554                           intcon	equ	0xFF2
 18555                           postinc0	equ	0xFEE
 18556                           fsr0h	equ	0xFEA
 18557                           fsr0l	equ	0xFE9
 18558                           wreg	equ	0xFE8
 18559                           indf1	equ	0xFE7
 18560                           plusw1	equ	0xFE3
 18561                           fsr1h	equ	0xFE2
 18562                           fsr1l	equ	0xFE1
 18563                           bsr	equ	0xFE0
 18564                           indf2	equ	0xFDF
 18565                           postinc2	equ	0xFDE
 18566                           plusw2	equ	0xFDB
 18567                           fsr2h	equ	0xFDA
 18568                           fsr2l	equ	0xFD9
 18569                           status	equ	0xFD8
 18570                           
 18571 ;; *************** function _ISR_alta *****************
 18572 ;; Defined at:
 18573 ;;		line 113 in file "RemoteCan.c"
 18574 ;; Parameters:    Size  Location     Type
 18575 ;;		None
 18576 ;; Auto vars:     Size  Location     Type
 18577 ;;  i               1   16[BANK0 ] unsigned char 
 18578 ;; Return value:  Size  Location     Type
 18579 ;;		None               void
 18580 ;; Registers used:
 18581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18582 ;; Tracked objects:
 18583 ;;		On entry : 0/0
 18584 ;;		On exit  : 0/0
 18585 ;;		Unchanged: 0/0
 18586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18588 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18589 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18590 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18591 ;;Total ram usage:       17 bytes
 18592 ;; Hardware stack levels used:    1
 18593 ;; Hardware stack levels required when called:    1
 18594 ;; This function calls:
 18595 ;;		_CANisRxReady
 18596 ;;		_CANreceiveMessage
 18597 ;;		i2_CANisTxReady
 18598 ;;		i2_CANsendMessage
 18599 ;; This function is called by:
 18600 ;;		Interrupt level 2
 18601 ;; This function uses a non-reentrant model
 18602 ;;
 18603                           
 18604                           	psect	intcode
 18605  000008                     __pintcode:
 18606                           	opt stack 0
 18607  000008                     _ISR_alta:
 18608                           	opt stack 20
 18609                           
 18610                           ;incstack = 0
 18611  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 18612  00000A  CFFA F062          	movff	pclath,??_ISR_alta+2
 18613  00000E  CFFB F063          	movff	pclatu,??_ISR_alta+3
 18614  000012  EF5C  F0A3         	goto	int_func
 18615                           pclatu	equ	0xFFB
 18616                           pclath	equ	0xFFA
 18617                           tblptru	equ	0xFF8
 18618                           tblptrh	equ	0xFF7
 18619                           tblptrl	equ	0xFF6
 18620                           tablat	equ	0xFF5
 18621                           prodh	equ	0xFF4
 18622                           prodl	equ	0xFF3
 18623                           intcon	equ	0xFF2
 18624                           postinc0	equ	0xFEE
 18625                           fsr0h	equ	0xFEA
 18626                           fsr0l	equ	0xFE9
 18627                           wreg	equ	0xFE8
 18628                           indf1	equ	0xFE7
 18629                           plusw1	equ	0xFE3
 18630                           fsr1h	equ	0xFE2
 18631                           fsr1l	equ	0xFE1
 18632                           bsr	equ	0xFE0
 18633                           indf2	equ	0xFDF
 18634                           postinc2	equ	0xFDE
 18635                           plusw2	equ	0xFDB
 18636                           fsr2h	equ	0xFDA
 18637                           fsr2l	equ	0xFD9
 18638                           status	equ	0xFD8
 18639                           
 18640                           	psect	intcode_body
 18641  0146B8                     __pintcode_body:
 18642                           	opt stack 20
 18643  0146B8                     int_func:
 18644                           	opt stack 20
 18645  0146B8  CFE9 F064          	movff	fsr0l,??_ISR_alta+4
 18646  0146BC  CFEA F065          	movff	fsr0h,??_ISR_alta+5
 18647  0146C0  CFE1 F066          	movff	fsr1l,??_ISR_alta+6
 18648  0146C4  CFE2 F067          	movff	fsr1h,??_ISR_alta+7
 18649  0146C8  CFD9 F068          	movff	fsr2l,??_ISR_alta+8
 18650  0146CC  CFDA F069          	movff	fsr2h,??_ISR_alta+9
 18651  0146D0  CFF3 F06A          	movff	prodl,??_ISR_alta+10
 18652  0146D4  CFF4 F06B          	movff	prodh,??_ISR_alta+11
 18653  0146D8  CFF6 F06C          	movff	tblptrl,??_ISR_alta+12
 18654  0146DC  CFF7 F06D          	movff	tblptrh,??_ISR_alta+13
 18655  0146E0  CFF8 F06E          	movff	tblptru,??_ISR_alta+14
 18656  0146E4  CFF5 F06F          	movff	tablat,??_ISR_alta+15
 18657                           
 18658                           ;RemoteCan.c: 114: if ((PIR3bits.RXB1IF == 1) || (PIR3bits.RXB0IF == 1)) {
 18659  0146E8  A2A4               	btfss	4004,1,c	;volatile
 18660  0146EA  B0A4               	btfsc	4004,0,c	;volatile
 18661  0146EC  D001               	goto	i2l9388
 18662  0146EE  D0B5               	goto	i2l783
 18663  0146F0                     i2l9388:
 18664                           
 18665                           ;RemoteCan.c: 115: if (CANisRxReady()) {
 18666  0146F0  EC97  F0B1         	call	_CANisRxReady	;wreg free
 18667  0146F4  0900               	iorlw	0
 18668  0146F6  B4D8               	btfsc	status,2,c
 18669  0146F8  D0AC               	goto	i2l9448
 18670                           
 18671                           ;RemoteCan.c: 116: CANreceiveMessage(&msg);
 18672  0146FA  0E0D               	movlw	low _msg
 18673  0146FC  6E3C               	movwf	CANreceiveMessage@msg,c
 18674  0146FE  0E01               	movlw	high _msg
 18675  014700  6E3D               	movwf	CANreceiveMessage@msg+1,c
 18676  014702  EC05  F097         	call	_CANreceiveMessage	;wreg free
 18677                           
 18678                           ;RemoteCan.c: 117: RTR_Flag = msg.RTR;
 18679  014706  0101               	movlb	1	; () banked
 18680  014708  A11B               	btfss	(_msg+14)& (0+255),0,b
 18681  01470A  D002               	goto	i2u1266_40
 18682  01470C  884C               	bsf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18683  01470E  D001               	goto	i2l9394
 18684  014710                     i2u1266_40:
 18685  014710  984C               	bcf	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18686  014712                     i2l9394:
 18687                           
 18688                           ;RemoteCan.c: 118: id = msg.identifier;
 18689  014712  C10D  F005         	movff	_msg,_id	;volatile
 18690  014716  C10E  F006         	movff	_msg+1,_id+1	;volatile
 18691  01471A  C10F  F007         	movff	_msg+2,_id+2	;volatile
 18692  01471E  C110  F008         	movff	_msg+3,_id+3	;volatile
 18693                           
 18694                           ;RemoteCan.c: 119: newMessageCan = 1;
 18695  014722  8E4C               	bsf	_newMessageCan/(0+8),_newMessageCan& (0+7),c	;volatile
 18696                           
 18697                           ;RemoteCan.c: 120: if (id == 0b00000000110) {
 18698  014724  0E06               	movlw	6
 18699  014726  1805               	xorwf	_id,w,c	;volatile
 18700  014728  1006               	iorwf	_id+1,w,c	;volatile
 18701  01472A  1007               	iorwf	_id+2,w,c	;volatile
 18702  01472C  1008               	iorwf	_id+3,w,c	;volatile
 18703  01472E  A4D8               	btfss	status,2,c
 18704  014730  D01F               	goto	i2l9412
 18705                           
 18706                           ;RemoteCan.c: 121: for (unsigned char i = 0; i < 8; i++) {
 18707  014732  0E00               	movlw	0
 18708  014734  0100               	movlb	0	; () banked
 18709  014736  6F70               	movwf	ISR_alta@i& (0+255),b
 18710  014738                     i2l9402:
 18711                           
 18712                           ; BSR set to: 0
 18713  014738  0E07               	movlw	7
 18714  01473A  0100               	movlb	0	; () banked
 18715  01473C  6570               	cpfsgt	ISR_alta@i& (0+255),b
 18716  01473E  D001               	goto	i2l9406
 18717  014740  D017               	goto	i2l9412
 18718  014742                     i2l9406:
 18719                           
 18720                           ; BSR set to: 0
 18721                           ;RemoteCan.c: 122: data_speed_rx[i] = msg.data[i];
 18722  014742  0100               	movlb	0	; () banked
 18723  014744  5170               	movf	ISR_alta@i& (0+255),w,b
 18724  014746  0D01               	mullw	1
 18725  014748  0E11               	movlw	low (_msg+4)
 18726  01474A  24F3               	addwf	prodl,w,c
 18727  01474C  6ED9               	movwf	fsr2l,c
 18728  01474E  0E01               	movlw	high (_msg+4)
 18729  014750  20F4               	addwfc	prodh,w,c
 18730  014752  6EDA               	movwf	fsr2h,c
 18731  014754  0100               	movlb	0	; () banked
 18732  014756  5170               	movf	ISR_alta@i& (0+255),w,b
 18733  014758  0D01               	mullw	1
 18734  01475A  0E00               	movlw	low _data_speed_rx
 18735  01475C  24F3               	addwf	prodl,w,c
 18736  01475E  6EE1               	movwf	fsr1l,c
 18737  014760  0E01               	movlw	high _data_speed_rx
 18738  014762  20F4               	addwfc	prodh,w,c
 18739  014764  6EE2               	movwf	fsr1h,c
 18740  014766  CFDF FFE7          	movff	indf2,indf1
 18741                           
 18742                           ; BSR set to: 0
 18743  01476A  0100               	movlb	0	; () banked
 18744  01476C  2B70               	incf	ISR_alta@i& (0+255),f,b
 18745  01476E  D7E4               	goto	i2l9402
 18746  014770                     i2l9412:
 18747                           
 18748                           ;RemoteCan.c: 123: }
 18749                           ;RemoteCan.c: 124: }
 18750                           ;RemoteCan.c: 126: if (id == 0b00000001011) {
 18751  014770  0E0B               	movlw	11
 18752  014772  1805               	xorwf	_id,w,c	;volatile
 18753  014774  1006               	iorwf	_id+1,w,c	;volatile
 18754  014776  1007               	iorwf	_id+2,w,c	;volatile
 18755  014778  1008               	iorwf	_id+3,w,c	;volatile
 18756  01477A  A4D8               	btfss	status,2,c
 18757  01477C  D01C               	goto	i2l773
 18758                           
 18759                           ;RemoteCan.c: 127: if (msg.data[0] == 1) {
 18760  01477E  0101               	movlb	1	; () banked
 18761  014780  0511               	decf	(_msg+4)& (0+255),w,b
 18762  014782  A4D8               	btfss	status,2,c
 18763  014784  D002               	goto	i2l9418
 18764                           
 18765                           ; BSR set to: 1
 18766                           ;RemoteCan.c: 128: space_available = 1;
 18767  014786  824D               	bsf	_space_available/(0+8),_space_available& (0+7),c	;volatile
 18768                           
 18769                           ;RemoteCan.c: 129: F2_switch = 0;
 18770  014788  944C               	bcf	_F2_switch/(0+8),_F2_switch& (0+7),c	;volatile
 18771  01478A                     i2l9418:
 18772                           
 18773                           ; BSR set to: 1
 18774                           ;RemoteCan.c: 130: }
 18775                           ;RemoteCan.c: 131: if ((msg.data[0] == 3)&&(parking_state == 2)) {
 18776  01478A  0E03               	movlw	3
 18777  01478C  0101               	movlb	1	; () banked
 18778  01478E  1911               	xorwf	(_msg+4)& (0+255),w,b
 18779  014790  A4D8               	btfss	status,2,c
 18780  014792  D011               	goto	i2l773
 18781                           
 18782                           ; BSR set to: 1
 18783  014794  0E02               	movlw	2
 18784  014796  1828               	xorwf	_parking_state,w,c	;volatile
 18785  014798  A4D8               	btfss	status,2,c
 18786  01479A  D00D               	goto	i2l773
 18787                           
 18788                           ; BSR set to: 1
 18789                           ;RemoteCan.c: 132: F1_switch = 0;
 18790  01479C  924C               	bcf	_F1_switch/(0+8),_F1_switch& (0+7),c	;volatile
 18791                           
 18792                           ; BSR set to: 1
 18793                           ;RemoteCan.c: 133: pr_time_6 = time_counter + (2000 / 10);
 18794  01479E  0EC8               	movlw	200
 18795  0147A0  241D               	addwf	_time_counter,w,c	;volatile
 18796  0147A2  6E19               	movwf	_pr_time_6,c	;volatile
 18797  0147A4  0E00               	movlw	0
 18798  0147A6  201E               	addwfc	_time_counter+1,w,c	;volatile
 18799  0147A8  6E1A               	movwf	_pr_time_6+1,c	;volatile
 18800  0147AA  0E00               	movlw	0
 18801  0147AC  201F               	addwfc	_time_counter+2,w,c	;volatile
 18802  0147AE  6E1B               	movwf	_pr_time_6+2,c	;volatile
 18803  0147B0  0E00               	movlw	0
 18804  0147B2  2020               	addwfc	_time_counter+3,w,c	;volatile
 18805  0147B4  6E1C               	movwf	_pr_time_6+3,c	;volatile
 18806  0147B6                     i2l773:
 18807                           
 18808                           ;RemoteCan.c: 134: }
 18809                           ;RemoteCan.c: 135: }
 18810                           ;RemoteCan.c: 137: if (id == 0b00000001110) {
 18811  0147B6  0E0E               	movlw	14
 18812  0147B8  1805               	xorwf	_id,w,c	;volatile
 18813  0147BA  1006               	iorwf	_id+1,w,c	;volatile
 18814  0147BC  1007               	iorwf	_id+2,w,c	;volatile
 18815  0147BE  1008               	iorwf	_id+3,w,c	;volatile
 18816  0147C0  A4D8               	btfss	status,2,c
 18817  0147C2  D008               	goto	i2l9428
 18818                           
 18819                           ;RemoteCan.c: 138: steering_correction_dir = msg.data[1];
 18820  0147C4  0101               	movlb	1	; () banked
 18821  0147C6  A112               	btfss	(_msg+5)& (0+255),0,b
 18822  0147C8  D002               	goto	i2u1276_40
 18823  0147CA  844D               	bsf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 18824  0147CC  D001               	goto	i2u1277_45
 18825  0147CE                     i2u1276_40:
 18826  0147CE  944D               	bcf	_steering_correction_dir/(0+8),_steering_correction_dir& (0+7),c	;volatile
 18827  0147D0                     i2u1277_45:
 18828                           
 18829                           ;RemoteCan.c: 139: steering_correction = msg.data[0];
 18830  0147D0  C111  F0E6         	movff	_msg+4,_steering_correction	;volatile
 18831  0147D4                     i2l9428:
 18832                           
 18833                           ;RemoteCan.c: 140: }
 18834                           ;RemoteCan.c: 142: if (id == 0xAA) {
 18835  0147D4  0EAA               	movlw	170
 18836  0147D6  1805               	xorwf	_id,w,c	;volatile
 18837  0147D8  1006               	iorwf	_id+1,w,c	;volatile
 18838  0147DA  1007               	iorwf	_id+2,w,c	;volatile
 18839  0147DC  1008               	iorwf	_id+3,w,c	;volatile
 18840  0147DE  A4D8               	btfss	status,2,c
 18841  0147E0  D00B               	goto	i2l9434
 18842                           
 18843                           ;RemoteCan.c: 143: user_data = msg.data[1];
 18844  0147E2  C112  F025         	movff	_msg+5,_user_data
 18845  0147E6  6A26               	clrf	_user_data+1,c
 18846                           
 18847                           ;RemoteCan.c: 144: user_data = ((user_data << 8) | msg.data[0]);
 18848  0147E8  5025               	movf	_user_data,w,c
 18849  0147EA  0100               	movlb	0	; () banked
 18850  0147EC  6F60               	movwf	??_ISR_alta& (0+255),b
 18851  0147EE  0101               	movlb	1	; () banked
 18852  0147F0  5111               	movf	(_msg+4)& (0+255),w,b
 18853  0147F2  6E25               	movwf	_user_data,c
 18854  0147F4  C060  F026         	movff	??_ISR_alta,_user_data+1
 18855  0147F8                     i2l9434:
 18856                           
 18857                           ;RemoteCan.c: 145: }
 18858                           ;RemoteCan.c: 147: if (id == 0b00000000010) {
 18859  0147F8  0E02               	movlw	2
 18860  0147FA  1805               	xorwf	_id,w,c	;volatile
 18861  0147FC  1006               	iorwf	_id+1,w,c	;volatile
 18862  0147FE  1007               	iorwf	_id+2,w,c	;volatile
 18863  014800  1008               	iorwf	_id+3,w,c	;volatile
 18864  014802  B4D8               	btfsc	status,2,c
 18865                           
 18866                           ;RemoteCan.c: 148: if (RTR_Flag == 1) {
 18867  014804  A84C               	btfss	_RTR_Flag/(0+8),_RTR_Flag& (0+7),c	;volatile
 18868  014806  D025               	goto	i2l9448
 18869                           
 18870                           ;RemoteCan.c: 149: pr_time_4 = time_counter;
 18871  014808  C01D  F011         	movff	_time_counter,_pr_time_4	;volatile
 18872  01480C  C01E  F012         	movff	_time_counter+1,_pr_time_4+1	;volatile
 18873  014810  C01F  F013         	movff	_time_counter+2,_pr_time_4+2	;volatile
 18874  014814  C020  F014         	movff	_time_counter+3,_pr_time_4+3	;volatile
 18875                           
 18876                           ;RemoteCan.c: 150: data[0] = 0x03;
 18877  014818  0E03               	movlw	3
 18878  01481A  6E2A               	movwf	_data,c
 18879                           
 18880                           ;RemoteCan.c: 151: _delay((unsigned long)((10)*(16000000/4000000.0)));
 18881  01481C  0E0D               	movlw	13
 18882  01481E                     i2u1316_47:
 18883  01481E  2EE8               	decfsz	wreg,f,c
 18884  014820  D7FE               	goto	i2u1316_47
 18885  014822  F000               	nop	
 18886  014824                     i2l9444:
 18887  014824  EC45  F0B1         	call	i2_CANisTxReady	;wreg free
 18888  014828  06E8               	decf	wreg,f,c
 18889  01482A  A4D8               	btfss	status,2,c
 18890  01482C  D7FB               	goto	i2l9444
 18891                           
 18892                           ;RemoteCan.c: 153: CANsendMessage(0b00000000010, data, 8, CAN_CONFIG_STD_MSG & CAN_NORMA
      +                          L_TX_FRAME & CAN_TX_PRIORITY_0);
 18893  01482E  0E02               	movlw	2
 18894  014830  6E3C               	movwf	i2CANsendMessage@identifier,c
 18895  014832  0E00               	movlw	0
 18896  014834  6E3D               	movwf	i2CANsendMessage@identifier+1,c
 18897  014836  0E00               	movlw	0
 18898  014838  6E3E               	movwf	i2CANsendMessage@identifier+2,c
 18899  01483A  0E00               	movlw	0
 18900  01483C  6E3F               	movwf	i2CANsendMessage@identifier+3,c
 18901  01483E  0E2A               	movlw	low _data
 18902  014840  6E40               	movwf	i2CANsendMessage@data,c
 18903  014842  0E00               	movlw	high _data
 18904  014844  6E41               	movwf	i2CANsendMessage@data+1,c
 18905  014846  0E08               	movlw	8
 18906  014848  6E42               	movwf	i2CANsendMessage@dataLength,c
 18907  01484A  0EBC               	movlw	188
 18908  01484C  6E43               	movwf	i2CANsendMessage@flags,c
 18909  01484E  EC30  F091         	call	i2_CANsendMessage	;wreg free
 18910  014852                     i2l9448:
 18911                           
 18912                           ;RemoteCan.c: 159: }
 18913                           ;RemoteCan.c: 160: }
 18914                           ;RemoteCan.c: 161: }
 18915                           ;RemoteCan.c: 162: LATDbits.LATD2 = 1;
 18916  014852  848C               	bsf	3980,2,c	;volatile
 18917                           
 18918                           ;RemoteCan.c: 163: LATDbits.LATD3 = 1;
 18919  014854  868C               	bsf	3980,3,c	;volatile
 18920                           
 18921                           ;RemoteCan.c: 164: PIR3bits.RXB1IF = 0;
 18922  014856  92A4               	bcf	4004,1,c	;volatile
 18923                           
 18924                           ;RemoteCan.c: 165: PIR3bits.RXB0IF = 0;
 18925  014858  90A4               	bcf	4004,0,c	;volatile
 18926  01485A                     i2l783:
 18927  01485A  C06F  FFF5         	movff	??_ISR_alta+15,tablat
 18928  01485E  C06E  FFF8         	movff	??_ISR_alta+14,tblptru
 18929  014862  C06D  FFF7         	movff	??_ISR_alta+13,tblptrh
 18930  014866  C06C  FFF6         	movff	??_ISR_alta+12,tblptrl
 18931  01486A  C06B  FFF4         	movff	??_ISR_alta+11,prodh
 18932  01486E  C06A  FFF3         	movff	??_ISR_alta+10,prodl
 18933  014872  C069  FFDA         	movff	??_ISR_alta+9,fsr2h
 18934  014876  C068  FFD9         	movff	??_ISR_alta+8,fsr2l
 18935  01487A  C067  FFE2         	movff	??_ISR_alta+7,fsr1h
 18936  01487E  C066  FFE1         	movff	??_ISR_alta+6,fsr1l
 18937  014882  C065  FFEA         	movff	??_ISR_alta+5,fsr0h
 18938  014886  C064  FFE9         	movff	??_ISR_alta+4,fsr0l
 18939  01488A  C063  FFFB         	movff	??_ISR_alta+3,pclatu
 18940  01488E  C062  FFFA         	movff	??_ISR_alta+2,pclath
 18941  014892  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 18942  014894  0011               	retfie		f
 18943  014896                     __end_of_ISR_alta:
 18944                           	opt stack 0
 18945                           pclatu	equ	0xFFB
 18946                           pclath	equ	0xFFA
 18947                           tblptru	equ	0xFF8
 18948                           tblptrh	equ	0xFF7
 18949                           tblptrl	equ	0xFF6
 18950                           tablat	equ	0xFF5
 18951                           prodh	equ	0xFF4
 18952                           prodl	equ	0xFF3
 18953                           intcon	equ	0xFF2
 18954                           postinc0	equ	0xFEE
 18955                           fsr0h	equ	0xFEA
 18956                           fsr0l	equ	0xFE9
 18957                           wreg	equ	0xFE8
 18958                           indf1	equ	0xFE7
 18959                           plusw1	equ	0xFE3
 18960                           fsr1h	equ	0xFE2
 18961                           fsr1l	equ	0xFE1
 18962                           bsr	equ	0xFE0
 18963                           indf2	equ	0xFDF
 18964                           postinc2	equ	0xFDE
 18965                           plusw2	equ	0xFDB
 18966                           fsr2h	equ	0xFDA
 18967                           fsr2l	equ	0xFD9
 18968                           status	equ	0xFD8
 18969                           
 18970 ;; *************** function i2_CANsendMessage *****************
 18971 ;; Defined at:
 18972 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 18973 ;; Parameters:    Size  Location     Type
 18974 ;;  identifier      4   17[COMRAM] unsigned long 
 18975 ;;  data            2   21[COMRAM] PTR unsigned char 
 18976 ;;		 -> data_speed(1), park_assist_state(8), data_brake(1), data_steering(1), 
 18977 ;;		 -> data(1), 
 18978 ;;  dataLength      1   23[COMRAM] unsigned char 
 18979 ;;  flags           1   24[COMRAM] enum E16909
 18980 ;; Auto vars:     Size  Location     Type
 18981 ;;  CANsendMessa    4   29[COMRAM] unsigned long 
 18982 ;; Return value:  Size  Location     Type
 18983 ;;		None               void
 18984 ;; Registers used:
 18985 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18986 ;; Tracked objects:
 18987 ;;		On entry : 0/0
 18988 ;;		On exit  : 0/0
 18989 ;;		Unchanged: 0/0
 18990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18991 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18992 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18993 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18994 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18995 ;;Total ram usage:       16 bytes
 18996 ;; Hardware stack levels used:    1
 18997 ;; This function calls:
 18998 ;;		Nothing
 18999 ;; This function is called by:
 19000 ;;		_ISR_alta
 19001 ;; This function uses a non-reentrant model
 19002 ;;
 19003                           
 19004                           	psect	text55
 19005  012260                     __ptext55:
 19006                           	opt stack 0
 19007  012260                     i2_CANsendMessage:
 19008                           	opt stack 20
 19009                           
 19010                           ;inc\CANlib.h: 296: unsigned long tamp;
 19011                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 19012                           
 19013                           ;incstack = 0
 19014  012260  010F               	movlb	15	; () banked
 19015  012262  B740               	btfsc	64,3,b	;volatile
 19016  012264  D115               	goto	i2l377
 19017                           
 19018                           ; BSR set to: 15
 19019                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 19020  012266  C042  FF45         	movff	i2CANsendMessage@dataLength,3909	;volatile
 19021                           
 19022                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 19023  01226A  AC43               	btfss	i2CANsendMessage@flags,6,c
 19024  01226C  D003               	goto	i2l378
 19025                           
 19026                           ; BSR set to: 15
 19027                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 19028  01226E  010F               	movlb	15	; () banked
 19029  012270  8D45               	bsf	69,6,b	;volatile
 19030  012272  D002               	goto	i2l379
 19031  012274                     i2l378:
 19032                           
 19033                           ; BSR set to: 15
 19034                           ;inc\CANlib.h: 302: else
 19035                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 19036  012274  010F               	movlb	15	; () banked
 19037  012276  9D45               	bcf	69,6,b	;volatile
 19038  012278                     i2l379:
 19039                           
 19040                           ; BSR set to: 15
 19041                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 19042  012278  A643               	btfss	i2CANsendMessage@flags,3,c
 19043  01227A  D066               	goto	i2l380
 19044                           
 19045                           ; BSR set to: 15
 19046                           ;inc\CANlib.h: 306: {
 19047                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 19048  01227C  503C               	movf	i2CANsendMessage@identifier,w,c
 19049  01227E  6E48               	movwf	i2CANsendMessage@tamp,c
 19050  012280  6A49               	clrf	i2CANsendMessage@tamp+1,c
 19051  012282  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 19052  012284  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 19053                           
 19054                           ; BSR set to: 15
 19055                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 19056  012286  C048  FF44         	movff	i2CANsendMessage@tamp,3908	;volatile
 19057                           
 19058                           ; BSR set to: 15
 19059                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 19060  01228A  0E00               	movlw	0
 19061  01228C  143C               	andwf	i2CANsendMessage@identifier,w,c
 19062  01228E  6E48               	movwf	i2CANsendMessage@tamp,c
 19063  012290  0EFF               	movlw	255
 19064  012292  143D               	andwf	i2CANsendMessage@identifier+1,w,c
 19065  012294  6E49               	movwf	i2CANsendMessage@tamp+1,c
 19066  012296  0E00               	movlw	0
 19067  012298  143E               	andwf	i2CANsendMessage@identifier+2,w,c
 19068  01229A  6E4A               	movwf	i2CANsendMessage@tamp+2,c
 19069  01229C  0E00               	movlw	0
 19070  01229E  143F               	andwf	i2CANsendMessage@identifier+3,w,c
 19071  0122A0  6E4B               	movwf	i2CANsendMessage@tamp+3,c
 19072                           
 19073                           ; BSR set to: 15
 19074                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 19075  0122A2  C048  F044         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19076  0122A6  C049  F045         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19077  0122AA  C04A  F046         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19078  0122AE  C04B  F047         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19079  0122B2  C045  F044         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19080  0122B6  C046  F045         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19081  0122BA  C047  F046         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19082  0122BE  6A47               	clrf	??i2_CANsendMessage+3,c
 19083  0122C0  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19084  0122C4  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19085  0122C8  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19086  0122CC  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19087                           
 19088                           ; BSR set to: 15
 19089                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 19090  0122D0  C048  FF43         	movff	i2CANsendMessage@tamp,3907	;volatile
 19091                           
 19092                           ; BSR set to: 15
 19093                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 19094  0122D4  0E00               	movlw	0
 19095  0122D6  010F               	movlb	15	; () banked
 19096  0122D8  6F42               	movwf	66,b	;volatile
 19097                           
 19098                           ; BSR set to: 15
 19099                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 19100  0122DA  010F               	movlb	15	; () banked
 19101  0122DC  8742               	bsf	66,3,b	;volatile
 19102                           
 19103                           ; BSR set to: 15
 19104                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 19105  0122DE  A03E               	btfss	i2CANsendMessage@identifier+2,0,c
 19106  0122E0  D002               	goto	i2l381
 19107                           
 19108                           ; BSR set to: 15
 19109                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 19110  0122E2  010F               	movlb	15	; () banked
 19111  0122E4  8142               	bsf	66,0,b	;volatile
 19112  0122E6                     i2l381:
 19113                           
 19114                           ; BSR set to: 15
 19115                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 19116  0122E6  A23E               	btfss	i2CANsendMessage@identifier+2,1,c
 19117  0122E8  D002               	goto	i2l382
 19118                           
 19119                           ; BSR set to: 15
 19120                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 19121  0122EA  010F               	movlb	15	; () banked
 19122  0122EC  8342               	bsf	66,1,b	;volatile
 19123  0122EE                     i2l382:
 19124                           
 19125                           ; BSR set to: 15
 19126                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 19127  0122EE  A43E               	btfss	i2CANsendMessage@identifier+2,2,c
 19128  0122F0  D002               	goto	i2l383
 19129                           
 19130                           ; BSR set to: 15
 19131                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 19132  0122F2  010F               	movlb	15	; () banked
 19133  0122F4  8B42               	bsf	66,5,b	;volatile
 19134  0122F6                     i2l383:
 19135                           
 19136                           ; BSR set to: 15
 19137                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 19138  0122F6  A63E               	btfss	i2CANsendMessage@identifier+2,3,c
 19139  0122F8  D002               	goto	i2l384
 19140                           
 19141                           ; BSR set to: 15
 19142                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 19143  0122FA  010F               	movlb	15	; () banked
 19144  0122FC  8D42               	bsf	66,6,b	;volatile
 19145  0122FE                     i2l384:
 19146                           
 19147                           ; BSR set to: 15
 19148                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 19149  0122FE  A83E               	btfss	i2CANsendMessage@identifier+2,4,c
 19150  012300  D002               	goto	i2l9156
 19151                           
 19152                           ; BSR set to: 15
 19153                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 19154  012302  010F               	movlb	15	; () banked
 19155  012304  8F42               	bsf	66,7,b	;volatile
 19156  012306                     i2l9156:
 19157                           
 19158                           ; BSR set to: 15
 19159                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 19160  012306  C03C  F044         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19161  01230A  C03D  F045         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19162  01230E  C03E  F046         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19163  012312  C03F  F047         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19164  012316  0E16               	movlw	22
 19165  012318  D005               	goto	i2u1227_40
 19166  01231A                     i2u1227_45:
 19167  01231A  90D8               	bcf	status,0,c
 19168  01231C  3247               	rrcf	??i2_CANsendMessage+3,f,c
 19169  01231E  3246               	rrcf	??i2_CANsendMessage+2,f,c
 19170  012320  3245               	rrcf	??i2_CANsendMessage+1,f,c
 19171  012322  3244               	rrcf	??i2_CANsendMessage,f,c
 19172  012324                     i2u1227_40:
 19173  012324  2EE8               	decfsz	wreg,f,c
 19174  012326  D7F9               	goto	i2u1227_45
 19175  012328  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19176  01232C  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19177  012330  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19178  012334  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19179                           
 19180                           ; BSR set to: 15
 19181                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 19182  012338  5048               	movf	i2CANsendMessage@tamp,w,c
 19183  01233A  6E48               	movwf	i2CANsendMessage@tamp,c
 19184  01233C  6A49               	clrf	i2CANsendMessage@tamp+1,c
 19185  01233E  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 19186  012340  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 19187                           
 19188                           ; BSR set to: 15
 19189                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 19190  012342  C048  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 19191                           
 19192                           ;inc\CANlib.h: 332: }
 19193  012346  D04D               	goto	i2l9176
 19194  012348                     i2l380:
 19195                           
 19196                           ; BSR set to: 15
 19197                           ;inc\CANlib.h: 334: else
 19198                           ;inc\CANlib.h: 336: {
 19199                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 19200  012348  010F               	movlb	15	; () banked
 19201  01234A  9742               	bcf	66,3,b	;volatile
 19202                           
 19203                           ; BSR set to: 15
 19204                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 19205  01234C  C03C  F044         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19206  012350  C03D  F045         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19207  012354  C03E  F046         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19208  012358  C03F  F047         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19209  01235C  0E04               	movlw	4
 19210  01235E  D005               	goto	i2u1228_40
 19211  012360                     i2u1228_45:
 19212  012360  90D8               	bcf	status,0,c
 19213  012362  3247               	rrcf	??i2_CANsendMessage+3,f,c
 19214  012364  3246               	rrcf	??i2_CANsendMessage+2,f,c
 19215  012366  3245               	rrcf	??i2_CANsendMessage+1,f,c
 19216  012368  3244               	rrcf	??i2_CANsendMessage,f,c
 19217  01236A                     i2u1228_40:
 19218  01236A  2EE8               	decfsz	wreg,f,c
 19219  01236C  D7F9               	goto	i2u1228_45
 19220  01236E  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19221  012372  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19222  012376  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19223  01237A  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19224                           
 19225                           ; BSR set to: 15
 19226                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 19227  01237E  5048               	movf	i2CANsendMessage@tamp,w,c
 19228  012380  6E48               	movwf	i2CANsendMessage@tamp,c
 19229  012382  6A49               	clrf	i2CANsendMessage@tamp+1,c
 19230  012384  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 19231  012386  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 19232                           
 19233                           ; BSR set to: 15
 19234                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 19235  012388  C048  FF41         	movff	i2CANsendMessage@tamp,3905	;volatile
 19236                           
 19237                           ; BSR set to: 15
 19238                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 19239  01238C  0E07               	movlw	7
 19240  01238E  143C               	andwf	i2CANsendMessage@identifier,w,c
 19241  012390  6E48               	movwf	i2CANsendMessage@tamp,c
 19242  012392  0E00               	movlw	0
 19243  012394  143D               	andwf	i2CANsendMessage@identifier+1,w,c
 19244  012396  6E49               	movwf	i2CANsendMessage@tamp+1,c
 19245  012398  0E00               	movlw	0
 19246  01239A  143E               	andwf	i2CANsendMessage@identifier+2,w,c
 19247  01239C  6E4A               	movwf	i2CANsendMessage@tamp+2,c
 19248  01239E  0E00               	movlw	0
 19249  0123A0  143F               	andwf	i2CANsendMessage@identifier+3,w,c
 19250  0123A2  6E4B               	movwf	i2CANsendMessage@tamp+3,c
 19251                           
 19252                           ; BSR set to: 15
 19253                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 19254  0123A4  C048  F044         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19255  0123A8  C049  F045         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19256  0123AC  C04A  F046         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19257  0123B0  C04B  F047         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19258  0123B4  0E05               	movlw	5
 19259  0123B6                     i2u1229_45:
 19260  0123B6  90D8               	bcf	status,0,c
 19261  0123B8  3644               	rlcf	??i2_CANsendMessage,f,c
 19262  0123BA  3645               	rlcf	??i2_CANsendMessage+1,f,c
 19263  0123BC  3646               	rlcf	??i2_CANsendMessage+2,f,c
 19264  0123BE  3647               	rlcf	??i2_CANsendMessage+3,f,c
 19265  0123C0  2EE8               	decfsz	wreg,f,c
 19266  0123C2  D7F9               	goto	i2u1229_45
 19267  0123C4  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19268  0123C8  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19269  0123CC  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19270  0123D0  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19271                           
 19272                           ; BSR set to: 15
 19273                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 19274  0123D4  010F               	movlb	15	; () banked
 19275  0123D6  5142               	movf	66,w,b	;volatile
 19276  0123D8  0B1F               	andlw	31
 19277  0123DA  010F               	movlb	15	; () banked
 19278  0123DC  6F42               	movwf	66,b	;volatile
 19279                           
 19280                           ; BSR set to: 15
 19281                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 19282  0123DE  C048  FF42         	movff	i2CANsendMessage@tamp,3906	;volatile
 19283  0123E2                     i2l9176:
 19284                           
 19285                           ; BSR set to: 15
 19286                           ;inc\CANlib.h: 347: }
 19287                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 19288  0123E2  A043               	btfss	i2CANsendMessage@flags,0,c
 19289  0123E4  D003               	goto	i2l387
 19290                           
 19291                           ; BSR set to: 15
 19292                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 19293  0123E6  010F               	movlb	15	; () banked
 19294  0123E8  8140               	bsf	64,0,b	;volatile
 19295  0123EA  D002               	goto	i2l388
 19296  0123EC                     i2l387:
 19297                           
 19298                           ; BSR set to: 15
 19299                           ;inc\CANlib.h: 351: else
 19300                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 19301  0123EC  010F               	movlb	15	; () banked
 19302  0123EE  9140               	bcf	64,0,b	;volatile
 19303  0123F0                     i2l388:
 19304                           
 19305                           ; BSR set to: 15
 19306                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 19307  0123F0  A243               	btfss	i2CANsendMessage@flags,1,c
 19308  0123F2  D003               	goto	i2l389
 19309                           
 19310                           ; BSR set to: 15
 19311                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 19312  0123F4  010F               	movlb	15	; () banked
 19313  0123F6  8340               	bsf	64,1,b	;volatile
 19314  0123F8  D002               	goto	i2l9182
 19315  0123FA                     i2l389:
 19316                           
 19317                           ; BSR set to: 15
 19318                           ;inc\CANlib.h: 355: else
 19319                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 19320  0123FA  010F               	movlb	15	; () banked
 19321  0123FC  9340               	bcf	64,1,b	;volatile
 19322  0123FE                     i2l9182:
 19323                           
 19324                           ; BSR set to: 15
 19325                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 19326  0123FE  C040  FFD9         	movff	i2CANsendMessage@data,fsr2l
 19327  012402  C041  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 19328  012406  50DF               	movf	indf2,w,c
 19329  012408  010F               	movlb	15	; () banked
 19330  01240A  6F46               	movwf	70,b	;volatile
 19331                           
 19332                           ; BSR set to: 15
 19333                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 19334  01240C  EE20 F001          	lfsr	2,1
 19335  012410  5040               	movf	i2CANsendMessage@data,w,c
 19336  012412  26D9               	addwf	fsr2l,f,c
 19337  012414  5041               	movf	i2CANsendMessage@data+1,w,c
 19338  012416  22DA               	addwfc	fsr2h,f,c
 19339  012418  50DF               	movf	indf2,w,c
 19340  01241A  010F               	movlb	15	; () banked
 19341  01241C  6F47               	movwf	71,b	;volatile
 19342                           
 19343                           ; BSR set to: 15
 19344                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 19345  01241E  EE20 F002          	lfsr	2,2
 19346  012422  5040               	movf	i2CANsendMessage@data,w,c
 19347  012424  26D9               	addwf	fsr2l,f,c
 19348  012426  5041               	movf	i2CANsendMessage@data+1,w,c
 19349  012428  22DA               	addwfc	fsr2h,f,c
 19350  01242A  50DF               	movf	indf2,w,c
 19351  01242C  010F               	movlb	15	; () banked
 19352  01242E  6F48               	movwf	72,b	;volatile
 19353                           
 19354                           ; BSR set to: 15
 19355                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 19356  012430  EE20 F003          	lfsr	2,3
 19357  012434  5040               	movf	i2CANsendMessage@data,w,c
 19358  012436  26D9               	addwf	fsr2l,f,c
 19359  012438  5041               	movf	i2CANsendMessage@data+1,w,c
 19360  01243A  22DA               	addwfc	fsr2h,f,c
 19361  01243C  50DF               	movf	indf2,w,c
 19362  01243E  010F               	movlb	15	; () banked
 19363  012440  6F49               	movwf	73,b	;volatile
 19364                           
 19365                           ; BSR set to: 15
 19366                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 19367  012442  EE20 F004          	lfsr	2,4
 19368  012446  5040               	movf	i2CANsendMessage@data,w,c
 19369  012448  26D9               	addwf	fsr2l,f,c
 19370  01244A  5041               	movf	i2CANsendMessage@data+1,w,c
 19371  01244C  22DA               	addwfc	fsr2h,f,c
 19372  01244E  50DF               	movf	indf2,w,c
 19373  012450  010F               	movlb	15	; () banked
 19374  012452  6F4A               	movwf	74,b	;volatile
 19375                           
 19376                           ; BSR set to: 15
 19377                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 19378  012454  EE20 F005          	lfsr	2,5
 19379  012458  5040               	movf	i2CANsendMessage@data,w,c
 19380  01245A  26D9               	addwf	fsr2l,f,c
 19381  01245C  5041               	movf	i2CANsendMessage@data+1,w,c
 19382  01245E  22DA               	addwfc	fsr2h,f,c
 19383  012460  50DF               	movf	indf2,w,c
 19384  012462  010F               	movlb	15	; () banked
 19385  012464  6F4B               	movwf	75,b	;volatile
 19386                           
 19387                           ; BSR set to: 15
 19388                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 19389  012466  EE20 F006          	lfsr	2,6
 19390  01246A  5040               	movf	i2CANsendMessage@data,w,c
 19391  01246C  26D9               	addwf	fsr2l,f,c
 19392  01246E  5041               	movf	i2CANsendMessage@data+1,w,c
 19393  012470  22DA               	addwfc	fsr2h,f,c
 19394  012472  50DF               	movf	indf2,w,c
 19395  012474  010F               	movlb	15	; () banked
 19396  012476  6F4C               	movwf	76,b	;volatile
 19397                           
 19398                           ; BSR set to: 15
 19399                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 19400  012478  EE20 F007          	lfsr	2,7
 19401  01247C  5040               	movf	i2CANsendMessage@data,w,c
 19402  01247E  26D9               	addwf	fsr2l,f,c
 19403  012480  5041               	movf	i2CANsendMessage@data+1,w,c
 19404  012482  22DA               	addwfc	fsr2h,f,c
 19405  012484  50DF               	movf	indf2,w,c
 19406  012486  010F               	movlb	15	; () banked
 19407  012488  6F4D               	movwf	77,b	;volatile
 19408                           
 19409                           ; BSR set to: 15
 19410                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 19411  01248A  010F               	movlb	15	; () banked
 19412  01248C  8740               	bsf	64,3,b	;volatile
 19413                           
 19414                           ; BSR set to: 15
 19415                           ;inc\CANlib.h: 368: return;
 19416  01248E  0012               	return	
 19417  012490                     i2l377:
 19418                           
 19419                           ; BSR set to: 15
 19420                           ;inc\CANlib.h: 369: }
 19421                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 19422  012490  010F               	movlb	15	; () banked
 19423  012492  B730               	btfsc	48,3,b	;volatile
 19424  012494  D115               	goto	i2l392
 19425                           
 19426                           ; BSR set to: 15
 19427                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 19428  012496  C042  FF35         	movff	i2CANsendMessage@dataLength,3893	;volatile
 19429                           
 19430                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 19431  01249A  AC43               	btfss	i2CANsendMessage@flags,6,c
 19432  01249C  D003               	goto	i2l393
 19433                           
 19434                           ; BSR set to: 15
 19435                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 19436  01249E  010F               	movlb	15	; () banked
 19437  0124A0  8D35               	bsf	53,6,b	;volatile
 19438  0124A2  D002               	goto	i2l394
 19439  0124A4                     i2l393:
 19440                           
 19441                           ; BSR set to: 15
 19442                           ;inc\CANlib.h: 378: else
 19443                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 19444  0124A4  010F               	movlb	15	; () banked
 19445  0124A6  9D35               	bcf	53,6,b	;volatile
 19446  0124A8                     i2l394:
 19447                           
 19448                           ; BSR set to: 15
 19449                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 19450  0124A8  A643               	btfss	i2CANsendMessage@flags,3,c
 19451  0124AA  D066               	goto	i2l395
 19452                           
 19453                           ; BSR set to: 15
 19454                           ;inc\CANlib.h: 382: {
 19455                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 19456  0124AC  503C               	movf	i2CANsendMessage@identifier,w,c
 19457  0124AE  6E48               	movwf	i2CANsendMessage@tamp,c
 19458  0124B0  6A49               	clrf	i2CANsendMessage@tamp+1,c
 19459  0124B2  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 19460  0124B4  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 19461                           
 19462                           ; BSR set to: 15
 19463                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 19464  0124B6  C048  FF34         	movff	i2CANsendMessage@tamp,3892	;volatile
 19465                           
 19466                           ; BSR set to: 15
 19467                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 19468  0124BA  0E00               	movlw	0
 19469  0124BC  143C               	andwf	i2CANsendMessage@identifier,w,c
 19470  0124BE  6E48               	movwf	i2CANsendMessage@tamp,c
 19471  0124C0  0EFF               	movlw	255
 19472  0124C2  143D               	andwf	i2CANsendMessage@identifier+1,w,c
 19473  0124C4  6E49               	movwf	i2CANsendMessage@tamp+1,c
 19474  0124C6  0E00               	movlw	0
 19475  0124C8  143E               	andwf	i2CANsendMessage@identifier+2,w,c
 19476  0124CA  6E4A               	movwf	i2CANsendMessage@tamp+2,c
 19477  0124CC  0E00               	movlw	0
 19478  0124CE  143F               	andwf	i2CANsendMessage@identifier+3,w,c
 19479  0124D0  6E4B               	movwf	i2CANsendMessage@tamp+3,c
 19480                           
 19481                           ; BSR set to: 15
 19482                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 19483  0124D2  C048  F044         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19484  0124D6  C049  F045         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19485  0124DA  C04A  F046         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19486  0124DE  C04B  F047         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19487  0124E2  C045  F044         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19488  0124E6  C046  F045         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19489  0124EA  C047  F046         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19490  0124EE  6A47               	clrf	??i2_CANsendMessage+3,c
 19491  0124F0  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19492  0124F4  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19493  0124F8  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19494  0124FC  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19495                           
 19496                           ; BSR set to: 15
 19497                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 19498  012500  C048  FF33         	movff	i2CANsendMessage@tamp,3891	;volatile
 19499                           
 19500                           ; BSR set to: 15
 19501                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 19502  012504  0E00               	movlw	0
 19503  012506  010F               	movlb	15	; () banked
 19504  012508  6F32               	movwf	50,b	;volatile
 19505                           
 19506                           ; BSR set to: 15
 19507                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 19508  01250A  010F               	movlb	15	; () banked
 19509  01250C  8732               	bsf	50,3,b	;volatile
 19510                           
 19511                           ; BSR set to: 15
 19512                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 19513  01250E  A03E               	btfss	i2CANsendMessage@identifier+2,0,c
 19514  012510  D002               	goto	i2l396
 19515                           
 19516                           ; BSR set to: 15
 19517                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 19518  012512  010F               	movlb	15	; () banked
 19519  012514  8132               	bsf	50,0,b	;volatile
 19520  012516                     i2l396:
 19521                           
 19522                           ; BSR set to: 15
 19523                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 19524  012516  A23E               	btfss	i2CANsendMessage@identifier+2,1,c
 19525  012518  D002               	goto	i2l397
 19526                           
 19527                           ; BSR set to: 15
 19528                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 19529  01251A  010F               	movlb	15	; () banked
 19530  01251C  8332               	bsf	50,1,b	;volatile
 19531  01251E                     i2l397:
 19532                           
 19533                           ; BSR set to: 15
 19534                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 19535  01251E  A43E               	btfss	i2CANsendMessage@identifier+2,2,c
 19536  012520  D002               	goto	i2l398
 19537                           
 19538                           ; BSR set to: 15
 19539                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 19540  012522  010F               	movlb	15	; () banked
 19541  012524  8B32               	bsf	50,5,b	;volatile
 19542  012526                     i2l398:
 19543                           
 19544                           ; BSR set to: 15
 19545                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 19546  012526  A63E               	btfss	i2CANsendMessage@identifier+2,3,c
 19547  012528  D002               	goto	i2l399
 19548                           
 19549                           ; BSR set to: 15
 19550                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 19551  01252A  010F               	movlb	15	; () banked
 19552  01252C  8D32               	bsf	50,6,b	;volatile
 19553  01252E                     i2l399:
 19554                           
 19555                           ; BSR set to: 15
 19556                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 19557  01252E  A83E               	btfss	i2CANsendMessage@identifier+2,4,c
 19558  012530  D002               	goto	i2l9232
 19559                           
 19560                           ; BSR set to: 15
 19561                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 19562  012532  010F               	movlb	15	; () banked
 19563  012534  8F32               	bsf	50,7,b	;volatile
 19564  012536                     i2l9232:
 19565                           
 19566                           ; BSR set to: 15
 19567                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 19568  012536  C03C  F044         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19569  01253A  C03D  F045         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19570  01253E  C03E  F046         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19571  012542  C03F  F047         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19572  012546  0E16               	movlw	22
 19573  012548  D005               	goto	i2u1240_40
 19574  01254A                     i2u1240_45:
 19575  01254A  90D8               	bcf	status,0,c
 19576  01254C  3247               	rrcf	??i2_CANsendMessage+3,f,c
 19577  01254E  3246               	rrcf	??i2_CANsendMessage+2,f,c
 19578  012550  3245               	rrcf	??i2_CANsendMessage+1,f,c
 19579  012552  3244               	rrcf	??i2_CANsendMessage,f,c
 19580  012554                     i2u1240_40:
 19581  012554  2EE8               	decfsz	wreg,f,c
 19582  012556  D7F9               	goto	i2u1240_45
 19583  012558  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19584  01255C  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19585  012560  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19586  012564  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19587                           
 19588                           ; BSR set to: 15
 19589                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 19590  012568  5048               	movf	i2CANsendMessage@tamp,w,c
 19591  01256A  6E48               	movwf	i2CANsendMessage@tamp,c
 19592  01256C  6A49               	clrf	i2CANsendMessage@tamp+1,c
 19593  01256E  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 19594  012570  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 19595                           
 19596                           ; BSR set to: 15
 19597                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 19598  012572  C048  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 19599                           
 19600                           ;inc\CANlib.h: 407: }
 19601  012576  D04D               	goto	i2l9252
 19602  012578                     i2l395:
 19603                           
 19604                           ; BSR set to: 15
 19605                           ;inc\CANlib.h: 409: else
 19606                           ;inc\CANlib.h: 411: {
 19607                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 19608  012578  010F               	movlb	15	; () banked
 19609  01257A  9732               	bcf	50,3,b	;volatile
 19610                           
 19611                           ; BSR set to: 15
 19612                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 19613  01257C  C03C  F044         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19614  012580  C03D  F045         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19615  012584  C03E  F046         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19616  012588  C03F  F047         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19617  01258C  0E04               	movlw	4
 19618  01258E  D005               	goto	i2u1241_40
 19619  012590                     i2u1241_45:
 19620  012590  90D8               	bcf	status,0,c
 19621  012592  3247               	rrcf	??i2_CANsendMessage+3,f,c
 19622  012594  3246               	rrcf	??i2_CANsendMessage+2,f,c
 19623  012596  3245               	rrcf	??i2_CANsendMessage+1,f,c
 19624  012598  3244               	rrcf	??i2_CANsendMessage,f,c
 19625  01259A                     i2u1241_40:
 19626  01259A  2EE8               	decfsz	wreg,f,c
 19627  01259C  D7F9               	goto	i2u1241_45
 19628  01259E  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19629  0125A2  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19630  0125A6  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19631  0125AA  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19632                           
 19633                           ; BSR set to: 15
 19634                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 19635  0125AE  5048               	movf	i2CANsendMessage@tamp,w,c
 19636  0125B0  6E48               	movwf	i2CANsendMessage@tamp,c
 19637  0125B2  6A49               	clrf	i2CANsendMessage@tamp+1,c
 19638  0125B4  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 19639  0125B6  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 19640                           
 19641                           ; BSR set to: 15
 19642                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 19643  0125B8  C048  FF31         	movff	i2CANsendMessage@tamp,3889	;volatile
 19644                           
 19645                           ; BSR set to: 15
 19646                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 19647  0125BC  0E07               	movlw	7
 19648  0125BE  143C               	andwf	i2CANsendMessage@identifier,w,c
 19649  0125C0  6E48               	movwf	i2CANsendMessage@tamp,c
 19650  0125C2  0E00               	movlw	0
 19651  0125C4  143D               	andwf	i2CANsendMessage@identifier+1,w,c
 19652  0125C6  6E49               	movwf	i2CANsendMessage@tamp+1,c
 19653  0125C8  0E00               	movlw	0
 19654  0125CA  143E               	andwf	i2CANsendMessage@identifier+2,w,c
 19655  0125CC  6E4A               	movwf	i2CANsendMessage@tamp+2,c
 19656  0125CE  0E00               	movlw	0
 19657  0125D0  143F               	andwf	i2CANsendMessage@identifier+3,w,c
 19658  0125D2  6E4B               	movwf	i2CANsendMessage@tamp+3,c
 19659                           
 19660                           ; BSR set to: 15
 19661                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 19662  0125D4  C048  F044         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19663  0125D8  C049  F045         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19664  0125DC  C04A  F046         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19665  0125E0  C04B  F047         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19666  0125E4  0E05               	movlw	5
 19667  0125E6                     i2u1242_45:
 19668  0125E6  90D8               	bcf	status,0,c
 19669  0125E8  3644               	rlcf	??i2_CANsendMessage,f,c
 19670  0125EA  3645               	rlcf	??i2_CANsendMessage+1,f,c
 19671  0125EC  3646               	rlcf	??i2_CANsendMessage+2,f,c
 19672  0125EE  3647               	rlcf	??i2_CANsendMessage+3,f,c
 19673  0125F0  2EE8               	decfsz	wreg,f,c
 19674  0125F2  D7F9               	goto	i2u1242_45
 19675  0125F4  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19676  0125F8  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19677  0125FC  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19678  012600  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19679                           
 19680                           ; BSR set to: 15
 19681                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 19682  012604  010F               	movlb	15	; () banked
 19683  012606  5132               	movf	50,w,b	;volatile
 19684  012608  0B1F               	andlw	31
 19685  01260A  010F               	movlb	15	; () banked
 19686  01260C  6F32               	movwf	50,b	;volatile
 19687                           
 19688                           ; BSR set to: 15
 19689                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 19690  01260E  C048  FF32         	movff	i2CANsendMessage@tamp,3890	;volatile
 19691  012612                     i2l9252:
 19692                           
 19693                           ; BSR set to: 15
 19694                           ;inc\CANlib.h: 422: }
 19695                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 19696  012612  A043               	btfss	i2CANsendMessage@flags,0,c
 19697  012614  D003               	goto	i2l402
 19698                           
 19699                           ; BSR set to: 15
 19700                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 19701  012616  010F               	movlb	15	; () banked
 19702  012618  8130               	bsf	48,0,b	;volatile
 19703  01261A  D002               	goto	i2l403
 19704  01261C                     i2l402:
 19705                           
 19706                           ; BSR set to: 15
 19707                           ;inc\CANlib.h: 426: else
 19708                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 19709  01261C  010F               	movlb	15	; () banked
 19710  01261E  9130               	bcf	48,0,b	;volatile
 19711  012620                     i2l403:
 19712                           
 19713                           ; BSR set to: 15
 19714                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 19715  012620  A243               	btfss	i2CANsendMessage@flags,1,c
 19716  012622  D003               	goto	i2l404
 19717                           
 19718                           ; BSR set to: 15
 19719                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 19720  012624  010F               	movlb	15	; () banked
 19721  012626  8330               	bsf	48,1,b	;volatile
 19722  012628  D002               	goto	i2l9258
 19723  01262A                     i2l404:
 19724                           
 19725                           ; BSR set to: 15
 19726                           ;inc\CANlib.h: 430: else
 19727                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 19728  01262A  010F               	movlb	15	; () banked
 19729  01262C  9330               	bcf	48,1,b	;volatile
 19730  01262E                     i2l9258:
 19731                           
 19732                           ; BSR set to: 15
 19733                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 19734  01262E  C040  FFD9         	movff	i2CANsendMessage@data,fsr2l
 19735  012632  C041  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 19736  012636  50DF               	movf	indf2,w,c
 19737  012638  010F               	movlb	15	; () banked
 19738  01263A  6F36               	movwf	54,b	;volatile
 19739                           
 19740                           ; BSR set to: 15
 19741                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 19742  01263C  EE20 F001          	lfsr	2,1
 19743  012640  5040               	movf	i2CANsendMessage@data,w,c
 19744  012642  26D9               	addwf	fsr2l,f,c
 19745  012644  5041               	movf	i2CANsendMessage@data+1,w,c
 19746  012646  22DA               	addwfc	fsr2h,f,c
 19747  012648  50DF               	movf	indf2,w,c
 19748  01264A  010F               	movlb	15	; () banked
 19749  01264C  6F37               	movwf	55,b	;volatile
 19750                           
 19751                           ; BSR set to: 15
 19752                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 19753  01264E  EE20 F002          	lfsr	2,2
 19754  012652  5040               	movf	i2CANsendMessage@data,w,c
 19755  012654  26D9               	addwf	fsr2l,f,c
 19756  012656  5041               	movf	i2CANsendMessage@data+1,w,c
 19757  012658  22DA               	addwfc	fsr2h,f,c
 19758  01265A  50DF               	movf	indf2,w,c
 19759  01265C  010F               	movlb	15	; () banked
 19760  01265E  6F38               	movwf	56,b	;volatile
 19761                           
 19762                           ; BSR set to: 15
 19763                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 19764  012660  EE20 F003          	lfsr	2,3
 19765  012664  5040               	movf	i2CANsendMessage@data,w,c
 19766  012666  26D9               	addwf	fsr2l,f,c
 19767  012668  5041               	movf	i2CANsendMessage@data+1,w,c
 19768  01266A  22DA               	addwfc	fsr2h,f,c
 19769  01266C  50DF               	movf	indf2,w,c
 19770  01266E  010F               	movlb	15	; () banked
 19771  012670  6F39               	movwf	57,b	;volatile
 19772                           
 19773                           ; BSR set to: 15
 19774                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 19775  012672  EE20 F004          	lfsr	2,4
 19776  012676  5040               	movf	i2CANsendMessage@data,w,c
 19777  012678  26D9               	addwf	fsr2l,f,c
 19778  01267A  5041               	movf	i2CANsendMessage@data+1,w,c
 19779  01267C  22DA               	addwfc	fsr2h,f,c
 19780  01267E  50DF               	movf	indf2,w,c
 19781  012680  010F               	movlb	15	; () banked
 19782  012682  6F3A               	movwf	58,b	;volatile
 19783                           
 19784                           ; BSR set to: 15
 19785                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 19786  012684  EE20 F005          	lfsr	2,5
 19787  012688  5040               	movf	i2CANsendMessage@data,w,c
 19788  01268A  26D9               	addwf	fsr2l,f,c
 19789  01268C  5041               	movf	i2CANsendMessage@data+1,w,c
 19790  01268E  22DA               	addwfc	fsr2h,f,c
 19791  012690  50DF               	movf	indf2,w,c
 19792  012692  010F               	movlb	15	; () banked
 19793  012694  6F3B               	movwf	59,b	;volatile
 19794                           
 19795                           ; BSR set to: 15
 19796                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 19797  012696  EE20 F006          	lfsr	2,6
 19798  01269A  5040               	movf	i2CANsendMessage@data,w,c
 19799  01269C  26D9               	addwf	fsr2l,f,c
 19800  01269E  5041               	movf	i2CANsendMessage@data+1,w,c
 19801  0126A0  22DA               	addwfc	fsr2h,f,c
 19802  0126A2  50DF               	movf	indf2,w,c
 19803  0126A4  010F               	movlb	15	; () banked
 19804  0126A6  6F3C               	movwf	60,b	;volatile
 19805                           
 19806                           ; BSR set to: 15
 19807                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 19808  0126A8  EE20 F007          	lfsr	2,7
 19809  0126AC  5040               	movf	i2CANsendMessage@data,w,c
 19810  0126AE  26D9               	addwf	fsr2l,f,c
 19811  0126B0  5041               	movf	i2CANsendMessage@data+1,w,c
 19812  0126B2  22DA               	addwfc	fsr2h,f,c
 19813  0126B4  50DF               	movf	indf2,w,c
 19814  0126B6  010F               	movlb	15	; () banked
 19815  0126B8  6F3D               	movwf	61,b	;volatile
 19816                           
 19817                           ; BSR set to: 15
 19818                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 19819  0126BA  010F               	movlb	15	; () banked
 19820  0126BC  8730               	bsf	48,3,b	;volatile
 19821                           
 19822                           ; BSR set to: 15
 19823                           ;inc\CANlib.h: 444: return;
 19824  0126BE  0012               	return	
 19825  0126C0                     i2l392:
 19826                           
 19827                           ; BSR set to: 15
 19828                           ;inc\CANlib.h: 445: }
 19829                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 19830  0126C0  010F               	movlb	15	; () banked
 19831  0126C2  B720               	btfsc	32,3,b	;volatile
 19832  0126C4  0012               	return	
 19833                           
 19834                           ; BSR set to: 15
 19835                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 19836  0126C6  C042  FF25         	movff	i2CANsendMessage@dataLength,3877	;volatile
 19837                           
 19838                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 19839  0126CA  AC43               	btfss	i2CANsendMessage@flags,6,c
 19840  0126CC  D003               	goto	i2l407
 19841                           
 19842                           ; BSR set to: 15
 19843                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 19844  0126CE  010F               	movlb	15	; () banked
 19845  0126D0  8D25               	bsf	37,6,b	;volatile
 19846  0126D2  D002               	goto	i2l408
 19847  0126D4                     i2l407:
 19848                           
 19849                           ; BSR set to: 15
 19850                           ;inc\CANlib.h: 454: else
 19851                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 19852  0126D4  010F               	movlb	15	; () banked
 19853  0126D6  9D25               	bcf	37,6,b	;volatile
 19854  0126D8                     i2l408:
 19855                           
 19856                           ; BSR set to: 15
 19857                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 19858  0126D8  A643               	btfss	i2CANsendMessage@flags,3,c
 19859  0126DA  D066               	goto	i2l409
 19860                           
 19861                           ; BSR set to: 15
 19862                           ;inc\CANlib.h: 458: {
 19863                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 19864  0126DC  503C               	movf	i2CANsendMessage@identifier,w,c
 19865  0126DE  6E48               	movwf	i2CANsendMessage@tamp,c
 19866  0126E0  6A49               	clrf	i2CANsendMessage@tamp+1,c
 19867  0126E2  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 19868  0126E4  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 19869                           
 19870                           ; BSR set to: 15
 19871                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 19872  0126E6  C048  FF24         	movff	i2CANsendMessage@tamp,3876	;volatile
 19873                           
 19874                           ; BSR set to: 15
 19875                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 19876  0126EA  0E00               	movlw	0
 19877  0126EC  143C               	andwf	i2CANsendMessage@identifier,w,c
 19878  0126EE  6E48               	movwf	i2CANsendMessage@tamp,c
 19879  0126F0  0EFF               	movlw	255
 19880  0126F2  143D               	andwf	i2CANsendMessage@identifier+1,w,c
 19881  0126F4  6E49               	movwf	i2CANsendMessage@tamp+1,c
 19882  0126F6  0E00               	movlw	0
 19883  0126F8  143E               	andwf	i2CANsendMessage@identifier+2,w,c
 19884  0126FA  6E4A               	movwf	i2CANsendMessage@tamp+2,c
 19885  0126FC  0E00               	movlw	0
 19886  0126FE  143F               	andwf	i2CANsendMessage@identifier+3,w,c
 19887  012700  6E4B               	movwf	i2CANsendMessage@tamp+3,c
 19888                           
 19889                           ; BSR set to: 15
 19890                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 19891  012702  C048  F044         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 19892  012706  C049  F045         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 19893  01270A  C04A  F046         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 19894  01270E  C04B  F047         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 19895  012712  C045  F044         	movff	??i2_CANsendMessage+1,??i2_CANsendMessage
 19896  012716  C046  F045         	movff	??i2_CANsendMessage+2,??i2_CANsendMessage+1
 19897  01271A  C047  F046         	movff	??i2_CANsendMessage+3,??i2_CANsendMessage+2
 19898  01271E  6A47               	clrf	??i2_CANsendMessage+3,c
 19899  012720  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19900  012724  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19901  012728  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19902  01272C  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19903                           
 19904                           ; BSR set to: 15
 19905                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 19906  012730  C048  FF23         	movff	i2CANsendMessage@tamp,3875	;volatile
 19907                           
 19908                           ; BSR set to: 15
 19909                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 19910  012734  0E00               	movlw	0
 19911  012736  010F               	movlb	15	; () banked
 19912  012738  6F22               	movwf	34,b	;volatile
 19913                           
 19914                           ; BSR set to: 15
 19915                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 19916  01273A  010F               	movlb	15	; () banked
 19917  01273C  8722               	bsf	34,3,b	;volatile
 19918                           
 19919                           ; BSR set to: 15
 19920                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 19921  01273E  A03E               	btfss	i2CANsendMessage@identifier+2,0,c
 19922  012740  D002               	goto	i2l410
 19923                           
 19924                           ; BSR set to: 15
 19925                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 19926  012742  010F               	movlb	15	; () banked
 19927  012744  8122               	bsf	34,0,b	;volatile
 19928  012746                     i2l410:
 19929                           
 19930                           ; BSR set to: 15
 19931                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 19932  012746  A23E               	btfss	i2CANsendMessage@identifier+2,1,c
 19933  012748  D002               	goto	i2l411
 19934                           
 19935                           ; BSR set to: 15
 19936                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 19937  01274A  010F               	movlb	15	; () banked
 19938  01274C  8322               	bsf	34,1,b	;volatile
 19939  01274E                     i2l411:
 19940                           
 19941                           ; BSR set to: 15
 19942                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 19943  01274E  A43E               	btfss	i2CANsendMessage@identifier+2,2,c
 19944  012750  D002               	goto	i2l412
 19945                           
 19946                           ; BSR set to: 15
 19947                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 19948  012752  010F               	movlb	15	; () banked
 19949  012754  8B22               	bsf	34,5,b	;volatile
 19950  012756                     i2l412:
 19951                           
 19952                           ; BSR set to: 15
 19953                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 19954  012756  A63E               	btfss	i2CANsendMessage@identifier+2,3,c
 19955  012758  D002               	goto	i2l413
 19956                           
 19957                           ; BSR set to: 15
 19958                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 19959  01275A  010F               	movlb	15	; () banked
 19960  01275C  8D22               	bsf	34,6,b	;volatile
 19961  01275E                     i2l413:
 19962                           
 19963                           ; BSR set to: 15
 19964                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 19965  01275E  A83E               	btfss	i2CANsendMessage@identifier+2,4,c
 19966  012760  D002               	goto	i2l9308
 19967                           
 19968                           ; BSR set to: 15
 19969                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 19970  012762  010F               	movlb	15	; () banked
 19971  012764  8F22               	bsf	34,7,b	;volatile
 19972  012766                     i2l9308:
 19973                           
 19974                           ; BSR set to: 15
 19975                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 19976  012766  C03C  F044         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 19977  01276A  C03D  F045         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 19978  01276E  C03E  F046         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 19979  012772  C03F  F047         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 19980  012776  0E16               	movlw	22
 19981  012778  D005               	goto	i2u1253_40
 19982  01277A                     i2u1253_45:
 19983  01277A  90D8               	bcf	status,0,c
 19984  01277C  3247               	rrcf	??i2_CANsendMessage+3,f,c
 19985  01277E  3246               	rrcf	??i2_CANsendMessage+2,f,c
 19986  012780  3245               	rrcf	??i2_CANsendMessage+1,f,c
 19987  012782  3244               	rrcf	??i2_CANsendMessage,f,c
 19988  012784                     i2u1253_40:
 19989  012784  2EE8               	decfsz	wreg,f,c
 19990  012786  D7F9               	goto	i2u1253_45
 19991  012788  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 19992  01278C  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 19993  012790  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 19994  012794  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 19995                           
 19996                           ; BSR set to: 15
 19997                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 19998  012798  5048               	movf	i2CANsendMessage@tamp,w,c
 19999  01279A  6E48               	movwf	i2CANsendMessage@tamp,c
 20000  01279C  6A49               	clrf	i2CANsendMessage@tamp+1,c
 20001  01279E  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 20002  0127A0  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 20003                           
 20004                           ; BSR set to: 15
 20005                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 20006  0127A2  C048  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20007                           
 20008                           ;inc\CANlib.h: 483: }
 20009  0127A6  D04D               	goto	i2l9328
 20010  0127A8                     i2l409:
 20011                           
 20012                           ; BSR set to: 15
 20013                           ;inc\CANlib.h: 485: else
 20014                           ;inc\CANlib.h: 487: {
 20015                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 20016  0127A8  010F               	movlb	15	; () banked
 20017  0127AA  9722               	bcf	34,3,b	;volatile
 20018                           
 20019                           ; BSR set to: 15
 20020                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 20021  0127AC  C03C  F044         	movff	i2CANsendMessage@identifier,??i2_CANsendMessage
 20022  0127B0  C03D  F045         	movff	i2CANsendMessage@identifier+1,??i2_CANsendMessage+1
 20023  0127B4  C03E  F046         	movff	i2CANsendMessage@identifier+2,??i2_CANsendMessage+2
 20024  0127B8  C03F  F047         	movff	i2CANsendMessage@identifier+3,??i2_CANsendMessage+3
 20025  0127BC  0E04               	movlw	4
 20026  0127BE  D005               	goto	i2u1254_40
 20027  0127C0                     i2u1254_45:
 20028  0127C0  90D8               	bcf	status,0,c
 20029  0127C2  3247               	rrcf	??i2_CANsendMessage+3,f,c
 20030  0127C4  3246               	rrcf	??i2_CANsendMessage+2,f,c
 20031  0127C6  3245               	rrcf	??i2_CANsendMessage+1,f,c
 20032  0127C8  3244               	rrcf	??i2_CANsendMessage,f,c
 20033  0127CA                     i2u1254_40:
 20034  0127CA  2EE8               	decfsz	wreg,f,c
 20035  0127CC  D7F9               	goto	i2u1254_45
 20036  0127CE  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20037  0127D2  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20038  0127D6  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20039  0127DA  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20040                           
 20041                           ; BSR set to: 15
 20042                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 20043  0127DE  5048               	movf	i2CANsendMessage@tamp,w,c
 20044  0127E0  6E48               	movwf	i2CANsendMessage@tamp,c
 20045  0127E2  6A49               	clrf	i2CANsendMessage@tamp+1,c
 20046  0127E4  6A4A               	clrf	i2CANsendMessage@tamp+2,c
 20047  0127E6  6A4B               	clrf	i2CANsendMessage@tamp+3,c
 20048                           
 20049                           ; BSR set to: 15
 20050                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 20051  0127E8  C048  FF21         	movff	i2CANsendMessage@tamp,3873	;volatile
 20052                           
 20053                           ; BSR set to: 15
 20054                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 20055  0127EC  0E07               	movlw	7
 20056  0127EE  143C               	andwf	i2CANsendMessage@identifier,w,c
 20057  0127F0  6E48               	movwf	i2CANsendMessage@tamp,c
 20058  0127F2  0E00               	movlw	0
 20059  0127F4  143D               	andwf	i2CANsendMessage@identifier+1,w,c
 20060  0127F6  6E49               	movwf	i2CANsendMessage@tamp+1,c
 20061  0127F8  0E00               	movlw	0
 20062  0127FA  143E               	andwf	i2CANsendMessage@identifier+2,w,c
 20063  0127FC  6E4A               	movwf	i2CANsendMessage@tamp+2,c
 20064  0127FE  0E00               	movlw	0
 20065  012800  143F               	andwf	i2CANsendMessage@identifier+3,w,c
 20066  012802  6E4B               	movwf	i2CANsendMessage@tamp+3,c
 20067                           
 20068                           ; BSR set to: 15
 20069                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 20070  012804  C048  F044         	movff	i2CANsendMessage@tamp,??i2_CANsendMessage
 20071  012808  C049  F045         	movff	i2CANsendMessage@tamp+1,??i2_CANsendMessage+1
 20072  01280C  C04A  F046         	movff	i2CANsendMessage@tamp+2,??i2_CANsendMessage+2
 20073  012810  C04B  F047         	movff	i2CANsendMessage@tamp+3,??i2_CANsendMessage+3
 20074  012814  0E05               	movlw	5
 20075  012816                     i2u1255_45:
 20076  012816  90D8               	bcf	status,0,c
 20077  012818  3644               	rlcf	??i2_CANsendMessage,f,c
 20078  01281A  3645               	rlcf	??i2_CANsendMessage+1,f,c
 20079  01281C  3646               	rlcf	??i2_CANsendMessage+2,f,c
 20080  01281E  3647               	rlcf	??i2_CANsendMessage+3,f,c
 20081  012820  2EE8               	decfsz	wreg,f,c
 20082  012822  D7F9               	goto	i2u1255_45
 20083  012824  C044  F048         	movff	??i2_CANsendMessage,i2CANsendMessage@tamp
 20084  012828  C045  F049         	movff	??i2_CANsendMessage+1,i2CANsendMessage@tamp+1
 20085  01282C  C046  F04A         	movff	??i2_CANsendMessage+2,i2CANsendMessage@tamp+2
 20086  012830  C047  F04B         	movff	??i2_CANsendMessage+3,i2CANsendMessage@tamp+3
 20087                           
 20088                           ; BSR set to: 15
 20089                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 20090  012834  010F               	movlb	15	; () banked
 20091  012836  5122               	movf	34,w,b	;volatile
 20092  012838  0B1F               	andlw	31
 20093  01283A  010F               	movlb	15	; () banked
 20094  01283C  6F22               	movwf	34,b	;volatile
 20095                           
 20096                           ; BSR set to: 15
 20097                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 20098  01283E  C048  FF22         	movff	i2CANsendMessage@tamp,3874	;volatile
 20099  012842                     i2l9328:
 20100                           
 20101                           ; BSR set to: 15
 20102                           ;inc\CANlib.h: 498: }
 20103                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 20104  012842  A043               	btfss	i2CANsendMessage@flags,0,c
 20105  012844  D003               	goto	i2l416
 20106                           
 20107                           ; BSR set to: 15
 20108                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 20109  012846  010F               	movlb	15	; () banked
 20110  012848  8120               	bsf	32,0,b	;volatile
 20111  01284A  D002               	goto	i2l417
 20112  01284C                     i2l416:
 20113                           
 20114                           ; BSR set to: 15
 20115                           ;inc\CANlib.h: 502: else
 20116                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 20117  01284C  010F               	movlb	15	; () banked
 20118  01284E  9120               	bcf	32,0,b	;volatile
 20119  012850                     i2l417:
 20120                           
 20121                           ; BSR set to: 15
 20122                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 20123  012850  A243               	btfss	i2CANsendMessage@flags,1,c
 20124  012852  D003               	goto	i2l418
 20125                           
 20126                           ; BSR set to: 15
 20127                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 20128  012854  010F               	movlb	15	; () banked
 20129  012856  8320               	bsf	32,1,b	;volatile
 20130  012858  D002               	goto	i2l9334
 20131  01285A                     i2l418:
 20132                           
 20133                           ; BSR set to: 15
 20134                           ;inc\CANlib.h: 506: else
 20135                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 20136  01285A  010F               	movlb	15	; () banked
 20137  01285C  9320               	bcf	32,1,b	;volatile
 20138  01285E                     i2l9334:
 20139                           
 20140                           ; BSR set to: 15
 20141                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 20142  01285E  C040  FFD9         	movff	i2CANsendMessage@data,fsr2l
 20143  012862  C041  FFDA         	movff	i2CANsendMessage@data+1,fsr2h
 20144  012866  50DF               	movf	indf2,w,c
 20145  012868  010F               	movlb	15	; () banked
 20146  01286A  6F26               	movwf	38,b	;volatile
 20147                           
 20148                           ; BSR set to: 15
 20149                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 20150  01286C  EE20 F001          	lfsr	2,1
 20151  012870  5040               	movf	i2CANsendMessage@data,w,c
 20152  012872  26D9               	addwf	fsr2l,f,c
 20153  012874  5041               	movf	i2CANsendMessage@data+1,w,c
 20154  012876  22DA               	addwfc	fsr2h,f,c
 20155  012878  50DF               	movf	indf2,w,c
 20156  01287A  010F               	movlb	15	; () banked
 20157  01287C  6F27               	movwf	39,b	;volatile
 20158                           
 20159                           ; BSR set to: 15
 20160                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 20161  01287E  EE20 F002          	lfsr	2,2
 20162  012882  5040               	movf	i2CANsendMessage@data,w,c
 20163  012884  26D9               	addwf	fsr2l,f,c
 20164  012886  5041               	movf	i2CANsendMessage@data+1,w,c
 20165  012888  22DA               	addwfc	fsr2h,f,c
 20166  01288A  50DF               	movf	indf2,w,c
 20167  01288C  010F               	movlb	15	; () banked
 20168  01288E  6F28               	movwf	40,b	;volatile
 20169                           
 20170                           ; BSR set to: 15
 20171                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 20172  012890  EE20 F003          	lfsr	2,3
 20173  012894  5040               	movf	i2CANsendMessage@data,w,c
 20174  012896  26D9               	addwf	fsr2l,f,c
 20175  012898  5041               	movf	i2CANsendMessage@data+1,w,c
 20176  01289A  22DA               	addwfc	fsr2h,f,c
 20177  01289C  50DF               	movf	indf2,w,c
 20178  01289E  010F               	movlb	15	; () banked
 20179  0128A0  6F29               	movwf	41,b	;volatile
 20180                           
 20181                           ; BSR set to: 15
 20182                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 20183  0128A2  EE20 F004          	lfsr	2,4
 20184  0128A6  5040               	movf	i2CANsendMessage@data,w,c
 20185  0128A8  26D9               	addwf	fsr2l,f,c
 20186  0128AA  5041               	movf	i2CANsendMessage@data+1,w,c
 20187  0128AC  22DA               	addwfc	fsr2h,f,c
 20188  0128AE  50DF               	movf	indf2,w,c
 20189  0128B0  010F               	movlb	15	; () banked
 20190  0128B2  6F2A               	movwf	42,b	;volatile
 20191                           
 20192                           ; BSR set to: 15
 20193                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 20194  0128B4  EE20 F005          	lfsr	2,5
 20195  0128B8  5040               	movf	i2CANsendMessage@data,w,c
 20196  0128BA  26D9               	addwf	fsr2l,f,c
 20197  0128BC  5041               	movf	i2CANsendMessage@data+1,w,c
 20198  0128BE  22DA               	addwfc	fsr2h,f,c
 20199  0128C0  50DF               	movf	indf2,w,c
 20200  0128C2  010F               	movlb	15	; () banked
 20201  0128C4  6F2B               	movwf	43,b	;volatile
 20202                           
 20203                           ; BSR set to: 15
 20204                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 20205  0128C6  EE20 F006          	lfsr	2,6
 20206  0128CA  5040               	movf	i2CANsendMessage@data,w,c
 20207  0128CC  26D9               	addwf	fsr2l,f,c
 20208  0128CE  5041               	movf	i2CANsendMessage@data+1,w,c
 20209  0128D0  22DA               	addwfc	fsr2h,f,c
 20210  0128D2  50DF               	movf	indf2,w,c
 20211  0128D4  010F               	movlb	15	; () banked
 20212  0128D6  6F2C               	movwf	44,b	;volatile
 20213                           
 20214                           ; BSR set to: 15
 20215                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 20216  0128D8  EE20 F007          	lfsr	2,7
 20217  0128DC  5040               	movf	i2CANsendMessage@data,w,c
 20218  0128DE  26D9               	addwf	fsr2l,f,c
 20219  0128E0  5041               	movf	i2CANsendMessage@data+1,w,c
 20220  0128E2  22DA               	addwfc	fsr2h,f,c
 20221  0128E4  50DF               	movf	indf2,w,c
 20222  0128E6  010F               	movlb	15	; () banked
 20223  0128E8  6F2D               	movwf	45,b	;volatile
 20224                           
 20225                           ; BSR set to: 15
 20226                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 20227  0128EA  010F               	movlb	15	; () banked
 20228  0128EC  8720               	bsf	32,3,b	;volatile
 20229                           
 20230                           ; BSR set to: 15
 20231                           ;inc\CANlib.h: 520: return;
 20232  0128EE  0012               	return	
 20233  0128F0                     __end_ofi2_CANsendMessage:
 20234                           	opt stack 0
 20235                           pclatu	equ	0xFFB
 20236                           pclath	equ	0xFFA
 20237                           tblptru	equ	0xFF8
 20238                           tblptrh	equ	0xFF7
 20239                           tblptrl	equ	0xFF6
 20240                           tablat	equ	0xFF5
 20241                           prodh	equ	0xFF4
 20242                           prodl	equ	0xFF3
 20243                           intcon	equ	0xFF2
 20244                           postinc0	equ	0xFEE
 20245                           fsr0h	equ	0xFEA
 20246                           fsr0l	equ	0xFE9
 20247                           wreg	equ	0xFE8
 20248                           indf1	equ	0xFE7
 20249                           plusw1	equ	0xFE3
 20250                           fsr1h	equ	0xFE2
 20251                           fsr1l	equ	0xFE1
 20252                           bsr	equ	0xFE0
 20253                           indf2	equ	0xFDF
 20254                           postinc2	equ	0xFDE
 20255                           plusw2	equ	0xFDB
 20256                           fsr2h	equ	0xFDA
 20257                           fsr2l	equ	0xFD9
 20258                           status	equ	0xFD8
 20259                           
 20260 ;; *************** function i2_CANisTxReady *****************
 20261 ;; Defined at:
 20262 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 20263 ;; Parameters:    Size  Location     Type
 20264 ;;		None
 20265 ;; Auto vars:     Size  Location     Type
 20266 ;;		None
 20267 ;; Return value:  Size  Location     Type
 20268 ;;                  1    wreg      unsigned char 
 20269 ;; Registers used:
 20270 ;;		wreg, status,2
 20271 ;; Tracked objects:
 20272 ;;		On entry : 0/0
 20273 ;;		On exit  : 0/0
 20274 ;;		Unchanged: 0/0
 20275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20277 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20279 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20280 ;;Total ram usage:        1 bytes
 20281 ;; Hardware stack levels used:    1
 20282 ;; This function calls:
 20283 ;;		Nothing
 20284 ;; This function is called by:
 20285 ;;		_ISR_alta
 20286 ;; This function uses a non-reentrant model
 20287 ;;
 20288                           
 20289                           	psect	text56
 20290  01628A                     __ptext56:
 20291                           	opt stack 0
 20292  01628A                     i2_CANisTxReady:
 20293                           	opt stack 20
 20294                           
 20295                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 20296                           
 20297                           ; BSR set to: 15
 20298                           ;incstack = 0
 20299  01628A  0E01               	movlw	1
 20300  01628C  6E3C               	movwf	i2_CANisTxReady$3239,c
 20301  01628E  010F               	movlb	15	; () banked
 20302  016290  A740               	btfss	64,3,b	;volatile
 20303  016292  D008               	goto	i2l570
 20304                           
 20305                           ; BSR set to: 15
 20306  016294  010F               	movlb	15	; () banked
 20307  016296  A730               	btfss	48,3,b	;volatile
 20308  016298  D005               	goto	i2l570
 20309                           
 20310                           ; BSR set to: 15
 20311  01629A  010F               	movlb	15	; () banked
 20312  01629C  A720               	btfss	32,3,b	;volatile
 20313  01629E  D002               	goto	i2l570
 20314                           
 20315                           ; BSR set to: 15
 20316  0162A0  0E00               	movlw	0
 20317  0162A2  6E3C               	movwf	i2_CANisTxReady$3239,c
 20318  0162A4                     i2l570:
 20319                           
 20320                           ; BSR set to: 15
 20321  0162A4  503C               	movf	i2_CANisTxReady$3239,w,c
 20322  0162A6  0012               	return	
 20323  0162A8                     __end_ofi2_CANisTxReady:
 20324                           	opt stack 0
 20325                           pclatu	equ	0xFFB
 20326                           pclath	equ	0xFFA
 20327                           tblptru	equ	0xFF8
 20328                           tblptrh	equ	0xFF7
 20329                           tblptrl	equ	0xFF6
 20330                           tablat	equ	0xFF5
 20331                           prodh	equ	0xFF4
 20332                           prodl	equ	0xFF3
 20333                           intcon	equ	0xFF2
 20334                           postinc0	equ	0xFEE
 20335                           fsr0h	equ	0xFEA
 20336                           fsr0l	equ	0xFE9
 20337                           wreg	equ	0xFE8
 20338                           indf1	equ	0xFE7
 20339                           plusw1	equ	0xFE3
 20340                           fsr1h	equ	0xFE2
 20341                           fsr1l	equ	0xFE1
 20342                           bsr	equ	0xFE0
 20343                           indf2	equ	0xFDF
 20344                           postinc2	equ	0xFDE
 20345                           plusw2	equ	0xFDB
 20346                           fsr2h	equ	0xFDA
 20347                           fsr2l	equ	0xFD9
 20348                           status	equ	0xFD8
 20349                           
 20350 ;; *************** function _CANreceiveMessage *****************
 20351 ;; Defined at:
 20352 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 20353 ;; Parameters:    Size  Location     Type
 20354 ;;  msg             2   17[COMRAM] PTR struct .
 20355 ;;		 -> msg(15), 
 20356 ;; Auto vars:     Size  Location     Type
 20357 ;;  tamp            1   28[COMRAM] unsigned char 
 20358 ;;  error           1   27[COMRAM] unsigned char 
 20359 ;; Return value:  Size  Location     Type
 20360 ;;                  1    wreg      unsigned char 
 20361 ;; Registers used:
 20362 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20363 ;; Tracked objects:
 20364 ;;		On entry : 0/0
 20365 ;;		On exit  : 0/0
 20366 ;;		Unchanged: 0/0
 20367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20368 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20369 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20370 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20371 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20372 ;;Total ram usage:       12 bytes
 20373 ;; Hardware stack levels used:    1
 20374 ;; This function calls:
 20375 ;;		Nothing
 20376 ;; This function is called by:
 20377 ;;		_ISR_alta
 20378 ;; This function uses a non-reentrant model
 20379 ;;
 20380                           
 20381                           	psect	text57
 20382  012E0A                     __ptext57:
 20383                           	opt stack 0
 20384  012E0A                     _CANreceiveMessage:
 20385                           	opt stack 20
 20386                           
 20387                           ;inc\CANlib.h: 530: BYTE tamp;
 20388                           ;inc\CANlib.h: 531: BYTE error = 0;
 20389                           
 20390                           ; BSR set to: 15
 20391                           ;incstack = 0
 20392  012E0A  0E00               	movlw	0
 20393  012E0C  6E46               	movwf	CANreceiveMessage@error,c
 20394                           
 20395                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 20396  012E0E  BE74               	btfsc	3956,7,c	;volatile
 20397                           
 20398                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 20399  012E10  8046               	bsf	CANreceiveMessage@error,0,c
 20400                           
 20401                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 20402  012E12  BC74               	btfsc	3956,6,c	;volatile
 20403                           
 20404                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 20405  012E14  8246               	bsf	CANreceiveMessage@error,1,c
 20406                           
 20407                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 20408  012E16  010F               	movlb	15	; () banked
 20409  012E18  AF50               	btfss	80,7,b	;volatile
 20410  012E1A  D143               	goto	i2l424
 20411                           
 20412                           ; BSR set to: 15
 20413                           ;inc\CANlib.h: 541: {
 20414                           ;inc\CANlib.h: 542: msg->identifier = 0;
 20415  012E1C  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20416  012E20  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20417  012E24  6ADE               	clrf	postinc2,c
 20418  012E26  6ADE               	clrf	postinc2,c
 20419  012E28  6ADE               	clrf	postinc2,c
 20420  012E2A  6ADD               	clrf	postdec2,c
 20421                           
 20422                           ; BSR set to: 15
 20423                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 20424  012E2C  EE20 F004          	lfsr	2,4
 20425  012E30  503C               	movf	CANreceiveMessage@msg,w,c
 20426  012E32  26D9               	addwf	fsr2l,f,c
 20427  012E34  503D               	movf	CANreceiveMessage@msg+1,w,c
 20428  012E36  22DA               	addwfc	fsr2h,f,c
 20429  012E38  CF56 FFDF          	movff	3926,indf2	;volatile
 20430                           
 20431                           ; BSR set to: 15
 20432                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 20433  012E3C  EE20 F005          	lfsr	2,5
 20434  012E40  503C               	movf	CANreceiveMessage@msg,w,c
 20435  012E42  26D9               	addwf	fsr2l,f,c
 20436  012E44  503D               	movf	CANreceiveMessage@msg+1,w,c
 20437  012E46  22DA               	addwfc	fsr2h,f,c
 20438  012E48  CF57 FFDF          	movff	3927,indf2	;volatile
 20439                           
 20440                           ; BSR set to: 15
 20441                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 20442  012E4C  EE20 F006          	lfsr	2,6
 20443  012E50  503C               	movf	CANreceiveMessage@msg,w,c
 20444  012E52  26D9               	addwf	fsr2l,f,c
 20445  012E54  503D               	movf	CANreceiveMessage@msg+1,w,c
 20446  012E56  22DA               	addwfc	fsr2h,f,c
 20447  012E58  CF58 FFDF          	movff	3928,indf2	;volatile
 20448                           
 20449                           ; BSR set to: 15
 20450                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 20451  012E5C  EE20 F007          	lfsr	2,7
 20452  012E60  503C               	movf	CANreceiveMessage@msg,w,c
 20453  012E62  26D9               	addwf	fsr2l,f,c
 20454  012E64  503D               	movf	CANreceiveMessage@msg+1,w,c
 20455  012E66  22DA               	addwfc	fsr2h,f,c
 20456  012E68  CF59 FFDF          	movff	3929,indf2	;volatile
 20457                           
 20458                           ; BSR set to: 15
 20459                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 20460  012E6C  EE20 F008          	lfsr	2,8
 20461  012E70  503C               	movf	CANreceiveMessage@msg,w,c
 20462  012E72  26D9               	addwf	fsr2l,f,c
 20463  012E74  503D               	movf	CANreceiveMessage@msg+1,w,c
 20464  012E76  22DA               	addwfc	fsr2h,f,c
 20465  012E78  CF5A FFDF          	movff	3930,indf2	;volatile
 20466                           
 20467                           ; BSR set to: 15
 20468                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 20469  012E7C  EE20 F009          	lfsr	2,9
 20470  012E80  503C               	movf	CANreceiveMessage@msg,w,c
 20471  012E82  26D9               	addwf	fsr2l,f,c
 20472  012E84  503D               	movf	CANreceiveMessage@msg+1,w,c
 20473  012E86  22DA               	addwfc	fsr2h,f,c
 20474  012E88  CF5B FFDF          	movff	3931,indf2	;volatile
 20475                           
 20476                           ; BSR set to: 15
 20477                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 20478  012E8C  EE20 F00A          	lfsr	2,10
 20479  012E90  503C               	movf	CANreceiveMessage@msg,w,c
 20480  012E92  26D9               	addwf	fsr2l,f,c
 20481  012E94  503D               	movf	CANreceiveMessage@msg+1,w,c
 20482  012E96  22DA               	addwfc	fsr2h,f,c
 20483  012E98  CF5C FFDF          	movff	3932,indf2	;volatile
 20484                           
 20485                           ; BSR set to: 15
 20486                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 20487  012E9C  EE20 F00B          	lfsr	2,11
 20488  012EA0  503C               	movf	CANreceiveMessage@msg,w,c
 20489  012EA2  26D9               	addwf	fsr2l,f,c
 20490  012EA4  503D               	movf	CANreceiveMessage@msg+1,w,c
 20491  012EA6  22DA               	addwfc	fsr2h,f,c
 20492  012EA8  CF5D FFDF          	movff	3933,indf2	;volatile
 20493                           
 20494                           ; BSR set to: 15
 20495                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 20496  012EAC  EE20 F00E          	lfsr	2,14
 20497  012EB0  503C               	movf	CANreceiveMessage@msg,w,c
 20498  012EB2  26D9               	addwf	fsr2l,f,c
 20499  012EB4  503D               	movf	CANreceiveMessage@msg+1,w,c
 20500  012EB6  22DA               	addwfc	fsr2h,f,c
 20501  012EB8  010F               	movlb	15	; () banked
 20502  012EBA  AD55               	btfss	85,6,b	;volatile
 20503  012EBC  D002               	goto	i2u1188_40
 20504  012EBE  0E01               	movlw	1
 20505  012EC0  D001               	goto	i2u1188_46
 20506  012EC2                     i2u1188_40:
 20507  012EC2  0E00               	movlw	0
 20508  012EC4                     i2u1188_46:
 20509  012EC4  6EDF               	movwf	indf2,c
 20510                           
 20511                           ; BSR set to: 15
 20512                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 20513  012EC6  EE20 F00D          	lfsr	2,13
 20514  012ECA  503C               	movf	CANreceiveMessage@msg,w,c
 20515  012ECC  26D9               	addwf	fsr2l,f,c
 20516  012ECE  503D               	movf	CANreceiveMessage@msg+1,w,c
 20517  012ED0  22DA               	addwfc	fsr2h,f,c
 20518  012ED2  010F               	movlb	15	; () banked
 20519  012ED4  5155               	movf	85,w,b	;volatile
 20520  012ED6  0B0F               	andlw	15
 20521  012ED8  6EDF               	movwf	indf2,c
 20522                           
 20523                           ; BSR set to: 15
 20524                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 20525  012EDA  EE20 F00C          	lfsr	2,12
 20526  012EDE  503C               	movf	CANreceiveMessage@msg,w,c
 20527  012EE0  26D9               	addwf	fsr2l,f,c
 20528  012EE2  503D               	movf	CANreceiveMessage@msg+1,w,c
 20529  012EE4  22DA               	addwfc	fsr2h,f,c
 20530  012EE6  010F               	movlb	15	; () banked
 20531  012EE8  A752               	btfss	82,3,b	;volatile
 20532  012EEA  D002               	goto	i2u1189_40
 20533  012EEC  0E01               	movlw	1
 20534  012EEE  D001               	goto	i2u1189_46
 20535  012EF0                     i2u1189_40:
 20536  012EF0  0E00               	movlw	0
 20537  012EF2                     i2u1189_46:
 20538  012EF2  6EDF               	movwf	indf2,c
 20539                           
 20540                           ; BSR set to: 15
 20541                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 20542  012EF4  010F               	movlb	15	; () banked
 20543  012EF6  B752               	btfsc	82,3,b	;volatile
 20544  012EF8  D044               	goto	i2l8868
 20545                           
 20546                           ; BSR set to: 15
 20547                           ;inc\CANlib.h: 559: {
 20548                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 20549  012EFA  CF51 F03E          	movff	3921,??_CANreceiveMessage	;volatile
 20550  012EFE  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20551  012F00  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20552  012F02  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20553  012F04  0E03               	movlw	3
 20554  012F06                     i2u1191_45:
 20555  012F06  90D8               	bcf	status,0,c
 20556  012F08  363E               	rlcf	??_CANreceiveMessage,f,c
 20557  012F0A  363F               	rlcf	??_CANreceiveMessage+1,f,c
 20558  012F0C  3640               	rlcf	??_CANreceiveMessage+2,f,c
 20559  012F0E  3641               	rlcf	??_CANreceiveMessage+3,f,c
 20560  012F10  2EE8               	decfsz	wreg,f,c
 20561  012F12  D7F9               	goto	i2u1191_45
 20562  012F14  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20563  012F18  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20564  012F1C  C03E  FFDE         	movff	??_CANreceiveMessage,postinc2
 20565  012F20  C03F  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20566  012F24  C040  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20567  012F28  C041  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20568                           
 20569                           ; BSR set to: 15
 20570                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 20571  012F2C  010F               	movlb	15	; () banked
 20572  012F2E  3952               	swapf	82,w,b	;volatile
 20573  012F30  42E8               	rrncf	wreg,f,c
 20574  012F32  0B07               	andlw	7
 20575  012F34  0B07               	andlw	7
 20576  012F36  6E47               	movwf	CANreceiveMessage@tamp,c
 20577                           
 20578                           ; BSR set to: 15
 20579                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 20580  012F38  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20581  012F3C  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20582  012F40  CFDE F03E          	movff	postinc2,??_CANreceiveMessage
 20583  012F44  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+1
 20584  012F48  CFDE F040          	movff	postinc2,??_CANreceiveMessage+2
 20585  012F4C  CFDE F041          	movff	postinc2,??_CANreceiveMessage+3
 20586  012F50  5047               	movf	CANreceiveMessage@tamp,w,c
 20587  012F52  243E               	addwf	??_CANreceiveMessage,w,c
 20588  012F54  6E42               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 20589  012F56  0E00               	movlw	0
 20590  012F58  203F               	addwfc	??_CANreceiveMessage+1,w,c
 20591  012F5A  6E43               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 20592  012F5C  0E00               	movlw	0
 20593  012F5E  2040               	addwfc	??_CANreceiveMessage+2,w,c
 20594  012F60  6E44               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 20595  012F62  0E00               	movlw	0
 20596  012F64  2041               	addwfc	??_CANreceiveMessage+3,w,c
 20597  012F66  6E45               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 20598  012F68  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20599  012F6C  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20600  012F70  C042  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 20601  012F74  C043  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 20602  012F78  C044  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 20603  012F7C  C045  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 20604                           
 20605                           ;inc\CANlib.h: 563: }
 20606  012F80  D08D               	goto	i2l8894
 20607  012F82                     i2l8868:
 20608                           
 20609                           ; BSR set to: 15
 20610                           ;inc\CANlib.h: 564: else
 20611                           ;inc\CANlib.h: 565: {
 20612                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 20613  012F82  CF54 F03E          	movff	3924,??_CANreceiveMessage	;volatile
 20614  012F86  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20615  012F88  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20616  012F8A  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20617  012F8C  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20618  012F90  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20619  012F94  C03E  FFDE         	movff	??_CANreceiveMessage,postinc2
 20620  012F98  C03F  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20621  012F9C  C040  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20622  012FA0  C041  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20623                           
 20624                           ; BSR set to: 15
 20625                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 20626  012FA4  CF53 F03E          	movff	3923,??_CANreceiveMessage	;volatile
 20627  012FA8  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20628  012FAA  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20629  012FAC  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20630  012FAE  C040  F041         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 20631  012FB2  C03F  F040         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 20632  012FB6  C03E  F03F         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 20633  012FBA  6A3E               	clrf	??_CANreceiveMessage,c
 20634  012FBC  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20635  012FC0  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20636  012FC4  503E               	movf	??_CANreceiveMessage,w,c
 20637  012FC6  26DE               	addwf	postinc2,f,c
 20638  012FC8  503F               	movf	??_CANreceiveMessage+1,w,c
 20639  012FCA  22DE               	addwfc	postinc2,f,c
 20640  012FCC  5040               	movf	??_CANreceiveMessage+2,w,c
 20641  012FCE  22DE               	addwfc	postinc2,f,c
 20642  012FD0  5041               	movf	??_CANreceiveMessage+3,w,c
 20643  012FD2  22DE               	addwfc	postinc2,f,c
 20644                           
 20645                           ; BSR set to: 15
 20646                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 20647  012FD4  010F               	movlb	15	; () banked
 20648  012FD6  A152               	btfss	82,0,b	;volatile
 20649  012FD8  D00C               	goto	i2l8876
 20650                           
 20651                           ; BSR set to: 15
 20652                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 20653  012FDA  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20654  012FDE  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20655  012FE2  0E00               	movlw	0
 20656  012FE4  12DE               	iorwf	postinc2,f,c
 20657  012FE6  0E00               	movlw	0
 20658  012FE8  12DE               	iorwf	postinc2,f,c
 20659  012FEA  0E01               	movlw	1
 20660  012FEC  12DE               	iorwf	postinc2,f,c
 20661  012FEE  0E00               	movlw	0
 20662  012FF0  12DE               	iorwf	postinc2,f,c
 20663  012FF2                     i2l8876:
 20664                           
 20665                           ; BSR set to: 15
 20666                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 20667  012FF2  010F               	movlb	15	; () banked
 20668  012FF4  A352               	btfss	82,1,b	;volatile
 20669  012FF6  D00C               	goto	i2l8880
 20670                           
 20671                           ; BSR set to: 15
 20672                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 20673  012FF8  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20674  012FFC  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20675  013000  0E00               	movlw	0
 20676  013002  12DE               	iorwf	postinc2,f,c
 20677  013004  0E00               	movlw	0
 20678  013006  12DE               	iorwf	postinc2,f,c
 20679  013008  0E02               	movlw	2
 20680  01300A  12DE               	iorwf	postinc2,f,c
 20681  01300C  0E00               	movlw	0
 20682  01300E  12DE               	iorwf	postinc2,f,c
 20683  013010                     i2l8880:
 20684                           
 20685                           ; BSR set to: 15
 20686                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 20687  013010  010F               	movlb	15	; () banked
 20688  013012  AB52               	btfss	82,5,b	;volatile
 20689  013014  D00C               	goto	i2l8884
 20690                           
 20691                           ; BSR set to: 15
 20692                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 20693  013016  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20694  01301A  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20695  01301E  0E00               	movlw	0
 20696  013020  12DE               	iorwf	postinc2,f,c
 20697  013022  0E00               	movlw	0
 20698  013024  12DE               	iorwf	postinc2,f,c
 20699  013026  0E04               	movlw	4
 20700  013028  12DE               	iorwf	postinc2,f,c
 20701  01302A  0E00               	movlw	0
 20702  01302C  12DE               	iorwf	postinc2,f,c
 20703  01302E                     i2l8884:
 20704                           
 20705                           ; BSR set to: 15
 20706                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 20707  01302E  010F               	movlb	15	; () banked
 20708  013030  AD52               	btfss	82,6,b	;volatile
 20709  013032  D00C               	goto	i2l8888
 20710                           
 20711                           ; BSR set to: 15
 20712                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 20713  013034  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20714  013038  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20715  01303C  0E00               	movlw	0
 20716  01303E  12DE               	iorwf	postinc2,f,c
 20717  013040  0E00               	movlw	0
 20718  013042  12DE               	iorwf	postinc2,f,c
 20719  013044  0E08               	movlw	8
 20720  013046  12DE               	iorwf	postinc2,f,c
 20721  013048  0E00               	movlw	0
 20722  01304A  12DE               	iorwf	postinc2,f,c
 20723  01304C                     i2l8888:
 20724                           
 20725                           ; BSR set to: 15
 20726                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 20727  01304C  010F               	movlb	15	; () banked
 20728  01304E  AF52               	btfss	82,7,b	;volatile
 20729  013050  D00C               	goto	i2l8892
 20730                           
 20731                           ; BSR set to: 15
 20732                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 20733  013052  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20734  013056  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20735  01305A  0E00               	movlw	0
 20736  01305C  12DE               	iorwf	postinc2,f,c
 20737  01305E  0E00               	movlw	0
 20738  013060  12DE               	iorwf	postinc2,f,c
 20739  013062  0E10               	movlw	16
 20740  013064  12DE               	iorwf	postinc2,f,c
 20741  013066  0E00               	movlw	0
 20742  013068  12DE               	iorwf	postinc2,f,c
 20743  01306A                     i2l8892:
 20744                           
 20745                           ; BSR set to: 15
 20746                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 20747  01306A  CF51 F03E          	movff	3921,??_CANreceiveMessage	;volatile
 20748  01306E  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20749  013070  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20750  013072  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20751  013074  0E15               	movlw	21
 20752  013076                     i2u1197_45:
 20753  013076  90D8               	bcf	status,0,c
 20754  013078  363E               	rlcf	??_CANreceiveMessage,f,c
 20755  01307A  363F               	rlcf	??_CANreceiveMessage+1,f,c
 20756  01307C  3640               	rlcf	??_CANreceiveMessage+2,f,c
 20757  01307E  3641               	rlcf	??_CANreceiveMessage+3,f,c
 20758  013080  2EE8               	decfsz	wreg,f,c
 20759  013082  D7F9               	goto	i2u1197_45
 20760  013084  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20761  013088  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20762  01308C  503E               	movf	??_CANreceiveMessage,w,c
 20763  01308E  12DE               	iorwf	postinc2,f,c
 20764  013090  503F               	movf	??_CANreceiveMessage+1,w,c
 20765  013092  12DE               	iorwf	postinc2,f,c
 20766  013094  5040               	movf	??_CANreceiveMessage+2,w,c
 20767  013096  12DE               	iorwf	postinc2,f,c
 20768  013098  5041               	movf	??_CANreceiveMessage+3,w,c
 20769  01309A  12DE               	iorwf	postinc2,f,c
 20770  01309C                     i2l8894:
 20771                           
 20772                           ; BSR set to: 15
 20773                           ;inc\CANlib.h: 581: }
 20774                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 20775  01309C  010F               	movlb	15	; () banked
 20776  01309E  9F50               	bcf	80,7,b	;volatile
 20777                           
 20778                           ; BSR set to: 15
 20779                           ;inc\CANlib.h: 584: return (error);
 20780                           ;	Return value of _CANreceiveMessage is never used
 20781  0130A0  0012               	return	
 20782  0130A2                     i2l424:
 20783                           
 20784                           ; BSR set to: 15
 20785                           ;inc\CANlib.h: 585: }
 20786                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 20787  0130A2  AE60               	btfss	3936,7,c	;volatile
 20788  0130A4  0012               	return	
 20789                           
 20790                           ; BSR set to: 15
 20791                           ;inc\CANlib.h: 588: {
 20792                           ;inc\CANlib.h: 589: msg->identifier = 0;
 20793  0130A6  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20794  0130AA  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20795  0130AE  6ADE               	clrf	postinc2,c
 20796  0130B0  6ADE               	clrf	postinc2,c
 20797  0130B2  6ADE               	clrf	postinc2,c
 20798  0130B4  6ADD               	clrf	postdec2,c
 20799                           
 20800                           ; BSR set to: 15
 20801                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 20802  0130B6  EE20 F004          	lfsr	2,4
 20803  0130BA  503C               	movf	CANreceiveMessage@msg,w,c
 20804  0130BC  26D9               	addwf	fsr2l,f,c
 20805  0130BE  503D               	movf	CANreceiveMessage@msg+1,w,c
 20806  0130C0  22DA               	addwfc	fsr2h,f,c
 20807  0130C2  CF66 FFDF          	movff	3942,indf2	;volatile
 20808                           
 20809                           ; BSR set to: 15
 20810                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 20811  0130C6  EE20 F005          	lfsr	2,5
 20812  0130CA  503C               	movf	CANreceiveMessage@msg,w,c
 20813  0130CC  26D9               	addwf	fsr2l,f,c
 20814  0130CE  503D               	movf	CANreceiveMessage@msg+1,w,c
 20815  0130D0  22DA               	addwfc	fsr2h,f,c
 20816  0130D2  CF67 FFDF          	movff	3943,indf2	;volatile
 20817                           
 20818                           ; BSR set to: 15
 20819                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 20820  0130D6  EE20 F006          	lfsr	2,6
 20821  0130DA  503C               	movf	CANreceiveMessage@msg,w,c
 20822  0130DC  26D9               	addwf	fsr2l,f,c
 20823  0130DE  503D               	movf	CANreceiveMessage@msg+1,w,c
 20824  0130E0  22DA               	addwfc	fsr2h,f,c
 20825  0130E2  CF68 FFDF          	movff	3944,indf2	;volatile
 20826                           
 20827                           ; BSR set to: 15
 20828                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 20829  0130E6  EE20 F007          	lfsr	2,7
 20830  0130EA  503C               	movf	CANreceiveMessage@msg,w,c
 20831  0130EC  26D9               	addwf	fsr2l,f,c
 20832  0130EE  503D               	movf	CANreceiveMessage@msg+1,w,c
 20833  0130F0  22DA               	addwfc	fsr2h,f,c
 20834  0130F2  CF69 FFDF          	movff	3945,indf2	;volatile
 20835                           
 20836                           ; BSR set to: 15
 20837                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 20838  0130F6  EE20 F008          	lfsr	2,8
 20839  0130FA  503C               	movf	CANreceiveMessage@msg,w,c
 20840  0130FC  26D9               	addwf	fsr2l,f,c
 20841  0130FE  503D               	movf	CANreceiveMessage@msg+1,w,c
 20842  013100  22DA               	addwfc	fsr2h,f,c
 20843  013102  CF6A FFDF          	movff	3946,indf2	;volatile
 20844                           
 20845                           ; BSR set to: 15
 20846                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 20847  013106  EE20 F009          	lfsr	2,9
 20848  01310A  503C               	movf	CANreceiveMessage@msg,w,c
 20849  01310C  26D9               	addwf	fsr2l,f,c
 20850  01310E  503D               	movf	CANreceiveMessage@msg+1,w,c
 20851  013110  22DA               	addwfc	fsr2h,f,c
 20852  013112  CF6B FFDF          	movff	3947,indf2	;volatile
 20853                           
 20854                           ; BSR set to: 15
 20855                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 20856  013116  EE20 F00A          	lfsr	2,10
 20857  01311A  503C               	movf	CANreceiveMessage@msg,w,c
 20858  01311C  26D9               	addwf	fsr2l,f,c
 20859  01311E  503D               	movf	CANreceiveMessage@msg+1,w,c
 20860  013120  22DA               	addwfc	fsr2h,f,c
 20861  013122  CF6C FFDF          	movff	3948,indf2	;volatile
 20862                           
 20863                           ; BSR set to: 15
 20864                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 20865  013126  EE20 F00B          	lfsr	2,11
 20866  01312A  503C               	movf	CANreceiveMessage@msg,w,c
 20867  01312C  26D9               	addwf	fsr2l,f,c
 20868  01312E  503D               	movf	CANreceiveMessage@msg+1,w,c
 20869  013130  22DA               	addwfc	fsr2h,f,c
 20870  013132  CF6D FFDF          	movff	3949,indf2	;volatile
 20871                           
 20872                           ; BSR set to: 15
 20873                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 20874  013136  EE20 F00E          	lfsr	2,14
 20875  01313A  503C               	movf	CANreceiveMessage@msg,w,c
 20876  01313C  26D9               	addwf	fsr2l,f,c
 20877  01313E  503D               	movf	CANreceiveMessage@msg+1,w,c
 20878  013140  22DA               	addwfc	fsr2h,f,c
 20879  013142  AC65               	btfss	3941,6,c	;volatile
 20880  013144  D002               	goto	i2u1199_40
 20881  013146  0E01               	movlw	1
 20882  013148  D001               	goto	i2u1199_46
 20883  01314A                     i2u1199_40:
 20884  01314A  0E00               	movlw	0
 20885  01314C                     i2u1199_46:
 20886  01314C  6EDF               	movwf	indf2,c
 20887                           
 20888                           ; BSR set to: 15
 20889                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 20890  01314E  EE20 F00D          	lfsr	2,13
 20891  013152  503C               	movf	CANreceiveMessage@msg,w,c
 20892  013154  26D9               	addwf	fsr2l,f,c
 20893  013156  503D               	movf	CANreceiveMessage@msg+1,w,c
 20894  013158  22DA               	addwfc	fsr2h,f,c
 20895  01315A  5065               	movf	3941,w,c	;volatile
 20896  01315C  0B0F               	andlw	15
 20897  01315E  6EDF               	movwf	indf2,c
 20898                           
 20899                           ; BSR set to: 15
 20900                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 20901  013160  EE20 F00C          	lfsr	2,12
 20902  013164  503C               	movf	CANreceiveMessage@msg,w,c
 20903  013166  26D9               	addwf	fsr2l,f,c
 20904  013168  503D               	movf	CANreceiveMessage@msg+1,w,c
 20905  01316A  22DA               	addwfc	fsr2h,f,c
 20906  01316C  A662               	btfss	3938,3,c	;volatile
 20907  01316E  D002               	goto	i2u1200_40
 20908  013170  0E01               	movlw	1
 20909  013172  D001               	goto	i2u1200_46
 20910  013174                     i2u1200_40:
 20911  013174  0E00               	movlw	0
 20912  013176                     i2u1200_46:
 20913  013176  6EDF               	movwf	indf2,c
 20914                           
 20915                           ; BSR set to: 15
 20916                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 20917  013178  B662               	btfsc	3938,3,c	;volatile
 20918  01317A  D043               	goto	i2l8930
 20919                           
 20920                           ; BSR set to: 15
 20921                           ;inc\CANlib.h: 606: {
 20922                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 20923  01317C  CF61 F03E          	movff	3937,??_CANreceiveMessage	;volatile
 20924  013180  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20925  013182  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20926  013184  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20927  013186  0E03               	movlw	3
 20928  013188                     i2u1202_45:
 20929  013188  90D8               	bcf	status,0,c
 20930  01318A  363E               	rlcf	??_CANreceiveMessage,f,c
 20931  01318C  363F               	rlcf	??_CANreceiveMessage+1,f,c
 20932  01318E  3640               	rlcf	??_CANreceiveMessage+2,f,c
 20933  013190  3641               	rlcf	??_CANreceiveMessage+3,f,c
 20934  013192  2EE8               	decfsz	wreg,f,c
 20935  013194  D7F9               	goto	i2u1202_45
 20936  013196  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20937  01319A  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20938  01319E  C03E  FFDE         	movff	??_CANreceiveMessage,postinc2
 20939  0131A2  C03F  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20940  0131A6  C040  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20941  0131AA  C041  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20942                           
 20943                           ; BSR set to: 15
 20944                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 20945  0131AE  3862               	swapf	3938,w,c	;volatile
 20946  0131B0  42E8               	rrncf	wreg,f,c
 20947  0131B2  0B07               	andlw	7
 20948  0131B4  0B07               	andlw	7
 20949  0131B6  6E47               	movwf	CANreceiveMessage@tamp,c
 20950                           
 20951                           ; BSR set to: 15
 20952                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 20953  0131B8  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20954  0131BC  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20955  0131C0  CFDE F03E          	movff	postinc2,??_CANreceiveMessage
 20956  0131C4  CFDE F03F          	movff	postinc2,??_CANreceiveMessage+1
 20957  0131C8  CFDE F040          	movff	postinc2,??_CANreceiveMessage+2
 20958  0131CC  CFDE F041          	movff	postinc2,??_CANreceiveMessage+3
 20959  0131D0  5047               	movf	CANreceiveMessage@tamp,w,c
 20960  0131D2  243E               	addwf	??_CANreceiveMessage,w,c
 20961  0131D4  6E42               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 20962  0131D6  0E00               	movlw	0
 20963  0131D8  203F               	addwfc	??_CANreceiveMessage+1,w,c
 20964  0131DA  6E43               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 20965  0131DC  0E00               	movlw	0
 20966  0131DE  2040               	addwfc	??_CANreceiveMessage+2,w,c
 20967  0131E0  6E44               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 20968  0131E2  0E00               	movlw	0
 20969  0131E4  2041               	addwfc	??_CANreceiveMessage+3,w,c
 20970  0131E6  6E45               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 20971  0131E8  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20972  0131EC  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20973  0131F0  C042  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 20974  0131F4  C043  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 20975  0131F8  C044  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 20976  0131FC  C045  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 20977                           
 20978                           ;inc\CANlib.h: 610: }
 20979  013200  D088               	goto	i2l8956
 20980  013202                     i2l8930:
 20981                           
 20982                           ; BSR set to: 15
 20983                           ;inc\CANlib.h: 611: else
 20984                           ;inc\CANlib.h: 612: {
 20985                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 20986  013202  CF64 F03E          	movff	3940,??_CANreceiveMessage	;volatile
 20987  013206  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 20988  013208  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 20989  01320A  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 20990  01320C  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 20991  013210  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 20992  013214  C03E  FFDE         	movff	??_CANreceiveMessage,postinc2
 20993  013218  C03F  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 20994  01321C  C040  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 20995  013220  C041  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 20996                           
 20997                           ; BSR set to: 15
 20998                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 20999  013224  CF63 F03E          	movff	3939,??_CANreceiveMessage	;volatile
 21000  013228  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21001  01322A  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21002  01322C  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21003  01322E  C040  F041         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 21004  013232  C03F  F040         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 21005  013236  C03E  F03F         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 21006  01323A  6A3E               	clrf	??_CANreceiveMessage,c
 21007  01323C  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21008  013240  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21009  013244  503E               	movf	??_CANreceiveMessage,w,c
 21010  013246  26DE               	addwf	postinc2,f,c
 21011  013248  503F               	movf	??_CANreceiveMessage+1,w,c
 21012  01324A  22DE               	addwfc	postinc2,f,c
 21013  01324C  5040               	movf	??_CANreceiveMessage+2,w,c
 21014  01324E  22DE               	addwfc	postinc2,f,c
 21015  013250  5041               	movf	??_CANreceiveMessage+3,w,c
 21016  013252  22DE               	addwfc	postinc2,f,c
 21017                           
 21018                           ; BSR set to: 15
 21019                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 21020  013254  A062               	btfss	3938,0,c	;volatile
 21021  013256  D00C               	goto	i2l8938
 21022                           
 21023                           ; BSR set to: 15
 21024                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 21025  013258  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21026  01325C  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21027  013260  0E00               	movlw	0
 21028  013262  12DE               	iorwf	postinc2,f,c
 21029  013264  0E00               	movlw	0
 21030  013266  12DE               	iorwf	postinc2,f,c
 21031  013268  0E01               	movlw	1
 21032  01326A  12DE               	iorwf	postinc2,f,c
 21033  01326C  0E00               	movlw	0
 21034  01326E  12DE               	iorwf	postinc2,f,c
 21035  013270                     i2l8938:
 21036                           
 21037                           ; BSR set to: 15
 21038                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 21039  013270  A262               	btfss	3938,1,c	;volatile
 21040  013272  D00C               	goto	i2l8942
 21041                           
 21042                           ; BSR set to: 15
 21043                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 21044  013274  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21045  013278  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21046  01327C  0E00               	movlw	0
 21047  01327E  12DE               	iorwf	postinc2,f,c
 21048  013280  0E00               	movlw	0
 21049  013282  12DE               	iorwf	postinc2,f,c
 21050  013284  0E02               	movlw	2
 21051  013286  12DE               	iorwf	postinc2,f,c
 21052  013288  0E00               	movlw	0
 21053  01328A  12DE               	iorwf	postinc2,f,c
 21054  01328C                     i2l8942:
 21055                           
 21056                           ; BSR set to: 15
 21057                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 21058  01328C  AA62               	btfss	3938,5,c	;volatile
 21059  01328E  D00C               	goto	i2l8946
 21060                           
 21061                           ; BSR set to: 15
 21062                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 21063  013290  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21064  013294  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21065  013298  0E00               	movlw	0
 21066  01329A  12DE               	iorwf	postinc2,f,c
 21067  01329C  0E00               	movlw	0
 21068  01329E  12DE               	iorwf	postinc2,f,c
 21069  0132A0  0E04               	movlw	4
 21070  0132A2  12DE               	iorwf	postinc2,f,c
 21071  0132A4  0E00               	movlw	0
 21072  0132A6  12DE               	iorwf	postinc2,f,c
 21073  0132A8                     i2l8946:
 21074                           
 21075                           ; BSR set to: 15
 21076                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 21077  0132A8  AC62               	btfss	3938,6,c	;volatile
 21078  0132AA  D00C               	goto	i2l8950
 21079                           
 21080                           ; BSR set to: 15
 21081                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 21082  0132AC  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21083  0132B0  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21084  0132B4  0E00               	movlw	0
 21085  0132B6  12DE               	iorwf	postinc2,f,c
 21086  0132B8  0E00               	movlw	0
 21087  0132BA  12DE               	iorwf	postinc2,f,c
 21088  0132BC  0E08               	movlw	8
 21089  0132BE  12DE               	iorwf	postinc2,f,c
 21090  0132C0  0E00               	movlw	0
 21091  0132C2  12DE               	iorwf	postinc2,f,c
 21092  0132C4                     i2l8950:
 21093                           
 21094                           ; BSR set to: 15
 21095                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 21096  0132C4  AE62               	btfss	3938,7,c	;volatile
 21097  0132C6  D00C               	goto	i2l8954
 21098                           
 21099                           ; BSR set to: 15
 21100                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 21101  0132C8  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21102  0132CC  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21103  0132D0  0E00               	movlw	0
 21104  0132D2  12DE               	iorwf	postinc2,f,c
 21105  0132D4  0E00               	movlw	0
 21106  0132D6  12DE               	iorwf	postinc2,f,c
 21107  0132D8  0E10               	movlw	16
 21108  0132DA  12DE               	iorwf	postinc2,f,c
 21109  0132DC  0E00               	movlw	0
 21110  0132DE  12DE               	iorwf	postinc2,f,c
 21111  0132E0                     i2l8954:
 21112                           
 21113                           ; BSR set to: 15
 21114                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 21115  0132E0  CF61 F03E          	movff	3937,??_CANreceiveMessage	;volatile
 21116  0132E4  6A3F               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 21117  0132E6  6A40               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 21118  0132E8  6A41               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 21119  0132EA  0E15               	movlw	21
 21120  0132EC                     i2u1208_45:
 21121  0132EC  90D8               	bcf	status,0,c
 21122  0132EE  363E               	rlcf	??_CANreceiveMessage,f,c
 21123  0132F0  363F               	rlcf	??_CANreceiveMessage+1,f,c
 21124  0132F2  3640               	rlcf	??_CANreceiveMessage+2,f,c
 21125  0132F4  3641               	rlcf	??_CANreceiveMessage+3,f,c
 21126  0132F6  2EE8               	decfsz	wreg,f,c
 21127  0132F8  D7F9               	goto	i2u1208_45
 21128  0132FA  C03C  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 21129  0132FE  C03D  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 21130  013302  503E               	movf	??_CANreceiveMessage,w,c
 21131  013304  12DE               	iorwf	postinc2,f,c
 21132  013306  503F               	movf	??_CANreceiveMessage+1,w,c
 21133  013308  12DE               	iorwf	postinc2,f,c
 21134  01330A  5040               	movf	??_CANreceiveMessage+2,w,c
 21135  01330C  12DE               	iorwf	postinc2,f,c
 21136  01330E  5041               	movf	??_CANreceiveMessage+3,w,c
 21137  013310  12DE               	iorwf	postinc2,f,c
 21138  013312                     i2l8956:
 21139                           
 21140                           ; BSR set to: 15
 21141                           ;inc\CANlib.h: 629: }
 21142                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 21143  013312  9E60               	bcf	3936,7,c	;volatile
 21144                           
 21145                           ; BSR set to: 15
 21146                           ;inc\CANlib.h: 632: return (error);
 21147                           ;	Return value of _CANreceiveMessage is never used
 21148  013314  0012               	return	
 21149  013316                     __end_of_CANreceiveMessage:
 21150                           	opt stack 0
 21151                           pclatu	equ	0xFFB
 21152                           pclath	equ	0xFFA
 21153                           tblptru	equ	0xFF8
 21154                           tblptrh	equ	0xFF7
 21155                           tblptrl	equ	0xFF6
 21156                           tablat	equ	0xFF5
 21157                           prodh	equ	0xFF4
 21158                           prodl	equ	0xFF3
 21159                           intcon	equ	0xFF2
 21160                           postinc0	equ	0xFEE
 21161                           fsr0h	equ	0xFEA
 21162                           fsr0l	equ	0xFE9
 21163                           wreg	equ	0xFE8
 21164                           indf1	equ	0xFE7
 21165                           plusw1	equ	0xFE3
 21166                           fsr1h	equ	0xFE2
 21167                           fsr1l	equ	0xFE1
 21168                           bsr	equ	0xFE0
 21169                           indf2	equ	0xFDF
 21170                           postinc2	equ	0xFDE
 21171                           postdec2	equ	0xFDD
 21172                           plusw2	equ	0xFDB
 21173                           fsr2h	equ	0xFDA
 21174                           fsr2l	equ	0xFD9
 21175                           status	equ	0xFD8
 21176                           
 21177 ;; *************** function _CANisRxReady *****************
 21178 ;; Defined at:
 21179 ;;		line 1163 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 21180 ;; Parameters:    Size  Location     Type
 21181 ;;		None
 21182 ;; Auto vars:     Size  Location     Type
 21183 ;;		None
 21184 ;; Return value:  Size  Location     Type
 21185 ;;                  1    wreg      unsigned char 
 21186 ;; Registers used:
 21187 ;;		wreg, status,2
 21188 ;; Tracked objects:
 21189 ;;		On entry : 0/0
 21190 ;;		On exit  : 0/0
 21191 ;;		Unchanged: 0/0
 21192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21194 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21196 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21197 ;;Total ram usage:        1 bytes
 21198 ;; Hardware stack levels used:    1
 21199 ;; This function calls:
 21200 ;;		Nothing
 21201 ;; This function is called by:
 21202 ;;		_ISR_alta
 21203 ;; This function uses a non-reentrant model
 21204 ;;
 21205                           
 21206                           	psect	text58
 21207  01632E                     __ptext58:
 21208                           	opt stack 0
 21209  01632E                     _CANisRxReady:
 21210                           	opt stack 20
 21211                           
 21212                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 21213                           
 21214                           ; BSR set to: 15
 21215                           ;incstack = 0
 21216  01632E  0E01               	movlw	1
 21217  016330  6E3C               	movwf	_CANisRxReady$3241,c
 21218  016332  BE60               	btfsc	3936,7,c	;volatile
 21219  016334  D005               	goto	i2l575
 21220  016336  010F               	movlb	15	; () banked
 21221  016338  BF50               	btfsc	80,7,b	;volatile
 21222  01633A  D002               	goto	i2l575
 21223                           
 21224                           ; BSR set to: 15
 21225  01633C  0E00               	movlw	0
 21226  01633E  6E3C               	movwf	_CANisRxReady$3241,c
 21227  016340                     i2l575:
 21228  016340  503C               	movf	_CANisRxReady$3241,w,c
 21229  016342  0012               	return	
 21230  016344                     __end_of_CANisRxReady:
 21231                           	opt stack 0
 21232                           pclatu	equ	0xFFB
 21233                           pclath	equ	0xFFA
 21234                           tblptru	equ	0xFF8
 21235                           tblptrh	equ	0xFF7
 21236                           tblptrl	equ	0xFF6
 21237                           tablat	equ	0xFF5
 21238                           prodh	equ	0xFF4
 21239                           prodl	equ	0xFF3
 21240                           intcon	equ	0xFF2
 21241                           postinc0	equ	0xFEE
 21242                           fsr0h	equ	0xFEA
 21243                           fsr0l	equ	0xFE9
 21244                           wreg	equ	0xFE8
 21245                           indf1	equ	0xFE7
 21246                           plusw1	equ	0xFE3
 21247                           fsr1h	equ	0xFE2
 21248                           fsr1l	equ	0xFE1
 21249                           bsr	equ	0xFE0
 21250                           indf2	equ	0xFDF
 21251                           postinc2	equ	0xFDE
 21252                           postdec2	equ	0xFDD
 21253                           plusw2	equ	0xFDB
 21254                           fsr2h	equ	0xFDA
 21255                           fsr2l	equ	0xFD9
 21256                           status	equ	0xFD8
 21257                           pclatu	equ	0xFFB
 21258                           pclath	equ	0xFFA
 21259                           tblptru	equ	0xFF8
 21260                           tblptrh	equ	0xFF7
 21261                           tblptrl	equ	0xFF6
 21262                           tablat	equ	0xFF5
 21263                           prodh	equ	0xFF4
 21264                           prodl	equ	0xFF3
 21265                           intcon	equ	0xFF2
 21266                           postinc0	equ	0xFEE
 21267                           fsr0h	equ	0xFEA
 21268                           fsr0l	equ	0xFE9
 21269                           wreg	equ	0xFE8
 21270                           indf1	equ	0xFE7
 21271                           plusw1	equ	0xFE3
 21272                           fsr1h	equ	0xFE2
 21273                           fsr1l	equ	0xFE1
 21274                           bsr	equ	0xFE0
 21275                           indf2	equ	0xFDF
 21276                           postinc2	equ	0xFDE
 21277                           postdec2	equ	0xFDD
 21278                           plusw2	equ	0xFDB
 21279                           fsr2h	equ	0xFDA
 21280                           fsr2l	equ	0xFD9
 21281                           status	equ	0xFD8
 21282                           
 21283                           	psect	rparam
 21284  0000                     pclatu	equ	0xFFB
 21285                           pclath	equ	0xFFA
 21286                           tblptru	equ	0xFF8
 21287                           tblptrh	equ	0xFF7
 21288                           tblptrl	equ	0xFF6
 21289                           tablat	equ	0xFF5
 21290                           prodh	equ	0xFF4
 21291                           prodl	equ	0xFF3
 21292                           intcon	equ	0xFF2
 21293                           postinc0	equ	0xFEE
 21294                           fsr0h	equ	0xFEA
 21295                           fsr0l	equ	0xFE9
 21296                           wreg	equ	0xFE8
 21297                           indf1	equ	0xFE7
 21298                           plusw1	equ	0xFE3
 21299                           fsr1h	equ	0xFE2
 21300                           fsr1l	equ	0xFE1
 21301                           bsr	equ	0xFE0
 21302                           indf2	equ	0xFDF
 21303                           postinc2	equ	0xFDE
 21304                           postdec2	equ	0xFDD
 21305                           plusw2	equ	0xFDB
 21306                           fsr2h	equ	0xFDA
 21307                           fsr2l	equ	0xFD9
 21308                           status	equ	0xFD8
 21309                           
 21310                           	psect	temp
 21311  00004E                     btemp:
 21312                           	opt stack 0
 21313  00004E                     	ds	1
 21314  0000                     int$flags	set	btemp
 21315                           pclatu	equ	0xFFB
 21316                           pclath	equ	0xFFA
 21317                           tblptru	equ	0xFF8
 21318                           tblptrh	equ	0xFF7
 21319                           tblptrl	equ	0xFF6
 21320                           tablat	equ	0xFF5
 21321                           prodh	equ	0xFF4
 21322                           prodl	equ	0xFF3
 21323                           intcon	equ	0xFF2
 21324                           postinc0	equ	0xFEE
 21325                           fsr0h	equ	0xFEA
 21326                           fsr0l	equ	0xFE9
 21327                           wreg	equ	0xFE8
 21328                           indf1	equ	0xFE7
 21329                           plusw1	equ	0xFE3
 21330                           fsr1h	equ	0xFE2
 21331                           fsr1l	equ	0xFE1
 21332                           bsr	equ	0xFE0
 21333                           indf2	equ	0xFDF
 21334                           postinc2	equ	0xFDE
 21335                           postdec2	equ	0xFDD
 21336                           plusw2	equ	0xFDB
 21337                           fsr2h	equ	0xFDA
 21338                           fsr2l	equ	0xFD9
 21339                           status	equ	0xFD8


Data Sizes:
    Strings     249
    Constant    144
    Data        1
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      77
    BANK0           160    109     142
    BANK1           256     33      81
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 12
		 -> str(BANK1[12]), LCD_write_integer@convertedInt(BANK0[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_21(CODE[21]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[8]), STR_16(CODE[8]), STR_15(CODE[8]), STR_14(CODE[8]), 
		 -> STR_13(CODE[5]), STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[7]), 
		 -> STR_9(CODE[14]), STR_8(CODE[17]), STR_7(CODE[12]), STR_6(CODE[21]), 
		 -> STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), STR_1(CODE[21]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_speed(BANK0[1]), park_assist_state(BANK1[8]), data_brake(BANK0[1]), data_steering(BANK0[1]), 
		 -> data(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    _ISR_alta->i2_CANsendMessage

Critical Paths under _ISR_bassa in COMRAM

    None.

Critical Paths under _main in BANK0

    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _LCD_Park->_LCD_write_message
    _LCD_Handler->_sprintf
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___awdiv->___awmod
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->_fround
    ___flneg->___flmul
    ___fldiv->___xxtofl
    _LCD_write_message->_LCD_write_char
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_write_string->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_goto_xy->_LCD_shift_cursor
    _LCD_shift_cursor->_LCD_send_command
    _LCD_goto_line->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul
    _CAN_Tx->_CANsendMessage

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Handler->_sprintf

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_alta in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_alta in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_alta in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_alta in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_alta in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_alta in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_alta in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_alta in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_alta in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_alta in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  282314
                                             25 BANK1      8     8      0
                             _CAN_Rx
                             _CAN_Tx
                       _CANisTxReady
                     _CANsendMessage
                  _F1_Button_Polling
                  _F2_Button_Polling
                   _Joystick_Polling
                        _LCD_Handler
                           _LCD_Park
                      _LCD_goto_line
                     _LCD_initialize
                  _LCD_write_message
                 _PWR_Button_Polling
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
               _board_initialization
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0   51321
                      _CANInitialize
                          _LCD_clear
                      _LCD_goto_line
                     _LCD_initialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             31 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             17 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             17 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWR_Button_Polling                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Park                                             0     0      0   19716
                      _LCD_goto_line
                  _LCD_write_message
 ---------------------------------------------------------------------------------
 (1) _LCD_Handler                                          0     0      0  143897
                       _CANisTxReady
                     _CANsendMessage
                          _LCD_clear
                      _LCD_goto_line
                        _LCD_goto_xy
                     _LCD_initialize
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fldiv
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   41624
                                             99 BANK0     10     2      8
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9426
                                             56 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             17 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    9147
                                             56 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    4925
                                             31 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1819
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1985
                                             23 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             17 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     608
                                             17 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     861
                                             17 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     694
                                             17 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     549
                                             17 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     799
                                             89 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             89 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    3518
                                             69 BANK0     20    12      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     219
                                             56 BANK0      4     0      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     728
                                             17 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1305
                                             31 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_write_message                                    2     0      2   10905
                                             34 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   12052
                                             41 BANK0     16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             33 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             24 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             17 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             17 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    9519
                                             34 BANK0      2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_write_char                                       5     5      0    9300
                                             29 BANK0      5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   27796
                                             31 BANK0      1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    8919
                                             29 BANK0      2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    8780
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_xy                                          2     1      1   18137
                                             32 BANK0      2     1      1
                      _LCD_goto_line
                   _LCD_shift_cursor
 ---------------------------------------------------------------------------------
 (3) _LCD_shift_cursor                                     3     2      1    8956
                                             29 BANK0      3     2      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    8811
                                             29 BANK0      1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_send_command                                     4     1      3    8780
                                             25 BANK0      4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_enable_pulse                                     0     0      0    1264
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1264
                                             23 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Joystick_Polling                                     2     2      0      68
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _F2_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _F1_Button_Polling                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CAN_Tx                                               0     0      0    4107
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4083
                                             17 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_Rx                                               4     4      0       0
                                             17 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_bassa                                           17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR_alta                                           17    17      0    4995
                                              0 BANK0     17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
                     i2_CANisTxReady
                   i2_CANsendMessage
 ---------------------------------------------------------------------------------
 (11) i2_CANsendMessage                                   16     8      8    3197
                                             17 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (11) i2_CANisTxReady                                      1     1      0      37
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _CANreceiveMessage                                  12    10      2    1594
                                             17 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (11) _CANisRxReady                                        1     1      0      37
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_Rx
   _CAN_Tx
     _CANisTxReady
     _CANsendMessage
   _CANisTxReady
   _CANsendMessage
   _F1_Button_Polling
   _F2_Button_Polling
   _Joystick_Polling
   _LCD_Handler
     _CANisTxReady
     _CANsendMessage
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_xy
       _LCD_goto_line
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_shift_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
   _LCD_Park
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_initialize
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_cursor
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
     _delay_ms
       ___wmul
     _delay_set_quartz
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   _PWR_Button_Polling
   ___fladd
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
   ___xxtofl
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)

 _ISR_alta (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i2_CANisTxReady
   i2_CANsendMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     21      51       7       31.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6D      8E       5       88.8%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     21      4D       1       81.9%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12C      20        0.0%
DATA                 0      0     12C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun May 01 15:21:51 2016

                     ___fldiv@aexp 0097                       ___fldiv@bexp 0096  
                                _w 026B                                  _x 00E8  
                                _y 026F                                  _z 00E9  
        __size_of_delay_set_quartz 000A               __end_of_CANSetFilter 0B06  
                     ?_LCD_Handler 002B                       ___fldiv@sign 008B  
                     ___awdiv@sign 007C                                 _id 0005  
                               bsr 000FE0                ___wmul@multiplicand 0073  
                      __CFG_BORV$3 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                       __CFG_CP2$OFF 000000  
                     __CFG_CP3$OFF 000000                        __CFG_OSC$HS 000000  
                     __CFG_CP4$OFF 000000                       __CFG_CP5$OFF 000000  
                              l410 1944                                l402 17EE  
                              l411 194E                                l403 17F2  
                              l412 1958                                l404 17FE  
                              l500 072A                                l413 1962  
                              l501 0736                                l510 0842  
                              l502 073A                                l407 18B8  
                              l511 0846                                l503 0746  
                              l416 1A72                                l408 18BC  
                              l512 0852                                l504 074A  
                              l417 1A76                                l409 19B4  
                              l521 095E                                l513 0856  
                              l505 0756                                l418 1A82  
                              l522 0962                                l514 0862  
                              l506 075A                                l450 423E  
                              l523 096E                                l515 0866  
                              l507 0766                                l451 4242  
                              l380 14AC                                l540 0ABA  
                              l532 0A7A                                l524 0972  
                              l516 0872                                l460 434A  
                              l452 424E                                l372 4B20  
                              l381 143C                                l533 0A7E  
                              l525 097E                                l517 0876  
                              l461 4356                                l453 4252  
                              l373 4B2A                                l382 1446  
                              l534 0A8A                                l526 0982  
                              l518 0882                                l462 435A  
                              l454 425E                                l446 421E  
                              l383 1450                                l535 0A8E  
                              l527 098E                                l463 4366  
                              l447 4222                                l392 18A2  
                              l384 145A                                l536 0A9A  
                              l528 0992                                l480 0504  
                              l464 436A                                l448 422E  
                              l393 1634                                l377 161E  
                              l537 0A9E                                l529 099E  
                              l481 0510                                l465 4376  
                              l457 4336                                l449 4232  
                              l570 6262                                l394 1638  
                              l378 13B0                                l538 0AAA  
                              l490 061A                                l482 0514  
                              l458 433A                                l395 1730  
                              l387 156A                                l379 13B4  
                              l539 0AAE                                l491 061E  
                              l483 0520                                l459 4346  
                              l396 16C0                                l388 156E  
                              l492 062A                                l484 0524  
                              l812 1E22                                l397 16CA  
                              l389 157A                                l493 062E  
                              l485 0530                                l477 04F0  
                              l821 2010                                l398 16D4  
                              l494 063A                                l478 04F4  
                              l814 1E4C                                l399 16DE  
                              l583 60E0                                l495 063E  
                              l479 0500                                l496 064A  
                              l488 060A                                l489 060E  
                              l499 0726                                l828 2018  
                              l870 62B0                                l791 1C98  
                              l891 5F18                                l884 62E8  
                              l796 1CA4                                l877 6304  
                              l889 5F16               ??_PWR_Button_Polling 0071  
                              l998 10FA                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                        ?_LCD_cursor 007D  
                              _dir 00E5                                _msg 010D  
                              _str 011C                       ___awmod@sign 0076  
                              prod 000FF3                                wreg 000FE8  
                     ___flmul@aexp 008C                       ___flmul@bexp 0091  
                     ___flmul@sign 008B                       ___flmul@temp 0096  
                     ___flmul@prod 0092                       __CFG_LVP$OFF 000000  
           __size_of_LCD_goto_line 00EC                       ___fltol@exp1 00C2  
                     __CFG_WDT$OFF 000000                               l1223 543C  
                             l1320 5060                               l1233 5276  
                             l1321 50A4                               l1510 34F6  
                             l1511 34EA                               l1327 5124  
                             l1512 34B6                               l1416 59DA  
                             l1426 5D22                               l1603 3B0E  
                             l1613 3C20                               l1605 3B7C  
                             l1390 5902                               l1527 366A  
                             l1536 36FE                               l1632 49E8  
                             l1633 4A00                               l1625 498C  
                             l1618 48E0                               l1469 5E38  
                             l1566 3E92                               l1479 5EFC  
                             l1575 3ECA                               l1577 3F38  
                             l1569 3E3A                               l5212 587A  
                             l1596 3872                               l5222 58BC  
                             l5302 4262                               l6130 1464  
                             l7002 59EC                               l5242 6320  
                             l7012 5A34                               l5412 02EA  
                             l5308 42A8                               l5260 40DC  
                             l6302 1A66                               l6206 16E8  
                             l6150 155E                               l7022 5F0C  
                             l5510 064E                               l5430 03A4  
                             l5334 437A                               l7040 5AD0  
                             l6232 1802                               l7016 5A6C  
                             l7050 5ADE                               l6226 17E2  
                             l6090 4B36                               l6308 1A86  
                             l6156 157E                               l5612 09A2  
                             l5516 0694                               l5276 4192  
                             l6092 4B7A                               l6084 4B18  
                             l7062 5B40                               l4750 5DF4  
                             l8110 5854                               l5550 07B0  
                             l5358 00BE                               l6086 4B2E  
                             l4760 5E2A                               l4752 5DFA  
                             l8032 3B22                               l5544 076A  
                             l5448 045E                               l5376 0176  
                             l6282 196C                               l4770 5EC4  
                             l8114 5868                               l8106 5846  
                             l8130 5C24                               l8042 3B76  
                             l8026 3AF8                               l5618 09E8  
                             l5482 057A                               l5394 0230  
                             l4748 5DE8                               l4772 5ECA  
                             l8300 50DA                               l8052 3BCC  
                             l8204 4660                               l5476 0534  
                             l6710 3E8E                               l8310 510A  
                             l8150 5C90                               l8142 5C6E  
                             l8134 5C38                               l8126 5C14  
                             l5646 0ABE                               l8160 5F98  
                             l4776 5EEE                               l4768 5EB8  
                             l6704 3E46                               l8320 52EC  
                             l8312 511A                               l8304 50EE  
                             l8136 5C44                               l8056 3BF2  
                             l8224 2B52                               l5584 08CC  
                             l8170 5764                               l5690 6018  
                             l6722 3EDE                               l6642 3CA6  
                             l8082 57D0                               l8138 5C4A  
                             l8146 5C7C                               l8066 3C40  
                             l8058 3C06                               l8242 2DD8  
                             l8218 2A80                               l9042 4DEA  
                             l5578 0886                               l8164 56CE  
                             l8172 5796                               l8156 5F66  
                             l8180 6234                               l6732 3F32  
                             l6716 3EB4                               l6636 3C82  
                             l8340 5366                               l8068 3C4A  
                             l8236 2D06                               l8228 2B84  
                             l8166 5700                               l6750 3FEC  
                             l6742 3F88                               l6662 3D04  
                             l6646 3CB0                               l8406 6114  
                             l8510 496E                               l8326 5312  
                             l8270 500C                               l8094 5804  
                             l8254 6214                               l9070 4F06  
                             l8168 5732                               l8176 6220  
                             l6656 3CE0                               l8432 5650  
                             l8416 55E2                               l8504 4918  
                             l8360 53F2                               l8264 4FD2  
                             l8096 5810                               l8088 57E6  
                             l9080 4F46                               l6746 3FB6  
                             l6666 3D0E                               l8450 56B6  
                             l8442 5680                               l8530 4A52  
                             l8506 4920                               l8370 5422  
                             l8098 5816                               l9082 4F56  
                             l7708 60D2                               l6756 3FFC  
                             l6748 3FCA                               l7900 36D2  
                             l7820 3436                               l8444 5690  
                             l8436 5664                               l8460 595E  
                             l8516 49CA                               l8508 4930  
                             l8372 5432                               l8364 5406  
                             l8348 53BA                               l8196 4568  
                             l8700 0E18                               l8620 0B16  
                             l8542 6178                               l6758 4000  
                             l6686 3D90                               l6678 3D62  
                             l7910 36F8                               l7902 36D8  
                             l8446 569A                               l8462 596E  
                             l8518 49DA                               l8710 0E9C  
                             l9078 4F34                               l9502 1C7E  
                             l8552 4C80                               l6696 3E0E  
                             l8392 5224                               l8384 5184  
                             l7920 3754                               l7832 34CA  
                             l8472 59C8                               l8464 5974  
                             l8480 5CB6                               l8720 0F06  
                             l8640 0BCA                               l9600 1FE0  
                             l9512 1CB2                               l8554 4C88  
                             l8570 4D60                               l8538 615E  
                             l7834 34D0                               l7754 3358  
                             l8482 5CC6                               l8706 0E6A  
                             l8650 0C0A                               l8634 0B66  
                             l8626 0B30                               l9602 1FE6  
                             l9514 1CBE                               l9506 1C90  
                             l8564 4D20                               l8388 51D2  
                             l7940 37AC                               l7932 3794  
                             l7924 3766                               l7772 33A2  
                             l7748 3334                               l8484 5CCC  
                             l8812 1338                               l8804 12E0  
                             l8724 0F7E                               l8644 0BDA  
                             l8820 138C                               l9620 2132  
                             l8574 4DD8                               l8398 52C2  
                             l7934 3798                               l7862 3568  
                             l7838 34DA                               l7790 33FA  
                             l7782 33D0                               l7766 338E  
                             l7758 3362                               l7950 37DC  
                             l8742 0FFC                               l8726 0F84  
                             l8638 0BB0                               l9630 214A  
                             l9606 2008                               l9542 1D3A  
                             l9550 1D7E                               l9526 1CE6  
                             l9534 1D28                               l9462 1B4E  
                             l7928 3788                               l7856 3558  
                             l7848 351A                               l8488 5D10  
                             l7960 3818                               l8816 1364  
                             l8808 1308                               l8760 10C8  
                             l8744 1004                               l8752 10A0  
                             l8656 0C24                               l8648 0BE0  
                             l9624 2140                               l9616 20AC  
                             l9552 1D84                               l7890 36B2  
                             l7858 355E                               l7866 357A  
                             l7778 33C6                               l8498 48F0  
                             l8762 10DC                               l8754 10AE  
                             l8738 0FD0                               l8690 0D7E  
                             l8682 0CFA                               l8666 0C76  
                             l8818 136A                               l9562 1E50  
                             l7884 369C                               l7876 364A  
                             l7980 3886                               l7956 3800  
                             l7894 36BE                               l7974 385A  
                             l7958 3806                               l8790 1292  
                             l8774 112E                               l8766 10FE  
                             l8694 0DB0                               l9646 2256  
                             l9638 21CA                               l9574 1E7C  
                             l9582 1EBC                               l7984 389A  
                             l7976 3860                               l7968 3836  
                             l8696 0DC6                               l9648 225A  
                             l9584 1EBE                               l9496 1BE8  
                             l8778 1190                               l8698 0E02  
                             l9586 1EC0                               l8796 12AC  
                             l8788 1284                               l9596 1F7A  
                             l8798 12BA                               STR_1 FF44  
                             STR_2 FF1A                               STR_3 FF05  
                             STR_4 FF44                               STR_5 FFF9  
                             STR_6 FF2F                               STR_7 FFB7  
                             STR_8 FF98                               STR_9 FFA9  
                             _LATA 000F89                               _LATB 000F8A  
                             _LATC 000F8B                               _LATD 000F8C  
                             _LATE 000F8D                               u6005 416E  
                             u6205 009A                               u6310 0266  
                             u6230 00F2                               u6160 439A  
                             u6080 4282                               u6315 025A  
                             u6235 00E6                               u6405 043A  
                             u6325 02C6                               u6245 0152  
                             u6165 438E                               u6085 4276  
                             u6350 0320                               u6270 01AC  
                             u6190 003A                               u9010 5F3A  
                             u6355 0314                               u6275 01A0  
                             u6195 002E                  _F2_Button_Polling 62E0  
                             u6365 0380                               u6285 020C  
                             u6390 03DA                               u9016 5F3C  
                             u6800 09C2                               u6720 08A6  
                             u6640 078A                               u6560 066E  
                             u6480 0554                               u6395 03CE  
                             u7605 1530                               u6805 09B6  
                             u6725 089A                               u6645 077E  
                             u6565 0662                               u6485 0548  
                             u7710 1708                               u5950 4058  
                             u7720 1754                               u8520 3F9C  
                             u7715 16FC                               u5955 404C  
                             u7580 1484                               u7725 1748  
                             u5965 40B8                               u7590 14D0  
                             u5990 410E                               u7735 17B4  
                             u7840 198C                               u6880 0ADE  
                             u7585 1478                               u7850 19D8  
                             u7595 14C4                               u5995 4102  
                             u7845 1980                               u6885 0AD2  
                             u7855 19CC                               u8840 62BE  
                             u7865 1A38                               u8905 6314  
                             u8940 62F6                               u8855 62C0  
                             u8890 6312                               u8955 62F8  
              __size_of_CANSetMask 039E                       ?_LCD_goto_xy 0080  
                             _data 002A                               _main 1B26  
                             _itoa 5FEE                 ?_F2_Button_Polling 002B  
        __size_of_LCD_send_command 003A                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               indf1 000FE7  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               btemp 004E  
                             _utoa 5872                               pclat 000FFA  
                             prodh 000FF4                               prodl 000FF3  
                             start 00C0                      __CFG_IESO$OFF 000000  
                  ___fldiv@new_exp 0090                 __size_of_LCD_clear 0032  
                     _sprintf$4229 0130                      __CFG_MCLRE$ON 000000  
                     ___param_bank 000010                ??_F2_Button_Polling 0071  
         __end_of_LCD_enable_pulse 628A                   _CANOperationMode 6318  
                 __end_of_LCD_Park 5EA4                    _space_available 0269  
          __size_of_LCD_initialize 016E         __size_of_CANreceiveMessage 050C  
                    ___fltol@sign1 00C1                    __end_of___fladd 37BE  
                            ?_main 002B                    __end_of___fldiv 4024  
                            ?_itoa 0081                    __end_of___awdiv 5872  
                  __end_of___flneg 6126                              STR_10 FFE3  
                            STR_11 FFEF                              STR_12 FFF4  
                            STR_20 FF6E                              STR_21 FF83  
                            STR_13 FFEA                              STR_14 FFC3  
                            STR_15 FFD3                              STR_16 FFCB  
                            STR_17 FFDB                              STR_18 FF83  
                            STR_19 FF59                    __end_of___awmod 5C9A  
                  __end_of___flmul 3C64                    __end_of___flsub 5FEE  
                  __end_of___fltol 56C8                    __end_of___lldiv 59EC  
                            ?_utoa 0078                              u11001 4FAE  
                            u10300 349A                              u11021 4FE8  
                            u10155 6088                              u10156 608A  
                            u10165 6094                              u10166 6096  
                            u11230 5602                              u10175 60A0  
                            u10176 60A2                              u10280 3480  
                            u13000 1E30                              u10185 60AC  
                            u10186 60AE                              u10290 3498  
                            u11235 55F6                    ___awdiv@divisor 0079  
                            u13110 21AE                              u13006 1E32  
                  __end_of___llmod 5D34                              u10740 3BE0  
                            u10660 3A9A                              u13140 2242  
                            u11461 4C34                              u13070 2004  
                            u10665 3A8E                              u13157 60D4  
                            u11750 10F2                              _T3CON 000FB1  
                            u12830 1C4C                              u12840 1C64  
                            u12846 1C66                              u12960 1DE8  
                            u12980 1E04                              u12986 1E06  
                  __end_of___lwdiv 5E42                    __end_of___lwmod 5F06  
                            i2l410 2746                              i2l402 261C  
                            i2l411 274E                              i2l403 2620  
                            i2l412 2756                              i2l404 262A  
                            i2l413 275E                              i2l407 26D4  
                            i2l424 30A2                              i2l416 284C  
                            i2l408 26D8                              i2l417 2850  
                            i2l409 27A8                              i2l418 285A  
                            i2l380 2348                              i2l381 22E6  
                            i2l382 22EE                              i2l383 22F6  
                            i2l392 26C0                              i2l384 22FE  
                            i2l393 24A4                              i2l377 2490  
                            i2l570 62A4                              i2l394 24A8  
                            i2l378 2274                              i2l395 2578  
                            i2l387 23EC                              i2l379 2278  
                            i1l787 0078                              i2l396 2516  
                            i2l388 23F0                              i2l397 251E  
                            i2l389 23FA                              i2l398 2526  
                            i2l575 6340                              i2l399 252E  
                            i2l773 47B6                              i2l783 485A  
                  ___awdiv@counter 007B                              _TMR3H 000FB3  
                            _TMR3L 000FB2                  _CANisRxReady$3241 003C  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96                      __CFG_PWRT$OFF 000000  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                    __CFG_WRT4$OFF 000000                 __size_of_ISR_bassa 00A8  
                    __CFG_WRT5$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
               CANInitialize@flags 0083                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                     __CFG_EBTR4$OFF 000000  
                 __end_of_ISR_alta 4896                     __CFG_EBTR5$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                              _check 00D5  
                   __CFG_EBTRB$OFF 000000          __end_of_F2_Button_Polling 62FC  
                  __end_of_dpowers FF05                              _scale 28F0  
                  __end_of_isdigit 621E          __size_of_LCD_shift_cursor 004C  
                   __pbitbssCOMRAM 0260               __end_of_CANisRxReady 6344  
                            tablat 000FF5               __end_of_CANisTxReady 6268  
                            plusw1 000FE3                              plusw2 000FDB  
                            utoa@c 0080                              utoa@v 007E  
                            status 000FD8                    __end_of_sprintf 139A  
              __size_of_LCD_cursor 0032                    __initialization 6036  
                     __end_of_main 2260                       __end_of_itoa 6036  
    __size_of_board_initialization 00A4                      _LCD_goto_line 56C8  
                     __end_of_utoa 5930                  ?_Joystick_Polling 002B  
               ??_Joystick_Polling 0071                  ?_LCD_write_string 0082  
                           ??_main 0149                             ??_itoa 0087  
                           ??_utoa 007E          __size_ofi2_CANsendMessage 0690  
                    __activetblptr 000003                     _JoystickValues 00DD  
               ??_LCD_write_string 0084               __size_of__tdiv_to_l_ 019E  
                _CANisTxReady$3239 0071                  __end_of_LCD_clear 61F4  
            i2CANsendMessage@flags 0043             LCD_write_string@buffer 0082  
                           _ADCON1 000FC1                             _CANCON 000F6F  
                 ___llmod@dividend 0071                             ?_scale 0098  
                           _ADRESH 000FC4                   ___awdiv@dividend 0077  
                           _CAN_Rx 5AA6                             _CAN_Tx 59EC  
                  __CFG_BBSIZ$1024 000000                             i2l9232 2536  
                           i2l9402 4738                             i2l9308 2766  
                           i2l9252 2612                             i2l9156 2306  
                           i2l9412 4770                             i2l9334 285E  
                           i2l9182 23FE                             i2l9406 4742  
                           i2l9328 2842                             i2l9176 23E2  
                           i2l9258 262E                             i2l9434 47F8  
                           i2l9418 478A                             i2l9444 4824  
                           i2l9428 47D4                             i2l9448 4852  
                           i2l8930 3202                             i2l9394 4712  
                           i2l9388 46F0                             i2l8950 32C4  
                           i2l8942 328C                             i2l8880 3010  
                           i2l8954 32E0                             i2l8946 32A8  
                           i2l8938 3270                             i2l8956 3312  
                           i2l8892 306A                             i2l8884 302E  
                           i2l8876 2FF2                             i2l8868 2F82  
                           i2l8894 309C                             i2l8888 304C  
                           _RXB0D0 000F66                             _RXB0D1 000F67  
                           _RXB0D2 000F68                             _RXB0D3 000F69  
                           _RXB0D4 000F6A                             _RXB1D0 000F56  
                           _RXB0D5 000F6B                             _RXB1D1 000F57  
                           _RXB0D6 000F6C                             _RXB1D2 000F58  
                           _RXB0D7 000F6D                             _RXB1D3 000F59  
                           _RXB1D4 000F5A                             _RXB1D5 000F5B  
                           _RXB1D6 000F5C                             _RXB1D7 000F5D  
                           _TXB0D0 000F46                             _TXB0D1 000F47  
                           _TXB0D2 000F48                             _TXB0D3 000F49  
                           _TXB1D0 000F36                             _TXB0D4 000F4A  
                           _TXB1D1 000F37                             _TXB0D5 000F4B  
                           _TXB1D2 000F38                             _TXB0D6 000F4C  
                           _TXB1D3 000F39                             _TXB0D7 000F4D  
                           _TXB2D0 000F26                             _TXB1D4 000F3A  
                           _TXB2D1 000F27                             _TXB1D5 000F3B  
                           _TXB2D2 000F28                             _TXB1D6 000F3C  
                           _TXB2D3 000F29                             _TXB1D7 000F3D  
                           _TXB2D4 000F2A                             _TXB2D5 000F2B  
                           _TXB2D6 000F2C                             _TXB2D7 000F2D  
               CANsendMessage@data 0075                 CANsendMessage@tamp 007D  
                 __end_of___xxtofl 4A64                    _switch_position 00E7  
                 __end_of_delay_ms 60EE              __size_of_CANSetFilter 0B06  
                   __CFG_XINST$OFF 000000                  __end_of_ISR_bassa 00C0  
                 __end_of__powers_ FEDD                         _MotoreFlag 0263  
                   ?_LCD_goto_line 002B                             ___flge 5136  
                        ??___fladd 00AD                   _delay_set_quartz 6344  
                           ___wmul 6126                          ??___fldiv 0087  
                        ??___awdiv 007B                          ??___flneg 009C  
                   __CFG_STVREN$ON 000000                          ??___awmod 0075  
                        ??___flmul 0087                          ??___flsub 00C1  
                        ??___fltol 00BD                          ??___lldiv 0079  
                        ??___llmod 0079                          ??___lwdiv 0075  
                     ??_CANSetMask 0076                          ??___lwmod 0075  
          __size_of_LCD_write_char 0096                             _fround 43C2  
   LCD_initialize@quartz_frequency 007F                             clear_0 603C  
                           clear_1 6048                             clear_2 6058  
                 ___awdiv@quotient 007D                    ___awmod@divisor 0073  
             __size_of_LCD_Handler 01AE                    ___awmod@counter 0075  
                  __CFG_BOREN$BOHW 000000                  _JoystickConstants 00CD  
                           itoa@cp 0087                          ??_isdigit 0071  
                     __mediumconst FE74                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
       __size_of_F2_Button_Polling 001C                          ??_sprintf 00CB  
                     _CANSetFilter 0000                         ___flge@ff1 0071  
                       ___flge@ff2 0075                       ___xxtofl@arg 007B  
                     ___xxtofl@exp 007A                       ___xxtofl@val 0071  
                       __accesstop 0060            __end_of__initialization 6070  
               __end_of_CANSetMask 43C2                          ?_LCD_Park 002B  
                  __CFG_PBADEN$OFF 000000                         _SterzoFlag 0265  
                       ___flneg@f1 0098                   _LCD_send_command 607A  
                    ___rparam_used 000001  LCD_write_integer@number_of_digits 008B  
                       ___fltol@f1 00B9               __size_of_LCD_goto_xy 001C  
                   __pcstackCOMRAM 002B                       __pidataBANK0 634E  
                        ?_ISR_alta 002B                       LCD_goto_xy@x 0081  
                     LCD_goto_xy@y 0080                      __end_of_scale 2E0A  
                   _LCD_initialize 544E                  _LCD_write_integer 4C2A  
                _LCD_write_message 615C              CANSetFilter@numBuffer 007A  
               ?_LCD_write_integer 0089             LCD_write_integer@index 0098  
               ?_LCD_write_message 0082                         __div_to_l_ 52C6  
                     ??_LCD_cursor 007E             LCD_write_integer@value 0089  
    LCD_write_integer@convertedInt 0092                      _newMessageCan 0267  
                     _actual_speed 00DF              __size_of_CANisRxReady 0016  
            __size_of_CANisTxReady 0024                ??_LCD_write_integer 008D  
                  __div_to_l_@exp1 007E                ??_LCD_write_message 0084  
                  __div_to_l_@cntr 007D                            ??_scale 009C  
                 _LCD_shift_cursor 5F5A                    __div_to_l_@quot 0079  
         __end_of_CANOperationMode 632E                            ?_CAN_Rx 002B  
                          ?_CAN_Tx 002B                         __pbssBANK0 00CD  
                       __pbssBANK1 0100                         _data_brake 00EA  
                       ??_LCD_Park 0084            __size_of_CANsendMessage 078C  
                       _data_speed 00EB                      __div_to_l_@f1 0071  
                    __div_to_l_@f2 0075                    ??_LCD_goto_line 007D  
               __end_of_LCD_cursor 61C2             __end_of_LCD_initialize 55BC  
                          ?___flge 0071                            ?___wmul 0071  
                       ??_ISR_alta 0060          __end_of_LCD_write_integer 4DEA  
        __end_of_LCD_write_message 6190                  ?_LCD_enable_pulse 002B  
                          ?_fround 0098                       _CANisRxReady 632E  
                          _CANSTAT 000F6E                 ??_LCD_enable_pulse 0079  
                     _CANisTxReady 6244                          ISR_alta@i 0070  
                          _BRGCON1 000F70                            _BRGCON2 000F71  
                          _BRGCON3 000F72                   i2_CANsendMessage 2260  
      __size_of_PWR_Button_Polling 001C                          ?___xxtofl 0071  
          __size_ofi2_CANisTxReady 001E             __size_of_CANInitialize 01C6  
                 LCD_cursor@active 007E                          ?_delay_ms 0077  
                          _RXB0DLC 000F65                            _RXB1DLC 000F55  
                          _RXB0CON 000F60                            _RXB1CON 000F50  
                          _TXB0DLC 000F45                            _TXB1DLC 000F35  
                          _TXB2DLC 000F25                CANsendMessage@flags 0078  
                          _AbsFlag 0260                    __size_of_CAN_Rx 00AE  
                  __size_of_CAN_Tx 00BA                  __end_of__npowers_ FEA9  
                          __Hparam 0000                         _left_speed 0021  
                       _scale$4228 009C                            __Lparam 0000  
                 delay_ms@value_ms 0077                    ?_LCD_initialize 002B  
                  __size_of___flge 0190                            ___fladd 3316  
                          ___fldiv 3C64                            ___awdiv 57B4  
                          ___flneg 60EE                            ___awmod 5BF8  
                          ___flmul 37BE                            ___flsub 5FA6  
                          ___fltol 55BC                            ___lldiv 5930  
                  __size_of___wmul 0036                     _LCD_write_char 5D34  
                          ___llmod 5C9A                            ___lwdiv 5DCA  
                          ___lwmod 5EA4               CANInitialize@propSeg 0088  
                          __pcinit 6036                            _battery 0027  
                  __size_of_fround 02F6                            __ramtop 0D00  
              LCD_write_char@value 0081                            __ptext0 1B26  
                          __ptext1 5B54                            __ptext2 4A64  
                          __ptext3 4024                            __ptext4 0000  
                          __ptext5 6318                            __ptext6 62A8  
                          __ptext7 5E42                            __ptext8 4DEA  
                          __ptext9 0B06                        ?__div_to_l_ 0071  
                 LCD_write_char@D0 0080                   LCD_write_char@D1 007F  
                 LCD_write_char@D2 007E                   LCD_write_char@D3 007D  
                        _F1_switch 0261                            _dpowers FEDD  
                        _F2_switch 0262                            _isdigit 61F4  
                       ??___xxtofl 0075                   ___awmod@dividend 0071  
                       ??_delay_ms 0079             CANreceiveMessage@error 0046  
     __end_of_board_initialization 5BF8          __size_of_Joystick_Polling 0054  
         __end_of_delay_set_quartz 634E                            _sprintf 0B06  
                   __pintcode_body 46B8                          _LCD_clear 61C2  
             end_of_initialization 6070          __size_of_LCD_write_string 0026  
                          itoa@buf 0081                            itoa@val 0083  
                          int_func 46B8                          i2u1200_40 3174  
                        i2u1200_46 3176                          i2u1202_45 3188  
                        i2u1240_40 2554                          i2u1208_45 32EC  
                        i2u1240_45 254A                          i2u1241_40 259A  
                        i2u1241_45 2590                          i2u1242_45 25E6  
                        i2u1227_40 2324                          i2u1227_45 231A  
                        i2u1228_40 236A                          i2u1228_45 2360  
                        i2u1316_47 481E                          i2u1253_40 2784  
                        i2u1253_45 277A                          i2u1229_45 23B6  
                        i2u1254_40 27CA                          i2u1254_45 27C0  
                        i2u1191_45 2F06                          i2u1255_45 2816  
                        i2u1266_40 4710                          i2u1188_40 2EC2  
                        i2u1276_40 47CE                          i2u1188_46 2EC4  
                        i2u1189_40 2EF0                          i2u1197_45 3076  
                        i2u1277_45 47D0                          i2u1189_46 2EF2  
                        i2u1199_40 314A                          i2u1199_46 314C  
                    _CANInitialize 4A64                    ___lldiv@divisor 0075  
               LCD_cursor@blinking 007D                      _parking_state 0028  
                  ___lldiv@counter 007D             __end_of_LCD_write_char 5DCA  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE         __size_of_LCD_write_integer 01C0  
       __size_of_LCD_write_message 0034                            utoa@buf 0078  
                   __tdiv_to_l_@f1 0071                     __tdiv_to_l_@f2 0075  
                          utoa@val 007A                         _wait_low_1 026C  
                       _wait_low_2 026D                         _wait_low_3 026E  
                        _ISR_bassa 0018                      ??__tdiv_to_l_ 0079  
          _steering_correction_dir 026A                          _PORTAbits 000F80  
                        _PORTBbits 000F81                     CANSetMask@mask 0071  
                        _PORTDbits 000F83                     CANSetMask@tamp 007B  
         __end_of_LCD_send_command 60B4                     CANSetMask@type 0075  
                      ___fladd@grs 00B8                      ___xxtofl@sign 0079  
                      ___fldiv@grs 0092                        ___fldiv@rem 008C  
                _F1_Button_Polling 62FC                         ?_LCD_clear 002B  
               ?_F1_Button_Polling 002B                     __end_of_CAN_Rx 5B54  
                   __end_of_CAN_Tx 5AA6            _clock_counter_reference 00E1  
                      ___flmul@grs 008D                     _CANsendMessage 139A  
                 CANInitialize@BRP 0082                   CANInitialize@SJW 0081  
                   ?_CANInitialize 007F                ??_F1_Button_Polling 0071  
                __size_of_LCD_Park 0062                __size_of__div_to_l_ 0188  
          LCD_write_integer@F17272 0107                    ?_LCD_write_char 002B  
                    ??_LCD_Handler 00CD           __end_of_LCD_shift_cursor 5FA6  
                   __end_of___flge 52C6                         ?_ISR_bassa 002B  
                   __end_of___wmul 615C                  __size_of_ISR_alta 488E  
                LCD_shift_cursor@i 007F                     __end_of_fround 46B8  
                   i2_CANisTxReady 628A          __end_of_F1_Button_Polling 6318  
              start_initialization 6036                __end_of__tdiv_to_l_ 5136  
              CANSetMask@numBuffer 007A                      _data_speed_rx 0100  
           __end_of_CANsendMessage 1B26                           ??_CAN_Rx 0071  
                         ??_CAN_Tx 0081                  ?_CANOperationMode 002B  
                    _data_steering 00EC                      ??_LCD_goto_xy 0081  
       i2CANsendMessage@dataLength 0042               i2CANsendMessage@data 0040  
               ??_CANOperationMode 0071               i2CANsendMessage@tamp 0048  
                  ___llmod@divisor 0075           __end_ofi2_CANsendMessage 28F0  
       CANInitialize@FilterConfig1 0089         CANInitialize@FilterConfig2 008A  
                  ___llmod@counter 0079                _steering_correction 00E6  
                         ??___flge 0079               _board_initialization 5B54  
                         ??___wmul 0075                        __pdataBANK0 00ED  
                 __CFG_LPT1OSC$OFF 000000                           ??_fround 009C  
           __end_ofi2_CANisTxReady 62A8                      sprintf@tmpval 013E  
                        ___fladd@a 00A9                          ___fladd@b 00A5  
           CANInitialize@phaseSeg1 007F             CANInitialize@phaseSeg2 0080  
                       fround@prec 00A4                __end_of_LCD_Handler 4F98  
                        ___fldiv@a 0083                          ___fldiv@b 007F  
                        ___flmul@a 0083                          ___flmul@b 007F  
                      __pbssCOMRAM 0001                          ___flsub@a 00BD  
                        ___flsub@b 00B9                      __pcstackBANK0 0060  
                    __pcstackBANK1 0130                        _BRGCON2bits 000F71  
                      _BRGCON3bits 000F72                   _Joystick_Polling 5F06  
                __size_of___xxtofl 01CE          __size_of_LCD_enable_pulse 0022  
                     _isdigit$3812 0072         i2CANsendMessage@identifier 003C  
                _park_assist_state 0128                  __size_of_delay_ms 003A  
                      ??_LCD_clear 007D                    ?_CANsendMessage 0071  
          LCD_write_message@buffer 0082                   _LCD_write_string 621E  
                  ??_CANInitialize 0084                        sprintf@flag 0136  
                      sprintf@fval 0144                        sprintf@prec 0142  
                 ??_LCD_initialize 007F                 CANSetFilter@filter 0071  
        delay_set_quartz@frequency 0071                   ___lwdiv@dividend 0071  
               LCD_send_command@D0 007B                 LCD_send_command@D1 007A  
               LCD_send_command@D2 0079                 LCD_send_command@D3 007C  
              __end_of_LCD_goto_xy 62E0              __end_of_LCD_goto_line 57B4  
            ?_board_initialization 002B                          __pintcode 0008  
                    __pmediumconst FE74                           ?___fladd 00A5  
                         ?___fldiv 007F                           ?___awdiv 0077  
                         ?___flneg 0098                           ?___awmod 0071  
                         ?___flmul 007F                           ?___flsub 00B9  
                         ?___fltol 00B9                           ?___lldiv 0071  
                         ?___llmod 0071                          __npowers_ FE75  
                         ?___lwdiv 0071                           ?___lwmod 0071  
                      ??_ISR_bassa 002B                        __pintcodelo 0018  
       __end_of_PWR_Button_Polling 62C4                    ?i2_CANisTxReady 002B  
                      __tdiv_to_l_ 4F98                       ??__div_to_l_ 0079  
                      _COMSTATbits 000F74                           ?_isdigit 002B  
       __size_of_F1_Button_Polling 001C                   ___lwdiv@quotient 0075  
                         ?_sprintf 00C3                     __size_of_scale 051A  
                ?_delay_set_quartz 002B              CANreceiveMessage@tamp 0047  
               ??_delay_set_quartz 0071                           _LCD_Park 5E42  
                   ___wmul@product 0075                           _LATCbits 000F8B  
                         _LATDbits 000F8C                           _LATEbits 000F8D  
                         _IPR2bits 000FA2       _delay_quartz_frequency_value 00ED  
                         _IPR3bits 000FA5                           _PIE2bits 000FA0  
                         _PIE3bits 000FA3                 __end_of__div_to_l_ 544E  
                         _PIR2bits 000FA1                           _PIR3bits 000FA4  
                         _RXB0EIDH 000F63                           _RXB0EIDL 000F64  
                         _RXB1EIDH 000F53                          _pr_time_1 00D9  
                        _pr_time_2 0009                           _RXB1EIDL 000F54  
                        _pr_time_3 000D                          _pr_time_4 0011  
                        _pr_time_5 0015                          _pr_time_6 0019  
                        _set_speed 00E3                           _RCONbits 000FD0  
                 __CFG_WDTPS$32768 000000                           _RXB0SIDH 000F61  
                         _RXB0SIDL 000F62                           _RXF0EIDH 000F02  
                         _RXB1SIDH 000F51                           _RXF0EIDL 000F03  
                         _RXB1SIDL 000F52                           _RXF1EIDH 000F06  
                         _RXF1EIDL 000F07                           _RXF2EIDH 000F0A  
                         _RXF2EIDL 000F0B                           _RXF3EIDH 000F0E  
                         _RXF3EIDL 000F0F                           _RXF4EIDH 000F12  
                         _RXF4EIDL 000F13                           _RXF5EIDH 000F16  
                         _RXF5EIDL 000F17                           _RXF0SIDH 000F00  
                         _RXF0SIDL 000F01                           _TXB0EIDH 000F43  
                         _RXF1SIDH 000F04                           _TXB0EIDL 000F44  
                         _RXF1SIDL 000F05                           _TXB1EIDH 000F33  
                         _RXF2SIDH 000F08                           _TXB1EIDL 000F34  
                         _RXF2SIDL 000F09                           _ISR_alta 0008  
                         _TXB2EIDH 000F23                           _RXF3SIDH 000F0C  
                         _TXB2EIDL 000F24                           _RXF3SIDL 000F0D  
                         _RXF4SIDH 000F10                           _RXF4SIDL 000F11  
                         _RXF5SIDH 000F14                           _RXF5SIDL 000F15  
                         _RXM0EIDH 000F1A                           _RXM0EIDL 000F1B  
                         _TXB0SIDH 000F41                           _RXM1EIDH 000F1E  
                         _TXB0SIDL 000F42                           _RXM1EIDL 000F1F  
                         _TXB1SIDH 000F31                           _TXB1SIDL 000F32  
                         _TXB2SIDH 000F21                           _TXB2SIDL 000F22  
                      _LCD_Handler 4DEA                           _RXM0SIDH 000F18  
                         _RXM0SIDL 000F19                           _RXM1SIDH 000F1C  
                         _RXM1SIDL 000F1D                           _RXERRCNT 000F75  
   LCD_write_integer@zero_cleaning 008C                           _TXERRCNT 000F76  
                       _ADCON0bits 000FC2                         _ADCON2bits 000FC0  
                ___wmul@multiplier 0071                           _RTR_Flag 0264  
                ?_LCD_send_command 0079                   _actual_speed_kmh 0001  
                        _user_data 0025                 ??_LCD_send_command 007C  
                    ?_CANSetFilter 0071                         _CANCONbits 000F6F  
                      _LCD_goto_xy 62C4                   ??_LCD_write_char 007D  
                LCD_goto_line@line 007D                           __Hrparam 0000  
                     _RXB0SIDLbits 000F62             ??_board_initialization 008B  
                         __Lrparam 0000                       _RXB1SIDLbits 000F52  
                 __size_of___fladd 04A8                         _CANSetMask 4024  
                 __size_of___fldiv 03C0                   __size_of___awdiv 00BE  
                 __size_of___flneg 0038                   __size_of___awmod 00A2  
                 __size_of___flmul 04A6                  ?_LCD_shift_cursor 007D  
                 __size_of___flsub 0048                   __size_of___fltol 010C  
                 __size_of___lldiv 00BC                   __size_of___llmod 009A  
                 __size_of___lwdiv 0078                   __size_of___lwmod 0062  
                      _fround$4226 00A0                        _fround$4227 009C  
               ??_LCD_shift_cursor 007E                         sprintf@exp 013C  
                       sprintf@val 0138                           ___xxtofl 4896  
                     _RXF0SIDLbits 000F01                   __size_of_isdigit 002A  
                         _delay_ms 60B4                    ___lwdiv@divisor 0073  
                     _RXF1SIDLbits 000F05                    ___lwdiv@counter 0077  
                   ??_CANSetFilter 0076                   _LCD_enable_pulse 6268  
                         __ptext10 28F0                           __ptext11 61F4  
                         __ptext20 5930                           __ptext12 43C2  
                         __ptext21 55BC                           __ptext13 37BE  
                         __ptext30 5872                           __ptext22 5FA6  
                         __ptext14 5BF8                           __ptext31 5EA4  
                         __ptext23 3316                           __ptext15 57B4  
                         __ptext40 5F5A                           __ptext32 5DCA  
                         __ptext24 60EE                           __ptext16 4F98  
                         __ptext41 56C8                           __ptext33 621E  
                         __ptext25 5136                           __ptext17 52C6  
                         __ptext50 139A                           __ptext42 607A  
                         __ptext34 5D34                           __ptext26 3C64  
                         __ptext18 4896                           __ptext51 6244  
                         __ptext43 6268                           __ptext35 544E  
                         __ptext27 615C                           __ptext19 5C9A  
                         __ptext52 5AA6                           __ptext44 60B4  
                         __ptext36 6344                           __ptext28 4C2A  
                         __ptext45 6126                           __ptext37 6190  
                         __ptext29 5FEE                           __ptext46 5F06  
                         __ptext38 61C2                           __ptext55 2260  
                         __ptext47 62E0                           __ptext39 62C4  
                         __ptext56 628A                           __ptext48 62FC  
                         __ptext57 2E0A                           __ptext49 59EC  
                         __ptext58 632E                       _RXF2SIDLbits 000F09  
                         __powers_ FEA9                       _RXF3SIDLbits 000F0D  
                 __size_of_sprintf 0894                       _RXF4SIDLbits 000F11  
                     _RXF5SIDLbits 000F15           CANsendMessage@dataLength 0077  
                    __size_of_main 073A                      __size_of_itoa 0048  
                    __size_of_utoa 00BE                  ?i2_CANsendMessage 003C  
             CANreceiveMessage@msg 003C              LCD_shift_cursor@shift 007E  
              i2_CANisTxReady$3239 003C                       _TXB0SIDLbits 000F42  
                Joystick_Polling@i 0072                 ??i2_CANsendMessage 0044  
                     _TXB1SIDLbits 000F32           __end_of_Joystick_Polling 5F5A  
                     _TXB2SIDLbits 000F22                           int$flags 004E  
        __size_of_CANOperationMode 0016                      ?_CANisRxReady 002B  
                    ?_CANisTxReady 002B           __end_of_LCD_write_string 6244  
                      _RXB0DLCbits 000F65                        _RXB1DLCbits 000F55  
                     _RXM0SIDLbits 000F19                        _RXB0CONbits 000F60  
                       _LCD_cursor 6190                        _RXB1CONbits 000F50  
                _CANreceiveMessage 2E0A                       _RXM1SIDLbits 000F1D  
                       _INTCONbits 000FF2                       _set_steering 0029  
                 ??_CANsendMessage 0079                 ?_CANreceiveMessage 003C  
                         itoa@base 0085                           isdigit@c 0073  
                         scale@scl 00A0           CANsendMessage@identifier 0071  
                     _time_counter 001D                           intlevel1 0000  
                         intlevel2 0000                          sprintf@ap 0134  
                 __tdiv_to_l_@exp1 0081                          sprintf@sp 00C3  
                 __tdiv_to_l_@cntr 0080                   CANSetFilter@tamp 007B  
                 __tdiv_to_l_@quot 007C                   CANSetFilter@type 0075  
              ??_CANreceiveMessage 003E                   ___lwmod@dividend 0071  
                 ___lldiv@dividend 0071                        _TXB0DLCbits 000F45  
                      _right_speed 0023                        _TXB1DLCbits 000F35  
                      _TXB0CONbits 000F40                        _TXB2DLCbits 000F25  
                      _TXB1CONbits 000F30                        _TXB2CONbits 000F20  
                  _display_refresh 0266                   ??i2_CANisTxReady 003C  
             CANOperationMode@mode 0071                     ??_CANisRxReady 003C  
                      ?_CANSetMask 0071                     ??_CANisTxReady 0071  
                     ?__tdiv_to_l_ 0071          __end_of_CANreceiveMessage 3316  
                         utoa@base 007C                           sprintf@c 0148  
                         sprintf@f 00C5                   ___lldiv@quotient 0079  
                  ___lwmod@divisor 0073    LCD_shift_cursor@number_of_shift 007D  
                  ___lwmod@counter 0075                      ___fladd@signs 00B5  
               _PWR_Button_Polling 62A8                       ___fladd@aexp 00B6  
                     ___fladd@bexp 00B7              __end_of_CANInitialize 4C2A  
              ?_PWR_Button_Polling 002B                       _power_switch 0268  
